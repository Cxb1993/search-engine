1 
行政院國家科學委員會補助專題研究計畫成果報告 
  ※※※※※※※※※※※※※※※※※※※※※※※※※※※ 
  ※                嵌入式 DRAM 測試方法             ※ 
  ※※※※※※※※※※※※※※※※※※※※※※※※※※※ 
 
計畫類別：個別型計畫  □整合型計畫 
計畫編號：NSC98-2221-E-9-132 
執行期間： 98 年 8 月 1 日至 99 年 7 月 31 日 
 
計畫主持人：趙家佐 
共同主持人： 
計畫參與人員：張智為 楊皓宇 陳弘昕 涂偉勝 陳擴安 郭淳仁 曾遵銘  
林政偉 黃欽遠 張玟翔 徐浩文 王易民 穆思邦 秦敬雨 
 
 
 
 
 
 
 
 
 
 
 
 
 
執行單位：交通大學電子工程系 
 
 
 
 
 
 
中 華 民 國 99 年 10 月 20  日 
3 
一、中文摘要 
關鍵詞：嵌入式 DRAM；記憶體測試；資料維持測試；
瑕疵程度；可靠度測試； 
  
 在系統晶片的時代，我們須要有效率且經濟的嵌
入式記憶體，研究人員嘗試著將獨立 DRAM的優點，帶
進系統晶片中。於是，過去的十年當中，許多研究資
源已經投入到嵌入式 DRAM（eDRAM）的領域，嘗試著將
eDRAM對於邏輯製程來說的額外製程負擔降低。然而，
現有的文獻裡面，幾乎沒有研究在討論 eDRAM的測試，
然而傳統獨立式 DRAM 的測試，是沒有辦法直接用在
eDRAM測試上的。 
 既然 eDRAM 使用了 DRAM 的記憶體單元以及 SRAM
的介面，在本計畫當中，我們首先比較 eDRAM 測試，
與獨立式 DRAM 測試以及 SRAM 測試的不同。接著我們
整理出在 eDRAM 測試中所需要特別注意的錯誤模型，
以及可以測到這些錯誤模型所需的測試圖案。本計畫
的主要目標有二：（一） 研發出一最短的 eDRAM測試
演算法；（二）研發出如何有效利用提升溫度，達到
降低資料延遲測試在 eSRAM測試中的時間。 
英文摘要 
Key words: embedded DRAM, memory testing, 
data-retention test, defect level, reliability testing 
 
 With the strong need to an effective and economic 
embedded-memory core in the SoC era, researchers 
attempt to carry commodity DRAM's advantages from a 
commodity memory into a SoC. In the past decade, a lot 
research effort has been put into the area of the 
embedded-DRAM (eDRAM) technologies to reduce 
eDRAM's process adders to the CMOS process. However, 
few previous research works have discussed the testing 
strategies used for eDRAMs, which cannot be directly 
carried from the testing of commodity DRAMs. 
 In this project, we first compare the eDRAM testing 
to the commodity-DRAM testing and SRAM testing since 
an eDRAM core utilizes the DRAM cells with the SRAM 
interface. Then, we list the fault models which should be 
specially considered in the eDRAM testing and find out 
the corresponding test sequence for each fault model. The 
main objectives of this project include (1) develop a 
minimal test algorithm for eDRAM testing, (2) develop 
an effective scheme to shorten the retention-test time in 
eDRAM testing based on increasing the temperature. 
 
二、計畫緣由、目的、研究方法與實驗結果 
1. INTRODUCTION 
 Due to the advantages of high density, structure 
simplicity, low-power consumption, and low cost, DRAM 
has been the mainstream of the commodity-memory 
market since its invention by Dr. Dennard [1]. With the 
continually growing need to an effective and economic 
embedded-memory core in the SoC era, researchers 
attempt to carry DRAM's advantages from a commodity 
memory into a SoC. In the past decade, a lot research 
effort has been put into the embedded-DRAM (eDRAM) 
technologies, such as deep-trench capacitor with bottle 
etch [2], planar capacitor [3] [4], shallow trench capacitor 
[4], and metal-insulator-metal (MIM) capacitor [3] [5], to 
reduce the process adders to the CMOS process, where 
the eDRAM is embedded in. The eDRAM technologies 
are now available in the IC-foundry industry [6][7] and its 
applications include the products of networking, 
multimedia handheld devices, gaming consoles, high 
definition television, and so forth. 
 The classical DRAM testing contains two main 
steps: the functional test and the retention test. In the 
functional test, each functionality of DRAM cells and 
DRAM's peripheral circuitry are verified. In the retention 
test, we check whether the data retention time, which is in 
the order of milliseconds, of each DRAM cell can meet 
its specification. An industrial test set for DRAM's 
functional test requires a series of different test 
algorithms to ensure its complete functionality and 
coverage [16]. Those algorithms include checkerboard, 
address complement, March, row/column disturb, 
5 
 The CTL controls all operations of eDRAM, 
including read, write, self-refresh, auto-refresh, and any 
application-dependent operation such as burst-mode 
read/write or byte read/write. After pre-charge and charge 
redistribution, the data is first differentiated by LSA, then 
passed to GSA, and read out through the read/write path. 
The refresh operation in this eDRAM core can be 
finished by using the LSA so that refreshing all the words 
on one word-line (64 words in total) requires only one 
cycle. Therefore, total 64x128 cycles are required for one 
refresh operation. When operating at 100 MHz, the 
 
Fig. 1. Embedded-DRAM architecture. 
bandwidth of this eDRAM core is 3.125 Gb/s (32 bits x 
100 MHz). 
 During the eDRAM testing, the data background 
written into or read from the memory core should 
represent cell's physical value instead of its logical value. 
Therefore, when designing the BIST circuitry, we should 
consider the physical layout of the word-oriented 
eDRAM array [19]. The technique of address and data 
scrambling is commonly used in current memory designs, 
which can optimize memory's lay-out geometry, address 
decoder, cell area, performance, yield, and I/O pin 
compatibility [19]. The forms of scrambling include 
folding, address decoder scrambling, contact and well 
sharing, and bit-line twisting [19]. 
 Figure 2 shows an exemplary scrambling used in 
current popular eDRAM designs, where the ordering of 
word-lines in this example are arranged according to the 
least significant bits of the address. With an SRAM 
interface, eDRAM utilizes both bit-lines and bit-line-bars 
to distinguish the data value stored in an eDRAM cell, but 
a cell's data is only connected to either one of the 
corresponding bit-line and bit-line-bar. In this example, 
each word-line connects to two 4-bit words. The first 
word on a word line uses the 0th, 2nd, 4th, and 6th pairs 
of the bit-line and bit-line-bar, and the second word uses 
the 1st, 3rd, 5th, and 7th pairs. By proper arrangement, 
half of eDRAM cells are connected to bit-line, and the 
other half to the bit-line-bar. This balances the capacitor 
of the data-lines and improves the efficiency of eDRAM. 
As a result, the physical value of those cells connected to 
a bit-line-bar is inverse to their logical value. The bit-line 
twisting shown in the middle of Figure 2 can reduce the 
coupling capacitance between the bit-line of a cell and the 
bit-line-bar of the next cell [19]. Each bit-line twist for a 
given column reverses the physical-value/logical-value 
relation of the cells below that twist. 
 
Fig. 2. An exemplary array scrambling. 
3. THE EDRAM TEST APPROACH 
3.1. Current SRAM Test Approach  
 In this section, we use the March C- algorithm as the 
basic skeleton of our eDRAM-testing algorithm. March 
C-algorithm is currently the most widely used test 
7 
1-lot wafers through external testers, not BIST circuitry. 
 
1. The  proposed  test  approach  
2. X-direction March C- with solid background plus 
Y-direction MATS with CHK background  
3. X-direction March C+ with solid background plus 
Y-direction MATS with CHK background  
 The difference between proposed approach and the 
others is on their March algorithms in use. Approach 2 
uses the basic March algorithm described in Section III-A 
and approach 3 uses the default March algorithm 
generated by a commercial memory-BIST tool, Memory 
BIST Architecture [21]. Note that we turn off the 
retention test in this experiment to save its test time. The 
experimental results containing the retention test will be 
discussed later in the Section IV. 
 Table I lists the yield of the above three test 
approaches. Our proposed approach and Approach 3 
result in the same yield while the Approach 2 results in a 
higher yield. This result implies that only applying March 
C- may miss certain faults and lead to higher test escape. 
The proposed approach can achieve the same level of 
fault coverage with Approach 3. However, the proposed 
approach only requires a 11N extended March C- 
algorithm but Approach 3 requires a 14N March C+ 
algorithm. This result shows that the general SRAM 
algorithm, March C- (10N), cannot provide sufficient 
fault coverage, and the default March algorithm generated 
by a commercial tool, March C+ (14N), is redundant in 
our eDRAM testing. 
 
TABLE I 
3.5. Test Time Analysis for Proposed Test Approach 
 The total test time of the proposed test approach 
(Ttest) is the summation of the test time on retention test 
(TRT ), read/write operations (TR/W ), self-refresh (TSR), 
and auto-refresh (TAR). 
 T test = T RT + T R/W + T SR + T AR (1) 
where 
 T RT =   2 × T del (2) 
 T R/W =   N WORDS × N R/W × T CYCLE (3) 
 T SR =   N WL × N SR × T CYCLE (4) 
 T AR =   N WL × N AR × T CYCLE (5) 
 T del:   time of one (del) element 
 T CYCLE:   cycle time 
 N WORDS:   number of words 
 N R/W:   number of reads and writes 
 N WL:   number of word-lines 
 N SR:   number of self-refreshes 
 N AR:   number of total auto-refreshes 
 Tdel is equal to the retention-time specification, and 
NAR is equal to the runtime divide by the specified 
retention time . 
 
TABLE II 
 Table II lists the test time spent in each component 
of the proposed approach, given a 50MHz clock 
frequency and a 16ms retention-time specification. In this 
case, the ratio o f retention-test time to total test time is 
17.4%. 
 
4. REDUCING RETENTION-TEST TIME BY 
INCREASING TEMPERATURE 
 For an eDRAM cell, its data-retention time is 
determined by the leakage of its switch transistor, which 
increases along with the increase of the temperature. In 
the eDRAM testing, we attempt to raise the temperature 
to increase transistor's leakage current, which shortens the 
data-retention time of a cell. Therefore, at a higher 
temperature, the delay element used for retention test can 
be specified shorter since a retention fault can be detected 
within a shorter period of time than that at the original 
reference temperature. However, if the new specified 
retention time is too low, some retention faults may be 
able to escape, resulting in a higher defect level. On the 
contrary, if it is too high, the retention time of an eDRAM 
cell is over-tested, resulting in a yield lost. 
9 
 To calculate the equivalent retention time for a 
target temperature, we first calculate the total amount of 
charge (Qtotal) leaked from the storage capacitor during the 
retention-time specification (Tref) at the reference 
temperature (θref), i.e., 85℃.  
 
TABLE III 
 Table III lists the calculated equivalent retention 
time and its reduction ratio to the original 
specification-defined retention time associated with each 
given temperature. The retention-time specification (Tref ) 
is 16ms at the reference temperature (θref ) 85℃. As the 
results shows, the retention-time reduction is close to 
50% when raising the temperature to 105℃, and 65% 
when 120℃, respectively. It implies that the retention- 
test time can be significantly reduced by raising the 
temperature. 
4.4. Experimental Results 
 In the following experiment, we apply our proposed 
test algorithm (described in Section III) on the eDRAM 
cores of 1-lot test wafers repeatedly with different 
retention-time specifications at different temperatures. In 
each time of the eDRAM testing, the delay element needs 
to match the retention-time specification. Table IV shows 
the corresponding yield for each retention-time 
specification and temperature. As the results show, the 
yield reaches 86.5% with 16ms retention time at 85℃. 
Also, the same yield is first-reached with 12ms retention 
time at 95℃ and 8ms retention time at 105℃. This 
result implies that the eDRAM cells which hold their 
charge for 16ms at 85℃ can hold their charge for 12ms 
at 95℃ and for 8ms at 105℃, respectively. This result 
approximately matches the calculated equivalent retention 
time listed in Table III, where the equivalent retention 
time for 95 ℃  and 105℃  is 11.55ms and 8.47ms, 
respectively. 
 
TABLE IV 
 Note that at a higher temperature, its equivalent 
retention time decreases, which results in more frequent 
auto-refresh operations. Fortunately, the time consumed 
by a refresh operation is short and does not affect 
test-time reduction too much. In addition, the temperature 
discussed here is for wafer testing. If we want to test the 
data retention after package, the temperature under 
consideration should be the temperature inside the 
package, not just tester's temperature. The temperature 
inside the package is higher than that outside the package. 
The table to map package's outside temperatures to its 
insides temperature can be obtained from the package 
providers. 
 
三、結論 
 Even though an SRAM interface is used in an 
eDRAM core, testing an eDRAM core is more than just 
testing a SRAM core. In this thesis, we have discussed the 
testing strategies to detect the faults which may not be 
considered in SRAM testing but should be covered in 
eDRAM testing. We then proposed an eDRAM-testing 
approach to target those uncovered faults on top of a 
SRAM testing approach. Also, we analyze the relation 
between switch transistor's leakage and temperature. 
Based on that, we can theoretically calculate the 
equivalent retention time for different temperatures which 
can be adopted to reduce the retention-test time. The 
results were validated through the experiment of 1-lot test 
wafers. 
 
 
四、參考文獻 
1 
行政院國家科學委員會補助專題研究計畫成果報告 
  ※※※※※※※※※※※※※※※※※※※※※※※※※※※ 
  ※                嵌入式 DRAM 測試方法             ※ 
  ※※※※※※※※※※※※※※※※※※※※※※※※※※※ 
 
計畫類別：個別型計畫  □整合型計畫 
計畫編號：NSC98-2221-E-9-132 
執行期間： 98 年 8 月 1 日至 99 年 7 月 31 日 
 
計畫主持人：趙家佐 
共同主持人： 
計畫參與人員：張智為 楊皓宇 陳弘昕 涂偉勝 陳擴安 郭淳仁 曾遵銘  
林政偉 黃欽遠 張玟翔 徐浩文 王易民 穆思邦 秦敬雨 
 
 
 
 
 
 
 
 
 
 
 
 
 
執行單位：交通大學電子工程系 
 
 
 
 
 
 
中 華 民 國 99 年 10 月 20  日 
3 
一、中文摘要 
關鍵詞：嵌入式 DRAM；記憶體測試；資料維持測試；
瑕疵程度；可靠度測試； 
  
 在系統晶片的時代，我們須要有效率且經濟的嵌
入式記憶體，研究人員嘗試著將獨立 DRAM的優點，帶
進系統晶片中。於是，過去的十年當中，許多研究資
源已經投入到嵌入式 DRAM（eDRAM）的領域，嘗試著將
eDRAM對於邏輯製程來說的額外製程負擔降低。然而，
現有的文獻裡面，幾乎沒有研究在討論 eDRAM的測試，
然而傳統獨立式 DRAM 的測試，是沒有辦法直接用在
eDRAM測試上的。 
 既然 eDRAM 使用了 DRAM 的記憶體單元以及 SRAM
的介面，在本計畫當中，我們首先比較 eDRAM 測試，
與獨立式 DRAM 測試以及 SRAM 測試的不同。接著我們
整理出在 eDRAM 測試中所需要特別注意的錯誤模型，
以及可以測到這些錯誤模型所需的測試圖案。本計畫
的主要目標有二：（一） 研發出一最短的 eDRAM測試
演算法；（二）研發出如何有效利用提升溫度，達到
降低資料延遲測試在 eSRAM測試中的時間。 
英文摘要 
Key words: embedded DRAM, memory testing, 
data-retention test, defect level, reliability testing 
 
 With the strong need to an effective and economic 
embedded-memory core in the SoC era, researchers 
attempt to carry commodity DRAM's advantages from a 
commodity memory into a SoC. In the past decade, a lot 
research effort has been put into the area of the 
embedded-DRAM (eDRAM) technologies to reduce 
eDRAM's process adders to the CMOS process. However, 
few previous research works have discussed the testing 
strategies used for eDRAMs, which cannot be directly 
carried from the testing of commodity DRAMs. 
 In this project, we first compare the eDRAM testing 
to the commodity-DRAM testing and SRAM testing since 
an eDRAM core utilizes the DRAM cells with the SRAM 
interface. Then, we list the fault models which should be 
specially considered in the eDRAM testing and find out 
the corresponding test sequence for each fault model. The 
main objectives of this project include (1) develop a 
minimal test algorithm for eDRAM testing, (2) develop 
an effective scheme to shorten the retention-test time in 
eDRAM testing based on increasing the temperature. 
 
二、計畫緣由、目的、研究方法與實驗結果 
1. INTRODUCTION 
 Due to the advantages of high density, structure 
simplicity, low-power consumption, and low cost, DRAM 
has been the mainstream of the commodity-memory 
market since its invention by Dr. Dennard [1]. With the 
continually growing need to an effective and economic 
embedded-memory core in the SoC era, researchers 
attempt to carry DRAM's advantages from a commodity 
memory into a SoC. In the past decade, a lot research 
effort has been put into the embedded-DRAM (eDRAM) 
technologies, such as deep-trench capacitor with bottle 
etch [2], planar capacitor [3] [4], shallow trench capacitor 
[4], and metal-insulator-metal (MIM) capacitor [3] [5], to 
reduce the process adders to the CMOS process, where 
the eDRAM is embedded in. The eDRAM technologies 
are now available in the IC-foundry industry [6][7] and its 
applications include the products of networking, 
multimedia handheld devices, gaming consoles, high 
definition television, and so forth. 
 The classical DRAM testing contains two main 
steps: the functional test and the retention test. In the 
functional test, each functionality of DRAM cells and 
DRAM's peripheral circuitry are verified. In the retention 
test, we check whether the data retention time, which is in 
the order of milliseconds, of each DRAM cell can meet 
its specification. An industrial test set for DRAM's 
functional test requires a series of different test 
algorithms to ensure its complete functionality and 
coverage [16]. Those algorithms include checkerboard, 
address complement, March, row/column disturb, 
5 
 The CTL controls all operations of eDRAM, 
including read, write, self-refresh, auto-refresh, and any 
application-dependent operation such as burst-mode 
read/write or byte read/write. After pre-charge and charge 
redistribution, the data is first differentiated by LSA, then 
passed to GSA, and read out through the read/write path. 
The refresh operation in this eDRAM core can be 
finished by using the LSA so that refreshing all the words 
on one word-line (64 words in total) requires only one 
cycle. Therefore, total 64x128 cycles are required for one 
refresh operation. When operating at 100 MHz, the 
 
Fig. 1. Embedded-DRAM architecture. 
bandwidth of this eDRAM core is 3.125 Gb/s (32 bits x 
100 MHz). 
 During the eDRAM testing, the data background 
written into or read from the memory core should 
represent cell's physical value instead of its logical value. 
Therefore, when designing the BIST circuitry, we should 
consider the physical layout of the word-oriented 
eDRAM array [19]. The technique of address and data 
scrambling is commonly used in current memory designs, 
which can optimize memory's lay-out geometry, address 
decoder, cell area, performance, yield, and I/O pin 
compatibility [19]. The forms of scrambling include 
folding, address decoder scrambling, contact and well 
sharing, and bit-line twisting [19]. 
 Figure 2 shows an exemplary scrambling used in 
current popular eDRAM designs, where the ordering of 
word-lines in this example are arranged according to the 
least significant bits of the address. With an SRAM 
interface, eDRAM utilizes both bit-lines and bit-line-bars 
to distinguish the data value stored in an eDRAM cell, but 
a cell's data is only connected to either one of the 
corresponding bit-line and bit-line-bar. In this example, 
each word-line connects to two 4-bit words. The first 
word on a word line uses the 0th, 2nd, 4th, and 6th pairs 
of the bit-line and bit-line-bar, and the second word uses 
the 1st, 3rd, 5th, and 7th pairs. By proper arrangement, 
half of eDRAM cells are connected to bit-line, and the 
other half to the bit-line-bar. This balances the capacitor 
of the data-lines and improves the efficiency of eDRAM. 
As a result, the physical value of those cells connected to 
a bit-line-bar is inverse to their logical value. The bit-line 
twisting shown in the middle of Figure 2 can reduce the 
coupling capacitance between the bit-line of a cell and the 
bit-line-bar of the next cell [19]. Each bit-line twist for a 
given column reverses the physical-value/logical-value 
relation of the cells below that twist. 
 
Fig. 2. An exemplary array scrambling. 
3. THE EDRAM TEST APPROACH 
3.1. Current SRAM Test Approach  
 In this section, we use the March C- algorithm as the 
basic skeleton of our eDRAM-testing algorithm. March 
C-algorithm is currently the most widely used test 
7 
1-lot wafers through external testers, not BIST circuitry. 
 
1. The  proposed  test  approach  
2. X-direction March C- with solid background plus 
Y-direction MATS with CHK background  
3. X-direction March C+ with solid background plus 
Y-direction MATS with CHK background  
 The difference between proposed approach and the 
others is on their March algorithms in use. Approach 2 
uses the basic March algorithm described in Section III-A 
and approach 3 uses the default March algorithm 
generated by a commercial memory-BIST tool, Memory 
BIST Architecture [21]. Note that we turn off the 
retention test in this experiment to save its test time. The 
experimental results containing the retention test will be 
discussed later in the Section IV. 
 Table I lists the yield of the above three test 
approaches. Our proposed approach and Approach 3 
result in the same yield while the Approach 2 results in a 
higher yield. This result implies that only applying March 
C- may miss certain faults and lead to higher test escape. 
The proposed approach can achieve the same level of 
fault coverage with Approach 3. However, the proposed 
approach only requires a 11N extended March C- 
algorithm but Approach 3 requires a 14N March C+ 
algorithm. This result shows that the general SRAM 
algorithm, March C- (10N), cannot provide sufficient 
fault coverage, and the default March algorithm generated 
by a commercial tool, March C+ (14N), is redundant in 
our eDRAM testing. 
 
TABLE I 
3.5. Test Time Analysis for Proposed Test Approach 
 The total test time of the proposed test approach 
(Ttest) is the summation of the test time on retention test 
(TRT ), read/write operations (TR/W ), self-refresh (TSR), 
and auto-refresh (TAR). 
 T test = T RT + T R/W + T SR + T AR (1) 
where 
 T RT =   2 × T del (2) 
 T R/W =   N WORDS × N R/W × T CYCLE (3) 
 T SR =   N WL × N SR × T CYCLE (4) 
 T AR =   N WL × N AR × T CYCLE (5) 
 T del:   time of one (del) element 
 T CYCLE:   cycle time 
 N WORDS:   number of words 
 N R/W:   number of reads and writes 
 N WL:   number of word-lines 
 N SR:   number of self-refreshes 
 N AR:   number of total auto-refreshes 
 Tdel is equal to the retention-time specification, and 
NAR is equal to the runtime divide by the specified 
retention time . 
 
TABLE II 
 Table II lists the test time spent in each component 
of the proposed approach, given a 50MHz clock 
frequency and a 16ms retention-time specification. In this 
case, the ratio o f retention-test time to total test time is 
17.4%. 
 
4. REDUCING RETENTION-TEST TIME BY 
INCREASING TEMPERATURE 
 For an eDRAM cell, its data-retention time is 
determined by the leakage of its switch transistor, which 
increases along with the increase of the temperature. In 
the eDRAM testing, we attempt to raise the temperature 
to increase transistor's leakage current, which shortens the 
data-retention time of a cell. Therefore, at a higher 
temperature, the delay element used for retention test can 
be specified shorter since a retention fault can be detected 
within a shorter period of time than that at the original 
reference temperature. However, if the new specified 
retention time is too low, some retention faults may be 
able to escape, resulting in a higher defect level. On the 
contrary, if it is too high, the retention time of an eDRAM 
cell is over-tested, resulting in a yield lost. 
9 
 To calculate the equivalent retention time for a 
target temperature, we first calculate the total amount of 
charge (Qtotal) leaked from the storage capacitor during the 
retention-time specification (Tref) at the reference 
temperature (θref), i.e., 85℃.  
 
TABLE III 
 Table III lists the calculated equivalent retention 
time and its reduction ratio to the original 
specification-defined retention time associated with each 
given temperature. The retention-time specification (Tref ) 
is 16ms at the reference temperature (θref ) 85℃. As the 
results shows, the retention-time reduction is close to 
50% when raising the temperature to 105℃, and 65% 
when 120℃, respectively. It implies that the retention- 
test time can be significantly reduced by raising the 
temperature. 
4.4. Experimental Results 
 In the following experiment, we apply our proposed 
test algorithm (described in Section III) on the eDRAM 
cores of 1-lot test wafers repeatedly with different 
retention-time specifications at different temperatures. In 
each time of the eDRAM testing, the delay element needs 
to match the retention-time specification. Table IV shows 
the corresponding yield for each retention-time 
specification and temperature. As the results show, the 
yield reaches 86.5% with 16ms retention time at 85℃. 
Also, the same yield is first-reached with 12ms retention 
time at 95℃ and 8ms retention time at 105℃. This 
result implies that the eDRAM cells which hold their 
charge for 16ms at 85℃ can hold their charge for 12ms 
at 95℃ and for 8ms at 105℃, respectively. This result 
approximately matches the calculated equivalent retention 
time listed in Table III, where the equivalent retention 
time for 95 ℃  and 105℃  is 11.55ms and 8.47ms, 
respectively. 
 
TABLE IV 
 Note that at a higher temperature, its equivalent 
retention time decreases, which results in more frequent 
auto-refresh operations. Fortunately, the time consumed 
by a refresh operation is short and does not affect 
test-time reduction too much. In addition, the temperature 
discussed here is for wafer testing. If we want to test the 
data retention after package, the temperature under 
consideration should be the temperature inside the 
package, not just tester's temperature. The temperature 
inside the package is higher than that outside the package. 
The table to map package's outside temperatures to its 
insides temperature can be obtained from the package 
providers. 
 
三、結論 
 Even though an SRAM interface is used in an 
eDRAM core, testing an eDRAM core is more than just 
testing a SRAM core. In this thesis, we have discussed the 
testing strategies to detect the faults which may not be 
considered in SRAM testing but should be covered in 
eDRAM testing. We then proposed an eDRAM-testing 
approach to target those uncovered faults on top of a 
SRAM testing approach. Also, we analyze the relation 
between switch transistor's leakage and temperature. 
Based on that, we can theoretically calculate the 
equivalent retention time for different temperatures which 
can be adopted to reduce the retention-test time. The 
results were validated through the experiment of 1-lot test 
wafers. 
 
 
四、參考文獻 
無衍生研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
無。 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
