 2
 
行政院國家科學委員會專題研究計畫成果報告 
無線平行計算環境之研究(3/3) 
Research of Wireless Parallel Computing Plateform 
計畫編號︰NSC 94-2213-E-156-002 
執行期限︰94 年 8 月 1 日至 95 年 7 月 31 日 
主持人：    游國忠   真理大學資訊科學系 
Email: yugj@wireless.mcs.au.edu.tw 
 
 
計畫參與人員： 楊士輝【研究生兼任助理】  真理大學數理科學研究所 
 張家慨【研究生兼任助理】  真理大學數理科學研究所 
 姚成翰【研究生兼任助理】  真理大學數理科學研究所 
  
 
1.1 中文摘要 
近幾年來，無線網路技術蓬勃發展，傳統的
有線網路已逐漸被無線網路所取代。無線網路帶來
最大的好處是動態的連結及計算裝置的行動性。動
態的連結意味著網路的拓樸結構可動態的調整，而
行動性則代表著計算設備不侷限於一固定的位
置。目前的無線網路的研究大多偏重於通信能力的
部分，而忽略了行動裝置多也具備了計算的能力。
另一方面，目前有關無線網路的研究，也多侷限於
某一網路協定層，並對問題本身設定了很多的假
設。例如：有關繞徑協定的研究，都是假設來源裝
置與目的裝置已知的情形下，如何找出某一目標條
件之下之最佳路徑。而事實上，最佳的繞徑協定應
該由網路協定最上層的應用程式所需的條件而
定。因此，本計畫的目的是以平行計算問題中之矩
陣相乘為例，由下而上探討無線網路 Protocol Stack
中的媒體存取層(MAC) 、網路層、應用層的設計
問題以達到最佳的通信與計算效能。並希望能提出
一個計算模型以供未來無線行動計算之研究參考。 
 
本計畫為一三年期之計畫，研究的方式是以
平行處理問題中之矩陣相乘為例，由下層往上層依
序分為 MAC 層、網路層及應用層三層，逐步探討
各層協定的特性，再由上往下，逐步探討各層該如
何設計才能達到整個問題的最佳化。本報告第一年
計劃執行成果，主要研究工作在討論 MAC 層如何
以 Power Control 的 方 式 控 制 整 個 網 路 的
Topology；如何利用通信範圍及 Channel Reuse 的
機制增加網路傳輸的平行性及研究最適合用來做
無線平行計算之 Multiple Access 技術。第一年計劃
執行完畢我們分別完成了理論與實際的成果。在理
論方面，我們得到三個主要的研究成果。第一，提
出一個分散式 Topology Control Algorithm；第二、
網路平行傳輸性可以塗色問題加以分析；第三、最
適合用來做無線平行計算的 Multiple Access 技術
為 OVSF-CDMA。在實作部份，成功的在 Linux
平台上安裝 Blue-Z driver，及測試 TCP/IP 效能。
這些成果可當成第二年計劃的基礎，以完成無線平
行計算環境之建構。 
 
關鍵詞：行動計算、平行處理、媒體存取協定、繞
徑協定、動態網路拓樸。 
 
1.2 Abstract 
Recently, the wireless technology advances in a 
rapid fashion. Conventional wired network has 
gradually been replaced by wireless network. The 
major benefits come from wireless technology are 
dynamic network connection and mobility of 
computing devices. Property of dynamic network 
connection leads to dynamic network topology while 
property of mobility frees the computing devices 
from fixed position limitation. Lots of researches 
about wireless technology have been conducted in the 
past few years. However, most researches focus on 
communication issues rather than computation issues. 
On the other hand, most researches focus on a 
specific protocol and restrict themselves to 
impractical constrains. For example, almost all 
researches about routing protocol assume that the 
source and destination devices are given. These 
constraints are pretty subject. However, suitable 
criteria of routing protocol should rely on practical 
application programs in upper layer. The objective of 
this project is to propose a wireless parallel 
computing environment such that the communication 
and computation abilities of a wireless network can 
be utilized. A matrix multiplication problem is used 
as an example to investigate the proposed wireless 
computing protocol. In a bottom-up manner, we 
discuss the properties and research issues of medium 
 4
及頻寬的使用更加的有效率。 
 
D.  Location 對 Topology 之影響 
Location 是造成網路 Topology 不同的最主
要原因。在不考慮其他因素的情形下，一旦所有裝
置的 Location 決定了之後，Topology 隨即決定。
在這個子問題中，我們想要研究的主題是，在
Power Level 固定的情形下，如何安排計算裝置的
位置使得期望的網路架構如 Linear Array、Tree、
Mesh、Hypercube、Star Graph 得以被建構出。或
者是建構出傳統的平行處理網路架構：如 Pipeline 
處理、Shuffle 及 Omega 網路等。一般的 Location 
皆以 2D 為考量，如果通訊裝置的天線為全方位，
在 3D 的環境中可建構出哪些網路架構。另一方
面，如果網路裝置可固定性的移動，甚至以不固定
的方式移動時，網路的架構會有哪些變化。另一個
待思考的問題是若某些類似基地台的裝置以有線
網路的方式互連，會形成哪些期望的網路。 
 
2.2 第二年計畫：Routing 問題之研究 
第二年的計畫主要是在一已建構好之網路上
進行 Routing 問題之研究。為了讓各層 Protocol 間
之關係定義清楚。我們除了 Bridge Node 上 Relay
切換之效率外，在 Network Layer 上，我們將不討
論有關 MAC layer 之因子。我們將整個網路視為
一隨時間改變 Topology 之 Graph，並將 MAC layer 
上相關之因子以 node 及 link 的 Attribute 的方式
予以討論。由於 Routing Path 上每個 Forwarding 
node 都必須做 Data Forwarding 的動作。因此，首
先我們必須對 Bridge node 在相鄰 Link 之間切換
之效率作一研究。接下來，我們將針對 Unicast、
Multicast、Broadcast 及 Data Collection 四種不同的
問題及其延伸出之問題作一分類與討論。我們將網
路架構分成規則型網路及不規則形網路兩種，我們
將分別討論在這兩種網路架構上，各種 Routing 的
問題該如何設計演算法。Topology 改變的一種狀況
是 node 壞掉或移動到其他地方而失去了功能，因
此，我們也將 Faulty node 對無線平行計算之影響
納入考量。最後，我們將討論在一特定 Graph 中，
如何找出最多的Disjoint Path使得整體網路之效能
達到最佳。 
A.  Forwarding node 切換之研究 
在無線網路中，資料由來源裝置流向目的裝
置，來源裝置將資料傳送出去，目的裝置則是接收
資料，中間的每個節點都扮演著接收資料並轉發出
去的角色，中間的每個節點亦稱為 Forwarding 
Node。由於不同的通訊協定採用不同的 MAC 機
制，因此 Forwarding node 運作的方式及效能亦不
同。在 Bluetooth 通訊協定中，Forwarding node 可
能是扮演 Master 或 Relay 角色的 Bluetooth 
Device。角色為 Master 之 forwarding node 因為可
以決定和 Piconet 中每個 Slave 通訊的順序及時
間，因此 forwarding node 的效能只和 Master 的
Scheduling 策略有關。但若是角色為 Relay 的
Forwarding node 則問題變較為複雜，因為擔任
Relay node 的 Bluetooth device 參與了兩個或更多
個 Piconets，且同一時間 Relay 只能存在一個
Piconet 中。且 Relay 本身並沒有通訊主導權，而
是要等到 Master Polling 時才能收送資料。因此，
Relay node 的效率便成為影響整條 Routing Path 最
主要的因素。在 802.11 通訊協定中，通訊模式可
分 Distributed Coordination Function (DCF) 及 
Poing Coordination Function (PCF)兩種模式。由於
802.11 是以 CSMA/CA 的方式競爭 Channel 的使用
權。在 DCF 模式中，Forwarding node 的效能是取
決於 DCF 模式下，Device 取得 Channel 之能力。
為了減少通訊過程中，碰撞機會的發生，可用
Ready to Send(RTS)及 Clear To Send(CTS) 的機
制。在 PCF 模式下，Forwarding node 的效能則是
和 Access Point 的 Scheduling 策略有關。 
B.  Routing 問題分類及其特性之研究 
在平行計算的過程中，會有資料分佈、資料
交換、及資料蒐集等工作。本研究的目的是將無線
網路得繞徑問題與平行計算資料交換問題之間的
關係推導出來，使得無線平行計算平台上之平行演
算法之設計能可容易的開發出來。我們希望能在無
線網路與平行計算之間找到關聯性，讓無線網路發
展出的技術能用在平行計算上，也希望平行計算上
成熟的技術能用在無線網路通訊上。 
C.  規則網路上之 Routing 研究 
在第一年的計畫中，我們討論了如何在 MAC 
layer 上調整 Power、Location 及 Multiplexing 等參
數以建構出 Regular Graph，無線網路建構成
Regular Graph 之好處在於傳統在平行機器上開發
出之演算法可用在無線網路上。在平行處理上有相
當多的研究討論 Mesh 及 Hypercube 上的 Packet 
Routing 之機制。若能善用這些已經過驗證之演算
法，則無線平行計算環境之建構速度可以更快的完
成。 
D.  有 Faulty node 的規則網路上 Routing 之研
究 
在平行處理的研究上，Regular Graph 可能因
為 Processor Fault 造成整個系統的計算效能失效。
有很多的方法被設計用來處理 Fault Tolerance 的
問題或是設計有 Fault Tolerance 能力的演算法用
來處理重要的計算能力。在無線網路建構成的
Regular Graph，也同樣的有可能因為某一個 Device 
因為失去計算能力、關機或移動到另一個地方而失
去其原有之功能。在這個研究中，我們的重心擺在
 6
Algorithm；第二、以塗色問題討論網路平行傳輸
性並提出 Distributed Code Assignment Algorithm；
第三、建議最適合用來做 Divide and Conquer 無線
平 行 計 算 問 題 的 Multiple Access 技 術 為
OVSF-CDMA。在實作部份，成功的在 Linux 平台
上安裝 Blue-Z driver，及測試 TCP/IP 效能。這些
成果可當成第二年計劃的基礎，以完成無線平行計
算環境之建構。 
 
A. 無線網路中平行性之問題研究 
 
9 Distributed Topology Control Algorithm 
Topology Control 的目的是希望提供一個好
的網路架構使得上層網路層的 Node 彼此交換資料
時能有較佳的平行傳輸的表現。網路層上節點間交
換資料的模式主要有 Unicast, Multicast, Broadcast
及 Data Collection 四種。而 Power Control 會影響
Node 與鄰近 Node 間 Link 建立的狀況。使用較大
的 Power 會讓每個 Node 有較高的 Degree，適合用
來做 Broadcast Operation。相反地，使用較小的
Power 進行傳輸，會產生 Degree 較低的 Node。但
這種 Node 適合進行 Unicast 傳送，因為較低的
Degree 代表 Unicast 傳送資料時，影響相鄰 Node
的數目較低，適合較多的 Unicast Device Pair 同時
進行資料傳送。 
在設計 Topology Control Algorithm 前，第一
個要考慮的問題是如何定義『好的 Topology』，如
何衡量？基於在網路層每個節點都會有和其他的
Node 進行通訊的需求，並考慮到 Broadcast 及
Unicast operations 對 Topology 的需求不同，因
此，我們將『好的 Topology』分兩個 Case 來討論。
第一個 Case 是 Unicast 的場景。在這個場景中好
的 Topology 定義成可在最短的時間內完成 All to 
All Unicast 的 Topology 。 第 二 個 場 景 則 為 
Broadcast 的場景，在這個場景中，最好的 Topology 
定為可在最短時間內完成 All to All Broadcast 的
Topology 稱之。 
由於每個 Node 可自由決定該使用多大的
Power 進行通訊。在不知道整個網路 Topology 的
情形下，每個 Node 僅能根據 Routing 的型式
(Unicast, Multicast, 及Broadcast )及與鄰居Node的
距離來決定該使用多大的 Power。所以 Distributed 
Topology Control Algorithm 可以下列的法則來進
行資料傳送。 
(1). Broadcast 時以能達到最遠鄰居的
Power 進行通訊。 
(2). Multicast 時以能達到最遠的且是
Multicast Group 成員的 Power 進行通
訊。 
(3). Unicast 時以恰好能傳送到目標點鄰居
的 Power 進行通訊。 
根據上述法則，在搭配好的 Topology 的定
義，可決定一個 Topology。有關這個 Topology 通
訊的時間，我們將在下一節進行討論。 
 
9 Distributed Code Assignment Algorithm 
由於無線網路中的 Device 皆使用相同
的 Media 進行傳輸，若兩個相鄰的 Device 同
時傳送資料將發生封包碰撞而傳輸失敗。這
種 Collision 稱為 Primary Collision。另一種情
形是當兩個 Device 相鄰兩個 Hop 時，若同時
傳送資料給中間的 Device 時將發生 Hidden 
Terminal Problem 而導致通訊失敗。這種
Collision 稱為 Secondary Collision。基於這兩
種 Collision 之限制，在討論平行傳輸時，兩
個 Hop 的鄰居便無法同時傳送資料。這個限
制在以往有關 Code Assignment 的研究問題
上已被多次的提出討論。 
考慮在單一的 Channel 上分析平行性的
問題，不能同時傳輸的 Device 必須使用不同
的 Time Interval 進行傳送。從另一個角度來
看，這個時間分派的問題可以用塗色問題來
討論。每一個 Node 可塗上一種顏色且每個
Node 不可和兩個 Hops 內的其它 Nodes 塗上
相同的顏色。塗同一顏色的 Node 代表可同時
傳送資料而不會產生 Collision 的問題。使用
的顏色愈少代表同一Device 發送兩次資料的
時間間隔愈少。 
以往的 Code Assignment 問題都是以集
中式演算法的方式處理。但在動態 Power 
Control 的環境中，蒐集整個網路的 Topology 
本身即需耗費很大的成本。在這個計畫中，
我們提出一個分散式 Code Assignment 以協
調出平行傳送的 Schedule。我們提出的方法是
以 Positive 及 Negative Broadcast 的方式限制
兩個 Hop 間的 Device 不能使用相同的
Code。Code 的分派以搶發 Positive Broadcast 
的方式進行。收到 Positive Broadcast 封包的
Device 比須等一段 Random Backoff 的時間
才 能 再 發 Positive Broadcast 封 包  ( 以
Negative Broadcast 抑制一步及兩步鄰居)以達
到 分 散 式 Code Assignment 的 目 的 。
Distributed Code Assignment Algorithm 所使
用的封包格式為(Type, Source, Color Code)。
Type 欄位標示著封包的種類，封包有 P 
(Positive Packet), N1 (Negative One Hop 
Packet), N2 (Negative Two Hop Packet)和 Ack 
(Acknowlegement Packet) 四種。 
Distributed Code Assignment Algorithm 簡述如
下： 
(1) Source device initiate distributed code 
assignment procedure。並發出(P, S, 1) 封
包。 
(2) 其它的 Device 在收到封包後將依封包
type 進行不同的處理。 
 8
 
系統架構 
 
1. Linux 平台部份  
  使用 Bluez 在 Linux 平台下，以 QT 
Design 語言開發 Bluetooth Driver 的設計與製
作。 
2. Microsoft Windows 平台部份 
  使 用 XTNDConncet Blue SDK for 
Windows 在 Windows 平台下，以 Visual 
Studio.Net C# 語言開發Bluetooth Driver的設
計與製作。 
 
實作成果 
如圖 3.1.2 所示，我們在 Linux 平台上成功的
安裝 BlueZ Driver 並將 Bluetooth 通訊時封
包的詳細資訊攫取下來，除了瞭解 Bluetooth 
Protocol 運作的方式之外，也便於實作平行
演算法的細節。 
圖 3.1.2: Bluetooth Information Service 之執行畫面 
 
3.2 第二年研究結果 
 
In this paper, a wireless and parallel 
computation environment based on Bluetooth 
technology is proposed and illustrated by a matrix 
multiplication problem. The proposed algorithm 
divides a large computation problem into multiple 
smaller computation sub-problems. Each 
sub-problem is assigned to and solved by a mobile 
device. Individual results are collected through 
wireless communication and integrated into a 
complete solution. As demonstrated by experimental 
results, the proposed approach can reduce 
computation time, increase performance and provide 
flexible wireless computation environment.  
 
3.2.1 Introduction 
 As wireless technologies advances rapidly, the 
number of devices which can perform mobile 
computation also increases. It is possible in the near 
future that massive mobile computation paradigm 
will replace conventional wired and fixed 
computation paradigm. Among mature wireless 
technology, Bluetooth technology has advantages of 
low cost, low power consumption, and ad hoc 
connection. Bluetooth adopts frequency hopping 
approach to reduce the effect of interference. 
Although the computation power is low in current 
Bluetooth enabled mobile devices, such as PDA and 
mobile phone, wireless parallel computation can 
reduce computation time of complex problems. So, it 
is important to propose a wireless parallel 
environment, so that the power of mobile 
computation can be fully explored.    
The parallel computation framework proposed 
in this paper is based on wireless communication 
technology. The matrix multiplication problem is 
applied to illustrate the operations of wireless parallel 
computation framework. Through divide and conquer 
mechanism, a large matrix computation problem can 
be recursively divided into multiple small matrix 
computation sub-problems. A small matrix 
computation is suitable to be computed in mobile 
device with low computation power. The 
computation time can thus be reduced significantly. 
To apply divide and conquer concept to Bluetooth, a 
master in piconet is responsible to divide problem 
into smaller sub-problems and distributed these 
sub-problems into slaves. Using role switching [1] 
technique, a slave can change its roles to be a master 
in another piconet. This master can further divide 
sub-problems into even smaller problems. The 
decomposition process forms a fully complete tree 
structure. 
In literature, lots of researchers discuss parallel 
matrix computation problems. Wang and Sahni [2] 
proposed matrix multiplication algorithm in 
TIS-Mesh environment. This algorithm can minimize 
inter-processors communications, so that the 
performance of entire system can be increased. 
However, Wang and Sahni’s work can only be 
applied in wired network. Recently, parallel 
computation in wireless environment becomes an 
important research problem. The objective of this 
paper is to extent the parallel computation 
mechanism from wired to wireless and mobile 
environment.  
For researches of wireless parallel computation, 
Wu and Huang [2] proposed a framework for 
wireless parallel computation. The framework 
extends parallel computation task from distributed 
 10
important research issue. The proposed wireless 
parallel matrix multiplication algorithm operates in a 
divide and conquer manner. The algorithm comprise 
scattering, computation and gathering phases. 
WPMM algorithm adopted Strassen algorithm to 
divide a large matrix multiplication problem into 7 
matrix-multiplications sub-problems with half size of 
original one. 
 
3.2.3.1 Extension of Strassen Algorithm 
The operations of Strassen algorithm are 
summarized in Table 3.2.1. From Table 3.2.1, it is 
observed that the large matrix multiplication problem 
BA× is decomposed into seven sub-matrix 
multiplication problems (the computation of matrix 
QP1 to QP7. To obtain the product of BA× , further 
matrix additions/subtractions are required. Using 
divide and conquer mechanism, the computation of 
QPi can be recursively decomposed into smaller 
matrix-multiplication sub-problems. This process can 
be repeated until a suitable size of matrix is obtained 
to perform matrix multiplications. 
Table 3.2.1: Summary of operations in Strassen algorithm. 
( ) ( )221122111 QBQBQAQAQP +×+=   
( ) 1122212 QBQAQAQP ×+=   
( )2212113 QBQBQAQP −×=  754111 QPQPQPQPQC +−+=  
( )1121224 QBQBQAQP −×=  4221 QPQPQC +=  
( ) 2212115 QBQAQAQP ×−=  5312 QPQPQC +=  
( ) ( )121111216 QBQBQAQAQP +×−=  632122 QPQPQPQPQC ++−=  
( ) ( )222122127 QBQBQAQAQP +×−=   
 
Figure 3.2.1: The relation between matrix multiplication and 
Bluetooth piconet. 
 
3.2.3.2 The relation between Strassen algorithm 
and Bluetooth Piconet 
The divide and conquer mechanism is applied 
to compute matrix multiplication. Let mmm BAC ×= , 
where m = 2k, k∈N and m≥ 2. From Table 3.2.1, it is 
observed that to obtain the product Cm, the sub-matrix 
1QP to 7QP must first be computed. In Bluetooth, the 
problem can be described as follows. A master needs 
to compute matrix multiplication mm BA × , it can 
decompose this problem into 7 sub-problems 1QP to 
7QP and distributes these sub-problems into its seven 
slaves. Figure 3.2.1 shows the relation between a 
matrix multiplication problem and a Bluetooth 
piconet. When a slave receive sub-matrix, it can 
decide further decomposition is possible or not. If it 
is possible to further decompose a sub-matrix into 
smaller sub-matrix, it can recursively decompose the 
problem and distribute these sub-matrix into its seven 
slave. If further decomposition is impossible, it will 
perform matrix multiplication in this device directly. 
When result in each slave is computed, the results 
should send to master device to compute the final 
matrix C. Total processing steps can be categorized 
into scattering, computing, and gathering phases. In 
scattering phase, master divide large matrix 
multiplication problem into seven matrix 
multiplication sub-problems. Master then send 
needed sub-matrix to each slave. When the size of 
matrix is equal to predefined threshold, the slave will 
turn to computing phase. It is assumed that the 
computing power of each device is the same, so the 
computing time in computing phases in each device 
is the same. After computing phase, each device will 
turn to gathering phase. In gathering phase, slave can 
obtain results through inter-slave communications, so 
that the computing time can be shorten.  
 
3.2.4 Bluetooth-based Wireless Parallel Matrix 
Multiplication Algorithm  (BWPMM) 
To reduce interference, Bluetooth use 
frequency-hopping spread spectrum (FHSS) 
mechanism. Each device will hop within 79 channels. 
It is possible that more than one piconet exists in the 
same place. So, multiple device pair within different 
piconets can communicate simultaneously. As shown 
in Figure 3.2.2, BWPMM algorithm includes 
scattering, computing, and gathering phases. First, a 
large matrix multiplication is divided into 7 matrix 
multiplication sub-problems. The division process 
repeats until a suitable size of matrix is reached. Each 
device then compute results of matrix multiplication. 
Finally, the results are integrated to obtain solution of 
original matrix multiplication problem. 
 
Figure 3.2.2: Three phases of Bluetooth-based Wireless 
Parallel Matrix Multiplication (BWPMM) algorithm. 
 
3.2.4.1 Detail operations of BWPMM 
A. Scattering Phase 
CP(Pi): Probability of collision within a Piconet。 
TSi: Average time of transmitting matrix in 
Scattering Phase. TSi can be computed as follows. 
)()or()( ii PCPQBQADtQPDtTS ×+=  
t
Scattering
phase
Computing
phase
Gathering
phase
Masterslave
slave
slave
slave
slave
slave
slave
1QP
2QP
3QP
4QP
5QP
6QP
7QP
M BM A ×
 12
6
5
7
3
1
4 2
M
C 1 1 =  4  , 5  , 7 (1 )
C 1 2 =  4 (2 )
C 2 1 =  5 (3 )
C 2 2 =  2  , 3  , 6 (1 )
ru le  3
ru le  3
ru le  2
rule 4
    
6
5
7
3
1
4 2
M
C 1 1 =  4  ,  7 (1 ,5 )
C 1 2 =
C 2 1 =  5 (3 )
C 2 2 =  3 (2 ) , 6 (1 )
rul
e 1
rule
 4
rule
 4
(a)Operations in time Tg1      (b)Operations in time Tg2. 
6
5
7
3
1
4 2
M
C 11 =  7 (1,4,5)
C 12 =
C 21 =
C 22 =  6 (1,2,3)
rule  1
rul
e 2
rule 4
    
6
5
7
3
1
4 2
M
C 11 =
C 12 =
C 21 =
C 22 =  6 (1,2,3)
ru
le
 1
 
(c)Operations in time Tg3      (d)Operations in time Tg4. 
6
5
7
3
1
4 2
M
C 11 =
C 12 =
C 21 =
C 22 =  
(e)Operations in time Tg5 
Figure 3.2.4:  Operations of the Greedy algorithm. 
3.2.4.3 Parallel Communication 
In gathering phase, there are lots of parallel 
transmissions need to be done. For example, in 
Figure 3.2.4(a), Slave 2 transmits QP2 to Slave 4, 
Slave 1 transmits to Slave 6, and Slave 3 transmits to 
Slave 5, simultaneously. These parallel transmissions 
can be achieved through role switching operations. 
First, Slave 1, 2, and 3 send role switching LMP 
request packets to Master. Then, master replies accept 
packets to these slaves. Information contained in 
LMP acceptance packet includes BD addresses and 
clock offsets of Slave 4, 5, 6, and 7. After Slave 1, 2, 
and 3 received LMP accept packets, they can enter 
page state using previous collected BD addresses and 
clock offsets. Master inform slave 4, 5, 6, and 7 to 
enter page scan state. A scatternet is then constructed 
as shown in Figure 3.2.5. In Figure 3.2.5, the gray 
nodes indicate masters of temporary constructed 
piconets. 
 
Master
M/S Relay
Slave  
Figure 3.2.5: Illustration of Piconet restructuring. 
M aster
M /S  R elay
S lave
 
Figure 3.2.7: A scatternet is connected as a hierarchical tree 
structure with degree 7. 
 
3.2.4.4 Perform Strassen Algorithm on BT Tree 
Due to the constraint that a piconet has at most 
seven active slaves, the proposed Bluetooth-based 
parallel matrix multiplication algorithm adopts 
Strassen style computation paradigm. As shown in 
Figure 3.2.6, a Bluetooth scatternet contains a tree 
structure with branches 7 in each internal node. A 
large matrix multiplication problem in parent node is 
decomposed into seven small matrix multiplication 
problems computed in seven slave nodes.  
3.2.5 Experimental Results 
 To evaluate performance of BWPMM 
algorithm, Bluetooth devices involved in parallel 
computation are organized as a hierarchical tree 
structure. This tree can be used to observe 
performance of divide and conquer parallel algorithm. 
Initially, all devices stay in inquiry scan states. The 
device which initiate parallel computation task will 
change its state to inquiry state. When the first 
piconet with one master and seven salves is 
constructed, these slaves will change state to inquiry 
state and construct piconets with seven slaves in the 
second level of BT tree. These process repeats until 
the designated level is constructed or all devices are 
connected. In the following, all experiments use 
Strassen algorithm to compute matrix multiplication 
and use Bluetooh-N protocol with no collision to 
evaluate system performance. Related parameters 
used in experiments are summarized as follows. 
1. The size of each element in a matrix is 2 bytes. 
2. The bandwidth of wireless communication is 
assumed to be 79 MB/s. 
The computing powers of most mobile devices are 
weak. In the following experiments, it is assumed that 
the computing power of mobile device is 100MIPS, 
so that the relation between the number of devices 
and the required computing time can be established. 
Theoretically, increasing the number of devices will 
decrease the required computing time. However, 
when the number of devices increases from 64 to 512, 
the computing time does not decrease. The reason 
why such situation happens relies on the fact that the 
level of tree increases and the dimension of matrix in 
leaf nodes decreases when the number of devices 
increase. The computing tasks of BWPMM are 
executed in leaf nodes. When the number of devices 
increase, the reduction of computing time in leaf 
nodes can not compensate the increasing of 
communication overhead. 
 14
3.2.6 Summary of achievement in 2nd year 
In this paper, we have proposed a 
Bluetooth-based wireless and parallel matrix 
multiplication (BWPMM) algorithm. The BWPMM 
algorithm use divide-and-conquer mechanism and 
hierarchical tree network architecture to reduce 
computing time of large matrix multiplication 
problem. As demonstrated by experimental results, 
the proposed BWPMM algorithm indeed reduces the 
computing time and increases bandwidth utilization. 
The future work of this paper will try to discover 
more efficient wireless transmission technologies to 
improve system performance and apply the proposed.   
 
 
3.3 第三年研究結果 
 
隨著無線網路的快速發展，越來越多的計算
裝置具備了行動計算的能力，在可預見的未來，大
量行動計算的提供將成為一重要的研究領域。在目
前較前瞻性的無線技術理論中，OVSF-CDMA 則
具有通訊頻寬大、頻寬利用率高及不同通道碼間不
會相互干擾的優點，這些優點使得 OVSF-CDMA
進行平行傳輸時的通訊效能最佳。平行計算可用來
縮短複雜問題的計算時間，目前平行計算平臺大都
建構在有線網路環境下，因為在有線網路環境存在
著線路佈置不易、必須預先架構網路環境及網路拓
樸變動不易等問題。因此在這篇論文中，我們探討
如何在無線通訊環境下建構一平行計算架構，並以
矩陣相乘的問題為例，提出以 Divide and Conquer
的概念為基礎之無線平行演算法之設計，將矩陣相
乘問題切割成獨立的子矩陣相乘問題，以無線傳輸
的方式，分派至多個行動裝置進行平行計算，計算
完結果，再進行整合，以期能有效的縮短計算時
間。我們在具有前瞻性的 OVSF-CDMA 技術上探
討無線平行計算環境之技術。在 OVSF-CDMA 無
線通訊技術方面，我們提出一動態頻寬分配與排程
之演算法，使得平行計算演算法之效能可達到最佳
化。經由實驗數據分析，我們提出的無線平行計算
環境具有縮短計算時間、提升計算效能，提供彈性
的網路環境等特性。 
 
3.3.1.1 環境假設 
本篇論文假設參與平行計算工作的所有的行
動裝置皆可直接通訊，即任兩個裝置間可以直接通
訊，且整個網路環境為同質網路環境，即每個行動
裝 置 的 計 算 能 力 相 同 ， 以 每 秒 百 萬 指 令
MIPS(Million Instructions Per Second)為單位。 
 
3.3.1.2 劃碼多工存取技術 
在 CDMA 通訊機制中常見的是 WCDMA，
WCDMA 採 用 DS-CDMA(Direct Spread Code 
Division Multiple Access)無線傳輸技術，每個傳輸
通道都使用了彼此具有正交的通道碼，使得不同實
體通道間，可以使用相同的頻率而不會互相干擾，
以下我們將介紹 WCDMA 常見的 OVSF-Code Tree
通道碼的通訊方式。 
 
3.3.1.3 OVSF Code Tree 
 OVSF-CDMA 所使用的通道碼是由展頻係數
所產生的,如圖 3.3.1 為 OVSF Code Tree 的通道
碼,SF(Spreading Factor)為展頻係數,CCi,j為通道碼,i
為展頻係數值,j 為在 i 展頻係數下的第 j 個通道
碼,OVSF Code Tree的通道碼具有下列特性,Tree的
每一階層通道碼具有相同的頻寬,上層通道碼的頻
寬為下層通道碼頻寬的兩倍,此外,為了保持通道碼
間的正交性,任一通道碼 CCi,j 需滿足兩個條件: (1) 
CCi,j到根結點間沒有其他碼被配置。(2) CCi,j的所
有子樹的通道碼都沒被使用。 
 
3.3.2 The Proposed Protocol 
當進行平行計算的任務時，我們需要另行建
立一個進行平行計算工作的網路環境，產生這個網
路環境的協定我們稱為 Wireless Parallel Matrix 
Multiplication Protocol(WPMM)，這個協定建立一
個階層式的樹狀架構，這個階層式的樹狀架構融入
Divide and Conquer 的演算法概念，必須進行多對
裝置間的平行傳輸， CDMA 對於平行傳輸既可動
態調整通道碼又可使得不同頻道間的通訊不受干
擾，使用 CDMA 可使平行傳輸的通訊效能提高，
雖然目前的硬體花費較高，但是著眼於未來，
CDMA 成為無線通訊的主流及其硬體花費也會降
低。接下來我們對於使用到的符號進行定義。 
 
3.3.2.1 符號定義 
為了方便介紹本篇論文的詳細內容，我們將定
義下列符號： 
 
Definition: Am,n(i,j)及 B m,n(i,j)(矩陣相乘的相乘矩陣
A 及矩陣 B) 
矩陣相乘的基本精神為兩個矩陣相乘得到新
的乘積矩陣，對於個別矩陣我們使用下列符號表
示， 一個矩陣包含行與列，A(or B)表示矩陣的識
別標籤，A(i,j)表示 A 矩陣中第 i 列第 j 行的元素，
m,n 表示該矩陣是由 m 列、n 行所組成的矩陣，若
矩陣的行數與列數相同，即 Am,n(i,j)中 m = n，則使
用 Am(i,j)表示。  
 
Definition: C m,n(i,j) (矩陣相乘的乘積矩陣 C) 
矩陣相乘為兩個矩陣相乘得到新的乘積矩
陣，對於 Am,p與 Bp,n兩矩陣相乘後所得到的乘積矩
陣 Cm,n，我們以下列符號表示 
 
 
 
其中，C 為乘積矩陣的標籤，Cm,n 表示 C 矩
陣是由 m 列、n 行所組成的乘積矩陣。 
 
Definition：Dt(M)(M 矩陣傳輸所需的頻寬) 
 每個矩陣傳輸時所需的頻寬大小可依據該矩
陣的維度與元素的資料大小來決定，我們以下列符
號來表示 M 矩陣傳輸所需的頻寬大小： 
nppmnm BAC ,,, ×=
 16
Pre-Additions Recursive calls Post-Additions
 
11111 QBQAQP ×=   
 
21122 QBQAQP ×=   
 
11213 QBQAQP ×=  211 QPQPQC +=
 
21224 QBQAQP ×=  432 QPQPQC +=
 
12115 QBQAQP ×=  653 QPQPQC +=
 
22126 QBQAQP ×=  874 QPQPQC +=
 
21217 QBQAQP ×=   
 
22228 QBQAQP ×=    
 
3.3.2.3 無線平行矩陣相乘演算法 
 
 對於複雜問題使用平行演算法可以縮短其等
待時間，然而以往的平行計算研究都是在有線通訊
的環境，在無線通訊的環境中使用平行演算法，往
往裝置間的平行傳輸十分頻繁，因此建構平行傳輸
的機制是無線平行演算法很重要的一個環節，而使
用 OVSF-CDMA 的通訊機制可有較佳的平行傳輸
效能，OVSF-CDMA 的通訊機制是透過彼此正交
的通道碼的方式進行通訊,使用不同通道碼的通訊
頻道，彼此不會相互干擾，這在通訊平行傳輸時，
可解決通訊碰撞問題，為了更好的平行傳輸效能，
我們採用 OVSF-CDMA 的通訊機製作為無線平行
矩陣相乘演算法的通訊平臺。總結來說，我們提出
的無線平行矩陣相乘演算法以 Divide and Conquer
的概念為核心，將複雜的問題分成問題切割
(Scattering Phase)、執行計算(Computing Phase)及合
成 問 題 (Gathering Phase) 三 個 階 段 ， 以
OVSF-CDMA 為通訊平臺時，由於平行計算過程
中傳輸時間是最主要的花費，而 OVSF Code Tree
切割的頻道碼數目為 2 的指數次方，對應到快速矩
陣相乘演算法將原先複雜矩陣相乘問題變成八個
較小的矩陣相乘問題，與 OVSF Code Tree 的通道
碼的切割碼數為 2 的指數次方可有效整合、利用，
提高頻寬利用率，我們採用標準的快速矩陣演算法
進行 OVSF-CDMA 平臺下的平行計算演算法。 
我們假設所有裝置都在通訊範圍內，任兩裝
置可以直接通訊，且任一裝置皆知道所有通訊範圍
內的其他裝置的 ID，一開始，要進行平行計算的
裝置發起平行計算的請求，由於任一裝置知道所有
通訊範圍內其他裝置的 ID，發起平行計算請求的
裝置，視環境中裝置的計算能力、裝置個數及欲解
決的矩陣問題複雜度，建構一個階層式的樹狀結構
T8，發起裝置為 T1,0，並決定階層式樹狀架構的
TLmax，此時所需的裝置數為 1max8 −TL ，將需參與平
行計算的裝置，建立一實體 ID 與虛擬編號的對照
表，稍後皆使用虛擬編號來表示通訊的裝置，對任
一階層式樹狀結構裝置 Ti,j ，其虛擬編號為
iTLj −× max8 ，如圖 3.3.2 所示 TLmax=3，則 T2,3=24，
裝置 T2,3的虛擬編號為 24，其中，某些結點的虛擬
編號相同，例如 T1,0、T2,0,T3,0，表示該點為同一裝
置且具有多種任務，T1,0 將矩陣資料散佈到 TL=2
的裝置，下一階段 T2,0將矩陣資料散佈到 TL=3 的
裝置，由於這些通訊不會互相衝突，所以我們都使
用虛擬編號為 0 的裝置。建構出階層式的樹狀結構
及其 TLmax後，發起平行計算要求的裝置，將虛擬
編號與實體 ID 對照表及樹狀結構資訊以 CC1,0 通
道碼廣播給其他裝置，接下來的平行計算程式分為
Scattering Phase 、 Computing Phase 、 Gathering 
Phase。首先在 Scattering Phase，將矩陣相乘問題
切割成八個子矩陣相乘問題，遞迴切割直到矩陣相
乘問題的時間複雜度達到可接受的程度，接下來執
行 Computing Phase，將這些時間複雜度達可接受
範圍的矩陣相乘問題進行計算，最後在 Gathering 
Phase，將計算後的小矩陣相乘結果收集至發起平
行計算問題的裝置。Scattering Phase 又分為幾個小
階段，總共有 Phmax=TLmax-1 個階段，Gathering 
Phase 也有相同的小階段收集資訊，如圖 3.3.4 所
示。 
A. Scattering Phase 
在 Scattering Phase 我們將參與平行計算工作
的裝置視為一階層式的樹狀結構，發起平行計算工
作的裝置為階層式樹狀結構的樹根裝置，對所有樹
狀結構中的父結點而言，父結點將矩陣資料使用標
準的快速矩陣相乘演算法，分割為八個子矩陣相乘
問題，父結點為 Ti,j則子結點為 
7maxmax 8,18,1 +−− ×+×+ iTLiTL jiji TT ～ 共八個裝置，整個
Scattering Phase 又分為多個小 phase，Ph=1 時，
 18
 
 
圖 3.3.5： OVSF-CDMA Scattering Phase
父結點傳輸子矩陣資料給子結點示意圖 
 
B. Computing Phase 
這個階段是階層式的樹狀架構的樹葉部分的裝
置對於矩陣相乘問題進行計算，對於矩陣相乘運算
而言，此時的矩陣維度 Dimk 為原先矩陣維度的
1max2/1 −TL ，其進行純量加法或純量乘法的次數為
2×DimA3- DimA2，裝置的計算能力為 Dp，所需的
時間為 
(2× ( 1max2/ −TLADim )3- 1max2/ −TLADim 2)÷ Dp 
以 Scattering Phase 的例子而言，直接由單一裝置
運算 nkkm BA ,, × 所需花費的時間為 
M100))20483)2048((2( ÷−× =163.84 秒，此時
Computing Phase 所需花費的時間為 
M100)))2/2048()2/2048((2( 2232 ÷−× = 2.56 
sec。 
C. Gathering Phase 
這個階段是將 Computing Phase 的小矩陣相乘
運算結果匯整至初始發起平行計算工作的裝置的
階段，對於任一 Computing Phase 的裝置 Ti,j必須
將計算後的矩陣資料傳輸至其階層式樹狀架構的
父結點為 
⎥⎦
⎥⎢⎣
⎢−
8
,1 ji
T  
與 Scattering Phase 相同，總共需進行 Phmax個小階
段，每一小階段，父結點均接收所有子結點計算完
的矩陣資料，對任一 Ti,j結點其 TL=i，其父結點總
共需進行 7 次矩陣資料傳輸與四次矩陣加法運
算 ， 這 七 次 矩 陣 運 算 的 矩 陣 k 之
Dimk=
1
2/
−TL
ADim ， 使 用 的 通 道 碼 為
jiCC ,8 2− ，其大小為
2
max 8/
−iBW ，由於父結點
與子結點有一為相同裝置，原先七次的傳輸可縮減
為六次，這六次矩陣資料傳輸所需花費的時間為
jk iCCELDim ,8
2
2)6( −÷×× ，四次矩陣加法運算
所需 花費的時 間為 pk DDim ÷× )4( 2 ，假 設
DimA=2048，Dp=100 MIPS，BWmax=10M，以 Ph=2
為例，即 TL=3 的結點傳輸至 TL=2 的父結點，傳
輸所需花費的總時間為 
4.2)8/10()25126( 2 =÷×× M 秒，加法運算所花
費的時間為 M100)10244( 2 ÷× =0.04 秒，以 Ph=1
為例，即 Tl=2 的結點傳輸至 TL=1 的父結點，傳輸
所需花費的時間為 
2.1)1/10()210246( 2 =÷×× M 秒，加法運算所花
費的時間為 M100)10244( 2 ÷× =0.04 秒。 
 
 
 
 
 
 
QB11QA11
Ti,j
t8t7t6t5t4t3t2t1
QB22QA22
QB12QA21
QB21QA22
QB11QA21
QB22QA12
QB12QA11
QB21QA12
iTLji
T −×+ max8,1
18,1 max +×+ −iTLjiT
28,1 max +×+ −iTLjiT
38,1 max +×+ −iTLjiT
48,1 max +×+ −iTLjiT
58,1 max +×+ −iTLjiT
68,1 max +×+ −iTLjiT
78,1 max +×+ −iTLjiT
 Computing Procedure 
Step 1：判斷是否收到進行 Computing Phase
的訊息。 
Step 2：若收到進行 Computing Phase 的訊息
，則 go to Step 3，否則 go to Step 1。
Step 3：若目前裝置 Ti,j的 i = TLmax，則進行
矩陣相乘運算，否則 go to Step 1。
 Scattering Procedure 
Step 1：判斷是否收到進行 Scattering Phase 
某個 Ph 小階段的訊息 
Step 2：若收到進行 Scattering Phase 某個 
Ph 小階段的訊息，則 go to Step 3 
，否則 go to Step 1。 
Step 3：若目前裝置 Ti,j的 i = Ph，則進行快
速矩陣相乘的標準演算法，使 
用 jiCC ,8 1− 通道碼，並依序 將 QA11~QB22 等八個部分矩陣資料 
傳送至子結點 
78,18,1 maxmax +×+×+ −− TLTLTLTL jiji TT ～  ，go to Step 6。 
Step 4：若目前裝置 Ti,j的 i = Ph+1，則使用
jiCC ,8 2− 通道碼準備接收矩陣資料 ，go to Step 5。 
Step 5：判斷父結點傳輸的資料是否需要接 
收，若需要才接收。 
Step 6：判斷是否 Ph < Phmax，若 Ph < Phmax 
則 go to Step 1，否則結束 
Scattering Procedure。 
 Gathering Procedure 
Step 1：判斷是否收到進行 Gathering Phase 
某個 Ph 小階段的訊息。 
Step 2：若收到進行 Gathering Phase 某個 
Ph 小階段的訊息則 go to Step 3， 
否則 go to Step 1。 
Step 3：若目前裝置 Ti,j的 i = TLmax-(Ph-1) 
，則將整合的矩陣資料以
⎥⎦
⎥⎢⎣
⎢−
8
2
,8
j
i
CC 通道
碼傳送至
⎥⎦
⎥⎢⎣
⎢−
8
,1
j
i
T ，go to Step 6。 
Step 4：若目前裝置 Ti,j的 i = TLmax-(Ph-1)-1
，則使用
⎥⎦
⎥⎢⎣
⎢−
8
,28 ji
CC 通道碼準備接收
矩陣資料，go to Step 5。 
Step 5：判斷是否 Ph < Phmax，若 Ph < Phmax 
則 go to Step 1，否則結束 
Gathering Procedure。 
 20
 
 
圖(八)： 以 Divide and Conquer 方式產生的矩陣相乘例子 
 
 
 
3.3.3 實驗與結果 
 
 
 
 
我們將欲參與平行計算工作的裝置，建構成一
階層式的樹狀平行計算架構，以矩陣相乘問題為
例，評估我們提出的 WPMM 演算法的效能。本論
文主要是在 OVSF-CDMA 的無線通訊環境下，
On-Demand 建立階層式的樹狀平行計算架構，並觀
察使用我們提出的 Divide and Conquer 矩陣相乘演
算法後，經 WPMM 通訊協定所帶來的績效。在
OVSF-CDMA 的環境中，所有裝置皆使用 C1,0的通
道碼作為溝通頻道，來建構階層式的樹狀平行計算
架構。在我們的實驗中，皆使用快速矩陣相乘演算
法，來進行單一電腦矩陣相乘問題的計算，以 OVSF
無線通訊協定(OVSF)及加強的 OVSF 無線通訊協
定(E-OVSF)等通訊協定，對平行計算架構的效能進
行分析。 
 
3.3.3.1 模擬環境 
我們模擬環境所需要的參數如下： 
3. 矩陣維度：2048 x 2048 
4. 矩陣元素資料所需的儲存空間：2 bytes 
5. 行動裝置個數：64 
6. 行動裝置的計算能力：100 MIPS 
7. 無線通訊的頻寬：79 MB 
根據以上的模擬環境，我們針對不同的目標來評估
WPMM 通訊協定所帶來的績效。本論文所提出的
協定除了帶給平行計算裝置移動能力，提升平行計
算架構在傳輸時的通訊頻寬利用率，並解決多對行
動裝置平行傳輸的碰撞問題，我們就以下的事項來
說明 WPMM 所帶來的績效： 
 
實驗(一) 行動裝置個數與平行計算過程的總花費
時間 
 OVSF-CDMA 可根據使用的通道碼來動態決
定其通訊頻寬，由於無線平行計算環境主要的目標
是針對計算能力較差的行動裝置，因此我們將行動
裝置的計算能力定為 100 MIPS，藉此觀察在行動裝
置計算能力不高的情況下，裝置個數的增加對於平
行計算過程的總花費時間所產生的影響。理論上，
當行動裝置計算能力不改變，行動裝置的個數增
加，將使得平行計算過程的總花費時間大幅減少，
然而由圖 3.3.9 的模擬結果觀察，OVSF 及 E-OVSF
在裝置個數由 512 變成 4096 時，總花費時間不降
反升，但是圖 3.3.9 的模擬結果顯示，行動裝置個
數增加平行計算過程的總花費時間將逐漸減少，會
發生這種情況，主要是因為行動裝置個數增多時，
平行計算所建構的階層式樹狀架構的樹高增高，樹
葉部分的裝置所需進行計算的矩陣相乘問題的矩
陣維度縮小，而主要進行矩陣計算工作的行動裝置
為樹狀架構的樹葉部分的所有裝置，所以平行計算
過程中的計算時間將減少，另一方面，由於樹高增
加，通訊所需的代傳中繼點增多，傳輸所需的時間
相對增加，總結來說，當通訊頻寬較高時，傳輸所
增加的時間較計算所增加的時間少，平行計算過程
的總花費時間也會減少；當通訊頻寬較低時，傳輸
所增加的時間較計算所增加的時間多，平行計算過
程的總花費時間將會增多。綜合以上觀察，我們得
到一個結論，當行動裝置個數增多的同時，傳輸頻
寬也必須相對提高，才能得到較佳的平行計算的效
能。 
 
實驗(二) 無線通訊頻寬與平行計算過程的總花費
時間 
 由圖 3.3.11 可觀察出，當無線通訊頻寬增加
時，平行計算過程中的計算時間並不會增加，相對
的傳輸頻寬的增大，傳輸所花費的時間將減少，因
此，平行計算過程的總花費時間將會降低，由於
OVSF 及 E-OVSF 可動態的調整通訊頻寬，充分使
用通訊頻寬，使其平行計算過程的傳輸時間與計算
時間的比率很低，當無線通訊頻寬增加，其平行計
 
[ ] [ ] [ ] [ ]
[ ] [ ] [ ] [ ]
[ ] [ ] [ ] [ ]
[ ] [ ] [ ] [ ]
[ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ]
[ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ]
[ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ]
[ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ]
[ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ]
[ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ]
[ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ]
[ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] [ ] +×+×+×+×+×+×+×+×
+×+×+×+×+×+×+×+×
+×+×+×+×+×+×+×+×
+×+×+×+×+×+×+×+×
+×+×+×+×+×+×+×+×
+×+×+×+×+×+×+×+×
+×+×+×+×+×+×+×+×
+×+×+×+×+×+×+×+×
=×+×
+×+×
+×+×
+×+×
=×
⎥⎥
⎥
⎦
⎤
⎢⎢
⎢
⎣
⎡
⎥⎥
⎥
⎦
⎤
⎢⎢
⎢
⎣
⎡
1,1
3,3
1,1
3,3
1,1
3,2
1,1
2,3
1,1
2,3
1,1
3,3
1,1
2,2
1,1
2,3
1,1
3,3
1,1
3,2
1,1
2,3
1,1
2,2
1,1
2,3
1,1
3,2
1,1
2,2
1,1
2,2
1,1
3,1
1,1
1,3
1,1
3,0
1,1
0,3
1,1
2,1
1,1
1,3
1,1
2,0
1,1
0,3
1,1
3,1
1,1
1,2
1,1
2,1
1,1
0,2
1,1
2,1
1,1
1,2
1,1
2,0
1,1
0,2
1,1
1,3
1,1
3,3
1,1
1,2
1,1
2,3
1,1
0,3
1,1
3,3
1,1
0,2
1,1
2,3
1,1
1,3
1,1
3,2
1,1
0,3
1,1
2,2
1,1
0,3
1,1
3,2
1,1
0,2
1,1
2,2
1,1
1,1
1,1
1,3
1,1
1,0
1,1
0,3
1,1
0,1
1,1
1,3
1,1
0,0
1,1
0,3
1,1
1,1
1,1
1,2
1,1
0,1
1,1
0,2
1,1
0,1
1,1
1,2
1,1
0,0
1,1
0,2
1,1
3,3
1,1
3,1
1,1
3,2
1,1
2,1
1,1
2,3
1,1
3,1
1,1
2,2
1,1
2,1
1,1
3,3
1,1
3,0
1,1
2,3
1,1
2,0
1,1
2,3
1,1
3,0
1,1
2,2
1,1
2,0
1,1
1,3
1,1
1,1
1,1
1,2
1,1
0,1
1,1
0,3
1,1
1,1
1,1
0,2
1,1
0,1
1,1
1,3
1,1
1,0
1,1
0,3
1,1
0,0
1,1
0,3
1,1
1,0
1,1
0,2
1,1
0,0
1,1
1,3
1,1
3,1
1,1
1,2
1,1
2,1
1,1
0,3
1,1
3,1
1,1
0,2
1,1
2,1
1,1
1,3
1,1
3,0
1,1
0,3
1,1
2,0
1,1
0,3
1,1
3,0
1,1
0,2
1,1
2,0
1,1
1,1
1,1
1,1
1,1
1,0
1,1
0,1
1,1
0,1
1,1
1,1
1,1
0,0
1,1
0,1
1,1
1,1
1,1
1,0
1,1
0,1
1,1
0,0
1,1
0,1
1,1
1,0
1,1
0,0
1,1
0,0
2,2
2,2
2,2
2,2
2,2
2,0
2,2
0,2
2,2
0,2
2,2
2,2
2,2
0,0
2,2
0,2
2,2
2,2
2,2
2,0
2,2
0,2
2,2
0,0
2,2
0,2
2,2
2,0
2,2
0,0
2,2
0,0
44434241
34333231
24232221
14131211
44424241
34333231
24232221
14131211
PBPAPBPAPBPAPBPAPBPAPBPAPBPAPBPA
PBPAPBPAPBPAPBPAPBPAPBPAPBPAPBPA
PBPAPBPAPBPAPBPAPBPAPBPAPBPAPBPA
PBPAPBPAPBPAPBPAPBPAPBPAPBPAPBPA
PBPAPBPAPBPAPBPAPBPAPBPAPBPAPBPA
PBPAPBPAPBPAPBPAPBPAPBPAPBPAPBPA
PBPAPBPAPBPAPBPAPBPAPBPAPBPAPBPA
PBPAPBPAPBPAPBPAPBPAPBPAPBPAPBPA
PBPAPBPA
PBPAPBPA
PBPAPBPA
PBPAPBPA
BBBB
BBBB
BBBB
BBBB
AAAA
AAAA
AAAA
AAAA
 22
計算能力不改變，行動裝置的個數增加，將使得平
行計算過程中的傳輸時間與計算時間的比率大幅
增加，會發生這種情況，主要是因為行動裝置個數
增多時，平行計算所建構的階層式樹狀架構的樹高
增高，使得樹葉部分的裝置所需進行計算的矩陣相
乘問題的矩陣維度縮小，而主要進行矩陣計算工作
的行動裝置為樹狀架構的樹葉部分的所有裝置，所
以平行計算過程中的計算時間將減少，另一方面，
由於樹高增加，通訊所需的代傳中繼點增多，傳輸
所需的時間相對增加。 
 
實驗(六) 無線通訊頻寬與平行計算過程的傳輸時
間與計算時間的比率 
 由圖 3.3.15 可觀察出，當無線通訊頻寬增加
時，平行計算過程中的計算時間並不會增加，相對
的傳輸頻寬的增大，傳輸所花費的時間將減少，因
此，平行計算過程的傳輸時間與計算時間的比率將
會降低，由於 OVSF 及 E-OVSF 可動態的調整通訊
頻寬，充分使用通訊頻寬，使其平行計算過程的傳
輸時間與計算時間的比率很低。當無線通訊頻寬增
加，其平行計算過程的資料傳輸時間皆將降低。 
 
0
20
40
60
80
100
120
140
160
8 64 512 4096
Device Number
Tr
an
sm
iss
io
n 
/ C
om
pu
tin
g OVSF
EOVSF
圖 3.3.14：行動裝置個數對於平行計算過
程的傳輸時間與計算時間的比率所造成的影響
 
0
0.05
0.1
0.15
0.2
0.25
0.3
0.35
0.4
0.45
79 158 316 632 1264
Bandwidth (MB)
Tr
an
sm
is
si
on
 / 
C
om
pu
tin
g
OVSF
EOVSF
圖 3.3.15： 無線通訊頻寬對於平行計算過
程的傳輸時間與計算時間的比率所造成的影響
 
實驗(七) 矩陣維度與平行計算過程的傳輸時間與
計算時間的比率 
 事實上，當矩陣維度增加時，傳輸時間相對也
會增加，由圖 3.3.16 的模擬結果來看，矩陣維度增
加時，其平行計算過程的傳輸時間與計算時間的比
率卻降低，這表示矩陣維度增加時，其平行計算過
程的計算時間也增加，且增加的幅度約為傳輸時間
的兩倍，不論是 OVSF 或 E-OVSF 皆是如此，因此，
我們可以觀察到在平行計算的過程中，當矩陣的維
度增加，計算所增加的時間花費約為傳輸所增加的
時間的兩倍，對於我們提出的平行計算協定來說，
矩陣維度越大，傳輸所花費的時間的比重將相對降
低。 
 
實驗(八) 行動裝置的計算能力與平行計算過程的
傳輸時間與計算時間的比率 
 當只有行動裝置的計算能力增加時，傳輸工作
所花費的時間並不會改變，計算工作所花費的時間
卻相對減少，承圖 3.3.17 的模擬結果，行動裝置的
計算能力增加時，其平行計算過程的傳輸時間與計
算時間的比率卻增加為兩倍左右，這表示行動裝置
的計算能力增加時，其平行計算過程的計算時間將
減少，而傳輸工作所花的時間並未增減。不論是
OVSF 或 E-OVSF 皆是如此，因此，我們可以觀察
到在平行計算的過程中，當行動裝置的計算能力增
加，並不影響其資料傳輸工作，對於我們提出的平
行計算協定來說，行動裝置的計算能力增加越大，
計算所花費的時間的比重將相對降低。 
 
0
0.5
1
1.5
2
2.5
3
3.5
4
256 512 1024 2048 4096
Matrix Dimension
Tr
an
sm
is
si
on
 / 
C
om
pu
tin
g OVSF
EOVSF
圖 3.3.16： 矩陣維度對於平行計算過程的傳
輸時間與計算時間的比率所造成的影響 
 
0
1
2
3
4
5
6
7
100 200 400 800 1600
Device Ability (MIPS)
Tr
an
sm
is
si
on
 / 
C
om
pu
tin
g
OVSF
EOVSF
 
圖 3.3.17：行動裝置的計算能力對於平行計算
過程的傳輸時間與計算時間的比率所造成的影響
 
實驗(九) 平行計算效能與無線通訊頻寬對行動裝
置計算能力的比值 
隨著電子與通訊計術的不斷提升，行動裝置的
計算能力及無線通訊頻寬也不斷提升，著眼於未來
平行計算的環境，無線通訊頻寬對行動裝置計算能
力的比值對於我們提出的 WPMM 協定的影響是非
常重要的，因此，我們將無線通訊頻寬對行動裝置
計算能力的比值作為參數，觀察當行動裝置的計算
 24
 
