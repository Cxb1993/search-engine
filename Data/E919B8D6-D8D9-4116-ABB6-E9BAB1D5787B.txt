目錄 
一、 摘要.................................................................................................................................. 1 
二、 研究動機與目的.............................................................................................................. 2 
三、 文獻探討.......................................................................................................................... 2 
1. 會議初始協定（Session Initiation Protocol, SIP）........................................................ 2 
2. SIP高速路由器(SIP Express Router, SER) ..................................................................... 3 
3. 網際網路通訊協定上的電話路由協定(Telephony Routing over IP, TRIP).................. 3 
四、 研究方法.......................................................................................................................... 4 
1. SER架設環境及操作安裝說明 ...................................................................................... 4 
2. TRIP Server架設環境及操作安裝說明.......................................................................... 6 
五、 結果與討論...................................................................................................................... 6 
六、 參考文獻.......................................................................................................................... 8 
七、 計畫成果自評.................................................................................................................. 8 
附錄一.............................................................................................................................................. 9 
附錄二............................................................................................................................................ 11 
附錄三............................................................................................................................................ 13 
 
 I
an inter-domain gateway location and routing 
protocol. Many of its concepts and behaviors 
were inherited from BGP. As to intra-domain 
routing, IETF developed another protocol named 
"Telephony Gateway REgistration Protocol 
(TGREP)". The goal of this project is to 
implement TRIP in a SIP-based environment 
based on a well-known and widely-used 
open-source SIP proxy server which is called SIP 
Express Router (SER). 
 
Keywords-Telephony Routing over IP (TRIP), 
Telephony Gateway REgistration Protocol 
(TGREP), Session Initiation Protocol (SIP) 
二、 研究動機與目的 
近年來網際網路電話服務的成功使得網際
網路電話閘道器之需求量隨之攀高，因此閘道
器之間的路由資訊需更易維護且滿足網際網路
電話路由的全域性。基於以上考量，由一跨領
域的網際網路電話閘道器路由協定負責在給定
一組電路交換網路上之終端機電話號碼後，決
定出能夠完成此通話呼叫之閘道器的 IP 位址
的作法是目前產界學界一致認同的最佳方案。
本計畫於第一年設計將TRIP與SIP代理伺服器
（Proxy Server）結合以協助處理閘道器的選
定，接著在第二年著手將設計理念落實，以充
分印證本計畫之高度實用性。這樣的理念不僅
為本計畫所採行，極力推動網際網路電話發展
的國外組織，如澳洲的AARNet，也有往此方向
研究發展趨勢。因此，本計畫的實行，將可獲
取許多與外國學者專家討論交流的機會。 
三、 文獻探討 
本節內容將介紹與本計畫實作相關之協
定、架構與運作機制。 
1. 會議初始協定（Session Initiation Protocol, 
SIP） 
早期的網際網路電話系統所使用的控制信
令 協 定 為 國 際 電 信 聯 盟 （ International 
Telecommunication Union – Telecommunication 
Standardization Sector, ITU-T）所制訂的H.323
協定。而過去網際網路電話發展過程中曾出現
出現許多技術性上的問題，最大的原因之一即
在於當初H.323主要是針對視訊會議所設計，其
協定內容過於複雜且缺乏彈性，除了缺乏一套
共同認可的相容性及互通性的測試方法外、各
家廠商亦各自為政，僅設計自身廠家所需的部
分協定，進而造成系統不相容或不互通等狀況， 
H.323的發展便因此受到相當程度的限制。 
SIP是繼H.323之後出現的新一代網際網路
電話控制信令協定，更精確地說，SIP是基植於
應用層的通用型控制信令協定，用以建立，修
改以及終止多媒體會議(Session)，可使用於多
媒體通訊的服務控制上(如網際網路電話等)。
雖然網際網路電話是其最廣為人知的應用，但
絕非是SIP唯一可搭配的選擇。自1996年IETF
的MMUSIC工作小組提出草稿文件起，其間歷
經十三個版本的修正，SIP最終在1999年正式成
為RFC文件（RFC-2543）。此後，SIP開始漸漸
嶄露頭角，IETF組織內亦增設了SIP專屬的工作
小組，經過不斷的討論修正之後，於2002年制
訂出現今採行的版本，也就是RFC-3261。 
SIP最大的優點之一便是與下層傳輸網路
間無任何相依關係，如此一來，不僅使開發者
更容易進行系統間的整合，其簡易性與高擴展
性的特色也造就了今日SIP成功取代H.323，更
重要的是，3GPP R5中也已明確指出未來將以
SIP為3G行動網路的連線控制協定。SIP 的名稱
對應與重新導向功能亦提供了對個人行動通訊
的支援，使用者無論移動到何處，對外皆可以
同一名稱提供連結點。SIP 架構中有幾個主要
的元件： 
(1) 使用者代理人（User Agent, UA）：即負責發
 2
通話呼叫接受能力也納入選擇閘道器的考
量依據，有可能可以達到某種程度的負載平
衡。 
(3) 通訊協定與特徵之相容性：若有閘道器無法
支援通話呼叫方所使用的控制信令協定或
媒體協定，通話呼叫的建立或進行便會出現
問題。故而相容性亦是影響閘道器選擇的重
要因素之一。 
(4) 商業關係：在現實生活中，由於將通話呼叫
導向電路交換網路時必定須支付相關費
用。因此，閘道器的所屬機構/單位不可能
將閘道器無限制地提供給任何使用者使
用，換言之，閘道器的提供者（provider）
必會對其使用者索費。 
(5) 提供者之策略：當使用者使用電話閘道器時
極有可能並非直接付費給閘道器提供者，而
是透過網際網路電話的服務提供者來作為
交易的媒介。而網際網路電話服務提供者可
能亦擁有自己所屬的閘道器。在此情況下，
網際網路電話服務提供者可根據其客戶對
其他提供者閘道器之使用狀況，而有相對應
的策略，並且，這些策略亦須在做閘道器的
選擇時被列入考量。 
(6) 使用者之策略：在某些狀況下，使用者可能
對於閘道器的選擇會有特別的需求，  例
如：控制協定相容性，特殊的功能，或者是
偏好的提供者等等。同樣的，這些需求亦要
列入選擇的考量之中。 
綜合以上的考量，我們可以得到一個結論：建
立一全域的閘道器目錄供使用者查詢一途缺乏
彈性，明顯不可行，因而在管理領域之間，勢
必需要一個通訊協定負責閘道器路由資訊的交
換，而本計劃所欲著手實作的目標："網際網路
通訊協定上的電話路由協定 "（ Telephony 
Routing over IP, TRIP）即可符合需求。TRIP 提
供了以下的功能： 
(1) 建立並維護提供者之間的同儕關係（peering 
relationship）。 
(2) 交換並維持提供者之間的電話閘道器路由
資訊之同步。 
(3) 避免因網際網路電話控制信令協定所造成
的路由迴圈（routing loop）。 
(4) 透過即時且可調整擴充的方式，將學習而得
的閘道器路由資訊轉傳給其他提供者。 
(5) 定義描述電話閘道器路由之資料的文法及
語意。 
TRIP 是一跨領域的網際網路電話閘道器路由
協定（inter-domain IP telephony gateway routing 
protocol）。當使用者輸入一組電話號碼後，TRIP
會根據特定的準則找出路由所需的電話閘道器
之IP位址。因此TRIP可以用來解決網際網路電
話在路由上的決策問題。 
四、 研究方法 
本計畫經過第一年研讀相關文件資料並規
劃所需之整體架構後，第二年便著手修改SIP代
理伺服器SER程式碼，以完成TRIP 協定之實
作，並進行功能測試。其中的重點方向包括完
成TRIP訊息格式之編碼及解碼之實作、設計並
實作電話路由資訊資料庫（Telephony outing 
Information Base, TRIB）、實作位置伺服器、
以及最後針對各種不同的系統環境及應用情況
進行測試；其中，位置伺服器之實作分為兩階
段進行，第一階段為有限狀態機之實現，第二
階段則為同儕會議（peer session）之建立與維
護、訊息確認、錯誤處理等等。開發過程中需
不時對照TRIP的標準規範文件，以保證修改後
的SER程式碼能與TRIP位置伺服器相容。茲將
相關作業環境設定說明如下： 
1. SER 架設環境及操作安裝說明 
我們所使用的安裝環境是在 Fedora core 4
之下，以往 SER 推新版的軟體時都會附上許多
套件，包含像是 RedHat，debian 以及 Gentoo
等的已編譯版套件，不過就目前而言 SER 的新
 4
p7694107@mail.ncku.edu.tw 
MySql password: 
new user added 
2. TRIP Server 架設環境及操作安裝說明 
由於 TRIP 的實作是在 Fedora Core 4 上完
成，所以安裝環境請使用 Fedora Core 4 以後的
版本，避免因較早版本的 Linux 不支援 TRIP 中
所用到的 API 而造成程式無法預期的錯誤或者
無法執行。TRIP Server 包含兩個部分，一個部
分是 TRIP server 的主體 TRIP core，另一個部分
是控制程序 Daemon control，可以用來新增靜
態路由或是查詢 TRIP server 的 routing table，安
裝步驟如下： 
(1) TRIP core安裝 
請切換到trip資料夾下，在此資料夾裡面包
含了src資料夾、LS_list、makefile。然後在
終端機模式中直接下make指令來產生執行
檔。 
(2) Daemon control安裝 
請切換到daemonctrl資夾，在此資料夾裡面
build資料夾、 src資料夾、 daemonctrl、
daemonctrl.exe.stackdump、makefile。然後
在終端機模式中直接下make指令來產生執
行檔。 
如此一來整個 TRIP server 就已經安裝完成，可
以啟動執行了。啟動執行的步驟如下： 
(1) 執行TRIP core，步驟如下： 
(a) 切換到終端機模式 
(b) 切換到trip資料夾 [cd /trip] 
(c) 執行trip.exe [./trip.exe] (需輸入參數) 
(2) 執行daemon control，步驟如下： 
(a) 切換到終端機模式 
(b) 切 換 到 daemonctrl 資 料 夾  [cd 
/daemonctrl] 
(c) 執 行 daemonctrl.exe [./daemonctrl.exe] 
(需輸入參數) 
TRIP 的 執 行 參 數 為 ”./trip [-m 
sendRec|send|receive] –i <itadNumber> -d <1|0>” 
(1) 在 –m 這個參數部份，若trip需要支援交換
routing information則下達 –m sendRec ，若
trip只需要支援傳送routing information則下
達 –m send，若trip只需要支援接收routing 
information則下達 –m receive。 
(2) 在 –i 這個參數後面所接的是指目前所在
的itadNumber，由管理者自行指定。 
(3) 在 –d 參數則是選擇要支持dynamic route
或者只支持static route。要支持dynamic route
則下達 –d <1>，只要支持static route 則下
達 –d <0>。 
五、 結果與討論 
本計劃在實作出電話路由協定之後，為了
針對 TRIP 協定進行功能性的驗證，將與 NTP 
VoIP 平台進行整合規劃如圖（一），此實驗環
境於臺北、新竹與臺南設立三個網際網路電話
管理領域(ITAD_TP, ITAD_HC, ITAD_TN)，並
於各 ITAD 內安裝一套支援 TRIP 的整合型
SIP 位置/代理伺服器(TP_LS, HC_LS, TN_LS)
與電話閘道器(TP_GW, HC_GW, TN_GW)，SIP 
伺服器與該處的校園網路連結並提供服務給
VoIP 使用者(TP_Host, HC_Host, TN_Host)；電
話閘道器則以電話介面連至該處的電信機房
 6
透過 TN_LS1/TN_GW2 至 TN_Phone1 與透過
TN_LS2/TN_GW2 至 TN_Phone2 建立連線。 
 
圖（二） 台南端批發商模式聚合路由測試架構
圖 
六、 參考文獻 
[1] RFC 2871 "A Framework for Telephony 
Routing over IP" 
[2] RFC 3219 "Telephony Routing over IP 
(TRIP)" 
[3] RFC 1771 "A Border Gateway Protocol 4 
(BGP-4)" 
[4] Internet-Draft "A Telephony Gateway 
Registration Protocol (TGREP)" 
[5] RFC 3261 "SIP: Session Initial Protocol" 
[6] SIP Express Router (SER) 
http://www.iptel.org/ser/ 
七、 計畫成果自評 
本計畫之研究內容主要在實作出一跨領域
的網際網路電話閘道器路由協定，與計畫書原
訂之執行目標可謂完全相符。雖然理論上此協
定應可與任何控制信令協定搭配，但基於計畫
執行時間之限制、現行各控制信令協定之普遍
性、以及系統執行效率之最佳化等因素考量，
本計畫僅針對 SIP 控制信令協定而設計，與當
出計畫書之預期目標完全一致。為與 SIP 協定
充分合作以提升系統效率，計畫成員將電話閘
道器路由協定與 SIP 控制信令協定中各自最重
要的元件-位置伺服器與 SIP 代理伺服器整合。
透過完全實作出電話閘道器路由協定 TRIP 以
及設計出 TRIP 位置伺服器專用的 SER 
module，便可完全達成當初計畫的目的，實現
一方便又成本低廉的電話閘道器管理解決方
案。而所建立起之平台雛型，亦可協助電話路
由協定之進階功能開發，例如安全認證與授權
等機制、商業使用需求、開發統計與計費系統
等等；長期來看，更可為異質平台間之電話路
由交換合作奠下更穩定的基礎。因此，無論以
學術或應用觀點來看，本計畫皆有相當程度的
貢獻，不僅可考慮將成果投稿至學術期刊，將
之整理後申請專利亦有高度可行性。 
 8
 10
技術特點 
透過完全實作出電話閘道器路由協定 TRIP 以及設計出 TRIP 位置
伺服器專用的 SER module，便可實現一方便又成本低廉的電話閘
道器管理解決方案。 
推廣及運用的價值 
而所建立起之平台雛型，亦可協助電話路由協定之進階功能開發，
例如安全認證與授權等機制、商業使用需求、開發統計與計費系統
等等；長期來看，更可為異質平台間之電話路由交換合作奠下更穩
定的基礎。因此，無論以學術或應用觀點來看，本計畫皆有相當程
度的貢獻。 
※ 1.每項研發成果請填寫一式二份，一份隨成果報告送繳本會，一份送 貴單位研發成
果推廣單位（如技術移轉中心）。 
※ 2.本項研發成果若尚未申請專利，請勿揭露可申請專利之主要內容。 
※ 3.本表若不敷使用，請自行影印使用。 
 12
一、 參加會議經過 
2007 年 WOC 會議於加拿大蒙特婁舉行，由 IASTED 主辦，時間從 5 月 30 號至 6
月 1 號共為期三天，開會地點位於蒙特婁市中心的 Montreal hotel 二樓。此次的會議包含
了 3 場 keynotes 與 3 場 tutorials，以及眾多 oral 與 poster presentations。此次大會將所有
的 oral 與 poster presentations 共分成 3 個 sessions，涵括了目前無線及光網路通訊領域中
每個重大研究方向。學生之 oral presentation 屬於第 3 個 session 'Wireless Networks and 
Emerging Technologies' (WNET)，報告時間為 6 月 1 號。參加此次會議的學者大部分為世
界各地的學校教授與博士生，其中來自台灣者便高達 10 多位。由於參加人數頗多，同時
間甚至有多達 3 個 sessions 同時進行，因此在參考大會所發予的會議手冊之後，選擇相
關研究領域以及有所興趣的主題來聆聽，在研討會的期間獲益良多。 
二、與會心得 
此次的會議聚集了世界各國的學者齊聚ㄧ堂，學生有幸能夠參加，藉此認識了許多
國內的老師與博士生，同時也因此有機會與外國學者交流，對於日後研究有了許多的啟
發。因為學生採用口頭報告的方式，在報告的時間上有所限制，有時候便無法充分表現
出自己的想法，相對之下，poster 的方式雖然似乎缺乏正式的感覺，但實際上 poster 的掌
握時間較長，能夠與感興趣者有較深入的討論與交流。經由此次參與國際會議，除了能
夠進一步了解各國學者研究學問的方式之外，學生在生活的態度方面亦有非當大的啟發
與感觸。 
follow-up investigation we observed that the minimum 
piconet problem is relevant to the inter-piconet scheduling 
issue. Hence, in this paper we proposed an enhanced version 
of PIPS algorithm, which appropriately copes with the 
minimum piconet problem so that the system performance 
can be improved to a certain extent. 
 
The rest of this paper is organized as follows. Section 2 
introduces PIPS, the inter-piconet scheduling algorithm on 
which this work is based. The other key point of section 2 is 
the minimum piconet problem. Our proposed scheme, 
named Enhanced PIPS algorithm (EPIPS) are described in 
section 3. In section 4, we evaluate the performance of 
EPIPS by simulation and give relevant discussion. Finally, 
we conclude this work in section 5. 
2.  Related Work 
 
2.1. The Elaboration of PIPS 
As we claimed in [5], the goal of PIPS is to retain the 
advantages brought by HOLD mode and overcome the scalability 
problem of LAA. Briefly speaking, the two key ideas of PIPS are 
learning and anticipation. In PIPS, the determination of the length 
of hold period is learning-based. That is, the hold period is 
estimated from the historical data within an observation range. The 
range size can be adjusted to adapt to traffic pattern. A smaller 
range is more appropriate to the pattern with larger variety while a 
more uniform environment can use a larger range. On the other 
hand, the length of cycle (i+1) and the maximum time a 
bridge stays in a piconet are estimated in the beginning of 
cycle i. More specifically, the anticipation of cycle length 
comes from the statistics learning of previous K cycles, i.e., 
the aforementioned observation range. With these 
information, the moment at which a bridge should switch 
back to its current piconet in cycle (i+1) can be determined 
at the time the bridge is leaving it in cycle i. 
 
Actually, PIPS is composed of three algorithms named 
switching, cycle length & sequencing, and MPT respectively. 
The switching algorithm judges whether the bridge should 
switch to the next piconet at this moment. If the decision is 
affirmative, the algorithm needs to further estimate and set 
the hold period of the piconet in which the bridge is 
currently active before switching is carried out. The mission 
of the second algorithm can be implied by its name. To 
adapt to the traffic variety, this algorithm is designated to 
determine the cycle length and the piconet sequence 
appearing in a cycle so that average packet delay can be 
reduced as possible. However, while trying to fulfill 
transmission load generated by each piconet, PIPS would 
not like to incur starvation effect either. Consequently, we 
need a upper limit of time period a bridge stays in a piconet 
and that is exactly what the MPT algorithm performs 
calculation for. The overall flow chart of PIPS, certainly 
including the relationship between the algorithms, can be 
depicted in Fig. 1.  
 
In the first cycle, a bridge has no idea of queue size 
employed to compute sequence policy, the value of MPT 
(the maximum length of the duration for which a bridge can 
stay in a piconet), and hold period, so it needs an initial 
procedure to set default values. The same reason and 
solution can be applied to information processing for the 
second cycle. However, PIPS can get information of queue 
size after the first cycle and use it to determine cycle length, 
the sequence of piconets, and whether the bridge should 
switch to the next piconet for cycle i, i ≥ 3. 
 
Is it the first cycle 
of the bridge? Initialization procedure for the bridge
Is it the beginning time
slot of a cycle?
1. Cycle length & Sequencing algorithm
2. MPT algorithm
Switching algorithm
Start
No
No
Yes
Yes
 
Fig. 1. The flow chart of PIPS 
 
2.2. The Minimum Piconet Problem 
As aforementioned, Bluetooth employs frequency hopping 
technique to avoid interference between piconets. Actually, 
this prevention design still cannot perfectly eliminate 
interference. When any two piconets use the identical 
frequency or even frequencies on adjacent band, 
interference would occur. We know that the number of 
hopping bands in 2.4 GHz ISM band is limited, hence the 
more piconets exist in a given geographic area, the more 
possible this phenomenon would arise. An effective solution 
to this issue is to minimize the number of piconets during 
scatternet formation [9]. 
 
For an established inter-piconet connection, the device 
which has initiated it is called the initiator and the one has 
accepted it is the acceptor. While setting up such a 
connection, the initiator will be the master and the acceptor 
will play the role of a slave. A piconet consisting of only 
one master and one slave unit is called a “minimum 
piconet” as illustrated in Fig. 2. If there are more minimum 
piconets, it will be more adverse to minimize the number of 
piconets under the same conditions. Intuitively, the roles of 
both devices prior to the establishment of their connection 
determine whether a minimum piconet is generated by this 
connection. For example, if the initiator is already a master 
in some piconet, the scenario is exactly that the acceptor 
unit will join the piconet mastered by the initiator 
irrespective of the role of the acceptor and no minimum 
piconet will be created. However, if the initiator is not a 
master, a minimum piconet (with the initiator as master) will 
be formed. In case the acceptor is a master, the minimum 
piconet can be avoided by role switching between
 14
 
Free device
Minimum piconet 
created
Free device
Be a slave of an 
associated piconet
Master
Slave
Bridge 
(a) (b)
 
Fig. 3. The initiator device is free and the acceptor device a slave
minimum piconet appears, as shown in Fig. 3(a), EPIPS 
would pick an existing associated piconet to incorporate the 
initiator device as a slave in it, as illustrated in Fig. 3(b). As 
to which associated piconet should be selected, we take two 
factors into account; one is traffic load and the other is 
transmission range. First, the initiator device must be within 
the transmission range of the bridge of the selected piconet. 
Furthermore, the offered traffic load is in proportion to the 
number of active slaves in a piconet if the issued traffic 
volume of each device is uniformly distributed. EPIPS has a 
tendency to select the piconet containing less active slaves. 
Another related problem is when the bridge should trigger 
the detection of minimum piconets. Learning from PIPS, 
EPIPS can merge the detection process into periodical 
procedures in the beginning of a cycle. 
2) Case 2: Both the initiator device and the acceptor 
device are slaves 
Fig. 4(a) is a general case of case 2, in which the initiator 
device joins only one piconet originally. As depicted in Fig. 
4(b), EPIPS would pick an associated piconet of the 
acceptor device to incorporate the initiator device as a slave 
in it. Actually, how EPIPS deals with case 2 is almost 
identical to that described in case 1. The only discrepancy 
exists in a special case of case 2, in which the initiator 
device is the bridge of a collection of piconets other than 
those associated with the acceptor device. Fig. 5(a) is an 
example of this special case. Employing the piconet 
avoidance scheme proposed in [9], EPIPS would determine 
a winner bridge and a loser bridge and then would assign 
the latter to be a slave of some piconet associated with the 
former. A winner bridge is the one belonging to more 
piconets in the minimum piconet relationship. As to the 
issue which piconet the loser bridge should be incorporated 
with, EPIPS follows the same criterion adopted in case 1. 
For example, the number of associated piconets
Minimum piconet 
created
Be a slave of an 
associated piconet
Master
Slave
Bridge 
(a) (b)
 
Fig. 4. Both the initiator device and the acceptor device are slaves 
 16
0200
400
600
800
1000
1200
1400
5 10 15 20 25 30
Arrival Rate
A
ve
ra
ge
 D
el
ay
 (s
lo
ts
)
EPIPS PIPS
 
Fig. 7. Delay performance of EPIPS and PIPS 
inter-piconet traffic in PIPS becomes intra-piconet traffic 
after the merging procedure in EPIPS is carried out. 
Intuitively, reducing the inter-piconet traffic volume can 
improve performance and the improvement is more 
significant with the increase of global traffic load in most 
cases. 
5.  Conclusion 
To continue our previous work on inter-piconet scheduling, 
we proposed an extension of PIPS algorithm, named EPIPS, 
in this paper. The critical issue of interest in EPIPS is the 
side effect upon inter-piconet scheduling brought by the 
minimum piconet problem. In simulation, we compared 
EPIPS with PIPS algorithm. From numerical results, we can 
see that EPIPS is superior to PIPS, both in average delay 
and throughput performance. The improvement results from 
the reason that EPIPS can effectively decrease number of 
piconets with which the bridge associated especially when 
there is any minimum piconet in a scatternet. Consequently, 
EPIPS can adapt to a dynamically varied scatternet topology 
well. 
 
References 
[1] Bluetooth SIG, http://www.bluetooth.com. 
[2] G. V. Záruba, S. Basagni, and I. Chlamtac, Bluetrees - 
scatternet formation to enable bluetooth-based ad hoc 
networks, Proc. IEEE ICC,  Helsinki, Finland, 2001, 
273-277. 
[3] S. Baatz, M. Frank, C. Kühl, P. Martini and C. Scholz, 
Bluetooth scatternets: an enhanced adaptive scheduling 
scheme, Proc. IEEE INFOCOM, New York, NY, 2002, 
782-790. 
[4] C. Cordeiro, S. Abhyankar, and D.P. Agrawal, Design 
and implementation of QoS-driven dynamic slot 
assignment and piconet partitioning algorithms over 
Bluetooth WPANs, Proc. IEEE INFOCOM, Hong 
Kong, 2004, 1252-1263. 
[5] C.-F. Hsu and S.-M. Hsu, A novel hold-mode-based 
adaptive inter-piconet scheduling algorithm in 
Bluetooth scatternets, Proc. IEEE WCNC, Las Vegas, 
NV, 2006, 469-474. 
[6] P. Johansson, R. Kapoor, M. Kazantzidis and M. Gerla, 
Rendezvous scheduling in Bluetooth scatternets, Proc. 
IEEE ICC 2002, New York, NY,  318-324. 
[7] T. Y. Lin and Y. C. Tseng, An adaptive sniff scheduling 
scheme for power saving in Bluetooth, IEEE Wireless 
Communications, Vol. 9, Dec. 2002, 92-103. 
[8] H. S. Liron, K. Ronen, S. Adrian, and Z. Gil, 
Load-adaptive inter-piconet scheduling in small-scale 
Bluetooth scatternets, IEEE Communications 
Magazine, Vol. 42, July 2004, 136-142. 
[9] A. S. Bhargava and D. M. Gruenbacher, Using Piconet 
Avoidance Techniques to Reduce Interference in 
Bluetooth Networks, Proc. IEEE CCNC 2004, Las 
Vegas, NV, pp. 65-70. 
0
1000
2000
3000
4000
5000
6000
5 10 15 20 25 30
Arrival Rate
Th
ro
ug
hp
ut
 (s
lo
ts
)
EPIPS PIPS
 
Fig. 8. Throughput performance of EPIPS and PIPS 
 18
