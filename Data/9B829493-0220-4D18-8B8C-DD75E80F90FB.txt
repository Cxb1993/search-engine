 1
行政院國家科學委員會專題研究計畫成果報告 
以法則為基礎之共生差分進化演算法於 
遞迴式補償性類神經模糊網路之設計及其應用 
A Rule-Based Symbiotic Differential Evolution for a Recurrent 
Compensatory Neuro-Fuzzy Network and Its Applications 
計畫編號：NSC 99-2218-E-150-047 
執行期限：99 年 8 月 1 日至 100 年 7 月 31 日 
主持人：陳政宏   國立虎尾科技大學 電機工程系 
計畫參與人員：廖彥雲、楊盛硯、黃柏智、謝昇佑、沈建宗、陳得勤 
 
中文摘要 
 
近年來，類神經模糊網路已經成為一
熱門的研究議題，並且應用在預測、控制、
辨識、決策等領域上。其重要的相關議題
包括：設計一精確的類神經模糊網路及設
計一效率高的學習演算法。本計劃的主要
目的是藉由一個以法則為基礎之共生差分
進化演算法設計一個類神經模糊網路，讓
其網路架構和參數最佳化。以法則為基礎
之共生差分進化演算法是利用以法則為基
礎的子族群建構網路系統，並且使用子族
群共生進化和各子族群自我演化，引導所
有可行解往好的解集合區域移動，以增進
全域搜尋能力。此外，這演算法也能自動
決定子族群數，並最佳化網路上的所有參
數。最後，在實驗中我們與其他方法比較，
以證實所提出的網路架構及其相關演算法
之有效性。 
 
關鍵詞：類神經模糊系統、共生進化、差
分進化演算法、熵量測 
 
Abstract 
 
This project proposes a Rule-based 
Symbiotic MOdified Differential Evolution 
(RSMODE) for Self-Organizing 
Neuro-Fuzzy Systems (SONFS). The 
RSMODE adopts a multi-subpopulation 
scheme that uses each individual represents a 
single fuzzy rule and each individual in each 
subpopulation evolves separately. The 
proposed RSMODE learning algorithm 
consists of structure learning and parameter 
learning for the SONFS model. The structure 
learning can determine whether or not to 
generate a new rule-based subpopulation 
which satisfies the fuzzy partition of input 
variables using the entropy measure. The 
parameter learning combines two strategies 
including a subpopulation symbiotic 
evolution and a modified differential 
evolution. The RSMODE can automatically 
generate initial subpopulation and each 
individual in each subpopulation evolves 
separately using a modified differential 
evolution. Finally, the proposed method is 
applied in various simulations. Results of this 
project demonstrate the effectiveness of the 
proposed RSMODE learning algorithm. 
 
Keywords: Neuro-fuzzy systems, symbiotic 
evolution, differential evolution, 
entropy 
1. 緣由與目的 
Neuro-fuzzy systems (NFSs) [1]–[3] 
have been demonstrated to solving many 
engineering problems. They combine the 
capability of neural networks to learn from 
processes and the capability of fuzzy 
reasoning under linguistic information 
pertaining to numerical variables. On the 
other hand, recent development in genetic 
algorithms (GAs) has provided a method for 
neuro-fuzzy system design. Genetic fuzzy 
systems (GFSs) [4]–[6] hybridize the 
approximate reasoning of fuzzy systems with 
the learning capability of genetic algorithms. 
GAs represent highly effective 
techniques for evaluating system parameters 
 3
two strategies including a subpopulation 
symbiotic evolution (SSE) and a modified 
differential evolution (MODE). The SSE in 
which each individual represents a single 
fuzzy rule differs from original symbiotic 
evolution [27]. Each subpopulation allows 
the rule itself to evolve. The MODE adopts a 
method to effectively search between the best 
individual and randomly chosen individuals.  
2. 研究方法 
2.1. Structure of SONFS   
This subsection describes the SONFS 
[25], which uses a nonlinear combination of 
input variables (FLNN) [26]. Each fuzzy rule 
corresponds to the FLNN, comprising a 
functional expansion of input variables. The 
SONFS model realizes a fuzzy if-then rule in 
the following form. 
Rulej: 
NjNijijj AxAxAxAx  is ˆ and ...  is ˆ and ...  is ˆ and  is ˆ IF 2211  
 
MMjjj
M
k
kkjj
www
wy
φφφ
φ
+++=
=∑
=
...
ˆ
 THEN
2211
1
'
       (1) 
where ixˆ  and 
'
jyˆ  are the input and local 
output variables, respectively; Aij is the 
linguistic term of the precondition part; N is 
the number of input variables; wkj is the link 
weight of the local output; kφ  is the basis 
trigonometric function of input variables; M 
is the number of basis function, and Rulej is 
the jth fuzzy rule. 
. . .
. . . . . .
. . .
. . .
1ϕ 2ϕ Mϕ
∑ ∑
∏ ∏ ∏
∑
1xˆ 2xˆ
1xˆ 2xˆ
'yˆ1 'yˆ2 'yˆ3
yˆ
Figure 1: Structure of the SONFS model. 
The structure of the SONFS model is 
shown in Fig. 1, in which linguistic layer by a 
Gaussian-type membership function, )ˆ( iA xijµ , 
defined by 








−
−= 2
2]ˆ[
exp)ˆ(
ij
iji
iA
mx
x
ij σ
µ        (2) 
where mij and ijσ  are the mean and variance 
of the Gaussian membership function, 
respectively, of the jth term of the ith input 
variable xi. 
The collection of fuzzy sets { }Njjj AA ,...,1=A  pertaining to the 
precondition part of Rulej forms a fuzzy 
region that can be regarded as a 
multi-dimensional fuzzy set whose 
membership function is determined by 
∏
=
=
N
i
iA xx ijj
1
)ˆ()ˆ( µµA .        (3) 
Nodes in consequent layer only receive 
the signal, which are the output from rule 
layer and a functional link neural network. 
Finally, the output node integrates all of the 
actions recommended by rule layer and 
consequent layer and acts as a defuzzifier 
with, 
∑
∑ ∑
∑
∑
=
= =
=
=






== R
j
R
j
M
k
kkj
R
j
R
j
j
x
wx
x
yx
y
j
j
j
j
1
1 1
1
1
'
)ˆ(
)ˆ(
)ˆ(
ˆ)ˆ(
ˆ
A
A
A
A
µ
φµ
µ
µ
  (4) 
where R is the number of fuzzy rules, yˆ  is 
the output of the SONFS model, wkj is the 
corresponding link weight of functional link 
neural network, and kφ  is the functional 
expansion of input variables [26]. The 
functional expansion uses a trigonometric 
polynomial basis function, given by 
[ ])ˆ (cos )ˆ (sin ˆ )ˆ (cos  )ˆ (sin ˆ 222111 xxxxxx pipipipi  
for two-dimensional input variables. 
Therefore, M is the number of basis functions, 
NM ×= 3 , where N is the number of input 
variables. 
2.2. A Rule-Based Symbiotic Modified 
Differential Evolution for the SONFS 
Model 
This section represents the proposed 
RSMODE for the SONFS. The RSMODE 
comprises structure learning and parameter 
 5
Figure 3: Coding a fuzzy rule into an individual in the 
proposed RSMODE method. 
Before the RSMODE method is 
designed, the individuals that will constitute 
R initial subpopulation must be created. The 
first step in structure learning is to create the 
initial first individual in each subpopulation 
to satisfy the fuzzy rule partition of input 
variables. The fuzzy rule partition strategy 
can determine whether a new rule should be 
extracted from the training data and 
determine the number of fuzzy rules in the 
universal of discourse of each input variable, 
since one cluster in the input space 
corresponds to one potential fuzzy logic rule. 
For each incoming data ixˆ , the rule firing 
strength can be regarded as the degree to 
which the incoming data belongs to the 
corresponding cluster. Entropy measure 
between each data point and each 
membership function is calculated based on a 
similarity measure. A data point of closed 
mean will has lower entropy. Therefore, the 
entropy values between data points and 
current membership functions are calculated 
to determine whether or not to add a new rule 
into the initial first individual and create a 
new rule-based subpopulation space. For 
computational efficiency, the entropy 
measure can be calculated using the firing 
strength from )ˆ( iA xijµ  as follow;  
∑
=
−=
N
i
ijijj DDEM
1
2log          (6) 
where ( )1)ˆ(exp −= iAij xuD ij  and ]1,0[∈jEM . 
According to Eq. (6), the measure is used to 
generate a new fuzzy rule and new functional 
link bases for new incoming data is described 
as follows. The maximum entropy measure 
jRj
EMEM
≤≤
=
1max
max           (7) 
is determined, where R is the number of 
existing rules. If EMEM ≤max , then a new 
rule and a new rule-based subpopulation 
space are generated, where ]1,0[∈EM  is a 
prespecified threshold. 
Once a new rule has been generated, the 
next step is to assign the initial first 
individual in the new rule-based 
subpopulation by the initial mean and 
variance to the new membership function and 
the corresponding link weight. Hence, the 
mean, variance and weight for the new rule 
are set as follows; 
iij xm ˆ=              (8) 
initij σσ =             (9) 
]1 ,1[−= randomwkj         (10) 
where ixˆ  is the current input data and initσ  
is a prespecified constant. 
The second step is to create other 
individuals in each subpopulation according 
to a range of the initial first individual. The 
following formulations show the production 
of the other individuals. 
Mean: 
ijij randommdIndividual σ×+= ]1,0[][
 
where d=1,3,…,2×N-1          (11) 
Variance: 
ijrandomdIndividual σ××= ]1,0[2][ , 
  where d=2,4,…,2×N           (12) 
Other parameters:  
 ]1 ,1[][ −= randomdIndividual  
 where d>2×N               (13) 
where d is the site of each individual and mij 
and σij are the corresponding mean and 
variance, respectively, of the initial first 
individual. 
2.2.2. Parameter Learning 
The parameter learning combines two 
strategies including a subpopulation 
symbiotic evolution (SSE) and a modified 
differential evolution (MODE). Each 
subpopulation allows the individual (rule) 
itself to evolve by evaluating the composed 
fuzzy system. Figure 4 shows the structure of 
the individual in the RSMODE. The 
parameter learning process is described 
step-by-step below. 
Step 1: Generate the Initial Best Fuzzy 
System 
In this step, we orderly select the first 
individual from each subpopulation, and 
compose a fuzzy system as the initial best 
fuzzy system. 
 7
when selecting survivors. First, the current 
composed fuzzy system embeds the current 
individual g,kx  into the best fuzzy system 
and the trial composed fuzzy system embeds 
the trial individual 1+g,ku  into the best fuzzy 
system. Second, a knockout competition is 
played between the current composed fuzzy 
system and the trial composed fuzzy system, 
and the corresponding individual of the 
winner is selected deterministically based on 
objective function values and promoted to 
the next phase. In this project, we adopt a 
fitness function (i.e., objective function) to 
evaluate the performance of these composed 
fuzzy systems. The fitness function is defined 
as follows. 
∑
=
−+
=
tN
l
ll
t
yy
N
F
1
2)(1  1
1
 
  (16) 
where yl represents the model output of the 
lth data; ly  represents the desired output of 
the lth data, and Nt represents the number of 
the training data. 
Step 3: Update the Best Fuzzy System 
Compare the fitness value of the current 
composed fuzzy system, the trial composed 
fuzzy system and the best fuzzy system. If the 
fitness value of the current composed fuzzy 
system exceeds those of the best fuzzy 
system, then the best fuzzy system is replaced 
with the current composed fuzzy system. If 
the fitness value of the trial composed fuzzy 
system exceeds those of the best fuzzy 
system, and then the best fuzzy system is 
replaced with the trial composed fuzzy 
system. 
Step 4: Mutation 
After the above process yielded 
offspring, no new information is introduced 
to the each subpopulation at the site of an 
individual. As a source of new sites, mutation 
should be used sparingly because it is a 
random search operator. In the following 
simulations, a mutation rate was set to 
1/(2*N+M), meaning that, on average, only 
one trial parameter is mutated, where N is the 
number of input variables, M is the number 
of basis function of SOFNS, and 2*N+M is 
the length of each individual. Mutation is an 
operator that randomly alters the allele of a 
element. The mutation adopted in MODE to 
yield diversity. The individual suffers from a 
mutation to avoid falling in a local optimal 
solution and to ensure the searching capacity 
of approximate global optimal solution. 
Figure 6 shows the mutation of an individual. 
The mutation value is generated according to 
Eqs. (11)-(13), where mij and σij are the 
corresponding mean and variance, 
respectively, of the current individual. 
Following the mutation step, a new 
individual can be introduced into the each 
subpopulation. 
j2σj1σ ijσ
j2σj1σ ijσ
Figure 6: A mutation operation in the RSMODE. 
3. 實験結果與討論 
This project evaluated the performance 
of the proposed RSMODE for a SONFS to 
control nonlinear systems. This section 
presents several examples and compares the 
performance with that of other methods. In 
the nonlinear system control problems, 
SONFS-RSMODE is adopted to design 
controllers in two simulations - control of the 
ball and beam system [29] and control of 
backing up the truck [30]. Table 1 presents 
the initial parameters before learning used in 
the two computer simulations. 
Table 1: Initial parameters before learning. 
Parameter Value 
Population Size 50 
Maximum Number of 
Generation 2000 
Crossover Rate 0.9 
Mutation Rate 1/(2*N+M) 
Coding Type Real Number 
Example 1: Control of the Ball and Beam 
System 
Figure 13 shows the ball and beam 
 9
 
Figure 15: Responses of ball and beam system 
controlled by SONFS-RSMODE controller (solid 
curves) and SONFS-RSDE controller (dotted curves) 
under four initial conditions. 
 
Figure 16: Responses of four states of the ball and 
beam system under the control of the 
SONFS-RSMODE controller. 
Table 3: Comparison of performance of various 
controllers to control of ball and beam system. 
Method RSMODE RSDE DE GA 
Fitness Value 
(Avg) 0.9041 0.8737 0.8516 0.8287 
Fitness Value 
(Best) 0.9653 0.9447 0.9441 0.9131 
Example 2: Control of Backing Up the 
Truck 
Backing a truck into a loading dock is 
difficult. It is a nonlinear control problem for 
which no traditional control method exists 
[30]. Figure 17 shows the simulated truck 
and loading zone. The truck position is 
exactly determined by three state variables 
φ , x and y, where φ  is the angle between 
the truck and the horizontal, and the 
coordinate pair (x, y) specifies the position of 
the center of the rear of the truck in the plane. 
The steering angle θ of the truck is the 
controlled variable. Positive values of θ 
represent clockwise rotations of the steering 
wheel and negative values represent 
counterclockwise rotations. The truck is 
placed at some initial position and is backed 
up while being steered by the controller. The 
objective of this control problem is to use 
backward only motions of the truck to make 
the truck arrive in the desired loading dock 
(xdesired, ydesired) at a right angle (φ desired=90°). 
The truck moves backward as the steering 
wheel moves through a fixed distance (df) in 
each step. The loading region is limited to the 
plane [0,100] × [0,100]. 
 
Figure 17: Diagram of simulated truck and loading 
zone. 
The input and output variables of the 
SONFS-RSMODE controller must be 
specified. The controller has two inputs, 
truck angle φ  and cross position x. When 
the clearance between the truck and the 
loading dock is assumed to be sufficient, the 
y coordinate is not considered as an input 
variable. The output of the controller is the 
steering angle θ . The ranges of the 
variables x, φ  and θ are as follows. 
100x0 ≤≤           (23) 
°≤≤°− 27090 φ         (24) 
°≤≤°− 3030 θ          (25) 
The equations of backward motion of 
the truck are, 








−
+
=+
++=+
++=+
−
)(sin)(sin)(cos
)(sin)(cos)(sin
tan)1(
)(sin)(cos)()1(
)(cos)(cos)()1(
1
kkdkl
kkdkl
k
kkdkyky
kkdkxkx
f
f
f
f
θφφ
θφφφ
φθ
φθ
(26) 
where l is the length of the truck. Equation 
(26) yields the next state from the present 
state. 
Learning involves several attempts, each 
starting from an initial state and terminating 
when the desired state is reached; the SONFS 
is thus trained. In initialization phase, 7 
subpopulations are generated. This example 
 11
4. 結論 
This project proposes a RSMODE for a 
SONFS. The proposed RSMODE learning 
algorithm consists of structure learning to 
generate initial rule-based subpopulation, and 
parameter learning to adjust the SONFS 
parameters. The proposed RSMODE learning 
algorithm allows that each individual in each 
subpopulation evolves separately using a 
modified differential evolution. The 
experimental results demonstrate that the 
proposed RSMODE can obtain a better 
performance than other existing methods 
under some circumstances. 
5. 參考文獻 
[1]  C. T. Lin and C. S. G. Lee, Neural Fuzzy Systems: 
A Neuro-Fuzzy Synergism to Intelligent System, 
NJ: Prentice-Hall, 1996. 
[2]  D. Nauck, F. Klawoon, R. Kruse, Foundations of 
Neuro-Fuzzy Systems, New York: John Wiley, 
1997. 
[3]  R. Fuller, Introduction to Neuro-Fuzzy Systems, 
New York: Physica-Verlag, 1999. 
[4]  E. Sanchez, T. Shibata, L. A. Zadeh, Genetic 
Algorithms and Fuzzy Logic Systems: Soft 
Computing Perspectives, Singapore: World 
Scientific, 1997. 
[5]  O. Cordon, F. Herrera, F. Hoffmann, L. 
Magdalena, Genetic Fuzzy Systems-Evolutionary 
Tuning and Learning of Fuzzy Knowledge Bases, 
Singapore: World Scientific, 2001. 
[6]  P. P. Angelov, Evolving Rule-Based Models: A 
Tool for Design of Flexible Adaptive Systems, 
Physica-Verlag, Heidelberg, 2002. 
[7]  B. Carse, T. C. Fogarty, and A. Munro, 
“Evolving fuzzy rule based controllers using 
genetic algorithms,” Fuzzy Sets Syst., vol. 80, pp. 
273-293, June 1996. 
[8]  F. Herrera, M. Lozano, and J. L. Verdegay, 
“Tuning fuzzy logic controllers by genetic 
algorithms,” Int. J. Approx. Reas., vol. 12, pp. 
299-315, Apr./May 1995. 
[9]  A. Homaifar and E. McCormick, “Simultaneous 
design of membership functions and rule sets for 
fuzzy controllers using genetic algorithms,” IEEE 
Trans. Fuzzy Syst., vol. 3, pp. 129-139, May 
1995. 
[10]  J. Velasco, “Genetic-based on-line learning for 
fuzzy process control,” Int. J. Intell. Syst., vol. 13, 
pp. 891-903, 1998. 
[11]  H. Ishibuchi, T. Nakashima, and T. Murata, 
“Performance evaluation of fuzzy classifier 
systems for multidimensional pattern 
classification problems,” IEEE Trans. Syst., Man, 
Cybern.-Part B: Cybern., vol. 29, pp. 601-608, 
1999. 
[12]  O. Cordon, M. J. del Jesus, F. Herrera, and M. 
Lozano, “MOGUL: A methodology to obtain 
genetic fuzzy rule-based systems under the 
iterative rule learning approach,” Int. J. Intell. 
Syst., vol. 14, pp. 1123-1153, 1999. 
[13]  A. Gonzalez and R. Perez, “SLAVE: A genetic 
learning system based on an iterative approach,” 
IEEE Trans. Fuzzy Syst., vol. 27, pp. 176-91, Apr. 
1999. 
[14]  M. Russo, “FuGeNeSys: a fuzzy genetic neural 
system for fuzzy modeling,” IEEE Trans. Fuzzy 
Systems, vol. 6, pp. 373-388, 1998. 
[15]  I. F. Chung, C. J. Lin, and C. T. Lin, “A 
GA-based fuzzy adaptive learning control 
network,” Fuzzy Sets and Systems, vol. 112, no. 1, 
pp. 65-84, 2000. 
[16]  G. Alpaydin, G. Dandar, and S. Balkir, 
“Evolution-based design of neural fuzzy 
networks using self-adapting genetic 
parameters,” IEEE Trans. Fuzzy Systems, vol. 10, 
no. 2, pp. 211-221, 2002. 
[17]  R. Storn and K. V. Price, “Differential 
evolution-A simple and efficient heuristic for 
global optimization over continuous spaces,” J. 
Global Opt., vol. 11, no. 4, pp. 341-359, Dec. 
1997. 
[18]  R. Storn, “System design by constraint adaptation 
and differential evolution,” IEEE Trans. 
Evolutionary Computation, vol. 3, no. 1, pp. 
22-34, Apr. 1999. 
[19]  K. V. Price, R. M. Storn, and J. A. Lampinen, 
Differential Evolution: A Practical Approach to 
Global Optimization, Germany: Springer-Verlag, 
2005. 
[20]  Z. Yang, K. Tang, and X. Yao, “Differential 
evolution for high-dimensional function 
optimization,” IEEE Congress on Evolutionary 
Computation, pp. 3523-3530, Sep. 2007. 
[21]  H. R. Cai, C. Y. Chung, and K. P. Wong, 
“Application of differential evolution algorithm 
for transient stability constrained optimal power 
flow,” IEEE Trans. on Power Systems, vol. 23, 
no. 2, pp. 514-522, May 2008. 
[22]  S. Rahnamayan, H. R. Tizhoosh, and M. M. A. 
Salama, “Opposition-based differential 
evolution,” IEEE Trans. on Evolutionary 
Computation, vol. 12, no. 1, pp. 107-125, Feb. 
2008. 
[23]  S. L. Cheng and C. Hwang, “Optimal 
approximation of linear systems by a differential 
evolution algorithm,” IEEE Trans. on Systems, 
Man and Cybernetics, Part A, vol. 31, no. 6, pp. 
698-707, Nov. 2001. 
[24]  R. Joshi and A. C. Sanderson, “Minimal 
representation multisensor fusion using 
differential evolution,” IEEE Trans. on Systems, 
Man and Cybernetics, Part A, vol. 29, no. 1, pp. 
63-76, Jan. 1999. 
[25]  C. H. Chen, C. T. Lin, and C. J. Lin, “A 
functional-link-based fuzzy neural network for 
temperature control,” 2007 IEEE Symposium on 
 1
 
國科會補助專題研究計畫項下出席國際學術會議心得報告 
                                    日期： 100 年 10 月 1 日 
一、參加會議經過 
此研討會－ICSSE 2011，International Conference on System Science and Engineering
為系統工程與科學領域最重要的年度國際會議，同時也被收錄在 IEEE Xplore 資料庫
中。系統科學與工程之研究橫跨電子、電機、通訊、資訊、管理、工工、工管等多項領
域，範圍廣泛，造就了系統整合的蓬勃發展。本次會議總共分成三天進行，三天的議程
中包含開幕式、四場貴賓演講及二十場議程演講均順利進行，會議過程中與會的學者十
分熱絡，除了在議程中討論及分享外，各議程之間所安排茶敘時間，也隨處可見學者們
互動的情形。而我投稿的會議論文也在六月八日下午發表，並與與會人員互相討論及分
享其成果。之後的議程，我只找自己有興趣的主題參與，包括 Fuzzy System、Neural 
Network、Evolution Algorithm 等主題。 
 
計畫編號 NSC 99－2218－E－150－047－ 
計畫名稱 以法則為基礎之共生差分進化演算法於遞迴式補償性類神經模糊網路之設計及其應用 
出國人員
姓名 陳政宏 
服務機構
及職稱 
國立虎尾科技大學電機工程系 
助理教授 
會議時間 100 年 6 月 8 日至 100 年 6 月 10 日 會議地點 澳門 
會議名稱 
(中文)2011 系統科學與工程國際研討會 
(英文) 2011 International Conference of System Science and Engineering 
(ICSSE 2011) 
發表論文
題目 
(中文)以法則為基礎之共生差分進化演算法於自我組織類神經模糊系統 
( 英文 ) A Rule-Based Symbiotic Modified Differential Evolution for 
Self-Organizing Neuro-Fuzzy Systems 
空間用量: 896.1MB (87.5%)  5KB 
      
1/38     
日期: Wed, 13 Apr 2011 14:03:27 +0800 (CST)  
寄件者: ICSSE2011 <icsse2011@orion.ee.ntust.edu.tw>        
收件者: "Chen, Cheng-Hung " <chchen.ee@nfu.edu.tw>
主旨: ICSSE2011 paper status notification
完全表頭
詳列附件
Dear Author(s):
The ICSSE 2011 Program Committee is pleased to inform you that your paper
Manuscript Title (Paper ID):
#00027 A Rule-Based Symbiotic Modified Differential Evolution for Self-Organizing Neuro-Fuzzy Systems
Name: Dr. Cheng-Hung Chen
has been accepted for the 2011 International Conference of System Science and Engineering.
Please prepare your final camera-ready manuscript and submit it according to the notes below.
Corresponding authors who received this mail are kindly requested to forward this mail to their
co-author(s).
1. To see the review comments for the final publication, follow the steps below.
   a. Visit http://conference.iis.sinica.edu.tw/Conference-Submission/servlet/Member
/PersonManipulation?FunctionName=SubmissionStatus&PageAction=submitPaper&actionConference=71
   b. Use your account and password for submission to log into the system.
ID: chchen.ee@nfu.edu.tw, Password: 3H4UY9FYX
   c. Find "Article Status" in the "Submission Status" section.
   d. Click "Accept" under "Article Status" to see the review comments.
2. Please verify that your camera-ready paper complies with the format instructions at
http://www.fst.umac.mo/icsse2011/paper_template.html . The template and the format verification
procedure can also be found there.
IMPORTANT: All authors must submit their final camera-ready papers before May 3, 2011 even if there
are no changes to the paper. Failure to do so may result in the paper not appearing in the proceedings.
Your Final Manuscript must be VERIFIED to be IEEE Xplore compatible. Click here to convert your Final
Manuscript to an IEEE Xplore compatible PDF file or check your PDF file for IEEE Xplore compliance.
(Use Conference ID: ICSSE11xx )
3. Upload your camera-ready paper by visiting http://conference.iis.sinica.edu.tw/Conference-Submission
/servlet/Member/PersonManipulation?FunctionName=SubmissionStatus&PageAction=submitPaper&
actionConference=71. After login, click "Upload/Update Final Paper" and follow the instructions. When
the message of "Upload Final Paper Success" appears, the upload procedure is complete. In addition,
all accepted papers must be accompanied with an IEEE Copyright Form. When you complete your
upload procedure, you must also click a button of "Click Here" to proceed to the online process to
complete the IEEE Electronic Copyright Form. In case this fails, you can find another form at:
http://www.ieee.org/documents/ieeecopyrightform.pdf. Download the form and print it out. Be sure to
indicate the Paper ID and Session (Regular or Special) on the form. Lastly, send the completed form to
ICSSE2011 (email: icsse2011@orion.ee.ntust.edu.tw). Only do this if you were unable to submit the
IEEE Electronic Copyright Form.
IMPORTANT: No paper without a completed IEEE Copyright Transfer Form will be published.
4. For a paper to be published in the ICSSE2011 proceedings, at least one of the authors must register.
When submitting registration, please key in your paper ID to register your paper. For additional papers
of an author, NT$ 4700 per additional paper will be charged. For a paper that exceeds six pages, there
will be an extra NT$ 3300 charge for each additional page. No papers exceeding eight pages will be
accepted in the proceedings.
IMPORTANT: In order for the paper to be published in the proceedings, at least one of authors for each
paper must register by May 10, 2011. Without Registering, your paper will not appear in the
proceedings.
chchen.ee@nfu.edu.tw - 896.1MB (87.5%) - 04/13/2011 10:05:49 pm ... http://sunws.nfu.edu.tw/cgi-bin/openwebmail/openwebmail-read.pl?ses...
1／2 2011/4/13 下午 10:09
A Rule-Based Symbiotic Modified Differential 
Evolution for Self-Organizing Neuro-Fuzzy Systems 
Cheng-Hung Chen, Member, IEEE
Department of Electrical Engineering 
National Formosa University 
Yunlin County 632, Taiwan, R.O.C. 
E-mail: chchen.ee@nfu.edu.tw 
Cheng-Jian Lin, Member, IEEE
Department of Computer Science and 
Information Engineering 
National Chin-Yi University of Technology 
Taichung County 411, Taiwan, R.O.C. 
Yen-Yun Liao 
Department of Electrical Engineering 
National Formosa University 
Yunlin County 632, Taiwan, R.O.C. 
Abstract—This study proposes a rule-based symbiotic modified 
differential evolution (RSMODE) for self-organizing neuro-fuzzy 
systems (SONFS). The RSMODE adopts a multi-subpopulation 
scheme that uses each individual represents a single fuzzy rule 
and each individual in each subpopulation evolves separately. 
The proposed RSMODE learning algorithm consists of structure 
learning and parameter learning for the SONFS model. The 
structure learning can determine whether or not to generate a 
new rule-based subpopulation which satisfies the fuzzy partition 
of input variables using the entropy measure. The parameter 
learning combines two strategies including a subpopulation 
symbiotic evolution and a modified differential evolution. The 
RSMODE can automatically generate initial subpopulation and 
each individual in each subpopulation evolves separately using a 
modified differential evolution. Finally, the proposed method is 
applied in various simulations. Results of this study demonstrate 
the effectiveness of the proposed RSMODE learning algorithm. 
Keywords- Neuro-fuzzy systems; symbiotic evolution; 
differential evolution; entropy measure. 
I. INTRODUCTION
Neuro-fuzzy systems (NFSs) [1]-[3] have been 
demonstrated to solving many engineering problems. They 
combine the capability of neural networks to learn from 
processes and the capability of fuzzy reasoning under linguistic 
information pertaining to numerical variables. On the other 
hand, recent development in genetic algorithms (GAs) has 
provided a method for neuro-fuzzy system design. Genetic 
fuzzy systems (GFSs) [4]-[6] hybridize the approximate 
reasoning of fuzzy systems with the learning capability of 
genetic algorithms. 
Similar to GAs, differential evolution (DE) [7]-[9] also 
belongs to the broad class of evolutionary algorithms, but DE 
has many advantages such as the strong search ability and the 
fast convergence ability over GAs or any other traditional 
optimization approach, especially for real valued problems [9]. 
In addition, the DE algorithm has gradually become more 
popular and has been used in many practical areas, mainly 
many researches [10]-[14] demonstrated that DE is robust, 
simple in implementation and use, easy to understand, and 
requires only a few control parameters. 
This study proposes a rule-based symbiotic modified 
differential evolution (RSMODE) for a self-organizing neuro-
fuzzy system (SONFS). The neuro-fuzzy system is based on 
our previous research [15], and combines a fuzzy system with a 
functional link neural network (FLNN) [16]. The consequent 
part of the fuzzy rules that corresponds to an FLNN comprises 
the functional expansion of input variables. 
The proposed RSMODE learning algorithm consists of 
structure learning to generate initial rule-based subpopulation, 
and parameter learning to adjust the SONFS parameters. The 
structure learning can determine whether or not to generate a 
new rule-based subpopulation which satisfies the fuzzy 
partition of input variables. Initially, there is not any 
subpopulation. The rule-based subpopulation is automatically 
generated from training data by entropy measure. The 
parameter learning combines two strategies including a 
subpopulation symbiotic evolution (SSE) and a modified 
differential evolution (MODE). The SSE in which each 
individual represents a single fuzzy rule differs from original 
symbiotic evolution [17]. Each subpopulation allows the rule 
itself to evolve. The MODE adopts a method to effectively 
search between the best individual and randomly chosen 
individuals. 
II. STRUCTURE OF SONFS 
This subsection describes the self-organizing neuro-fuzzy 
system (SONFS) [15], which uses a nonlinear combination of 
input variables (FLNN) [16]. Each fuzzy rule corresponds to 
the FLNN, comprising a functional expansion of input 
variables. Figure 1 shows the structure of the SONFS. The 
SONFS model realizes a fuzzy if-then rule in the following 
form. 
Rulej: NjNijijj AxAxAxAx isˆand...isˆand...isˆandisˆIF 2211
MMjjj
M
k
kkjj
www
wy
φφφ
φ
+++=
=¦
=
...
ˆTHEN
2211
1
'
                         (1) 
where ixˆ  and 
'ˆ jy  are the input and local output variables, 
respectively; Aij is the linguistic term of the precondition part; 
N is the number of input variables; wkj is the link weight of the 
local output; kφ  is the basis trigonometric function of input 
variables; M is the number of basis function, and Rulej is the jth 
fuzzy rule. 
978-1-61284-471-8/11/$26.00 ©2011 IEEE
Proceedings of 2011 International Conference on System Science and Engineering, Macau, China - June 2011
165
'
min_
'
max_
'
min_
'
ˆˆ
ˆˆ
ˆ
ii
ii
i xx
xx
x
−
−
=                              (2) 
where ixˆ  is the value after normalization; 
'ˆix  is the vector of 
the ith dimension to be normalized; ' min_ˆix  is the minimum 
value of vector 'ˆix ;
'
max_ˆix  is the maximum value of vector 
'ˆix .
Before the RSMODE method is designed, the individuals 
that will constitute R initial subpopulation must be created. The 
first step in structure learning is to create the initial first 
individual in each subpopulation to satisfy the fuzzy rule 
partition of input variables. The fuzzy rule partition strategy 
can determine whether a new rule should be extracted from the 
training data and determine the number of fuzzy rules in the 
universal of discourse of each input variable, since one cluster 
in the input space corresponds to one potential fuzzy logic rule. 
For each incoming data ixˆ , the rule firing strength can be 
regarded as the degree to which the incoming data belongs to 
the corresponding cluster. Entropy measure between each data 
point and each membership function is calculated based on a 
similarity measure. A data point of closed mean will has lower 
entropy. Therefore, the entropy values between data points and 
current membership functions are calculated to determine 
whether or not to add a new rule into the initial first individual 
and create a new rule-based subpopulation space. For 
computational efficiency, the entropy measure can be 
calculated using the firing strength from )ˆ( iA xijμ  as follow;  
¦
=
−=
N
i
ijijj DDEM
1
2log                        (3) 
where ( )1)ˆ(exp −= iAij xuD ij  and ]1,0[∈jEM . According to Eq. 
(3), the measure is used to generate a new fuzzy rule and new 
functional link bases for new incoming data is described as 
follows. The maximum entropy measure 
jRj
EMEM
≤≤
=
1max
max                        (4) 
is determined, where R is the number of existing rules. If 
EMEM ≤max , then a new rule and a new rule-based 
subpopulation space are generated, where ]1,0[∈EM  is a 
prespecified threshold. 
Once a new rule has been generated, the next step is to 
assign the initial first individual in the new rule-based 
subpopulation by the initial mean and variance to the new 
membership function and the corresponding link weight. 
Hence, the mean, variance and weight for the new rule are set 
as follows; 
iij xm ˆ=                                       (5) 
initij σσ =                                     (6) 
]1,1[−= randomwkj                           (7) 
where ixˆ  is the current input data and initσ  is a prespecified 
constant. 
The second step is to create other individuals in each 
subpopulation according to a range of the initial first 
individual. The following formulations show the production of 
the other individuals. 
Mean: ijij randommdIndividual σ×+= ]1,0[][ , 
where d=1,3,…,2×N-1    (8) 
Variance: ijrandomdIndividual σ××= ]1,0[2][ , 
where d=2,4,…,2×N    (9) 
Other parameters: ]1,1[][ −= randomdIndividual ,
where d>2×N     (10) 
where d is the site of each individual and mij and ıij are the 
corresponding mean and variance, respectively, of the initial 
first individual. 
B. Parameter Learning
The parameter learning combines two strategies including a 
subpopulation symbiotic evolution (SSE) and a modified 
differential evolution (MODE). Each subpopulation allows the 
individual (rule) itself to evolve by evaluating the composed 
fuzzy system. Figure 4 shows the structure of the individual in 
the rule-based symbiotic modified differential evolution. The 
parameter learning process is described step-by-step below. 
Figure 4. Structure of the individual in the rule-based symbiotic modified 
differential evolution. 
Step 1: Generate the Initial Best Fuzzy System 
In this step, we orderly select the first individual from each 
subpopulation, and compose a fuzzy system as the initial best 
fuzzy system. 
Step 2: Update Each Individual in Each Subpopulation using 
MODE 
167
corresponding mean and variance, respectively, of the current 
individual. Following the mutation step, a new individual can 
be introduced into the each subpopulation. 
j2σj1σ ijσ
j2σj1σ ijσ
Figure 6. A mutation operation in the rule-based symbiotic modified 
differential evolution. 
IV. CONTROL OF WATER BATH TEMPERATURE SYSTEM
This study evaluated the performance of the proposed rule-
based symbiotic modified differential evolution (RSMODE) 
for a self-organizing neuro-fuzzy system (SONFS) to control of 
water bath temperature system [18]. Table I presents the initial 
parameters before learning used in the three computer 
simulations. 
TABLE I. INITIAL PARAMETERS BEFORE LEARNING.
Parameter Value 
Population Size 50 
Maximum Number of Generation 2000 
Crossover Rate 0.9 
Mutation Rate 1/(2*N+M)
Coding Type Real Number 
The goal of this section is to elucidate the control of the 
temperature of a water bath system according to, 
CT
tyY
C
tu
dt
tdy
R
)()()( 0 −+=                        (14) 
where y(t) is the output temperature of the system in C° ; u(t) is 
the heat flowing into the system; 0Y  is room temperature; C is 
the equivalent thermal capacity of the system, and TR is the 
equivalent thermal resistance between the borders of the system 
and the surroundings. 
TR and C are assumed to be essentially constant, and the 
system in Eq.(14) is rewritten in discrete-time form to some 
reasonable approximation. The system 
040)(5.0 ]1[)(1
)1(
)()1( yeku
e
e
kyeky Tsky
Ts
Ts α
α
α α
δ
−
−
−
−
−+
+
−
+=+  (15) 
is obtained, where α  and δ  are some constant values of TR
and C. The system parameters used in this example are 
40015.1 −= eα , 367973.8 −= eδ  and 0Y =25.0( C° ), which were 
obtained from a real water bath plant considered elsewhere 
[18]. The input u(k) is limited to 0, and 5V represent voltage 
unit. The sampling period is Ts=30. 
The conventional online training scheme is adopted for 
online training. Figure 7 presents a block diagram for the 
conventional online training scheme. This scheme has two 
phases - the training phase and the control phase. In the training 
phase, the switches S1 and S2 are connected to nodes 1 and 2, 
respectively, to form a training loop. In this loop, training data 
with input vector )]()1([)( kykykI pp +=  and desired output 
)(ku  can be defined, where the input vector of the SONFS 
controller is the same as that used in the general inverse 
modeling [19] training scheme. In the control phase, the 
switches S1 and S2 are connected to nodes 3 and 4, 
respectively, forming a control loop. In this loop, the control 
signal )(ˆ ku  is generated according to the input vector 
)]()1([)(' kykykI pref += , where py  is the plant output and 
refy  is the reference model output. 
A sequence of random input signals urd(k) limited to 0 and 
5V is injected directly into the simulated system described in 
Eq.(15), using the online training scheme for the SONFS-
RSMODE controller. The 120 training patterns are selected 
based on the input-outputs characteristics to cover the entire 
reference output. The temperature of the water is initially 
25 c° , and rises progressively when random input signals are 
injected.  
yp(k+1)
yref(k+1)
yp(k+1)
1
3
S1
Z-1
2
4
S2
)(ˆ ku
)(ku
+
Plant
Z-1
–
SONFS
Controller
Figure 7. Conventional online training scheme. 
In initialization phase, four subpopulations are generated. 
This dissertation compares the SONFS-RSMODE controller to 
the SONFS-RSDE controller, the SONFS-DE controller and 
the SONFS-GA controller. Each of these controllers is applied 
to the water bath temperature control system. The performance 
measure uses the set-points regulation in the system. Figure 8 
plots the learning curves of the best performance of the 
SONFS-RSMODE controller for the fitness value, the SONFS-
RSDE controller, the SONFS-DE controller and the SONFS-
GA controller, after the learning process of 2000 generations. 
Figure 8. Learning curves of best performance of the SONFS-REMODE, 
SONFS-RSDE, SONFS-DE and SONFS-GA. 
The task is to control the simulated system to follow three 
set-points. 
169
國科會補助計畫衍生研發成果推廣資料表
日期:2011/09/18
國科會補助計畫
計畫名稱: 以法則為基礎之共生差分進化演算法於遞迴式補償性類神經模糊網路之設計
及其應用
計畫主持人: 陳政宏
計畫編號: 99-2218-E-150-047- 學門領域: 人工智慧
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
無 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
