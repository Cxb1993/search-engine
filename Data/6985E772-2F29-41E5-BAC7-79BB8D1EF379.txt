 2 
結案報告大綱 
結案報告大綱 ..........................................................2 
摘要 ..................................................................3 
第一章 第一期計畫目的與成果回顧 .......................................4 
1.1 計畫目的回顧 ..................................................4 
第二章 無繞路表之結構化疊層網路繞路協定 ...............................6 
2.1 節點加入協定描述 (Join Protocol) ..............................6 
2.2 檔案搜尋協定描述 (Search Protocol) ...........................11 
2.3 節點離開協定描述 (Leave Protocol) ............................15 
2.4 實驗環境 .....................................................22 
2.5 模擬結果 .....................................................22 
第三章 Mismatching 問題修正 ..........................................24 
4.1 Mismatching 問題 .............................................24 
4.2 演算法 .......................................................25 
4.3 例子 .........................................................29 
第四章 成果自評 ......................................................37 
 
 4 
第一章 第一期計畫目的與成果回顧 
1.1 計畫目的回顧 
一般的結構化疊層網路如 CAN、Chord、Tapestry、Pastry雖具有良好的結構及
特性，如能快速傳送訊息、具延展性和錯誤容忍等，但實際上它們的效能與其上的
應用及其下的實體網路都有直接的關係。本子計畫之研究訴求不僅在保留既有
Overlay 網路的特性，更是需要充分利用軟體的彈性，隨著應用、政策和環境參數
而作調整其拓樸結構，不僅對上層應用(conferencing and multimedia streaming 
applications)提供最大的彈性，並兼顧下層實體網路的穩定性、安全性(含 VPN)與效
能。為達成上述目標，本子計畫，以資源管理及品質確保的觀點出發，以最佳化
Structured Transport Overlay網路與其下層之實體網路間的跨層設計為主要目標 (在
本群體計畫中為以 IP/MPLS為核心，WiMax, WiFi, WLAN為周邊的異質網路)。本
子計畫分為四個研究重點訴求： 
(1) 發展 Self-Routing Hypercube (SRHC)結構演算法(含 Self-Routing Algorithm 
and structure maintenance ) 達成 Self-Routing 與 minimal flooding的目標。 
(2) 針對多媒體串流服務，設計 SRHC以 user profile為基礎之最佳複份(replica)策
略。 
(3) 以跨層設計(cross-layer design) 最佳化來解決邏輯連結(logic link)與實體連結
(physical link)繞路的差異，以提升網路效能。 
(4) 跨層網路之網路存活性研究, 發展 Link Protection and Path Restoration 
Algorithm以達成 Overlay network fault-tolerant。 
以下幾項將是我們的研究項目： 
a. 結構化疊層網路Join/Leave Protocol設計技術 
(1) 配合已發展之SRHC結構化疊層網路，設計結構網路的Join Protocol。 
(2) 配合已發展之SRHC結構化疊層網路，設計結構網路的Leave Protocol。 
 6 
第二章 無繞路表之結構化疊層網路繞路協定 
本章節會先介紹計畫中的疊層網路繞路協定，繞路協定包括節點加入協定、節
點離開協定與檔案搜尋協定，最後會針對為了提升搜尋效能而設計的最佳化複份位
置策略做介紹。 
本系統以 k-cube的概念架構疊層網路，其中的 k代表維度，意思是疊層網路需
要 2k個節點來形成 cube的結構，節點最多只需經過 k個 hop即可搜尋到檔案。而
整個系統協定包含了節點加入協定 (Join Protocol)、節點離開協定 (Leave 
Protocol)、檔案搜尋協定 (Search Protocol)，下面將會對這三種通訊協定作詳細的介
紹： 
2.1 節點加入協定描述 (Join Protocol) 
定義節點 A為想要加入疊層網路系統的節點，整個節點加入通訊協定 
過程包含下面二個階段： 
i. 必需先找到於疊層網路系統中的超節點。 
一開始 A會以 flooding的方式發送加入請求(Join Request) JRQ來尋找 
疊層網路中的超節點，因為 A並不知道附近的節點是否有加入疊層網路，如果
只向附近的節點詢問，而附近的節點又尚未加入疊層網路時，A也將無法順利地
加入，所以 A需以 flooding的方式尋找超節點。 
 
ii. 超節點檢查是否有被代管的節點，並且釋放所對應的代管。 
當超節點收到 A的 JRQ後，會判斷 A是否能進入疊層網路系統，確認能夠
加入後，會分配給 A一組唯一的 binary id，並檢查這組要分配給 A的 binary id，
在疊層網路系統中被哪幾個鄰居節點所代管，透過回傳加入確認(Join Confirm) 
JCF將被代管的節點與應負責繞送的責任歸還給 A，而超節點在分配 binary id
時，會先挑選最小尚未被分配的 binary id給新加入的節點，舉例來說，假設現
 8 
JRQ
JRQ
JRQ
JRQ
A
S
 
圖 2- 2  A發送 JRQ給超節點 S 
如圖 2- 3所示：當超節點 S收到 A的 JRQ後，確認 A可以加入疊層網路系統，
S會回傳 JCF給 A。 
A
S
JCF
JCFJCF
 
圖 2- 3 超節點 S回傳 JCF給 A 
 如圖 2- 4所示，A成功的加入疊層網路系統，而疊層網路架構由原來的 6個節
點變為 7個節點，新增加了 110這個節點。 
 10
16個節點的疊層網路系統示意圖，而超節點回覆給新加入節點 JCF中包含著一組
binary id為 1000，讓節點加入後系統示意圖為圖 2- 7。 
 
圖 2- 6  維度 4疊層網路示意圖 
 
 
圖  2- 7  系統加入了一新節點 
 現在疊層網路系統有 9個節點，但有些節點的 binary id還未從 3個 bits變成 4
個 bits，所以超節點 000會先將自己的 binary id變成 0000，再利用檔案搜尋協定的
方式廣播新的 binary id下去，且因為系統變成 4維，4維可容納最大的節點數為 16，
但現在系統只有 9個節點，有些 binary id還沒被使用到，所以需要代管的機制才能
維持結構所能提供的優點，所以超節點廣播的封包內會包含著要分配的 binary id與
需要此節點代管的節點，代管的機制在節點離開協定會做詳細的介紹，而最後的疊
層網路示意圖為圖 2- 8。 
 12
 
圖 2- 9  3維 cube的疊層網路系統 
 每個節點會有 3個鄰居(Neighbor)，其互相都只能差一個 bit，一開始 Source Node 
(011)會廣播給自己的 Neighbor，與 Source Node (011)相差一個 bit的三個鄰居節點
分別是 001、010、111，如圖 2- 10所示： 
 
圖 2- 10 節點 A廣播給鄰近的 3個鄰居節點 
 當binary id是001、010和111收到來源端011發出的廣播封包，每個節點會把自
己的binary id和來源節點的binary id做XOR運算： 
 
   經過XOR運算之後，尋找最右邊的1；假如1在最右邊則表示此節點收到封包不
再向外廣播，反之，就需要再向外廣播封包，而收到封包之節點會紀錄1是從左邊算
過來第幾位，例如(a) 1在第2位 (b)1在最後一位 (c)1在第1位。所以只有binary id為
 14
 
圖 2- 12 由節點 101廣播給 100 
當100收到廣播封包後，100繼續與011做XOR運算。 
 
發現1在最右邊的位置，所以100不會再往外作廣播的動作。便完成了三維的檔案搜
尋廣播協定，在這一連串的XOR運算其實都是為了不讓節點隨便發送廣播封包，故
可將搜尋動作所需的封包量降到很低。 
 我們可以藉由三維cube廣播的整個流程，來定義泛洪樹(Flooding Tree)的架構，
所謂的flooding tree架構就是指由Source Node開始廣播後，接下來會透過哪幾個節點
往下傳的流程圖，每個不同的Source Node都有不同的Flooding Tree，用剛介紹完三
維的檔案搜尋協定範例來說明，由011廣播的flooding tree就如圖 2- 13所示： 
 
圖 2- 13  011的 flooding tree 
 16
是因為超節點該執行的動作與運算比一般節點要多，如果離開系統必然會衍
生出許多問題，但本系統中超節點也是有機會離開疊層網路系統，當超節點
欲離開時，一樣是使用『離開協定』，傳送 LRQ給超節點的鄰居節點，假設
超節點為 000且欲離開系統，此時身為 000就會從鄰居節點 001、010、100
中挑出一位成為超節點，假設超節點決定要 010成為代理的超節點，就會在
LRQ中夾帶請 010成為超節點的訊息，送給 000的鄰居節點，當 001、010、
100收到 LRQ後則會更新自己的狀態表，代替 000成為超節點的 010則會回
傳 LCF給 000，一直到有新的節點以 000的 binary id加入，才會將 000的代
管給釋放。 
 
 接著我們會以三個範例來介紹整個『節點離開通訊協定』與代管的機制，第一
個範例是當節點 110要離開時的流程描述，第二個範例是超節點 000要離開時的流
程，最後一個是當節點 100要離開時的流程描述，跟前面節點 110要離開的範例不
同的是，當節點 100要離開時整個疊層網路系統的維度會降低，由三維變成二維。 
範例一： 
 當 A節點 110要離開的疊層網路系統時，A會發送 LRQ給自己的鄰居節點與
超節點，如圖 2- 15所示： 
 
圖 2- 15  A發送 LRQ給鄰居節點與超節點 S 
 而收到 A所發的 LRQ封包後， A的鄰居節點會透過檢查自己的 flooding tree
來確認要幫 A代管哪幾個節點，如圖 2- 16所示： 
 18
010
101
001100 111
000011110
010
000011
101
100 111
Node ID and Address 010 (140.123.107.60)
Super Node ID 000
Manage Node ID
Null
Node ID and Address 010 (140.123.107.60)
Super Node ID 000
Manage Node ID
( 110 100 111 )
001
 
圖 2- 18 節點 010替 110代管示意圖與 010之狀態表 
 
圖 2- 19 節點 111替 110代管示意圖與 111之狀態表 
 當超節點 000收到 LRQ後，也會更新自己的狀態表，並回覆 LCF給節點 110
後，才算完成整個節點離開協定的流程，如圖 2- 20所示，超節點 000會挑選一條
 20
000，讓 000完成離開的動作。 
 
圖 2- 23 超節點 S廣播 LRQ給 010與其他節點 
 
圖 2- 24 新的超節點 010回傳 LCF給 000 
 而該代管 000的三個節點 001、010、100所代管的方式同上一個範例。 
 
範例三： 
 現在疊層網路系統有 5個節點，當 A節點 110要離開的疊層網路系統時，A會
發送 LRQ給自己的鄰居節點與超節點，現在 110的鄰居節點只剩下超節點 000，雖
然系統一樣是使用代管的機制，但是當超節點收到 110的 LRQ後，發現到系統只剩
下 4個節點，會將系統作縮維的動作，如圖 2- 25所示： 
 22
2.4實驗環境 
我們利用 NS2 (Network Simulator version 2)來模擬本計畫的疊層網路系統，以下
是實驗環境的設定參數： 
z 整個網路拓樸為分佈在 1000m*1000m中隨機產生的 100個無線節點。 
z 節點的傳輸距離最遠為 117公尺。 
z Ad hoc繞路協定為 OLSR。 
z 疊層網路的節點數為 2k個。 
z 每個結果均為模擬 1000次的平均值。 
 
2.5模擬結果 
1. 封包量： 
本小節所測量的封包量是指底層實體網路所真實發送的封包數量，於疊層網路
上的節點到鄰居節點邏輯上只需要一個 hop，但於實體網路上可能需經過數個 hop
才能到達，而 flooding是利用廣播的方式，每個節點收到由 Source傳來的封包後
又廣播出去，但每個節點只會廣播一次，直到每個節點都廣播過封包後才停止。此
實驗我們是在固定不同的疊層網路節點數量下，隨機選擇 Source與 Destination並
計算封包到達所需的封包量與時間，並將每一個 2k的疊層網路節點皆模擬 100次
取平均值，故觀察圖 2- 1我們可以發現，flooding搜尋檔案所需的平均封包量與本
系統的繞路協定分別相差了 12.67倍、6.228倍、2.673倍、1.901倍、1.33倍，平
均倍率為 4.96。 
 24
第三章 Mismatching 問題修正 
4.1 Mismatching 問題 
 在疊層網路中常會發生 Mismatching Aware，主要是因為 overlay network 和 
physical network 的不協調導致。我們以下圖 4-1 解釋， 節點 A和節點 B在實體
層有連結，節點 C和節點 D在實體層有連結，而節點 B和節點 C則是透過多個 Hop 
count相連。 
 
 
 圖 4-2，則是在 Overlay 層上的連結情況。假設 A要傳資料給 B，必須透過 D、
C然後才到 B；在實體層上，A和 B有連結，但透過 Overlay層上的路徑選擇，反而
導致繞遠路的情況，因為稱為 Mismatching。 
 26
count) ) 。  
假如δi > TH ，取得以 node i 為頂點的子樹上所有 node 的 hop count 、
ip address、binary id，將 hop count 做排序，用來從新分配 binary id 
( node i 提出的改變狀況 ) ，假設 node j 其 binary id 被改變 (node 
j : 以 node i 為頂點的子樹上的 node) ，計算 binary id 改變前跟改
變後 由 node j 到所有，overlay node 的 hop count 總數的差異，將其
ip address、新的 binary id 、hop count 變化量存進 change_info table
將 change_info table傳回給 super node (change_info table包含
binary id 、 ip address、hop count 變化量) 
  步驟三:   
由 super node 決定是否採用哪種改變方式，然後發送給每個 overlay的
node。 
在 timer 內 super node收到來自其他overlay node傳來的change_info 
table，將 change_info table裡面的 hop count 變化量作加總(sum)，
Timer 結束時，將會收到所有 overlay node傳來的 change_info table
找出 sum 小於 0 且改變的 node 數最少的 change_info table。假設有
兩個以上，則挑出 sum 最小的那的 change_info table，將此 change_info 
table傳給 overlay 上所有 node。 
 
 步驟四:  
  所有 Overlay node收到由 super node 傳來的 change_info table進行 
  update (更新自己 router table) 
 
 
 
 
 
 
 
 28
 If timer 1 expires //long timer {    
  for each node a ∈ overlay network{     
   change_info send_ supernode[];  
   // 計算 δ[]  
   for i∈Ne(a) { 
   new_hop_count [i] = overlay neighbor’s physical hop counts 
   δ[i] = new_hop_count [i] – old_hop_count [i]  
   if ( δ[i] > threshold ) {  
   // 取得子樹 i 的所有訊息 
   node_info old_subtreeinfo[|SPT(a)i |] = info. of nodes inSPT(a)i. 
   node_info new_subtreeinfo[|SPT(a)i |]  
    // 根據 overlay_hop排序 
    new_subtreeinfo[].overlay = sort old_subtreeinfo[].overlay  
     according to overlay_hop 
    // 根據 hop_count 排序 
    new_subtreeinfo[].physical = sort old_subtreeinfo[].physical  
     according to hop_count  
   for k∈SPT(a)i 
    for j∈SPT(a)i 
   If ( new_subtreeinfo[k].overlay. binaryid ==    
      old_subtreeinfo[j].overlay. binaryid &&    
          new_subtreeinfo[k].physical. ip_address != old_   
     subtreeinfo[j].physical. ip_address) 
   { 
       old_ total_hopcount = the total hop counts of SPT(k)   
      (before change) 
       new_ total_hopcount = the total hop counts of SPT(k) (after 
      change) 
             variation= old_ total_hopcount- new_ total_hopcount 
   // Insert(…..) 
      Insert(send_supernode,(variation, k’s binaryid, k’s   
     ip_address)) 
   } 
   }  
   } 
 returm send_supernode supernode 
  } 
 }  
 30
 
下圖為節點 G 偵測到的情況 
 
節點 G 偵測到 D 移動後，重新分配 ID。因此節點 H跟節點 D的 ID被調換了。 
 32
 
 
下圖為節點 H 偵測到節點 D 移動的情況。 
 34
 
下圖為節點 D 移動，而節點 D自己觀察到的情況。
 36
 
RDT08 
  
 
行政院國家科學委員會補助國內專家學者出席國際學術會議報告 
                                                                98年 9月 1日 
  報    告    人 
  姓          名  
鄭志川  服 務 機 關 
 及   職  稱  
國立中正大學電機工程研
究所博士班 
           時  間  
  會   議 
           地  點   
8/26-8/28 
 
新加坡                
 本 會 核 定 
            
 補 助 文 號 
 
 
                    
會  議  名   稱 
(中文) 2009 感測網路、資訊和無所不在運算之國際研討會 
 
(英文) 2009 International Conference on Sensor Networks, Information, 
and Ubiquitous Computing 
                    
 發 表 論 文 題 目 
(中文) 具存活時間預測能力的碼簿冗員仰制機制於叢集式無線感測
網路               
(英文) A Codebook-based Redundancy Suppression Mechanism with 
Lifetime Prediction in Cluster-based WSN 
RDT08 
  
 
 
 
 
 
 
A Codebook-based Redundancy Suppression
Mechanism with Lifetime Prediction in
Cluster-based WSN
Huan Chen and Bo-Chao Cheng
National Chung Cheng University
Chiayi, Taiwan
Email: huan@ee.ccu.edu.tw
bcheng@ccu.edu.tw
Chih-Chuan Cheng, Yi-Geng Chen
and Yu Ling Chou
National Chung Cheng University
Chiayi, Taiwan
Email: {m9288,m9762}@cn.ee.ccu.edu.tw
louisechou@billion.com.tw
Abstract—Wireless Sensor Network (WSN) comprises of sensor
nodes which are designed to sense the environment, transmit
sensed data back to the base station via multi-hop routing to
reconstruct physical phenomena. Since physical phenomena exists
significant overlaps between temporal redundancy and spatial
redundancy, it is necessary to use Redundancy Suppression
Algorithms (RSA) for sensor node to lower energy consumption
by reducing the transmission of redundancy. A conventional
algorithm of RSAs is threshold-based RSA, which sets threshold
to suppress redundant data. Although many temporal and
spatial RSAs are proposed, temporal-spatial RSA are seldom
to be proposed because it is difficult to determine when to
utilize temporal or spatial RSAs. In this paper, we proposed
a novel temporal-spatial redundancy suppression algorithm,
Codebook-base Redundancy Suppression Mechanism (CRSM).
CRSM adopts vector quantization to generate a codebook, which
is easily used to implement temporal-spatial RSA. CRSM not only
achieves power saving and reliability for WSN, but also provides
the predictability of network lifetime. Simulation result shows
that the network lifetime of CRSM outperforms at least 23% of
that of other RSAs.
I. INTRODUCTION
In recent years, Wireless Sensor Network (WSN) is em-
ployed in many applications, e.g., wild animal tracks[1] and
habitat surveillance[2]. Wireless Sensor Network consists of
sensor nodes which are distributed in sensor field to measure
physical phenomena, such as temperature, humidity, seismic,
acoustic etc., and transmits the readings to a fusion center,
named as base station (BS), to recover the original data. Due
to the limited resource of sensor nodes, the energy efficiency
becomes a major challenge of WSN design.
In a sensor field that requires continuous surveillance,
grouping sensor nodes into clusters can save energy consump-
tion of sensor nodes because it can reduce the number of
transmission and transmission distance of sensor nodes[3]. In
a cluster, a cluster head is responsible for relay data to a
fusion center for its cluster member. Intuitively, cluster heads
represent the best location to perform the data suppression.
Since physical phenomena exists significant overlaps be-
tween temporal redundancy and spatial redundancy, there is
a need for an intelligent redundancy suppression algorithm
that enables WSN to suppress redundant transmissions while
meeting acceptable distortion for reconstruction of original
data. Temporal redundancy is due to continuous observation
of physical phenomena, while spatial redundancy is due to
dense deployment of sensor nodes. The conventional algorithm
of RSAs is threshold-based RSA, which can be categorized
into three types: (1) Temporal RSA, (2) Spatial RSA, and (3)
Temporal-spatial RSA.
The design discipline of temporal RSA is to reduce trans-
mission of temporal redundant data observed by sensor nodes
by setting thresholds. In literature, TEEN[4] uses two thresh-
olds TH and TS to define different data suppression behav-
iors. The former is used to check whether a critical event
occurred, in which scenario data shall be transmitted without
any suppression. The later threshold is a general threshold
to guarantee the distortion requirement. It is expected that
if a larger threshold is used (which allows more distortion),
more data are suppressed. Consequently, the network lifetime
increases.
Physical measurement observed by a sensor node is similar
to the measurement of its neighboring nodes. As such, the
design discipline of spatial RSA is to suppress the spatial
similarity by setting thresholds. Iso-map[5] works by detect
isolines which are lines with the same value of measurement.
The distance between the isolines (or the resolution of the
isolines) depends on given thresholds. Only sensor nodes
reside on isolines need to send its readings to the BS.
Joint design on temporal and spatial RSA is possible, but
high computation (high complexity) and communication over-
heads (exchange information) make it infeasible to deployed
in a WSN in practice. For example, temporal-spatial RSAs
face a dilemma of choosing temporal and spatial RSAs. Meng
et al.[6] proposed a temporal-spatial RSA, event contour,
to improve network lifetime of WSN. Event contour allows
sensor nodes to suppress their reports when both temporal and
spatial redundancy suppression conditions are satisfied. How-
ever, as following this rule, event contour dose not improve the
performance of WSN as compared with temporal and spatial
RSAs.
ci. After that, each non-CH sends its node id NID and
codeword ci to the CH. Additionally, a threshold δ = D
is designed to conduct temporal suppression. As such,
the criteria to suppress the current sensed data is when
|x(t)− xl| < δ, where xl is the quantization level of the
previous transmitted codeword.
When each CH receives all reports transmitted by its
cluster members, it aggregates the received reports by
suppressing spatial redundancy. The operation works as
follows. First, each CH merges the received reports into
groups, in which the codewords of group members are
equal. Second, the overlapped codewords in each group
are suppressed. In other words, only one codeword is
sufficient to represent other reports in each group. Finally,
each CH sends the aggregated data to the BS.
• (OP3:Reconstruction) Since the BS keeps the code-
books for each sensor, as such the BS is able to decode
the codeword. After receiving the aggregated data, the
BS first maps the codeword in each group to a specific
quantization level, say qi, which is the representative
value of the group. Define xˆ(t) = qi, which is the
estimated value of the sensed data at time t. Next, the
BS will reconstruct the missing reports based on the
received information. In this paper, the BS assume that
the suppressed data remains unchanged, i.e., xˆ(t) = xl.
IV. NETWORK LIFETIME ANALYSIS
Because sensor nodes have limited battery, the predictability
of network lifetime of WSN facilitates users to manage WSN
applications, e.g., biomedical application. Network lifetime is
defined as the interval between the instant that WSN starts
functioning and the instant that a node in the WSN exhausts
its energy. In this paper, CRSM uses the transmission rate R
derived in eq. 2 to estimate the network lifetime of WSN. The
energy consumption of transmission of sensor nodes is based
on first order radio model (as shown in fig. 2. Following the
notation and convention as in LEACH[3], the first order radio
model is given below:
ETx(L,d) = ETx−elec(L) + ETx−amp(L,d) (3)
=
{
L · Eelec + L · ²fs · d2 if d < d0
L · Eelec + L · ²mp · d4 if d ≥ d0
The total energy consumption ETx(L, d) for transmitting L-
bit message over a distance d can be expressed as a sum
of two terms, ETx−elec(L) and ETx−amp(L, d). ETx−elec
is the electronics energy consumption, which is related to
factors such as the digital coding, modulation, filtering and
spreading schemes of the signal. ETx−amp is the amplifier
energy consumption to transmit acceptable BER (bit error
rate) for signals transmitted to a receiver. ETx−elec can be
further expressed in terms of energy consumption for a single
bit Eelec, while ETx−amp can be further expressed in terms of
²fs or ²mp, depending on the transmitter amplifier mode that
applied. They are power loss factors for free space (d2 loss)
and multi-path fading (d4 loss), respectively. The threshold
d0 can be determined by equating the two expressions. This
 
Fig. 2. First Order Radio Model
radio model reflects the fact of using several immediate short-
range transmissions to send data is more energy-efficient than
using a single long-range transmission. We will follow the
same design rule as well. By equating the two expressions, an
empirical value of d = d0 =
√
²fs
²mp
can be derived.
The total energy consumption ERx(L) for receiving L-bit
message equivalent to ETx−elec(L). Notice that, the energy
consumption for ERx(L) depends only on how many bits it is
receiving rather than the distance d the message is transmitted
from. , i.e., ERx(L,d) = ETx−elec(L) = L · Eelec.
Assume the size of sensor network is M ×M , the number
of sensor nodes in the sensor network is N , and the number of
CHs is k. At each round, there are approximately (N/k − 1)
non-CHs in a cluster. Each non-CH sends its readings with
probability (1 − ρT ), where ρT is the probability that the
incoming data reading x(t) is within the dynamic range δ
of the previous transmission xl, i.e.,
ρT =
n∑
i=1
Pr(|x(t)− qi| ≤ δ|xl ∈ si)Pr(xl ∈ si). (4)
Thus, the energy consumption of a non-CH is calculated by
Enon−CH = k · ERx(HDR + ADV) (5)
+ ERx(HDR + TDMA · (1− ρT ) · (N/k − 1))
+ (1− ρT ) · ETx((HDR + JOIN), d4Bcast)
+ (1− ρT ) · ETx((HDR + (R+RNID)), d2toCH).
where HDR is the length of packet header, ADV is the length
of advertisement message broadcasted by CHs, TDMA is the
length of TDMA schedule, JOIN is the length of join-request
message, RNID is the the length of node id, dBcast is the
distance of broadcast, and dtoCH is the distance between non-
CH and CH. According to [3], dtoCH is derived, i.e., dtoCH =
M2/(2pi · k). The first term is the energy consumption of
receiving advertisement messages transmitted by CHs. The
second term is the energy consumption of receiving TDMA
schedule. Due to temporal suppression, the length of payload
of TDMA schedule equals TDMA · (1− ρT ) · (N/k− 1). The
last two terms are the energy consumption of conveying the
join-request message and the sensed data.
The total energy consumption for a CH is expressed as
ECH = (1− ρT ) · (n/k − 1) · ERx(HDR + JOIN) (6)
+ ERx(HDR + (R+RNID))
+ (1− ρT ) · ((R+RNID)) · Ec · (n/k)
+ ETx((HDR + ADV), d4Bcast)
