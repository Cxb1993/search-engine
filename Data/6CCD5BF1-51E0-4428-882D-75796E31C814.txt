 2
(VQ) is less than or equal to the physical queue 
capacity. Denote k is the threshold of virtual 
queue, where 0 < k ≤ 1. The capacity of virtual 
queue can be described as:  
 
VQ = Q × k− q  (3) 
 
  At Initialization, the virtual queue is disabled. 
The arrival rate λ is calculated for each incoming 
packet. If λ > rmax, the packet is discarded. Then 
the virtual queue is enabled and the value of VQ 
is initialized to be Q×k− q. Let b be the current 
packet size. If b is greater than VQ, the packet 
will be marked and the value of VQ is updated 
with the current packet size b. Otherwise, the 
packet is enqueued in the physical queue. If λ > 
rmin and the virtual queue is not full, the incoming 
packet is enqueued in physical queue. In the case 
that the virtual queue cannot have enough space 
for the arrival packet, the packet will be marked 
in the physical queue. If λ < rmin, the virtual queue 
is disabled and the queue occupation is controlled 
under Q×k. Fig. 1 shows the PRC algorithm. 
 
At each packet arrival epoch do
calculate λ;             //calculate input rate
if q > 0                     //queue is not empty
{
if λ > rmax
{
trigger virtual queue;
drop packet;
}
else if λ > rmin
{
VQ = (Q ×k) – q;   //calculate virtual queue size
VQ = VQ – b;
if VQ ≤ 0              //available virtual queue is empty
{
VQ = VQ + b; //update virtual queue
mark packet;
}
else                    //available virtual queue is not empty
enqueue packet;
}
else // input rate is less than min threshold
disable virtual queue;
{
enqueue packet;
}
}
else                               //queue is empty
enqueue packet;
Fig. 1 PRC algorithm 
 
  Let Q(t) be the queue size required at time t. 
Suppose A(t) is the data received by the router 
over [0, t] and F(t) is the cumulative data 
forwarded by the router over [0, t]. Considering 
the quantity, A(t) − F(t), is the rate at which the 
queue grows. We can approximate A(t) − F(t) to 
be the change in queue length Q(t). Q(t) changes 
depending on the difference between arrival rate 
and outgoing rate at time t. We have 
 


<−
≥=
 )( )( if   ),( )(
)()( if                  0,
)(
tAtFtFtA
tAtF
tQ  (4) 
 
  Any instance of the input rate exceeding the 
output rate should increase the queue length and 
possibly leads to queue overflow. Since a 
considerable amount of time may elapse between 
the packet drop at the router and its detection at 
the source, the source continues to transmit at a 
rate that the router cannot support, thus resulting 
in a large amount of packet loss. The sources 
reduce their sending rate only after detecting the 
packet loss. The queue lengths grow and shrink 
rapidly due to the TCP congestion control 
algorithm.  
 
  Using our scheme, a TCP flow can achieve the 
stable queue oscillation with only a small amount 
of packet loss. Suppose a(t) is the aggregate 
transmission rate at time t and r* is the desired 
arrival rate. Initially, r* is set to be rmax, where rmax 
is the maximum threshold of arrival rate. Suppose 
s(t) is the smoothed data at time t. We have 
 


<
≥= *
**
)( if   ,)(
)( if      ,
)(
rtata
rtar
ts   (5) 
 
  If a(t) ≥ r*, the amount, a(t) − r*, of the data 
must be discarded and s(t) is assigned to be r*. 
Otherwise, s(t) is set to be a(t). The virtual queue 
is enabled and r* is set to be rmin. The probability, 
Pt,t’, represents the packets being dropped at time 
t will reach the router again at time t′ , where 
t′ > t. The total amount of arrival data S( t′ ) at 
time t can be divided into two parts: 1) 
retransmission and 2) non-retransmission, which 
can be described as follows: 
 
S( t′ ) = )()))((( *1
1
, tartaP
t
t
tt ′+−×∑
−′
= ′
 (6) 
 
  Suppose F(t) is the cumulative data forwarded 
by the router over [0, t] and S(t) is the cumulative 
data actually received by the router due to rate 
control over [0, t]. We know that Q(t) is the queue 
size required at time t and Q(t) = S(t) − F(t). 
Router queue becomes empty when S(t) − F(t) = 
0.  
 
  To reduce the rate variability, the router bounds 
the smoothed rate s(t) < rmax, and starts the 
operation of virtual queue when s(t) > rmin. Once 
the virtual queue becomes full, the router starts 
marking these packets exceeding virtual queue to 
inform the sources to reduce their rates.  Let the 
region that requires queue in F(t) be the peak 
region and the region that requires maximal 
queue size to be the maximum peak region. Then 
the amount of queue, which the max peak region 
requires, is VQ. VQ decreases as s(t) increases. 
The point at which S(t) and F(t) adjoin varies. 
Assume S(t) is a straight line with slope dF(t)/dt. 
Then  
 4
 
Fig.2 Simulation topology, experiment 1 
50
35
qu
eu
e 
si
ze
 (K
B
)
50
35
qu
eu
e 
si
ze
 (K
B
)
(a)
0 10                          20
time (sec)
(b)
0 10                         20
time (sec)
AF
AF
EF EF
qu
eu
e 
si
ze
 (K
B
)
qu
eu
e 
si
ze
 (K
B
)
qu
eu
e 
si
ze
 (K
B
)
qu
eu
e 
si
ze
 (K
B
)
qu
eu
e 
si
ze
 (K
B
)
qu
eu
e 
si
ze
 (K
B
)
50
35
qu
eu
e 
si
ze
 (K
B
)
50
35
qu
eu
e 
si
ze
 (K
B
)
(c)
0 10                        20
time (sec)
(d)
0 10                        20
time (sec)
AF AF
EF EF
qu
eu
e 
si
ze
 (K
B
)
qu
eu
e 
si
ze
 (K
B
)
qu
eu
e 
si
ze
 (K
B
)
qu
eu
e 
si
ze
 (K
B
)
qu
eu
e 
si
ze
 (K
B
)
qu
eu
e 
si
ze
 (K
B
)
 
 
Fig. 3 Queue occupation for PRC without virtual queue, 
experiment 1 (a) αmin = 0.8, αmax = 0.9 (b) αmin = 0.6, αmax = 0.7 
(c) αmin = 0.2, αmax = 0.3 (d) αmin = 0.1, αmax = 0.2  
 
50
35
qu
eu
e 
si
ze
 (K
B
)
50
35
qu
eu
e 
si
ze
 (K
B
)
(b)
0 10                        20
time (sec)
(a)
0 10                            20
time (sec)
AF
EF
AF
EFq
ue
ue
 si
ze
 (K
B
)
qu
eu
e 
si
ze
 (K
B
)
qu
eu
e 
si
ze
 (K
B
)
qu
eu
e 
si
ze
 (K
B
)
50
35
qu
eu
e 
si
ze
 (K
B
)
50
35
qu
eu
e 
si
ze
 (K
B
)
(c) (d)
0 10                         20
time (sec)
0 10                         20
time (sec)
AF
AF
EF EFq
ue
ue
 si
ze
 (K
B
)
qu
eu
e 
si
ze
 (K
B
)
qu
eu
e 
si
ze
 (K
B
)
qu
eu
e 
si
ze
 (K
B
)
 
 
Fig. 4 Queue occupation for PRC, experiment 1 (a) k = 0.3 (b) 
k = 0.5 (c) k = 0.7 (d) k = 0.9 
   
  In order to adequately show the reaction ability 
of PRC, we vary the value of maximum desired 
utilization αmax while fixing αmin = 0.3 and k = 0.7. 
We can see from Fig. 5(a)-(b) that PRC 
successfully controls queue length at small αmin. A 
large αmin value (Fig. 5(c)-(d)) will slow down 
system reaction, thus causing oscillation of queue 
length around physical queue size. Now we fix 
αmin = 0.3 and vary the value of αmax from 0.7 to 
0.9. From Fig. 6, we found that the increasing 
αmax has minor effect of queue length oscillation.  
 
50
35
qu
eu
e 
si
ze
 (K
B
)
50
35
qu
eu
e 
si
ze
 (K
B
)
(a)
0 10                          20
time (sec)
0 10                          20
time (sec)
(b)
AF AF
EF EFq
ue
ue
 si
ze
 (K
B
)
qu
eu
e 
si
ze
 (K
B
)
qu
eu
e 
si
ze
 (K
B
)
qu
eu
e 
si
ze
 (K
B
)
50
35
qu
eu
e 
siz
e 
(K
B
)
(c)
0 10                          20
time (sec)
50
35
qu
eu
e 
si
ze
 (K
B
)
0 10                          20
time (sec)
(d)
AF AF
EF EFq
ue
ue
 si
ze
 (K
B
)
qu
eu
e 
siz
e 
(K
B
)
qu
eu
e 
si
ze
 (K
B
)
qu
eu
e 
si
ze
 (K
B
)
 
 
Fig. 5 Queue occupation for PRC, experiment 1 (a) αmin = 0.2 
(b)αmin = 0.4 (c) αmin = 0.6 (d) αmin = 0.8  
 
50
35
qu
eu
e 
si
ze
 (K
B
)
(a)
0 10                          20
time (sec)
50
35
qu
eu
e 
si
ze
 (K
B
)
(b)
0 10                          20
time (sec)
AF AF
EF EFq
ue
ue
 si
ze
 (K
B
)
qu
eu
e 
si
ze
 (K
B
)
qu
eu
e 
si
ze
 (K
B
)
qu
eu
e 
si
ze
 (K
B
)
50
35
qu
eu
e 
si
ze
 (K
B
)
50
35
qu
eu
e 
si
ze
 (K
B
)
(c)
0 10                          20
time (sec)
(d)
0 10                          20
time (sec)
AF AF
EF EFq
ue
ue
 si
ze
 (K
B
)
qu
eu
e 
si
ze
 (K
B
)
qu
eu
e 
si
ze
 (K
B
)
qu
eu
e 
si
ze
 (K
B
)
 
 
Fig. 6 Queue occupation for PRC, experiment 1 (a) αmax = 0.6 
(b) αmax = 0.7 (c) αmax = 0.8 (d) αmax = 0.9 
 
 
 
 
