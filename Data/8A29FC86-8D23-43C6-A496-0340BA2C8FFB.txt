 2
一、中文摘要 
 
本計畫第二期的研究重點是提出一個
以生物知識為推論基礎的剪接點(splicing 
site)搜尋方法，經由對 Intron 序列進行密碼
子(codon) 分析後，我們建立了一個以密碼
子為基礎的 intron definition model (IDM)，
並開發了 IFCS (In-Frame Codon Shifting) 
的剪接點搜尋機制，再融入多準則決策
(multiple criteria decision making, MCDM)
的技術進行 intron qualification (IQ)，並於
最後以 Frameshift Oscillation (FO) 的獨創
概念對剪接點進行 Intron-Exon boundaries
的最後驗證。利用本方法除可搜尋
pre-mRNA 的剪接點外，更可延伸應用於基
因結構的預測。 
 
關鍵詞：間斷子、密碼子、剪接點、框內
位移、基因結構。 
 
Abstract 
 
The second goal of this project is 
searching authentic splicing sites with 
bio-knowledge based inference. After 
performing codon analyses on intron 
sequences, we construct a codon-based intron 
definition model and devise a IFCS 
(In-Frame Codon Shifting) technique for 
predicting splicing sites. Besides, these 
splicing site candidates were all further 
certified via an IQ (intron qualification) 
procedure and Intron-Exon boundaries 
checking with FO (frameshift oscillation). In 
addition to predicting splicing sites, the 
methods proposed here can be applied to 
determining gene structures and identifying 
their isoforms. 
 
Keywords: Intron、Exon、Splicing sites、
Codon、In-Frame shifting、Gene structure. 
 
二、緣由與目的 
 
掌握 intron splicing sites(ISS)的位置
是了解 gene expression 的關鍵資訊[1, 2]，
有了 ISS 才能知道成熟 mRNA 的序列組
成，也才能進一步預測所轉譯出的蛋白質
可能的結構與功能，不僅如此，ISS 也是
gene finding 重要的一環，因為有 ISS 的地
方就代表基因的存在。 
已經有許多相關研究致力於搜尋及預
測 ISS[3-19]，但全都著重於 5 端的 donor 
sites(文後稱為 5SS)與 3 端 acceptor site(文
後稱為 3SS)的 modeling，因為 5SS-3SS 這
兩個剪接點定義了 intron 開始與結束的位
置，而且存在明顯的保守序列，例如，就
哺乳類動物而言， 5SS 的一致性序列
(consensus)是 AGGURAGU 而 3SS 則是
Y(10-20)NRAGGU[20, 21]，其中 GU 與 AG
分別是 acceptor 的開始與 donor 的結束位
置，此為 intron 分類中的 major class[22]，
約 98%的 introns 皆屬此類。現存尋找 ISS
的方法主要是依據是保守序列樣式相似度
或以機率統計的方式進行搜尋，binding 
sites與 binding factors交互作用資訊僅用於
理論上的描述與建立 intron definition 
model[23]，尚未實際應用於計算機生物學
領域中。但是，僅用 sequence patterns 來定
義 intron 剪接點，將使得其內涵過於簡單
以致於進行搜尋與比對時能用來做檢驗的
資訊太少，可預期最後的結果將會充斥著 
false positives。 
除了 donor site 和 acceptor site 的模型
過度簡化之外，事實上，與 intron 的剪接
過程除了 donor 及 acceptor 外，還有另外兩
個 intron 內部的序列參與其中，分別是
branch point (BPA)[24-26] 與
poly-pyrimidine tract (PPT)[27-30]，以目前
的實驗證據與對 pre-mRNA splicing 的瞭
解，BPA 和 PPT 是進行 intron 剪接時不可
或缺的輔助性剪接點[31]。因此，為求 intron 
definition model 的完整性，本研究將上述
四個與 intron 剪接相關的位置通盤納入考
量，並將其統稱為 SRS (Splicing Related 
Sites)，藉由統整 SRS 相關資訊建立了 計
算機生物學導向的 intron definition model。 
Introns 的剪接涉及 RNA-RNA 、
protein-RNA 的交互作用[22]，此交互作用
構成了剪接點間的相依性[32, 33]，除可據
 4
在 PPT 另外看到了 ApG-less 的情況。此
外，對於 BPA，也發現它主要出現在 STOP 
codon 高頻率出現的地方，這可由序列演化
的角度得到一個合理的解釋，因此，也可
將 STOP codon 視為 BPA 所在的 marker。 
事實上，intron 剪接點相關位置的序
列都具有模糊描述的性質，即使 5SS 和 3SS
亦然，只是模糊的程度有所差異而已。本
研究設計特別的演算法將序列的模糊特質
予以量化以便進行分析比較與統計，此套
即稱為 In-Frame Codon Shifting (IFCS) 的
序列內容檢驗方法，它可以有效偵測序列
集合中的特徵密碼子，也可用來辨別符合
模糊概念的序列，如歸納與辨別具有
AAA/TTT/CT-rich 或 CpG/ApG-less 的序列。 
IFCS 是一個以 codon 為中心概念的序
列模糊性質驗證程序，其運作原理如圖二
所示： 
 
 
圖二： In-Frame Codon Shifting Analyses 
 
IFCS 的基本精神是兼顧序列在每個
位置上密碼子之間垂直與水平的關係，
codon counting 是縱向的考量，而 frameshift
則是進行橫向的聯結，如此可在在合理的
計算複雜度下取得序列中 codon 分怖的重
要資訊。 
因為資料集的序列數目可能數以萬
計，因此，初步取得的 codon 計量會落入
由數百至數萬的區間，不易由表面上的數
字看出其數量的意義，因此，利用統計裡
四分位數(quartile)的概念將 codon count 做
連續整數(典型的區間是 0 到 4)區間的離散
化，意在將數量轉換為相對的強度，同時
也是將數字做正規化。 
在 codon 表現量以相對強度呈現後，
即可進一步據此找出資料集的序列中具代
表性(significant)的密碼子，這種特徵密碼
子是經由 frameshift oscillation(FO)的計算
而得。FO 用來表達每一個 codon 在三個
frame 裡表現強度的落差，落差越大則 FO
的值越大，也代表此 codon 越有 frame 
specific 的特質。 
以 FO 的值再輔以 codon 本身的表現
強度即可獲得 codon impact(CI)，而 CI 值
較高就可視為 feature codons。至此，完成
了序列集的縱向分析，最後再計算 feature 
codons 於每一個 codon position 的表現量，
即可看出 over-expressed 的 codons 了。最
後，針對每一個（共五個，如圖一所示）
SRS相關的片段進行 IFCS的模糊性質檢驗
的程序，繼而建立五個對應的 models 做為
序列的驗證工具。 
 
System Architecture 
本研究第二期的主要目標是建置一個
intron classifier，已經由上述 IFCS 完成。
接著便是要設計 SRS candidates 的搜尋演
算法，借助 IFCS 分析的結果，我們可以清
楚看到每個 SRS 的 feature codons，而對應
的系統設計，如圖三，即應對而生。 
 
 
圖三： System Architecture 
 
經由 IFCS 的分析後，在 5SS 與 3SS
最具代表性的 codons 恰巧都是 STOP 
 6
們自己從 Genbank 中取得人類最新最完整
的基因序列資料，其中主要是包括了完整
的 introns 序列，且為求結果的一般性，我
們以人類 24 條染色體上所有已知基因的
剪接點做為驗證的 true samples。 
 
討論（Discussions） 
利用 codon 做為序列分析的單位有許
多優點，特別是以 mRNA 為分析對象時。
除了轉譯時 triplet-based 的本質外，codon 
analyses 所得的結果也很容易透過 reduce
或 assembly 的方式得到低階的 dimer 或高
階的 k-mer 的 pattern information，由其是
在考慮到 frameshift 這件事情時，更是非得
以 codon 為分析基礎。本研究提出了一個
適合進行生物計算(bio-computing)的 intron 
definition model，並開發一套對應的 SRS
搜尋與辨識系統，從 model 的建立到
candidates 的過濾皆以生物知識與證據做
真偽的判斷，相信由本系統預測的結果其
真實性與可靠度是很高的。 
 
四、成果自評 
 
本研究所開發的 intron locator 具有多
方面應用的可能性，除用以搜尋序列中的
Exon-Intron 剪接點的位置外，也可做為
gene-finding 的工具，更可以進一步預測基
因的 isoforms，這是之前的相關研究所忽略
與未曾考慮過的。在利用人類全基因體序
列進行測試後，已證實本研究所提方法確
實可行，且本方法乃屬一般化之方法，將
來可直接應用於其它物種的基因搜尋與探
勘。而且，本研究所得的結果揭示了一些
在現今基因相關研究中未曾被注意過的重
要訊息，也相信本研究所得的 intron 
candidates 具有進行生物實驗的價值。 
 
五、參考文獻 
 
1. Mount, S.M., et al., The U1 small 
nuclear RNA-protein complex 
selectively binds a 5' splice site in 
vitro. Cell, 1983. 33(2): p. 509-18. 
2. Hastings, M.L. and A.R. Krainer, 
Pre-mRNA splicing in the new 
millennium. Curr Opin Cell Biol, 
2001. 13(3): p. 302-9. 
3. Degroeve, S., et al., Feature subset 
selection for splice site prediction. 
Bioinformatics, 2002. 18 Suppl 2: p. 
S75-83. 
4. Rampone, S., Recognition of splice 
junctions on DNA sequences by 
BRAIN learning algorithm. 
Bioinformatics, 1998. 14(8): p. 
676-84. 
5. Thanaraj, T.A., Positional 
characterisation of false positives 
from computational prediction of 
human splice sites. Nucleic Acids Res, 
2000. 28(3): p. 744-54. 
6. Chen, T.M., C.C. Lu, and W.H. Li, 
Prediction of splice sites with 
dependency graphs and their 
expanded bayesian networks. 
Bioinformatics, 2005. 21(4): p. 
471-82. 
7. Saeys, Y., et al., Fast feature selection 
using a simple estimation of 
distribution algorithm: a case study 
on splice site prediction. 
Bioinformatics, 2003. 19 Suppl 2: p. 
II179-II188. 
8. Saeys, Y., et al., Feature selection for 
splice site prediction: a new method 
using EDA-based feature ranking. 
BMC Bioinformatics, 2004. 5: p. 64. 
9. Pertea, M., X. Lin, and S.L. Salzberg, 
GeneSplicer: a new computational 
method for splice site prediction. 
Nucleic Acids Res, 2001. 29(5): p. 
1185-90. 
10. Reese, M.G., et al., Improved splice 
site detection in Genie. J Comput Biol, 
1997. 4(3): p. 311-23. 
11. Castelo, R. and R. Guigo, Splice site 
identification by idlBNs. 
Bioinformatics, 2004. 20 Suppl 1: p. 
I69-I76. 
12. Zhang, L. and L. Luo, Splice site 
prediction with quadratic 
discriminant analysis using diversity 
 8
Embo J, 1997. 16(23): p. 7174-83. 
33. Luukkonen, B.G. and B. Seraphin, 
The role of branchpoint-3' splice site 
spacing and interaction between 
intron terminal nucleotides in 3' 
splice site selection in Saccharomyces 
cerevisiae. Embo J, 1997. 16(4): p. 
779-92. 
34. Roca, X., R. Sachidanandam, and A.R. 
Krainer, Intrinsic differences between 
authentic and cryptic 5' splice sites. 
Nucleic Acids Res, 2003. 31(21): p. 
6321-33. 
35. Smith, C.W. and J. Valcarcel, 
Alternative pre-mRNA splicing: the 
logic of combinatorial control. Trends 
Biochem Sci, 2000. 25(8): p. 381-8. 
36. Incorvaia, R. and R.A. Padgett, Base 
pairing with U6atac snRNA is 
required for 5' splice site activation of 
U12-dependent introns in vivo. Rna, 
1998. 4(6): p. 709-18. 
37. Padgett, R.A. and G.C. Shukla, A 
revised model for U4atac/U6atac 
snRNA base pairing. Rna, 2002. 8(2): 
p. 125-8. 
38. Coolidge, C.J., R.J. Seely, and J.G. 
Patton, Functional analysis of the 
polypyrimidine tract in pre-mRNA 
splicing. Nucleic Acids Res, 1997. 
25(4): p. 888-96. 
39. Romfo, C.M. and J.A. Wise, Both the 
polypyrimidine tract and the 3' splice 
site function prior to the first step of 
splicing in fission yeast. Nucleic 
Acids Res, 1997. 25(22): p. 4658-65. 
40. Auweter, S.D., F.C. Oberstrass, and 
F.H. Allain, Sequence-specific 
binding of single-stranded RNA: is 
there a code for recognition? Nucleic 
Acids Res, 2006. 34(17): p. 4943-59. 
41. Lelay-Taha, M.N., et al., RNA-protein 
organization of U1, U5 and U4-U6 
small nuclear ribonucleoproteins in 
HeLa cells. J Mol Biol, 1986. 189(3): 
p. 519-32. 
42. Claverie, J.M. and S. Audic, The 
statistical significance of nucleotide 
position-weight matrix matches. 
Comput Appl Biosci, 1996. 12(5): p. 
431-9. 
 
 
 
報告內容應包括下列各項： 
一、參加會議經過 
2006 通訊與資訊技術國際研討會於九十五年十月十八日至十月二十日在泰國曼谷
Grand Mercure Fortune 飯店召開。會議地點就在曼谷新市區，離新啟用之蘇凡納布米
國際機場車程約 40 分鐘，交通相當便利。會議地點在飯店二樓跟三樓六個會場進行，
會場還提供免費無線網路供與會者上網。會議第一天有大會開幕、ㄧ場 Keynote 
Presentation、和十八個 Sessions 分為六個會場同時進行。第二天也有一場 Keynote 
Presentation、和十八個 Sessions 分為六個會場同時進行。最後一天有二十三個
Sessions 分六個會場同時進行。這次發表的論文共 256 篇，來自台灣的論文約有 8 篇。
本人於第三天發表論文，跟國外學者互動熱絡。 
 
二、與會心得 
參加本次國際會議感觸良多，尤其能與來自世界各地的知名學者及專家進行學術交
流，獲益甚多。這個研討會首屆在泰國舉辦，接著第二、三屆也在泰國，之後第四、五
屆分別在日本和中國舉辦，這次再回到泰國。雖然主辦國是泰國，但似乎承辦的學術人
士幾乎都是日本人，且會議地點已延伸至亞太各地，據聞明年開會地點會在澳洲雪梨，
可見日本人的企圖心。主辦學校 King Mongkut’s Institute of Technology 相當熱誠款
待，舉如用餐的準備、餘興節目的安排，都盡到地主之誼，讓與會的學者都覺得不虛此
行。這次本人參與了幾個有興趣的場次，如 Wireless Mobile Network 和 Artificial 
Intelligence；其中有幾個研究主題甚佳，可考慮作為未來研究的方向。會場大部分的
發表者都有出席，而且反應熱絡，值得國內學術單位學習。 
 
三、建議 
首先感謝國科會在本人專題研究計劃下核給出席國際會議的補助，得與國際知名學
者進行學術交流。儘管在專題研究計劃下核給出席國際會議的機會不易，在此還是建議
國科會應多鼓勵國內學者參與國際會議以增廣見聞並吸收新知；另外國內學術單位也應
積極爭取舉辦知名的國際會議以提昇國際學術知名度，當然會場地點的選擇是相當重
要，國內舉辦過的國際會議地點大多侷限在大學校院，如能在名勝風景區舉辦，則較能
吸引國際知名學者參與。 
 
四、攜回資料名稱及內容 
大會論文集、光碟片、及未來 IEEE 主辦之國際會議宣傳資料 
 
五、其他 
無 
In a mobile environment [9-11], there are many base 
stations and RNCs (Radio Network Controller), as shown in 
Fig. 1. Once a user enters the coverage of a base station, 
his/her mobile host can communicate with the base station at 
the same time; i.e., the user can make a call. Also, the user 
mobile host can interact with the base station to request some 
information. However, the information (or data) is not stored 
in the communicating base station, but stored in the 
supervisory RNC [11-14]. In general, an RNC can manager 
several base stations, and it plays the role of allocating radio 
resources to these base stations. When a user sends a data 
request, the covering base station will forward it to the 
supervisory RNC, and then the RNC will send back the 
requested data via the base station. 
 
Fig. 1. A mobile environment 
 
Basically, behind a mobile environment, RNCs are 
connected with each other via a wired core network that is not 
necessarily fully-connected. Thus, mobile hosts under the 
base stations managed by different RNCs can communicate 
with each other via the wired core network. Furthermore, 
when a user requests data using his/her mobile host, the 
covering base station will forward it to the supervisory RNC. 
If the requested data is exactly stored in the RNC, the RNC 
will response it to the user immediately; otherwise, the 
request will be forwarded to the RNC storing the requested 
data through the wired core network, thereby involving the 
overheads of communication costs and transmission time. 
The issue addressed in the paper is to determine the 
locations of data (i.e., global data allocation in RNCs) in order 
to get the requested data mostly from a local RNC, but not 
from remote RNCs. The word “global” means that the data 
allocation is considered as a whole based on the requested 
data of all users, but not based on an individual user one by 
one. However, the efficiency of global data allocation is based 
on user behaviors, such as user request patterns and user 
moving patterns. The user moving patterns mean the frequent 
paths that a user roams around the mobile network. In the past, 
mining for user moving patterns has been explored in a few 
literatures [3, 7]. Here, given user request patterns and user 
moving patterns, we will move the focus on global data 
allocation in RNCs to avoid unnecessary transmission delay. 
Thus, the issues could be summarized as follows: 
1) Which RNCs do we allocate the data at? 
2) Which data should we allocate? 
III. DATA ALLOCATION ALGORITHMS 
A. Preprocessing 
Based on user request patterns and user moving patterns, in 
this section, we will develop data allocation algorithms in 
RNCs to avoid unnecessary transmission delay. Since users 
roam around the base stations in the mobile network, but 
requested data is stored in RNCs, we should map visited base 
stations into visited RNCs according to the subordinacy 
between RNCs and base stations. Given the example of the 
subordinacy between RNCs and base stations in Table I and 
user moving patterns Table II, we can map the patterns in 
Table II into the patterns in Table III called RNC Frequency 
matrix (i.e., RNCF matrix) here. Besides, for user request 
patterns, we have User Request matrix (i.e., UR matrix), as 
the example shown in Table IV. Finally, according to the 
environment, we have an RNC Communication Cost matrix 
(i.e., CC matrix) and an RNC Transmission Time matrix (i.e., 
TT matrix), respectively as the example shown in Table V 
and Table VI [15]. 
 
TABLE I SUBORDINACY BETWEEN RNCS AND BASE STATIONS 
 
RNC Managed BS 
RNC1 (BS1, BS2, BS4) 
RNC2 (BS3, BS5, BS9, BS10) 
RNC3 (BS6, BS7, BS8) 
 
TABLE II USER MOVING PATTERNS 
 
User Moving patterns 
U1 (BS1, BS3, BS7, BS8), (BS4, BS6, BS7) 
U2 (BS1, BS5, BS9, BS10) 
U3 (BS5, BS9, BS10), (BS1, BS2, BS3), (BS6, BS9) 
U4 (BS2, BS3, BS8), (BS1, BS2, BS4 ,BS5 ,BS7) 
 
TABLE III RFCF MATRIX 
 
 U1 U2 U3 U4 
RNC1 2 1 2 4 
RNC2 1 3 5 2 
RNC3 4 0 1 2 
 
TABLE IV UR MATRIX 
 
 D1 D2 D3 D4 D5 D6 D7 D8
U1 0 1 1 0 0 1 0 1 
U2 1 0 1 1 1 0 0 1 
U3 1 1 1 0 0 0 1 0 
U4 0 0 0 0 1 1 1 0 
 
minimizing user communication costs. The first step is also to 
multiply UR matrix by RNCF matrix to produce RD matrix. 
In the second step, the least communication cost between any 
two RNCs (i.e., LCC matrix) can be produced from CC 
matrix using Dijkstra’s algorithm. Then, the third step is to 
multiply RD matrix by LCC matrix to produce LCCRD 
matrix. According to the preceding example, LCC matrix and 
LCCRD matrix would be as follows: 
 
 RNC1 RNC2 RNC3 
RNC1 0 6 2 
RNC2 6 0 4 
RNC3 2 4 0 
 
 D1 D2 D3 D4 D5 D6 D7 D8
RNC1 50 46 64 18 34 30 48 32
RNC2 22 44 50 6 38 60 48 34
RNC3 38 32 46 14 30 24 40 22
The element (i, j) in LCCRD matrix (i.e., data Dj allocated at 
RNCi) represents the total communication cost required for 
other RNCs. For example, for data D1 allocated at RNC1, the 
total communication cost required for RNC2 and RNC3 is 50. 
Thus, in the last step, we select the minimum element of each 
column in LCCRD matrix, and allocate each data in the 
corresponding RNC as follows: 
 
RNC Allocation pattern 
RNC1 { } 
RNC2 {D1, D4} 
RNC3 {D2, D3, D5, D6, D7, D8} 
 
The algorithm could not be terminated if the required copies 
of each data are more than one. Here, in order to reduce 
communication costs, we allow the copies of each data up to 
the half number of RNCs in the system. However, when extra 
copies are required, LCC matrix should be re-computed since 
the ever-allocated RNC in CC matrix cannot be considered. 
E. Response Time-Oriented Algorithm 
This algorithm is similar to the communication 
cost-oriented algorithm, but it considers user response time. 
The rationale is based on that high hit ratios do not 
necessarily imply short response time. Thus, the response 
time-oriented algorithm focuses on minimizing user response 
time. The first step is also to multiply UR matrix by RNCF 
matrix to produce RD matrix. In the second step, the shortest 
response time between any two RNCs (i.e., SRT matrix) can 
be produced from TT matrix also using Dijkstra’s algorithm. 
According to the preceding example, SRT matrix would be as 
follows: 
 RNC1 RNC2 RNC3 
RNC1 0 5 3 
RNC2 5 0 2 
RNC3 3 2 0 
Then, the third step is to column-wise multiply each column 
in RD matrix by SRT matrix to produce SRTRD matrix. For 
data D1, SRTRD matrix would be as follows: 
 
 
 RNC1 RNC2 RNC3 
RNC1 0(0*3) 15(5*3) 9(3*3) 
RNC2 40(5*8) 0(0*8) 16(2*8)
RNC3 3(3*1) 2(2*1) 0(0*1) 
 
The column j in SRTRD matrix (i.e., data allocated at RNCj) 
represents the response time required for other RNCs. For 
example, for data D1 allocated at RNC1, the response time 
required for RNC2 and RNC3 is 40 and 3, respectively. Since 
user response time is dominated by the critical path (i.e., the 
longest response time), we select the maximal element of each 
column in SRTRD matrix. Then, we select the minimum 
element from all the maximal elements, and allocate the data 
in the corresponding RNC. According to the matrix above, 
data D1 will be allocated at RNC2. 
Similar to the communication cost-oriented algorithm, the 
algorithm could not be terminated if the required copies of 
each data are more than one. As well, when extra copies are 
required, SRT matrix should be re-computed since the 
ever-allocated RNC in TT matrix cannot be considered. 
IV. PERFORMANCE EVALUATIONS 
In the section, we conducted several experiments to 
evaluate the algorithms and compared their pro and con. In 
the system environment, three basic parameters such as the 
number of RNCs, the number of users, and the number of data 
are relative to the inputs of the algorithms; i.e., RNCF matrix 
and UR matrix. Here, we set the number of RNCs 10, the 
number of users 1000, and that of data 100. In addition, three 
measures such as hit ratios, communication costs, and 
response time are used to compare the performance of these 
algorithms. 
A. Experiment 1 
The experiment is to evaluate the performance of the 
algorithms while varying the average request data of each 
user. The user moving patterns and user request patterns are 
randomly generated. As shown in Fig. 2, we observed two hit 
ratio based algorithms are not sensitive to varying request 
data. The average hit ratios of both algorithms keep a 
significant percentage in steady no matter how the average 
request data is varied, but the RNC-oriented algorithm is 
better than the data-oriented algorithm. 
 
 RNC1 RNC2 RNC3 
RNC1 0 5 3 
RNC2 5 0 2 
RNC3 3 2 0 
 D1
RNC1 3 
RNC2 8 
RNC3 1 
