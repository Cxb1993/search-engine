practical mechanism to communicate with other DHCP servers for
keeping their databases of assigned addresses synchronized
(Droms, 1999). Eighth, a DHCP server does not allow DNS clients
and servers to negotiate the management of DNS records asso-
ciated with the client’s name and address (Droms, 1999). Ninth, a
DHCP server currently cannot defend against network attacks
such as denial-of-service attacks (Droms, 1999). Although a DHCP
server indeed has usability in certain situations, e.g. for the
purpose of network management, a DHCP server should not be
considered necessary in each network due to its drawbacks. If no
DHCP server exists in a network to serve hosts and no network
administrator helps users manually conﬁgure the hosts, currently
no practical solution can make the hosts access networks.
In this paper, Automatic Host Conﬁguration Mechanism (AHCM)
is proposed to make a host access Ethernet and Wireless Local Area
Network (WLAN) (Samdanis et al., 2009) without a DHCP server.
AHCM is neither designed to replace DHCP clients in hosts nor
created to abandon DHCP servers in all networks. Contrarily, AHCM is
a backup to make hosts access networks when no DHCP server exists
in a network to serve the hosts and no network administrator helps
users manually conﬁgure the hosts. AHCM can automatically locate IP
addresses usable to hosts and ﬁnd network information in a
transparent way without any user interference. Working like protocol
software inside an Operating System (OS), AHCM has high compat-
ibility because of neither modifying any application nor deploying a
third party server in a network. Most importantly, AHCM does not
have drawbacks in a DHCP server, because AHCM (1) can save the
cost of deploying a DHCP server, (2) can work without any network
administrator’s management, (3) can avoid power consumption of
running a DHCP server, (4) can work without a DHCP server or a
network administrator to conﬁgure a host, (5) can make a host access
network without caring about the malfunction or malicious conﬁg-
uration of a DHCP server, (6) can occupy an IP address on demand
without easily exhausting IP addresses, (7) has no need to synchro-
nize databases with DHCP servers, (8) keeps intact the mapping of
addresses to names in DNS servers, and (9) has no server to be
attacked. AHCM is very suitable to serve hosts in certain networks,
which are unlikely managed by DHCP servers, e.g. an airport or
conference hall prepared for many mobile visitors to temporarily
access networks. AHCM is implemented in the protocol stack on
Windows XP, because Windows is the most popular OS in the
world. Accordingly, AHCM has high compatibility and practicability
without updating the existing applications on Windows. Moreover,
AHCM is tested in several experiments to identify its overheads and
performances.
This paper is organized as follows. Section 2 reviews DHCP as
background. Section 3 explains AHCM. Section 4 discusses the
AHCM implementation. Section 5 presents the AHCM performance.
Section 6 discusses related works. Section 7 concludes this paper.
2. Background
In the section, we review how a host uses DHCP to acquire an
IP address, extend the lease, and return the IP address to a DHCP
server in a network.
When a host starts with the DHCP client enabled as Host A in
Fig. 1, it broadcasts a DHCP DISCOVER to let all DHCP servers in
the network know that it needs an IP address. Then, the host
receives DHCP OFFERs from DHCP servers in the network and
picks an IP address in one of the DHCP OFFERs; in fact, the host
may pick an unusable IP address because of having no way to
distinguish the ofﬁcial DHCP OFFER from DHCP OFFERs offered by
maliciously conﬁgured DHCP servers. The host broadcasts a DHCP
REQUEST corresponding to the chosen DHCP OFFER to let all
DHCP servers know whose IP address interests it. Finally, the host
receives a DHCP ACK and knows that the DHCP server conﬁrms
the request and will not rent the IP address to other hosts until
the lease expiration. Or, the host may receive a DHCP NACK to
indicate that the DHCP server refuses the DHCP REQUEST. After
acquiring an IP address from a DHCP server in the network, the
host should send an identical Address Resolution Protocol (ARP)
REQUEST (Plummer, 1982) several times to conﬁrm that no other
hosts occupy the IP address and answer the ARP REQUEST.
When an IP address rented to a host is nearly expired, the host
sends a DHCP REQUEST to the DHCP server for extending the lease
as shown in Fig. 2. The host receives a DHCP ACK if the DHCP server
grants the request. If the DHCP server does not grant the request,
the host receives a DHCP NACK and then broadcasts a DHCP
DISCOVER again for acquiring a different IP address from DHCP
servers. Before the host shuts down, it should return the IP address
to the DHCP server by sending a DHCP RELEASE. If the host does
not send a DHCP RELEASE to explicitly return the IP address to the
DHCP server, e.g. when suddenly powered off or taken away from
the network, the DHCP server cannot rent the IP address to another
host until the lease expiration because of having no way to know
whether the IP address is still occupied or not.
DHCP Server
Host A
Host C
DHCP OFFER
DHCP REQUESTDHCP NACK
DHCP DISCOVER
A
RP
 R
EQ
U
ES
T
Host B
Host D
DHCP ACK
Normal Message
Abnormal Message
Fig. 1. Acquiring IP address from DHCP server.
DHCP Server
Host A
Host C
DHCP REQUEST
DHCP ACK
DHCP NACK
DHCP RELEASE
Host B
Host D
Normal Message
Abnormal Message
Fig. 2. Extending lease and returning IP address to DHCP server.
T.-C. Huang, K.-C. Chu / Journal of Network and Computer Applications ] (]]]]) ]]]–]]]2
Please cite this article as: Huang T-C, Chu K-C. Networking without Dynamic Host Conﬁguration Protocol server in Ethernet and
Wireless Local Area Network. J Network Comput Appl (2011), doi:10.1016/j.jnca.2011.07.010
packets (e.g. packets destined to other hosts in the network), we do
not use this approach because of the following: (1) it is necessary
for AHCM to avoid violating privacy, (2) it is gentle for AHCM to
collect information in a legal way, (3) it is robust for AHCM to
consider that certain network devices such as a switch may ﬁlter
out packets destined to other hosts, and (4) it is outstanding for
AHCM to work without any special mechanism. After extracting IP
and MAC addresses from broadcast packets sent by other hosts,
Gossip Listener saves them in Gossipmonger Database. Besides,
Gossip Listener accepts a command from Phase Controller to
monitor the IP address occupied by the host. Once the owner of
the IP address appears in the network, Gossip Listener uses an
owner appearance event to notify Phase Controller.
Free IP Address Seeker works at the IP Probe phase. Free IP
Address Seeker accepts a list of candidate IP addresses from Phase
Controller and probes the IP addresses in the list to see whether
they are currently occupied by other hosts. To speed up the probe
process, Free IP Address Seeker uses Massive Query Algorithm
(MQA) that can accept a conﬁgurable target number and probe
multiple hosts simultaneously according to the target number. After
probing the IP addresses in the list on behalf of Phase Controller,
Free IP Address Seeker reports the result to Phase Controller, e.g. the
IP addresses currently not occupied by other hosts.
Similar to Free IP Address Seeker, Gateway Seeker accepts a list
of candidate gateway MAC addresses from Phase Controller and
probes the MAC addresses in the list to see whether the list
includes a MAC address of the gateway in the network. Working
only at the Gateway Probe phase, Gateway Seeker sends the
gateway probe packet to each MAC address in the list. After
probing candidate gateway MAC addresses in the list on behalf of
Phase Controller, Gateway Seeker reports the result to Phase
Controller, e.g. the MAC address belonging to the gateway.
Phase Controller is the core component of AHCM. Phase
Controller decides to enter a phase according to whether an IP
address not occupied by a host, the subnet mask suitable to the
network, and the gateway for routing packets are found or not. At
the Gossip phase, Phase Controller reads from Gossipmonger
Database a list of IP addresses collected by Gossip Listener, and
analyzes the IP addresses to deduce the subnet address and mask
with Repeatable Subnet Approach Algorithm (RSAA). At the IP
Probe phase, Phase Controller sends Free IP Address Seeker a list
of candidate IP addresses generated according to the deduced
subnet address and mask. Phase Controller asks Free IP Address
Seeker to ﬁnd an IP address not occupied by a host. At the
Gateway Probe phase, Phase Controller sends Gateway Seeker a
list of candidate gateway MAC addresses read from Gossipmonger
Database. Phase Controller asks Gateway Seeker to send gateway
probe packets from the free IP address found by Free IP Address
Seeker to each candidate gateway MAC address. If the MAC
address belonging to a gateway can be found, Phase Controller
enters the Stable phase by outputting the IP address not occupied
Gossip Listener
Gossipmonger
Database
Free IP Address
Seeker
Gateway Seeker
Saving Collected
IP or MAC Address
Phase Controller
Reading Collected
IP or MAC Address
Sending Owner
Appearance Event
Monitoring Occupied
IP Address
Probing
IP Address
Sending
IP Address
Probe Result
Probing
Gateway
Sending
Gateway
Probe Result
Fig. 4. AHCM components.
Gossip Phase
IP Probe Phase
Gateway Probe Phase
Stable Phase
Receiving
Broadcast Packets
Gossip Listen Timeout &
Subnet Address/Mask Deduced
Free IP Address Located
Probing IP Address
Probing Gateway
Gateway Located
Receiving Owner
Appearance Event
Receiving Owner
Appearance Event
Gateway Probe
Timeout
IP Address Probe
Timeout
Fig. 5. AHCM state diagram.
T.-C. Huang, K.-C. Chu / Journal of Network and Computer Applications ] (]]]]) ]]]–]]]4
Please cite this article as: Huang T-C, Chu K-C. Networking without Dynamic Host Conﬁguration Protocol server in Ethernet and
Wireless Local Area Network. J Network Comput Appl (2011), doi:10.1016/j.jnca.2011.07.010
increased to 21 after several trials. Then, RSAA may pick the
network owning the most IP addresses or try each network to
continue the deduction until a free IP address and the gateway
both are found according to the deduced subnet address
and mask.
To speed up deducing the correct subnet address and mask,
RSAA can use a ﬁrst-time quick deduction as a workaround
instead of the aforementioned regular deduction to handle IP
addresses collected by Gossip Listener for the ﬁrst time, because
of the preﬁx bit quantity that could be distant from the correct
subnet address and mask. In the ﬁrst-time quick deduction, RSAA
can deduce a subnet address and mask merely according to IP
addresses collected by Gossip Listener without caring about the
preﬁx bit quantity. When Gossip Listener collects an IP address
(e.g. 140.131.1.254) at the Gossip phase, for example, RSAA can
assume that all other IP addresses smaller than the collected IP
address (i.e. those IP addresses between 140.131.1.1 and
140.131.1.253) belong to the same network. In this example,
RSAA will conclude that the maximum identical IP address preﬁx
is 140.131.1.0/24 and 140.131.1.255 is the default subnet mask. If
the subnet address and mask deduced by the ﬁrst-time quick
deduction are incorrect (due to failing to ﬁnd the corresponding
gateway at the following Gateway Probe phase), RSAA begins the
regular deduction with the preﬁx bit quantity.
RSAA does not guarantee to deduce the subnet address and
mask exactly corresponding to the real network, so it may make
AHCM work according to an inexact subnet address and mask at
the following phases. However, RSAA can be justiﬁed to use in
AHCM because of the following: (1) AHCM is designed to make
sure that a host can access networks rather than to ﬁnd the
subnet address and mask for a network; (2) AHCM repeatedly
asks RSAA to deduce a different subnet address and mask when
failing to locate the gateway capable of routing packets from the
free IP address located according to the deduced subnet address
and mask; (3) AHCM eventually can locate a workable free IP
address and the gateway for the network after trials; (4) AHCM
can work in the protocol stack on an OS to shield the applications
in the host from the real network; (5) the gateway can forward
packets on behalf of a host to other hosts even though the hosts
reside at the same network, if AHCM relying on an inexact subnet
address and mask sends to the gateway packets destined to a host
residing at the same network.
3.5. Massive Query Algorithm
Address Resolution Protocol (ARP) (Plummer, 1982) is widely
used in Ethernet and WLAN to not only query a MAC address
associated with an IP address, but also identify whether an IP
address is occupied by a host or not. For querying a MAC address
associated with an IP address, ARP uses an ARP REQUEST that
carries the sender MAC address in Field ‘‘ar$sha’’, the sender IP
address in Field ‘‘ar$spa’’, zeros in Field ‘‘ar$tha’’, and the target IP
address in Field ‘‘ar$tpa’’. When the owner of an IP address
appears in a network (due to booting or roaming), ARP uses an
ARP REQUEST carrying the IP address of the owner (i.e. the sender
IP address) in Fields ‘‘ar$spa’’ and ‘‘ar$tpa’’ to identify whether the
IP address is occupied by a host or not. Nevertheless, ARP always
puts the sender IP address in Field ‘‘ar$spa’’ and broadcasts ARP
REQUESTs to all hosts in a network, which means that any host in
the network can know the owner of an IP address in the network
according to the ARP REQUESTs. Besides, ARP does not require
that the sender IP address in Field ‘‘ar$spa’’ and the target IP
address in Field ‘‘ar$tpa’’ should belong to the same network,
which means that we can identify a free IP address with an ARP
REQUEST that carries a legal IP address (i.e. not all-zero, broad-
cast, and multicast addresses) as the sender IP address in Field
‘‘ar$spa’’ and a potentially free IP address as the target IP address
in Field ‘‘ar$tpa’’.
Massive Query Algorithm (MQA) uses the pipeline technology
to quickly ﬁnd an IP address not occupied by a host. Instead of
using a traditional single query–response way as shown in
Fig. 8(a), MQA sends a series of query packets before waiting for
their response packets. Take ARP as shown in Fig. 8(b) for
example, MQA simultaneously sends ARP REQUESTs targeting
different IP addresses and waits for ARP REPLYs from owners of
the target IP addresses. After certain time passes, MQA checks the
sent ARP REQUESTs to see which one does not get a response.
Because an identical ARP REQUEST is usually required to send
several times for identifying a free IP address, MQA can avoid a
delay of locating a free IP address by pipelining the identical ARP
REQUEST several times. Besides, MQA generally can ﬁnd more
than one IP address not occupied by a host in a network.
MQA is very suitable to work for AHCM because of the
following: (1) MQA can locate IP addresses not occupied by other
hosts according to a subnet address and mask, (2) MQA can use
the pipeline technology to quickly locate a free IP address in a
large network where has many hosts, and (3) MQA can greatly
save time of locating a free IP address with ARP when an identical
ARP REQUEST is usually required to send several times for
identifying a free IP address.
4. Implementation
We implement the AHCM prototype on Windows XP, because
Windows is the most popular OS in the world. We need a user to
set two legal and arbitrary IP addresses (i.e. not all-zero, broadcast,
Tim
e
Using IP4
Tim
e
Using IP 4
ARP with MQA
ARP without MQA
Host 4 Host 1 Host 2 Host 3
Host 4 Host 1 Host 2 Host 3
Fig. 8. Massive Query Algorithm Example.
T.-C. Huang, K.-C. Chu / Journal of Network and Computer Applications ] (]]]]) ]]]–]]]6
Please cite this article as: Huang T-C, Chu K-C. Networking without Dynamic Host Conﬁguration Protocol server in Ethernet and
Wireless Local Area Network. J Network Comput Appl (2011), doi:10.1016/j.jnca.2011.07.010
In the AHCM prototype, we simply implement Gossipmonger
Database with a memory space that can be updated and looked
up by other AHCM components. We program Phase Controller to
periodically reclaim the expired data in Gossipmonger Database.
We implement RSAA and MQA in Phase Controller. Besides, we
make Phase Controller switch AHCM to the Gossip phase, the IP
Probe phase, the Gateway Probe phase, or the Stable phase
according to the AHCM state diagram in Fig. 5. Empirically,
we conﬁgure Gossip Listener to collect IP and MAC addresses
10 s (i.e. the Gossip Listen Timeout), Free IP Seeker to probe all IP
addresses belonging to a subnet deduced by Phase Controller
(instead of using certain time as the IP Address Probe Timeout),
and Gateway Seeker to ﬁnd the gateway 14 s (i.e. the Gateway
Probe Timeout).
5. Performance
5.1. Experiment conﬁguration
We use a gigabit Ethernet switch and four identical PCs to
construct a network according to the network topology in Fig. 10.
We run Windows Server 2003 on one of the four PCs to emulate a
router, i.e. PC Router in Fig. 10, and Windows XP on other PCs to
emulate hosts, because Windows Server 2003 can work as a
router and because Windows Server 2003 and Windows XP have
no obvious performance difference between each other (Salah and
Hamawia, 2009). We use PC Router to connect two networks,
i.e. 192.168.1.0/24 and 192.168.2.0/24. We deploy PC 1 and PC
2 in the same network (i.e. 192.168.1.0/24) but PC 3 in the other
network (i.e. 192.168.2.0/24). We use PC 3 to emulate a host at
the Internet. We install AHCM on PC 1 and conﬁgure 1.1.1.1,
255.255.255.0, and 1.1.1.254 as its default IP address, subnet
mask, and gateway address in Windows XP, respectively. In the
following experiments, we may change the conﬁguration of the
network adapter in PC 2 according to experiment requirements.
5.2. Overhead breakdown
We can divide the overhead of AHCM into several parts as
follows.
TXNAT: the overhead of using checksum adjustment (Braden
et al., 1988) to handle an outgoing packet and searching the ARP
pool embodied by Gossipmonger Database for the MAC address
associated with the destination IP address.
RXNAT: the overhead of using checksum adjustment (Braden
et al., 1988) to handle an incoming packet.
CIPMAC: the overhead of collecting IP and MAC addresses,
i.e. searching the ARP pool embodied by Gossipmonger Database
and building a record in the pool for newly collected IP and MAC
addresses.
RSAA: the overhead of using Repeatable Subnet Approach
Algorithm (RSAA) to deduce the subnet address and mask for a
network.
MQA: the overhead of using Massive Query Algorithm (MQA)
to generate a list of candidate IP addresses.
FFIP: the overhead of ﬁnding a free IP address, i.e. creating an
ARP REQUEST and sending it three times with an interval of 1 s
between the ARP REQUESTs.
FGMAC: the overhead of ﬁnding the MAC address of a gateway, i.e.
creating and sending an ICMP ECHO REQUEST and then waiting for
the corresponding ICMP TIME EXCEEDED returned from a gateway.
Wemake PC Router send one ARP REQUEST per second to query
the MAC address associated with an IP address in the network (i.e.
192.168.1.0/24). We observe the AHCM overhead on PC 1 in Fig. 10,
and show them in Fig. 11. We know that FFIP costs 3750.189 ms
(short for millisecond) and dominates the AHCM overhead because
AHCM sends an ARP REQUEST three times with an interval of 1 s
between ARP REQUESTs to make sure that an IP address is not
occupied by a host. We see that the second dominant factor is
0.184 ms contributed by FGMAC because AHCM needs to send an
ICMP ECHO REQUEST and wait for the corresponding ICMP TIME
EXCEEDED returned from a gateway. We note that TXNAT uses
more than 0.000512 ms in comparison to RXNAT, because TXNAT
has to locate the MAC address associated with the destination IP
address in the ARP pool for each outgoing packet. Because CIPMAC
not only builds a record in the ARP pool for newly collected IP and
MAC addresses but also share the ARP pool with TXNAT, we
observe that the overhead of CIPMAC is very close to that of
TXNAT. Besides, we observe that RSAA and MQA cost about
0.002815 and 0.002775 ms, respectively. In summary, we know
that AHCM totally costs 3.75 s in the optimal case and is suitable to
be a backup of DHCP client due to costing much less than 10 s
regulated by the DHCP standard (Droms, 1997) to wait for
desynchronizing or renegotiating the use of DHCP.
5.3. Observation of Repeatable Subnet Approach Algorithm (RSAA)
For observing RSAA on Internet-capable networks (i.e. the
network capable of accessing the Internet), we create several
PC 1
PC 2
PC Router PC 3
PC
CPU AMD Athlon II X4 620 (2.6 GHz)
RAM 4 GB DDR2
HD 560 GB
NIC Gigabit Ethernet * 3
OS Windows XP (PC 1~3),Windows Server 2003 (PC Router)
Switch NIC Gigabit Ethernet * 8
192.168.2.254 192.168.2.3
192.168.2.0/24192.168.1.0/24
192.168.1.2
1.1.1.1
192.168.1.254
Fig. 10. Network topology.
T.-C. Huang, K.-C. Chu / Journal of Network and Computer Applications ] (]]]]) ]]]–]]]8
Please cite this article as: Huang T-C, Chu K-C. Networking without Dynamic Host Conﬁguration Protocol server in Ethernet and
Wireless Local Area Network. J Network Comput Appl (2011), doi:10.1016/j.jnca.2011.07.010
subnet mask for the IP address (i.e. 192.168.1.255). Accordingly, we
make PC Router only route packets for hosts belonging to the
Internet-capable network (i.e. 192.168.1.0/24), but ignoring packets
of hosts belonging to the Intranets. In other words, we observe
RSAA to work in an environment that may be affected by trafﬁc
from other networks incapable of accessing the Internet. We think
that the scenario can happen to users when their hosts such as PCs
are physically connected by switches or hubs to multiple networks,
but certain of the networks are Intranets without the support of
accessing the Internet for the purpose of administration or security.
We conﬁgure PC Router to send ARP REQUESTs between intervals
ranging from 2 to 10 s. Meanwhile, we conﬁgure RSAA to work
initially with different preﬁx bit quantities.
In Fig. 13, we observe that the number of Intranets does not
affect time waited by PC 1 to access the Internet. Because the tests
have only one Internet-capable network, we observe that the ARP
REQUEST arrival interval slightly increases time waited by PC 1 to
access the Internet, which is similar to the observation in Fig. 12.
Taking RSAA on 1 Intranet and 1 Internet-capable networks for
example, we observe that 2 s ARP REQUEST arrival interval makes
the host wait 18.724 s for accessing the Internet at the best case,
but 10 s ARP REQUEST arrival interval makes it wait 23.481 s for
accessing the Internet at the best case. However, we note that the
ARP REQUEST arrival interval does not bring more negative
impacts to the AHCM performance than preﬁx bit quantity.
In the tests, we note that preﬁx bit quantity can strongly affect
the AHCM performance when the regular deduction of RSAA is
activated. We observe that the regular deduction of RSAA is
activated for handling IP addresses belonging to Intranets when
the subnet address and mask of an Intranet deduced by the ﬁrst-
time quick deduction cannot make PC 1 access the Internet. After
RSAA ﬁnishes deducing the subnet address and mask for an
Intranet, we observe that PC Router does not respond to the ICMP
ECHO REQUEST sent by Gateway Seeker from a free IP address
belonging to the Intranet. Accordingly, we see that RSAA wastes
time on the regular deduction and delays PC 1 to access the
Internet until the subnet address and mask belonging to the
Internet-capable network are deduced. Besides, we note that
curves in Fig. 13 become stable when RSAA begins with preﬁx
bits larger than 22 bits, which shows that using large preﬁx bits is
helpless to the performance of AHCM. Accordingly, we think that
small preﬁx bits (in comparison to the real subnet mask of the
network) may affect the AHCM performance while large preﬁx
bits are helpless to make RSAA quickly deduce the subnet address
and mask allowing for AHCM to locate a free IP address and the
gateway. As a tradeoff, we suggest that RSAA can be conﬁgured
to begin with appropriate preﬁx bits such as 22 bits or 24 bits
(i.e. the default mask for a Class C network (Gerich, 1993)),
because a network greater than Class C is unusual.
5.4. Observation of Massive Query Algorithm (MQA)
We intend to observe the performance of MQA when different
numbers of ARP REQUESTs are sent for locating a free IP address
in a network that already has some hosts. To this end, we bind
different numbers of IP addresses in a uniform distribution to the
Fig. 13. RSAA on Intranet and Internet-capable networks.
T.-C. Huang, K.-C. Chu / Journal of Network and Computer Applications ] (]]]]) ]]]–]]]10
Please cite this article as: Huang T-C, Chu K-C. Networking without Dynamic Host Conﬁguration Protocol server in Ethernet and
Wireless Local Area Network. J Network Comput Appl (2011), doi:10.1016/j.jnca.2011.07.010
each time about 49.5%. Accordingly, we are convinced that MQA is
useful to locate a free IP address, especially in a network that
already has hosts occupying most IP addresses.
5.5. Observation of UDP performance
We want to observe the impact of AHCM NAT overhead on the
UDP performance. First, we observe the UDP performance of
accessing Internet in the best case. Because PC 3 is a hop next
to PC Router, we use a UDP socket application on PC 1 (AHCM
installed) to receive and transmit 10,000 Ethernet MTU packets
(i.e. 1472 byte UDP payload in a packet) to PC 3 (no AHCM
installed) through PC Router after PC 1 successfully occupies a
free IP address. Second, we observe the UDP performance of
accessing LAN in the best case. Accordingly, we install AHCM on
PC 2 and make PC 1 (AHCM installed) receive and transmit 10,000
Ethernet MTU packets to PC 2 (AHCM installed) after both of them
successfully occupy free IP addresses. For comparison, we repeat
the test without any AHCM on the PCs, and refer to the result as
the generic case. In the tests, we conﬁgure the UDP socket
application to have a certain delay (ranging from 0 ms to 10 ms)
between packets when transmitting them. We get results in
Fig. 17 and discuss their receipt and transmission performances.
According to the upper part of Fig. 17, we can observe that
AHCM has the UDP receipt performance comparable to the
generic case because their lines closely overlap each other.
However, we note that receiving data over UDP from a generic
host in the Internet can outperform receiving data over UDP from
an AHCM host in LAN about 1.856 s, no matter whether PC 1 has
AHCM or not. Accordingly, we know that either PC Router or PC
3 has a transmission improvement of 0.1856 ms per packet
(i.e. 1.856 s/10,000 packets). In other words, we are aware that
the network adapter of PC Router or PC 3 has better transmission
performance than that of PC 2, because receiving data from PC 2 over
Fig. 16. MQA impact on resuming Internet access.
Fig. 17. UDP performance comparison.
T.-C. Huang, K.-C. Chu / Journal of Network and Computer Applications ] (]]]]) ]]]–]]]12
Please cite this article as: Huang T-C, Chu K-C. Networking without Dynamic Host Conﬁguration Protocol server in Ethernet and
Wireless Local Area Network. J Network Comput Appl (2011), doi:10.1016/j.jnca.2011.07.010
Internet through a router is large and in proportion to the ﬁle size.
We take the case of transmitting 1472 MB ﬁle for example, and
observe that there is 43.67% difference.
In the TCP performance tests, we conclude the following:
(1) the TCP performance difference between the generic case
and the AHCM case is less than 0.36%, which can be negligible;
(2) according to the observations on slight TCP performance
difference between the generic case and the AHCM case, we
attribute the contribution to the implementation of the checksum
adjustment algorithm; (3) because of the TCP ﬂow control
mechanism, the TCP performance is more sensitive to the delay
in the middle of the path between communication correspon-
dents than to the AHCM NAT overhead; (4) because the AHCM
NAT overhead is ﬁxed but the hop count may change to incur a
longer communication delay according to a different host in the
Internet, we use a single hop in the test to prove that the latter is
the dominant factor responsible for the TCP performance.
6. Related works
Besides DHCP for the dynamic host conﬁguration, several
protocols have been regulated by the Internet Engineering Task
Force (IETF) for various purposes. Although the protocols may
provide certain network information, they either conﬁne their
capabilities to limited functions or hardly achieve what AHCM
does. Considering the scope of this paper, certain protocols
proposed by other scientists are not introduced because they
are designed for speciﬁc or proprietary environments (e.g. Inter-
net Packet Exchange (IPX) (Provan, 1991) and Network Basic
Input/Output System (NetBIOS) (Group, 1987)), future networks
(e.g. IPv6 (Deering and Hinden, 1998) and pervasive computing
(Misra et al., 2001)), or special network infrastructures (e.g. ad
hoc (Baccelli and Townsley, 2010; Wangi et al., 2008), mobile ad
hoc (Lee et al., 2009), mesh (Akyildiz et al., 2005), sensor (Teng
et al., 2006), cellular (Campos and Ricardo, 2005), and battleﬁeld
(Mcauley and Manousakis, 2000; McAuley et al., 2001;
Manousakis et al., 2005) networks). Therefore, protocols designed
for the existing networks and complying with the Internet
infrastructure are our concerns in this paper.
BOOTP (Croft and Gilmore, 1985) has certain functions similar
to DHCP, but is gradually replaced by DHCP. Cheshire et al. (2005)
propose a link-local address (i.e. the 169.254/16 preﬁx) that can be
automatically conﬁgured by hosts connected to the same physical
(or logical) link, but the link-local address is neither forwarded by a
gateway nor registered in a DNS (Mockapetris, 1987) server.
Mobile IP (Perkins, 2010) utilizing a technology of tunneling and
de-tunneling packets at foreign agents (i.e. foreign gateways)
allows a mobile host to access the Internet without reconﬁguring
its IP address, but has several drawbacks: (1) the mobile host, the
home agent, and the foreign agent all have to support Mobile IP;
(2) the mobile host works at a risk of network failure because
networks can be partitioned into isolated regions and because
home or foreign agents may fail; (3) communications established
by the mobile host suffer a serious performance penalty stemming
from the triangular route (Perkins and Johnson, 1998).
ICMP Router Discovery (Deering, 1991) can carry gateway IP
addresses in ICMP Router Advertisement messages from gateways
and allow gateways to respond to ICMP Router Solicitation
messages from hosts, but is not widely implemented (Aboba,
2004) in the existing gateways and hosts. Aboba (2004) suggests
using ARP (Plummer, 1982) to probe whether the default gateway
is reachable or not, but does not propose an alternative router
discovery mechanism. Although RIP (Malkin, 1998) and OSPF
(Moy, 1998) are widely implemented by gateways and can carry
gateway IP addresses and subnet masks in their routing messages,
but a host peeking at the routing messages has to wait for the
advertisement message announced periodically or accidentally
upon the change of network status.
The IETF Zeroconf Working Group (Guttman, 2001; Steinberg
and Cheshire, 2005) deﬁnes requirements for four zero conﬁg-
uration networking protocol areas, i.e. address autoconﬁguration,
name-to-address translation, service discovery, and multicast
address allocation, which are embodied by the link-local address
(Cheshire et al., 2005), the multicast DNS (Cheshire and Krochmal,
2011), the Service Location Protocol (SLP) (Guttman et al., 1999),
the DNS resource record (Gulbrandsen et al., 2000), and the
Zeroconf Multicast Address Allocation Protocol (ZMAAP)
(Catrina et al., 2002). Besides the aforementioned limitations of
the link-local address (Cheshire et al., 2005), the IETF Zeroconf
Working Group implies that most of the services and multicast
protocols not only have to be supported by the host and the
gateway but also are limited to single-segment networks where
all host communicating with each other are directly connected on
the same router.
At the premise of utilizing the existing protocols and keeping
intact the Internet infrastructure, we propose AHCM to automati-
cally locate a free IP address and important network information
such as the subnet mask and the gateway IP address without
modifying any application and deploying a third party server.
Besides, we agree with Perkins (1999) on the point that auto-
conﬁguration systems are part of march toward ever more capable
and friendly systems, while automatic conﬁguration protocols will
continue to gain importance as the network becomes larger and
more important to ever more people. Accordingly, we propose
AHCM that can be considered a capable approach to making
autoconﬁguration systems come true.
7. Conclusions
In this paper, Automatic Host Conﬁguration Mechanism
(AHCM) is proposed to make a host access Ethernet and Wireless
Local Area Network (WLAN) without a DHCP server. However,
AHCM is neither designed to replace DHCP clients in hosts nor
created to abandon DHCP servers in all networks. Conversely,
AHCM is a backup to make hosts access networks when no DHCP
server exists in a network to serve the hosts and no network
administrator helps users manually conﬁgure the hosts. AHCM
automatically locates IP addresses usable to hosts and ﬁnds
network information in a transparent way without any user
interference. Working like protocol software inside an Operating
System (OS), AHCM has high compatibility because of neither
modifying any application nor deploying a third party server in a
network. Most importantly, AHCM does not have drawbacks in a
DHCP server. AHCM is very suitable to serve hosts in certain
networks where are unlikely managed by DHCP servers, e.g. an
airport or conference hall prepared for many mobile visitors to
temporarily access networks. AHCM is implemented in the pro-
tocol stack on Windows XP, because Windows is the most popular
OS in the world.
In overhead breakdown experiments, AHCM totally costs
3.75 s in the optimal case and is suitable to be a backup of DHCP
client due to costing much less than 10 s regulated by the DHCP
standard to wait for desynchronizing or renegotiating the use of
DHCP. In Repeatable Subnet Approach Algorithm (RSAA) experi-
ments, AHCM on Internet-capable networks can use RSAA with
the ﬁrst-time quick deduction to quickly deduce the subnet
address and mask merely according to IP addresses in ARP
REQUESTs without initiating the regular deduction. AHCM on
Intranet and Internet-capable networks may activate the regular
deduction of RSAA and has the performance affected by the preﬁx
T.-C. Huang, K.-C. Chu / Journal of Network and Computer Applications ] (]]]]) ]]]–]]]14
Please cite this article as: Huang T-C, Chu K-C. Networking without Dynamic Host Conﬁguration Protocol server in Ethernet and
Wireless Local Area Network. J Network Comput Appl (2011), doi:10.1016/j.jnca.2011.07.010
行政院國家科學委員會補助國內專家學者出席國際學術會議報告 
                                                          99  年 12 月 28 日 
報告人姓名   何育昇 服務機構及職稱 
 龍華科技大學電子工程系 
 研究生 
  會議時間地點 
 99年 12月 24-26日 
 中國武漢 
國科會計畫編號  NSC99-2221-E-262-011 
會議名稱 
The 2nd International Symposium on Computer Network and 
Multimedia Technology (CNMT2010) 
發表論文題目 
A Novel Dynamic Distributed Scheduling Scheme in IEEE 802.16j 
Networks 
一、參加會議經過 
由 IEEE與華中師範大學、科技大學等等所舉辦的 IEEE International Symposium on 
Computer Network and Multimedia Technology (CNMT2010)，今年已經是第二屆了，地點
依然選擇與第一屆相同的城市，在中國湖北省武漢市舉辦，而這次的會議地點則選在洪
山區的湖濱花園酒店。我們被安排在 12月 24日報到，在 12月 25日下午發表論文，並
於 12月 26日參訪湖北省博物館。在考量飛機航班的情況下，我們決定於 12月 23日下
午出發。當天我們搭乘由桃園機場直飛武漢天河機場的班機，約經過兩個半小時的時間
便抵達武漢天河機場，此時大約為晚上七點半左右，因此我們便直接入住飯店。第二天
早上在飯店內用完早餐後，大約九點半左右我們便去大會會場大廳進行報到手續。我們
在 12月 24日於會場報到完畢後，向在場工作人員尋問會議廳的位置，以及各方面會議
的資訊。然而在報到過程中，也遇到了各國各界的先進，因此我們也邀請其他作者一同
吃中餐，討論彼此領域內容，並相互交流技術、觀點與文化，也因此認識了不少國外的
專家與學者。而吃完中餐後我們也與各界人士一同參觀與討論會議的場地及發表時間。
而後大家就各自回飯店內休息，準備明日報告的相關資料。12月 25日，我們吃完早餐
後，九點鐘即抵達會議廳，準備聽大會所舉辦的 Keynote Speech。整個上午共分成四個
場次，都是由各領域的 IEEE Fellow來為我們演講。其中包含了智慧型計算及應用技術、
系統分析語管理、多重低速率編碼與計算機未來的挑戰等等。四位專家可說是此相關領
域的先進，而其中一位是我們台灣交通大學的林教授，演說精彩，並且也熱心的替在座
的與會者解答問題。其他教授也有非常精彩且有趣的演說，在聽完四場演講後，我們也
得知了更多不同領域的技術與知識。而後我們將在大會工作人員的安排下，與各界人士
一同吃中餐，並聊聊上午演講的內容。吃完中餐後，我們就先回飯店準備下午我們要發
表的論文。整個研討會規模甚大，大約有 300位左右的專家學者在此，可說顯得格外的
熱鬧。而本人下午發表完研究成果後，也繼續參與了其他會議。整個會議有許多不同國
家的人士參與，會議中大家也都熱烈的討論，藉由這次的發表除了讓其他人士了解我們
目前的研究成果外，也可以得知其他國家學者的研究方向及進度，收穫很大。晚間便參
加由大會舉辦的晚宴，大家一邊吃飯一邊聊天，除了研討會的內容外，也聊了許多各地
方的風俗名情，在談笑間也相互認識了彼此。12月 26日，大會帶領我們至湖北省的博
物館，並向我們解說湖北省從古至今的發展，也說了未來需要的技術與需要的建設，其
中一項技術即希望能讓民眾能夠隨時隨地的能夠無線上網，這也正是我們論文技術的所
在。因此我們也大方的與他們討論無線網路的佈建、問題以及應用等等，當場也獲得不
少肯定，也讓各界人士知道我們的研究結果。結束後，我們就回飯店準備行李，並休息。
12月 27日，我們早上吃完早餐後，即趕往武漢天河機場，乘坐中午的班機，直飛桃園
國際機場，到達時大約快四點，也結束了這一次會議的行程。 
A Novel Dynamic Distributed Scheduling Scheme in 
IEEE 802.16j Networks 
Kuo-Chih Chu, Tzu-Chi Huang, Yu-Sheng Ho 
Department of Electronic Engineering  
Lunghwa University of Science and Technology 
Taoyuan, Taiwan 
 
 
Abstract—Many centralized scheduling schemes have been 
proposed because IEEE 802.16j does not regulate an official 
scheduling scheme. Although centralized scheduling schemes are 
easy to implement, they can not outperform distributed 
scheduling schemes in bandwidth utilization. Accordingly, we 
propose a novel dynamic distributed scheduling scheme in this 
paper. We use the scheme to allocate bandwidth according to the 
movement of network traffic. The simulation shows that our 
scheme can meet the Quality of Service (QoS) requirement of 
IEEE 802.16j in fairness, throughput, and delay time. 
Keywords-IEEE 802.16j; Distributed Scheduling; Quality of 
Service 
I.  INTRODUCTION  
IEEE 802.16j [1] uses Relay Stations (RSs) to increase the 
coverage and signal quality in the 802.16ʳ [2] network. Fig. 1 
shows the IEEE 802.16j network architecture. In IEEE 802.16j 
networks, Base Station (BS) maintains the network 
functionality and uses RSs to service MSs deployed out of its 
coverage. IEEE 802.16j supports Quality of Service (QoS) and 
divides user traffic into five service classes, i.e. Unsolicited 
Grant Service (UGS), real-time Polling Service (rtPS), non-
real-time Polling Service (nrtPS), extended rtPS (ertPS), and 
Best Effort (BE), according to the priority. To meet 
requirements of the five service classes, IEEE 802.16j 
networks need a scheduling scheme to allocate bandwidth 
according to characteristics of the service classes. 
IEEE 802.16j can use a centralized scheduling scheme or a 
distributed scheduling scheme. A centralized scheduling 
scheme uses a BS to carry out the entire schedule. A 
centralized scheduling scheme uses RSs to relay messages and 
data from the BS to MSs without using RSs to actively transmit 
control messages. Conversely, a distributed scheduling scheme 
uses both a RS and a BS to carry out the schedule and actively 
transmit control messages to subordinate MSs. A distributed 
scheduling scheme has the benefit of alleviating the load of a 
BS. Besides, a distributed scheduling scheme can use a RS to 
relay data among MSs in the same management domain 
without the help from a BS. Accordingly, a distributed 
scheduling scheme not only saves bandwidth between a RS and 
a BS, but also allows the BS to reuse the saving bandwidth for 
communicating with other RSs and MSs, which efficiently 
utilizes bandwidth. However, a distributed scheduling scheme 
is difficult to implement because it has to consider the 
scheduling requirements of a BS and RSs. 
BS
RS3 RS2
MS1
MS2
MS3
RS1
120°
 
Figure 1.  Architecture of IEEE 802.16j network 
Currently, most research works focus on proposing 
centralized scheduling schemes [3-7]. Although the schemes 
are easy to implement, they can not efficiently utilize 
bandwidth. [8] designs a distributed scheduling scheme but 
neither cares about the service class of a new user nor uses the 
frame format compatible to the IEEE 802.16j standard. 
Therefore, we propose a novel distributed scheduling scheme 
in this paper. According to the network load, our scheduling 
scheme can dynamically adjust the bandwidth reserved for 
various service classes and efficiently reuse the bandwidth to 
increase overall network performance. 
This paper is organized as follows. Section 2 introduces the 
scheduling scheme we propose. Section 3 uses the simulation 
to evaluate performance of the proposed scheduling scheme. 
Section 4 concludes this paper. 
II. Dynamic Distributed Scheduling Scheme 
This paper proposes a scheduling scheme named Dynamic 
Distributed Scheduling (DDS) scheme which works in a RS 
and a BS. When a MS wants to transmit data, it sends a 
Bandwidth Request (BR) to its superordinate RS. After the RS 
receives all BSs from MSs, it divides the BRs into two types. 
One type is the BRs whose source and destination are in the 
same RS. The DDS scheme uses the radio resource reuse 
algorithm to handle BRs of this type. Because the BRs’ sources 
and destinations are in the same domain managed by the RS, 
This work was supported by the National Science Council under contract: 
NSC99-2221-E-262-011. 
978-1-4244-8069-2/10/$26.00 ©2010 IEEE 153
III. Simulation and Discussion 
A. Simulation Environment 
In the section, we evaluate the performance of the DDS 
scheme. A good scheduling scheme has to satisfy bandwidth 
requests of data having a high priority when the network load 
is beyond 1. Accordingly, we configure the simulation to work 
in an environment having the network load beyond 1. In the 
simulation, the maximum network bandwidth is 15Mbps. The 
MS follows the Poisson distribution to generate traffic with a 
5ms frame size. The configuration parameters for traffic are 
listed at Table 1, and the architecture of simulation network is 
shown as Fig. 1. 
B. Simulation Result 
First, we evaluate throughput of using the DDS scheme. 
We define throughput as the quotient of using the bandwidth 
that a MS requests for a service class to divide the bandwidth 
that a RS allocates to the service class. Fig. 2 shows throughput 
of each service class when the system is overloaded. In Fig. 2, 
we observe that bandwidth occupied by BE is gradually 
released when more network users appear to increase the 
network load. When the overload reaches 0.2, bandwidth 
occupied by RT begins to be released. When the overload is 
0.6, bandwidth occupied by RT is merely enough to MRTR 
and will not be released any more. When the overload reaches 
0.6, conversely, UGS begins to release bandwidth until 
bandwidth is just enough to MRTR. Accordingly, we show that 
using the DDS scheme can guarantee QoS in the network even 
when the network is overloaded. 
Fig. 3 shows the average delay time of using the DDS 
scheme when the network is overloaded. When the network 
load increases, we note that the bandwidth allocated to each 
service class will be decreased, which increases both the data 
transmission time and the average delay time. When the 
overload exceeds 0.6, BE has a quick increase of delay time 
because it has released most occupied bandwidth. However, the 
feature is not harmful to the data having a higher priority 
because there is lower average delay time.  
Next, we observe fairness of the DDS scheme. We define 
fairness as the assumption that the same service class in 
different RSs has the same throughput when the BS allocates 
bandwidth to different RSs. If a scheduling scheme in a BS can 
support fairness, most bandwidth will not be occupied by a few 
RSs to starve other RSs. Fig. 4 shows throughout of each 
service class in different RSs when the overload is 0.6. We 
observe that the same service class in different RSs can get the 
same throughput, which proves fairness of using the DDS 
scheme. 
TABLE I.  TRAFFIC  PARAMETER 
 Service Class UGS ertPS rtPS nrtPS BE 
Application VoIP VoIP Video FTP HTTP 
Data Size 48KB 75KB 96KB 240KB 10KB 
MRTR 32Kbps 50Kbps 64Kbps 160Kbps ͪ 
 
0.0 
0.2 
0.4 
0.6 
0.8 
1.0 
0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1
Throughput
OverLoa d
UGS ertPS rtPS nrtPS BE
 
Figure 2.  Throughput of DDS Scheme 
0
1000
2000
3000
4000
5000
6000
7000
8000
9000
0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1
Average Delay 
Time (μs)
OverLoad
UGS ertPS rtPS nrtPS BE
 
Figure 3.  Average Delay Time of DDS Scheme 
0.0 
0.2 
0.4 
0.6 
0.8 
1.0 
UGS ertPS rtPS nrtPS BE
Throughput RS1 RS2 RS3
 
Figure 4.  Fairness of DDS Scheme 
 
Figure 5.  Bandwidth Utilization with and without Radio Resource Reuse 
Algorithm 
 
0%
50%
100%
150%
200%
0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1
Utilization
OverLoad
DDS without reuse DDS with reuse
155
國科會補助計畫衍生研發成果推廣資料表
日期:2011/08/08
國科會補助計畫
計畫名稱: 在Windows作業系統中設計與實作無伺服器之IP位址自動設定方法
計畫主持人: 黃祖基
計畫編號: 99-2221-E-262-011- 學門領域: 計算機網路與網際網路
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
無 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
