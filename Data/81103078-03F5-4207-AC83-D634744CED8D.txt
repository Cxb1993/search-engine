 I
中文摘要 
 對於一個網路拓樸結構而言，我們知道可以使用一個無向圖 G = (V, E)來表示。而給定一個圖形
G = (V, E)，其中 V 表示圖形的節點集合，E 表示圖形的邊集合；我們也用 V(G)和 E(G)來分別代表
圖形 G 的節點集合和邊集合。迴圈(cycles)是一個很基本的網路拓樸結構，很適合發展出一套有效
率且低通訊成本的演算法。因為迴圈有廣大的應用，所以我們著力於在網路拓樸結構中，討論其迴
圈嵌入的問題。在過去的研究成果當中，討論是否可以找到各種長度迴圈的問題，就是圖形理論所
討論的泛迴圈(pancycle)問題。 
 在本計畫中，我們在正則網路上討論其泛迴圈的問題。首先，我們將針對正則網路來討論其一
些基本的性質，例如：漢米爾頓問題上的容錯能力(fault Hamiltonicity)，泛連結問題上的容錯能力
(fault pancyclicity)，還有 2 條不相交路徑覆蓋性質(2-disjoint-path coverable)。接下來，我們在條件
錯誤模式下，在正則網路上討論泛迴圈的問題。最後，我們利用所得到的定理，將一些知名的網路
拓樸結構的容錯邊數計算出來，例如：交錯立方體(crossed cubes)、雙扭立方體(twisted cubes)，局
部雙扭立方體(locally twisted cubes)，廣義雙扭立方體(generalized twisted cubes)，遞迴環狀圖
(recursive circulants)，而這些知名的網路拓樸結構都屬於侷限類超立方體(restricted hypercube-like 
networks)。 
 本計畫的成果得到在一些共同的條件下，計算出在條件邊容錯的模式下，在正則網路上的泛迴
圈容錯能力；並且所有參與計畫的學生於圖形理論之組合最佳化問題有很好的研究經驗。 
關鍵字：有條件邊錯誤模式，容錯迴圈嵌入，圖形理論，互連網路，泛迴圈，正則網路，類侷限超
立方體。 
 
 1
題。 
 (一) 前言 
給定一個圖形 G = (V, E)，其中 V 表示圖形的節點集合，E 表示圖形的邊集合；我們也用 V(G)
和 E(G)來分別代表圖形 G 的節點集合和邊集合。對於一個網路拓樸結構而言，我們知道可以用一個
連通圖 G = (V, E)來表示。 
當我們在設計一個網路拓樸結構時，有許多不同的因素必須納入考慮。但是，要設計一個網路
拓樸結構，使得影響網路拓樸結構的每一個因素都是最佳的，這幾乎是不可能的。因此，我們在設
計一個網路時，會針對某一個特殊的需求，或者是性質，使得所設計的網路在這個需求下可以是最
佳的，例如：在網路傳播(routing and broadcasting)的問題上，希望網路架構的花費可以越低越
好[4], [15], [17], [44], [66]；或者是網路的直徑可以越小越好[14], [42], [58]。而另一方面的主題，則
是在討論是否有其他的網路架構可以嵌入(network embedding)到所設計的網路拓樸結構當中，在參
考資料中的[7], [9], [10], [18], [20], [27], [28], [40], [51], [54], [57], [64], [67], [69], [72], 等等都是討論
網路嵌入的問
迴圈(cycles)是一個很基本的網路拓樸結構，很適合發展出一套有效率且低通訊成本的演算法。
在過去的研究成果當中，討論是否可以找到各種長度迴圈的問題，就是圖形理論所討論的泛迴圈
(pancycle)問題；此問題包含重要且著名的漢米爾頓迴圈(Hamiltonian cycle)問題：在給定的圖形中找
到最大長度的迴圈包含所有的節點。然而，在一般圖形(general graphs)中，漢米爾頓迴圈問題已經
被證明是一個電腦科學領域的難題(NP-complete問題) [39]。過去，給定一個圖形，欲找出其漢米爾
頓迴圈，只能採取窮舉法(exhaustive search)的方式。直到 1974 年，Rubin [59] 才利用迴溯及猜測的
方式，提供一個較有效率的演算法來求解漢米爾頓迴圈問題，但此演算法仍需指數時間(exponential 
time)。漢米爾頓迴圈的問題是售貨員旅行問題(travelling salesman problem)的一個特殊問題，因此可
以藉由漢米爾頓迴圈問題來證明售貨員旅行問題是一個NP-hard的問題 [39]。在過去幾年當中，有
許多文獻都是在探討泛迴圈的問題，例如：[3], [19], [25], [31], [32], [37], [67], [68], [71]。 
另一方面，在互連網路使用的過程中，可能會因連結線或者是處理器的損壞，導致效能降低。
因此，互連網路上執行的演算法是否能夠容錯，對於維持系統的可靠度是很重要的。當一個互連網
路發生處理器或是連結線損壞時，研究是否仍然可找到各種長度的無損壞(fault-free)迴圈，使其涵蓋
無損壞的處理器和連結線，就是容錯泛迴圈問題(fault-tolerant pancycle problem)。此問題在網路模擬
(network emulation)有很重要的應用：當互連網路處理器或連結線損壞時，即可使用容錯演算法找出
各種長度的無損壞迴圈，藉以執行發展在迴圈的平行演算法，使整個系統可模擬迴圈，而不致喪失
效能。 
在討論有錯誤發生的網路時，有兩種錯誤模式：第一種是標準錯誤模式 (standard 
fault-assumption)，這一種錯誤模式對於錯誤的發生沒有任何的限制，過去有很多在標準模式下討論
的文獻，例如參考資料中的 [27], [28], [29], [45], [47], [57], [64], [72], 都是在討論這個問題；另外一
種則是條件錯誤模式(conditional fault-assumption)，這一種模式則是限定在將錯誤的節點、錯誤的
邊，以及受影響的邊移除後，每一個節點仍然擁有兩條無損壞的邊，在過去的文獻當中，在條件錯
誤模式下討論的則有：[2], [8], [21], [22], [30], [34], [60]。 
一個圖形中的漢米爾頓迴圈(Hamiltonian cycle)是指這個迴圈會經過圖形 G 中的每一個節點，且
恰好經過一次；而漢米爾頓路徑(Hamiltonian path)則是指這個路徑會經過圖形 G 中的每一個節點，
 3
在另
到以這四個節點為端點的兩條路徑，且這兩條路徑的交集為空集合，聯集為此正則網路
的節點集合，這個性質我們稱之為 2 條不相交路徑覆蓋性質(2-disjoint-path-coverable)，我們用 2-DPC
來簡
下，
對於任意兩個相鄰的節點，我們都可以找到以此相鄰兩節點為端點，長度為 2n-3 至漢米爾頓路徑長
的路徑。有了以上的相關性質，我們就可以來討論在條件錯誤模式下的邊容錯泛迴圈問題。 
圈長的迴圈；(3)此正則網路有 super edge property 的性質；在符合這三個條件下，此正則網路在條
件錯 米爾頓迴圈長的迴圈。 
將一些知名的網路拓樸結構的容錯邊數計算出來。我們證明
這些網路拓樸結構有符合通用性策略定理當中的條件，直接透過定理將容錯邊數計算出來，而不必
路拓樸特性來討論。 
步驟
外一個子圖當中，也分別會是一條邊，我們稱這個性質為 super edge property。 
在每個節點的分支度為 n 的正則網路中，我們首先探討若發生錯誤的節點或邊總數在 n-2 以內
時，是否還是可以找到漢米爾頓迴圈；若發生錯誤的節點或邊總數在 n-3 以內時，對於任意兩個節
點是否還是可以找到漢米爾頓路徑。接下來，我們討論在分支度為 n 的正則網路中，若發生錯誤的
節點或邊總數在 n-3 以內時，對於任意兩個節點是否可以將長度為 2n-3 至漢米爾頓路徑長的所有路
徑找出來。除了這兩個容錯嵌入的性質之外，我們也討論在一個正則網路中，給定任意四個節點，
是否可以找
稱。 
此外，我們進一步討論正則網路的性質：若一個分支度為 n 的正則網路是由兩個子圖建構而成，
而這兩個子圖在錯邊數不超過 n-3 的條件下，對於任意兩個相鄰的節點，我們都可以找到以此相鄰
兩節點為端點，長度為 2n-5 至漢米爾頓路徑長的路徑，則此正則網路在錯邊數不超過 n-2 的條件
3.1.2 條件錯誤模式下正則網路的邊容錯泛迴圈問題 
我們嘗試發展一種通用性的策略，來解決此類正則網路的容錯泛迴圈問題，進而降低問題的複
雜度。如果分支度為 n 的正則網路的兩個子圖都擁有以下的性質：(1)在錯邊數不超過 n-3 的條件下，
對於任意兩個相鄰的節點，都可以找到以此相鄰兩節點為端點，長度為 2n-5 至漢米爾頓路徑長的路
徑；(2)在條件錯誤模式下，其錯邊數不超過 2n-7 的條件下，都可以找到長度為 girth 至漢米爾頓迴
誤模式下，其錯邊數不超過 2n-5 時，我們可以找到長度為 girth 至漢
3.1.3 利用通用性策略的定理，計算知名的網路拓樸結構的容錯邊數 
有了通用性策略的定理，我們可以
再逐一針對其網
3-2 進行步驟 
本計畫依下列步驟進行： 
1. 在一個每個節點的分支度為 n 的正則網路中，若發生錯誤的節點或邊總數在 n-2 以內時，
是否還是可以找到漢米爾頓迴圈(漢米爾頓迴圈性質)；若發生錯誤的節點或邊總數在 n-3
方體(crossed 
cubes)、雙扭立方體(twisted cubes)、局部雙扭立方體(locally twisted cubes)、莫氏立方體(Möbius 
以內時，對於任意兩個節點是否還是可以找到漢米爾頓路徑(漢米爾頓連通性質)。 
首先，我們先搜尋所有漢米爾頓系列相關的問題，得知這個漢米爾頓迴圈性質與漢米爾頓連通
性質，在過去的文獻中，針對侷限類超立方體的網路拓樸結構，分別在 2005 年及 2007 年，由Park
等人證明出來，請參閱[54],[57]，而侷限類超立方體是正則網路的一個子集合，並且有許多知名的
網路拓樸結構皆屬於侷限類超立方體的正則網路，例如：超立方體(hypercubes)、交錯立
 5
式下，其錯邊數不超過 2n-5 時，我們可以找到
長度為 girth 至漢米爾頓迴圈長的迴圈。 
嵌入性質、2 條不相交路徑覆蓋性質性
質，進而解決正則網路在條件錯誤模式下的泛迴圈問題。 
圈性質、泛迴圈性質、super edge property
等三個性質，如此就可以創建我們所需要長度的迴圈。 
身具有的性質：漢米爾頓迴圈性質、泛迴圈性質等二個性質，進而建造出我們所需要長度的迴圈。 
身所具有的性質：漢米爾頓迴圈性質、泛迴圈性質等二個性質，將所需要長
度的迴圈建造出來。 
壞的邊；(2)其中有一個節點只剩下一條無損壞的邊；(3)其中有
兩條節點只剩下一條無損壞的邊。 
錯邊都不包含，我們依照不同的狀況
來截取所需要長度的路徑，來建造我們所需要長度的迴圈。 
度為 girth 至漢米爾頓迴圈長的迴圈；(3)此正則網路有 super edge property 的性質；在符
合這三個條件下，此正則網路在條件錯誤模
步驟 4 是我們的主要定理。我們根據這 2n-5 條錯邊的分佈位置來逐一討論，錯邊分佈的情形區
分如下：(1)如果兩個子圖的錯邊數都不超過 2n-7 條時；(2)如果其中一個子圖的錯邊數達到 2n-6 條
時；(3)如果所有 2n-5 條的錯邊都集中在其中一個子圖時。除了要考慮上述錯邊分佈的位置之外，我
們也要考慮當錯邊通通移除之後，是否有節點只剩下一條無損壞的邊。依據這些錯邊的分佈情形、
是否有節點只剩下一條無損壞的邊，以及先前所探討的容錯
當兩個子圖的錯邊數都不超過 2n-7 時，假若每個節點仍然有兩條無損壞的邊，則我們將可以利
用其子圖本身具有的性質：漢米爾頓迴圈性質、泛迴圈性質、super edge property 等三個性質，進而
創建我們所需要長度的迴圈。若當中有一個節點只剩下一條無損壞的邊時，則我們從這個節點上的
錯邊當中，挑選其中一條錯邊，將其視為無損壞的邊，如此一來，每個節點就都有至少兩條無損壞
的邊，接下來再透過其子圖本身具有的性質：漢米爾頓迴
當其中一個子圖的錯邊數達到 2n-6 時，首先，我們先討論假若每個節點仍然有兩條無損壞的
邊，則我們將從這 2n-6 條錯邊中，挑選一條錯邊，將其視為無損壞的邊，如此一來，錯邊數就會降
低為 2n-7，我們就可以利用子圖本身所具有的性質：漢米爾頓迴圈性質、泛迴圈性質等二個性質，
創建出我們所需要長度的迴圈。而這一個所創建出的迴圈可能會包含這一條我們視為無損壞的錯
邊，倘若包含此條錯邊時，我們則透過這條錯邊來創建我們所需要長度的迴圈。假若這一個所創建
出的迴圈不包含此條錯邊時，我們則直接從迴圈當中，截取我們所需要長度的路徑，再透過子圖本
假若當中有一個節點只剩下一條無損壞的邊時，則我們從這個節點上的錯邊當中，挑選其中一
條錯邊，並將其視為無損壞的邊，如此一來，每個節點就都有至少兩條無損壞的邊，且錯邊數降低
為 2n-7，接下來就可以透過子圖本身具有的性質：漢米爾頓迴圈性質、泛迴圈性質等二個性質，創
建出我們所需要長度的迴圈，而且這一個迴圈一定會包含這一條錯邊。如此一來，我們可以透過這
條錯邊，以及其子圖本
當所有 2n-5 條錯邊都集中在其中一個子圖時，在這一個情況之下，我們區分為下列三種情形進
行討論：(1)所有節點仍然有兩條無損
假若所有節點仍然有兩條無損壞的邊，則我們從這 2n-5 條錯邊當中，挑選兩條沒有共端點的兩
條錯邊，將其視為好邊，如此一來，錯邊數就會降低為 2n-7，我們將可以利用子圖本身具有的性質：
漢米爾頓迴圈性質、泛迴圈性質等二個性質，創建出我們所需要長度的迴圈。而這個所找到的迴圈
可能會包含這兩條錯邊，或是只包含其中一條錯邊，或是兩條
 7
ted 表示邊錯誤模式下，對於任意兩個相鄰的節點，都可以找到以此相鄰兩節點
為端點，長度為 girth 至漢米爾頓路徑長的路徑；conditional edge-fault pancyclic 表示條件錯誤模式
。 
執行進度
已完成步驟 。 
質；fault Hamiltonian 表示漢米爾頓迴圈容錯量；fault panconnected 表示泛連通容錯量；edge-fault 
adjacency-panconnec
下泛迴圈容錯量
3-3  
1~5
年 99 100 
月 8 月 
9 
月 
10 
月 
11 
月 
12 
月 
1
月
2
月
3
月
4
月
5
月
6
月
7
月
8
月
9 
月 
10 
月 
步驟 1 ■ ■              
步驟 2  ■ ■             
步驟 3   ■ ■ ■   ■          
步驟 4      ■ ■ ■ ■ ■ ■     
步驟 5          ■ ■ ■ ■ ■ ■ 
(四) 結果與討論 
已完成之工作項目： 
1. 在每個節點的分支度為 n 的正則網路中，若發生錯誤的節點或邊總數在 n-2 以內時，是否還是
2n-5 至漢米
圈；(3)此正則網路有 super edge property 的性質；在符合這三個條件下，此
度為 girth 至漢米爾頓
迴圈長的迴圈。 
 
可以找到漢米爾頓迴圈；若發生錯誤的節點或邊總數在 n-3 以內時，對於任意兩個節點是否還
是可以找到漢米爾頓路徑。 
2. 在一個正則網路中，給定任意四個節點，是否可以找到以這四個節點為端點的兩條路徑，且這
兩條路徑的交集為空集合，聯集為此正則網路的點集合。(2 條不相交路徑覆蓋性質) 
3. 若一個分支度為 n 的正則網路是由兩個子圖建構而成，而這兩個子圖在錯邊數不超過 n-3 的條
件下，對於任意兩個相鄰的節點，我們都可以找到以此相鄰兩節點為端點，長度為
爾頓路徑長的路徑，則此正則網路在錯邊數不超過 n-2 的條件下，對於任意兩個相鄰的節點，
我們都可以找到以此相鄰兩節點為端點，長度為 2n-3 至漢米爾頓路徑長的路徑。 
4. 如果分支度為 n 的正則網路的兩個子圖都擁有以下的性質：(1)在錯邊數不超過 n-3 的條件下，
對於任意兩個相鄰的節點，都可以找到以此相鄰兩節點為端點，長度為 2n-5 至漢米爾頓路徑長
的路徑；(2)在條件錯誤模式下，其錯邊數不超過 2n-7 的條件下，都可以找到長度為 girth 至漢
米爾頓迴圈長的迴
正則網路在條件錯誤模式下，其錯邊數不超過 2n-5 時，我們可以找到長
5. 利用通用性策略的定理，針對知名的網路拓樸結構，計算其容錯邊數。
發表在學術期刊情形： 
Sun-Yuan Hsieh and Chia-Wei Lee, “Pancyclicity of restricted hypercube-like networks under the 
 9
3):318-329, 2008. 
19-233,2009. 
n, and J. L. A. van de Snepscheut, “The twisted cube,” in 
” IEEE Transactions on Computer, 55(7):854-863, 2006. 
istributed Systems, vol. 20, no. 4, pp. 581-592, 2009. 
-233, 2007. 
. 
al faults,” in 
, 35(2):161-171, 2000. 
. Thatcher). New York: Plenum Press, pp. 85-103, 1972. 
[40] A. Kanevsky and C. Feng, “On the embedding of cycles in pancake graphs,” Parallel Computing, 
[21] J. S. Fu, “Conditional fault-tolerant Hamiltonicity of star graphs,” Parallel Computing, 
33(7-8):488-496, 2007. 
[22] J. S. Fu, “Fault-free Hamiltonian cycles in twisted cubes with conditional link faults,” Theoretical 
Computer Science, 407(1-
[23] J. S. Fu, “Conditional fault Hamiltonicity of the complete graph,” Information Processing Letters, 
107(3-4):110-113, 2008. 
[24] J. S. Fu, H. S. Hung, and G. H. Chen, “Embedding fault-free cycles in crossed cubes with conditional 
link faults,” Journal of Supercomputing, 49:2
[25] A. Germa, M. C. Heydemann, and D. Sotteau, “Cycles in the cube-connected cycles graph,” Discrete 
Applied Mathematics, 83(1):135-155, 1998. 
[26] P. A. J. Hilbers, M. R. J. Koopma
Proceedings of the Conference on Parallel Architectures and Languages Europe, Volume I: Parallel 
Architectures, pages 152-159, 1987. 
[27] S. Y. Hsieh and N. W. Chang, “Hamiltonian path embedding and pancyclicity on the Möbius cube 
with faulty nodes and faulty edges,
[28] S. Y. Hsieh and C. H. Chen, “Pancyclicity in Möbius cubes with maximal edge faults,” Parallel 
Computing, 30(3):407-421, 2004. 
[29] S. Y. Hsieh, C. W. Ho, and G. H.Chen, “Fault-free Hamiltonian cycles in faulty arrangement graphs,” 
IEEE Transactions on Parallel and Distributed Systems, 10(3):223-237, 1999. 
[30] S. Y. Hsieh and C. W. Lee, “Conditional edge-fault hamiltonicity of matching composition 
networks,” IEEE Transactions on Parallel and D
[31] S. Y. Hsieh, T. J. Lin, and H. L. Huang, “Panconnectivity and edge-pancyclicity of 3-ary, N-cubes,” 
Journal of Supercomputing, 42:225
[32] S. Y. Hsieh and J. Y. Shiu, “Cycle embedding of augmented cubes,” Applied Mathematics and 
Computation, 191:314-319, 2007. 
[33] S. Y. Hsieh and C. J. Tu, “Constructing edge-disjoint spanning trees in locally twisted cubes," 
Theoretical Computer Science, 410(8-10):926-932, 2009
[34] S. Y. Hsieh and C. D. Wu, “Optimal fault-tolerant hamiltonicity of star graphs with conditional edge 
faults,” Journal of Supercomputing, 49: 354-372, 2009. 
[35] H. S. Hung, G. H. Chen, and J. S. Fu, “Fault-free Hamiltonian cycles in crossed cubes with conditional 
link faults,” Information Sciences, vol. 177, issue 24, pp. 5664-5674, 2007. 
[36] H. S. Hung, J. S. Fu, and G. H. Chen, “Pancycle problem of crossed cube with condition
Proceedings of the International Computer Symposium (ICS'06), pages 153-158, Taipei, Taiwan, 2006. 
[37] S. C. Hwang and G. H. Chen, “Cycles in butterfly graphs,” Networks
[38] S. W. Jung, S. Y. Kim, J. H. Park, and K. Y. Chwa, “Connectivities of recursive circulant graphs," in 
Proceedings of 19th KISS Spring Conference, pages 591-594, 1992. 
[39] Richard M. Krap, “Reducibility among combinatorial problems,” In Complexity of Computer 
Computations (Ed. R. E. Miller and J. W
 11
 Faulty Elements," IEEE Transactions on Parallel and Distributed 
roceedings of ISPA Workshops, Lecture Notes in Computer Science 4331, Pages 
-like 
. K. Srimani, “Fault diameter of star graph,” Information Processing Letters, 
arch Procedure for Hamilton Paths and Circuits,” Journal of the ACM, 
 ring embeddings in conditional faulty hypercubes,” Theortical Computer 
ncake graphs under the 
in alternating group graphs under 
“Fault-tolerant pancyclicity of augmented cubes,” Information 
chieving reliable broadcasting in hypercubes,” IEEE 
ult-tolerant edge-bipancyclicity of hypercubes,” Information 
u and M. J. Ma, “Cycles in folded hypercubes,” Applied Mathematics Letters, 19(2):140-145, 
 and cycle embedding in some networks,” Frontiers of 
, “The locally twisted cubes,” International Journal of 
J. Evans, “Locally twisted cubes are 4-pancyclic,” Applied 
Interconnection Networks with
Systems, 17(3):227-240, 2006. 
[56] J. H. Park, H. S. Lim, and H. C. Kim, “Embedding starlike trees into hypercube-like interconnection 
networks," in P
301-310, 2006. 
[57] J. H. Park, H. S. Lim, and H. C. Kim, “Panconnectivity and pancyclicity of hypercube
interconnection networks with faulty elements,” Theortical Computer Science, 377:170-180, 2007. 
[58] Y. Rouskov and P
48:243-251, 1993. 
[59] Frank Rubin, “A Se
21(4):576-580, 1974. 
[60] C. H. Tsai, “Linear array and
Science, 314:431-443, 2004. 
[61] P. Y. Tsai, J. S. Fu, and G. H. Chen, “Edge-fault-tolerant Hamiltonicity of pa
conditional fault model,” Theoretical Computer Science, 409(3):450-460, 2008. 
[62] P. Y. Tsai, J. S. Fu, and G. H. Chen, “Embedding Hamiltonian cycles 
conditional fault model,” Information Science, 179(6):851-857, 2009. 
[63] A. S. Vaidya, P. S. N. Rao, and S. R. Shankar, “A class of hypercube-like networks,” in Proceedings of 
the 5th IEEE Symposium on Parallel and Distributed Proceeding (SPDP'93), pages 800-803, Dec 1993. 
[64] W. W. Wang, M. J. Ma, and J. M. Xu, 
Processing Letters, 103(2):52-56, 2007. 
[65] D. B. West, Introduction to Graph Theory, Prentice Hall, NJ, 2 edition, 2001. 
[66] J. Wu, “Safety levels - an efficient mechanism for a
Transactions on Computers, 44(5):702-706, 1995. 
[67] J. M. Xu, Z. Z. Du, and M. Xu, “Edge-fa
Processing Letters, 96(4):146-150, 2005. 
[68] J. M. X
2006. 
[69] J. M. Xu and M. J. Ma, “Survey on path
Mathematics in China, 4(2):217-252, 2009. 
[70] X. F. Yang, D. J. Evans, and G. M. Megson
Computer Mathematics, 82(4):401-413, 2005. 
[71] X. F. Yang, G. M. Megson, and D. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Copyright © by SIAM. Unauthorized reproduction of this article is prohibited. 
SIAM J. DISCRETE MATH. c© 2010 Society for Industrial and Applied Mathematics
Vol. 23, No. 4, pp. 2100–2119
PANCYCLICITY OF RESTRICTED HYPERCUBE-LIKE
NETWORKS UNDER THE CONDITIONAL FAULT MODEL∗
SUN-YUAN HSIEH† AND CHIA-WEI LEE‡
Abstract. A graph G is said to be conditional k-edge-fault pancyclic if after removing k faulty
edges from G, under the assumption that each node is incident to at least two fault-free edges, the
resulting graph contains a cycle of every length from its girth to |V (G)|. In this paper, we consider
the common properties of a wide class of interconnection networks, called restricted hypercube-like
networks, from which their conditional edge-fault pancyclicity can be determined. We then apply
our technical theorems to show that several multiprocessor systems, including n-dimensional locally
twisted cubes, n-dimensional generalized twisted cubes, recursive circulants G(2n, 4) for odd n,
n-dimensional crossed cubes, and n-dimensional twisted cubes for odd n, are all conditional (2n−5)-
edge-fault pancyclic.
Key words. conditional edge-faults, fault-tolerant cycle embedding, graph theoretic intercon-
nection networks, pancyclicity, restricted hypercube-like networks
AMS subject classifications. 05C38, 68R10, 94C15
DOI. 10.1137/090753747
1. Introduction. A graph G = (V,E) is a pair of the node set V and the edge
set E, where V is a ﬁnite set and E is a subset of {(u, v)| (u, v) is an unordered
pair of V }. We also use V (G) and E(G) to denote the node set and edge set of G,
respectively. It is well known that the topological structure of an interconnection
network (network for brevity) can be modeled by a connected graph G = (V,E).
Several conﬂicting requirements must be considered when designing the topology
of interconnection networks. It is impossible to design a network topology that is
optimal for all scenarios. Thus, one has to design a topology based on the speciﬁc
requirements and properties of each network. One of the central issues in designing
and evaluating an interconnection network is to determine how well other networks
can be embedded into the designed network. An embedding of one guest graph G
into another host graph H is a one-to-one mapping φ from the node set of G to the
node set of H [15]. An edge in G corresponds to a path in H under φ. An embedding
strategy provides us with a scheme to emulate a guest graph on a host graph. A graph
embedding has two key applications: to transplant parallel algorithms developed for
one network to a diﬀerent one and to allocate concurrent processors to processors in
the network.
Cycles (rings), which comprise the most common class of network topologies for
parallel and distributed computing, are suitable for designing simple algorithms with
low communication costs. Numerous eﬃcient algorithms based on rings for solving
various algebraic problems and graph problems can be found in [1, 15]. The algorithms
can also be used as control/data ﬂow structures for distributed computing in arbitrary
networks. These applications motivate the embedding of cycles in networks.
∗Received by the editors March 24, 2009; accepted for publication (in revised form) October 12,
2009; published electronically January 15, 2010.
http://www.siam.org/journals/sidma/23-4/75374.html
†Corresponding author. Department of Computer Science and Information Engineering, National
Cheng Kung University, No. 1, University Road, Tainan 701, Taiwan (hsiehsy@mail.ncku.edu.tw).
‡Department of Computer Science and Information Engineering, National Cheng Kung University,
No. 1, University Road, Tainan 701, Taiwan (cwlee@csie.ncku.edu.tw).
2100
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Copyright © by SIAM. Unauthorized reproduction of this article is prohibited. 
2102 SUN-YUAN HSIEH AND CHIA-WEI LEE
edge-fault pancyclicities of restricted hypercube-like networks. In section 4, we ap-
ply our technical theorems to ﬁve multiprocessor systems. Then, we summarize our
conclusions in section 5.
2. Preliminaries. Two nodes u and v are adjacent if (u, v) is an edge in G.
The nodes adjacent to v are called the neighbors of v, denoted by NG(v). The degree
of node v, denoted by dG(v), is the number of edges incident to it, i.e., dG(v) =
|NG(v)|. Let δ(G) = min{dG(v)| v ∈ V (G)}. A graph is said to be k-regular if the
nodes have the common degree k. A path P [v0, vt] = 〈v0, v1, . . . , vt〉 is a sequence of
distinct nodes in which any two consecutive nodes are adjacent. A path may contain
other subpaths, denoted by 〈v0, v1, . . . , vi, P [vi, vj ], vj , vj+1, . . . , vt〉, where P [vi, vj ] =
〈vi, vi+1, . . . , vj−1, vj〉. A cycle 〈v0, v1, . . . , vk, v0〉 for k ≥ 2 is a sequence of nodes in
which any two consecutive nodes are adjacent, where v0, v1, . . . , vk are all distinct. A
path (respectively, cycle) of length l is referred to as an l-path (respectively, l-cycle).
A graphG is called k-edge-fault Hamiltonian (respectively, k-edge-fault Hamilton-
ian-connected) if there exists a Hamiltonian cycle (respectively, a Hamiltonian path
between each pair of distinct nodes) in G − F for any set of faulty edges F with
|F | ≤ k. A graph G is called k-edge-fault pancyclic if G−F contains a cycle of every
length from its girth to |V (G)| for any set of faulty edges F with |F | ≤ k. Let faulty
elements represent faulty nodes and/or edges. A graph G is k-fault Hamiltonian-
connected if there exists a Hamiltonian path between each pair of distinct nodes in
G − F for any set of faulty elements F with |F | ≤ k. The term k-fault Hamiltonian
can be deﬁned similarly.
A matching in a graph G is a set of nonloop edges with no shared end-node. The
nodes incident to the edges of a matching M are saturated by M . A perfect matching
in a graph is a matching that saturates every node.
Vaidya, Rao, and Shanker [25] introduced a class of hypercube-like networks,
called HL-graphs, which can be deﬁned recursively as follows: (1) HL0 = {K1},
where K1 is a single node, and (2) for n ≥ 1, HLn = {G| G = G0
⊕
GG1, where
G0, G1 ∈ HLn−1}. The symbol “
⊕
G” means the perfect matching operation that
connects G0 and G1 using some perfect matching, denoted by PM(G). For a graph
G ∈ HLn, V (G) = V (G0
⊕
GG1) = V (G0)
⋃
V (G1) and E(G) = E(G0
⊕
GG1) =
E(G0)
⋃
E(G1)
⋃
PM(G), where G0, G1 ∈ HLn−1. Regarding the two nodes of an
edge in PM(G), one is said to be the crossing neighbor of the other. For convenience,
we use x¯ to denote the crossing neighbor of x and call (x, x¯) a crossing edge betweenG0
and G1. A graph that belongs to HLn is called an n-dimensional HL-graph. Note that
each graph in HLn has 2
n nodes and is regular with the common degree n. Further-
more, nonbipartite HL-graphs are said to be restricted HL-graphs (RHLs) [22], which
can be deﬁned recursively as follows: RHL0 = {K1}, RHL1 = {K2}, RHL2 = {C4},
RHL3 = {G(8, 4)}, and RHLn = {G| G = G0
⊕
GG1, where G0, G1 ∈ RHLn−1} for
n ≥ 4; C4 is a cycle with 4 nodes, and G(8, 4) is a recursive circulant deﬁned in [20].
A graph that belongs to RHLn is called an n-dimensional RHL.
We detail some properties of RHLn below.
Lemma 2.1 (see [22]). Every graph G ∈ RHLn for n ≥ 3 is (n − 3)-fault
Hamiltonian-connected and (n− 2)-fault Hamiltonian.
A graph G is called k-fault m-panconnected if each pair of fault-free nodes are
joined by a path in G−F of every length fromm to |V (G−F )|−1 for any set of faulty
elements F with |F | ≤ k. A graph G is called k-edge-fault m-adjacency-panconnected
if each pair of adjacent nodes are joined by a path in G − F of every length from m
to |V (G)| − 1 for any set of faulty edges F with |F | ≤ k.
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Copyright © by SIAM. Unauthorized reproduction of this article is prohibited. 
2104 SUN-YUAN HSIEH AND CHIA-WEI LEE
(a) 
G0 G1
s
t
x
y
x
y
u
v
(b) 
G0 G1
u
x
v
x
(c) 
G0 G1
u
y
v
y
x
(d) 
G0 G1
u
y
v
y
x
w
s t 
w
x
(e)
G0 G1
v
u
(f) 
G0 G1
vu
x x
u
(g) 
G0 G1
x
y
v
ux
y
s
t
(h)
G0 G1
vus = u
tt
Fig. 3.1. Illustration of the proof of Case 1 of Lemma 3.1.
{(s, t)}) contains a fault-free Hamiltonian cycle C0. Here, we consider
only the case where (s, t) ∈ C0. The case where (s, t) /∈ C0 can be proved
similarly. Then, we can choose three nodes w, x, and y in C0 to form two
subpaths P0[u, x] and P0[y, w] of P0[u, s] and P0[t, u], respectively, such
that 2 ≤ |P0[u, x]|+ |P0[y, w]| ≤ 2n−1 − 2. Since fPM = 0, (x, x¯), (y, y¯),
and (w, w¯) are all fault-free. Moreover, since f1 = 0, then, by Lemma 2.4,
there exist two paths P1[x¯, y¯] and P
′
1[w¯, v] such that P1[x¯, y¯]
⋂
P ′1[w¯, v] =
∅ and P1[x¯, y¯]
⋃
P ′1[w¯, v] = V (G1). Clearly, |P1[x¯, y¯]| + |P ′1[w¯, v]| =
2n−1 − 2. Therefore, the desired fault-free l-path P [u, v] can be con-
structed as 〈u, P0[u, x], x, x¯, P1[x¯, y¯], y¯, y, P0[y, w], w, w¯, P ′1[w¯, v], v〉 (see
Figure 3.1(d)).
Case 1.3. (u, v) ∈ E(G1). Since f1 = 0, then, by Lemma 2.2, we can ﬁnd
a fault-free l-path P [u, v] for 2(n − 1) − 3 ≤ l ≤ 2n−1 − 1 in G1 (see
Figure 3.1(e)). To construct a fault-free 2n−1-path P [u, v], we can ﬁnd
a fault-free edge (u¯, x) or (v¯, y) in G0 such that one of the following
conditions holds: (a) (u, u¯) and (x, x¯) are both fault-free and x¯ = v; (b)
(v, v¯) and (y, y¯) are both fault-free and y¯ = u. If both conditions do not
hold, then there is a fault-free cycle 〈u, u¯, v¯, v, u〉 in G such that except
for three fault-free edges (u, u¯), (v, v¯), and (u¯, v¯), the edges incident to
u¯ and v¯ are all faulty. This implies that f ≥ 2(n− 3) = 2n− 6 > n− 2
for n ≥ 5, which leads to a contradiction. Hence, without loss of gen-
erality, we can assume that condition (a) holds. Since f1 = 0, then, by
Lemma 2.2, G1−u contains a fault-free (2n−1−3)-path P1[x¯, v]. The de-
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Copyright © by SIAM. Unauthorized reproduction of this article is prohibited. 
2106 SUN-YUAN HSIEH AND CHIA-WEI LEE
(a) 
G0 G1
v
y
y
xx
u
(b) 
G0 G1
v
u
xx
(c) 
G0 G1
vuu
xx
(d) 
G0 G1
v
ss
t t
u
Fig. 3.2. Illustration of the proof of Case 2 of Lemma 3.1.
contains a fault-free l0-path P0[u¯, x] for 2
n−2 − 1 ≤ l0 ≤ 2n−1 − 1
(by 2n − 5 < 2n−2 − 1 for n ≥ 5). Moreover, since f1 = 0, then,
by Lemma 2.2, G1 − F1 − u contains a fault-free l1-path P1[x¯, v]
for 2n−2 − 1 ≤ l1 ≤ 2n−1 − 2 (by 2(n − 1) − 3 < 2n−2 − 1 for
n ≥ 5). Therefore, the desired l-path P [u, v] can be constructed as
〈u, u¯, P0[u¯, x], x, x¯, P1[x¯, v], v]〉 (see Figure 3.2(c)).
Case 2.3.2. fPM = 0 and f1 = 1. Since f1 = 1 ≤ n − 3 for n ≥ 4 and
G1 is (n− 3)-edge-fault (2n− 5)-adjacency-panconnected, G1 − F1
contains a fault-free l1-path P1[u, v] for 2
n−2+1 ≤ l1 ≤ 2n−1−1 (by
2n − 5 < 2n−2 + 1 for n ≥ 5). Obviously, P1[u, v]
⋃{(u, v)} forms
a cycle in G1 − F1. Since
⊕
G possesses the super edge-property
and fPM = 0, there exists an edge (s, t) in P1[u, v] such that (s¯, t¯)
is also an edge in G0, where {u, v} = {s, t}. Because f0 = n −
3 and G0 is (n − 3)-edge-fault (2n − 5)-adjacency-panconnected,
G0 − F0 contains a fault-free l0-path P0[s¯, t¯] for 2n−2 − 2 ≤ l0 ≤
2n−1 − 1 (by 2n − 5 < 2n−2 − 2 for n ≥ 5). Note that P1[u, v] =
〈u, P1[u, s], s, t, P1[t, v], v〉. The desired l-path can be constructed as
P [u, v] = 〈u, P1[u, s], s, s¯, P0[s¯, t¯], t¯, t, P1[t, v], v〉 (see Figure 3.2(d)).
Case 3. f0 ≤ n− 4; hence, f1 ≤ n− 4.
Case 3.1. (u, v) ∈ E(G0). Since f0 ≤ n− 4, then, by Lemma 2.2, we can ﬁnd
a fault-free l-path P [u, v] in G0 − F0 for 2(n − 1) − 3 ≤ l ≤ 2n−1 − 1.
To construct an l-path P [u, v] for 2n−1 ≤ l ≤ 2n − 1, we ﬁrst construct
an l0-path P0[u, v] for 2
n−2 + 1 ≤ l0 ≤ 2n−1 − 1 (by Lemma 2.2 and
2(n − 1) − 3 < 2n−2 + 1 for n ≥ 5). Moreover, since fPM ≤ n − 2, we
can choose an edge (x, y) in P0[u, v] such that (x, x¯) and (y, y¯) are both
fault-free.2 Let P0[u, v] = 〈u, P0[u, x], x, y, P0[y, v], v〉. Since f1 ≤ n− 4,
then, by Lemma 2.2, G1 − F1 contains a fault-free l1-path P1[x¯, y¯] for
2n−2 − 2 ≤ l1 ≤ 2n−1 − 1 (by 2(n − 1) − 3 < 2n−2 − 2 for n ≥ 5).
2Since l0 ≥ 2n−2+1, we have a total of 2n−2+1 possibilities for choosing (x, y). If such an edge
does not exist, then fPM ≥  2
n−2+1
2
 = 2n−3 + 1 > f = n− 2 for n ≥ 4, which is a contradiction.
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Copyright © by SIAM. Unauthorized reproduction of this article is prohibited. 
2108 SUN-YUAN HSIEH AND CHIA-WEI LEE
(a) 
G0 G1
(b) 
G0 G1
s
t
C0
t
s
(c) 
G0 G1
x
x
y
y
(d) 
G0 G1
(e) 
G0 G1
s
t
C0
t
s
u
v
(f) 
G0 G1
C0
v
u
u
v
(g) 
G0 G1
C1
t
s s
t
faulty u
(h) 
G0 G1
C1
u
x x
w
u
faulty
y
Fig. 3.4. Illustration of the proof of Case 1 of Theorem 3.2; the dotted lines represent faulty edges.
that (s, s¯) and (t, t¯) are both fault-free.3 If f1 < n − 3, then, by
Lemma 2.2, we can ﬁnd a fault-free path P1[t¯, s¯] of length 2
n−1 − 2
or 2n−1 − 1 in G1 − F1. Therefore, the desired fault-free l-cycle can
be constructed as 〈s, P0[s, t], t, t¯, P1[t¯, s¯], s¯, s〉 (see Figure 3.4(b)).
However, if f1 = n − 3, then fPM ≤ 1. Since f0 ≤ 2n − 7
and δ(G0 − F0) ≥ 2, G0 − F0 contains a fault-free cycle C0 for
2n−2 + 1 ≤ |C0| ≤ 2n−1. Now, since
⊕
G possesses the super
edge-property, there are two edges (x, y) and (s, t) in C0 such that
(x¯, y¯) and (s¯, t¯) are also two edges in G1, where x, y, s, t are all dis-
tinct. Because fPM ≤ 1, there are at least three fault-free edges
in {(x, x¯), (y, y¯), (s, s¯), (t, t¯)}. Without loss of generality, we assume
that (x, x¯) and (y, y¯) are both fault-free. By deleting (x, y) from C0,
we can obtain a fault-free l0-path P0[x, y] for 2
n−2 ≤ l0 ≤ 2n−1 − 1.
Moreover, since f1 = n − 3, then, by condition (1), G1 − F1 con-
tains a fault-free l1-path P1[y¯, x¯] for 2
n−2 − 1 ≤ l1 ≤ 2n−1 − 1 (by
2n − 5 < 2n−2 − 1 for n ≥ 5). Therefore, the desired fault-free
l-cycle can be constructed as 〈x, P0[x, y], y, y¯, P1[y¯, x¯], x¯, x〉 (see Fig-
ure 3.4(c)).
3Since |V (G0)| = 2n−1, there is a total of 2n−1 choices in C0. If two such nodes do not exist,
then fPM ≥  2
n−1
2
 = 2n−2 > 2n− 5 = f for n ≥ 3, which is a contradiction.
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Copyright © by SIAM. Unauthorized reproduction of this article is prohibited. 
2110 SUN-YUAN HSIEH AND CHIA-WEI LEE
(a) 
G0 G1
(b) 
G0 G1
s
t
C0
t
s
u
v
(c) 
G0 G1
s
t
C0
t
s
u
v
(d) 
G0 G1
C0
v
u
u
v
(e) 
G0 G1
C0
z
r
r
z
u
v
Fig. 3.5. Illustration of the proof of Case 2 of Theorem 3.2; the dotted lines represent faulty edges.
length 2n−1 − 2. Therefore, the desired fault-free l-cycle can be
constructed as 〈s, P1[s, t], t, t, P0[t, s¯], s¯, s〉 (see Figure 3.4(g)).
Case 1.2.2.3. l = 2n. Since f1 = n− 3, then, by Lemma 2.1, G1 −F1
contains a fault-free cycle C1 of length 2
n−1. Let x and y be
two nodes adjacent to u¯ in C1. Clearly, x¯ = w or y¯ = w. With-
out loss of generality, we assume that x¯ = w. Then, we can
obtain a fault-free path P1[x, u¯] = C1− (x, u¯) of length 2n−1−1.
Moreover, since the faulty edges in G0 are all incident to u,
then, by Lemma 2.2, G0 − u contains a fault-free Hamiltonian
path P0[w, x¯] of length 2
n−1−2. Therefore, a fault-free 2n-cycle
can be constructed as 〈u,w, P0[w, x¯], x¯, x, P1[x, u¯], u¯, u〉 (see Fig-
ure 3.4(h)).
Case 2. f0 = 2n − 6; hence, f1 + fPM ≤ 1. By an argument similar to that
used in Case 1 of Theorem 3.2, there is at most one node that is incident to
exactly one fault-free edge in G0. We have the following subcases.
Case 2.1. δ(G0 − F0) ≥ 2. We have the following scenarios.
Case 2.1.1. 4 ≤ l ≤ 2n−1. Since f1 ≤ 1, then, by condition (2), G1 − F1
contains a fault-free l-cycle for 4 ≤ l ≤ 2n−1 (see Figure 3.5(a)).
Case 2.1.2. 2n−1+1 ≤ l ≤ 2n−1+2n−2. Let (u, v) be an arbitrary faulty
edge in G0. By condition (2), G0 − (F0 − {(u, v)}) contains a fault-
free cycle C0 of length 2
n−1. We consider only (u, v) ∈ C0. The case
where (u, v) /∈ C0 can be shown similarly. We can choose two nodes,
s and t, in C0 to obtain a path P0[s, t] for 1 ≤ |P0[s, t]| ≤ 2n−2−1 in
C0 such that (s, s¯) and (t, t¯) are both fault-free. Moreover, since f1 ≤
1, then, by Lemma 2.2, G1 −F1 contains a fault-free path P1[t¯, s¯] of
length 2n−1− 2 or 2n−1− 1. Therefore, the desired fault-free l-cycle
can be constructed as 〈s, P0[s, t], t, t¯, P1[t¯, s¯], s¯, s〉 (see Figures 3.5(b)
and 3.5(c)).
Case 2.1.3. 2n−1 + 2n−2 + 1 ≤ l ≤ 2n. Since fPM ≤ 1, we can ﬁnd a
faulty edge (u, v) such that (u, u¯) and (v, v¯) are both fault-free. By
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Copyright © by SIAM. Unauthorized reproduction of this article is prohibited. 
2112 SUN-YUAN HSIEH AND CHIA-WEI LEE
free path P1[t¯, s¯] for 2
n−1 − 3 ≤ |P1[t¯, s¯]| ≤ 2n−1 − 1. Therefore, the
desired fault-free l-cycle can be constructed as 〈s, w, t, t¯, P1[t¯, s¯], s¯, s〉 (see
Figure 3.6(b)).
Case 3.3. 2n−1 + 4 ≤ l ≤ 2n. We have the following subcases.
Case 3.3.1. Every node is incident to at least two fault-free edges in G0.
There are two faulty edges (x, y) and (u, v) such that {x, y}⋂{u, v} =
∅; otherwise, the faulty edges in G0 are all incident to the same
node, which leads to a contradiction because f0 = n−3 = 2n−5 for
n ≥ 3. Since |F0 − {(x, y), (u, v)}| = 2n− 7, then, by condition (2),
G0 − (F0 − {(x, y), (u, v)}) contains a fault-free cycle C0 of length
2n−1. We have the following scenarios.
Case 3.3.1.1. C0 contains both (x, y) and (u, v). Then, we can choose
two nodes, s and t, in C0 to obtain two paths, P0[u, s] and
P0[t, v], in C0 for 2 ≤ |P0[u, s]| + |P0[t, v]| ≤ 2n−1 − 2. Since
G1 is 2-DPC, there are two paths P1[s¯, t¯] and P
′
1[v¯, u¯] such that
P1[s¯, t¯]
⋂
P ′1[v¯, u¯] = ∅ and P1[s¯, t¯]
⋃
P ′1[v¯, u¯] = V (G1). Note that
|P1[s¯, t¯]|+ |P ′1[v¯, u¯]| = 2n−1−2. Therefore, the desired fault-free
l-cycle can be constructed as 〈u, P0[u, s], s, s¯, P1[s¯, t¯], t¯, t, P0[t, v],
v, v¯, P ′1[v¯, u¯], u¯, u〉 (see Figure 3.6(c)).
Case 3.3.1.2. C0 contains exactly one edge in {(x, y), (u, v)}. With-
out loss of generality, we assume that C0 contains (u, v). We
can choose a node s in C0 to obtain a path P0[u, s] in C0 for 3 ≤
|P0[u, s]| ≤ 2n−1−1. Since f1 = 0, then, by Lemma 2.1, G1 con-
tains a fault-free path P1[s¯, u¯] of length 2
n−1−1. Therefore, the
desired fault-free l-cycle can be constructed as 〈u, P0[u, s], s, s¯,
P1[s¯, u¯], u¯, u〉 (see Figure 3.6(d)).
Case 3.3.1.3. Neither (x, y) nor (u, v) is in C0. We can select two
nodes, s and t, in C0 to obtain a path P0[s, t] in C0 for 3 ≤
|P0[s, t]| ≤ 2n−1 − 1. Since f1 = 0, then, by Lemma 2.1, G1
contains a fault-free path P1[t¯, s¯] of length 2
n−1 − 1. Therefore,
the desired fault-free l-cycle can be constructed as 〈s, P0[s, t], t, t¯,
P1[t¯, s¯], s¯, s〉 (see Figure 3.6(e)).
Case 3.3.2. There is exactly one node that is incident to exactly one
fault-free edge in G0. Without loss of generality, let u be such a
node. Clearly, there are two faulty edges, (x, y) and (u, v), in F0
such that {x, y}⋂{u, v} = ∅. Since |F0 − {(x, y), (u, v)}| = 2n− 7,
δ(G0−(F0−{(x, y), (u, v)})) = 2, then, by condition (2), G0−(F0−
{(x, y), (u, v)}) contains a fault-free cycle C0 of length 2n−1. Note
that C0 must contain (u, v). This leads to the following scenarios.
Case 3.3.2.1. C0 also contains (x, y). The proof is similar to that
used in Case 3.3.1.1 of Theorem 3.2.
Case 3.3.2.2. C0 does not contain (x, y). The proof is similar to that
used in Case 3.3.1.2 of Theorem 3.2.
Case 3.3.3. There are exactly two nodes, x and u, each of which is in-
cident to only one fault-free edge in G0. In this subcase, (x, u) ∈
F0; otherwise, f0 ≥ (n − 2) + (n − 2) = 2n − 4, which contra-
dicts the fact that f0 = 2n − 5. Hence, we can select two edges,
(x, y) and (u, v), in F0 so that {x, y}
⋂{u, v} = ∅. Since |F0 −
{(x, y), (u, v)}| = 2n − 7 and δ(G0 − (F0 − {(x, y), (u, v)})) = 2,
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Copyright © by SIAM. Unauthorized reproduction of this article is prohibited. 
2114 SUN-YUAN HSIEH AND CHIA-WEI LEE
x y
u v
x y
u v 
Fig. 4.2. An X-change operation.
Proof. We can show that LTQ5 is 3-edge-fault 7-adjacency-panconnected by an
exhaustive search using a computer program [29].5 The result for n > 5 follows
directly from Lemmas 3.1 and 4.1.
Corollary 4.3. LTQn for n ≥ 3 is conditional (2n− 5)-edge-fault pancyclic.
Proof. The proof is derived by induction on n. The base cases for n = 3, 4, and
5 can be shown by an exhaustive search using a computer program [29]. For n ≥ 6,
we demonstrate the result by verifying that conditions (1)–(3) of Theorem 3.2 hold.
Condition (1) and condition (2) hold by Lemma 4.2 and the induction hypothesis,
respectively, while condition (3) holds by Lemma 4.1. Therefore, by Theorem 3.2,
LTQn for n ≥ 3 is conditional (2n− 5)-edge-fault pancyclic.
Two edges in a graph G are said to be independent if they do not share a common
node. Given two independent edges (x, y) and (u, v) in E(G), an X-change operation
on (x, y) and (u, v), denoted by X [(x, y), (u, v)], would use (x, v) and (y, u) instead
of (x, y) and (u, v), respectively, as shown in Figure 4.2. Note that an X-change
operation preserves the degree of the graph.
An n-dimensional generalized twisted cube GQn [5] has 2
n nodes and can be de-
ﬁned as follows: GQ0 is a single node. GQ1 is a complete graph with two nodes
labeled 0 and 1, respectively. GQ2 is a graph with V (GQ2) = {00, 01, 10, 11} and
E(GQ2) = {(00, 01), (01, 11), (11, 10), (10, 00)}. For n ≥ 3, GQn = GQn−3 × TQ3,
where TQ3 is a three-dimensional twisted cube deﬁned in [9]. Figure 4.3 illus-
trates GQ3 and GQ4. Alternatively, GQn can be represented by K2 × GQn−1 if
mod(n, 3) = 1 or 2, and K2
⊙
GQn−1 if mod(n, 3) = 0, where
⊙
is the Carte-
sian product operation followed by the X-change operations X [(010bn−4bn−5 . . . b0,
110bn−4bn−5 . . . b0), (011bn−4bn−5 . . . b0, 111bn−4bn−5 . . . b0)], where bn−4bn−5 . . . b0 ∈
{0, 1}n−3 [5]. From the above deﬁnition, GQn belongs to RHLn and can be repre-
sented by 0GQn−1
⊕
GQn
1GQn−1, where 0GQn−1 is the subgraph of GQn induced
by {0bn−2bn−3 . . . b0| bi ∈ {0, 1} for 0 ≤ i ≤ n − 2} and 1GQn−1 is the subgraph of
GQn induced by {1bn−2bn−3 . . . b0| bi ∈ {0, 1} for 0 ≤ i ≤ n− 2}.
Lemma 4.4.
⊕
GQn
for n ≥ 4 possesses the super edge-property.
Proof. Without loss of generality, we assume that C is an l-cycle in 0GQn−1,
where 2n−2+1 ≤ l ≤ 2n−1. The other situation where C is in 1GQn−1 can be shown
similarly. We have the following cases.
5We have provided a web-based system [29] for readers to check results online. In Lemmas 4.2, 4.5,
and 4.10, we need to check whether each pair of adjacent nodes has a fault-free l-path for 7 ≤ l ≤ 32 in
LTQ5, GQ5, and G(32; 4), respectively, where each of the above graphs contains 3 faulty edges. Note
that |V (LTQ5)| = |V (GQ5)| = |V (G(32; 4))| = 32 and |E(LTQ5)| = |E(GQ5)| = |E(G(32; 4))| =
80. In our system, we renamed the 80 edges of each graph from 1 to 80 for convenience. A user
needs to select a graph from {LTQ5, GQ5, G(32; 4)} and select a pair of adjacent nodes u and v
for checking. Next, the system provides a function that can select arbitrary 3 ≤ m ≤ 80 edges for
generating a fault-free l-path (7 ≤ l ≤ 32) between u and v, under C(m, 3) distributions of 3 faulty
edges. On the other hand, in Corollaries 4.3, 4.6, and 4.11, we need to check whether there exists a
fault-free l-cycle for 4 ≤ l ≤ 32 in LTQn and GQn for n = 3, 4, 5, and G(2n; 4) for n = 3, 5, where
each of the above graphs contains 2n − 5 faulty edges. The execution of the program is similar to
the case for constructing paths.
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Copyright © by SIAM. Unauthorized reproduction of this article is prohibited. 
2116 SUN-YUAN HSIEH AND CHIA-WEI LEE
0
4
26
35
7 1 
G(23,4) G(25,4) 
17
13
25
21
1
29
9
5
10
6
2
30
26
22
18
14
16
20
8
12
0
4
24
28
3
31
11 
7
19
15
27
23
G1
G0
G2
G3
Fig. 4.4. G(23, 4) and G(25, 4).
follows: Let Gi = (Vi, Ei) for 0 ≤ i ≤ d − 1 be a copy of G(cdn−1, d) with Vi =
{vi0, vi1, . . . , vicdn−1−1}, where Gi is isomorphic to G(cdn−1, d) by the isomorphism
mapping vij to vj . We can relabel v
i
j as vjd+i. The node set V of G(cd
n, d) is⋃
0≤i≤d−1 Vi, and the edge set E is
⋃
0≤i≤d−1Ei
⋃
X , where X = {(vj , vj′ )| j+1 ≡ j′
(mod cdn)}. In this paper, we focus G(N, d) with N = 2n and d = 4. In the recursive
structure, G(2n, 4) consists of four components G0, G1, G2, and G3, each of which is
isomorphic to G(2n−2, 4).
Let Hn−10 and H
n−1
1 be two subgraphs of G(2
n, 4) induced by V (G0)
⋃
V (G1)
and V (G2)
⋃
V (G3), respectively. In fact, H
n−1
0 = G(2
n−2, 4)×K2 = G0
⊕
Hn−10
G1
and Hn−11 = G(2
n−2, 4) × K2 = G2
⊕
Hn−11
G3. Moreover, it is not diﬃcult to see
that each node u ∈ Hn−10 has exactly one neighbor v in Hn−11 . Therefore, G(2n, 4) =
Hn−10
⊕
G(2n,4)H
n−1
1 = (G0
⊕
Hn−10
G1)
⊕
G(2n,4)(G2
⊕
Hn−11
G3); see Figure 4.4.
Lemma 4.7. Let (uij , u
i
k) be an edge in Gi for i ∈ {0, 1, 2, 3}, where j + 4m ≡ k
(mod 2n−2) for 0 ≤ m ≤ log4 2n−2−1. Then, (ui
′
j , u
i′
k ) is an edge in Gi′ for i
′ = i+1
if i ∈ {0, 1, 2}, and (u0j+1, u0k+1) is an edge in G0 if i = 3.
Proof. First, we consider i ∈ {0, 1, 2}. Here, we consider i = 0; the other situations
for i ∈ {1, 2} can be shown similarly. Let (u0j , u0k) be an edge in G0. Note that
u0j = u4j+0 and u
0
k = u4k+0. Since (4j + 0) + 4
0 = 4j + 1 and (4k + 0)+ 40 = 4k+ 1,
then, by the deﬁnition of recursive circulants, (u4j+0, u4j+1) and (u4k+0, u4k+1) are
edges in G(2n, 4). Since u1j = u4j+1 and u
1
k = u4k+1, u
1
j ∈ V (G1) and u1k ∈ V (G1).
Moreover, by the assumption that j + 4m ≡ k (mod 2n−2) and the deﬁnition of
recursive circulants, (u1j , u
1
k) is also an edge in G1.
Next, we consider i = 3. Let (u3j , u
3
k) be an edge in G3. Note that u
3
j = u4j+3
and u3k = u4k+3. Since (4j + 3) + 4
0 = 4j + 4 and (4k + 3) + 40 = 4k + 4, then, by
the deﬁnition of recursive circulants, (u4j+3, u4j+4) and (u4k+3, u4k+4) are edges in
G(2n, 4). Since u0j+1 = u4j+4 and u
0
k+1 = u4k+4, u
0
j+1 ∈ V (G0) and u0k+1 ∈ V (G0).
As j+4m ≡ k (mod 2n−2), (j +1)+ 4m ≡ k+1 (mod 2n−2). Then, by the deﬁnition
of recursive circulants, (u0j+1, u
0
k+1) is also an edge in G0.
Lemma 4.8.
⊕
Hn−1j
for j = 0, 1, and n ≥ 5 possesses the super edge-property.
Proof. Without loss of generality, we show that
⊕
Hn−10
possesses the super edge-
property. Assume that C is a l-cycle in G0, where 2
n−3 + 1 ≤ l ≤ 2n−2. The other
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Copyright © by SIAM. Unauthorized reproduction of this article is prohibited. 
2118 SUN-YUAN HSIEH AND CHIA-WEI LEE
Table 5.1
Topological properties of some multiprocessor systems.
Topological properties LTQn GQn G(2
n, 4) CQn TQn
2-DPC yes yes yes yes yes
fault Hamiltonian n− 2 [22] n− 2 [22] n− 2 [22] n− 2 [22] n− 2 [22]
fault panconnected n− 3 [22] n− 3 [22] n− 3 [22] n− 3 [22] n− 3 [22]
edge-fault adjacency-panconnected n− 2 n− 2 n− 2 n− 2 n− 2
conditional edge-fault pancyclic 2n− 5 2n− 5 2n− 5 2n− 5 [8] 2n− 5
super edge-property yes yes yes yes yes
[i]: the result is also reported in reference [i]; all the other results belong to this paper.
x
w
v
u
faulty
faulty
fault-free fault-free
Fig. 5.1. The worst-case scenario.
are all fault-free. Clearly, any fault-free cycle containing nodes u and w must contain
edges (u, v), (v, w), (w, x), and (x, u). In the worst case, the above cycle contributes
a total of 2n − 4 faulty edges. It is impossible to generate a fault-free Hamiltonian
cycle covering nodes u, v, w, and x. Therefore, our result is optimal with respect to
the number of faulty edges tolerated.
In a future work, we will extend our strategy to other classes of networks.
Acknowledgments. We thank the anonymous referees for their careful review
and very constructive suggestions and comments, which helped improve the content
of this paper.
REFERENCES
[1] S. G. Akl, Parallel Computation: Models and Methods, Prentice Hall, Englewood Cliﬀs, NJ,
1997.
[2] Y. A. Ashir and I. A. Stewart, Fault-tolerant embeddings of Hamiltonian circuits in k-ary
n-cubes, SIAM J. Discrete Math., 15 (2002), pp. 317–328.
[3] F. T. Boesch and R. Tindell, Circulants and their connectivities, J. Graph Theory, 8 (1984),
pp. 129–138.
[4] M. Y. Chan and S. J. Lee, On the existence of Hamiltonian circuits in faulty hypercubes,
SIAM J. Discrete Math., 4 (1991), pp. 511–527.
[5] F. B. Chedid, On the generalized twisted cube, Inform. Process. Lett., 55 (1995), pp. 49–52.
[6] K. Efe, The crossed cube architecture for parallel computation, IEEE Trans. Parallel Distrib.
Syst., 3 (1992), pp. 513–524.
[7] J. S. Fu, Fault-free Hamiltonian cycles in twisted cubes with conditional link faults, Theoret.
Comput. Sci., 407 (2008), pp. 318–329.
[8] J. S. Fu, H. S. Hung, and G. H. Chen, Embedding fault-free cycles in crossed cubes with
 
國科會補助專題研究計畫項下出席國際學術會議心得報告 
                                     日期：100年 7 月11日 
計畫編號 NSC99－2221－E－006－102－ 
計畫名稱 條件錯誤下正則網路上的泛迴圈問題 
出國人員
姓名 高琪雅 
服務機構
及職稱 
國立成功大學資訊工程學系 
兼任助理 
會議時間 
100 年 6 月 26 日
至 
100 年 6 月 29 日 
會議地點 波蘭格但斯克 
會議名稱 
(中文) 
(英文)18th  International Colloquium on Structural Information and 
Communication Complexity (SIROCCO 2011) 
發表論文
題目 
(中文) 
(英文) Determining the Conditional Diagnosability of k-Ary n-Cubes 
under the MM* Model 
一、參加會議經過 
二、與會心得 
三、考察參觀活動(無是項活動者略) 
四、建議 
五、攜回資料名稱及內容 
六、其他 
 
 1
 3
這一屆國際學術會議共有二十四篇論文被接受，並且都有安排口頭報告的時間。每
一篇論文報告者都有二十二分鐘的時間來進行報告，而所有被接受的論文，也都刊登於
Springer 的 Lecture Notes in Computer Science(LNCS 6796)這本書裡。 
會議的第一天，到現場報到後，晚餐時間主辦單位還有舉辦了一個歡迎晚會。 
會議的第二天，緊接在開場及致詞之後登場的是 Chair: Masafumi Yamashita 的 survey 
talk，其演講題目為「A survey on some recent advances in shared memory models」；接下來
則是有四篇論文的發表，主題為：「Fault tolerance」。而在下午的議程中，分為兩個時段
進行，第一個時段有四篇的論文發表，主題為：「Routing」，學生則是被安排在這個時段
中，學生所發表的論文題目為「Computing the Conditional Diagnosability of k-Ary n-Cubes 
under the Comparison Diagnosis Model」，過程為二十二分鐘的時間，報告內容主要為偵
錯度的計算。。另一個時段則有三篇論文發表，其主題是「Mobile Agents/Robots (I)」，
結束後，還有一個「Business Meeting」。第二天除了 survey talk 外，共有十一篇論文發
表。 
第三天早上首先登場的是Dr Colin Cooper 的專題演講，其演講的題目為「Random 
walks, interacting particles, dynamic networks: Randomness can be helpful」；接下來的議程
有四篇論文進行發表，其主題為：「Mobile Agents/Robots (II)」。下午的議程，有三篇論
文發表，其主題為：「Probabilistic Methods」。第三天除了早上的專題演講外，共有七篇
論文發表。結束後，主辦單位還舉辦了活動，用水上計程車載大家到另一個地方吃晚餐，
增進大家的交流。 
第四天早上首先登場的是Prof. David Pel 的專題演講，其演講的題目為「SINR Maps: 
Properties and Applications」；接下來的議程，分為兩個時段進行，第一個時段有四篇的
 5
這一次是學生第一次參加國際學術會議，的確是一個難得的機會，除了能將自己的
成果發表之外，也了解自己哪些方面上的不足，往後需要再多加強練習，例如英文的聽、
說方面仍然是需要加強的部份，期許未來在使用英文報告時，能夠不必再依賴所準備的
講稿。 
此次會議在演算法領域中是相當重要的一個會議，有來至於世界各地的學生和老師
參加，也因這個會議才能夠彼此認識，互相鼓舞與分享出國經驗，以及開闊視野。 
四天的會議安排相當紮實，然而美中不足的是這期間大會應該幫忙安排到當地會議
舉行地方的交通方式，在波蘭文、波蘭語不熟悉的情況下，購票明顯是有困難的。還有
在註冊費的匯款上，因為所提供的幣值為波蘭當地的幣值，在台灣的銀行根本沒有相對
應的外幣兌換，以至於匯款時困難重重。 
(三) 考察參觀活動 
大會於第三天下午的Social event ，以水上計程車載大家到晚上聚餐的地方。 
在聚餐的場所中，提供一個射箭的靶與扔長茅的場地，大家都躍躍欲試，充滿著
歡樂氣氛。用餐其間，還有古代武士的戰鬥表演、餐後有現場樂器演奏，之後還有2個
遊戲的帶動，使得現場氣氛相當地娛悅。 
如此用心的安排，使得大家的互動變得更多。(以下照片是由大會所提供的) 
  
(四) 建議 
 7
照片記錄：(二) 研討會舉辦在 Hotel Hilton in Gdansk 
 
照片記錄：(三) 研討會論文集 
 
照片記錄：(四) 研討會註冊收據 
 9
 
 
 11
Conditional Diagnosability of k-Ary n-Cubes 79
(Preparata, Metze, and Chiens model [31]) and the MM model (Maeng and
Maleks model [27,28]), are well-known and widely used. The PMC model was
ﬁrst introduced by Preparata et al. [31]. Under the PMC model, it uses test-based
diagnosis approach: every vertex u is capable of testing whether another vertex v
is faulty if there exists a communication link (edge) between them. It is assumed
that a test result is reliable (respectively, unreliable) if the vertex that initiates
the test is fault-free (respectively, faulty). The PMC model was also adopted in
[1,2,4,8,9,10,13,20,21,22,36,38,39]. Another major diagnosis model was ﬁrst in-
troduced by Maeng and Malek [27,28], also known as the comparison diagnosis
model. In the MM model, on the other hand, it uses comparison-based diagnosis
approach: the diagnosis is performed by sending the same input (or task) from
a vertex w to each pair of distinct neighbors, u and v, and then comparing their
responses. We use (u, v)w to represent a comparison (or test) in which vertices u
and v are compared by w. Thus, vertex w is called the comparator of vertices u
and v. The result of a comparison is either that the two responses agree or the
two responses disagree. Based on the results of all the comparisons, one needs to
decide the faulty or non-faulty (fault-free) status of the processors in the system.
The method of MM model takes advantage of the homogeneity of multiprocessor
systems in which comparisons can be made easily. Sengupta and Dahbura [33]
suggested a further modiﬁcation of the MM model, called the MM* model in
which each node has to test another two nodes if they are adjacent to it. The
MM* model might be lead the way toward a polynomial-time diagnosis algo-
rithm for the more general MM self-diagnosable systems, and complexity results
on determining the level of diagnosability of systems. Some researches about
the diagnosability of multiprocessor systems under the MM model or the MM*
model have been demonstrated in [3,4,11,12,15,16,18,26,37,40]. Throughout this
paper, we base our diagnosability analysis on the comparison diagnosis model.
The interconnection network considered in this paper is the k-ary n-cube,
denoted by Qkn, which is one of the most common multiprocessor systems for
parallel computer/communication system. Qkn is regular of degree 2n with kn
nodes, edge symmetric, and vertex symmetric. The three most popular instances
of k-ary n-cubes are the ring (n = 1), the hypercubes (k = 2), and the torus
(n = 2 and n = 3). A number of distributed memory multiprocessors have been
built with a k-ary n-cube forming the underlying topology, such as the Cray
T3D [23] and the Cray T3E [30]. Many topological properties of k-ary n-cubes
have been described in the literature [5,6,14,17,29,35].
In classical measures of system-level diagnosability for multiprocessor systems,
if all the neighbors of some processor u are faulty simultaneously, it is not possi-
ble to determine whether processor u is fault-free or faulty. So the diagnosability
of a system is limited by its minimum degree. Relative to the classical diagnos-
ability of a system, Lai et al. proposed a novel measure of diagnosability, called
conditional diagnosability, by restricting that, for each processor u in a system,
not all the processors which are directly connected to u fail at the same time.
The probability that all faulty processors are neighbors of one processor is very
small, clearly, in some large-scale multiprocessor systems like hypercubes or in
Conditional Diagnosability of k-Ary n-Cubes 81
results in M(V,C) can be deﬁned as a function σ : C → {0, 1}, which is called
the syndrome of the diagnosis.
For (u, v)w ∈ C, we use σ((u, v)w) to denote the result of comparing nodes
u and v by w. In this model, a disagreement of the outputs is denoted by
σ((u, v)w) = 1. Otherwise, σ((u, v)w) = 0. If σ((u, v)w) = 0 and w is fault-
free, then both u and v are fault-free. If σ((u, v)w) = 1, then at least one of the
three nodes u, v, w must be faulty. If comparator w is faulty, then the result of the
comparison is unreliable, which means both σ((u, v)w) = 0 and σ((u, v)w) = 1
are possible outputs, and it outputs only one of these two possibilities. The MM*
model is a special case of the MM model which considers a complete diagnosis
that means each node diagnoses all pairs of distinct neighboring nodes. Given a
syndrome σ, a faulty subset F ⊆ V (G) is said to be consistent with σ if σ can
arise from the circumstance that all vertices in F are faulty and all vertices in
V − F are fault-free. A system is said to be diagnosable if, for every syndrome
σ, there is a unique F ⊆ V that is compatible with σ. The diagnosability of a
system is the maximal number of faulty processors that the system can guar-
antee to diagnose. Let σ(F ) represent the set of all syndromes which could be
produced if F is the set of faulty vertices.
Two distinct faulty subsets F1, F2 ⊆ V (G) are said to be distinguishable if
σ(F1)
⋂
σ(F2) = ∅; otherwise, F1 and F2 are said to be indistinguishable. (F1, F2)
is said to be an indistinguishable (respectively, distinguishable) pair if F1 and F2
are indistinguishable (respectively, distinguishable). The symmetric diﬀerence of
the two sets F1 and F2 is deﬁned as the set F1ΔF2 = (F1 − F2) ∪ (F2 − F1).
Some of the previous results about the deﬁnition of a t-diagnosable system
are listed as follows.
Definition 1. [31] A system G is said to be t-diagnosable if all faulty processors
in G can be unambiguously identiﬁed, provided the number of faulty processors
does not exceed t.
Definition 2. [25] A faulty set F ⊆ V is called a conditional faulty set if N(v) 
F for any vertex v ∈ V . A system G(V,E) is conditionally t-diagnosable if F1
and F2 are distinguishable, for each pair of conditional faulty sets F1, F2 ⊆ V ,
and F1 = F2, with |F1|, |F2| ≤ t. The conditional diagnosability of a system
G, written as tc(G) is deﬁned to be the maximum value of t such that G is
conditionally t-diagnosable.
Lemma 1. Let G be a system. Then, tc(G) ≥ t(G).
The following theorem given by Sengupta and Dahbura [33] is a necessary and
suﬃcient condition for two distinct sets being distinguishable:
Theorem 1. [33] Let G = (V,E) be a graph. For any two distinct subsets F1, F2
of V (G), (F1, F2) is a distinguishable pair if and only at least one of the following
conditions is satisﬁed:
1. ∃ u, v ∈ F1 \ F2 and ∃ w ∈ V (G) \ (F1
⋃
F2) such that (u, v)w ∈ C;
2. ∃ u, v ∈ F2 \ F1 and ∃ w ∈ V (G) \ (F1
⋃
F2) such that (u, v)w ∈ C; or
3. ∃ u,w ∈ V (G) \ (F1
⋃
F2) and ∃ v ∈ F1ΔF2 such that (u, v)w ∈ C.
Conditional Diagnosability of k-Ary n-Cubes 83
Theorem 2. tc(Qkn) ≤ 6n− 5 for k ≥ 4, n ≥ 3.
Proof. We take a cycle C4 of length four in Qkn. Let u1, u2, u3, u4 be the four
consecutively vertices on C4, and choose a path P = 〈u2, u1, u4〉 of length two.
Assume that Qkn is split into k disjoint copies of Q
k
n−1 so that u1, u2, u3, u4 ∈
V (Q[i]) and (u1, u2), (u2, u3), (u3, u4), (u4, u1) ∈ E(Q[i]) for some i = 0, 1, . . . , k−
1. Let F1 = NQkn(P ) ∪ {u2} and F2 = NQkn(P ) ∪ {u4}. It is straightforward
to verify that F1 and F2 are indistinguishable by Theorem 1. We can show
our result by proving that F1 and F2 are two conditional faulty subsets, and
|F1| = |F2| = 6n− 4. unionsq
Lemma 3. Let Qkn be a k-ary n-cube and let S be a conditional faulty subset
with |S| ≤ 6n − 6 in Qkn (k ≥ 4, n ≥ 4). Then there exists no K1 and at most
one K2 in Qkn − S.
Lemma 4. Let Qkn be divided into k disjoint copies of Q
k
n−1, namely, Q[0], Q[1],
Q[2], . . . , Q[k− 1]. Let S be a conditional faulty set with |S| ≤ 6n− 6 of Qkn and
Si = V (Q[i]) ∩ S, i = 0, 1, 2, . . . , k − 1. If both Q[i] − Si and Q[i + 1] − Si+1
are connected, then every vertex in Q[i] − Si is connected to some vertex in
Q[i + 1]− Si+1 for 0 ≤ i ≤ k − 1.
Lemma 5. Let S be a conditional faulty subset with |S| ≤ 6n − 6 of Qkn for
k ≥ 4 and n ≥ 1, and let H = Qkn − S − V (the union of all K2s in Qkn − S) be
the maximum component of Qkn − S. For any vertex in Hi, there exists a path
of length not more than 4 that can connect it to a vertex in Hi−1 or a vertex in
Hi+1 for i = 0, 1, 2, . . . , k − 1, where Hi−1 = Q[i − 1] ∩H, Hi = Q[i] ∩H and
Hi+1 = Q[i + 1] ∩H.
Lemma 6. Let Qkn be the k-ary n-cube (k ≥ 4, n ≥ 4), and S be a conditional
faulty subset with |S| ≤ 6n − 6, i.e., NQkn(u)  S for every vertex u ∈ V (Qkn).
Then Qkn − S is connected; or
Qkn−S is disconnected and Qkn−S has two connected components, one of which
is K2.
Proof. Since NQkn(u)  S for every vertex u ∈ V (Qkn), every component of
Qkn − S is nontrivial. Let H = Qkn − S − V (the union of all K2 in Qkn). We shall
show the result of this lemma by proving that H is connected. Note that there
is at most one K2 in Qkn − S by Lemma 3. Since |V (H)| ≥ kn − (6n− 6)− 2 ≥
4n − (6n − 6) − 2 > 0 for n ≥ 1, V (H) is not empty. We can divide Qkn into k
disjoint subcubes along some dimension, denoted by Q[0], Q[1], Q[2], . . . , Q[k−1].
Suppose that Si = V (Q[i]) ∩ S and Hi = Q[i] ∩H , where 0 ≤ i ≤ k − 1. Before
proceeding to our main proof, we ﬁrst claim that at most three of Q[i] − Si,
0 ≤ i ≤ k − 1, are disconnected. Suppose, by contradiction, that at least four
Q[i]− Si for 0 ≤ i ≤ k − 1 are disconnected. Thus for each i such that Q[i]− Si
is disconnected, we have |Si| ≥ 2n − 2, since κ(Qkn−1) = 2n − 2. Therefore,
|S| ≥ 4× (2n−2) = 8n−8 > 6n−6 for n ≥ 2, which is contrary to |S| ≤ 6n−6.
So we get that at most three of Q[i] − Si are disconnected. Then, we continue
to prove that H is connected, in the following we consider four cases:
Conditional Diagnosability of k-Ary n-Cubes 85
in H2. Similarly, by Lemma 5, there exists a path of length not more
than 4 connecting a vertex in H3 to a vertex in H2 or a vertex in H4.
Therefore, in this subcase, we just need to check that there exists a
vertex u in H1 (respectively, H3) such that uL /∈ S and uR /∈ S, then
we can conclude that H is connected. Without loss of generality,
we prove that there exists a vertex u in H1 such that uL /∈ S and
uR /∈ S. We use contradiction to prove this subcase. Suppose, on
the contrary, that there does not exist a vertex u in H1 which has
uL /∈ S and uR /∈ S. There are at least kn−1− |S1| − 2 vertices in S0
and S2. Note that |S3| ≥ 2n− 2. So
|S| ≥ |S0|+ |S1|+ |S2|+ |S3|
≥ (kn−1 − |S1| − 2) + |S1|+ (2n− 2)
≥ 4n−1 + 2n− 4 > 6n− 6
for n ≥ 3. We will reach a contradiction, so H is connected.
Case 2.2.2: There exist at least two connected Q[i] − Si (i = i1, i2)
between Q[i1]− Si1 and Q[i2]− Si2 .
Due to the space limitation, the proof is omitted.
Case 3: Exactly one of Q[i]− Si is disconnected, where 0 ≤ i ≤ k − 1.
Without loss of generality, assume that one disconnected Q[i]−Si is Q[1]−S1.
We ﬁrst have |S1| ≥ 2n−2. Since |S| ≤ 6n−6, we have
∑k−1
i=0,i=1 |Si| ≤ 4n−4.
By Lemma 4, we get a connected subgraph Qkn− (Q[1]−S1)−S in H . With
a method similar to Lemma 5, we can show that there exists a path of length
not more than 4 connecting a vertex in H1 to a vertex in H0 or a vertex in
H2. So, H is connected.
Case 4: None of Q[i]− Si is disconnected, where 0 ≤ i ≤ k − 1.
Since |S| ≤ 6n−6, we have ∑k−1i=0 |Si| ≤ 6n−6. All of Q[i]−Si for 0 ≤ i ≤ k−1
is connected. By Lemma 4, Qkn − S is connected. So, H is connected.
In each of the above cases, we can conclude that H is connected. Hence, by
Lemma 3 and the above cases, if there is no K2 in Qkn − S, then Qkn − S is
connected. Otherwise, if there is one K2 in Qkn−S, then Qkn−S is disconnected
and Qkn − S has two components, one of which is K2. Thus, we have completed
the proof of this lemma. unionsq
Lemma 7. Let Qkn be a k-ary n-cube, and let F1 and F2 be any two distinct con-
ditional faulty subsets of Qkn with |F1|, |F2| ≤ 6n−5. Denote by H the maximum
component of Qkn − F1 ∩ F2. Then u ∈ H for every vertex u ∈ F1ΔF2.
Theorem 3. Let Qkn be a k-ary n-cube, and let F1 and F2 be any two distinct
conditional faulty subsets of Qkn (k ≥ 4 and n ≥ 4) with |F1|, |F2| ≤ 6n−5. Then
(F1, F2) is a distinguishable conditional pair under the comparison diagnosis
model.
Corollary 1. tc(Qkn) = 6n− 5 for k ≥ 4 and n ≥ 4.
Conditional Diagnosability of k-Ary n-Cubes 87
18. Hsieh, S.Y., Lee, C.W.: Diagnosability of two-matching composition networks un-
der the MM* model. IEEE Transactions on Dependable and Secure Comput-
ing 8(2), 246–255 (2011)
19. Ishida, Y., Adachi, N., Tokumaru, H.: Diagnosability and distinguishability anal-
ysis and its applications. IEEE Transactions on Reliability 36(5), 531–538 (1987)
20. Kavianpour, A.: Sequential diagnosability of star graphs. Computers and Electrical
Engineering 22(1), 37–44 (1996)
21. Kavianpour, A., Kim, K.H.: Diagnosability of hypercubes under the pessimistic
one-step diagnosis strategy. IEEE Transactions on Computers 40(2), 232–237
(1991)
22. Kavianpour, A., Kim, K.H.: A comparative evaluation of four basic system-level
diagnosis strategies for hypercubes. IEEE Transactions on Reliability 41(1), 26–37
(1992)
23. Kessler, R.E., Schwarzmeier, J.L.: Cray T3D: a new dimension for Cray research,
in. In: Proceedings of the 38th IEEE Computer Society International Conference,
pp. 176–182 (1993)
24. Lin, C.K., Tan, J.J.M., Hsu, L.H., Cheng, E., Lipta´k, L.: Conditional diagnosability
of Cayley Graphs generated by transposition trees under the comparison diagnosis
model. Journal of Interconnection Networks 9(1-2), 83–97 (2008)
25. Lai, P.L., Tan, J.J.M., Chang, C.P., Hsu, L.H.: Conditional diagnosability measures
for large multiprocessor systems. IEEE Transactions on Computers 54(2), 165–175
(2005)
26. Lai, P.L., Tan, J.J.M., Tsai, C.H., Hsu, L.H.: The diagnosability of the matching
composition network under the comparison diagnosis model. IEEE Transactions
on Computers 53, 1064–1069 (2004)
27. Maeng, J., Malek, M.: A comparison connection assignment for self-diagnosis of
multiprocessors systems. In: Proceedings of the 11th International Symposium on
Fault-Tolerant Computing, pp. 173–175 (1981)
28. Malek, M.: A comparison connection assignment for diagnosis of multiprocessor
systems. In: Proceedings of the 7th International Symposium on Computer Archi-
tecture, pp. 31–36 (1980)
29. Mao, W., Nicol, D.M.: On k-ary n-cubes: theory and applications. Discrete Applied
Mathematics 129, 171–193 (2003)
30. Najjar, W., Gaudiot, J.L.: Network resilience: a measure of network fault tolerance.
IEEE Transactions on Computers 39, 174–181 (1990)
31. Preparata, F.P., Metze, G., Chien, R.T.: On the connection assignment problem of
diagnosable systems. IEEE Transactions on Electronic Computers 16(6), 848–854
(1967)
32. Pan, Y.: Fault tolerance in the block-shift network. IEEE Transactions on Relia-
bility 50(1), 85–91 (2001)
33. Sengupta, A., Dahbura, A.T.: On self-diagnosable multiprocessor systems: diagno-
sis by the comparison approach. IEEE Transactions on Computers 41(11), 1386–
1396 (1992)
34. Somani, A.K., Agarwal, V.K., Avis, D.: A generalized theory for system level di-
agnosis. IEEE Transactions on Computers 36(5), 538–546 (1987)
35. Sarbazi-Azad, H., Ould-Khaoua, M., Mackenzie, L.M., Akl, S.G.: On some prop-
erties of k-ary n-cubes. In: Proceedings of the Eighth International Conference on
Parallel and Distributed Systems (ICPADS), pp. 517–524. IEEE Computer Society,
Los Alamitos (2001)
國科會補助計畫衍生研發成果推廣資料表
日期:2011/08/02
國科會補助計畫
計畫名稱: 條件錯誤下正則網路上的泛迴圈問題
計畫主持人: 謝孫源
計畫編號: 99-2221-E-006-102- 學門領域: 計算機理論與演算法
無研發成果推廣資料
研討會論文 1 1 100% 
今年發表於 18th 
International 
Colloquium on 
Structural 
Information and 
Communication 
Complexity 
(SIROCCO 2011)的
論文當中，僅有一
篇是台灣本土的
學者所發表。 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
無 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
