行政院國家科學委員會補助專題研究計畫期末報告 
M/M/S 排隊系統含有同步休假及多個門檻策略之最佳管理 (3/3) 
計畫類別：個別型計畫  ■整合型計畫 
計畫編號：NSC 99－2221－E－025－002－MY3 
執行期間：99年 8月 1日 至 102年 7月 31日 
 
計畫主持人：柯沛程 
共同主持人：  
執行機構及單位名稱：國立台中科技大學應用統計系 
計劃參與人員： 
游璧瑜    國立台中科技大學應用統計系 
賴昱婷    國立台中科技大學應用統計系 
姚嘉俊    國立台中科技大學應用統計系  
劉琬琦    國立台中科技大學應用統計系 
巫珊綺    國立台中科技大學應用統計系 
余婉嬿    國立台中科技大學資訊管理系 
鄧楷翰    國立台中科技大學資訊工程研究所 
張琬婷    國立台中科技大學財務金融研究所 
蕭致鴻    國立虎尾科技大學電機工程系 
 
 
本成果報告包括以下應繳交之附件： 
□赴國外出差或研習心得報告一份 
□赴大陸地區出差或研習心得報告一份 
□出席國際學術會議心得報告及發表之論文各一份 
□國際合作研究計畫國外研究報告書一份 
 
執行單位：國立台中科技大學應用統計系 
 
中  華  民  國 1 0 2 年 5 月 2 4 日
2 
 
search the optimal operation policy using two algorithms. 
Keywords: cost model, server breakdown, synchronous vacation, two-thresholds 
研究報告內容 
一、 前言 
The queueing model with server vacations (server absences) has been well studied in 
the past three decades and successfully applied in many areas such as 
manufacturing/service and computer/communication network systems. These vacation 
queueing models can be classified according to the number of servers and the vacation 
policies. 
二、 研究目的 
The main reason for the growing interests in multiple-server vacation models is because 
they can realistically represent some service/manufacturing systems and computer 
networks. Our model in this paper is not only applicable to a practical production and 
inventory system but also generalizes the multi-server vacation model with threshold 
policies. Specifically, we focus on the investigation of M/M/c queueing system with 
multi-threshold vacation policy and server breakdowns.  
三、 文獻探討 
Excellent surveys on the classical vacation models have been reported by Doshi (1986) 
and Takagi (1991). Multi-server vacation models were mainly studied in the past decade 
and surveyed by Tian and Zhang (2006). Tian and Zhang (2003) provided an analysis 
on GI/M/c queue with phase-type vacations. Zhang and Tian (2003a and 2003b) studied 
the multi-server models with either single vacation or multiple vacations. Later, Tian 
and Zhang (2006) extended the multi-server vacation model to the one with threshold 
policy. Xu and Zhang (2006) investigated the two threshold policy in a multi-server 
vacation model. Recently Lin and Ke (2009) analyzed the multi-server model with 
working vacations. Ke et al. (2009) studied the optimal threshold policies in a finite 
buffer multi-server vacation model with unreliable servers. For finite-source 
multi-server queueing systems with single/multiple vacation policies, Gharbi and 
Ioualalen (2010) provided some the algorithms for computing the system performance 
measures. Kumar et al. (2009) studied an M/M/c retrial queueing system with Bernoulli 
vacations. 
四、 研究方法 
4 
 
,
0
,0 ,
 the probability that there are  customers,  breakdown servers and  
          servers on vacation, ( , , ) . Thus the number of servers attending
          the queue is ,
 [ ,
≡
∈
= − −
≡
k
i d
i i i
P i d k
i d k
i c d k
P P
Ω
Π
[ ]
1 2 1 2 1 2 1 2 1 2 1 20 0
0 ,0 ,0 ,1 ,1 ,1 ,1 , , , ,
0 1 1 1
, , , , , , , , , , , ]
      the probability vector that  customers are in the system, 0,1,2,...,
  , , , , , ,
      the se
+ + +
− +
≡ =
≡
≡

 
k k k k k k k k k k k k
i i i i i i i c i c i c i c
c c c
P P P P P P P P P P
i i
Π Π Π Π Π Π
t of probability vectors for all states.   
We define the following symbols 
max{0,min{ , }}µ µ=ki i k  and max{0, }α α=
k k  
represent the mean service rate and breakdown rate when there are i  customers and k  
normal operating servers. Based on the Matrix Analytical Method (MAM) (see Neuts 
(1981) and Latoche and Ramaswami (1999)), the infinitesimal generator and the 
stationary probability equations for this CTMC can be written in the following matrix 
form: 
0
1 1
2 2
1 1
 
                
                       
                           
        
  
c c
c c
c
− −
=
A   B
C   A   B
      C   A  B
Q
C  A B
                            C   A  B
                                       C
  
  
  
                                                  
c
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 A B
  
, =ΠQ 0 ,    (1) 
where each entry of Q  is square sub-matrix of order [4 ( 1)]× +c . 4 ( 1)λ × += cB I , where 
4 ( 1)× +cI  is the identity matrix with order 4 ( 1)× +c . For 1≤ ≤i c , iC  is a 
block-diagonal matrix as following 
,0
,1
,2
,
      
            
                
                      
 
 
 
 =
 
 
 
 

i
i
i i
i c
c
c
C c
c
, 1 .≤ ≤i c        (2) 
Each sub-matrix of ,i dc , 0,1, 2,...,=d c  is a 4 4×  matrix represented as 
6 
 
( )+ + =i iC A B e 0 , 1 i c≤ ≤ , where e  denotes a column vector with suitable 
dimension and all elements are 1’s. Based on the Theorem 3.1.1 in Neuts (1981), this 
queueing system will be stable and the stationary distribution exists if and only if 
c<xBe xC e .         (6) 
1,0 2,0 3,0 4,0 1, 2, 3, 4,[ , , , ,..., , , , ]= c c c cx x x x x x x xx  is the invariant probability of the matrix 
c c= + +F C A B   and it satisfies =xF 0  and 1=xe . Solving =xF 0  and 1=xe  
simultaneously implies  
1, ,  0,1, 2,...,( )
α β
α β
− 
 
 = =
+
d c d
d c
c
d
x d c .      (7) 
and , 0=i jx , 2,3, 4=i , 0,1, 2,...,=j c . Substituting B , cC  and x  into equation (6) 
and doing some algebraic manipulations, we have 
βµ λ
α β
>
+
c ,         (8) 
which is the stability condition of this queueing system. It is noted that when parameter 
0α =  or β = ∞ , (8) is reduced to cµ λ>  which is the stability condition of the 
classical M/M/c queueing system. If the stability condition is satisfied, we can focus on 
the steady-state and solve for the stationary probability vector set Π  from (1). First, 
the steady-state probability Π  has the following matrix geometric solution form: 
 + =
i
c i cΠ Π R , for 1≥i .         (9) 
We need to obtain the rate matrix R by solving the matrix quadratic equation 
2
c c+ + =R C RA B 0 ,       
  (10) 
for the minimal non-negative solution. From Neuts (1981) or Latouche and Ramaswami 
(1999), R  can be computed recursively as 
0 =R 0 , and 
1 2 1
1n c n c c
− −
+ = − −R BA R C A , for 0n ≥ .    (11) 
The sequence { }nR  is monotone and converges to the minimal non-negative solution 
of equation (10). After getting R , nΠ , for n c>  can be computed recursively.  
Using =ΠQ 0 , we can determine nΠ , for 1 n c≤ ≤ , by solving 
0 0 1 1+ =Π A Π C 0 ,           (12) 
1 1 1− + ++ + =i i i i iΠ B Π A Π C 0 , 1≤ ≤i c ,       (13) 
1 2( )− − + + =i cc c cΠ R B RA R C 0 , <c i .       (14) 
After some algebraic manipulations on (12) and (13), by introducing the sequence of 
8 
 
1,1
2,1 2,2
3,1 3,3
4,1 4,2 4,3 4,4
 
 
 =
 
 
 
r
r r
r r
r r r r
R . 
where the diagonal elements are 
2
1 1 1 1 1
1,1 2,2
1
2
2 2 2 2 2
3,3
2
2
1 2 1 2 1 2 1 2 1 2
4,4
1 2
( ) [ ( ) ] 4( )
,  ,
2( )
( ) [ ( ) ] 4( )
,
2( )
( ) [ ( ) ] 4( )
.
2( )
λ θ µ λ θ µ µλλ
µ µ
λ θ µ λ θ µ µλ
µ
λ θ θ µ λ θ θ µ µλ
µ
+ + − − + + − − −
= =
−
+ + − − + + − − −
=
−
+ + + − − − + + + − − − − −
=
− −
c k c k c k
r r
c c k
c k c k c k
r
c k
c k k c k k c k k
r
c k k
. 
The off-diagonal elements can be calculate recursively using the above elements as 
1 1,1 2 1,1
2,1 3,1
1 1,1 2,2 1 2 1,1 3,3 1
,  ,
(1 )( ) (1 )( )
θ θ
λ θ µ λ θ µ
= =
+ + − − − + + − − −
r r
r r
r r c k r r c k
 
2 2,2
4,2
1 2 2,2 4,4 1 2
,
(1 )( )
θ
λ θ θ µ
=
+ + + − − − −
r
r
r r c k k
 
1 3,3
4,3
1 2 3,3 4,4 1 2
,
(1 )( )
θ
λ θ θ µ
=
+ + + − − − −
r
r
r r c k k
 
1 3,1 2 2,1 1 2 4,2 2,1 4,3 3,1
4,1
1 2 1,1 4,4 1 2
( )( )
(1 )( )
θ θ µ
λ θ θ µ
+ + − − +
=
+ + + − − − −
r r c k k r r r r
r
r r c k k
. 
Because of the lower triangular structure of R , the diagonal elements are also the 
eigen-values of R . Therefore, when the stability condition λ µ< c  is satisfied, the 
spectral radius of R  is less than one. That is, R  has the convergence property. Some 
system performance measures are evaluated by using the stationary distribution. Based 
on these performance measures, a cost model is constructed to determine the optimal 
vacation policy 1 2[ , ]= k kK  when the other system parameters are given. The major 
system performance measures are denoted by the following symbols: 
the average number of customers in the system
[ ] the average number of servers on vacation
[ ] the average number of failure (broken-down) servers 
[ ] the average number of busy servers
[ ] the a
≡
≡
≡
≡
≡
sL
E V
E D
E B
E I verage number of idle servers
. . [ ] / the operative utilization level= ≡OU E B c
 
The expressions for sL , [ ]E V , [ ]E D , [ ]E B  and [ ]E I  are given as follows: 
10 
 
Step 2. For each value of 1 0,1, 2,...,=k c , setup a do loop with lower bound 0 and 
upper bound 1−c k  for 2k . 
Step 3. Calculate the cost function ( )F K  and replace candidate by 1 2[ , , ( )]k k F K  if 
( )F K <candidate. 
Step 4. Candidate is the optimal solution, Output. 
The following example is used to illustrate the direct search algorithm described above. 
Example. Consider 6=c  and the system parameters 3.0λ = , 1.0µ = , [0.2,0.5]=Θ , 
[0.5,0.5]=δ , 0.02α = , 0.5β = , and the cost elements 30=hC , 15=vR , 30=iC , 
45=dC , 60=oC . 
Step 1. Let 5000M =  and set candidate cost value = M . 
Step 2. Make two do loops : 1k  from 0 to 6, 2k  from 0 to 16− k . 
Step 3. Calculate (0,0) 218.1712=F  < 5000, set candidate = [0, 0, 218.1712] 
Calculate (0,1) 190.8052=F  < 218.1712, set candidate = [0, 1, 190.8052] 
Calculate (0, 2) 173.5770=F  < 190.8052, set candidate = [0, 2, 173.5770] 
… 
Calculate (1,1) 166.1290=F  < 173.5770, set candidate = [1, 1, 166.1290] 
Calculate (1, 2) 159.5965=F  < 166.1290, set candidate = [1, 2, 159.5965] 
Calculate (1,3) 167.7832=F  > 159.5965, candidate = [1, 2, 159.5965] 
… 
Calculate (6,0) 218.1712=F  > 159.5965, candidate = [1, 2, 159.5965] 
Step 4. [1, 2, 159.5965] is the optimal solution. 
More results of optimal value of K  and the system performance measures for various 
value of λ  and parameters δ  are shown in Table 1.  
The results in Table 1 indicate that the expected performance behaviors such as 
cost function F , sL , [ ]E D  increase and [ ]E V , [ ]E I  decrease as λ  becomes 
larger. *K  would increase for reducing the cost if δ  raises. [ ]E B  ( . .OU ) equals to 
the traffic intensity /λ µ . 
 If the service rate can be controlled, after getting the optimal vacation policy, 
Quasi-Newton method can be utilized to search for the optimal service rate *µ for 
further cost reduction. It is noted that the derivative of the cost function F  with 
respect to µ  indicates the direction in which the cost function increases. Therefore, the 
(local) minimum of F  may be found along the opposite direction of the gradient (see 
12 
 
Table 1. The optimal values of 1 2[ , ]= k kK  and the system performance measures for 
various value of λ  and 1 2[ , ]δ δ=δ  when 6=c , 1.0µ = , [0.2,0.5]=Θ , 
0.02α = , 0.5β = . 
λ  2.0 3.0 4.0 2.0 3.0 4.0 
δ  [0.2, 0.2] [0.2, 0.2] [0.2, 0.2] [0.2, 0.5] [0.2, 0.5] [0.2, 0.5] 
*K  [3, 3] [2, 2] [1, 1] [2, 2] [1, 2] [0, 2] 
F  148.4134 170.5586 216.9074 138.3320 162.4102 213.2604 
sL  2.347775 3.938494 5.797566 2.289090 3.748270 5.705811 
[ ]E V  1.875540 1.559071 0.888196 2.058108 1.612644 0.907817 
[ ]E D  0.158633 0.170805 0.196607 0.151611 0.168745 0.195853 
[ ]E B  2.000000 3.000000 4.000000 2.000000 3.000000 4.000000 
[ ]E I  1.965826 1.270121 0.915199 1.790281 1.218610 0.896334 
. .OU  0.333333 0.500000 0.666666 0.333333 0.500000 0.666666 
 
 
λ  1.0 2.0 3.0 1.0 2.0 3.0 
δ  [0.2, 0.8] [0.2, 0.8] [0.2, 0.8] [0.5, 0.5] [0.5, 0.5] [0.5, 0.5] 
*K  [2, 3] [2, 2] [1, 2] [3, 2] [2, 2] [1, 2] 
F  131.9207 131.9643 157.7482 120.5204 126.3406 159.5965 
sL  1.071264 2.324119 3.824938 1.095125 2.368235 3.819036 
[ ]E V  2.274806 2.220879 1.765399 2.540647 2.373307 1.720961 
[ ]E I  0.143277 0.145351 0.162870 0.133052 0.139488 0.164578 
[ ]E B  1.000000 2.000000 3.000000 1.000000 2.000000 3.000000 
[ ]E D  2.581915 1.633770 1.071732 2.326300 1.487204 1.114461 
. .OU  0.166666 0.333333 0.500000 0.166666 0.333333 0.500000 
 
 
14 
 
Case (ii): [0.2,0.2]=δ , [3,3]=K , 2.0λ = , (0) 1.0µ = ,  
Iterations 0 1 2 3 4 5 6 7 8 
F  148.4134 140.6018 137.7450 136.8043 136.5823 136.5577 136.5572 136.5572 136.5572 
( )µ i  1.0 1.260281 1.520213 1.763312 1.947348 2.033976 2.049170 2.049569 2.049570 
/ µ∂ ∂F  -47.49048 -17.46357 -6.277332 -2.048419 -0.520574 -0.068402 -0.001708 -0.000001 81 10−×  
2 2/ µ∂ ∂F  182.4585 67.18507 25.82211 11.13056 6.009310 4.501780 4.278770 4.273090 4.273070 
sL  2.347775 1.766970 1.418359 1.199614 1.075263 1.025488 1.017244 1.017029 1.017029 
[ ]E V  1.875540 2.027144 2.098499 2.134336 2.151432 2.157597 2.158581 2.158607 2.158607 
[ ]E I  0.158633 0.152802 0.150058 0.148679 0.148022 0.147785 0.147747 0.147746 0.147746 
[ ]E B  2.000000 1.586948 1.315605 1.134229 1.027038 0.983296 0.976005 0.975815 0.975815 
[ ]E D  1.965826 2.233107 2.435839 2.582755 2.673509 2.711322 2.717667 2.717833 2.717833 
. .OU  0.333333 0.264491 0.219268 0.189038 0.171173 0.163883 0.162668 0.162636 0.162636 
16 
 
In this paper, an M/M/c queueing system with unreliable servers, two-threshold synchronous 
vacation policy and various probabilities for vacation was investigated. A subset of servers may 
take a synchronous single vacation when the number of customers in the system is less than a 
threshold value. The necessary and sufficient condition for the stability of this system was derived. 
The rate matrix, steady-state probability and system performance measures were obtained using 
matrix analytic method. For a given cost and revenue structure, the optimal two-threshold vacation 
policy K subject to a given set of probabilities δ  was found by a direct search algorithm. 
Furthermore, we also discussed the determination of the optimal service rate by using 
Quasi-Newton method. Finally, a sensitivity analysis of the optimal values of ( µ , K ) on (λ ,δ ) 
was performed. The model studied in this paper can be considered as a generalization of the 
multi-server vacation models existing in the literature and has wide applications in the area of 
production and inventory control where better resource utilization should be achieved. 
六、 參考文獻 
1. Doshi B. T. (1986). Queueing systems with vacation - a survey, Queueing Systems, 1, 29-66. 
2. Gharbi N. and Ioualalen M. (2010). Numerical investigation of finite-source multiserver 
systems with different vacation policies. Journal of Computational and Applied Mathematics. 
234, 625-635. 
3. Ke J. C., Lin C. H., Yang J. Y. and Zhang Z. G. (2009). Optimal (d, c) vacation policy for a 
finite buffer M/M/c queue with unreliable servers and repairs. Applied Mathematical Modelling, 
33, 3949-3962. 
4. Kumar B. K., Rukmani R. and Thangaraj V. (2009). An M/M/C retrial queueing system with 
Bernoulli vacations, Journal of Systems Science and Systems Engineering, 18(2), 222-242. 
5. Latouche G. and Ramaswami V. (1999). Introduction to Matrix Analytical Methods in 
Stochastic Modeling, SIAM, Philadelphia, PA. 
6. Lin C. H. and Ke J. C. (2009). Multi-server system with single working vacation. Applied 
Mathematical Modelling, 33, 2967-2977. 
7. Neuts M. (1981). Matrix-Geometric Solution in Stochastic Models, Johj Hopkins University 
Press, Baltimore. 
8. Takagi H. (1991). Queueing analysis : a foundation of performance evaluation, Vol. I, vacation 
and priority systems, Part I. North-Holland, Amsterdam.  
9. Tian N. and Zhang Z. G. (2003). Stationary distribution of GI/M/c queue with PH type 
vacations. Queueing systems, 44, 183-202. 
10. Tian N. and Zhang Z. G. (2006). A two threshold vacation policy in multiserver queueing 
systems. European Journal of Operational Research, 168, 153-163. 
11. Xu, X. L. Zhang Z.G. (2006) The analysis of multi-server queue with single vacation and a (e, d) 
policy, Performance Evaluation, 63 (8), 825-838. 
表 Y04 
行政院國家科學委員會補助國內專家學者出席國際學術會議報告 
101年  9月  13日    
報告人姓名 柯沛程 服務機構 
及職稱 
國立臺中技術學院應用統計系 
教授 
時間 
會議地點 
2012/9/3  2012/9/7 
匈牙利布達佩斯 
本會核定 
補助文號 
NSC 99-2221-E-025-002-MY3 
會議 
名稱 
(中文)「2012在實體科學數學模式國際會議」 
(英文)2012 International Conference on Mathematical Modeling in Physical 
Sciences (簡稱:IC-MSQUARE 2012) 
發表 
論文 
題目 
(中文) 具第二種選擇服務之無限容量多個服務者排隊系統的最佳化比較 
(英文) Infinite capacity multi-server queue with second optional service channel 
一、參加會議經過 
本人此次赴匈牙利布達佩斯參加的是 2012在實體科學數學模式國際會議，這次研討會的
目的在 Promote 教學領域結合其他科學應用和現在技術趨勢(technological trends) 高品質研
究的發展及知識。會議舉行的日期從 9月 3日開始，到 9月 7日結束，共有五天。參加人員
各個都是該研究主題領域的最頂尖專家，討論非常熱烈，本人非常榮幸參加這樣的會議。 
本次旅程如下： 
(1) 101年 8月 28日至 101年 8月 29日由桃園搭乘飛機至曼谷轉機至維也納，之後再轉車到
布達佩斯沿路觀賞奧地利和匈牙利的景點感覺真是一個熱愛藝術的國家。於 9 月 2 日下
午抵達位在布達佩斯的研討會代訂的旅館。 
(2) 101年 9月 3日與會。本人先參加了歡迎會。 
(3) 101 年 9 月 4 日參加 Mathematical Modeling and Application and Complex Networks 等
Session. 
(4) 101年 9月 5日參加Mathematical Modeling and Application等 Session. 
(5) 101年 9月 6日本人論文發表於 12:00 – 14:00 Session. 題目為”Infinite capacity multi-server 
queue with second optional service channel”.  觀眾給予熱烈回應。 
(6) 101年 9月 7日Mathematical Modeling and Application等 Session. 
(7) 101年 9月 8日至 101年 9月 11日自費參觀布達佩斯市區及著名古蹟，真佩服他們把古
蹟維持的非常完美。 
(8) 101年 9月 12日搭機返國，經曼谷轉機回台北。 
二、與會心得 
 此次於 IC-MSQUARE 2012論文發表會場，會議本身為優異之國際會議，出席發表的文
章都經過大會指派的審稿學者嚴謹的審閱通過。各地專家學者聚集於此會議，規模不小，討
論與交流非常熱烈，較熱門之場次，聆聽之觀眾皆滿座。會場詢問時間(Q & A)中，問題之尖
銳、考量點之廣泛，使人深刻體會到表達之技巧與學術研究之嚴謹的重要。 
本人發表的文章安排在 9月 6日(星期三) 12:00 – 14:00 Session: Stochastic Model Session。
附件三
 
表 Y04 
四、攜回資料名稱及內容 
1. 大會詳細議程一份； 
2. 研討會論文摘要集一本。 
五、其他 
    衷心感謝國科會給予補助此次研討會。 
 
99年度專題研究計畫研究成果彙整表 
計畫主持人：柯沛程 計畫編號：99-2221-E-025-002-MY3 
計畫名稱：M/M/S 排隊系統含有同步休假及多個門檻策略之最佳管理 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 3 3 100%  
研討會論文 1 1 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 2 2 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 2 2 100%  
研究報告/技術報告 0 0 100%  
研討會論文 2 2 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
