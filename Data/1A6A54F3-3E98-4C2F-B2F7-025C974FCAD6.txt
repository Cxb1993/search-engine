follows: 
 
The Minimum Hub Set Problem: The MHS Problem : 
Given a graph G(V, E), find a hub set S of G such 
that the cardinality of S is minimized. The 
cardinality of S is called the hub number of G and 
denoted as h(G). 
 
 If we restrict that the induced subgraph of the 
considered hub set Q, denoted by <Q>, must be 
connected, then the problem becomes the following 
variant. 
 
The Minimum Connected Hub Set Problem: The MCHS 
Problem : 
Given a graph G(V, E), find a hub set S of G such 
that the cardinality of S is minimized under the 
restriction that <S> must be connected. The 
cardinality of S is called the connected hub number 
of G and denoted as  (G). 
 
 The above two problems were proposed by Dr. M. Walsh 
in 2006. In the field of algorithmic graph theory, 
they are relatively new research issues. It is 
already known that they are NP-hard on bipartite 
graphs and split graphs. In addition, on some special 
graph classes, such as AT-free graphs and block 
graphs, there exist polynomial-time algorithms for 
them. This project focused on designing polynomial-
time algorithms for the two problems on convex split 
graphs, biconvex bipartite graphs, convex bipartite 
graphs, block-cactus graphs, and trapezoid graphs. 
After then, we extend the results to graphs with 
weights on vertices. 
 
英文關鍵詞： (connected) hub sets, NP-hard, special graphs, 
polynomial-time algorithms 
 
一、摘要 
 
中文： 
令 G(V, E)為一個簡單、無向連通圖。任給一個 V 的子集合 S，對所有不在 S 中的任兩頂點 u, v，
若 u 與 v 不相鄰，則必存在一條 u, v 間之路徑 P(u, v)，除了 u 與 v 之外，P 中其它的頂點均屬於 S。這
樣的一條路徑，我們稱之為 u 與 v 間之 S-聚合路徑 (S-hub-path between u and v) ，而 S 則為 G 的一組
聚合中心 (hub set) 。本計畫所探討的核心問題如下： 
 
最小聚合中心問題 (The Minimum Hub Set Problem: The MHS Problem) : 
給定圖 G(V, E)，找出一組頂點個數最少的聚合中心 S。S 的頂點個數稱為 G 的聚合數 (hub 
number) ，記作 h(G)。 
 
若我們進一步限制聚合中心 Q 的誘發子圖 (induced subgraph of Q)，記作<Q>，必須是連通的 
(connected) ，則變型成為以下的問題。 
 
最小連通聚合中心問題 (The Minimum Connected Hub Set Problem: The MCHS Problem) : 
給定圖 G(V, E)，找出一組頂點個數最少的聚合中心 S，且<S>必須是連通的。S 的頂點個數稱為 G
的連通聚合數 (connected hub number) ，記作 (G)。 ch
 
以上的兩個問題乃是由 M. Walsh 博士於 2006 年率先提出來的。在圖論演算法研究領域中，它們
是相當新的題目。我們已知在 bipartite graphs 及 split graphs，它們均是 NP-hard。另外在 AT-free graphs, 
block graphs 上等特殊圖上有多項式演算法。本計畫則針對 convex split graphs, biconvex bipartite graphs, 
convex bipartite graphs, block-cactus graphs, trapezoid graphs 等特殊圖設計多項式演算法。接著則將問題
延伸到頂點有權重的圖之上。 
 
關鍵字： (連通) 聚合中心、NP-hard、特殊圖、多項式演算法 
 
英文： 
 Let G(V, E) denote a simple connected undirected graph. Given a subset S of V, S is called a hub set of G 
if for all u, v in S, u and v are not adjacent, then there exists a path P(u, v) connecting u and v such that all 
vertices in P belong to S, except u and v. Such a path P is called a S-hub-path between u and v. The major 
problem considered in this project is as follows: 
 
The Minimum Hub Set Problem: The MHS Problem : 
Given a graph G(V, E), find a hub set S of G such that the cardinality of S is minimized. The cardinality 
of S is called the hub number of G and denoted as h(G). 
 
 If we restrict that the induced subgraph of the considered hub set Q, denoted by <Q>, must be connected, 
then the problem becomes the following variant. 
 
 第 1頁 共 7頁
MHS and MCHS on Block-Cactus Graphs 
 Given a graph G(V, E), a vertex v is called a cut vertex of G if the subgraph resulted by the removal of v 
as well as all edges incident to v becomes disconnected. A block B of G is a maximal connected subgraph of G 
containing no cut vertices. A block-cactus graph G is a graph in which each block can only be an edge, a 
clique, or a cycle. Note that any two distinct blocks of a block-cactus G can have at most one common vertex. 
A block B is called an end block of G if it contains exactly one cut vertex of G. Blocks which are not end 
blocks are called internal blocks of G. Moreover, for each block B of G, η(B) denotes the number of the 
vertices of B. 
 It is so easy to solve the MCHS problem when the block-cactus G consists of single block. Thus, we can 
assume that G consists of at least two blocks hereafter. 
 
Lemma 1. For any block-cactus graph G, there exists a minimum connected hub set S of G containing all cut 
vertices of G. 
 
Lemma 2. For any block-cactus graph G, there exists a minimum connected hub set S of G such that S 
contains at least (η(B) – 2) vertices of every cycle block B of G. 
 
Lemma 3. For any block-cactus graph G, let B be an internal cycle block of G. To obtain a minimum 
connected hub set of G, we must choose the least number of vertices from all non-cut vertices of B such that 
adding them to the set of cut vertices of B can induce a connected subgraph. 
 
 It is simple to ascertain that the MHS problem on block-cactus graphs can be solved by the similar 
manner as the MCHS problem. Thus, the following theorem can be established. 
 
Theorem 1. Both the MHS problem and the MCHS problem can be solved in linear time on block-cactus 
graphs. 
 
MCHS on Convex Split Graphs 
 Given a graph G(V, E), let N(v) be the set of the vertices adjacent to v, for all v ∈ V. For any subset Q of 
V and u ∉ Q, denote  = )(deg uQ { }QxEuxx ∈∈ ,),{(| . A graph G(V, E) is a split graph if V can be 
partition into two nonempty subsets K and I such that K is a clique and I is an independent set. A split graph G 
will be denoted as G(K ∪ I, E) in the rest of this report. Meanwhile, G(K ∪ I, E) is called a convex split graph 
if there exists an ordering of the vertices in I, i.e., I = { , …, 1i Ii } such that the indices of the vertices in N( ) 
∩ I consists of consecutive integers, for all  ∈ K. 
tk
tk
 
Lemma 4. Given a convex split graph G(K ∪ I, E) with I = { , …, }, let  be a vertex in N( ) such that 
 is maximized. Then, there exists a minimum connected hub set S of G such that  ∈ S. 
1i qi jk 1i
)(deg jI k jk
 第 3頁 共 7頁
MCHS on Convex Bipartite Graphs 
 Based upon the results of the MCHS problem on biconvex bipartite graphs, we try to extend our 
approach to solve the MCHS problem on convex bipartite graphs. A bipartite graph G(X ∪ Y, E) is convex if 
there exists an ordering of the vertices in either X or Y, without loss of generality, say Y, i.e., Y = { , …, 1y
Yy }, such tchat the indices of the vertices in N( ) consist of consecutive integers, for all  ∈ X. Since the 
class of biconvex bipartite graphs is a subclass of the class of convex bipartite graphs, the remaining is to 
consider the finding of a minimum connected hub set of a convex bipartite graph G(X ∪ Y, E) which is not 
biconvex. 
tx tx
It is easy to verify that a minimum connected hub set S obtained by our algorithm for the MCHS problem 
on a biconvex bipartite graph G(X ∪ Y, E) induce a path of G. If G is a convex bipartite graph but not 
biconvex bipartite, such a set S can also be obtained by our algorithm. It is easy to see that there must exist a 
S-hub-path between u, v ∈ Y, for all u, v ∉ S. We conjecture that we can add some additional vertices to S to 
obtain a minimum connected hub set of G. We are now ascertaining the following conjecture. 
 
Conjecture 1. The MCHS problem can be solved in linear time on convex bipartite graphs by greedy 
approach. 
 
Extension to Vertex-Weighted Graphs 
 Let G(V, E, w) be a graph in which a positive weight w(v) is associated to each vertex v. The following 
describes the variants of the MHS and the MCHS problem on graphs G(V, E, w), respectively, where w(Q) = 
, for all subsets Q of V. ∑ ∈Qu uw )(
 
The Weighted Minimum Hub Set Problem: The WMHS Problem : 
Given a graph G(V, E, w), find a hub set S of G such that w(S) is minimized. 
 
The Weighted Minimum Connected Hub Set Problem: The WMCHS Problem : 
Given a graph G(V, E, w), find a connected hub set S of G such that w(S) is minimized. 
 
Note that Lemma 1 to Lemma 3 imply that we can easily extend the algorithms for the MHS problem and 
the MCHS problem to the WMHS problem and WMCHS problem, respectively. After including all cut 
vertices, the remaining task is to examine each η(B)-vertex cycle block B to determine which vertices should 
be excluded. The number of vertices should be excluded in each cycle block is at most two. This can be done 
in O(η(B))-time by a simple greedy algorithm. Thus, we can have the following theorem. 
 
Theorem 4. Both the WMHS problem and the WMCHS problem can be solved in linear time on block-cactus 
graphs. 
 
 This project also considers the following new variants. 
 
 第 5頁 共 7頁
(Submitted to Discrete Mathematics) 
Refined Abstract 
 A graph G(V, E) with V = { , …, } is a trapezoid graph if there exists a trapezoid representation 
model T = { , …, } such that each  corresponds to the trapezoid  in T and ( , ) ∈ E iff the 
intersection of  and  in the trapezoid representation mode T is nonempty, for all ,  ∈ V. In this 
paper, some sufficient conditions for h(G) = (G), for general graphs as well as trapezoid graphs G are first 
characterized. Then, it shows that (G) for trapezoid graphs G can be computed in linear time. 
1v
ch
nv
jv1t nt jt iv
iv
jv
jvit jt
ch
 
四、計畫成果自評 
 
1. 完成成果及創見 
如第三點中討論所述，已有結果與其他研究團隊共同投稿，上述的各種結果也應可另行撰寫出適合
期刊發表的論文。 
2. 是否有未完成的項目 
因為時間及人力有限，比較偏重 MCHS 問題，MHS 問題仍有待未來繼續更深入的研究探討。 
3. 研究內容與計畫相符程度 
基本上都相符。 
4. 是否適合期刊發表 
如第 1 點所述，本計畫之成果將寫成論文，以供未來進一步投稿發表。 
 
References 
[1] Chia-Chun Wang, Hub Set on the Rook’s, Bishop’s and Queen’s Graph, Master Thesis, Department of 
Information Management, National Taiwan University of Science and Technology, Taipei, Taiwan, 2012. 
[2] T. Grauman, S. G. Hartke, A. Jobson, B. Kinnersley, D. B. West, L. Wiglesworth, P. Worah, and H. Wu, 
The hub number of a graph, Information Processing Letters, 108 (2008), 226-228. 
[3] P. Hamburger, R. Vandell, and M. Walsh, Routing sets in the integer lattice, Discrete Applied Mathematics, 
155 (2007), 1384-1394. 
[4] P. Johnson, P. Slater, and M. Walsh, The Connected Hub Number and the Connected Domination Number, 
Networks, 58(3) (2011), 232-237. 
[5] Yin-Te Li, A Study of The Minimum Hub Set Problem on Some Classes of Graphs, Master Thesis, 
Department of Computer Science and Information Engineering, National Dong Hwa University, Hualien, 
Taiwan, 2011. 
[6] C-H Lin, J-J Liu, Y-L Wang, and William C-K Yen, The Hub Number of Sierpiński-Like Graphs, Theory 
of Computing Systems, 49(3) (2011), 588-600. 
[7] M. Walsh, The hub number of a graph, International Journal of Mathematics and Computer Science, 1 
(2006), 117-124. 
 第 7頁 共 7頁
 第 2頁 10頁
決定投稿發表。 
 
二、 與會心得 
我們的論文很順利地被接受。同時，本人也很榮幸受到主辦單位的邀請，擔任我們
論文發表場次的 session chair。實際參與後發現 ICCSA 2012 真是一個國際化程度相當優
良的學術會議，其所接受的論文來自世界各國，單以我們論文的 session 來看，除了我們
自己的論文之外，尚有來自馬來西亞、日本、印度等國的論文，而其他 sessions 的論文
還有來自泰國、澳洲、法國、伊朗、韓國等等，確實是國際交流的良好平台與機會。大
會所發表的論文中，有相當多均為實務相關的論文，我們的論文則為圖論演算法與計算
理論領域之研究成果，算是相當難得，這也讓我們的研究成果有機會與實務的論文互相
交流精進。 
基本上大會的整體安排與一般的國際學術會議相當，透過跟與會學者專家之互動，
更加擴展了我們研究思考的廣度及深度。此外，也順道參觀了馬來西亞當地數一數二的
馬來亞大學 (University of Malaya) ，對於其廣闊的校園及各具特色的系所建築留下了深
刻的印象。 
 
三、 結語 
 此次乃是本人第一次造訪馬來西亞的吉隆坡參加國際學術會議，對於吉隆坡有了初
步的認識，也體會到多民族國家不同的文化風情。此外，最大的心得乃是感受到世界各
國學者專家努力從事研究之企圖心及良好的成果，也認知到不只歐美先進國家致力於創
新研究，亞洲、非洲等世界各地也不遑多讓，這些將成為我們日後繼續從事研究的鞭策
力量。 
國科會補助專題研究計畫項下出席國際學術會議心得報告 
                                     日期：101年5月17日 
計畫編號 NSC 100－2221－E－128－004－ 
計畫名稱 圖上最小聚合中心問題新演算法之研究 
出國人員
姓名 張舜傑 
服務機構
及職稱 
國立台灣科技大學資訊管理學系 
博士班研究生 
會議時間 101 年 2 月 19 日至101 年 2 月 21 日 會議地點 馬來西亞吉隆坡 
會議名稱 ICCSA 2012 International Conference on Computer Science and 
Applications 
發表論文
題目  
2012 International Conference on Computer Science and Applications 
(The ICCSA 2012) 
一、參加會議經過 
「ICCSA 2012 : International Conference on Computer Science and Applications」為World 
Academy of Science, Engineering and Technology 所舉辦之年度國際學術研討會，
本次會議主題為「Applied Science, Engineering and Techology, Social and Human 
Sciences」，會議地點在馬來西亞的 Pacific Regency Hotel Suites 飯店舉行，會議
期間自2月19日至2月21日，為期共3天。  
 本人參加此次研討會主要目的為聽取碩士班指導教授顏重功老師發表之論文「The 
Weighted Minimun Tuple 2-Rainbow Domination on Graphs」，以及聽取和本人研究
領域相關之其他論文發表，同時藉此機會與國外學者專家進行交流並吸取研究經驗與相
關領域最新的研究趨勢。 
 
 第 4頁 10頁
(所發表的論文) 
The Weighted Minimum Tuple 2-Rainbow Domination on Graphs 
 
William Chung-Kung Yen, Jia-Jie Liu, and Chao-Cheng Shih 
Department of Information Management, Shih Hsin University, Taipei, Taiwan 
Corresponding Email: ckyen001@ms7.hinet.net 
 
 
Abstract—Let G(V, E) be a connected and undirected graph with n-vertex-set V and m-edge-set E. Each vertex v is associated with two 
positive weights, (v) and (v). If (v) = 1 and (v) = 1, for all v ∈ V, then G is called an unweighted graph. For each v ∈ V, let N(v) = {u 
| u ∈ V and (u, v) ∈ E} and N[v] = N(v) ∪ {v}. A tuple 2-rainbow domination function of G is a function f mapping each vertex v to a Boolean 
string f(v) = (v) (v), (v), (v) ∈ {0, 1}, such that 
1w
1f
2w 1w 2w
2f 1f 2f )(][ ufvNu∈Θ  = 11, for all v ∈ V, where )(][ ufvNu∈Θ  is the result of taking bit-wise 
OR operation on f(u), for all u ∈ N[v]. The weight of f is defined as w(f) = ∑∈ +Vv fvwvf ()()(( 211 vwv ))() 2 . The objective of our problem is to 
identify a tuple 2-rainbow domination function f of G such that w(f) is minimized. This paper first proves that the problem is NP-Hard on 
unweighted planar graphs. Then, an O(n)-time optimal algorithm for the problem on trees is proposed using the dynamic programming strategy. 
 
Keywords—(Tuple) k-rainbow domination functions, planar graphs, trees, NP-hard 
 
I. INTRODUCTION 
Domination and its variations on graphs are natural models for many location problems in Operations Research and related 
fields. They have been studied extensively in the literature [5], [6]. The k-rainbow domination is one of important variations which 
was introduced by BreŠar et. al. [1]. Let G(V, E) be a connected and undirected graph, where V and E are the vertex-set and the 
edge-set of G, respectively. For each v ∈ V, let N(v) = {u | u ∈ V and (u, v) ∈ E} and N[v] = N(v) ∪ {v}. Given a positive integer k, 
let h denote a function mapping each vertex v of G to a k-bit Boolean string h(v) = (v) (v) … (v), i.e., (v) ∈ {0, 1}, 1≤ i 
≤ k. Meanwhile, for any subset S of V,  denotes the result of taking bit-wise OR operation on h(u), for all u ∈ S. For 
convenience, we also use  to represent h(x) 
kh 1−kh 1h ih
)(uhSu∈Θ
)(},{ uhyxu∈Θ Θ  h(y). Denote  (respectively, ) as the k-bit Boolean string with 
exactly k 1s’ (respectively, k 0s’). The function h is called a k-rainbow domination function of G if  = , for all v ∈ V 
with h(v) = . The weight of a k-rainbow domination function h of G is defined as w(h) = 
)(1 k )(0 k
)(][ uhvNu∈Θ )(1 k
)(0 k ∑ ∑∈ =ki 1Vv i vh ))(( . The following states 
the formal definition of the Minimum k-Rainbow Domination problem. 
 
The Minimum k-Rainbow Domination problem (The MkRD problem) 
Input: A graph G(V, E) with n-vertex-set V and m-edge-set E. 
Output: A k-rainbow domination function h of G such that w(h) is minimized. 
 
In [1], the MkRD problem was originally studied and a linear-time algorithm on trees, for k = 2, was also proposed. Later, the 
authors in [2] proved that the MkRD problem is NP-Hard on chordal graphs and bipartite graphs, respectively, and proposed a 
linear-time algorithm on trees, for all k. Recently, an improved Nordhaus-Gaddum bounds for k-rainbow domatic number of a graph 
was derived [7]. 
In this paper, we consider a new variant of the MkRD problem. The motivation of this new problem comes from the following 
practical resource allocation model. Consider a network modeled as a graph G(V, E), where V represents the set of nodes and E is 
the set of direct links between node pairs. Two types of resources,  and , will be allocated at some nodes to serve requests 
from clients all over the network. For each node v, (v) and (v) denote the costs of allocating  and  at v, respectively. 
We require that the clients at each node v must be able to access both 1  and 2  from v and all neighboring node of v, i.e., every 
client must be able to access both resources via at most one direct transmission overhead. The objective is to minimize the total 
allocation cost over the entire network. 
1R
R
2R
R
1w 2w 1R 2R
Before defining our problem formally, let us introduce some terms and concepts. In the rest of this paper, each vertex v of all 
considered graphs G(V, E) is associated with two positive weights, (v) and (v). If (v) = 1 and (v) = 1, for all v ∈ V, 
then G is called an unweighted graph. Let f be a function mapping each vertex v of G to a 2-bit Boolean string f(v) = (v) (v), 
where 1 (v), 2 (v) ∈ {0, 1}. A vertex v of G is called a 00-vertex if f(v) = 00. 01-vertices, 10-vertices, and 11-vertices can be 
defined similarly. In addition, a vertex v of G is called 00-dominated if 
1w 2w
(] fv
1w 2w
2f 1f
f f
)[ uNu∈Θ  = 00. 01-dominated vertices, 10-dominated 
vertices, and 11-dominated vertices can also be defined similarly. Such a function f is called a tuple 2-rainbow domination function 
of G if every vertex v of G is an 11-dominated vertex. The weight of f is defined as w(f) = ∑∈V vwvvwvf ()(()(( 2211 + f)v )) . The issue 
as stated in previous paragraph leads us to study the following new problem. 
 第 6頁 10頁
The 0/1-Compoment Composition problem 
Input: A 2-bit binary string  and a set S = { , …, }, where  = (2c 1c 1s ps is iα , iβ , iγ , iδ ) is a vector of 4 positive numbers, 1 ≤ i 
≤ p. 
Output: A set Π = { 1π , …, pπ }, where each iπ  = ( , , , ) is a vector of 4 positive numbers, 1 ≤ i ≤ p, such that z = 
 is minimized subject to the following conditions, where g(i) = 00, if  = 1, g(i) = 01, if  = 1, g(i) 
= 10, if  = 1, and g(i) = 11, if  = 1, for each 1 ≤ i ≤ p. 
ix iy iu iv
∑= ++pi iiiiii vuyx1 )( γβα
iu
+ ii δ ix iy
iv
 
ix  +  +  +  = 1, 1 ≤ i ≤ p.               (1) iy iu iv
ix , , ,  ∈ {0, 1}, 1 ≤ i ≤ p.                (2) iy iu iv
)(1 igpi≤≤Θ  =                              (3) 2c 1c
 
From Eq. (1), we can see that one and only one of , , ,  must be 1, for all 1 ≤ i ≤ p. Hereafter, we say that an element ix iy iu iv
iα  (respectively, iβ , iγ , and iδ ) is selected if  = 1 (respectively,  = 1,  = 1, and  = 1). For the simplicity of our 
description, the selected elements in a feasible solution are denoted by  = {
ix iy
α
iu iv
S iα  |  = 1, 1 ≤ i ≤ p},  = {ix βS iβ  |  = 1, 1 ≤ i ≤ 
p},  = {
iy
γS iγ  |  = 1, 1 ≤ i ≤ p}, and  = {iu δS iδ  |  = 1, 1 ≤ i ≤ p} such that iv )(igpi≤1≤Θ  = 1 . We use ( , , , 
) to denote the corresponding value, i.e., z, of the feasible solution with , , , and . 
2c c 1 S2
ccλ α βS γS
δS αS βS γS δS
The 0/1-Component Composition problem can be solved by the dynamic programming technique as described in the following. 
Let  denote the minimum value of  = { , …, } and 12ddiλ iS 1s is )(1 jgij≤≤Θ  = . For each i > 1, we have 2d 1d
 
00
iλ  =  + 001−iλ iα  
01
iλ  = min{  + 001−iλ iβ ,  + 011−iλ iα ,  + 011−iλ iβ } 
10
iλ  = min{  + 001−iλ iγ ,  + 101−iλ iα ,  + 101−iλ iγ } 
11
iλ  = min{  + 001−iλ iδ , 
01
1−iλ  + iγ ,  + 011−iλ iδ , 
10
1−iλ  + iβ ,  + 101−iλ iδ , 
11
1−iλ  + iα ,  + 111−iλ iβ ,  + 111−iλ iγ ,  + 111−iλ iδ  
} 
The initial conditions are  = 001λ 1α ,  = 011λ 1β ,  = 1 , and  = . 101λ γ 111λ 1δ
 
Theorem 3. The 0/1-Component Composition problem can be solved in linear time. 
Proof. Since each value of , , , and , for all 1 ≤ i ≤ p, can be computed in constant time, this theorem holds directly. 00iλ 01iλ 10iλ 11iλ
 
 
Now, we will show how to solve the WMT2RD problem on trees. For convenience, we call equations for , , , and 
, for all i, as the 0/1-component equations. Given a tree T, we select an arbitrary vertex of V(T) as the root of T. We assume that 
the root of T is labeled with r. For any vertex u of T, let p(u) denote the parent of u and C(u) stand for the set of children of u. The 
subtree of T rooted at any vertex v is denoted by  and  also denotes the vertex-set of the subtree rooted at v if no confusions 
could occur. Meanwhile, for any tuple 2-rainbow domination function f of T,  denotes the restriction of f on , i.e., :  → 
{00, 01, 10, 11} such that (u) = f(u), for all u ∈ . The weight of  is defined as w( ) = . We 
say that  is semi-finished if every vertex u ∈  \ {v} is 11-dominated. Let α(v), β(v), γ(v), and δ(v) denote the weights of 
minimum-weighted semi-finished functions  in which v is a 00-vertex, 01-vertex, 10-vertex, and 11-vertex, respectively, for all 
. A semi-finished function  is called a 00-function (respectively, 01-function, 10-function, and 11-function) if v is 
00-dominated (respectively, 01-dominated, 10-dominated, and 11-dominated) in each . Let (v) denote the weight of any 
minimum-weighted semi-finished function  in which v is a -node and  is a -function, where , , ,  ∈ {0, 
1}. Note that (v) = ∞ since it is impossible that v is a 01-vertex but it is 00-dominated. Similarly, we have (v) = ∞, (v) = ∞, 
(v) = ∞, (v) = ∞, (v) = ∞, and (v) = ∞. The following propositions hold directly. 
00
iλ
vT
+ f)
2b
01
iλ
f
wu)(
1c
t
10
iλ
v vT
u))(
2c
00
10
11
iλ
vT
01
10t
vT
vT
vT
vT
vf
f
vf
01
vf vf
vT
2 1c
∑ ∈ vTu wuf ()(( 211
12
12
cc
bbt
b
10
01t
u
1
2
vf
vf
vf
vf
2b 1b v c
00
01t
00
11t 11t
10
11t
 
Proposition 4. Let f be a minimum-weighted tuple 2-rainbow domination function of a tree T and v be an internal vertex of T. The 
following statements are true. 
(i) If v is a 00-vertex, then uf  must be a 11-function, for all u ∈ C(v). 
 第 8頁 10頁
(ii) If v is a 01-vertex, then uf  can be a 10-function or 11-function, for all u ∈ C(v). 
 第 10頁 10頁
 
ACKONWLEDGEMENT 
This research was supported by National Science Council, Taiwan, under the contract numbers NSC 97-2221-E-128-002- and 
NSC 100-2221-E-128-003-. 
 
REFERENCES 
[1] B. BreŠar, M. A. Henning, and D. F. Rall, Rainbow Domination in Graphs, Taiwanese Journal of Mathematics 12 (1) (2008) 
213-225. 
[2] G. J. Chang, J. Wu, and X. Zhu, Rainbow Domination on Trees, Discrete Applied Mathematics 158 (2010) 8-12. 
[3] G. Chartrand and P. Zhang, Introduction to Graph Theory, McGraw-Hill International Edition 2005. 
[4] M. R. Garey and D. S. Johnson, Computers and Intractability: A Guide to the Theory of NP-Completeness, Bell Laboratories, 
Murray Hill, Freeman & Co., N. J., 1979. 
[5] T. W. Haynes, S. T. Hedetniemi, and P. J. Slater, Fundamentals of Domination in Graphs, Marcel Dekker, Inc., New York, Basel, 
Hong Kong, 1998. 
[6] T. W. Haynes, S. T. Hedetniemi, and P. J. Slater, Domination in Graphs: Advanced Topics, Marcel Dekker, Inc., New York, Basel, 
Hong Kong, 1998. 
[7] D. Meierling, S. M. Sheikholeslami, and L. Volkmann, Nordhaus-Gaddum Bounds on the k-Rainbow Domatic Number of a 
Graph, Applied Mathematics Letters 24 (2011) 1758-1761. 
 
100年度專題研究計畫研究成果彙整表 
計畫主持人：顏重功 計畫編號：100-2221-E-128-004- 
計畫名稱：圖上最小聚合中心問題新演算法之研究 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
