1 
 
中文摘要 
生產排程(production scheduling)對於內部作業控管與顧客服務品質有深遠的影響，良好的
排程規劃不僅可以提高設施的利用率，引導有限資源做更妥善的分配，進而降低庫存，增進
準時達交。零工式生產系統(job shop)為基本的生產型態之一，其排程作業的複雜度相當高。
在面對競爭激烈的製造環境，為能降低成本、有效利用產能(capacity)，縮短工期實有其必要
性。本研究針對批量分割(lot-splitting)之零工式生產排程問題，考量設置時間與排序獨立的情
形，決定最佳的作業排序，以期滿足最小化總製程時間(makespan)、延遲成本(tardiness)，以
及搬運成本的多重目標。求解方法在最佳化解法(exact solution)部分，首先將建立整數規劃
(Integer Programming)模型，對於一般規模的問題，能夠以套裝軟體 LINGO 取得最佳解。因
為研究問題本質為 NP-hard，所以問題規模擴大，最佳化解法將很難在合理的時間內求解，縱
使取得最佳解也不具有時效性。因此，本研究將改良傳統的蟻群演算程序，建構二費洛蒙蟻
群系統(two pheromone ant colony system)，以及計步式蟻群系統(step-counter ant colony 
system)，可以在短時間內，求得優異的近似最佳解。資料測試工作針對這兩種改良式演算法，
探討其有效性(effectiveness)與健全度(robustness)，並且對實驗現象提出相關解釋，進而作成
結論與建議供後續研究與實務應用參考。 
關鍵字：零工式、整數規劃、批量分割、二費洛蒙蟻群系統、計步式蟻群系統 
Abstract 
Manufacturing scheduling significantly influences internal control and customer service. A 
well-designed schedule improves facility utilization, distributes limited resources more effectively, 
reduces excess inventory and increases the chances of timely delivery. Job shop production system 
is a fundamental and complex production environment. The manufacturing system reduces the costs 
associated with higher capacity utilization, and is crucial to compete in a highly dynamic market. 
This study attempts to solve a job shop scheduling problem involving lot-splitting and setup time. 
The schedule is measured using total weighted makespan, tardiness and carrying cost. The problem 
is first solved using the integer programming model, which provides an exact solution to facilitate 
comparison of effectiveness. Second, due to the inefficiency of the integer programming model in 
solving large-scale problems, two improved ant colony optimization algorithms, two-pheromone ant 
colony system and step-counter ant colony system, developed in this study, are applied to rapidly 
obtain near-optimal solutions. Data test results demonstrate the superiority of these two novel 
algorithms in terms of effectiveness and robustness, as well as their unique characteristics. Finally, 
conclusion and suggestions are presented for future studies and applications.  
Keywords: job shop, integer programming, lot-splitting, two-pheromone ant colony system, 
step-counter ant colony system  
 
1. Introduction 
In a highly dynamic environment, firms prefer job shop manufacturing owing to its higher 
flexibility. Job shop production system considers numerous factors, including processing order, 
setup time, processing time, lot-splitting, resource consumption and due date. Good production 
scheduling properly utilizes machine capacity and resource, thus reducing costs associated with 
inefficiencies, improving the chance of timely delivery, enhancing customer satisfaction and 
increasing firm competitiveness.  
Most previous studies consider lot-splitting. Overlapping production splits operations into 
3 
 
optimization (2ph-ACO) to solve the problem. The effectiveness and robustness of the two 
proposed algorithms is compared with the original ACO. In small-scale problem testing where an 
integer programming (IP) solution can be obtained reasonably fast, the effectiveness and robustness 
of two proposed algorithms is compared with the original ACO and IP. In large-scale problem 
testing, only robustness tests are conducted since the IP solution is unavailable. Additionally, 
preliminary tests demonstrate good effectiveness compared to the original ACO.    
 
2. Problem definition and mathematical problem 
2.1 Definition 
The job shop problem discussed in this study can be described via three-field representation, as 
follows. 
1 max 2 3
1 1
,
n n
m jk j j j
j j
J S d w C w T w u Bλ
= =
× + + × × ×∑ ∑                           (1) 
This study focuses on a job shop problem involving lot-splitting. mJ  represents m machines 
in a job shop production environment. The goal is to identify the optimal schedule for these 
machines to complete processing n jobs. Each job comprises m operations, and complies with 
different precedence constraints. jks  denotes the setup time when machine k processes j. Moreover, 
maxC  represents the makespan of the schedule. 
1
n
j
j
T
=
∑  is the total tardiness of the schedule. ju  is 
the number of operations involved in job j. Furthermore, B is the number of sublots involved in an 
operation. In this study, all operations are split into B identical sublots. No lot-splitting is performed 
if 1B = . On completion of the first lot of operation x, the first lot of operation x+1 is ready for 
processing. λ is the carrying cost of lot-splitting.. 
2.2 Notations 
n Total amount of jobs bjkST  Starting time of bjkJ  
m Total amount of machines pik Processing time of jkJ  
uj Amount of operations of job j bjkP  Process time of bjkJ , bjkP = jk
p
B
 
B Amount of sublots of any operations Fj Finish time of Jj 
j Number of job , 1,  2,  ...,  j j n=  Fik Finishi time of jkJ  
i Operation processing order 1,  2,  ...,  ji u=  
Fjik Finish time of jikJ  
k Number of machine , 1,  2,  ...,  k k m=  bjikF  Finish time of 
b
jikJ  
b Number of batch , 1,  2,  ...,  b b B=  maxC  Makespan of the schedule 
Jj Job of number j 1w  Cost coefficient of makespan 
Jik 
Job of number j processed on 
machine of number k 2w  Cost coefficient of total tardiness 
Jjik 
Operation of number i from job of 
number j processed on machine of 
number k 
3w  Cost coefficient of carrying cost 
b
jikJ  
Batch of number b in operation of 
number i from job of number j 
processed on machine of number k 
λ  Carrying cost of lot-splitting 
dj Due date of Jj M A very large natural number 
sjk Setup time of jkJ  X cdk Decision variable of process sequence 
2.3 Mathematical model 
This section provides an integer programming (IP) model for the manufacturing scheduling 
5 
 
1,  if   is processed prior to 
0,  otherwise
ck dk
cdk
J J
X

= 

, 1,2,...,  ;  1, 2,...,  ;  c n d n c d= = ≠ ; 1,2,...,k m=  (14) 
To correctly establish a schedule, the orders of jobs must be given. Eqn. (14) decides the processing 
sequence of job c and job d on machine k. If job c is processed prior to job d, 1cdkX = ; else 
0cdkX = .     
2.3.2.6 Boundaries of variables: 
+0,    0,     I    bjik jkp s B≥ ≥ ∈     (15) 
The boundaries prevent the model from obtaining infeasible solutions. Eqn. (15) declares the 
boundaries of processing time and setup time of all batches are greater than or equal to 0; Number 
of batch split is a positive integral.  
 
3. Two-pheromone and step-counter ACO procedure 
3.1 ACO procedure 
Ant colony optimization (ACO) is derived from the ant system (AS) introduced by Dorigo 
(1992). Dorigo et al. (1996) applied AS to solve the traveling salesman problem, quadratic 
assignment problem and scheduling problem. Subsequently, Dorigo and Gambardella (1997) 
improved AS to create ant colony system (ACS). Finally, Dorigo and Di Caro (1999) combined the 
properties of AS and ACS and developed ant colony optimization (ACO).  
ACO simulates the behavior of ants searching for food. Each ant uses exploitation and 
exploration for route selection. The state transition rule is used to balance exploitation and 
exploration behaviors.  
3.2 Two-pheromone ACO procedure 
In nature, ants can release at least five different types of pheromone. These pheromones assist 
communication, cooperation, attack, colonization and other vital missions (Hölldobler and Wilson, 
1998). The thought of ants having multiple types of pheromones inspired the researchers to develop 
a two-pheromone ant colony optimization (2ph-ACO). The idea is to provide more information to 
artificial ants and to improve solution quality.    
Blum and Samples (2002) presented a first order parallel shop scheduling (FOPSSP) problem. 
The problem combined elements of job shop, open shop and mixed shop problems. The researchers 
then proposed a new type of pheromone to solve the problem. Comparison results demonstrated that 
new types of pheromone are better. This study confirms the potential to improve ACO by 
developing more efficient types of pheromone.  
( )
( ) ( ) ( )
( ) ( ) ( )
( )
( ), , , ,
, , , ,
0,
k
k
k
u J r
r s r s r s
s J r
P r s r s r s r s
otherwise
α β γ
α β γ
τ η ε
τ η ε
∈
      ⋅ +      ∈
=      ⋅ +      


∑        (21) 
Eqn. (21) is the state transition rule in 2ph-ACO for the specific job shop problem.  
3.3 Step-counter ACO procedure 
Emanuel et al. (2007) referred to Wittlinger et al. (2006) and introduced the parameter of steps 
counter (SC) into AS. In the literature, SC denotes the starting time of each operation. SC is applied 
in greedy heuristic function ( ),r uη . This study uses the concept introduced in Emanuel, Efr´en, 
and Carlos (2007), integrates SC into the state transition rule, and develops step-counter ant colony 
optimization (SC-ACO). The new greedy heuristic function is given in Eqn. (26). Q denotes a 
positive integral. jkST represents the starting time of job j on machine k. jkp  is the processing time 
of job j on machine k.  
7 
 
The effectiveness test primarily shows the performance of the proposed algorithms compared 
to the original ACO. The improvement rates of the two proposed algorithms exceed 40% to 60%, 
meaning the proposed algorithms can obtain solutions 40% to 60% close to the optimal solutions 
than the original ACO. Regarding computational time, clearly both algorithms are much faster than 
the integral programming model. While 2ph-ACO has slightly longer CPU time than SC-ACO, the 
CPU times are all closely contested within less than 1 second. 
4.3 Small-scale robustness analysis 
In each problem, lot-splitting by two batches yields the best result. The result varies according 
to weights and splitting costs. Lot-splitting reduces makespan and tardiness, at the cost of increased 
splitting costs. The result is consistent with the result of Huang (2009). First, SC-ACO tends to be 
more consistent than 2ph-ACO, with smaller average solutions (Avg.) and standard deviation (Std.). 
However, 2ph-ACO mostly exceeds SC-ACO in best solutions, at the cost of being less consistent. 
Regardless, both SC-ACO and 2ph-ACO are highly consistent, OR based on proximity to the 
optimal solutions and small standard deviations. 
4.4 Large-scale robustness analysis 
As the IP solutions are unobtainable within a reasonable computational time in large-scale 
problems, the effectiveness test is not performed on large-scale problems. Still, preliminary tests 
demonstrate that the two proposed algorithms are highly effective and have strong potential to solve 
large-scale problems. The problem scales amplify the unique characteristics of the two proposed 
algorithms. As the scale grows, SC-ACO emerges as a more stable algorithm that mostly obtains 
more concentrated solutions. In contrast, 2ph-ACO outperforms SC-ACO in terms of the number of 
best solutions found, but suffers the weakness of larger standard deviations. Both SC-ACO and 
2ph-ACO obtain excellent results. Which of these two proposed algorithms is better is 
undetermined. When using these two proposed algorithms, pre-tests are recommended to identify 
which algorithm is better suited for a specific situation.   
 
5. Conclusion 
The study focuses on solving the lot-splitting problem in a job shop environment. The 
objective is to minimize weighted makespan, tardiness and carrying cost. To solve the problem, this 
study developed two novel algorithms, SC-ACO and 2ph-ACO, both of which derive from the 
behavior of natural ants. This study conducts effectiveness and robustness tests on small-scale 
problems, and yields extraordinary results compared to the original ACO. The solutions obtained 
using the two proposed algorithms closely approximate IP solutions, but involve much less CPU 
time. This study only tests the robustness of large-scale problems owing to the prolonged time 
required to obtain IP solutions. SC-ACO and 2ph-ACO possess some distinctive characteristics. In 
the particular job shop problem dealt with in this study, SC-ACO is more stable in terms of average 
solution and standard deviations, while 2ph-ACO generally identifies superior best solutions to 
SC-ACO when applied to the same problem. This difference makes these two algorithms suitable 
for different situations and needs. Users thus are advised to perform pre-tests to identify which of 
these two algorithms is better. In future studies, researchers can combine the greedy heuristic of 
SC-ACO and state transition rule of 2ph-ACO to create a more efficient algorithm.  
 
Reference 
Bai, J. J., Gong, Y. G., Wang, N. S. and Tang, D. B. (2009). An improved PSO algorithm for flexible 
job shop scheduling with lot-splitting, Intelligent Systems and Applications, International 
Workshop V.23(24), 1-5. 
9 
 
國科會補助專題研究計畫成果報告自評表 
請就研究內容與原計畫相符程度、達成預期目標情況、研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）、是否適
合在學術期刊發表或申請專利、主要發現或其他有關價值等，作一綜合評估。 
1. 請就研究內容與原計畫相符程度、達成預期目標情況作一綜合評估 
▓達成目標 
□ 未達成目標（請說明，以 100 字為限） 
□ 實驗失敗 
□ 因故實驗中斷 
□ 其他原因 
說明： 
2. 研究成果在學術期刊發表或申請專利等情形： 
論文：□已發表 □未發表之文稿 ▓撰寫中 □無 
專利：□已獲得 □申請中 ▓無 
技轉：□已技轉 □洽談中 ▓無 
其他：（以 100 字為限） 
3. 請依學術成就、技術創新、社會影響等方面，評估研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）（以
500 字為限） 
零工式生產系統(job shop)為基本的生產型態之一，其排程作業的複雜度相當高。在面對
競爭激烈的製造環境，為能降低成本、有效利用產能(capacity)，縮短工期實有其必要性。本
研究將針對批量分割(lot-splitting)之零工式生產排程問題，考量設置時間與排序獨立的情形，
決定最佳的作業排序，以期滿足最小化總製程時間(makespan)、延遲成本(tardiness)，以及搬
運成本的多重目標。如此複雜的生產議題必須配合有效的排程規劃，才能發揮整體的系統功
能與效益。 
求解方法在最佳化解法(exact solution)部分，建立整數規劃模型，對於一般規模的
問題，能夠以套裝軟體 Lingo 取得最佳解。因為研究問題本質為 NP-hard，所以問題規
模擴大，最佳化解法將很難在合理的時間內求解，縱使取得最佳解也不具有時效性。
因此，本研究將改良傳統蟻群系統，建構二費洛蒙蟻群系統與計步式蟻群系統，期以
在短時間內，求得優異的近似最佳解，資料測試工作亦將對此啟發式(meta-heuristic)
解之有效性與穩定性(robust)，進行完整的測試與探討。在經過小規模問題與大規模問
題測試後，結果顯示二費洛蒙蟻群演算法、計步式蟻群演算法相對蟻群演算法在有效
性改善率在各種問題規模之下為 40%~60%，顯示二費洛蒙蟻群演算法與計步式蟻群演
算法對於本研究問題之求解能力，較蟻群演算法優異的。此一改善在演算法設計具有
其學術意義，在實務應用上也頗有參考價值。 
 
1 
 
 
 
國科會補助專題研究計畫項下出席國際學術會議心得報告 
                              日期： 100 年 9 月 15 日 
 
一、參加會議經過 
二、與會心得 
三、考察參觀活動(無是項活動者略) 
四、建議 
五、攜回資料名稱及內容 
六、其他 
IEEM (International Conference on Industrial Engineering and Engineering Management) 
為 IEEE 所舉辦之 2010 年學術研討會之一。IEEE 為知名且具影響力之學術機構，所發
行之多項期刊均具有 SCI 等級。此次研討會為 IEEE 每年舉辦一次之重要例行年會，年
會中共收集來自世界各國有關技術與研發管理的相關論文，而本年會之論文集也被列
為 EI 等級之期刊，在學術研究上有其重要性。許多來自世界各地的學術界或實務界人
士共同參與，研討會舉辦相當成功，對學術研究與實務應用具有一定的影響與貢獻，
同時也為眾多研究者提供很好的訊息交換平台。 
我們在會議中，共發表三篇論文： 
1. Huang, Rong-Hwa and Yu, Tung-Han, "An Effective Heuristic Considering Machine 
Flexibility for Parallel Machine with Eligibility Problem," 2010 IEEE International 
Conference on Industrial Engineering and Engineering Management (IEEM), 2010. 12. 
7~10, pp. 1363-1366. 
計畫編號 NSC 99－2221－E－030－015 
計畫名稱 多目標批量分割之零工式生產排程研究 
出國人員
姓名 黃榮華 
服務機構
及職稱 輔仁大學 企業管理學系 教授 
會議時間 99 年 12 月 7 日至 99 年 12 月 10 日 會議地點 
澳門  
Macau 
會議名稱 
(中文) 
(英文)2010 IEEE International Conference on Industrial Engineering and 
Engineering Management (IEEM) 
發表論文
題目 
(中文)考慮機械彈性之平行機排程問題 
(英文)An Effective Heuristic Considering Machine Flexibility for Parallel 
Machine with Eligibility Problem 
附件四 
國科會補助計畫衍生研發成果推廣資料表
日期:2011/08/27
國科會補助計畫
計畫名稱: 多目標批量分割之零工式生產排程研究
計畫主持人: 黃榮華
計畫編號: 99-2221-E-030-015- 學門領域: 生產系統規劃與管制
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
無 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
