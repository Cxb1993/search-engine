Besides, the prototypes of job migration and load 
balancing mechanisms were developed. This sub-project 
has implemented the middleware prototype of the 
light-weighted P2P grid platform and the basic 
functional modules to gather sites’ information and 
to utilize grid resources by balancing load. The 
prototype includes a) the distributed grid resource 
monitoring/querying mechanisms, b) the multiple-
channel, multiple-point P2P parallel transferring 
mechanism with the function of partial file transfer, 
c) the dynamic job migration mechanism by managing 
the Condor queue, and d) the prototype of the load 
balancing mechanism. 
In the second-year’s schedule of this sub-project, 
we developed the light-weighted P2P grid platform 
based on the first-year’s achievement of this sub-
project. The achievements of the second-year’s 
schedule of this sub-project include a) the partial 
completion of standardized APIs, b) the multi-
attribute range query mechanism on the multi-
attribute multi-ring structured overlay, c) the job 
migration mechanism on the Condor and the performance 
improvement of the job migration mechanism, d) the 
completion of the distributed dynamic load balancing 
mechanism, and e) a dynamic adaptive load balancing 
approach according to the performance prediction 
method for selecting nodes in improving the resource 
utilization and the load balance of the P2P grid. 
The last-year sub-project has developed the standard 
APIs for other sub-projects to build a Service-
Oriented-Architecture-based P2P grid system. The 
achievements of this sub-project include a) a semi-
structured, multi-attribute, multi-star P2P 
architecture for improving the efficiency of resource 
discovering, b) a neighbor-aware load balance 
strategy, c) a replica-based fault-tolerance 
mechanism, and d) the integration of SOA with the P2P 
Grid system to achieve the standard communication 
protocol among different services. 
英文關鍵詞： Grid computing, P2P, SOA, resource management, Data 
Grid 
目錄 
中文摘要................................................................................................................................. 1 
英文摘要................................................................................................................................. 3 
一、前言................................................................................................................................. 5 
二、研究目的......................................................................................................................... 6 
三、文獻探討......................................................................................................................... 9 
四、研究方法與成果........................................................................................................... 11 
五、結果與討論................................................................................................................... 19 
六、參考文獻....................................................................................................................... 27 
七、計畫成果自評............................................................................................................... 29 
 2
Architecture，SOA)導入 P2P 格網系統，將 P2P 格網系統中各成員所提供的功能及資源
以服務導向架構實現，使 P2P 格網系統所提供之服務彼此間可以透過標準協定進行溝
通與整合。 
 
 
關鍵詞：格網計算、點對點技術、服務導向架構、資源管理、資料格網 
 4
the second-year’s schedule of this sub-project include a) the partial completion of 
standardized APIs, b) the multi-attribute range query mechanism on the multi-attribute 
multi-ring structured overlay, c) the job migration mechanism on the Condor and the 
performance improvement of the job migration mechanism, d) the completion of the 
distributed dynamic load balancing mechanism, and e) a dynamic adaptive load balancing 
approach according to the performance prediction method for selecting nodes in improving 
the resource utilization and the load balance of the P2P grid. 
The last-year sub-project has developed the standard APIs for other sub-projects to build 
a Service-Oriented-Architecture-based P2P grid system. The achievements of this sub-project 
include a) a semi-structured, multi-attribute, multi-star P2P architecture for improving the 
efficiency of resource discovering, b) a neighbor-aware load balance strategy, c) a 
replica-based fault-tolerance mechanism, and d) the integration of SOA with the P2P Grid 
system to achieve the standard communication protocol among different services. 
The achievements of this sub-project have been implemented in the computing site of 
the Taiwan UniGrid and the system performance has also been evaluated. The experimental 
results show that the proposed dynamic adaptive load balancing approach could efficiently 
improve the resource utilization and shorten the job completion time. In the meanwhile, we 
adopt the OverSim to simulate the performance of our proposed semi-structured overlay. The 
experimental results show that the proposed overlay could improve the performance of 
resource searching. Therefore, this sub-project conforms to the schedule of the original 
proposed plan. 
 
Keywords：Grid computing, P2P, SOA, resource management, Data Grid 
 6
二、研究目的 
格網及 P2P 為兩個極為相似的分散式系統，兩者皆透過電腦社群，管理跨組織的
動態資源，以達到資源共享之目標。格網計算透過架構開放性標準提供共通性的整合界
面，以達到各個格網系統可以相互整合與溝通。然而隨著格網系統規模的擴大，對於自
我配置、容錯和延展性等議題也產生一些亟待解決的問題。反觀，P2P  系統針對自我
配置、容錯和延展性等議題提供了不錯的解決方案。然而，P2P 系統的開發主要著重於
垂直整合的應用，而非制定通用協定與標準化架構。因此整合格網運算及 P2P 技術將
可以建置高效能的分散式運算系統，整合跨越不同組織的計算資源以便提供大量計算的
需求。在 P2P 格網運算環境中計算資源可能隨時加入或離開，因此計算資源及網路頻
寬常常處於變動的情況。另外，針對較佳計算能力的資源而言，工作也會優先分配到該
計算資源處理，而忽略執行效能較低的計算資源，因而造成資源閒置及負載分配不平均
的結果。因此在 P2P 格網系統中一項重要的挑戰就是如何進行分散式運算資源的負載
平衡。為解決上述議題，本子計畫研究主軸以格網運算資源的整合為目標；利用 P2P
技術整合算資源，並建立輕量化的格網中介軟體系統，進行工作轉移及計算資源分享，
藉此提高閒置資源之使用。 
目前格網系統主要採用之中介軟體大多為 Globus Toolkit。本子計畫則以 P2P 技術
開發相對應之功能模組，提供輕量化的格網中介軟體系統。透過這些功能模組整合格網
系統中各運算資源，並進行工作轉移，提升資源使用率及平衡資源負載。因此本計畫第
一年之進度為利用 JXTA 完成 P2P 網格平台之雛型，並建置格網資源資訊服務系統雛
型，P2P平行資料傳輸機制、工作轉移機制雛形及負載平衡策略之探討。分散式資源的
狀態透過 P2P 的技術收集資源的訊息，工作轉移機制採用 P2P 的技術改善閒置計算資
源的使用率，而分散式負載平衡策略則可根據系統效能動態地調整工作負載。 
本子計畫第二年之執行目標為資源搜尋、分配及管理機制之改善。此本子計畫於第
二年度著重於資源搜尋、分配及管理機制效能的提升。利用 P2P overlay改善資源搜尋
效率一直是相關研究的研究重點。目前資源搜尋策略可分為非結構化與結構化兩種。非
 8
好的資源管理，系統需先具備可靠的資源監控及有效的資源搜尋機制。傳統的格網系統
只需管理單一 site，資源的管理及搜尋十分容易。但由於 P2P格網系統透過 P2P方式整
合跨組織 VO之格網資源，而 P2P網路中節點頻繁的加入及離開，使得節點之間的連結
不斷變動，造成資源監控與搜尋上的困難。因此本子計畫藉由建立 P2P overlay，管理節
點之間連結的方式，以及在 P2P overlay透過訊息繞送的方式，快速地找出所需的資源。
在過去的研究中，P2P overlay大致可分為結構化及非結構化 P2P overlay兩類，結構化
P2P overlay能提供有效率的關鍵字搜尋機制，但有系統延展性不佳及 overlay維護成本
較高等問題。非結構化 P2P overlay提供靈活的搜尋機制，系統延展性較佳，但在繞送
訊息時容易造成網路頻寬的浪費。因此本子計畫結合兩者的優點，建立半結構化、多屬
性、多重星狀結構 P2P overlay，不但提供靈活且有效率的資源搜尋機制，還能保留系統
延展性及容錯能力。 
資源管理的另一項要點是資源分配，如何最大化整體系統資源使用率，以縮短工作
時間，因此建立良好的負載平衡策略便十分重要。本子計畫為配合 P2P 格網系統中動
態的 P2P環境，提出了以鄰居為基礎的動態負載平衡策略，在鄰居中挑還最適合的 site
進行工作轉移，達到區域性的負載平衡，並藉由鄰居的改變，原本區域性的負載平衡便
能逐漸達到整體性的負載平衡，因此即使是跨組織 VO的格網資源，也能透過此負載平
衡策略，有效提升整體資源使用率。 
最後，良好的資源管理還需有強健的容錯能力，由於結合了跨組織 VO 的格網資
源，系統整體機器數量將十分龐大，機器發生故障的機率也相對提升，若系統沒有提供
容錯機制，則許多工作會因機器故障而失敗。因此本子計畫也提出了以副本為基礎的容
錯機制，配合負載平衡策略選擇適合的備援 site放置工作副本，當機器發生故障時，備
援 site便可啟動工作副本，避免因機器故障所造成的工作失敗。 
 
 
 10
peer 數量與所有節點的比率會影響系統效能。Zhang 等人[19]提出一個 assisted P2P 
overlay，節點同時參與結構化 index overlay與非結構化 search overlay，index overlay與
search overlay分別記錄普遍與不普遍的屬性，雖然此方法減少 index overlay中維持不普
遍資料的花費，但在搜尋延遲與頻寬負載也隨之上升。 
P2P 應用的範圍很廣，例如目前熱門的雲端運算也能結合 P2P 技術以提升系統效
能。Chen等人[27]提出一個 P2P-assisted cloud provisioning system，使用 BitTorrent-like 
P2P protocol加速傳遞映像檔到大量的目標機器上。透過 P2P-assisted cloud provisioning 
system，運算資源能動態地被提供與共享，因此降低了延展時的花費與 IT 的複雜度。
Liu [4]等人提出 semantic cloud，利用 Similarity Link Network (SLN)和 Association Link 
Network (ALN)，建立 small-world semantic P2P network協調不同功能的資源，並產生個
人化的資源流給使用者。因此，雲端運算可以透過 semantic cloud來整合資源以滿足使
用者的需求。 
格網系統是透過中介軟體整合分散的資源而形成的巨大虛擬機器，例如 Globus 
Toolkits[6]、 UNICORE 等等都是現存的中介軟體，而本子計畫所選擇的系統平台
Unigrid[24]則採用了 Globus Toolkits。利用 P2P架構建置於格網系統中則整合了 P2P架
構以及格網系統。透過 P2P 方式提昇格網系統中的資訊交換效能並且降低資訊的傳輸
量，而負載平衡是提升分散式系統效能的一種方式，負載平衡策略包含了多個目的，例
如提升資源使用、降低工作時間或是提高產能等等。而負載平衡策略可根據分配以及判
斷的方式分為動態及靜態或是集中式及分散式，而動態的方式是根據系統實際執行時不
同的狀況給予最適合的判斷，但是判斷的複雜度會高過靜態的方式，如參考文獻[14]、
[16]、[17]、[25]、[28]。靜態的方式是在系統執行前所取得的資訊給予適合的判斷，但
是相對來說無法根據實際執行時的情形得到最佳的判斷；但是相對來說靜態的方式的實
作遠低於動態的方式，如參考文獻[26]。至於集中式的負載平衡方法需要全域資訊，但
中央的節點會變成整各系統的瓶頸。分散式的負載平衡方法透過部分資訊更新，可以有
效的減少蒐集的資訊量，是較符合格網環境的方法。本子計畫專注於動態負載平衡的研
 12
作。啟動 JXTA 後，便啟用節點服務，並賦予節點一個獨一無二的 PeerID，並同時註
冊 PeerName。群組(PeerGroup)的服務則提供每個節點皆能建立群組、加入群組以及離
開群組。本子計畫將 JXTA 安裝於每個參與機器上，透過 PeerGroup 提供同個節點屬
於一個以上的群組服務。透過各個 VO 自我群組方式，限制訊息傳遞侷限於群組中或
跨越群組的端點間，以減輕網路通訊負擔，避免資源浪費，也保留原本 VO 的識別及
特性。本子計劃利用 JXTA 服務中之 Rendevouses Protocol 提供 Super peer 功能，同
時利用 JXTA 所提供之指令，建置有效且安全的檔案與訊息傳輸方式。於建立 Peer 同
時，以 Peer Name 登入帳號機制，並藉由 Peer Name 進行 Peer 間的溝通管道。本系
統透過 Superpeer，建立兩階層系統結構。當格網系統使用內部資源時，僅透過現有格
網架構存取內部資源；當需要探索外部可用資源時，則可透過兩階層系統結構，經由 
Super peer 與其他 Super peer進行溝通，進行資源探索，尋找外部資源。為降低 Globus 
Toolkit 複雜度、減少訊息傳遞延遲及縮短工作在佇列中等待時間以達到系統輕量化之
目標。本計畫開發可取代部份 Globus Toolkit 功能的元件，包括 Information Service，
Execution Management，Data Management，並利用 JVM 達成跨平台之設計，其中安全
認證部分仍延用 Globus Toolkit 之 security 架構，以提高系統安全性，並維持計算資
源的 QoS。 
在 P2P 平行傳輸機制方面，本子計畫利用 JXTA 建立分散式非主從傳輸架構，避
開集中式伺服器的介入，達到跨 VO 訊息傳遞及資料傳輸、多通道多端點並行傳輸、
支援分塊及部分資料傳輸，並將於下一階段完成第三方控制資料傳輸功能。本子計畫所
開發之 P2P 平行傳輸機制亦可依各節點間之網路頻寬及 QoS 需求，進行不同頻寬分
配及不同檔案傳輸量之傳輸。本系統亦包含格網資源資訊服務系統，允許使用者探索 
VO 中的資源並且監看系統狀態，包含 CPU、memory、硬碟利用率、I/O 負載、網路
流量情況、正在執行中的工作與等待的工作數量等。上述資訊分為廣域資源蒐集(VO 間)
及在 Local 端的資源蒐集。本子計畫以 P2P  技術達到跨 VO 的資源蒐集。Information 
Discovery 則提供了一個 decentralized 的資訊搜尋服務，所蒐集的資源內容包括 CPU 
 14
本子計畫中，如圖二所示每個 Group 視為一個 Site，Site 中以 Super peer 與其他 
Site 進行溝通。若 Site 中有節點要廣播訊息，則會先將訊息傳到 Site 的 Super peer，
再由 Super peer 將訊息廣播到其他 Site 的 Super peer，再將訊息傳送到各 Site 裡的
所有節點。至於一對一的傳遞訊息方式，我們以加入 JXTA 環境時節點所註冊的 
PeerName 來當做依據，JXTA 會對應兩個節點的 PeerID，產生兩個節點間的通道，藉
此傳遞訊息。節點的 PeerName 與 PeerID，會由各 Site 的 Super peer 紀錄與更新，
各 Site 的 Super peer 也可以透過彼此的溝通更新紀錄。基於這兩種訊息傳遞的方式，
我們開發出詢問的訊息格式，當節點送出訊息後，接收端可以透過判別的機制，以了解
詢問訊息的目的，並作出回應。 
 
圖二、P2P訊息傳遞架構 
 
為達到負載平衡目標，本子計畫於第一年採用 Sender-initiated 策略，並提供兩種
負載平衡策略：第一種僅考量 CPU 負載狀況，第二種考量格網異質性等因素，包括通
訊頻寬及工作執行能力。本子計畫亦以 JXTA  透過 APIs 直接存取 Condor 佇列資
訊，以得知目前 Site 執行工作的情況並以Web Site 瀏覽方式方便監看各 Site 及所有
節點的狀態。本子計畫以 P2P 架構 Site間的資源調配，存取 Condor 佇列中工作狀態，
 16
 
圖四、結構化多屬性、多層環 overlay於 OverSim上的模擬圖 
 
此外為達到分散式動態負載平衡機制，本子計畫利用分散式結構讓各個節點獨立判
斷負載平衡狀況，以因應動態資源配置。每個 site內之 super peer 負責工作排程及資源
配置，general peer 則負責執行運算，工作可由 super peer 接收，然後自行判斷最佳執
行地點。因此，此機制包含四個步驟：收集資訊、啟動判斷、選擇最佳執行節點以及轉
移工作。資訊的收集透過前一年度所建置之資源監控系統收集。每個 super peer 負責
本地群組中各個節點的資訊。接著啟動判斷機制判斷是否需進行負載平衡。當發現工作
需要進行轉移時，選擇適當的執行節點，然後轉移工作，並利用 5個評估程式(包含 
f77split、fd_predator_prey、fd1d_heat_explicit、satisfiability 及 linpack_bench)進行效能
評估。 
本子計畫在第三年為達到整合跨組織 VO之格網資源，延續前兩年的研究成果，開
發了以鄰居為基礎的負載平衡策略，透過 P2P 的自發式動態更新鄰居，並與鄰居共享
格網資源，同時達到負載平衡及縮短工作執行時間之功效。本子計畫建立多組格網 site
以模擬跨組織 VO的格網資源，每組格網 site內由一台 super peer及多台 general peer
 18
還能有效地縮短總工作時間。 
圖六為總計畫之資源管理系統架構圖，本子計畫在此系統中負責 Matchmaker，
Matchmaker主要功能為接收由 Request Manager送來的資源需求，並回傳符合需求的資
源。Matchmaker 包含兩個元件： Information Service 與  Matchmaking Service。在
Information Service部份，本子計畫透過 P2P方式，並結合 neighbor-aware架構，動態
收集資源提供者的靜態屬性，不因某些資源的故障而降低整體系統效能，且每組 site只
需與鄰居 site交換資訊，大量減少網路中訊息的傳遞量。在 Matchmaking Service部份
採用Web Service的方式接收 Request Manager的資源需求及回傳搜尋結果。並透過本子
計畫所提出的半結構化、多屬性、多重星狀結構 P2P overlay，達到快速且有效率的資源
搜尋。 
 
 
圖六、資源管理系統架構圖 
 
 20
確保所有的工作都能被完成。由實驗結果顯示，多屬性多重星狀的半結構 P2P overlay
確實能提供靈活且有效率的搜尋功能；而以鄰居為基礎的動態負載平衡策略能進一步提
升整體系統資源使用率，配合副本容錯機制更能有效避免因節點故障所造成的工作失
敗。 
本子計畫於此計畫執行期間完成 JXTA為基礎的 P2P格網平台，提供格網資源資訊
服務(Grid Resource Information Service)及點對點平行傳輸機制，分散式動態負載平衡及
工作轉移機制。除此之外，亦利用 P2P 技術改善格網系統中資源分配及管理機制之效
能，並與其他子計畫整合，完成以服務導向架構(SOA)為基礎之 P2P格網系統，並佈署
於跨單位環境進行測試。此三年的研究成果皆建置於 Taiwan UniGrid 格網系統上進行
實測，並進行效能評估。實驗結果顯示透過此輕量化 P2P 格網平台不僅可整合格網資
源，並有效地進行工作轉移至擁有適合資源的運算節點執行。 
其中可多通道多端點並行傳輸、支援分塊及部分資料傳輸之 P2P 平行傳輸機制，
可以取代 Globus GridFTP之功能；而透過存取 Condor 佇列，動態轉移工作及負載平衡
之機制也可取代 Globus相對之功能，進而達到輕量化的目標。為改善 P2P的效能，本
子計畫亦完成多屬性多環之結構化 P2P overlay之設計，並進一步完成半結構化、多屬
性、多重星狀結構的 P2P overlay，整合跨組織 VO之計算資源。在資源管理方面，本子
計畫亦透過預測策略改善動態負載平衡機制之效能，並完成具容錯能力之動態資源負載
平衡機制。並於最後一年度，整合跨組織 VO之格網資源及跨單位佈署環境。總結而言，
本子計畫透過不同評估程式 (包含  f77split、 fd_predator_prey、 fd1d_heat_explicit、
satisfiability 及 linpack_bench)進行整合跨組織 VO格網資源對之效能評估，經由實驗結
果顯示，已達成原計畫設定之目標。 
 
 
 22
分散式動態負載平衡機制 98.4Q 完成 
建立資源管理機制 99.2Q 完成 
整合跨組織 VO之格網資源 99.3Q 完成 
跨單位佈署環境，進行輕量化 P2P格
網整合測試 
99.4Q 完成 
 
 
歸納本子計畫主要的成果包含： 
一、 第一年： 
1.   完成輕量化 P2P 格網平台的中介軟體雛型，其功能包含： 
a、 分散式格網資源監視/查詢機制 
b、 可多通道多端點並行傳輸、支援分塊及部分資料傳輸之 P2P 平行傳輸機制 
c、 P2P Overlay Network 之建立 
d、 透過存取 Condor 佇列，動態轉移工作機制之雛型 
2.   完成輕量化的  P2P  格網系統雛型 
3.   完成負載平衡策略雛型 
二、 第二年： 
1.   完成部分標準化應用程式介面 
2.   完成資源尋找及分配機制 
3.   完成程序轉移機制 
4.   完成分散式動態負載平衡機制 
三、 第三年： 
1.   完成建立資源管理機制 
2.   完成整合跨組織 VO之格網資源 
3.   完成部分跨單位佈署環境，進行輕量化 P2P格網整合測試 
 24
二、第二年： 
a. Kuan-Chou Lai, Kuo-Chan Huang, You-Fu Yu, Po-Jung Huang, Quan-Jie Chen, and 
Tian-Liang Hunang, “A P2P Resource Discovery Strategy for Cloud Computing 
System,” Journal of Computers (ISSN: 1991-1599), Vol.21, No.1, April 2010, pp.25-37. 
b. Po-Jung Huang, You-Fu Yu, Quan-Jie Chen, Tian-Liang Huang, Kuan-Chou Lai, and 
Kuan-Ching Li, “A Self-Adaptive Load Balancing Strategy for P2P Grids,” Lecture 
Notes in Computer Sciences 6082, “Algorithms and Architectures for Parallel 
Processing”, pp.338-347 , 2010 (EI) 
c. You-Fu Yu, Po-Jung Huang, Quan-Jie Chen, Tian-Liang Huang, and Kuan-Chou Lai, 
“On the Design of Semi-Structured Multi-Star Hybrid-Overlays for Multi-Attribute 
Range Queries,” Lecture Notes in Computer Sciences 6104, “Advances in Grid and 
Pervasive Computing”, pp.451-460 , 2010 (EI) 
d. Kuan-Chou Lai, Kuo-Chan Huang and You-Fu Yu, “Multi-Attribute Range Queries on 
Structured Overlay Networks,” Journal of Internet Technology, Vol. 12, No. 2, 2011, 
pp.269-278. (SCI, TSCI, EI) 
e. You-Fu Yu, Po-Jung Huang and Kuan-Chou Lai, “A Structured Overlay for 
Multi-Attribute Range Queries,” Proceedings of National Computer Symposium (NCS 
2009) 
f. 黃柏榕、余有富、賴冠州, “P2P  格網系統中具動態適應性之負載平衡策略,” 
TANET 2009  
g. Po-Jung  Huang,  You-Fu  Yu,  Kuan-Chou  Lai  and  Chao-Tung  Yang,  
“Distributed Adaptive   Load   Balancing   for   P2P   Grid   Systems,”   
Proceedings   of   International Workshop  on  Grid  Computing,  Applications,  
and  Technologies  (GridCAT  2009),  in conjunction  with  the  10th  
International  Symposium  on  Pervasive  Systems,  Algorithms and Networks, 
I-SPAN 2009.  
 26
27-29, 2010 
d. Quan-Jie Chen, You-Fu Yu, Tian-Liang Huang, Po-Jung Huang, Kuan-Chou Lai, “A 
Semi-Structured P2P Network for Multi-Attribute Range Query in Cloud Computing,” 
TANET 2010, Oct. 27-29, 2010 
e. Kuan-Chou Lai, and You-Fu Yu, “A Semi-Structured Overlay for Multi-Attribute Range 
Queries in Cloud Computing,” 13th IEEE International Conference on Computational 
Science and Engineering, Dec.11-13, 2010. 
f. Tian-Liang Huang, Tian-An Hsieh, Kuan-Chou Lai, Kuan-Ching Li, Ching-Hsien Hsu, 
and Hsi-Ya Chang, “Fault Tolerance Policy on Dynamic Load Balancing in P2P Grids,” 
Proceedings of the 6th International Conference on Frontier of Computer Science and 
Technology, Changsha, China, November 16-18, 2011 
g. 楊顗民, 廖健勝, 王耀德, 董任軒, 賴冠州, “雲端系統中降低能源消耗之具時限排
程策略,” TANET, 2011 
h. 董任軒, 謝婷安, 楊顗民, 王耀德, 賴冠州, “雲端系統中達成納許平衡之資源配
置,” NCS 2011. 
i. Po-Jung Huang, Kuan-Chou Lai, Ching-Hsien Hsu, and Kuan-Ching Li, “Exploiting 
Dynamic Distributed Load Balance by Neighbor-Matching on P2P Grids,” Proceedings 
of the 2011 IEEE Asia-Pacific Services Computing Conference (IEEE APSCC 2011), , 
Jeju, Korea, December 12 - 15, 2011. 
 
 
 
 
 28
-abovetheclouds.pdf, 2009. 
[14] M. Beltr´an, A. Guzm´an, J. L. Bosque, “Dynamic Tasks Assignment for Real 
Heterogeneous Clusters”, PPAM 2003, LNCS 3019, pp.888-895, 2004. 
[15] M. Wieczorek, A. Hoheisel, R. Prodan, “Taxonomies of The Multi-Criteria Grid 
Workflow Scheduling  Problem”, CoreGRID Technical Report Number TR-0106, 
pp.237-264 
[16] P. J. Huang, Y. F. Yu, K. C. Lai, C. T. Yang, “A Self-Adaptive Load Balancing Strategy 
for P2P Grids,” Algorithms and Architectures for Parallel Processing, pp.338-347, 2010. 
[17] P. J. Huang, Y. F. Yu, K. C. Lai, C. T. Yang, “Distributed Adaptive Load Balancing for 
P2P Grid Systems,” 10th International Symposium on Pervasive Systems, Algorithms, 
and Networks, pp.696-700, 2009. 
[18] PeerSim website, ttp://peersim.sourceforge.net/. 
[19] R. Zhang and Y. Charlie Hu, “Assisted Peer-to-Peer Search with Partial Indexing,” IEEE 
Transactions on Parallel and Distributed Systems, Vol. 18, No. 8, pp.1146-1158, August 
2007. 
[20] S. Ali, H. J. Siegel, D. Hensgen, R. F. Freund, “Dynamic Mapping of a Class of 
Independent Tasks onto Heterogeneous Computing Systems”, Journal of Parallel and 
Distributed Computing 59, pp.107-131. 
[21] S. Ion, M. Robert, K. David, M. F. Kaashoek, and B. Hari, “Chord: A Scalable 
Peer-to-Peer Lookup Service for Internet Applications,” Proc. the 2001 conference on 
Applications, technologies, architectures, and protocols for computer communications, 
San Diego, California, United States: ACM, pp.149-160, 2001. 
[22] S. Jiang, L. Guo, X. Zhang, and H. Wang, “LightFlood : Minimizing Redundant 
Messages and Maximizing Scope of Peer-to-Peer Search,” IEEE Transactions on 
Parallel and Distributed Systems, Vol. 19, No. 5, pp.601-614, 2008. 
[23] Six Degrees of Separation website, 
出席國際學術會議心得報告 
                                                             
計畫編號 NSC 97-2221-E-142 -001 -MY3 
計畫名稱 利用 P2P 技術建構以服務導向架構(SOA)為基礎之輕量化格網系統－子計畫三:輕量化 P2P 格網平台之研究與建置(3/3) 
出國人員姓名 
服務機關及職稱 
國立台中教育大學 資訊科學學系 賴冠州 副教授 
會議時間地點 Hong Kong, China, December 11-13, 2010 
會議名稱 The 13
th IEEE International Conference on Computational Science and 
Engineering (CSE-2010) 
發表論文題目 A Semi-structured Overlay for Multi-attribute Range Queries in Cloud Computing 
 
一、參加會議經過 
The 13th IEEE International Conference on Computational Science and Engineering 
(CSE-2010)於 2010 年 12 月 11 日至 13 日在中國香港特別行政區舉行，CSE-2010 包含三
天的 Technical Programs 及 Workshops，會議內容包含 13 個探討主題，議題涵蓋智能及
生物運算、分散及平行運算、資料庫及資料探勘、叢集、格網及點對點運算、行動運算
及無線通訊、CSE 教育、科學及工程運算、嵌入式及普及運算、進階網路及應用、資訊
安全、隱私及信任、服務及網路運算、自動化運算、CSE 應用等：http://cse.stfx.ca/~cse2010/ 
  本人搭乘中華航空公司，由台中清泉崗機場飛往香港赤鱲角機場參加會議，抵達
香港後，先至投宿旅館置放行李及休憩。隔日(12/11)上午便前往會場報到並領取相關會
議資料，會議第一天本人參加了上午 A11: Mobile Computing and Wireless Communications
場次聽取相關研究報告，並與與會學者及主持人 Prof. Xingang Liu 進行討論及交流。本
人並於當天下午主持 A12: Cluster, Grid and Cloud Computing 場次之論文發表，並於該場
次發表本計畫之研究成果，題目為「A Semi-structured Overlay for Multi-attribute Range 
Queries in Cloud Computing」。當天晚上本人亦參加大會所舉辦的 Conference 
Reception，並且與多位國外學者教授交流意見，其中更與 Hai Jiang 教授及 Laurence T. 
Yang 教授深入討論未來相關技術的發展。 
會議的第二天本人參加了上午 Prof. Wanlei Zhou 及 Mitshuhisa Sato 兩場的 Keynote 
Speech，題目分別為「Finding the Real Source of Internet Crimes」及「Trends in Post-Petascale 
Computing」，並接著參加 A14: Distributed and Parallel Computing II 場次的論文發
表，與會過程中與多位與會學者討論雲端相關技術的發展，並獲悉目前國外學者許多新
興起的研究主題。 
 
 
K. C. Lai
寄件者: cse10@googlegroups.com
寄件日期: 2010年10月19日星期二 下午 9:25
收件者: kclai@mail.ntcu.edu.tw
副本: ltyang@gmail.com; hjiang@cs.astate.edu; pan.yongwen@gmail.com
主旨: IEEE CSE-2010 Status of paper 120
 
------------------------------------------------------------------------- 
Dear  Kuan-Chou Lai: 
 
First of all, thank you very much for submitting your paper to the 13th IEEE International Conference on 
Computational Science and Engineering (CSE-2010) to be held on HK, China, Dec 11-13, 2010. 
 
IEEE CSE-2010 has got a large number of submissions (213), due to the limited space, only small set of  
excellent papers (19%) have been selected. Based on the comments from reviewers,  WE ARE PLEASED 
TO INFORM YOU that your paper entitled: 
 
Paper ID: CSE2010-120 
Title:  A Semi-Structured Overlay for Multi-Attribute Range Queries in Cloud Computing 
Authors:  Kuan-Chou Lai 
 
has been accepted to be included for the proceedings of IEEE CSE-2010 main conference to be published 
by IEEE CS Press. 
 
In order to achieve the highest quality proceedings, we urge you to carefully consider the reviewers' 
comments if any (attached at the end of this email) when preparing the final version of your contribution. 
 
The camera-ready uploading of your paper  is required before Oct 29, 2010 (this is a hard deadline since 
the schedule is very tight). The author kit can be found at the CSE-2010 web site. 
 
The registration is required before Oct 31, 2010. The detailed information can be found at 
CSE-2010 web site. 
 
Please note that authors of registered papers, or at least one of them, are requested to present their work at 
the conference, otherwise their papers will be removed from the IEEE digital library after the conference. 
 
Thank you again for helping ensure the success of the CSE-2010. We are looking forward to meeting you at 
the CSE-2010 at HK, China, Dec 11-13, 2010. 
 
Best regards 
 
General Chairs: 
Jiannong Cao, Hong Kong Polytechnic University, China Eric de Sturler, Virginia Tech, USA Sotirios G. 
Ziavras, New Jersey Institute of Technology, USA 
 
Program Chairs 
Hai Jiang, Arkansas State University, USA Luc Giraud, INRIA, France Yunquan Zhang, Chinese Academy 
of Sciences, China 
 
------------------------------------------------------------------------- 
===================================== 
 
Reviewer: 1 
cloud users’ various requirements. Through the P2P 
technology, the proposed mechanism aggregates the 
computing resources with the same attribute to construct a 
semi-structured P2P overlay for providing efficient resource 
discovery and solving the high churn network problem. In 
addition, the computing resources in the same group can 
migrate jobs to each other for achieving load balancing. 
The rest of the paper is organized as follows: section II 
discusses related works. Section III presents the proposed 
P2P resource search mechanism. Experimental results are 
provided in section IV. We give final conclusions and future 
works in section V. 
II. RELATED WORKS 
A. P2P Technology in Cloud computing 
In general, the software and hardware are central-
controlled and maintained by the cloud providers. Therefore, 
integrating the P2P technology into Cloud computing to 
improve the performance and reduce the cost is one of the 
research issues. Chen et al. [13] propose a P2P-assisted cloud 
provisioning system which employs the BitTorrent-like P2P 
protocol to accelerate image delivery to large-scale target 
machines. Through the P2P-assisted cloud provisioning 
system, the computing resources can be dynamically 
provisioned and shared. Thus, the P2P-assisted cloud 
provisioning system reduces the cost and the complexity. Liu 
et al. [2] propose a semantic cloud to orchestrate resources 
with different functions and produce the personalized 
resource flow to users. The semantic cloud exploits the 
Similarity Link Network (SLN) and Association Link 
Network (ALN) to construct a small-world semantic P2P 
network. Through the semantic cloud, the cloud computing 
can aggregate the resources to satisfy the users’ complex 
requirements.  
B. Structured P2P Network 
Structured P2P networks exploit the distributed hash 
table (DHT) to construct the structured overlay for searching 
the specified resources. Many of the DHT-based approaches 
hash the resource names or the resource IPs to form the 
unique resource IDs for each resource. In structured P2P 
overlays, the topology of the peer network is tightly 
controlled, and the nodes work together to maintain the 
structure of the overlay. Although structured approaches can 
search for the specified resource effectively, it is difficult for 
these approaches to offer a variety of search models. Thus, to 
offer more flexible search functions, the structured 
approaches need to rely on other approaches. In addition, the 
cost of maintaining distributed hash tables increases with the 
scale of P2P networks. Therefore, structured approaches 
have to address the inflexible search model and the 
scalability problem.  
Chord [10] is usually one of the structured P2P networks 
applied in the resource discovery mechanism. Chord hashes 
the IP of each resource as the resource ID, and constructs the 
structured overlay according to the resource ID. Chord 
adopts the finger table to record the connection between the 
node and its successors in order to support resource 
discovery in O(log(N)) (N is the number of nodes). However, 
due to that the resource ID cannot reflect the original 
attribute information, it is difficult for Chord to offer the 
multi-attribute range query search.  
C. Unstructured P2P Network 
Unstructured P2P networks are appropriate for highly 
churn P2P networks because the placement of nodes is 
completely unrelated to the overlay topology. Most of the 
unstructured networks employ the flooding approach to 
broadcast the queries. However, flooding generates a lot of 
unnecessary traffic. Thus, related studies mainly focus on 
improving the performance of flooding and on reducing the 
unnecessary traffic. Although unstructured P2P networks 
offer a variety of search models, they still have to address 
availability, search performance and network traffic. 
Jin et al. [4] propose a peer-to-peer literature sharing 
system via the semantic small world. Each node maintains a 
number of short-range links and long-range links. Short-
range links are semantically similar to the node, and long-
range links are connected for increasing the recall rate. 
Although these approaches reduce the search scope, they still 
cannot search resources effectively. Even some resources 
satisfy the query, they still may not be found.  
D. Hierarchical P2P Network 
Usually, the hierarchical approaches can reduce the 
search scope and unnecessary communication. GTap [12] 
organizes nodes into groups and improves Tapestry with 
additional group links and backup links for flexible routing. 
Even though additional links enlarge the size of routing 
table, the latency of discovering groups is still a constant. 
However, the maintenance cost of these DHT-based overlays 
confounds the system scalability. Watanabe et al. [6] propose 
a superpeer-based two-layer P2P overlay. The search scope 
is narrowed to local clusters and superpeer layers. Therefore, 
the traffic generated by flooding decreases, too. Marzolla et 
al. [8] also propose a two-level hierarchical topology to 
improve the single tree architecture, in which the lower level 
is constructed by many groups of trees and the upper level 
connects these groups by using the unstructured approach. 
Although their network topology reduces the maintenance 
cost in the single tree architecture, the unstructured upper 
level causes the redundant searching cost.  
E. Hybrid P2P Network 
The aim of semi-structure P2P networks is to preserve 
the advantages, and avoid the disadvantages of structured 
and unstructured P2P networks. Ohnishi et al. [5] propose 
semi-structured P2P networks for file sharing. The semi-
structured P2P network includes a structured P2P network 
for file searching and an unstructured P2P network for 
accessing load balancing. The structured network is 
constructed by super nodes and the unstructured networks 
are constructed by regular nodes. Although the semi-
structured P2P network can achieve load balancing and 
reliable file searching, the ratio of regular nodes to all nodes 
affects the system performance. Zhang et al. [9] propose an 
assisted P2P overlay in which nodes participate in both the 
D. Resource Discovery 
Figure 3 shows the flow chart of MAMSO. The first 
decision in Figure 3 shows that the repetitive query is 
dropped after a reception to avoid the circular routing. Then, 
the attribute-group checks whether itself satisfies the query. 
‘Hit’ means that the attribute-vector of the attribute-group is 
the same with the query. If the attribute-group satisfies the 
query, it starts the process ‘Load_Balancing (Q)’ to balance 
the workload, otherwise it starts the process ‘Routing (Q)’ to 
find out the next attribute-group to forward the query. If the 
process ‘Routing (Q)’ cannot find out the next attribute-
group for forwarding, it means that there are no computing 
resources satisfying the query. 
The process ‘Load_Balancing (Q)’ is a load balancing 
mechanism. It makes the decision of accepting or forwarding 
Q to other neighbor nodes which could improve load 
balancing in the same attribute-group. Figure 4 shows the 
flow chart of ‘Load_Balancing (Q)’. Due to that nodes in the 
same attribute-group are connected by the unstructured 
approach, the unstructured connections facilitate nodes to 
balance their workload. The workload of nodes depends on 
the number of received queries. In addition, each node 
defines a threshold of the received queries according to its 
computing capability. Therefore, if the number of received 
queries is greater than the threshold, it means that the node is 
in the high-loading status; otherwise, the node is in the low-
loading status. When the node is in high-loading status, there 
are two steps to reduce the workload. The first step is to 
transfer the redundant connections to other low-loading 
neighbors. Therefore, the high-loading node could save the 
time of forwarding queries. The second step is to forward the 
query to the low-loading neighbors. However, in order to 
avoid circular forwarding, only the neighbor node which 
doesn’t become high-loading after receiving the forwarded 
query can accept the query. If there are no other neighbor 
nodes which can receive the query, it means that all the 
nodes in the attribute-group are high-loading. 
 
 
Figure 3.  Flow chart of MAMSO 
 
Figure 4.  Flow chart of  ‘Load_Balancing (Q)’ 
 
 
Figure 5.  Flow Chart of ‘Routing (Q)’ 
Yes 
Routing (Q) 
Load_Balancing (Q) 
 When attribute-group 
receives a query Q 
Hit 
Hit or Miss 
Finish 
Has received before? 
No 
Miss 
When the attribute-group 
does not satisfy the query Q 
Classifying Q 
Range query search 
Partial query search 
There is no satisfied 
computing resource 
Multi-attribute search 
Multi-attribute query Partial query 
Range query 
Are there any 
neighbors for 
forwarding Q? 
Forwarding Q to the 
next attribute-group 
No Yes 
Finish 
Transferring redundant 
connections to other low-
loading neighbors 
Forwarding Q to the 
low-loading neighbor 
Is there a neighbor 
can receive Q? 
No 
When a node  
receives a query Q 
Becomes  
high-loading? 
Accepts Q 
Yes 
Yes 
No 
 
Figure 9.  Flow chart of range query search 
Figure 10 shows an example for the range query within 
the range form ‘00 10’ to ‘10 11’. First, the range query is 
packed into RQl along with RQ. RQl records the attribute-
vectors from ‘00 10’ to ‘10 11’, and RQ is ‘ ∗ ∗  ∗ ∗ ’. 
Therefore, the destination of RQ is the central attribute-group 
of the attribute-cluster in which the attribute-vector is ‘∗ ∗  
∗ ∗ ’. In this example, the destination is the attribute-group 
with ‘00 00’. Then, similar to the partial query search, RQ is 
routed to the central attribute-group. After the central 
attribute-group receives RQ, it routes RQ to other attribute-
groups radially according to RQl. Finally, all the attribute-
groups which corresponding to the range query can be found 
within at most four hops.  
E. Analysis 
In general, the time complexity of the range query search 
in the structured DHT-based overlay with the one-hop search 
approach is (log / 2)O N Nb+  when there are Nb nodes 
between the upper and lower bound nodes. Therefore, it 
would spend more time in the one-hop search when Nb is 
greater than 2 log N× . However, in MAMSO, the maximum 
number of hops for routing queries is 2n. Therefore, no 
matter what the range of queries are, the time complexity of 
the range query search is ( )O n c+ . 
 
11 11
11 10
11 01
11 00
10 00
10 01
10 10
10 11
01 11
01 10
01 01
01 00
00 00
00 01
00 10
00 11
Range query
00 10~10 11
User
Find out the central attribute-group
Radial search 
 
Figure 10.  Example for range query search in MAMSO 
IV. EXPERIMENTAL RESULTS 
A. Experimental Environment 
In this paper, we exploit PeerSim to validate our 
mechanisms. PeerSim is a Java based simulator which is 
designed for large scale P2P systems and supports scalable 
and dynamic simulation. Therefore, PeerSim is applicable to 
measure the proposed mechanisms. 
The configuration of the experimental environment is 
defined as following. The length of each attribute-vector is 
128 bits, and the range of network sizes is from 1,000 to 
150,000 nodes. In addition, in order to simulate the 
population of the real world, the network size is varied with 
time. The varied range is plus or minus ten percent of the 
network size.  
B. Multi-Attribute Search 
Due to that the attribute-vector preserves original 
attributes of the computing resource, users can specify the 
value of each attribute to form the query. Then, the query is 
routed to discover the corresponding computing resource. 
Thus, the multi-attribute search is similar to the keyword 
search in the proposed mechanisms, and we compare the 
keyword search performance with Chord.  
Since MAMSO can be transformed into a hierarchical 
tree-like architecture. The number of attributes equals to the 
height of the tree, and the number of attributes affects the 
search performance. Therefore, we discuss the search 
performance of different numbers of attributes. In this 
experiment, the network size is 100,000, and the number of 
nodes in each attribute-group is uniform distributed. 
Figure 11 shows the average and maximum numbers of 
hops of different numbers of attributes. We can observe that 
both the average and maximum numbers of hops increase 
with the number of attributes. This is because the height of 
the tree-like architecture also increases with the number of 
attributes. Therefore, in the worst case, the maximum 
number of hops increases two while the number of attributes 
increases one. 
 
1
3
5
7
9
11
13
15
17
1 2 3 4 5 6 7 8
Number of attributes
N
um
be
r o
f h
op
s
MAMSO_avg hops
MAMSO_max hops
 
Figure 11.  Different numbers of attributes 
 
Is the attribute-group 
in the C? 
Receiving a 
partial query RQ 
Forwarding RQ to 
the central attribute-
group of C 
Forwarding RQ to 
other marginal 
attribute-group 
Yes 
No 
Finish 
Multi-attribute search  
V. CONCLUSIONS AND FUTURE WORKS  
In this paper, in order to aggregate the computing 
resources and support the effective multi-attribute range 
query search in Cloud computing, we propose a mechanism 
named MAMSO. 
MAMSO exploits the semi-structured architecture to 
preserves the characteristics both of structured and 
unstructured P2P networks. The experimental results show 
that the structured multi-star overlay provides the efficient 
multi-attribute range query search and is independent of the 
number of computing resources. In addition, MAMSO 
performs stable search performance in different network 
sizes. This is due to that the unstructured attribute-groups 
reduce the effect of the churning population. Moreover, 
MAMSO provides a load balancing mechanism to reduce 
redundant connections and transfer queries to other low-
loading nodes. We can observe that the load balancing 
mechanism performs well and can efficiently distribute the 
load in the experimental results. 
As discussed in section IV.B, although the network size 
does not affect the search performance, the number of 
attributes does. Therefore, how to use the limited attribute-
vector to present the attributes as more as possible, and to 
hold the search performance is one of the future works. The 
other one is that the load balancing mechanism should be 
modified to adapt to the cloud computing environment. In 
Cloud computing, we consider not only the load balancing 
but also the power consumption. Therefore, how to 
aggregate all the queries to certain nodes is an issue needed 
to be solved. Moreover, MAMSO integrates all cloud 
providers to provide the complete cloud service. Therefore, 
we consider to provide a mechanism for selecting 
appropriate cloud providers with the price as lower as 
possible in the future. 
ACKNOWLEDGMENT 
This study was sponsored by the National Science 
Council, Taiwan, Republic of China, under contract 
numbers: NSC 98-2218-E-007-005 and NSC 97-2221-E-
142-001-MY3. 
REFERENCES 
 
[1] Amazon S3, https://s3.amazonaws.com/. 
[2] F. liu, X. Luo, J. Yu and G. Liang, ‘Semantic Cloud based on SLN 
and ALN,’ Proc. 15th International Conference on Semantics, 
Knowledge and Grid: IEEE Computer Society, pp.314-317, 2009. 
[3] Google App Engine, http://code.google.com/appengine/. 
[4] H. Jin and X. Ning, ‘Improving Search in Peer-to-Peer Literature 
Sharing Systems via Semantic Small World,’ Proc. 15th 
EUROMICRO International Conference on Parallel, Distributed and 
Network-Based Processing: IEEE Computer Society, pp.31-38, 2007. 
[5] K. Ohnishi, S. Nagamatsu, T. Okamura and Y. Oie, ‘Autonomously 
Reconstructable Semi-Structured P2P networks for File Sharing,’ 
Proc. 3rd International Conference on Autonomic and Autonomous 
Systems: IEEE Computer Society, pp.10, 2007. 
[6] K. Watanabe, N. Hayashibara and M. Takizawa, ‘A Superpeer-based 
Two-layer P2P Overlay Network with the CBF Strategy,’ Proc. 1st 
International Conference on Complex, Intelligent and Software 
Intensive Systems: IEEE Computer Society, pp.111-118, 2007. 
[7] M. Armbrust, A. Fox and R. Griffith et al., ‘Above the clouds: A 
Berkley View of Cloud Computing,’ 
http://bishop.camp.clarkson.edu/Cloud_Computing_Papers/berkely -
abovetheclouds.pdf, 2009. 
[8] M. Marzolla, M. Mordacchini and S. Orlando, ‘A P2P Resource 
Discovery System Based on a Forest of Trees,’ Proc. 3rd int. 
Workshop on Grid and Peer-to-Peer Computing Impacts on Large 
Scale Heterogeneous Distributed Database Systems (GLOBE’06), 
DEXA Conference: IEEE Computer Society, pp.261-265, 2006. 
[9] R. Zhang and Y. Charlie Hu, ‘Assisted Peer-to-Peer Search with 
Partial Indexing,’ in IEEE Transactions on Parallel and Distributed 
Systems, Vol. 18, No. 8, pp.1146-1158, August 2007. 
[10] S. Ion, M. Robert, K. David, M. F. Kaashoek and B. Hari, ‘Chord: A 
Scalable Peer-to-Peer Lookup Service for Internet Applications,’ 
Proc. the 2001 conference on Applications, technologies, 
architectures, and protocols for computer communications, San 
Diego, California, United States: ACM, pp.149-160, 2001. 
[11] Y. F. Yu, P. J. Huang, Q. J. Chen, T. L. Huang and K. C. Lai, ‘On the 
Design of Semi-structured Multi-star Hybrid-Overlays for Multi-
attribute Range Queries,’ Proc. 5th international Conference on Grid 
and Pervasive Computing, pp.451-460, 2010 
[12] Y. Zhang, D. Li, L. Chen and X. Lu, ‘Flexible Routing in Grouped 
DHTs,’ Proc. 8th International Conference on Peer-to-Peer 
Computing: IEEE Computer Society, pp.109-118, 2008. 
[13] Z. Chen, Y. Zhao, X. Miao, Y. Chen and Q. Wang, ‘Rapid 
Provisioning of Cloud Infrastructure Leveraging Peer-to-Peer 
Networks,’ Proc. 29th IEEE International Conference on Distributed 
Computing Systems Workshops: IEEE Computer Society, pp.324-
329, 2009. 
 
 
 
97 年度專題研究計畫研究成果彙整表 
計畫主持人：賴冠州 計畫編號：97-2221-E-142-001-MY3 
計畫名稱：利用 P2P 技術建構以服務導向架構(SOA)為基礎之輕量化格網系統--子計畫三:輕量化 P2P
格網平台之研究與建置 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 4 4 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 4 4 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 1 1 100%  
研究報告/技術報告 0 0 100%  
研討會論文 4 4 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
