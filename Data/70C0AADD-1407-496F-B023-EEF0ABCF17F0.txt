 1 
1 緒論 
1-1 研究背景與動機 
網際網路的發展以極急劇的速度日新月異，從電子商務、日常娛樂、教育及媒體資訊，
不斷影響人們的每日生活。這些新的應用程式有著瞬間吞噬了既有的頻寬，以及竭盡所能
爭取的傾向；如不加以限制，勢必造成其他如 On-line game、Voice over IP等應用產生斷訊
或是嚴重延遲的後果。因此，網路管理人員開始規劃新的措施來預防這樣的現象發生。 
嚴格限制頻寬雖然可以達到效果，但是限制特定網際網路應用程式可能會阻礙企業的
發展，容易讓企業跟不上科技及產業的趨勢。而擴充頻寬雖然能治標卻不能治本，加大頻
寬之後仍有可能被某些特定程式佔領，不能解決頻寬分配不均的問題。而持續不斷的增大
頻寬亦不符合企業資訊有效應用的原則，極度昂貴的專線費用也不是一般的企業大眾可以
負擔，或願意負擔的。 
因此，使用新的 QoS技術來對頻寬加以管理成為最佳的選擇。QoS的技術可以讓網路
提供多種速度品質的服務給使用者。它可自動偵測、分類及報告出網路上的應用資料流。
管理人員即可運用這些資訊訂出頻寬管理策略，以及不同應用資料流的傳輸優先順序，例
如定義使用者可使用多少頻寬，限制最大的平均傳送速度(Average Rate)，或針對某特定應
用資料流作優先傳輸的處理等。目前，IETF(Internet Engineering Task Force)制定了兩個標準
的服務品質協定分別為 IntServ (Integrated Service)與 DiffServ (Differentiated Service) [1]。 
在 IntServ 網路架構中，使用者必須透過網路資源管理協定(ReSerVation Protocol, 
RSVP)，針對各個 traffic session 建立保留頻寬的虛擬路線(virtual circuit)來滿足 QoS 的需
求。這樣的架構的優點在於，它對使用者提供了絕對保證的服務，再者，使用者的資料流
都可以輕易地監控管理，並且可以運用現有的 routing protocols。然而在 IntServ的架構裡，
無論是核心(core)或邊界(edge)路由器都必須要能夠辨識、記錄、並且管控每一封包流的狀
態。但是隨著網路的逐漸擴張，封包流大量增加，過多 overhead使得無論是在儲存設備或
是處理速度方面對於路由器而言都是一大挑戰，這就是 IntServ 一直為人所詬病的擴充性
(scalability)的問題。 
DiffServ 則是依據網路上封包的特性將其做分類。當封包進入 DiffServ 領域(domain)
時，邊界路由器(Edge Router) 會對封包做分類(Classification)與標記(Marker);每個分類以封
包表頭裡的 DSCP表示(DiffServ code point)。路由器會根據封包的 DSCP欄位而給予適當的
網路資源。此種行為稱為 PHB(Per Hop Behavior)的處理方式。目前共有四種 PHB的標準分
別為 Best Effort、IPv4 compatibility、Expedited Forwarding (EF) 與 Assured Forwarding (AF)。
若將其與 IntServ比較，DiffServ最大的優點就是其擴充性。DiffServ會將相似性質的資料
流量聚集(Aggregation)一起形成一個單一要求(request)送至 DiffServ網路，因此其擴充性高。 
1-2 研究目的 
Anycast 路由協定是將封包送到該位址的最鄰近界面。最普遍的做法是一組伺服器
(server)皆加入ㄧ個 Anycast 的群組；用戶端(Client)如果使用 Anycast 的技術與伺服器做點
對點的通訊，Anycast路由技術會將用戶端與最近(如經過最少的 Router總數)的伺服器做連
接。傳統的 Best Effort (如 Internet)即是如此作法。如果在一個具有服務品質的網路基礎下，
用戶端(Client)使用的 Anycast 路由技術不但要能夠選擇一條滿足頻寬需求的路徑連接至伺
 3 
3-1 架構說明 
我們將現有的 DiffServ網路架構做適度的功能擴充。如圖 3-1所示我們的網路架構包
含三個主體：頻寬管理器(E-BB)，伺服器資源管理(Server resource management，SRM)及邊
界路由器(E-ER)。每一個 DiffServ網路包含多個 SRM。每一個 SRM 管理兩個以上具有相
同性質的伺服器。所有的伺服器必須記錄管理他們的 SRM 位址以便隨時將自己的負載
(Loading)狀況自動告知他們的 SRM。我們使用 Server Weight (SW)來量測伺服器負載
(Loading)的輕重。我們定義一臺伺服器是無法提供服務(unavailable)假如它的 SW值大於一
個事先定義好的門檻值(Threshold)。同樣的，我們定義一臺 SRM是無法提供服務(unavailable)
的假如它所管理的所有伺服器都無法提供服務。所有 DiffServ 網路的資源都由 E-BB 所負
責管理。 
 
圖 3-1 我們的 DiffServ網路架構 
3-2 符號表示說明 
在正式地介紹我們提出的方法之前，先說明在文章中會使用到的符號。令 G ＝ (V, L)
表示一個 DiffServ 網路拓撲，V為此網路上所有節點(nodes)的集合；L為網路上所有連結
(link)的集合。節點 x 和 y 之間連結的頻寬總量(link capacity)可以表示為 lc(x, y)。在此
DiffServ 網路下，令 S 表示 n 台提供相同服務功能伺服器的集合， S ＝{s1, s2,…, sn}， R 
表示 m 台 SRM的集合，R ＝ { r1, r2, …, rm}，以及 E表示所有 E-ER的集合，E ＝ { e1, 
e2, …, el}。每台 SRM所管理的伺服器則用一個函數來表示，f : S → {R}； f(sk) ={ r1, r2, …, 
rj }代表伺服器 sk 同時被多個 SRM 管理。q(b)表示用戶端所要求(request)的頻寬。凡是一
條路徑符合用互端頻寬需求稱為可行(feasible)的路徑。凡是一台伺服器符合用互端需求稱
為可行(feasible)的伺服器。在本方法中，剩餘頻寬和殘留頻寬的意義是一樣的。 
3-3 Anycast運用於網路層的研究 
我們所提路徑選擇演算法便是參考研究[8]的 OSPF擴充功能；不同於研究[8]的是我們
自己提出一套新的路徑選擇演算法。除此之外，因為我們研究的重點為用戶端的頻寬需求，
故我們只有著重於每個連結可用頻寬這個擴充的量測值。 
 5 
假設 h
j
e
rP  = Æ，這表示沒有一條可行路徑存在；反之，就表示有許多條可行路徑存在。當有
多條可行路徑存在時，我們的方法會選擇經過最少 Router數的路徑。 
建立完 RPM以後，每一個 E-ER eh繼續建立MRCM。MRCM是一個 N 行矩陣，其中 N
是指 SRM的數量。 )(MRCM j
he
紀錄從 E-ER eh與 SRM rj之間所有可行路徑的最大殘留頻
寬。 )(MRCM j
he
可以用如下所表示 
}.1:)({max)(
1
h
jh
e
riifNje
PpandMipljMRCM Î££=
££
 
當一個 E-ER eh收到用戶端的要求 q(b)時，E-ER eh會從 RPM 裏用輪詢的方式(round 
robin fashion)選擇一台 SRM r1。然後再使用MRCM來檢查是否存在一條可行的路徑。 
3-4 Anycast運用於應用層的研究 
選擇一條可行的路徑之後，被選到的 SRM要負責選擇出一台最佳的伺服器來提供服務
給用戶端。 
3-4-1 SW值的量測 
SW是用來決定每台伺服器的負載(loading)程度。當伺服器同時服務很多的用戶端時，
其實體記憶體及網路頻寬的使用量將會增加。在這種情行下，伺服器的效益會突然的降低。
因此在量測伺服器的 SW 時，我們主要考量伺服器目前實體記憶體及網路頻寬的使用量。
當量測網路頻寬的使用量時，我們計算目前頻寬的使用量和伺服器所能提供的總頻寬的比
例。當量測實體記憶體的使用量時，我們計算目前實體記憶體的使用量和伺服器所能提供
的總實體記憶體的比例。 
SW 值是完全由伺服器自己計算。SW 的定義如下面的運算式： 
)1( aa -´+´= åå
tm
cm
mb
cb
SW  
公式中 cb (consumed bandwidth)表示目前所有用戶端所使用的總頻寬，mb (maximum 
bandwidth)表示為一台伺服器所能提供的最大頻寬；cm (consumed memory)表示目前所有用
戶端所使用的總記憶體，tm (total memory) 表示一個伺服器全部的記憶體。α值是一個固定
的常數，α的範圍介於 0與 1之間( 0 ≦α≦ 1)。我們利用 α值來表示 SW是以網路頻寬為
重還是記憶體為重。 
每一台伺服器會紀錄管理它的 SRM位址。因此每一台伺服器會自動將它本身的 SW值
定時的傳送給管理它的 SRM。一旦每個 SRM收到所有被管理伺服器的 SW，每個 SRM會
將所收到的 SW紀錄在一個 SRM表格。如此可定期追縱其所管理伺服器的 SW值。SRM 表
格記錄了所有管理的伺服器。每個伺服器欄位記錄伺服器的位址(server unicast address，
SUA)，伺服器的 SW以及管理它的 SRM的位址(SRM_Ad)。 
SRM利用 SW值選擇出最佳的伺服器來提供服務給客戶端。因此我們設定了一個門檻
值(threshold)，稱為 SW(T)，用來反應出伺服器負載高或是低。當 SRM 收到一個要求時，
它會使用它的 SRM表格來選擇一台最佳的伺服器。當伺服器的 SW值超過 SW(T)的時候，
SRM 不會選擇該台伺服器來提供服務給用戶端。假設 Sr表示 SRM找到所有可行伺服器的
集合。Sr可表示如下： 
))}.((|{ TSWSWsS kkr <=  
當 Sr包含多個可行伺服器時，SRM會選擇具有最小 SW的伺服器。 
4 模擬與結果分析 
 7 
 
圖 4-1 SW(T)為0.3時的要求阻隔率 
 
圖 4-2 SW(T)為0.5時的要求阻隔率 
 
圖 4-3 SW(T)為0.7時的要求阻隔率 
圖5-4 顯示的服務要求阻隔率是依據路徑選擇所繪製，也就是在殘留網路中，所有路
徑剩餘的頻寬都不符合客戶端要求的頻寬時，便會發生服務要求阻隔。在圖中，觀察得到
文章 [7] 的效能最差，我們針對可能發生的原因來做些討論。一開始網路的流量並不是很
高，而路徑快取儲存路徑可用頻寬的記錄都非常的新，所以服務要求阻隔率非常的小，幾
乎接近零，隨著網路流量的增加，路徑快取記錄的路徑可用之頻寬不再是那麼新的情況下，
服務要求阻隔率便會上升，換句話說，路徑快取記錄路徑可用的頻寬不明確時，就很有可
能產生服務要求阻隔。 
除此之外，觀察圖5-4，不難發現我們提出的方法比文章 [6]、[7] 有著更高的效能，那
是因為我們在找尋符合客戶端頻寬需求路徑的方式，是從RPM中直接尋找，所以當在網路
流量低的時候，有很多條路徑剩餘的頻寬都符合客戶端要求的頻寬，並不會產生服務要求
阻隔，而隨著網路流量的增加，服務要求阻隔的頻率會增加，尤其是在網路流量很高的情
況下，但相較於文章 [6]、[7]，我們的整體服務要求阻隔率還是最低的。 
 9 
4-2-3 找到一條可行的路徑與可用之伺服器的平均時間(Average timeto find a 
feasible path and server) 
在圖5-7中要討論與比較的效能參數為找到一條可行之路徑及可用之伺服器所花費的
平均時間。當網路的流量很小的時候(<250 Mbps)，文章 [7] 發現一條可行路徑和可用伺服
器的平均時間最長，主要的原因為是它使用廣播的方式來搜尋所有的可行之路徑和可用之
伺服器，然後，一條最佳的路徑和最佳的伺服器挑選的依據提按照一些預先定義好的規則
來實行，這個廣播的機制如果在 DiffServ網路中執行，將會花費更多的時間在搜尋所有的
可行的路徑和可用的伺服器。文章 [6] 與文章 [7] 的相較之下，文章 [6] 在發現一條可行
之路徑和可用之伺服器所花費的時間較短，這是因為在 DiffServ 網路中每條路徑和伺服器
都有充份的能力提供服務給客戶端，因此，一條能可行的路徑和可用的伺服器能非常快地
找到。 
當網路的流量逐漸地增加時( 250 Mbps ~ 750 Mbps之間），文章[6]、[7] 找到一條能可
行之路徑和可用之伺服器所花費的平均時間幾乎一樣。文章 [7] 花費的平均時間能夠減少
的原因是其能夠藉由路徑快取來快速地找到一條能可行之路徑和可用之伺服器，至於文章 
[6] 花費的平約時間逐漸增加是因為網路和伺服器都沒有足夠的能力來找到一條可行的路
徑和可用的伺服器。當網路的流量相當高時(750 Mbps ~ 1500 Mbps之間），文章 [6] 花費
的平均時間最長，原因是在流量很高時，文章 [6] 的方法想找到一條可行的路徑是非常困
難的，因此，會花費更多的時間去搜尋所有可行的路徑。反觀，文章 [7] 仍然可藉由路徑
快取來快速地找到一條能可行之路徑和可用之伺服器。然而，在5-2-1 節我們曾經描述過
的，路徑快取所記錄的可行之路徑和可用之伺服器的資訊有可能是過時的。 
我們提出的方法與文章 [6]、[7] 相較之下，不論網路的流量為低或高，我們找到一條
能可行之路徑和可用之伺服器的平均時間都是最短的，其原因為我們能藉由查詢殘留路徑
矩陣(Residual Path Matrix, RPM)、最大殘留容量矩陣(Maximum Residual Capacity Matrix, 
MRCM)與SRM，一條可行的路徑和可用的伺服器便能夠快速地找到。 
 
圖 4-6 SW(T)為0.7時找到一條可行的路徑與可用之伺服器的平均時間 
5 結論 
在這篇文章中，我們提出一個在DiffServ網路下能整合Anycast 於網路層與應用層的通
訊協定。路徑選擇演算法(Path Select Algorithm)的想法是以殘留網路的概念，此方法就是透
過各台路由器所儲存的連結狀態資料庫(Link State Database)來完成的。路徑選擇運算法的
 11 
可供推廣之研發成果資料表 
□ 可申請專利  □ 可技術移轉                                      日期：96年 1月 23日 
國科會補助計畫 
計畫名稱：在 DiffServ 網路中使用整合 Anycast 路由技術達到端
點對端點服務品質的研究 
計畫主持人： 徐武孝 
計畫編號：NSC 94－2213－E－130－021－ 學門領域：資訊學門一(EA) 
技術/創作名稱 使用於 DiffServ網路之 Anycast路由技術 
發明人/創作人 徐武孝 
中文： 
在 Anycast 網路層的技術方面，為了要做路徑選擇，我們提出的方
法為使用剩餘容量(Residual Capacity)的概念，以便選擇出所有符合
客戶端頻寬需求的路徑，達到 QoS的服務。在 Anycast 應用層的
技術方面，我們提出的方法為使用伺服器資源管理者（Server 
Resource Manager, SRM）來管理所有伺服器，並且選出最適合的伺
服器給使用者。 
技術說明 
英文： 
To perform a path selection algorithm, the proposed protocol uses the 
idea of residual capacity to select all paths which match the client 
bandwidth requirement. To perform the server selection process, each 
server resource manager (SRM) uses server weight of each server to 
select a best server that has sufficient capacity for the client request. 
可利用之產業 
及 
可開發之產品 
具有 Anycast技術的 IPTV伺服器或 DNS伺服器 
技術特點 
1. 能快速找出符合用戶端需求的路徑，增加現有網路通訊的效率 
2. 能快速找出符合用戶端需求的伺服器，以提供用戶端端點到端
點的服務品 
3. 平衡各伺服器的負擔，避免某些伺服器負擔過重的情形 
4. 可以避免伺服器或SRM發生單一節點當機（Single point of 
failure）的情況 
 
推廣及運用的價值 
現今的網路服務越來越多元化，使用的需求也越來越高，需要多台
伺服器一起運作，才能達到眾多使用者的需求。此情況就需要運用
此技術，快速尋找符合使用者需求的傳送路徑，和適合的伺服器，
並且還達到 QoS的服務。 
 
