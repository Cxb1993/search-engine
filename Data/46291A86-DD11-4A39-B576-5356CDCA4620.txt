 2
 
英文摘要 
In order to provide quality delivery to delay-sensitive applications such as voice and video in 
the next generation wireless networks, it is imperative that mobile ad-hoc networks (MANETs) 
have to support quality-of-service (QoS) so that bandwidth and delay requirements can be 
guaranteed. Thus far, providing QoS in MANETs is still a challenge, because dynamic topology 
and shared wireless medium should be taken into account, in addition to QoS constraints. They 
will bring about the following problems to be resolved: First, an estimation method that can 
calculate the available bandwidth in a shared wireless channel environment and the end-to-end 
delay in an unsynchronized environment, accurately; Second, a distributed routing algorithm that 
can adapt to dynamic environments; Third, a resource reservation mechanism that can guarantee 
required resources; Fourth, an efficient and effective route recovery method. 
Dynamic topology of a MANET is another challenge for designing QoS routing protocols. 
The state information continuously changes due to load fluctuation. So it is imperative for a QoS 
routing protocol to gather the up-to-date state information in a dynamic environment. No matter 
what methods are adopted to gather the up-to-date state information, they rely heavily on local or 
global broadcasting. In the second year of this project, we propose an efficient and reliable MAC 
layer broadcast protocol that can support the exchange of neighborhood information and the 
flooding of route discovery as well. Neighborhood information concerning local topology, traffic 
and mobility is crucial to bandwidth estimation.  
 
Keywords: MANETs, QoS, resource reservation, routing  
 
一、前言 
The people’s future living environments are emerging, based upon information resource 
provided by the connections of various communication networks for users. New small devices 
like Personal Digital Assistants (PDAs), mobile phones, handhelds, and wearable computers 
enhance information processing and accessing capabilities with mobility. Moreover, traditional 
home appliances, e.g., digital cameras, cooking ovens, washing machines, refrigerators, vacuum 
cleaners, and thermostats, with computing and communicating powers attached, extend the field 
to a fully pervasive computing environment [1]. With this in view, modern technologies should 
be formed within the new paradigm of pervasive computing, including new architectures, 
standards, devices, services, tools and protocols. 
A pervasive computing environment can be expected based on prestigious infrastructured 
wireless networks and novel infrastructureless mobile ad-hoc networks (MANETs). A MANET is 
an autonomous system of mobile hosts (nodes) connected by wireless links. The union of the 
mobile hosts forms a communication network modeled in the form of an arbitrary communication 
topology. All communication is done over wireless media, typically by radio through the air, 
without the help of wired base stations. This is in contrast to the well-known single-hop cellular 
 4
guaranteed approximation ratio is also suggested. Then a reliable and efficient MAC layer 
broadcast protocol, named Broadcast Protocol with Busy Tones (BPBT), is proposed. Finally, 
BPBT is compared with previous protocols for performance evaluation by simulation. 
三、文獻探討 
Many broadcast protocols that are devoted to the network layer have been proposed in the 
literature [13-25]. The primary goal of them is to reduce the total number of retransmissions 
needed to reach all nodes in the network. In [26], they have been categorized into four families: 
Simple Flooding [13], [14], Probability Based Methods [15], Area Based Methods [15], [16] and 
Neighbor Knowledge Methods [17-25]. Simple Flooding requires each node to rebroadcast all 
packets. Probability Based Methods use some basic understanding of the network topology to 
assign a probability to a node to rebroadcast. Area Based Methods assume nodes have common 
transmission distances; a node will rebroadcast only if the rebroadcast will reach sufficient 
additional coverage area. Neighbor Knowledge Methods maintain state on their neighborhood, 
via “Hello” packets, which is used in the decision to rebroadcast. 
The execution of these network layer broadcast protocols relies heavily on a reliable and 
efficient MAC layer broadcast. The IEEE 802.11 MAC [27] utilizes an RTS/CTS/Data/ACK 
(Acknowledgment) procedure to account for the hidden terminal problem when unicasting 
packets. However, the RTS/CTS/Data/ACK procedure is too cumbersome to implement for 
broadcast packets as it would be difficult to coordinate and bandwidth expensive. Therefore, the 
only requirement made for broadcasting nodes is that they assess a clear channel before 
broadcasting. Unfortunately, clear channel assessment does not prevent collisions from hidden 
nodes. Additionally, no recourse is provided for collision when two neighbors assess a clear 
channel and transmit simultaneously. Consequently, the increasing probability of lost packets 
may deteriorate the quality of network layer broadcasts. 
Some MAC layer broadcast protocols are proposed for improving the reliability of network 
layer broadcasts. They include BSMA [28], BMW [29], BMMM [30], LAMM [30], and others 
(see [31-33]). In [28], BSMA extended the IEEE 802.11 control frames: RTS, CTS and Negative 
AcKnowledgement (NAK), to enhance the reliability. However, BSMA was not able to 
coordinate the transmission of CTS frames, which brought about a serious problem: the collision 
of CTS frames. The broadcast protocols proposed in [29-32] worked around the collision problem. 
Although they could avoid the collision problem, they induced another problem, the hidden 
terminal problem, at the same time. They are briefly described below. 
Each CTS frame in unicast not only notifies a sender that the intended receiver of it is ready 
to receive data packets, but also prevents hidden terminals from transmission. However, in order 
to avoid the collision of CTS frames in broadcast, CTS frames are either transmitted at different 
times [30], or replaced with a CTS frame from a leader node [29], [32]. Both methods fail to 
prevent hidden terminal from transmission. The broadcast protocol proposed in [31] used 
different method to avoid the collision problem. It also fails to prevent hidden terminals from 
transmission. 
The collision problem was solved in [33] by using a tone to signal a NAK or NCTS (Negative 
 6
are required to send beacons to their neighbors. We intend to develop a cross-layer approach to 
minimize the completion time. The MANET can be conveniently represented by an undirected 
graph G=(V, E), where each vertex in V uniquely corresponds to a node and each edge (u, v) in E 
denotes that u and v are two neighboring nodes. Assume that the time axis is divided into 
continuous time slots, denoted by si, where i≥0. The problem is further explained as follows. 
Let V’ ⊂ V be the set of nodes that are required to send beacons to their neighbors, S={s0, s1, 
s2, …}, and T be a mapping from V’ to 2S (the power set of S). The meaning of T is as follows: 
T(u) ∈ 2S contains si if and only if u broadcasts a beacon at the beginning of si. Also let NG(w) 
denote the set of neighboring nodes of w in G. T is feasible if for every w ∈ V and every p ∈ 
(NG(w) ∪ {w}) ∩ V’, there exists a time slot si such that si ∈ T(p) but si ∉ T(q) for all q ∈ ((NG(w) ∪ 
{w}) ∩ V’) – {p}. Such a feasible T can assure every node in V of receiving beacons from all its 
neighboring nodes in V’. Also we note that T(p) and T(q) are not a subset of each other. The 
problem is to determine an optimal feasible mapping, denoted by T*, so that max{i: si ∈ T*(u) for 
some u ∈ V’} is minimized. Since S is infinite, T* surely exists. 
 
THEOREM 1. The problem of determining T* is NP-hard. 
Proof. To prove this theorem, we reduce an NP-complete problem, i.e., the 3-coloring problem, to 
our problem. Given an undirected graph G=(V, E), the 3-coloring problem inquires if the vertices 
of G can be assigned with three distinct colors so that no two adjacent vertices have the same 
color [41]. In other words, we want to determine if there exists a feasible mapping F from V to {0, 
1, 2} so that F(u)≠F(v) for all (u, v) ∈ E.  
Suppose that G=(V, E) is an arbitrary instance of the 3-coloring problem. The following is a 
reduction from G to an instance, denoted by Gb=(Vb, Eb) and 'bV , of our problem, where 
'
bV ⊂ Vb 
is a collection of nodes that are required to broadcast beacons.  
z Vb=V ∪ M, where mu,v ∈ M if and only if (u, v) ∈ E. 
z 'bV =V. 
z Eb={(u, mu,v), (mu,v, v): for all (u, v) ∈ E}. 
Figure 1 illustrates the reduction by an example. Let v*=max{i: si ∈ T*(u) for some u ∈ 'bV }. 
Then, v* < 3 if and only if there exists a feasible F for G, as explained below. 
When v* < 3, T*(u) ∈ {{s0}, {s1}, {s2}, {s0, s1}, {s0, s2}, {s1, s2}, {s0, s1, s2}} for all u ∈ 'bV . 
Since T* is feasible, T*(u) and T*(v) are not a subset of each other for all (u, v) ∈ E. Hence, if 
T*(u)={s0, s1, s2}, then u must be isolated in G (i.e., the degree of u is zero). If T*(u)={s0, s1}, then 
T*(v) ∈ {{s2}, {s0, s2}, {s1, s2}} for all (u, v) ∈ E. The discussion is similar for other T*(u). A 
feasible F for G can be determined as follows. F(u)=0 if T*(u) ∈ {{s0}, {s0, s1}}, F(u)=1 if T*(u) 
∈ {{s1}, {s1, s2}}, and F(u)=2 if T*(u) ∈ {{s2}, {s0, s2}}. F(u) can be any if T*(u)={s0, s1, s2}. 
 8
  begin 
  T(u)  ←  {st}; 
  U  ←  U – {u}; 
   end; 
 end; 
output(T(u)) for all u ∈ V’; 
output(t). 
In the algorithm above, the outer while-loop considers time slots, sequentially, starting at s0. 
The inner for-loop schedules as many nodes in V’ as possible at the time slot st so that no 
collision will happen. Each node u ∈ V’ can be scheduled at st if all of its neighboring nodes are 
ready (or st was not occupied by any of its neighboring nodes in G’). We note that each T(u) 
contains only one time slot, i.e., |T(u)|=1 for all u ∈ V’. It is not difficult to see that the final T is 
feasible and the final t gives the value of max{i: si ∈ T(u) for some u ∈ V’}. For the example of 
Figure 2, if the nodes in V’ are examined in the sequence of 2, 4, 5 and 6, then a feasible T will be 
generated as follows: T(2)={s0}, T(4)={s1}, T(5)={s2} and T(6)={s3}. The value of max{i: si ∈ 
T(u) for some u ∈ V’} (or the final t) is equal to 3. 
Let ∆(G) be the maximum degree [42] of G, i.e., ∆(G)=max{|(NG(w)|: for all w ∈ V}. Also 
define MB(G, V’)=max{|(NG(w) ∪ {w}) ∩ V’|: for all w ∈ V}. An intuitive meaning of MB(G, V’) 
is explained as follows. Let us consider NG(w) ∪ {w} the neighborhood of w, and so |(NG(w) ∪ 
{w}) ∩ V’| gives the number of nodes in this neighborhood that are required to broadcast. MB(G, 
V’) then takes the maximum of |(NG(w) ∪ {w}) ∩ V’| among all nodes w of V. In the following, 
two lemmas are introduced that suggest a lower bound on the value of max{i: si ∈ T*(u) for some 
u ∈ V’} and an upper bound on the value of max{i: si ∈ T(u) for some u ∈ V’}. By their aid, an 
approximation ratio can be obtained. 
 
Lemma 1. The value of max{i: si ∈ T*(u) for some u ∈ V’} is bounded below by MB(G, V’) – 1. 
Proof. Suppose w ∈ V and p ∈ (NG(w) ∪ {w}) ∩ V’. Since T* is feasible, there exists a time slot si 
such that si ∈ T*(p) and si ∉ T*(q) for all q ∈ ((NG(w) ∪ {w}) ∩ V’) – {p}. In other words, T* uses at 
Figure 2. An example of (a) G2 and (b) G’.
 10
general broadcast problem. Besides, no collision will happen. Surprisingly, moderate collision may 
reduce the completion time of the general broadcast problem. Refer to Figure 3, where V={v0, v1, 
v2, 1, 2, 3, 4, 5, 6, 7}, V’={v0, v1, v2}, D0={1, 2, 5}, D1={3, 4, 7} and D2={3, 4, 6}. If the 
approximation algorithm of Section 3.2.1 is applied, a feasible T with T(v0)={s0}, T(v1)={s1} and 
T(v2)={s2} will be obtained which has max{i: si ∈ T(vj) for some vj ∈ V’}=2. However, there 
exists another feasible T’ with T’(v0)={s0, s1}, T’(v1)={s0} and T’(v2)={s1}, which causes max{i: 
si ∈ T’(vj) for some vj ∈ V’}=1. Although T’ causes collision, it reduces the completion time. It is 
because moderate collision may enhance the spatial reuse of bandwidth. In the algorithm 
proposed in Section 3.2.1, although no collision will happen, the spatial reuse of bandwidth is also 
degraded. 
When a sender broadcasts data packets to intended receivers, collision will happen at 
receiving and non-ready nodes. Collision at a receiving node costs highly because it brings about 
more retransmissions. In order to avoid such inefficiency, the sender had better deferred its data 
transmission if one of its intended receivers is receiving. With this thought, we design the 
following algorithm to generate a feasible T for the general broadcast problem. The algorithm is 
indeed a modification of the previous one in Section 3.2.1. Unlike the former T, the newly 
generated T may induce collision. Besides, each T(vj) may contain more than one time slot. 
t  ←  –1; 
set T(vj) empty for all vj ∈ V’;  
U  ←  V’; 
while  U is not empty  do 
 begin   
  t  ←  t + 1;  
  for  each vj ∈ U  do 
  if  each vx ∈ NG(vj) is not receiving and there exists  
  one ready vy ∈ Dj  then  
  begin 
  T(vj)  ←  T(vj) + {st}; 
  Dj  ←  Dj – {vr: vr ∈ Dj and vr is ready}; 
  if  Dj is empty  then  U  ←  U – {vj}; 
   end; 
 end; 
output(T(vj)) for all vj ∈ V’; 
output(t). 
Similarly, the outer while-loop considers time slots sequentially, and the inner for-loop 
schedules as many nodes in V’ as possible at the current time slot. A node vj ∈ V’ can be 
scheduled at the current time slot if none of its neighboring nodes is receiving and one or more of 
its intended receivers are ready. A node vx ∈ NG(vj) is receiving at st if there exists vz so that st ∈ 
T(vz), vx ∈ Dz and vx ∉ NG(vp) for all vp≠vz with st ∈ T(vp). A node vy ∈ Dj is ready at st if vy ∉ NG(vq) 
for all vq≠vj with st ∈ T(vq). The final T is feasible and the final t gives the value of max{i: si ∈ 
 12
for broadcasting, but also assigns a waiting time WTj to uj, for all intended receiver uj ∈ Di. The 
waiting times of all intended receivers are different to each other. The use of the waiting time is to 
schedule the acknowledgements of data packets. 
When an intended receiver receives the RTS frame, it turns on its busy tone signal, replying to 
the sender and announcing that it is waiting for the incoming data packet. When the sender senses 
the busy tone signal (which means that one or more of its intended receivers are ready), it knows 
that its broadcast request has been successful. It waits a mandatory waiting time tmw=2τ, where τ 
is the maximum propagation delay between two neighboring nodes [45]. After the mandatory 
waiting time expiring, the sender broadcasts the data packets. The mandatory waiting time is 
meant to allow all possible RTS transmissions in the range of an intended receiver to be aborted. 
It can avoid RTS packets sent from some hidden node to collide with data packets. 
We give an extreme example to explain the use of the mandatory waiting time. Assume that 
the propagation delay between a sender vi and an intended receiver uj is zero, and the propagation 
delay between uj and a hidden node w from vi is τ. When uj receives the RTS frame correctly at 
time t0, uj turns on its busy tone signal at time t0. Since the propagation delay between vi and uj is 
zero, vi can sense the busy tone signal at time t0 and will broadcast the data packets at time t0+tmw. 
So the time of data packets arriving at uj is t0+tmw. On the other hand, the hidden node w senses the 
busy tone signal at time t0+τ because the propagation delay between w and uj is τ. Then w aborts 
the active RTS transmission at time t0+τ and the data channel at uj is busy until time t0+2τ. 
Therefore, in order to avoid the aborted RTS to collide with data packets received at uj, tmw should 
be assigned to 2τ. 
By the end of data transmission, the sender continuously monitors the busy tone channel in a 
time period WTack for the acknowledgements replied from its intended receivers. Upon successful 
reception of the data packet, for all intended receiver uj ∈ Di, uj turns off the busy tone signal and 
waits for a time period WTj. After the time expiring, then uj turns on the busy tone during a short 
time interval ta to acknowledge the broadcasts data frames. In order to provide continuous 
protection for the acknowledgements, the sender continuously transmits the noise packets during 
the time period WTack. The noise packets can avoid some nodes, that are neighboring to vi and not 
belong to Di, to receive a RTS frame from other senders and turn on their busy tone. Figure 4 
shows the time diagram of BPBT. 
Considering the propagation delays between the sender and all of its intended receivers are 
different. The value of WTack and WTj for all uj ∈ Di should be calculated carefully. Assume that 
the sender vi ends the data transmission at time t0. The latest time of busy tone signals for 
protecting data packets arriving at vi may be t0+2τ. So the acknowledgements of data packets should 
be replied during the time interval from t0+2τ to t0+WTack. In order to schedule the 
acknowledgements, the time interval from t0+2τ to t0+WTack can be divided into k equal parts. The 
sender can wait each acknowledgement in each part. Assume that the acknowledgement of the 
intended receiver u1 should be arrived at the first part. If the propagation delay between u1 and vi is 
zero, the time of the acknowledgement arriving at vi is t0+WT1. If the propagation delay between u1 
and vi is τ, the time of the acknowledgement arriving at vi is t0+2τ+WT1. Therefore, the first part 
should be [t0+WT1, t0+2τ+WT1+ta]. Since the beginning of the first part is t0+2τ, the first part is 
 14
In our simulation experiments, a MANET of N nodes which were randomly spread in a 
400m×400m area was simulated, where N is a parameter. Nodes were free to move anywhere 
within this area. The radio transmission range of each node was assumed 80 meters. The time 
axis was divided into continuous time slots and events happened at the beginning of time slots. 
The transmission time for a data frame (a control frame) is 100 time slots (5 time slots). We 
assume that τ and ta are 1 time slot. The simulation continued for 50000000 time slots. The 
mobility model was as follows. First each node randomly decided to take a migration or rest. If it 
decided to migrate, it would travel towards a random spot with a constant speed that was 
randomly determined from 2 to 8 meters per 50000 time slots. If it decided to rest, it would 
randomly choose a rest period from 3000000 to 15000000 time slots. When it finally reached the 
spot or exhausted the rest period, it would decide to migrate or rest again. 
Figure 5. Average processing times of periodical beacons 
with different values of N. 
Figure 6. Average processing times of periodical beacons
with different beacon intervals. 
 16
problem because the MANET is almost static for the average processing time in our mobility 
model. However, the consuming time to carry the cumbersome handshaking procedure out is 
long. The states of neighboring nodes may change due to other broadcasting transmissions. The 
stale states result in a wrong decision of transmission. The performance of BMW is the worst one 
of all due to serious collisions. This is because only one neighboring node would be demanded to 
reply CTS. The hidden terminal problem in BMW is more serious than in BMMM. 
 
(二) Alarm Signals to All Nodes 
Some nodes were asked to broadcast packets to all nodes by flooding. The broadcast 
frequency was assumed once per 10000 time slots. That is, one node was randomly selected to 
broadcast every 10000 time slots. The number of retransmissions (retry count) for each sending 
node was at most three, even if not all intended receivers had received the broadcast packets. 
Performance metrics we adopted were the broadcast flooding fraction and the average processing 
time of all broadcast requests. The broadcast flooding fraction is the ratio of the number of nodes 
having the broadcast packets to the total number of nodes. Since the transmission range of each 
node and the area of the MANET are constant, the diameter of the MANET is constant and would 
not be the dominating factor of the average processing time. Figure 7 and Figure 8 compared the 
broadcast flooding fraction and average processing time, respectively, with respect to BPBT, 
BMW and BMMM when the value of N varied. BPBT was superior to BMW and BMMM in 
both metrics because BMW and BMMM had more frequent collisions. In fact, average 
processing times of BMW and BMMM will grow exponentially if the retry count is unlimited. 
 
(三) Multicasting Video Streams 
There were three multicast groups whose source nodes and multicast members were not 
changed throughout the simulation. Each source node was asked to transmit multicast packets to 
Figure 9. Packet delivery rates of multicasting video  
streams with different packet arrival rates. 
 18
[5] C. Zhu and M. S. Corson, “Bandwidth calculation in a TDMA-based ad hoc network,” ISR 
Technical Reports, CSHCN 2000-47, 2000. 
[6] W. H. Liao, Y. C. Tseng, and K. P. Shih, “A TDMA-based bandwidth reservation protocol 
for QoS routing in a wireless mobile ad hoc network,” IEEE International Conference on 
Communications (ICC), pp. 3186-3190, May 2002. 
[7] Y. S. Chen, Y. C. Tseng, J. P. Sheu, and P. H. Kuo, “An on-demand, link-state, multi-path 
QoS routing in a wireless mobile ad-hoc network,” Computer Communications, vol. 27, pp. 
27-40, January 2004. 
[8] Q. Xue and A. Ganz, “Ad hoc QoS on-demand routing (AQOR) in mobile ad hoc 
networks,” Journal of Parallel and Distributed Computing, vol. 63, pp. 154-165, February 
2003. 
[9] C. H. Hsu, Y. L. Kuo, H. K. Wu, and G. H. Chen, ”QoS routing in mobile ad hoc networks 
based on the enhanced distributed coordination function,” Proceedings of the IEEE 
Vehicular Technology Conference (VTC),  pp. 2663-2667, September, 2004. 
[10] R. Sivakumar, P. Sinha, and V. Bharghavan, “CEDAR: a core-extraction distributed ad hoc 
routing algorithm,” IEEE Journal on Selected Areas in Communications, vol. 17, pp. 
1454-1465, August 1999. 
[11] J. Broch, D. A. Maltz, D. B. Johnson, Y. C. Hu, and J. Jetcheva, “A performance 
comparison of multi-hop wireless ad hoc network routing approach,” Proceedings of the 
ACM/IEEE international conference on Mobile computing and networking (MOBICOM), 
pp. 85-97, October 1998. 
[12] S. R. Das, C. E. Perkins, and E. M. Royer, “Performance comparison of two on-demand 
routing protocols for ad hoc networks,” Proceedings of the IEEE Conference on Computer 
Communications (INFOCOM), pp. 26-30, March 2000. 
[13] C. Ho, K. Obraczka, G. Tsudik, and K. Viswanath, “Flooding for reliable multicast in 
multi-hop ad hoc networks,” Proceedings of the International Workshop on Discrete 
Algorithms and Methods for Mobile Computing and Communication (DIALM), pp. 64-71, 
1999. 
[14] J. Jetcheva, Y. Hu, D. Maltz, and D. Johnson, “A simple protocol for multicast and 
broadcast in mobile ad hoc networks,” Internet Draft: draft-ietf-manet-simple-mbcast-01.txt, 
July 2001. 
[15] Y. C. Tseng, S. Y. Ni, Y. S. Chen, and J. P. Sheu, “The broadcast storm problem in a 
mobile ad hoc network,” ACM/Baltzer Wireless Network, vol. 8, no. 2/3, pp. 153-167, 
March, 2002. 
[16] M. T. Sun, W. C. Feng, and T. H. Lai, “Location aided broadcast in wireless ad hoc 
networks,” Proceedings of the IEEE Conference on Global Telecommunications 
(GLOBECOM), pp. 2842-2846, 2001. 
[17] H. Lim and C. Kim, “Multicast tree construction and flooding in wireless ad hoc networks,” 
Proceedings of the 3rd ACM International Workshop on Modeling, Analysis and Simulation 
of Wireless and Mobile Systems (MSWIM), pp. 61-68, August, 2000. 
[18] W. Peng and X. Lu, “On the reduction of broadcast redundancy in mobile ad hoc 
 20
93-97, May, 2003. 
[34] G. Calinescu, I. Mandoiu, P. J. Wan, and A. Zelikovsky, “Selecting forwarding neighbors in 
wireless ad hoc networks,” ACM Mobile Networks and Applications, vol. 9, no. 2, pp. 
101-111, April, 2004. 
[35] W. Liang, “Constructing minimum-energy broadcast trees in wireless ad hoc networks,” 
Proceedings of the 3rd ACM International Symposium on Mobile Ad Hoc Networking and 
Computing (MOBIHOC), pp. 112-122, June, 2002. 
[36] S. J. Lee, M. Gerla, and C. C. Chiang, “On-demand multicast routing protocol,” 
Proceedings of the IEEE Wireless Communications and Networking Conference (WCNC), pp. 
1298-1302, September, 1999. 
[37] J. J. Garcia-Luna-Aceves and E. L. Maddruga, “The core-assisted mesh protocol,” IEEE 
Journal on Selected Areas in Communications, vol. 17, no. 8, pp. 1380-1394,  August, 
1999. 
[38] I. Chlamtac and S. Kutten, “On broadcasting in radio networks – problem analysis and 
protocol design,” IEEE Transactions on Communications, vol. 33, no. 12, pp. 1240-1246, 
December, 1985. 
[39] C. Perkins and P. Bhagwat, “Highly dynamic destination-sequenced distance vector routing 
(DSDV) for mobile computers,” Proceedings of the ACM Special Interest Group on 
Communications (SIGCOMM), pp. 233-244, October 1994. 
[40] C. W. Wu and Y. C. Tay, “AMRIS: a multicast protocol for ad hoc wireless networks,” 
Proceedings of the IEEE Military Communications Conference (MILCOM), pp. 25-29, 
October, 1999. 
[41] C. H. Padadimitriou, Computational Complexity, Wesley, 1995. 
[42] D. B. West, Introduction to Graph Theory, Prentice Hall, second edition, 2001. 
[43] R. P. Grimaldi, Discrete and Combinatorial Mathematics, Wesley, fifth edition, 2004. 
[44] V. V. Vazirani, Appromixation Algorithms, Springer, 2001. 
[45] Z. J. Haas and D. Jing, “Dual busy tone multiple access (DBTMA) – a multiple access 
control scheme for ad hoc networks,” IEEE Transactions on Communications, vol. 50, no. 6, 
pp. 975-985, June, 2002. 
[46] S. L. Wu, Y. C. Tseng, and J. P. Sheu, “Intelligent medium access for mobile ad hoc 
networks with busy tones and power control,” IEEE Journal on Selected Areas in 
Communications, vol. 18, no. 9, pp. 1647-1657, September, 2000. 
[47] F. Tobagi and L. Kleinrock, “Packet switching in radio channels: part II – the hidden 
terminal problem in carrier sense multiple-access modes and the busy-tone solution,” IEEE 
Transactions on Communications, vol. 23, no. 12, pp. 1417-1433, December, 1975. 
七、計畫結果自評 
Network layer broadcasts, such as periodical beacons, alarm signals to all nodes, route 
discovery in on-demand routing, and multicasting video streams, are key services for MANETs. 
They provide important control and route establishment functionality for a number of unicast and 
multicast protocols. In order to optimize the performances of network layer broadcasts, they 
