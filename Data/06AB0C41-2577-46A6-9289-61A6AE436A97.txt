  
中文摘要 
近幾年來，隨著科技的不斷進步，數位
影像的應用已愈來愈普遍，在數位影像的傳
輸與儲存的應用上，低位元率壓縮方式是必
然的，目前有許多影像壓縮技術被提出，其
中小波轉換提供了最佳影像編碼的應用，小
波轉換(Discrete wavelet transform, DWT)因
為具有將訊號分解成不同頻帶的多重解析特
性，而被應用在多重解析度的訊號分析上，
在 DWT 轉換的基礎下，EZW 廣泛應用在影
像壓縮上，且嵌入式小波影像壓縮編碼都具
備漸進式傳輸，精確性控制編碼長度及容錯
等優點。另外，嵌入式影像處理可應用於即
時壓縮系統，離散小波轉換與嵌入式零樹小
波編碼也因為高壓縮率的特性，相當適合應
用在低位元率的影像壓縮，而受到了相當程
度的重視。 
然而，在現有的漸進式影像傳輸的演算
法中，大部分都不適合硬體實現，主要原因
是由於記憶體需求量的龐大，本計劃提出
Embedded Zreotree Wavelet 演算法及修改過
EZW 演算之硬體架構，其有規律性、模組
性、擴充性等優點，修改過的 EZW 硬體架
構較原始 EZW 架構減少大量記憶體需求，
其效能與原始之架構相去不遠。我們所提出
來的架構，採用 UMC 0.18um 標準元件庫來
合成其電路，Modified EZW 編碼電路所需邏
輯閘數(Gate Counts)為 3545，處理器的工作
頻率超過 450MHz。 
關鍵詞：小波轉換、漸進式傳輸、嵌入式零
樹小波編碼 
 
Abstract 
With the improvement of the science and 
technology, the usage of digital image is more 
popular and convenient in the recent years. To 
lower the amount of transmitted data, 
low-bit-rate compression is then necessary in 
image transmission and storage. There are 
several techniques of image coding being 
mentioned so far, and among them, the wavelet 
transform achieves the best compression 
results. Wavelet transform can be considered as 
a multi-resolution signal analysis, which 
decomposes a signal into its components in 
different frequency bands. On the basis of 
wavelet transform, the embedded zerotree 
wavelet (EZW) is widely used in the image 
compression. The EZW compression technique 
provides several superior properties like 
progressive, coding-length-control, and fault 
tolerance such that it can be applied for 
real-time compression systems. Nevertheless, 
the conventional progressive image coding 
notoriously is costly and memory-consuming. 
The project proposes that Embedded Zreotree 
Wavelet algorithm and the architecture of the 
modified EZW algorithm have the properties 
of regularity, modularity, and scalability, and 
also possess the functionality of the original 
EZW algorithm. The modified EZW 
architecture needs less memory units than the 
original one, while the functionality remains as 
effective as the original architecture. The 
design has been synthesized on Synopsys 
Design Compiler with the standard cell from 
UMC 0.18um cell library. The layout for the 
design was generated with the Avant! tools, 
Apollo (for floorplan, placement and routing). 
It core size and gate count are about 
1173×1109 mm2 and 3545, respectively, for an 
image size with 256×256 pixels. The critical 
path delay is only 2.1427 ns, leading to an 
operating frequency of more than 450MHz. 
Keywords: Discrete Wavelet 
Transform(DWT), Progressive Transmission, 
Embedded ZeroTree DWT. 
I
 2 
輸入值 HPF(2n-2)經由乘、加運算後得到，
如圖 2： 
HPF
(-2,3)
HPF
(-2,2)
HPF
(-2,1)
HPF
(-2,0)
HPF
(1,3)
HPF
(1,2)
HPF
(1,1)
HPF
(1,0)
HPF
(2,1)
HPF
(2,0)
HPF
(0,3)
HPF
(0,2)
HPF
(0,1)
HPF
(0,0)
HPF
(-1,3)
HPF
(-1,2)
HPF
(-1,1)
HPF
(-1,0)
 
圖 2  行轉換所需值之示意圖 
 
由於 HPF(2n)、HPF(2n-1)及 HPF(2n-2)彼此
之間產生的時間都相差了 N 個時脈週期，因
此若直接實現的話，則需要 2N 個暫存器來
儲存行的輸入值。為了減少輸入的暫存器，
我們將(3)及(4)式展開成： 
HH(n)=HPF(2n-1)+α×HPF(2n-2)+α×HPF(2n) (7) 
HL(n)=HPF(2n-2)+β×HH(n-1)+ β×HH(n) (8) 
由(7)式中，我們在 HPF(2n-1)產生的時候，
便先運算 HPF(2n-1)+α×HPF(2n-2)的值，並
回存入 HPF(2n-2)的暫存器內，我們將其將
其結果表示為 PH(n)，即： 
PH(n)= HPF(2n-1)+α×HPF(2n-2) (9) 
如此只要等 HPF(2n)產生時，我們只需執行
PH(2n)+α×HPF(2n) 即可得到垂直方向的
HH(n)，此作法可以減少 N 個暫存器。相同
的作法我們也可應用在(8)式上，當 HPF(2n-2)
產生的時候，便先運算 HPF(2n-2)+β×HH(n-1)
的值，並回存到儲存 HH(n-1)的暫存器內，
我們將其結果表示為 UH(n)，即： 
UH(n)=HPF(2n-2)+β×HH(n-1) (10) 
等到 HH(n) 產生時，只需計算 UH(n)+ 
β×HH(n)，便可以得到 HL(n)的值。同理，式
(5)、(6)亦可展開，計算其中的 LPF(2n-1)+ 
α×LPF(2n-2)與 LPF(2n-2)+β×LH(n-1)的值，
並分別定義為 PL(n)及 UL(n)，等所需的
LPF(2n)與 LH(n)產生時，我們便可得到 LH(n)
與 LL(n)，而經過如此的推導後，除了可完
成行與列共同的運算外，更可將原本硬體所
需的 1 個乘法器與 2 個加法器，縮減為 1 個
乘法器、1 個加法器，達到節省硬體成本的
效果。 
原始 EZW 演算法中有輸入資料方式、
排序與精確化上的缺點，所以我們改變原始
EZW 演算法中搜尋方式。影像經過 DWT 轉
換之後，在最低頻頻帶(LL3)通常是影像最重
要的部分，所以我們將最低頻帶係數直接送
出，不做任何 EZW 編碼。 
我們改變原本編碼輸出方式，將一個 bit 
plane 的資料輸入後，直接對父與子孫係數編
碼送出符號，不再將子孫係數儲存暫存器，
編碼完後再將下一個 bit plane 的資料輸入編
碼。在排序時不需儲存子孫係數之輸出符
號，減少在排序上的時間與硬體成本。 
在原始的 EZW 排序搜尋重要係數後，
才將重要係數再一次精確化，所以在發現重
要係數時，則需記錄重要係數之位址。而在
我們所設計的 EZW 中，當排序時可以從係
數判斷是否之前已編碼過，假設係數大於等
於臨界值並且小於二倍臨界值，表示前幾回
合中非重要係數而在此回合為重要係數，但
如果係數大於等於二倍臨界值表示在前幾回
合中己是重要係數，在排序動作無需編碼，
但在精確化動作中需要再一次精確化，所以
在我們所設計的 EZW 中不需記錄重要係數
之位址。 
雖然在上述之方法中無需記錄重要係數
之位址，但在原始 EZW 方法中需要等排序
動作所編碼符號輸出之後，才能將精確化動
作中所編碼的符號輸出。在我們所設計的
EZW 中，不等待所有之排序動作所編碼符號
輸出之後才輸出精確化符號，也就是混合每
一回合的排序與精確化動作，降低暫存器的
使用，減少硬體成本。 
在 EZW 演算法中，需先將一個 bit plane
的樹狀資料輸入暫存後，才可進行編碼，首
先在位址產生時，需要父節點位址 (Root 
address)與一個 bit-plane 產生計數器即可產
生位址，在計數器為 0 時直接將節點位址直
