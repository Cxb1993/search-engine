中文摘要 
本研究接續第一年之研究成果，將所發展出的「網格演化法」對不同階段網格進行誤
差之評估，以期能了解由於網格變動所造成分析結果之影響。由於本研究所提出之網格演
化法將一連續的施工過程分別以最適合該施工階段之幾何形狀的網格分佈進行分析，因此
可有效地降低複雜幾何形狀之網格建置之困難度，並進而降低所需同時求解之自由度的
量。然而，由於有限元素法之求解方法是隱含有誤差的，而且此誤差會與其網格之分割方
式有關。因此，本年度即針對此網格分割造成之誤差進行探討與分析，以期能控制網格演
化法中，由於在不同階段的網格變動所造成分析結果之誤差進行探討；並藉由誤差評估子  
(error estimator) 評估網格之品質，以協助工程師在最短的時間內找出合適的網格分佈並得
到較準確的分析結果。此外，預計將針對深開挖與隧道的工程問題，根據有限元素法的分
析結果計算誤差值，建立起誤差值與實際誤差值之間的關係，期能使工程師能根據可容忍
的實際誤差值建立適當的網格密度。 
而在軟體系統開發方面，本階段重新修改之前的內插程式架構，使用模型-觀點-控制器
(Model-View-Controller, MVC) 之設計模式 (Design Pattern) 來管理內插之程式碼，以增進
程式之擴充性、使用性及維護性，並使用此架構加入一新的內插方法—點位內插法(Point 
Interpolation Method, PIM)，使解映射之方法有更多選擇，期能進而探討不同解映射下品質
與效能。另一方面，本階段亦將 METIS 這套開放原始碼之函式庫整合入作者之前所開發之
平行有限元素分析程式以自動化領域分割之計算分析，使整個平行化有限元素分析系統自
動化。 
關鍵詞: 誤差評估、MVC 架構、點位內插法、METIS、領域分割 
 
英文摘要 
This research continued on researching the “high-performance” computational method in 
geomechanics.  Several a-posteriori error estimators were implemented to understand the error 
associated with meshing in finite element analyses.  Understanding the error associated with 
meshing is important in the proposed “Evolving mesh method”, because the proposed analysis 
procedure uses multiple meshes to model the continuation of constructions, and each mesh may 
introduce numerical errors due to meshing.  As a result, in this term, the error associated with 
meshing in finite element analyses was investigated in order to control the meshing error. 
Numerical error estimators were used in this study in order to objectively evaluate the error 
introduced by finite element meshes.  Several a-posterior error estimators were implemented 
and used in this study.  Furthermore, it was also attempted to correlate the evaluated meshing 
error with the actual error in order to give physical meaning to these a-posterior error estimators.  
If the correlation could be established, engineers would have a powerful tool to evaluate the 
potential error introduced by finite element meshes. 
In the software engineering side, first year’s code was re-architectured, and MVC 
(model-view-controller) was introduced in the code.  By using MVC, the code would be easier 
to maintain, better extensibility, easy extensibility, etc. 
Regarding mesh partitioning, the open source code “METIS” was partially integrated with 
the parallel finite element code developed by the author.  This of integration will enable 
automatically mesh decomposition, which was extremely time consuming and labor intensive. 
一、前言 
網格演化法此一概念乃從有限元素法中之一特殊技巧—網格調整法所演變出來。網格
調整法在處理大變形問題分析上是一個相當直觀的方法。在本計畫第一年度的研究中，網
格演化法的分析流程 (如圖 1) 已被提出。此分析方法主要的概念乃根據不同階段開挖的幾何形
狀，分別產生不同的有限元素網格進行分析，並將每一階段之分析結果，以內插的方式將計算結果
(應力、應變、位移等…) 分別解映射 (solution mapping) 到下一階段所產生新網格元素的節點或積
分點上，此種新分析模式同等於模擬工程在時間上的連續性。如圖 1 所示：1) 初始 i=1；2) 建立
第 1 階段之模型與網格；3) 進行有限元素分析而得到第 i 階段分析結果；4) 從第 i 階段分析結果擷
取其外觀輪廓而得到第 i + 1 階段模型之初始幾何形狀並建立網格；5) 將第 i 階段的計算結果解映
射到第 i + 1 階段之網格上；6) 重覆步驟 3)-5)直至所有步驟分析完為止。 
 
圖 1 網格演化法之分析流程概念 
 
圖 2 (a)為一以平面應變假設進行之深開挖分析模型示意圖及其網格切割方式，圖中之數字表示
開挖順序。目前實務上傳統的大地工程有限元素分析，將所有不同階段的幾何形狀盡納入單一有限
元素網格中，如圖 2 (a)所示，並在分析不同階段時將對應於被挖除材料的有限元素移除，此開挖分
成五個階段完成，以傳統有限元素分析時，網格的產生須包括所有階段的幾何形狀，且必須沿著所
有階段的幾何形狀邊緣，如沿著圖 2 (a)中所有的線條產生網格分割(discretization)。然而在進行計算
時，事實上真正需要細微切割的部份為靠近開挖的網格部份，距離開挖較遠處所需之網格分割可較
為粗糙而不會影響到所得數值解的準確性。因此本研究所提出的網格演化法乃改變此部份的分析流
程而產生此新的方式。以圖 2 (a)之開挖施工順序為例，網格演化法所需考慮的開挖步驟之幾何形狀
及其網格切割步驟如圖 2 (b)~(f)所示，分別表示此開挖的五個階段，而在進行有限元素分析時，根
據步驟(b)階段的幾何形狀產生此階段的有限元素網格，之後根據傳統的有限元素分析模式，進行數
值分析，最後取得第一階段分析結果。若第一階段結果順利求得，則此時將根據第二階段幾何形狀，
先產生第二階段有限元素網格，利用解映射的方式，將第一階段所得結果內插到第二階段的元素節
點或積分點上，如此依序求解有限元素分析、解映射，直到開挖完成或有限元素分析無法平衡為止。 
網格演化法的計算程序上與傳統之網格調整法並無不同，然而本研究以「網格演化法」命名此
分析流程的目的在於避免與網格調整法混淆。傳統上，網格調整法的目的在於調整網格以減少網格
之過度扭曲，並增進解之精確程度；且其調整網格之依據常為有限元素分割誤差之估計。然而，本
研究所提出之網格調整法，其調整依據為各開挖階段之幾何形狀而非網格中的誤差估計，而減少網
格之過度扭曲為網格演化之「副作用」(side effect) 而非主要目的。因此，網格演化法並非一完全
新的分析流程，但是為網格調整法的一個全新應用。 
係。此種模式把資料、使用者介面和要執行的動作分開，並配合上物件導向程式語言的架
構，以增加類別庫之易擴充性、達到 code-reuse 的最大化、增進程式的維護性、並使程式
設計人員在使用該類別庫時可以迅速而方便地使用其提供之功能。在本階段研究中，利用
此新的類別庫架構，加入一內插法—點位內插法 (Point Interpolation Method, PIM ) (劉昌榮 
2006；G.R. Liu, 2003)，使解映射之方法有更多選擇，期能進一步地探討不同解映射方法之
品質與效能。 
 為了降低大規模有限元素分析之計算時間，本研究延伸先前開發之軟體系統，配合電
腦叢集系統使用平行運算之技巧以減少三向度有限元素分析所須計算時間。此平行計算的
方式乃採用無重疊 (non-overlapping) 之領域分解法 (domain decomposition)，然在目前已開
發完成之軟體系統中之領域分解步驟，是採用人工進行之二向度平面分解並配合 extrusion
以完成三向度的有限元素模型之分解。此平面人工分解的方式雖然對於切割出來的子領域 
(subdomain) 形狀與介面性質有較佳的掌握，但相當費工耗時。本研究使用 METIS (參考文
獻) 之公開程式庫，自動化領域分割之步驟，並與先前研究之平行化有限元素分析系統進
行整合，使整個平行化有限元素分析系統自動化。 
 
二、文獻探討 
2.1 分析後誤差評估（a-posteriori error estimation） 
 數值方法的分析前誤差評估（a-priori error estimation）長期以來一直是研究者以數值方
法分析問題必要工作之ㄧ，這些評估在網格參數作適當變化的時候能提供不同分析軟體收
斂性及穩定性的資訊，同時也能提供概略的誤差行為資訊。傳統上進行數值模擬時如果預
測到誤差的存在並不會去量化其值，而是靠研究者的經驗去控制參數以及數值模擬結果的
品質。但依賴研究者的經驗以及分析前對誤差的預測仍有許多不確定因素存在，所以在分
析後針對結果作誤差評估（a-posteriori error estimation）變成一種改進分析品質較可靠的方
式。在有限元素法的分析中，研究者不但會關心主要的求解變數 (如位移)，亦會關心其分
析結果的導數（derivatives）。然而就有限元素法的分析方法而言，其僅能確保在節點上之
主要求解值於不同元素之間的連續性；但並不會保證其計算出之導數不同元素之間能保持
連續性。針對這個問題許多有限元素分析軟體在將最後之導數結果 (如應力與應變) 呈現給
使用者之前會先將不連續的參數作平滑（smooth）的動作，使得使用者能得到連續的分析
結果。在某些條件下，平滑過後的結果會比直接分析的結果有更高的準確性也更接近真解，
評估兩者 (有解元素之直接解與其經平滑過程後之解。而此之間的差即 Recovery-based 誤
差評估方法的基本概念，而如何取得比分析結果更佳的解則是這類方法的重點。 
 為求得最佳應力的位置，因此有超收斂 (Superconvergence) 概念。Barlow (1976) 發現
有限元素中應力解之準確性為位置的函數，某些位置上應力值會較有限元素法收斂至真解
的速度更快。根據 Zienkiewicz 和 Zhu (1992) 兩位學者提出的 SPR (Superconvergent patch 
recovery) 方法一文中，提到各元素較佳應力值的位置如圖 4 所示。 
 在本年度之計畫中，預計將完成以下之應力 Recovery 方法：1) Superconvergent Patch 
Recovery（SPR）、 2)內插方法配合 superconvergence 的概念、 3) Simple Error Estimator for 
Element（SEEELEM）及 4) Simple Error Estimator for Node（SEENode）。其中 SPR 為使用
最小二乘法（least square method）平滑區域內不連續參數的 recovery 方法；使用內插方合
配合 superconvergence 的概念，如變動式最小平方近似法 (Moving least square) MLS 是一種
使用最小二乘法根據已知點代入一假設之基底函數 (basis function) 以求解該基底函數之
圖 5  MVC 架構圖 
 
2.3 METIS 
 METIS 為一套高效率、免費而公開之函式庫，可用來切割網格。1995 年，Karypis and 
Kumar 將領域演算法予以自動化。詳細 METIS 說明可參考 METIS 手冊 4.0 版 (Karypis and 
Kumar,1998)。 
 
三、誤差評估研究方法 
1.決定分析問題(開
挖、隧道)
2.找出分析問題
的收斂解
4.決定關聯特
徵值
5.建立參數與誤差
評估值之關聯
7.判斷合適的
誤差評估方法
3.決定誤差
評估方法
6.改變誤差評估
方法與特徵值  
圖 6  誤差關聯建立流程圖 
本研究針對深開挖與隧道的問題建立誤差評估值與實際誤差值的關係，其建立方式主
要流程如圖 6 所示：1) 決定典型分析問題：由於本研究是針對深開挖與隧道的問題評估誤
差，首先需蒐集國內深開挖與隧道的工程相關案例以了解國內在深開挖與隧道工程的施工
規模與狀況，再決定一個典型的施工規模與尺寸用來代表分析的問題，並利用文獻回顧中
的每個誤差評估方法對其評估誤差；2)決定分析問題的收斂解：為建立每個網格密度分析
結果的實際誤差值（分析結果與真解的差值），我們必須決定有限元素法在此分析問題所能
得到之最佳解（即收斂解）以當作真解，其決定方法為觀察分析問題的特徵值在每一個網
格密度的變化情形。以開挖問題為例，特徵值可包括：最大擋土牆變位、最大擋土牆彎矩、
最大地表角變量、最大地表沉陷量、最大地中變位等，當網格達到一定密度時，上述之特
徵值將維持定量或改變量極小，此網格密度的分析結果即可作為此問題之真解；3)誤差評
估方法與特徵值：圖 4 中 3、4、5、6 步驟為一個將誤差評估值與實際誤差值做關聯的重複
性動作，在本研究中的每一個誤差評估方法所產生的值將會與深開挖問題中的每個特徵值
做關聯，如此在下一個步驟中我們可以判斷哪一個誤差評估方法對哪一個特徵值能得到較
好的誤差預測結果；4)判斷合適的誤差評估方法：建立誤差評估值與實際誤差值的關聯後，
一個特徵值會有來自不同誤差評估方法的數個關聯結果。而理想的關聯結果資料點的分布
集中使得趨勢線可以很容易的被決定，且誤差評估值與實際誤差值的關係為接近線性並通
過原點。線性關係的優點在於每一個誤差評估值所對應到的實際誤差值較為準確，代表此
誤差評估方法在此分析問題與此位置可提供準確的誤差預測。5)建立參數與誤差評估之關
連；6)改變誤差評估方法與特徵植；7)找出合適的誤差評估方法。 
 
四、程式架構 
本研究之程式使用物件導向之程式語言 C++自行開發撰寫。 
4.1 誤差評估程式架構 
 誤差程式之架構主要可分為三個部分，（1）有限元素資料庫程式、（2）誤差評估程式。
第一部分為用來讀取有限元素法分析結果的資訊，並將此資訊做儲存與管理。誤差評估程
式對第一部分所儲存的分析結果做存取，計算誤差。整體程式架構如圖 7 所示。 
  
(a) 元素數量:100 (b) 元素數量:400 
  
(c) 元素數量:900 (d) 元素數量:1600 
  
(e) 元素數量:3600 (f) 元素數量:6400 
  
(g) 元素數量:14400 (h) 元素數量:25600 
圖 10 不同網格密度下之元素相對誤差 
   Max Error  =  L∞-Norm (Error) (即找出所有誤差中之最大值) 
由表 1 可發現二維時 PIM 的誤差與 MLS 都隨取樣點增加而有減少趨勢，且縮減幅度比其
他方法大；在三維時，PIM 與取樣點的多寡關係不大，且誤差的表現遠比其他方法優異。 
表 1  四種不同內插方法均勻與亂數點位之誤差比較 
已知點 100 2500 8100 100 2500 8100 1000 3375 8000 1000 3375 8000
內差點 400 3600 10000 400 3600 10000 1331 4096 9261 1331 4096 9261
IDA 1.40E-01 2.58E-02 1.42E-02 3.40E-01 1.02E-01 5.41E-02 5.11E-01 2.94E-01 2.14E-01 5.08E-01 3.40E-01 1.98E-01
LS 2.27E-01 3.69E-01 3.87E-01 2.28E-01 3.60E-01 3.90E-01 7.48E-01 7.14E-01 7.02E-01 4.94E-01 5.27E-01 5.85E-01
MLS 2.46E-02 3.60E-05 3.32E-06 2.05E-02 8.82E-05 8.75E-06 3.75E-01 1.63E-01 1.07E-01 2.58E-01 1.14E-01 8.09E-02
PIM 3.85E-02 2.17E-06 3.66E-07 1.46E-02 1.72E-05 7.69E-07 2.29E-12 1.02E-12 1.40E-10 6.17E-12 2.98E-12 7.32E-12
3D IDA & LS & MLS Error2D IDA & LS & MLS Error
均勻資料點分佈 亂數資料點分佈 均勻資料點分佈 亂數資料點分佈
 
 
5.3 網格切割成果 
 本研究以一三維度隧道開挖網格為列，使用 METIS 分別分割四個及八個部份，如圖
14 (c) (d)所示，原始網格之切割如圖 14 (a) (b)所示，切割完後之節點及元素數量如表 2，每
部的元素及節點數量約為近似，在用於平行計算上，可達負載平衡之效能。 
  
(a) 原始網格 (b) 原始網格 
  
(c) 切割成 4 份之網格 (d) 切割成 8 份之網格 
