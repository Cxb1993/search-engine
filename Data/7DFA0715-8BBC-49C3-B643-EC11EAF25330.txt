解析度和可靠度。  
 (第三年)： 我們除支援總計畫之進一步下線計畫外，將
開發自動化的軟體，根據使用者需求 (如時脈頻率、相位數
目，相鄰相位的時間差等)，即可自動產生所需的【時序控制
單元】，並可輕鬆支援跨製程的設計。 
 
中文關鍵詞： 雷達，無線傳感，時序控制，設計方法，CMOS 積體電路，時
序控制電路編譯器，製程變異容忍力，高解析度 
英 文 摘 要 ： Multi-phase clock generation (MPCG) is a problem that 
aims to generate a sequence of clock signals with the 
same frequency and uniformly shifted phases. In this 
paper we present a cell-based MPCG design with two 
technical merits: (1) we use a process calibration 
scheme that makes the per-phase delay (defined as the 
timing difference between two consecutive clock 
signals) highly accurate. (2) We further exploit a 
so-called cyclic property to make the achievable per-
phase delay much smaller than a buffer delay. A 
design with 16-phase clock signal (with the per-phase 
delay of only 100ps) is used to demonstrate its 
effectiveness. 
英文關鍵詞： Clock Generation, Multi-phase Clock, Process 
Resilient, Cyclic Property 
 
2 
 
with the original clock signal 0. When this property holds true, it follows that the output signals of the four 
TDEs, namely {1, 2, 3, 4} form a sequence of clock signals with equally shifted timing intervals at their 
rising edges. 
 
TDE TDETDE TDE
Φ1 Φ3 Φ4Φ2
Controller
Phase 
Detector
UP/DN
C1[β:γ] C2[β:γ] C3[β:γ]
C4[β:γ]
Φ0
*TDE : Tunable Delay Element
*β : coarse-tuning code
*γ : fine-tuning code
Φ0
Φ1
Φ2
Φ3
Φ4
 
Fig. 1: Traditional MPCG – architecture and output signals. 
 
This type of architecture has two major limitations. (1) It is operated under the assumption that all TDEs 
exhibit an identical delay. In practice, their delays vary in silicon even under the same tuning code and their 
differences translate directly into the timing errors of the clock signals generated. If the timing margins for 
the errors are sufficiently large, this could be tolerated. In some other cases requiring higher timing 
resolution, however, this will pose as a serious limitation. (2) The minimum delay across a TDE is another 
limiting factor. Consider practical radar SoC design we plan to support, it has 16 phases of clock signals 
with 100ps of timing difference between any two consecutive clock signals. Using the low-cost 0.18um 
CMOS process technology, this cannot be easily achieved, as will be analyzed below in Fig. 2. 
 
Driver Type BUFX4 BUFX8
Technology 180nm(General)
90nm
(General)
65nm
(Low Power)
180nm
(General)
90nm
(General)
65nm
(Low Power)
Intrinsic 
Delay 78ps 32ps 34ps 72ps 27ps 39ps
FO4 
Delay 104ps 49ps 58ps 97ps 43ps 54ps
*FO4 : Fanout of 4  
Fig. 2: Characteristics of TDE under different process technologies. 
 
To boost the timing resolution (i.e., to have a smaller delay step we can control) in a MPCG design 
and make it adequate for many practical applications, simply upgrading the process technology may not be 
a panacea, as the process variation may kick in as another new limiting factor. Instead, we discovered in 
this work that new methodology and architecture may turn the table more easily and complete the mission 
with only mature process technology.  
Conventional process calibration mostly uses a so-called relative phase detector to compensate for the 
phase mismatch. In an iterative process, every phase of clock signal continuously attempts to maintain a 
balanced phase position between its two neighboring phases of clocks, until the phase errors of them 
converge to a small value [10]-[16]. Such a method may take large area and power consumption. The 
methodology to be presented in this work has a simpler architecture. Also, it uses only standard cells and 
thus can lend itself to automation in the future. 
The rest of this paper is organized as follows. Section 2 defines some terminologies and provides some 
4 
 
Φ5Φ6
Φ3Φ4 Φ2
Φ1Φ7
Φ8
Φ9
Φ10Φ11 Φ12 Φ13
Φ14
Φ15
Φ0=Φ16
Φ0 clk 0o Φ9 clk 202.5o
Φ1 clk 22.5o Φ10 clk 225o
Φ2 clk 45o Φ11 clk 247.5o
Φ3 clk 67.5o Φ12 clk 270o
Φ4 clk 90o Φ13 clk 292.5o
Φ5 clk 112.5o Φ14 clk 315o
Φ6 clk 135o Φ15 clk 337.5o
Φ7 clk 157.5o Φ16 clk 360o
Φ8 clk 180o
Notation:
 
Fig. 3: Phasor plot of a 16-phase clock signal. 
 
(Definition 4): We define the Phasor Plot of a MPCG problem, as illustrated in Fig. 3. The N phases of 
clock signals are mapped to their positions on a unit circle evenly: 
    Angle(i) = i * (360 / N) 
This phasor plot can describe the cyclic property in a more illustrative way. For example, a clock signal, 
say N+1, with a phase of notch, is a clock signal with an equivalent phase of notch. It thus implies 
that it is also in-phase with 1. 
III. 研究方法 
 
A. Basic Cyclic MPCG Architecture 
Fig. 4 reveals the architecture of a cyclic MPCG design. For simplicity, we assume that there are 16 
phases of clock signals to be produced and the per-phase delay,notch, is 100ps. The clock period, T, of the 
clock signals are all 100ps * 16 = 1600ps, while the clock frequency is roughly 625MHz. At the first glance, 
this requirement is almost unattainable for a 0.18um CMOS process technology in that we cannot make a 
TDE (Tunable Delay Element) with the delay as small as 100ps. But as will be shown later, it could be 
easily achievable by taking advantage of the cyclic property discussed previously.  
 
(Basic Idea): Any TDE with the delay of (k*T + 100ps) will produce desired MPCG output signals. Here, k 
is zero or any positive integer.  
ADPLL
(X16)
REF_CLK
(@1600ps) CAL_ENABLE
Divider 
(÷17/÷16)
1700ps …
TDE1
Φ0 Φ1 Φ2
…
Φ16… Φ15
1700ps 1700ps
TDE2 TDE16
Φpre-scaled TDE_CODE
13
TDE_CODE
13
TDE_CODE
13
*PD: Phase Detector
*TDE: Tunable Delay Element
PD
MPCG controller
 
(a) 
6 
 
In this cyclic MPCG architecture we can easily achieve a 100ps of per-phase delay by designing 1700ps 
TDEs whiling keeping the clock pulses from vanishing. Circuit techniques are abundant for designing such 
a Tunable Delay Element. The process can be automated as evidenced by some cell-based PLL compiler 
[17]. Another advantage is that as the process technology scales even further, the tuning resolution of a 
TDE (which equals the miniscule delay change across a TDE one can control through some digital code) 
improves as well.  
IV. PROCESS CALIBRATION 
The cyclic MPCG architecture only works under ideal conditions. Problems exist to be solved for it to 
work as desired in true silicon. The most prominent problem that has not been fully addressed in the 
literature is how to equalize the true delay of all TDEs in silicon – a process calibration problem – by using 
only standard cells. If we apply the same “tuning code” to all TDEs, chances are their delays vary from one 
to another. This problem aggravates when we use a TDE with a longer delay. 
Assuming that there is 30% process variation in the worse case, then it translates to only 30ps for a 
100ps TDE, while 510ps for a 1700ps TDE. A 510ps deviation from the ideal timing position is a total 
disaster, since 510ps is already more than 5 times the per-phase delay (which is 100ps). That is, the error is 
so large that it could make the generated clock signals {1, 2, …, 16} totally out of order randomly and thus 
useless. This worst-case scenario will completely invalidate the proposed cyclic MPCG architecture if not 
addressed properly. 
In some sense, we have not yet overcome the challenge of deigning a 100ps TDE yet. We simply convert 
it into another problem for which we need to propose some process calibration problem to solve. From this 
point of view, our method takes two stages – first, we relax the stringent requirement of the TDE, and next, 
we find a way to control each of them separately but precisely. 
A. Process-Resilient Architecture 
Fig. 7 depicts the architecture of a cyclic MPCG design that can adapt to the true silicon speed of a 
manufactured chip and make the delay of each TDE equal as much as possible. In addition to the original 
chain of TDEs, the distinctive feature added is the incorporation of an All-Digital Phase-Locked Loop 
(ADPLL), responsible for generating the calibration clock signals. The following paragraph describes our 
basic idea: 
Unlike the traditional MPCG design, we need to precisely control the edge position of not just the final 
phase of clock signal, 16, but also every internal phase of clock signal, i.e., {1, 2, …, 16}. This may seem 
quite challenging originally, but now it has become feasible since the delay of each TDE has been much 
longer after we have applied the cyclic property. In practice, this can be done by simply adjusting the 
frequency (or the clock period in other words) of the input clock signal 0. For example, if we adjust the 
clock period in our working example from the original 1600ps to 1700ps, then the goal of process 
calibration is to make all phases of clock signals in-phase with 0 in our cyclic MPCG design. If this 
criterion is achieved, then we will have successfully placed the edge position of each phase of clock signal 
at its right timing location within a very small error range roughly determined by the tuning resolution of a 
TDE. 
 
8 
 
B. Process Calibration Procedure 
Change the clock period of Ф0 for 
calibration purpose (i.e., 1700ps)
Align Ф0 and Фi
(i is set to 1 initially)
Phase
Detection
UP/DN
Locked
i=16no
Reset the clock period of 
Ф0 to target period (1600ps)
yes
Change the control 
code accordinglyi=i+1
 
Fig. 8: Process Calibration Procedure. 
 
After power up, our MPCG design will go through a calibration procedure before getting ready for the 
normal operation. This procedure is depicted in Fig. 8. Basically it first sets up the ADPLL to produce a 
calibration-purpose clock signal pre-scaled (with the clock period one notch higher than the target one) and 
then decides the tuning code for each TDE, one at a time, following the order from 1 to 2, and all the way 
to 16. As mentioned previously, all these phases of clock signals should edge-aligned with 0 during the 
calibration mode. Once the calibration is done, a nominal tuning code has been set to each TDE. Typically, 
deciding a tuning code for a TDE is itself a mini-search process. After that, we switch the MPCG design to 
the functional mode, in which the clock period of 0 returns to the target one, say 1600ps in our example.  
C. Large Loading Effect on the Reference Clock 
In our architecture, signal 0 drives 16 Phase Detectors due to the need of the process calibration. The 
large loading effect imposed on signal 0 will cause it to have a much blunter transition than those of 
{1, …, 15}. If we use {0, 1, …, 15} as the final outputs, then the downstream circuit may interpret 
signal 0 with a large degree of uncertainty, as opposed to the interpretation of the other sharper signals 
{1, …, 15}, and this will cause a larger phase error than they truly have. Fortunately, this problem can be 
overcome without any modification to the circuit – we can simply use 16 (which has a sharper transition 
edge) as the new 0 for driving the downstream circuit. Our experience shows that this subtle point can 
indeed lead to further reduction of the phase error. As shown in Table 1, in our example the phase error is 
reduced from 188ps to 28ps effectively by our process calibration scheme, and if we further use 16 as the 
new 0 to drive the downstream circuit, then it is further reduced from 28ps to 13ps. 
 
 
 
 
 
 
 
 
 
 
 
10 
 
example, when i is 16 and we move it to the right, then it will be reset to 1. Similarly, if i is already 1 
and we move it to the left, then it will be reset to 16.  
In some sense, the designated TDE represents a border line in our procedure. The TDEs to the left of it 
have larger delay relatively, while those TDEs to the right of it have less delay relatively. The principle we 
wish to maintain is to pick a TDE with less delay to make contribution when we need to increase the 
overall delay across the TDE chain. On the contrary, we pick a TDE with larger delay to sacrifice when we 
need to decrease the overall delay. 
V. 實驗結果 
The proposed cell-based cyclic MPCG is implemented by following the general cell-based design flow 
with the TSMC 0.18μm CMOS technology. We use IC-Compiler from Synopsys as our automatic place 
and routing (APR) tool. The layout of the chip is demonstrated in Fig. 10. 
 
Fig. 10: The layout of our target 16-phase design. 
 
There are several important quality metrics when designing an MPCG circuit - most notably the 
minimum achievable per-phase delay, the maximum clock frequency, and phase error (i.e., the timing 
deviation from the ideal phase positions). Next, we will compare ours with the some previous design in the 
literature from an analytical point of view first, and then provide some post-layout simulation results. 
(1) Minimum achievable per-phase delay: In some sense, this metric represents the timing resolution of a 
MPCG design. The smaller it is, the better the quality. For the traditional architecture, this will correspond 
to the minimum delay across a buffer under the selected process technology. As for our design, this is much 
smaller – as it corresponds to the tuning resolution of a TDE. 
(2)  Maximum clock frequency: The traditional MPCG design usually can support a very high clock 
frequency since it consists of only a delay chain. As for our architecture, this might be limited by the 
ADPLL used for generating the calibration clock signals in our architecture. However, this limitation can 
be relaxed by applying the cyclic property again. In general, a clock signal with the clock period of (k*T 
+notch) can be used for the purpose of calibration. In our previously discussion, we set k = 1. But we can 
certainly use larger k if needed. As a result, both the traditional and the proposed designs can support a very 
high clock frequency. 
(3) Phase error: This is probably the most important requirement in an MPCG design. For a traditional 
architecture, this is highly susceptible to the process variation. For our architecture, this is much smaller 
due to our calibration scheme. However, it is still contributed by two factors - the tuning resolution of a 
12 
 
The index of the 16 clock signals generated ‐ {1, 2, …, 16}
Ph
as
e e
rr
or
 (p
s)
13
188
‐50
0
50
100
150
200
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16
w/ calibration
w/o calibration
 
Fig. 13: The phase errors of the 16 phases of clock signals. 
 
Index of clock signals generated
Ph
as
e e
rr
or
 (p
s)
15
42
24
21
3 4 3
0
0
5
10
15
20
25
30
35
40
45
1 2 3 4
w/o calibration
w/ calibration
Index of clock signals generated
(for  90nm process)(for  0.18um process)
45
12
39
35
2
8 8
11
0
5
10
15
20
25
30
35
40
45
50
1 2 3 4
Ph
as
e e
rr
or
 (p
s)
 
Fig. 14: The timing errors of the 4 phases of clock signals. 
 
Fig. 11 shows the post-layout simulated waveforms by NanoSim. Fig. 12 shows the waveforms of the 16 
phases of clock signals before and after the process calibration. It can be seen that the rising edges are all 
precisely aligned after the process calibration as expected. Since we do not aim to preserve the duty cycles, 
the falling edges are left unaligned unharmfully. The phase errors of the 16 phases of the clock signals {1, 
2, …, 16} are also profiled in Fig. 13. It shows that the phase error can be as high as 188ps without the 
process calibration due to the variation of the wire lengths, while reduced to less than 13ps after applying 
the proposed calibration scheme. Fig. 14 shows the phase errors of another 4-phase clock generator design. 
With the process calibration, the maximum phase error can be reduced from 45ps to 11ps for a 0.18μm 
process, and 27ps to 4ps for a 90nm process. 
Table 3 shows the performance comparison with some previous works. Since our design can be easily 
portable to any cell library ready process, we designed three versions for comparison: (1) a 4-phase MPCG 
using a 0.18um process, (2) a 4-phase MPCG using a 90nm process, and (3) a 16-phase MPCG for our in-
house radar IC using a 0.18um process.  
It shows that, ours is still quite competitive in the achievable minimum per-phase delay even though it is 
made of standard cells. As for area, ours is much smaller. The listed first two works, i.e., [10] and [11], are 
5.6X and 35X larger than ours, respectively, after area normalization. In a head-to-head comparison with 
the work in [11], we are only inferior in the phase error (e.g., our 11ps versus their 3.5ps). This is mostly 
due to the limitation imposed by the cell-based phase detector. If smaller phase error is required, then we 
can resort to one of the following two solutions – (1) we can fully customize a 1ps-precision phase detector 
[18] as a new cell and add it to the standard cell library to improve the accuracy, or (2) we can simply use a 
more advanced process, if that is available. For example, the phase error in our design can be reduced from 
11ps to only 4ps after shifting from a 0.18um process to a 90nm process. 
The power consumptions of our 4-phase clock generator design are 22.9mW for 0.18um process and 
3.4mW for 90nm process, respectively. In terms of power consumption, the work in [11] is 81/22.9=3.53X 
14 
 
2003. 
[8] J.-Y. Chang, C.-W. Fan, C.-F. Liang, and S.-I. Liu, "A Single-PLL UWB Frequency Synthesizer 
Using Multiphase Coupled Ring Oscillator and Current-Reused Multiplier," IEEE Trans. on Circuits 
and Systems II: Express Briefs, vol. 56, no. 2, pp.107-111, Feb. 2009. 
[9] L.-C. Cho, C.-H. Lee, and S.-I. Liu, "A 1.2-V 37–38.5-GHz Eight-Phase Clock Generator in 0.13-μm 
CMOS Technology," IEEE J. of Solid-State Circuits, vol. 42, no. 6, pp.1261-1270, June 2007. 
[10] H.-H. Chang, C.-H. Sun, and S.-I. Liu, "A Low Jitter and Precise Multiphase Delay-locked Loop 
Using Shifted Averaging VCDL," Int. Solid-State Circuits Conf., pp. 434–435, Feb. 2003. 
[11] H.-H. Chang, J.-Y. Chang, C.-Y. Kuo, and S.-I. Liu, "A 0.7-2GHz Self-Calibration Multiphase 
Delay-Locked Loop," IEEE J. of Solid-State Circuits, vol. 41, no. 5, pp.1051-1061, May 2006. 
[12] H.-S. Chen and C.-C. Hung, "A Self-Calibrated Multiphase DLL-Based Clock Generator," Proc. of 
Int’l Symp. on VLSI Design, Automation and Test (VLSI-DAT), April 2007. 
[13] L.-P. Chuang, M.-H. Chang, P.-T. Huang, C.-H. Kan, and W. Hwang, "A 5.2mW All-digital Fast-
lock Self-Calibrated Multiphase Delay-locked Loop," IEEE Int’l Symp. on Circuits and Systems, 
pp.3342-3345, May 2008. 
[14] M.-H. Chang, L.-P. Chuang, I.-M. Chang, and W. Hwang, "A 300-mV 36-μW Multiphase Dual 
Digital Clock Output Generator with Self-calibration," IEEE Int’l SOC Conf., pp.97-100, Sep. 2008. 
[15] S.-C. Lin, and T.-C. Lee, "An 833-MHz 132-phase multiphase clock generator with self-calibration 
circuits, "IEEE Asian Solid-State Circuits Conf., pp.437-440, Nov. 2008. 
[16] Z. Lukic, S.M. Ahsanuzzaman, A. Prodic, and Zhenyu Zhao, "Self-Tuning Sensorless Digital 
Current-Mode Controller with Accurate Current Sharing for Multi-Phase DC-DC Converters," IEEE 
Applied Power Electronics Conference and Exposition (APEC), pp.265-268, Feb. 2009. 
[17] P.-Y. Chao, C.-W. Tzeng, S.-C. Fang, C.-C. Weng, and S.-Y. Huang, "Low-Jitter Code-Jumping for 
All-Digital PLL to Support Almost Continuous Frequency Tracking," Proc. of Int’l Symp. on VLSI 
Design, Automation and Test (VLSI-DAT), April 2011. 
[18] H.-J. Hsu and S.-Y. Huang, "A Low-Jitter ADPLL via a Suppressive Digital Filter and an 
Interpolation-Based Locking Scheme," IEEE Trans. on VLSI Systems, vol. 17, no. 11, Nov. 2009. 
[19] H. P. Moravec, "Towards Automatic Visual Obstacle Avoidance," Proc. of the 5th Int’l Joint Conf. 
on Artificial Intelligence, pp. 584, 1977. 
[20] "CIC Referenced Flow for Cell-based IC Design", Chip Implementation Center, CIC, Taiwan, 
Document no. CIC-DSD-RD-08-01, 2008. 
 2
via All-Digital Phase-Locked Loop Compiler】。與約三位有興趣的國際專
家們做意見交換。  
 June 7, 2012 由本人口頭簡報論文【Small Delay Testing for TSVs in 
3-D ICs】，並參與 30-minute 海報解說時間，與約五位有興趣的國際專家
們做意見交換。其中包括 Dr. Wu-Tung Cheng from Mentor Graphics, Prof. 
Peter Shi from Texas A&M, Dr. Peilin Song from IBM, Yorktown High, 
Prof. Krish Charkrabarty from Duke University, and Prof. Xu from 
Chinese University of Hong Kong. The title of our session is quite 
interesting as “The dark side of testing”. I mentioned to our session 
chair that this means that the papers in this session all deal with 
difficult and not-thoroughly investigated topics in testing. I made 
a joke to our session chair that maybe next year we can be more 
positive and optimistic and make the session title as “The bright 
side of testing”, to make people feel that testing is some area 
having a not just a lot of challenging topics but also breakthrough 
technologies. 
 June 8, 2012 由【美國 San Francisco SFO 國際機場】 飛往【美國
Portland PDX 國際機場】，繼續在 Mentor Graphics 的休假研究訪問。 
二、與會心得 
    On Sunday (June 3), I attended a PC meeting for CODES+ISSS conference, 
in the verification session along with Martin and Prof. Prabhat from U. 
 4
triggered a new wave of technology revolution”. As a researcher, it is 
certainly not wise to keep doing whatever we have been doing for ten years 
or even longer time. KEEPING WITH THIS NEW TREND IS PROBABLY THE NO. 1 
SURVIVING TIP. But how? Whatever we do should be in line with this trend or 
linked with this new trend in some way I think. About the two main topics 
I have been working on – which are “timing related circuit design”, and “timing 
related testing techniques,” I think it is good that these two topics are 
certainly linked to this killer application in some way. It is just that I 
need to ponder if I should start to switch to some other topics that may strive 
on this new “Near-threshold big-LITTLE-reconfigurable ultra-low-power 
multi-core specialized-IP-assisted optical-Network-inside GPU-enhanced 
multimedia-driver ubiquitously and wirelessly networked environment-sensing 
highly-reliable 3D 4G smart-phone-centered electronic system”, and its 
application in the MG-4C (Medical and green 4C electronics) domain. 
 
 
 
 I also went to the following keynote speech – “My First Design Automation Conference 
- 1982,” given by our former chancellor, Prof. C. L. Liu. 
 
THURSDAY KEYNOTE ADDRESS 
June 7, 2012 
 6
is old, not very clean, certainly over-crowded. I don’t feel comfortable 
staying in such a bustling downtown area. Basically, the environment is not 
very safe to me. The sirens of the police went off on a daily basis. 
四、建議 
   Certainly DAC is the arguably the most important event in Design Automation 
area. There are amazingly 12 co-located workshops, with deeper emphasis on 
some specific topics. Among them, ”System-Level Design of Automotive 
Electronics/Software” and “Bio-Design Automation” are relatively new and 
stand out to me. Certainly, IC design is mature and new paths to other 
system-level applications (bio-medical systems, cars, etc.) are under 
formation. 
Instead of sticking to its traditional emphasis, I feel the strong efforts 
it has attempted to revitalize the IC Design Automation industry. Also, I 
am feeling that ARM (a company specializing in low-power embedded CPU for 
mobile applications) has getting more and more powerful. Their CTO gave the 
keynote speech, and their new low-power multi-core CPU architecture is 
attracting a lot of attention from the audience. Dr. Wu-Tung Cheng predicts 
that in 20 years, INTEL could give up its CPU business it once dominated and 
get replaced by ARM. This is certainly some bold prediction, yet whether it 
will come true or not remains to be seen.  
五、攜回資料名稱及內容 
1 Shi-Yu Huang (黃錫瑜)
寄件者: papers@dac.com
寄件日期: 2012年3月7日星期三 上午 6:36
收件者: syhuang@ee.nthu.edu.tw
主旨: 139-VG168 - Your 49th DAC Submission
Dear Shi-Yu Huang, 
 
Your paper titled "Small Delay Testing for TSVs in 3D ICs", paper number 139-VG168, was accepted for 
the 2012 DAC Technical Program. 
 
You , as the submitter, are REQUIRED TO TAKE ACTION. As the submitter of the manuscript, you 
are the only one on your manuscript that will receive this email and have access to the confirmation 
form. Please log into the DAC Navigation Center at the URL listed below to get to the link for your 
Confirmation Form.  
https://www.mpassociates.com/ml/account/login.aspx?redirectkey=42  
 
The confirmation form includes the date, time and location of the session your manuscript will be in. It also 
has the title, list of authors, their affiliations, city and state information. You are required to check the title, 
list of authors, their affiliations, city and state to make sure all the information is correct. This information 
will be used in all print and electronic publications. Once you have checked the information, please send the 
signed form in .pdf format to papers@dac.com or fax it to 303-530-4334. If you need to make a change to 
any of this information, please send an email to papers@dac.com with the requested change and an 
explanation for the change. The email will be forwarded to the DAC TPC Chairs for approval. 
 
Your confirmation form is due to the DAC offices by March 9th  
 
 
Best regards, 
 
Soha Hassoun and Donatella Sciuto 
49th DAC Technical Program Co-Chairs  
 1Æ0 thresholds are made different, by switching it to a 
Schmitt-Trigger inverter as will be detailed later. The most 
important concept of this work can be stated as follows - By 
changing the TSV’s output inverter from a normal one to a 
Schmidt-Trigger, the oscillation period of the clock signal 
generated by the RO will change accordingly, with the 
difference reflecting the propagation delay across the TSV. 
The rest of this paper is organized as follows. Section 2 
provides the background information, including the basic 
electrical model of a TSV, and a brief review of the IS analysis 
[14], which forms the basis of our work. Section 3 proposes the 
new architecture supporting the VOT technique and its 
operations. Section 4 presents the experimental results, and 
Section 5 concludes. 
II. TSV DELAY MODEL 
A. TSV Modeling 
For a TSV that has the following physical parameters as {d = 
30 µm, t = 1 µm, and l = 75 µm} [14], the resistance (RTSV) and 
capacitance (CTSV) will be approximately 2 mΩ and 242 fF, 
respectively, based on the analytical models presented in [5]. 
Then, the fundamental time constant of this wire (which is RTSV 
multiplied by CTSV) will be about 0.484 × 10–3 ps. This is an 
extremely small value as compared with the intrinsic gate delay 
(which is in the range of tens to hundreds of picoseconds in a 
typical 0.18 µm process). Unfortunately, the capacitance of a 
TSV is much larger than that of a usual wire (which is in the 
range of just a few femto-farads). As a result, the delay a TSV 
actually causes is not on the wire itself, but on its driving gate. 
Based on this observation, we define the TSV delay (which is 
basically a quantity we wish to decide if there is too much 
delay) as the overall propagation delay across not just the TSV 
structure but also its driver cell. 
B. RLCG-Based Delay Model of a TSV 
A TSV can be viewed as a transmission line that takes into 
account the effects of the inductance and the conductance to 
ground, as shown in Fig. 1(a). This figure also shows the typical 
values of the R, L, C, and G as {RTSV = 2 mΩ, LTSV = 1 pH, CTSV 
= 242 fF, GTSV = 1 nS}. It is notable that the effects of the 
inductance L and the conductance G may not be negligible 
when the TSV is used for transmitting high-frequency analog 
signal. However, as a channel of digital signal, these two effects 
can be mostly neglected as will be illustrated below.  
To verify this point, we perform the SPICE simulation using 
the RLCG model, with the inductance increased by 5000X 
from its typical value to 5000pH. The simulation results are 
shown in Fig. 1(b). We apply a 0Æ1 transition at the input of a 
TSV driver (i.e., node A). There will be a 1Æ0 transition 
observed at the endpoint of the TSV (i.e., node B). The output 
transition at node B exhibits some low-amplitude ripples. But 
overall, the propagation delay of the signal remains almost 
unchanged.  
Generally speaking, the capacitance (denoted as CTSV) will 
dominate the TSV delay when it is relatively fault free [13]. 
However, the resistance (denoted as RTSV) in a faulty TSV 
could have some impact if its value is large enough to be 
comparable to the effective on-resistance of the driver (which is 
usually in the range of several hundred Ω to several kΩ). 
RTSV=2 (mΩ)
CTSV=242 (fF)
LTSV=1 (pH)
GTSV=1 (n )
(a) An RLCG-based transmission line model for a TSV
TSV(RLCG)
Driver Output inverter
A B
With LTSV=5000 (pH)
(b) Simulation of signal across a TSV with exaggeratively big LTSV.
Fig. 1: A transmission line based circuit model for a TSV. 
C. Review of Input-Sensitivity Analysis 
In this subsection, we review a most related previous work 
proposed in [14] – referred to input-sensitivity analysis (IS) 
herein. It aimed to predict the capacitance of each TSV under 
monitoring.  
TSV
TSV
Start_OR
TSV1
TSV2
Normal_in2
Test_mode
0
1
Normal_in1
Test_mode
1
0
buffer
buffer
Normal_out1
Normal_out2
Die1 Die2
S2
※ S2=0, driving capability=1X inverter
※ S2=1, driving capability=2X inverter
S2
S1
 
Fig. 2: The architecture for a TSV pair in [14]. 
 
As shown in Fig. 2, two TSVs are paired up to form an RO. 
The resulting period of the RO is twice the accumulated 
propagation delay along the ring. Observing the oscillation 
period of this RO can reveal some delay information. The RO 
can be dynamically set to one of three different configurations 
by tuning the strengths of the input derivers of the two TSVs – 
i.e., (1) normal configuration, (2) TSV1-driver-reduced 
configuration, and (3) TSV2-driver-reduced configuration. 
During the test mode, the three RO configurations are turned on 
in sequence one by one, and each oscillation period is measured. 
A procedure is followed to map the measurement results to the 
corresponding capacitance and the propagation delay across 
each of the two TSVs. In summary, the idea of the IS analysis is 
that – the delay of a particular TSV can be reflected in the 
change of the clock period of the RO when we perturb the 
driving strength of the input buffer of that TSV, regardless of 
the periphery circuit in the oscillation ring. 
 B. DfT Architecture for VOT Analysis 
As illustrated in Fig. 6, a TSV pair is now configured into an 
RO, similar to the IS analysis (with some peripheral circuitry). 
To support the VOT analysis, we change the output inverter of 
each TSV with variable thresholds, as defined below. 
Definition 3: (VOT Inverter) A Variable-Output-Threshold 
(VOT) inverter is the combination of a normal CMOS inverter 
and a ST inverter, with the function depending on the value of a 
control signal, say Z. In other words, a VOT inverter operates in 
two different modes – (1) normal mode, and (2) 
Schmitt-Trigger (ST) mode. 
If (Z==0), VOT inverter = normal CMOS inverter; 
Else if (Z==1), VOT inverter = Schmitt-Trigger inverter; 
■ 
There are two VOT inverters in a test unit composed of two 
TSVs (as shown in Fig. 6), one for each TSV. Their controlling 
signals are denoted as Z1 (for the VOT inverter of the TSV1) 
and Z2 (for the VOT inverter of the TSV2). Based on the value 
combination of <Z1, Z2>, we define three configurations in our 
VOT analysis, as summarized in Fig. 7. 
Z1
TSV1
Die1 Die2
TSV2
OR_enable1
OR_enable2
Z2
Fig. 6: A simplified architecture of a TSV pair supporting VOT 
(Variable Output Threshold) analysis. 
(1) Normal Configuration:
(2) TSV1-in-ST Configuration
(3) TSV2-in-ST Configuration
OR period=TREF
OR period=TST1
OR period=TST2
TSV2
TSV1
Z2=0
Z1=0
TSV2
TSV1
Z2=0
Z1=1
TSV2
TSV1
Z2=1
Z1=0
 
Fig. 7: Summary of three configurations of VOT analysis. 
 
(1) Normal Configuration: <Z1, Z2> = <0, 0>, i.e., both VOT 
inverters are in their normal modes. The clock period of the RO 
is denoted as TREF. 
(2) TSV1-in-ST Configuration: <Z1, Z2> = <1, 0>, i.e., the 
VOT inverter associated with TSV1 is in the ST mode, while 
that of TSV2 is in its normal mode. The clock period of the 
resulting RO is denoted as TST1. 
(3) TSV2-in-ST Configuration: <Z1, Z2> = <0, 1>, i.e., the 
VOT inverter associated with TSV2 is in the ST mode, while 
that of TSV1 is in its normal mode. The clock period of the 
resulting RO is denoted as TST2. 
C. Implementation of a Variable-Threshold Inverter 
A VOT (Variable-Output-Threshold) inverter can be realized 
by a schematic shown in Fig. 8. Fig. 8(a) is the overall 
schematic, Fig. 8(b) is the equivalent circuit when the control 
signal Z = 0 (or when it degenerates to a normal inverter), and 
Fig. 8(c) is the equivalent circuit when the control signal Z = 1 
(or when it degenerates to an ST inverter). It is notable that the 
two ST thresholds (i.e., VTH(1->0) and VTH(0->1)) can be set by 
tuning the transistor sizes. 
Vin
(c) ST inverter (Z=1) (b) normal inverter (Z=0) (a) overall schematic
VoutVin
VDD
VDD
VoutVin
VDD
Vout
VDD
VDD
Z
Z
GND GND
Fig. 8: An implementation of the VOT inverter which can switch its 
configuration between a normal inverter and a ST inverter. 
D. Overall Flow 
Calculate the resulting clock 
period, denoted as TREF
Predict delays across
TSV1 and TSV2
Activate the ring oscillation in 
the normal configuration
Step1
Step2
Step3
Step4
Step5
Measurement
Phase
Prediction
Phase
Calculate the resulting clock 
period, denoted as TST1
Calculate the resulting clock 
period, denoted as TST2
Activate the ring oscillation in 
the TSV1-in-ST configuration
Activate the ring oscillation in 
the TSV2-in-ST configuration
ΔTST1 = TST1 - TREF
ΔTST2 = TST2 - TREF
Based on pre-built delay 
dictionary indexed by ΔTST
 
Fig. 9: Overall flow for TSV delay prediction. 
 
As shown in Fig. 9, the entire flow can be further divided into 
two phases: (1) the measurement phase and (2) the prediction 
phase. There are three major steps in the measurement phase for 
each test unit (composed of a TSV pair). In step 1, we activate 
the RO in the normal configuration. Calculate the resulting 
clock period, denoted as TREF. In step 2, we activate the RO in 
the TSV1-in-ST configuration. Calculate the resulting clock 
period, denoted as TST1. In step 3, we activate the RO in the 
TSV2-in-ST configuration. Calculate the resulting clock period, 
denoted as TST2. In the prediction phase, we first do the 
following computations:  
  
Fig. 12: The relationship of the measurable quantity ΔTST versus the 
TSV delay, taking into account the process variation in a 90nm CMOS 
process technology. 
 
The overall test flow for small delay fault detection can be 
depicted as follows. For a test unit, we derive the ΔTST1 and 
ΔTST2 for the two TSVs by our VOT analysis, respectively. 
Then, we use the regression model that we have derived in Fig. 
12 under a specific process technology to serve as a 
ΔTST-to-TSV-delay dictionary to derive the predicted delay 
values for TSV1 and TSV2. For each of these two values, we 
multiply it by (1-29.28%) and (1+29.28%) to derive its 
statistical lower-bound and upper-bound, respectively, and 
denote them for example by (LB-Delay, and UB-delay). For a 
given delay test threshold of a TSV, then we can report one of 
the following three test result: 
z (1) If (delay test threshold > UB-delay), then it is a pass. 
z (2) If (delay test threshold < LB-delay), then it is a fail. 
z (3) Otherwise, we can report it as a conditional fail, 
depending on the system-level test requirement and 
decision. 
V. CONCLUSION  
Knowing the delay across each TSV in a 3D IC is often a 
plus to assist either the silicon debugging during the yield 
ramp-up stage or to catch small delay faults that may escape the 
at-speed test during the mass-production stage. We propose in 
this paper a VOT (Variable Output Thresholding) technique 
that can be used to gauge the delay across a TSV even when it 
has serious resistive open defect. SPICE simulation validates 
that there indeed exists a linear relationship between the TSV 
delay to be quantified and the quantity that can be measured 
(denoted as ΔTST by the proposed scheme). With 10,000 times 
of Monte-Carlo simulation, the average absolute error is 5.85% 
and maximum is 29.28%. It implies that this scheme is able to 
detect a small TSV delay that causes more than 29.28% 
deviation from its original fault-free value with a confidence 
level of 99.99%.  
 
ACKNOWLEDGMENTS 
This work was supported in part by National Science Council 
(NSC) of Taiwan under grant NSC-99-2220-E-007-009, Mentor 
Graphics, and ITRI. The authors are also grateful to CIC (Chip 
Implementation Center) of Taiwan, for the provision of the 
commercial EDA tools used in our experiments. 
REFERENCES 
[1] A. Bassi, A. Veggetti, L. Croce, and A. Bogliolo, “Measuring 
the Effects of Process Variations on Circuit Performance by 
Means of Digitally Controllable Ring Oscillators,” Proc. of Int’l 
Conf. Microelectronic Test Structures, pp. 214–217, Mar. 2003.  
[2] P.-Y. Chen, C.-W. Wu, and D.-M. Kwai, “On-chip TSV Testing 
for 3D IC Before Bonding using Sense Amplification,” Proc. of 
IEEE Asian Test Symp., pp. 450–455, Nov. 2009.  
[3] B. P. Das, B Amrutur, H. S. Jamadagni, N. V. Arvind, and V. 
Visvanathan, “Within-Die Gate Delay Variability Measurement 
using Re-configurable Ring Oscillator,” Proc. of IEEE Custom 
Integrated Circuits Conf. (CICC), pp.133–136, Sept. 2008.  
[4] L. S. Dutta and T. Hillmann-Ruge, “Application of Ring 
Oscillators to Characterize Transmission Lines in VLSI 
Circuits,” IEEE Trans. Components, Packaging, Manufacturing 
Tech., Part. B., vol. 18, no. 4, pp. 651–657, Nov. 1995.  
[5] G. Katti, M. Stucchi, K. De Meyer, and W. Dehaene, “Electrical 
Modeling and Characterization of Through Silicon Via for 
Three-Dimensional ICs,” IEEE Trans. Electron Devices, vol. 
57, no. 1, pp. 256-262, Jan. 2010. 
[6] I. Loi, S. Mitra, T. H. Lee, S. Fujita, and L. Benini. “A 
Low-Overhead Fault Tolerance Scheme for TSV-Based 3D 
Network on Chip Links,” Proc. of Int’l Conf. Computer-Aided 
Design, pp. 598–602, Nov. 2008.  
[7] K. S.-M. Li, C. L. Lee, C. Su, and J. E. Chen, “Oscillation Ring 
based Interconnect Test Scheme for SoC,” Proc. of IEEE Asia 
South Pacific Design Automation Conf. (ASP-DAC), pp. 184– 
187, 2005. 
[8] K. S.-M. Li, C.-L. Lee, C.-C. Su, Y.-M. Chang, and J.-E Chen, 
“IEEE Standard 1500 Compatible Sscillation Ring Test 
Methodology for Interconnect Delay and Crosstalk Detection,” 
J. of Electronic Testing: Theory and Applications, vol. 23, no. 4, 
pp. 341–355, Aug. 2007. 
[9] E. J. Marinissen and Y. Zorian, “Testing 3D Chips Containing 
Through-Silicon Vias,” Proc. of Int’l Test Conf., pp.1-11, 2009.  
[10] P. R. O’Brien and T. L. Savarino, “Modeling the Driving-Point 
Characteristic of Resistive Interconnect for Accurate Delay 
Estimation,” Proc. of Design Automation Conf., pp. 512–515, 
Nov. 1989.  
[11] C. C. Su, Y. T. Chen, M. J. Huang, G. N. Chen, and C. L. Lee, 
“All Digital Built-In Delay and Crosstalk Measurement for 
On-Chip Buses,” Proc. of Design, Automation & Test in Europe 
Conf. (DATE), pp. 527–531, March 2000.  
[12] W. C. Wu, C.-L. Lee, M. S. Wu, J. E. Chen, and M. Abadir, 
“Oscillation Ring Delay Test for High Performance 
Microprocessor”, J. of Electronic Testing: Theory and 
Applications (JETTA), vol. 16, no. 1–2, pp. 147–155, 2000. 
[13] C. Xu, H. Li, R. Suaya, and K. Banerjee, “Compact AC 
Modeling and Analysis of Cu, W, and CNT Based 
Through-Silicion Vias (TSVs) in 3D ICs,” Tech. Digest of Int’l 
Electron Devices Meeting (IEDM), pp. 521-524, (2009). 
[14] J.-W. You, S.-Y. Huang, D.-M. Kwai, Y.-F. Chou, and C.-W. 
Wu, “Performance Characterization of TSV in 3D IC via 
Sensitivity Analysis,” Proc. of Asian Test Symp. (ATS), pp. 
389– 394, Dec. 2010. 
100 年度專題研究計畫研究成果彙整表 
計畫主持人：黃錫瑜 計畫編號：100-2221-E-007-044- 
計畫名稱：用於無線醫療照護監控之高整合度 CMOS 雷達系統--子計畫二：主動雷達系統之時序電路單
元設計方法(I) 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 1 1 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 7 4 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 1 1 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
國科會補助專題研究計畫成果報告自評表 
請就研究內容與原計畫相符程度、達成預期目標情況、研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）、是否適
合在學術期刊發表或申請專利、主要發現或其他有關價值等，作一綜合評估。
1. 請就研究內容與原計畫相符程度、達成預期目標情況作一綜合評估 
■達成目標 
□未達成目標（請說明，以 100 字為限） 
□實驗失敗 
□因故實驗中斷 
□其他原因 
說明： 
2. 研究成果在學術期刊發表或申請專利等情形： 
論文：■已發表 □未發表之文稿 □撰寫中 □無 
專利：□已獲得 □申請中 ■無 
技轉：□已技轉 □洽談中 ■無 
其他：（以 100 字為限） 
Conference Paper:  
R.-T. Ding, S.-Y. Huang, C.-W. Tzeng, S.-C. Fang, and C.-C. Weng, ’’Cyclic-MPCG: 
Process-Resilient and Super-Resolution Multi-Phase Clock Generation by Exploiting 
the Cyclic Property,’’ Proc. of VLSI Design, Automation, and Test (VLSI-DAT), April, 
2012. 
 
3. 請依學術成就、技術創新、社會影響等方面，評估研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）（以
500 字為限） 
由於積體電路製造技術的持續進步，最近已經開始有人實驗將【短程的雷達系統】整合到
以 CMOS 為基礎的晶片系統中。這樣的發展在許多需要無線傳感的應用中 –譬如正在興
起中的【無線醫療照護監控】- 將預期會產生很大的革命。針對此一新興科技趨勢，本子
計畫將與其他子計畫將共同合作開發一個【高整合度，高解析度，具有製程變異容忍力，
且適合多天線系統的微小型雷達晶片系統】。配合所屬的整合型計畫之分工規劃，本子計
畫將特別著重於【雷達系統晶片-射頻前端收發機的時序控制單元】的研究與開發。  
我們的雷達系統使用【超寬頻脈衝無線電】。它以定期的方式一連串地發出脈衝訊號，並
隨時聆聽可能的任何回音，藉以檢測其設定的搜索範圍內的人或物件 (例如，10 米乘 10
米的房間)。 跟一般的無線通訊系統不同，雷達系統是一個較主動性的系統，它不但能接
收特定的無線訊號，並能夠從中識別所檢測到的人或物件的距離和方向。這是一個通稱為
定位的問題。要完善的解決這個定位的問題，增進雷達系統的解析度，射頻前端收發機必
須擁有【精準的時序控制能力】，因此【時序控制單元】的精準度與解析度將深刻影響雷
達的功能；譬如，它會影響從反彈波的【抵達時間】來推測雷達所偵測到的【物件有多遠】
