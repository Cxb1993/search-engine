2 
 
應用於 Argo 海洋資訊的資源認知行動知識網格之設計與研究(III) 
計畫主持人：張玉山 國立台北大學資訊工程系 
計畫參與人員：李羿慷、張哲祥、范植添 
摘要 
這是本計畫的第三年度，重點將著重在
將前面二年的研究成果整合，並且將應用此
成果到不同的領域。在本年度我們將行動代
理人、知識網格的技術及去年在地理海洋科
學資料的研究成果整合到 ARGO 海洋資訊與
知識的查詢環境。另外，我們也應用這方面
的成果應用到二個部份。一是將相關的資訊
也以雲端平台來儲存，將建構一個行動代理
人為基礎的雲端資訊檢索代理人產生器。另
一個是將行動代理人應用於普及式計算環
境的應用，皆有不錯的成效。 
 
關鍵詞: 網格, 行動網格, Argo, 資源認
知, 海洋資訊 
 
Abstract 
The research aims of the third year are to 
integrate first two years’ achievement and 
apply that to other domains. This year we 
integrate mobile agent, know grid, and the 
result in the geographical science data related 
achievement obtained last year to the ARGO 
ocean information retrieval and knowledge 
extraction environment. Besides, we also 
apply the results to two domains. One is to 
store related information into cloud 
environment and to construct a mobile agent 
based agent generation technology for 
information retrieval on cloud environment. 
The other is to apply mobile agent technology 
to ubiquitous applications. Both have good 
achievement.  
 
Keywords: Grid Computing, Mobile Grid, 
ARGO, Resource Awareness, Ocean Data 
 
一、 前言 
在本研究是延續性的計畫，ARGO 計畫
是由全世界23 個國家所組成的一個跨國計
畫，而本計畫中去年度的計畫重點在於如何
有效的存取到 ARGO 的資料，並且顯示給使
用者知道。首先我們要快速的擷取 ARGO 資
料庫中的資料，由於 ARGO 海洋資料的特殊
性，我們將資料的擷取分成二個主要的部
份，第一部份是 metadata 的擷取及檔案的
搜尋。這個部份是第一年度的計畫已經完
成。第二個部份是將所需要的 ARGO 資料實
際的擷取出來，這個部份如何有效且快速的
找尋出來，我們需要有一個好的機制與第一
層的 metadata 搜尋結合。 
本年度之計畫延續前二年的成果，將行
動代理人技術與知識網格技術應用於 Argo
海洋資料上。因此本年度的計畫重點在於將
前二年的計畫實際整合到 Argo 資訊檢索與
知識擷取平台，建構一個完整可用的行動網
格海洋知識檢索平台，讓使用者可以透過此
平台可以擷取相關 Argo 所提供的海洋資訊
與知識。並將並且實際的應用於其他的領
域，像是雲端平台上本體論為基礎的資訊檢
索環境及應用智慧型行動代理人提供軟體
智能與普及計算環境中。 
此外，我們也將本年度相關的研究整理
投稿相關的國際期刊及國際會議論文，成效
可說是相當良好。 
 
二、 研究目的 
就如前所述，本年度除研發相關新技術
外，主要的重點在於整合前二年的成果。因
此本計畫本年度的重點在於如下: 
1. 整合前二年的行動代理人及行動格網
技術，整合成一個行動知識網格平台。 
2. 整合本體論及其推論規則於海洋資訊
及知識檢索，以便成為海洋知識網格之
知識推論引擎。 
3. 量測資訊擷取的效能，並改善海洋資料
的擷取效能。 
4. 完成海洋行動知識網格平台之整合與
4 
 
後根據該服務找到所需的元件，並確定該元
件是存在的，另外檢查使用者所輸入的查詢
字串是合法的，並找出查詢的參數及其型
態，最後再找出所需要的資訊輸出格式。部
份的知識推論規則如圖二所示。 
 
圖二: 知識推理之部份推論規則 
 
  當利用圖二的推論規則去推論時，推論引
擎會試著去根據所有已經定義好的推論法
則去推論其正確性及所要的資訊，在我們的
研究中我們已經建構好多個推論規則，推論
引擎會試著根據使用者輸入字串去比對推
論規則，並確定使用者的輸入符合推論規
則。圖三是一個正確的查詢推論規則範例。 
 
"[Temp1:(?querySentence Argo:invoke ?service)" + 
"(?service Argo:checkInformation ?information)" + 
"->(?querySentence Argo:checking information)]" + 
 
"[Temp2:(?querySentence Argo:invoke ?service)" + 
"(?service Argo:checkCondition ?condition)" + 
"->(?querySentence Argo:checking condition)]" + 
 
"[Temp3:(?querySentence Argo:invoke ?service)" + 
"(?service Argo:checkScope ?scope)" + 
"->(?querySentence Argo:checking scope)]" + 
 
"[rule5:(?querySentence Argo:checking information)" + 
"(?information Argo:informationIs 
'exist'^^xsd:string)"+ 
"(?querySentence Argo:checking condition)" + 
"(?condition Argo:conditionIs 'exist'^^xsd:string)"+ 
"(?querySentence Argo:checking scope)" + 
"(?scope Argo:scopeIs 'exist'^^xsd:string)"+ 
"->(?querySentence Argo:validate legal)]" + 
圖三: 正確的查詢推論規則範例 
 
  今年度我們整合前二年的成果，並實際完
成系統實作，最後我們還與其他的系統作一
比較。這樣的方式我們與三個不同的 Argo
相關的網站來作一比較，分別是
USGODAE[15]、CORIOLIS[16]與 LAS[17]，
由於效能面不容易比較，因此我們只根據功
能面來比較，結果如表一所示。可以發現我
們所提供的功能比其他三個系統多。 
 
表一: 與其他三個系統就功能做一比較 
 
 
4.2 海洋資料的擷取效能之改善 
  Argo 的資料是一直在成長，因此一個好
的演算法用在 Argo 的資料庫中以便更快速
的存取 Argo 資料是必要的。去年我們提出
了二層的 Argo 資料存放與存取方式，今年
我們更加強系統的整合與實作，並且提出一
個 Argo 資料快速的擷取演算法，如圖四所
示。這個演算法可以快速的擷取更快速的的
擷取 Argo 資料。 
  
public satic String ArgoExtract( String ArgoQuery ){ 
whlie (true){ 
  Parsing ArgoQuery; 
  fileAddress = hashKey; 
  Get fileAddress, tableNumber,fileName,queryRange; 
  if(queryRange == null){ 
    get information from the fileAddress of the 
specified table with tableNumber; 
    check the file name of information and extract; 
  }             
  else{ 
   get data from the fileAddress of the specified table 
with tableNumber;   
   check the file name of information and extract; 
comparison data with queryRange and the 
information include the meet data; 
   }  
return information;   
} 
} 
圖四: Argo 資料快速擷取演算法 
 
4.3 系統整合 
  今年度的重點之是就是系統整合，因應所
提出的方法論，我們重新設計新的系統架
構，以符合系統所需，如圖五所示。我們將
6 
 
整合上所延伸的問題，透過系統的開發得到
的成果，因此這些成果可以說大部份與計畫
目標相關。 
因此在此自評中我們可以說成果非常
良好。 
 
七、 參考文獻 
1. Yue-Shan Chang*, Hung-Hsiang Chang, 
Ruey-Kai Sheu, and Ching-Tsorng Tsai, “A 
Resource-Aware Task Scheduling Algorithm on 
Mobile Computational Grid,” Journal of Internet 
Technology, Vol. 12, No. 2, March 2011, pp. 
279-291. (SCIE).  
2. Yue-Shan Chang*, Chao-Tung Yang, Yu-Cheng 
Luo, “An Ontology based Agent Generation for 
Information Retrieval on Cloud Environment,” 
Journal of Universal of Computer Science, Vol. 17, 
No. 8, 2011, pp. 1135-1160. (SCIE)  
3. Yue-Shan Chang*, Chih-Tien Fan, Yu-Sheng Wu, 
“Agent-based Intelligent Software Exploits 
Near-Field Communication,” IEEE IT Professional, 
Vol. 13, No. 2, March/April 2011, pp.30-36. (EI)  
4. Yue-Shan Chang*, Chih-Tien Fan, Tong-Ying 
Juang, “Supporting software intelligence in 
ubiquitous environment exploits mobile agent,” 
Forthcoming, Journal of Ambient Intelligence and 
Humanized Computing, DOI: 
10.1007/s12652-011-0080-0. 
5. Yue-Shan Chang, Hsiang-Tai Cheng, “Applying 
Ontology to Geographical Scientific Data 
Extraction,”  accepted by 2011 IEEE Int Conf on 
Systems, Man, and Cybernetics, Oct. 9-12, 2011, 
Anchorage, Alaska, pp. XX-XX.  
6. Chih-Tien Fan , Yue-Shan  Chang, Hsuan-Jen  
Lai,  “A DHT-based Data Extraction Scheme for 
Geographical Ocean Data” 2nd International 
Conference on Emerging Intelligent Data and Web 
Technologies (EIDWT-2011), Tirana, Albania, 
Sept. 7 - 9, 2011, pp.XX-XX.  
7. Chih-Tien Fan, Wei-Jen Wang, Yue-Shan Chang, 
“Agent-based Service Migration Framework in 
Hybrid Cloud” International Workshop on 
Ubiquitous Service Systems and Technologies 
(USST) affiliated with UIC-11.  
8. Yi-Kang Lee, Yue-Shan Chang, "Cost 
consideration on building and operating of Hybrid 
Cloud," 2011 Symposium on Cloud and Services 
Computing, Jan 20-21, 2011, Taipei Taiwan, CD 
Version.  
9. P. Brezany, I. Janciak, A M. Tjoa, 
GridMiner: A fundamental infrastructure 
for building intelligent grid systems, in: 
The 2005 IEEE/WIC/ACM International 
Conference on Web Intelligence, WI’05, 
2005. 
10. A. Congiusta, D. Talia, P. Trunfio, Distributed data 
mining services leveraging WSRF, Future 
Generation Computer Systems 23 (1) (2007) 
34–41. 
11. M. P´erez, A. S´anchez, V. Robles, P. Herrero, J.P. 
na, Design and implementation of a data mining 
grid-aware architecture, Future Generation 
Computer Systems 23 (1) (2007) 42–47. 
12. D. Guedes, W.J. Meira, R. Ferreira, Anteater: A 
service-oriented architecture for high-performance 
data mining, IEEE Internet Computing 10 (4) 
(2006) 36–43. 
13. W. Cheung, X.-F. Zhang, Z.-W. Luo, F. Tong, 
Service-oriented distributed data mining, IEEE 
Internet Computing 10 (4) (2006) 44–54. 
14. A.S. Ali, O. Rana, I. Taylor,Web services 
composition for distributed data mining, in: Proc of 
the 2005 IEEE International Conference on Parallel 
Processing Workshops, ICPPW’05, 2005.  
15. http://www.usgodae.org/cgi-bin/argo_select.pl 
16.  http://www.coriolis.eu.org/cdc/argo_rfc.htm  
17.  Live Access Server for USGODAE Data Sets, 
http://www.usgodae.org/las/getUI.do 
 
12 日 Prof. Dr.- Ing. habil. Edgar Koerner(President, Honda Research 
Institute Europe GmbH),Learning to behave in a natural environment ，這
三場演講都有很多的學者參與。 
 
 
圖一: 多個國家參與 SMC2010 盛會，我們的國旗也出現在會場 
 
圖二:大會主席開場 
此次會議總共 670 篇論文，台灣的論文大約將近 90 篇，可見台灣學者在此領域
上的貢獻及成果非常豐富。本人的論文被安排在 Knowledge Acquisition and 
Mining 的 SS，此 Session 由北科大電機系黃有評教授主持，總共有 5 篇論文報告，
與會者都提出各種問題加以討論。 
此外，也藉此機會聽聽其他學者的研究成果，像是 Shusaku Tsumoto 的 Trend 
Detection from Large Text Data，了解其使用的方法論及採礦方法;及 Tatsuo 
Tsuji 的 A Distributed Linear Hashing Enabling Efficient Retrieval for Range 
議，定能大大的提昇台灣的學術水平。若能將這方面的會議拉到台灣來舉辦，更能
讓全世界相關的學者更能了解台灣。 
五、攜回資料名稱及內容 
 論文集光碟一片、相關會議的 CFP、相關研究及成果的 DM 等。 
六、其他 
PAPER: 584 
TITLE: A Rule based Mobile Agent Generation for Information Retrieval 
 
OVERALL RATING: 3 (strong accept)  
REVIEWER'S CONFIDENCE: 3 (high)  
 
The authors present a flexible and versatile rule-based mobile agent generation framework 
for information retrieval applications. The literature review and technical contents 
of the proposed framework have been well-presented in the paper. I would like to suggest 
that the authors may consider for providing more practical examples of the proposed mobile 
agent generation framework for information retrieval applications in their further 
version of the paper.  
 
---------------------------- REVIEW 2 -------------------------- 
PAPER: 584 
TITLE: A Rule based Mobile Agent Generation for Information Retrieval 
 
OVERALL RATING: 2 (accept)  
REVIEWER'S CONFIDENCE: 3 (high)  
 
This paper proposes a rule-based mobile agent generation framework for information 
retrieval. In this framework, a flat-text based request can be automatically deduced 
by a Reasoning Agent (RA) based on the predefined ontology and inference rules. The 
authors design and implement a prototype to demonstrate the feasibility of the 
architecture. The overall arguments are reasonable and promising. However, there are 
a few issues the authors can do to further improve the quality of the paper. They are 
listed as follows. 
 
1. Some of the figures are not clear enough when they are printed out. 
2. Please check some English grammatical errors and typos in the article, for example: 
(1) Page 1, column 2, line 18: and network mangagement etc. --> (and network  
management, etc.)? 
(2) Page 1, column 2, line 18: existing research are --> ( existing researches  
are)? 
(3) Page 2, section II, line 3: some well known research result and their  
approach -->           (some well known research results and their approaches)? 
(4) Page 2, column 1, line 11 from the bottom: need to specific algorithms --> <grammatical 
error>? 
(5) Page 2, column 2, line 7: Following --> (The following)? 
(6) Page 2, column 2, line 23 from the bottom: The RA is responsible for  
inference the request --> (The RA is responsible for inferencing the request)? 
(6) Page 2, column 2, line 15 from the bottom: clouds node --> (cloud nodes)? 
A Rule based Mobile Agent Generation for 
Information Retrieval 
Yue-Shan Chang 
Dept. of Comp. Sci. & Inf. Eng. 
National Taipei University 
Taipei County, Taiwan 
ysc@mail.ntpu.edu.tw 
Yu-Cheng Luo 
Institute of Comm. Eng. 
National Taipei University 
Taipei County, Taiwan 
humor7207@yahoo.com.tw 
 
 
Abstract— In the paper1, we propose a rule-based mobile 
agent generation framework for information retrieval in a 
flexible, transparent, and easy way. User can submit a flat-text 
based request, the request will be automatically deduced by a 
Reasoning Agent (RA) based on predefined ontology and 
inference rule, and then be translated to a Mobile Information 
Retrieving Agent Description File (MIRADF) that is formatted in 
a proposed Mobile Agent Description Language (MADF). A 
generating agent, named MIRA-GA, is also implemented to 
generate a MIRA according to the MIRADF. We also design and 
implement a prototype to integrate these agents and show an 
interesting example to demonstrate the feasibility of the 
architecture.  
Keywords—Rule-driven, Agent Generation, Information 
Retrieval, Inference, Mobile Agent 
I.  INTRODUCTION 
With the advance of networked devices and 
more and more applications on the Internet, the 
cloud computing obtains increasingly attention and 
becomes one of most important research topic 
recently [1-2]. Clouds are a large pool of easily 
usable and accessible virtualized resources (such as 
hardware, development platforms and/or services). 
These resources can be dynamically reconfigured to 
adjust to a variable load (scale), allowing also for an 
optimum resource utilization [3].  Besides, 
McFedries [4] described data center (conceived as a 
huge collection of clusters) as the basic unit of 
Cloud offering huge amounts of computing power 
and storage by using spare resources. This is related 
to the concept of massive data scalability proposed 
by Hand [5].  
However, most of ongoing works or researches 
are aiming at developing the techniques and 
constructing cloud platforms, such as Amazon, 
Google AppEngine, Microsoft Azure, and 
                                                 
1 This work was supported by National Science Council of the Taiwan, 
Republic of China under Grant No. NSC98-2221-E-305-006 
Manjrasoft Aneka [23]. Massive data in data center 
of cloud platform can provide benefits to the cloud 
provider and consumer in retrieving or seeking 
information among business, medical information, 
and cooperative information retrieval platform [6-7]. 
In such environment, constructing an intelligent 
framework for fast analyzing user request and 
compositing the operations of retrieving is necessary.  
It does obtain increasingly attention and become an 
important research issue in supporting information 
retrieval and knowledge extraction in cloud 
platform [7-8] to building Information and 
Knowledge Cloud. Such concept is similar to the 
knowledge grid [9]. 
Many knowledge discovery projects in the grid 
community [10-13] had been proposed. From the 
observation of these researches and others [14-15], 
they showed that information retrieval and 
knowledge discovery exploiting mobile agent 
technology is a popular approach in recent years. 
Besides, retrieving information from such 
environment is requested to be familiar with its 
schema, structure, and architecture of cloud node, 
which against the concept and characteristics of 
cloud platforms. Nevertheless, composing a mobile 
agent always is a tedious work, especially on cloud 
environment with probably heterogeneous and 
hidden characteristics. Agent generation is an 
important technique in a variety of domains, such as 
information retrieval, distributed intrusion detection 
system, and network management etc [18-21]. 
Existing researches are necessitating somehow 
intervention of programmers or users in agent 
generation process.  
In order to solve the problems mentioned above, 
in this paper, we propose a rule-based mobile Agent 
 the loading of UA. The CL can be divided into three 
modules; which are Inference Module, Retrieving 
Algorithm Selection Module, and Knowledge 
Synthesis Module respectively. Each module 
consists of multiple agents in order to achieve 
specific goals. The following will describe the 
internal components and depict their operations.  
Here we assume that all information retrieving 
agents know the structure of clouds’ data center, 
such as the schema, location etc., and have the 
access right of the data center. The structure 
information of data center will be kept in the 
domain knowledge repository.  
 
Fig.1: System architecture 
A. Inference Module (IM) 
The module consists of Reasoning Agent, 
Information Service Agent, and Domain Knowledge 
Repository. 
 Reasoning Agent (RA): 
The RA is responsible for inferring the request 
from UA utilizing domain ontology and rules, 
which are kept in the Domain Knowledge 
Repository. While the RA receiving a request from 
the UA, the RA tokenizes the request and parses the 
tokenized request. If the tokenized request 
accommodates to the ontology, the RA will apply 
the associated rule to reason the request. If the 
parsing ontology and the application of associated 
rules are correct, the RA sends Information Service 
Agent (ISA) a query to retrieve information of 
cloud nodes for understanding where a MIRA can 
be dispatched. Finally, the RA will generate a 
MADF file according to the inference result and 
reply the MADF to the UA.  
 ISA: 
The ISA keeps the metadata of information and 
the resource of all cloud nodes. When a request is 
received by the ISA, it will reply the node ID and its 
associated information required by RA. 
 Domain-Knowledge Repository 
The repository is used to keep the ontology and 
associated rule. The ontology can be represented as 
Fig. 2. In this paper, we construct a music-related 
ontology for demonstrating the feasibility of the 
system. In this prototype we adapt the Protégé   
platform that provides a growing user community 
with a suite of tools to construct domain models and 
knowledge-based applications with ontologies to 
edit and construct the simple music ontology that 
can be exported into a variety of formats including 
RDF(S), OWL, and XML schema. 
 
Fig. 2: Partial Ontology of example 
A inference rule involved in the RA is used to 
deduce the correctness of request and to generate 
the MADL file that is used for generating MIRA. 
The rules can be constructed using the Jena 
reasoning engine that is a Semantic Web Framework 
for Java, which support semantics for defining the 
rule. 
B. Retrieving Algorithm Selection Module 
In the Retrieving Algorithm Selection Module 
(RASM) the main task is to select a proper 
retrieving algorithm according to the specification 
of MADL file to generate a mobile IR agent. The 
RASM consists of Mobile Information Retrieving 
Agent –Generating Agent (MIRA-GA) and 
Retrieving Algorithm Repository. The MIRA-GA is 
used for generating MIRA according to the MIDL 
from UA. The task of Retrieving Algorithm 
Repository is to store various algorithms that are to 
retrieve a variety of information.  
 Mobile Information Retrieving 
Agent-Generating Agent 
  
Fig. 4: The process of generating MIRADF 
Following shows the reasoning algorithm for the 
MIRA in details.  
1.  RA receives user query from UA. 
2.  RA carries out tokenization of user query. 
3. After tokenization, RA uses Hash Function to map respective 
tokens to the ontology entities stored in HashMap that is prior 
constructed. 
4. If all the mappings are correct, RA sends out an ACL INFORM 
message to UA. If not, RA replies an ACL NOT-UNDERSTOOD 
message instead. 
5. RA sends out a request to ISA for getting resource metadata. 
6.  RA receives resource metadata from ISA. 
7.  RA acquires relevant ontology entities and inference rules based 
on user query. 
8.  RA obtains User_ID, Session_ID, Agent_ID, Behaviour and 
AgentAction. 
9.  RA combines all the elements listed in Steps 9 and 10 to generate 
a MIRA Description File. 
10.  RA sends out the MIRA Description File to UA, and the 
reasoning algorithm is complete. 
C. Agent generation process 
Agent generation process will be dealt with by 
MIRA-Generating Agent to generate a MIRA. The 
process consists of three steps; there are MIRADF 
parsing, Retrieving Algorithm selection, and MIRA 
generation, respectively.   
 MIRADF Parsing 
The first step of MIRA-Generating Agent is to 
parse and verify the validation of the MIRADF. If a 
part of MIRADF is verified by the parser, the parser 
will then invoke the process Retrieving Algorithm 
Selection and MIRA-Generation, as described in 
next, to compose a MIRA; otherwise, it will 
respond to the user agent the error. Here shows an 
example to demonstrate the parsing and the 
generating of the top stub and the bottom stub of a 
MIRA.  
Fig. 5 shows the Top_Stub_Code part in MIRADF. 
The Top_Stub_Code includes three parts: the startup, 
the resource, and the behavior between agents. The 
startup part shows the activities of initialization 
phase. The resource part indicates the nodes and the 
path of data. In the example, we assume the MIRA 
will be migrated to the node “DMCL-NTPU” and 
the data is stored in the “D:\Music\Music.csv”. 
When the parser parsed the part of Top_Stub_Code, 
it directly generated the source code, as shown in 
Fig. 6. The similar approach can be applied to the 
Bottom_Stub_Code part. The part is to release 
resources and close the agent. 
 
Fig. 5: The Top-Stub in the MIRADF 
 Play Time, etc.  
We first implement a UA, as shown in Fig. 9(a). 
User can input a flat-based text and submit the 
request to the platform, such as “Who is the most 
popular pop singer in 2008?”  In the scenario, as 
shown in Fig. 8, the UA first sends a request to the 
RA (1) and the RA replies an acknowledgement to 
the UA. The RA sends a request to inquiry the ISA 
to get the metadata of available cloud nodes (2) and 
then the ISA replies the result. When the RA 
completes the reasoning of request and generates a 
MIRADF file, it will send the file to the UA (3) to 
show that the request is correct and can be inquired 
and retrieve information from cloud node.  
After the UA gets a MIRADF file, it can send the 
file to MIRA-GA (short as GA) to generate a MIRA 
(4) and then the GA replies an acknowledgement to 
UA. In the (5) the GA sends the generated MIRA to 
the UA. In step (6), the UA dispatches the MIRA to 
all candidate cloud nodes to retrieve desired 
information. These MIRAs in the cloud nodes will 
retrieve and send the result to the KSA for 
synthesizing the result and form a global view of 
information (7). Finally, the KSA will collect all of 
responses from cloud nodes, construct a global view 
of the information, and send the global view to the 
UA (8). The final result is shown in Fig. 9(b). 
Next we measure the latency consumed by all 
agents, as shown in Table 1.  The total latency is 
less than 3 (2.844 s) second. We think that the 
latency is reasonable because most of the latency is 
consumed by generating a MIRA (the time of RA 
plus the time of MIRA-GA). The MIRA only 
consume a bit of latency. It is reasonable because 
the RA and MIRA-GA need to deduce some of rules 
and combine some of code segments to generate the 
mobile agent. The measurement shows that the 
overhead is a little bit heavy. But when the number 
of cloud node increasing, the overhead will decrease 
greatly. Table 1 shows the RA will consume most of 
total time in the process of MIRA generation. And 
the most of time consumed in the RA is to deduce 
the rules of ontology. 
  
(a)                           
(b) 
Fig. 9: The user interface and UA 
Table 1: Latency of the example. 
 
In addition, as mentioned above, several previous 
approaches, each with its own characteristics, have 
focused on automatic or semi-automatic code/agent 
generation. We summarize those of [19-21] and our 
own approach in Table 2. As can be seen there, we 
use ontology/inference rule to deduce the behavior 
of agent and full automatically merge all codes into 
a mobile agent without user/developer intervention. 
This constitutes the major merit of our design. 
Table 2. Comparison among some famous 
approaches 
 Zhang et al. 
[19] 
Lage et al. 
[20] 
Chang et al. 
[21] 
Our 
approach 
Need 
Developer 
assistant 
Yes Yes Yes No 
Reasoning 
approach 
Quantitative 
model 
Web page’s 
Pattern 
recognition 
Web page’s 
Pattern 
recognition
Ontology/ 
reasoning 
rule 
automation Semi- Fully Semi- Fully  
VI. CONCLUSION AND FUTURE WORK 
In this paper, we have proposed and designed a 
rule based Mobile Agent Generation for Information 
Retrieval. The framework can assist users to 
automatically generate mobile agents for retrieving 
desired information spread over cloud platforms 
without user’s intervention. A user’s request will be 
automatically deduced by a Reasoning Agent (RA) 
based on predefined ontology and reasoning rule, 
and then be translated to a Mobile Information 
Retrieving Agent Description File (MIRADF) that 
is formatted in a proposed Mobile Agent 
Description Language (MADF) that defines the 
behavior of mobile IR agent. A generating agent, 
named MIRA-GA, is also implemented to generate 
a MIRA according to the MIRADF. We also design 
and implement a prototype to integrate these agents 
and show an interesting example to demonstrate the 
feasibility of the architecture. 
The future work is to extend the framework to 
other applications. In addition, we will strengthen 
 16
 
99 年度專題研究計畫研究成果彙整表 
計畫主持人：張玉山 計畫編號：99-2628-E-305-001- 
計畫名稱：應用於 Argo 海洋資訊的資源認知行動知識網格之設計與研究(III) 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 4 3 100%  
研究報告/技術報告 0 0 100%  
研討會論文 5 3 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 3 3 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
國科會補助專題研究計畫成果報告自評表 
請就研究內容與原計畫相符程度、達成預期目標情況、研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）、是否適
合在學術期刊發表或申請專利、主要發現或其他有關價值等，作一綜合評估。
1. 請就研究內容與原計畫相符程度、達成預期目標情況作一綜合評估 
■達成目標 
□未達成目標（請說明，以 100 字為限） 
□實驗失敗 
□因故實驗中斷 
□其他原因 
說明： 
2. 研究成果在學術期刊發表或申請專利等情形： 
論文：■已發表 □未發表之文稿 □撰寫中 □無 
專利：□已獲得 □申請中 ■無 
技轉：□已技轉 □洽談中 ■無 
其他：（以 100 字為限） 
本計畫已經在專業的國際學術期刊上發表多篇論文, 包含二篇 SCI 等級, 二篇 EI 等級下
列 
二篇 SCIE 等級的分別發表於 Journal of Internet Technology 及 Journal of Universal 
of Computer Science. 二篇 EI 等級的分別發表於 IEEE IT Professional 及 Journal of 
Ambient Intelligence and Humanized Computing.   
 
3. 請依學術成就、技術創新、社會影響等方面，評估研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）（以
500 字為限） 
本計畫己有多篇國際期刊發表, 四篇論文分別如下: 
1. Yue-Shan Chang*, Hung-Hsiang Chang, Ruey-Kai Sheu, and Ching-Tsorng Tsai, ’A 
Resource-Aware Task Scheduling Algorithm on Mobile Computational Grid,’ Journal 
of Internet Technology, Vol. 12, No. 2, March 2011, pp. 279-291. 
(98-2221-E-305-006 , 99-2628-E-305-001 ) (SCIE).  
2. Yue-Shan Chang*, Chao-Tung Yang, Yu-Cheng Luo, ’An Ontology based Agent 
Generation for Information Retrieval on Cloud Environment,’ Journal of Universal 
of Computer Science, Vol. 17, No. 8, 2011, pp. 1135-1160. (98-2221-E-305-006 , 
99-2628-E-305-001 ) (SCIE, 0.669)  
3. Yue-Shan Chang*, Chih-Tien Fan, Yu-Sheng Wu, ’Agent-based Intelligent Software 
Exploits Near-Field Communication,’ IEEE IT Professional, Vol. 13, No. 2, 
March/April 2011, pp.30-36. (99-2628-E-305-001) (EI) 
4. Yue-Shan Chang*, Chih-Tien Fan, Tong-Ying Juang, ’Supporting software 
