overlapping community structure, we show that our 
algorithm outperforms the fitness algorithm 
previously proposed in the literature, and the 
communities detected by our algorithm are very close 
to the built-in overlapping communities in most 
cases. Furthermore, we apply our algorithm to data  
sets from real-world online social networks, 
including Facebook, YouTube, and Flickr, that consist 
of tens of thousands of nodes, and show the 
cumulative distributions of community sizes and the 
average community sizes. 
英文關鍵詞： Clustering algorithms, large complex networks, 
overlapping communities, social networks. 
 
 中文摘要 
學界普遍認為，在大型複雜網路中找出社群結構(community structure)是一個基礎而
重要的問題。在這份研究報告裡，我們提出了一個以相關係數為基礎的演算法，可以用
以偵測出大型網路中互相重疊的社群結構(overlapping community structure)。首先，對於
一個由節點形成的集合，我們將此集合的重要性定義為此集合的自我相關係數(self 
correlation)，接著為了描述此集合中每一個節點與同一集合之其它節點的相關程度，我
們定義了此集合的相關強度(correlation intensity)。在我們的演算法中，最主要的想法是
讓一個節點形成的集合漸漸地增大(透過不斷地加入新的節點)，在增大的過程中盡可能
地將此集合的自我相關係數最大化，同時在這過程中此集合的相關強度也要維持在一個
水準以上。此外，我們也對所提出的演算法做了一些理論分析。在模擬方面，我們用電
腦產生出具有內建的互相重疊之社群結構的網路，透過大量的測試，結果顯示我們的演
算法所偵測到的社群結構與內建的社群結構非常相近，並且正確率也遠比先前文獻中所
提出的fitness演算法要高。最後，為了進一步了解真實世界的社群結構，我們將我們的
演算法應用在Facebook，Youtube，以及Flickr等真實世界網路，每個網路都有數萬個節
點，我們計算出這些網路的平均社群大小，並展示出社群大小的累積分佈。 
 
關鍵詞：叢聚演算法、大型複雜網路、重疊社群、社交網路 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
2can be found. This process is repeated until there are no
unclassified nodes left, at which time we obtain an overlapping
cover for the graph. The key idea in our algorithm is to locally
maximize the self correlations of sets of nodes in a greedy
manner while maintaining the correlation intensities of those
sets to be above a given threshold. Furthermore, we obtain
sufficient conditions such that every set of nodes generated by
our algorithm is a community with correlation intensity greater
than a given threshold.
We test our algorithm on a large number of computer
generated random graphs with built-in overlapping community
structure. In order to quantify the performance of our algo-
rithm, we propose a similarity index for measuring the simi-
larity or closeness between two community structures. From
the simulation results, we see that our algorithm outperforms
the fitness algorithm in [16], and the communities detected
by our algorithm are very close to the built-in overlapping
communities in most cases. We also apply our algorithm to
real-world online social network data sets from Facebook [15],
YouTube [9], and Flickr [9] that consist of tens of thousands
of nodes and show the cumulative distributions of community
sizes and the average community sizes.
The rest of this report is organized as follows. In Section II,
we briefly review the general probabilistic framework in [1],
and introduce the concepts of self correlation and correlation
intensity for a set of nodes. In Section III, we propose our
correlation-based algorithm for detecting overlapping com-
munities in a graph, and perform computational complexity
analysis for the proposed algorithm. In Section IV, we give
sufficient conditions such that every set of nodes generated by
our algorithm is a community with correlation intensity greater
than a given threshold. Finally, we report our simulation results
in Section V and conclude this report in Section VI, where we
address possible extensions of our work.
II. PRELIMINARIES
In this section, we first briefly review the general proba-
bilistic framework in our previous work [1] and derive some
useful properties. Then we give some definitions and notations
that will be used in the next section to develop our proposed
algorithm for detecting overlapping communities in a network.
A. The General Probabilistic Framework
In the literature, a network is commonly modelled by a
graph. In this report, we focus on undirected graphs, and we
assume that the graphs are connected, i.e., any two distinct
nodes in the graphs are connected by at least one path. In [1], a
class of distribution-based clustering algorithms was proposed
for detecting “disjoint” communities in a graph based on a
general probabilistic framework. The key idea in the general
probabilistic framework is to characterize the start node and
the end node of a randomly selected path in the graph in a
probabilistic manner as described below.
Consider a graph G(V,E), where V is the set of nodes
and E is the set of edges in the graph. Let n = |V | be the
number of nodes in the graph and for simplicity let V =
{1, 2, . . . , n}, then the graph can also be characterized by its
adjacency matrix A, where
Aij =
{
1, if there is an edge between nodes i and j,
0, otherwise, (1)
for all i, j ∈ V . Since the graphs considered in this report are
undirected, it is clear from (1) that their adjacency matrices
are symmetric.
Suppose that a path in the graph G(V,E) is randomly
selected. Let X be the start node and Y be the end node
of the randomly selected path. We characterize how the path
is “randomly” selected by defining the bivariate distribution
PX,Y (i, j) = P (X = i, Y = j), i, j ∈ V , for its start
node X and end node Y . First we consider a function
f : Sn×n(R) → Sn×n(R), where R is the set of all real
numbers and Sn×n(R) is the set of all n× n real symmetric
matrices, that maps an adjacency matrix A (note that A
is a symmetric matrix) to another real symmetric matrix
f(A) such that f(A)ij ≥ 0 for all i, j ∈ V and the sum
α(f(A)) of all the entries in the matrix f(A) is finite, i.e.,
α(f(A)) =
∑n
i=1
∑n
j=1 f(A)ij < ∞. Then we define the
bivariate distribution as
PX,Y (i, j) = f(A)ij/α(f(A)), i, j ∈ V. (2)
The reason why the bivariate distribution is defined as in
(2) can be explained as follows. Intuitively, we expect that all
paths with the same length are chosen with equal probability
and a path with a smaller length is more likely to be chosen
than that with a larger length. Furthermore, we assume that
a path with length greater than a certain threshold, say u, is
chosen with probability zero. It follows that a good choice for
f(A) is a polynomial in A with nonincreasing coefficients,
say f(A) =
∑u
k=0 akA
k with a0 ≥ a1 ≥ · · · ≥ au > 0 for
some u ≥ 1 (note that A0 is the n×n identity matrix I). It is
clear that ak could be regarded as the weight of a path with
length k and α(f(A)) could be viewed as the normalization
constant such that the probability that a path with length k
is chosen is equal to ak/α(f(A)) for 0 ≤ k ≤ u and is
equal to zero for k ≥ u + 1. Since it is easy to see that the
number of paths with length k and with i as the start node
and j as the end node is equal to (Ak)ij for 0 ≤ k ≤ u,
we immediately deduce that the probability that the randomly
selected path has i as its start node and j as its end node
is equal to
∑u
k=0(A
k)ij · ak/α(f(A)) = f(A)ij/α(f(A)) as
given in (2).
The marginal distributions of the start node X and the end
node Y of the random selected path are given by
PX(i) =
n∑
j=1
PX,Y (i, j) =
1
α(f(A))
n∑
j=1
f(A)ij , i ∈ V, (3)
PY (j) =
n∑
i=1
PX,Y (i, j) =
1
α(f(A))
n∑
i=1
f(A)ij , j ∈ V. (4)
Note that since the matrix f(A) is symmetric, it is clear from
(2) that the bivariate distribution has the following symmetric
4from (10), (11), and
∑
i∈V PX(i) =
∑
i∈V PY (i) = 1 that
0 < P (XS = 1) =
∑
i∈S
PX(i) = 1−
∑
i/∈S
PX(i) < 1, (13)
0 < P (YT = 1) =
∑
j∈T
PY (j) = 1−
∑
j /∈T
PY (j) < 1. (14)
The correlation ρS,T between the two nonempty proper
subsets S and T of V is defined as the correlation coefficient
ρ(XS , YT ) of the two indicator random variables XS and YT ,
namely,
ρS,T = ρ(XS , YT ) =
Cov(XS , YT )√
Var(XS)
√
Var(YT )
, (15)
where
Cov(XS , YT ) = E[XSYT ]− E[XS ]E[YT ]
= P (XS = 1, YT = 1)− P (XS = 1)P (YT = 1),(16)
Var(XS) = E[X2S ]− (E[XS ])2
= P (XS = 1)− (P (XS = 1))2, (17)
Var(YT ) = E[Y 2T ]− (E[YT ])2
= P (YT = 1)− (P (YT = 1))2. (18)
Note that as we have 0 < P (XS = 1) < 1 in (13) and
0 < P (YT = 1) < 1 in (14), we see from (17) and (18) that
Var(XS) > 0 and Var(YT ) > 0. (19)
As such, the correlation ρS,T between two nonempty proper
subsets S and T of V as given in (15) is well defined.
In the following lemma, we show that the correlation
between two nonempty proper subsets of V is symmetric.
Lemma 1 Let S and T be two nonempty proper subsets of
V . Then we have ρS,T = ρT,S .
Proof. The proof is given in Appendix A.
To measure the importance of a community (defined in
Section II-C), we define the self correlation ρS of a nonempty
proper subset S of V as the correlation between S and itself,
namely,
ρS = ρ(XS , YS) =
Cov(XS , YS)√
Var(XS)
√
Var(YS)
. (20)
Communities with larger self correlations are considered to be
more important than those with smaller self correlations.
C. Communities, Correlation Intensities, and Covers
Let S be a nonempty subset of V . In [1], S is called a
community in a probabilistic sense if
P (X ∈ S, Y ∈ S) ≥ P (X ∈ S)P (Y ∈ S). (21)
In other words, a nonempty subset S of V is a community in
a probabilistic sense if the two events X ∈ S and Y ∈ S are
nonnegatively correlated.
Since S is nonempty, we have from (11) and (8) that P (Y ∈
S) > 0. It follows that (21) is equivalent to
P (X ∈ S|Y ∈ S) ≥ P (X ∈ S). (22)
In other words, a nonempty subset S of V is a community in
a probabilistic sense if given that Y ∈ S, the probability that
X is also in S is not less than the unconditional probability
P (X ∈ S). Note that V itself is a community in a probabilistic
sense as it satisfies (21). We call V a trivial community since it
provides no insight for the community structure in the graph.
As we are not interested in the trivial community V , we let
S be a nonempty proper subset of V . As such, it can be seen
from (20) and (16) that (21) is equivalent to
ρS ≥ 0. (23)
In other words, a nonempty proper subset S of V is a
community in a probabilistic sense if S has a nonnegative
self correlation.
To present our proposed algorithm for detecting overlapping
communities in a graph in Section III, we need to introduce
the concept of connectedness between a node and a set not
containing that node. Recall that in this report the function f is
chosen as f(A) =
∑u
k=0 akA
k with a0 ≥ a1 ≥ · · · ≥ au > 0
for some u ≥ 1. Let S be a nonempty proper subset of V . For
a node i /∈ S, we say that node i is connected to the set S with
respect to f (or simply node i is connected to S) if f(A)ij > 0
or, equivalently, PX,Y (i, j) = f(A)ij/α(f(A)) > 0 for some
j ∈ S, i.e., there is at least one path with length not greater
than u and with node i as its start node and some node j ∈ S
as its end node.
As P (X{i} = 1, YS = 1) =
∑
j∈S PX,Y (i, j), we see that a
node i /∈ S is connected to S if and only if P (X{i} = 1, YS =
1) > 0. Therefore, for any node i /∈ S that is not connected
to S, we have P (X{i} = 1, YS = 1) = 0, and it follows from
(15), (16), (13), and (14) that
ρ{i},S =
−P (X{i} = 1)P (YS = 1)√
Var(X{i})
√
Var(YS)
< 0. (24)
In other words, nodes in V \ S that are not connected to S
are all negatively correlated with S.
In our proposed algorithm for detecting overlapping com-
munities in a graph, we add a node to a nonempty proper
subset S of V to form a larger set at each iteration. In our
proposed algorithm, we only consider nodes in V \ S that
have correlations greater than a given threshold 0 ≤ γ < 1
with the set S. From (24), we can see that this rules out all
the nodes in V \ S that are not connected to S. In fact, when
a node i /∈ S that has correlation greater than γ with the set
S is merged with S to form a larger set, it is possible that
a node j ∈ S may not be strongly correlated with the set
(S \ {j}) ∪ {i}, and hence the new set may not be regarded
as a good community. Therefore, in our proposed algorithm,
we require that a node i /∈ S that has correlation greater than
γ with the set S can be merged with S to form a larger set
only when the correlation between every node j ∈ S and the
set (S \ {j}) ∪ {i} is also greater than γ, and we call such a
new set a set with correlation intensity greater than γ.
Formally, we say that a set S containing at least two nodes
is a set with correlation intensity greater than γ if
ρ{i},S\{i} > γ, for all i ∈ S. (25)
6It is easy to see that the iteration of Step 1 and Step 2 in
Algorithm 2 stops at some k ≥ 1 and nk ≥ 1, and we have
U(k, nk) = ∅. Furthermore, we have the following results
about Algorithm 2.
Lemma 3 (i) For 1 ≤ k′ ≤ k, i(k′, 1) /∈ S1∪S2∪· · ·∪Sk′−1.
(ii) For 1 ≤ k′ ≤ k and 1 ≤ mk′ ≤ nk′ , S(k′,mk′) consists
of the mk′ classified nodes i(k′, 1), i(k′, 2), . . . , i(k′,mk′) at
the (k′,mk′)th iteration, i.e.,
S(k′,mk′) = {i(k′, 1), i(k′, 2), . . . , i(k′,mk′)}. (33)
Therefore, it follows from Lemma 3(i) and Sk′ = S(k′, nk′) =
{i(k′, 1), i(k′, 2), . . . , i(k′, nk′)} for 1 ≤ k′ ≤ k in (33) that
the sets S1, S2, . . . , Sk are distinct.
(iii) For 1 ≤ k′ ≤ k and 1 ≤ mk′ ≤ nk′ , S1 ∪ S2 ∪
· · · ∪ Sk′−1 ∪ S(k′,mk′) is the set of all classified nodes and
U(k′,mk′) is the set of the remaining unclassified nodes at
the (k′,mk′)th iteration, and we have
U(k′,mk′) = V \ (S1 ∪ S2 ∪ · · · ∪ Sk′−1 ∪ S(k′,mk′)). (34)
It follows from U(k, nk) = ∅ that S1 ∪ S2 ∪ · · · ∪ Sk = V .
Proof: The proof is given in Appendix B.
We make the following remarks about Algorithm 2.
(i) Suppose that nk′ ≥ 2 for some 1 ≤ k′ ≤ k. Then
for 2 ≤ mk′ ≤ nk′ , it is possible that the node i(k′,mk′)
in Step 2(b) has already been labelled as classified at some
previous iteration. In that case, we have from Lemma 3(iii) that
i(k′,mk′) ∈ S1∪S2∪· · ·∪Sk′−1∪S(k′,mk′−1). As i(k′,mk′)
is connected to S(k′,mk′ − 1), we also have i(k′,mk′) /∈
S(k′,mk′−1). As such, it follows that i(k′,mk′) ∈ S1∪S2∪
· · · ∪Sk′−1. Therefore, S1, S2, . . . , Sk may overlap with each
other, and {S1, S2, . . . , Sk} is in general an overlapping cover
for G.
(ii) For 1 ≤ k′ ≤ k and 1 ≤ mk′ ≤ nk′ , the goal
in Step 2 of Algorithm 2 is to find a node i such that
S(k′,mk′) ∪ {i} is a set with correlation intensity greater
than γ. As mentioned in Section II-C, it suffices to consider
nodes that are connected to S(k′,mk′), i.e., nodes that are
in C(k′,mk′). To reduce the computational complexity, in
Step 2(a) we first compute the set C(k′,mk′ ; γ) consisting
of all nodes i ∈ C(k′,mk′) such that ρ{i},S(k′,mk′ ) > γ.
In Step 2(b), we check the nodes in C(k′,mk′ ; γ) one by
one, starting from the node i ∈ C(k′,mk′ ; γ) with the highest
self correlation ρS(k′,mk′ )∪{i}, to see if S(k
′,mk′) ∪ {i} is
a set with correlation intensity greater than γ. From our
numerical results, we observe that in most scenarios we only
need to check one or two nodes in C(k′,mk′ ; γ) if there
exists a node i ∈ C(k′,mk′) such that S(k′,mk′) ∪ {i} is
a set with correlation intensity greater than γ, which is much
more efficient than checking every node in C(k′,mk′) in an
exhaustive manner.
(iii) From (i) above, we know that {S1, S2, . . . , Sk} is
a cover for G. However, it is possible that a subset of
{S1, S2, . . . , Sk} is also a cover for G, and the goal in Step 3
of Algorithm 2 is to find the most “important” and “compact”
subset of {S1, S2, . . . , Sk} that is also a cover for G. For
this, we measure the importance of the sets S1, S2, . . . , Sk
according to their self correlations and choose as few sets
with the highest self correlations as possible such that they
form a cover for G.
B. Complexity Analysis of the Proposed Algorithm
In this section, we perform computational complexity anal-
ysis for Algorithm 2. We first consider the complexity for find-
ing the sets S1, S2, . . . , Sk as described in Step 1 and Step 2 of
Algorithm 2. Note that for 1 ≤ k′ ≤ k, Step 1 is executed only
at the (k′, 1)th iteration and the complexity for the operations
in Step 1 is O(1) as we only need to randomly choose a node
i(k′, 1) from the set U(k′−1, nk′−1). Consider the (k′,mk′)th
iteration for 1 ≤ k′ ≤ k and 1 ≤ mk′ ≤ nk′ . Finding
the set C(k′,mk′ ; γ) in (28) in Step 2(a) has complexity
O(|C(k′,mk′)|), and writing C(k′,mk′ ; γ) as an ordered set
as in (29) has complexity O(log |C(k′,mk′ ; γ)|) (by using a
binary heap). As the nodes in C(k′,mk′) are in V \S(k′,mk′),
it follows from |S(k′,mk′)| = mk′ in (33) that
|C(k′,mk′)| ≤ n− |S(k′,mk′)| = n−mk′ . (35)
Thus, at the (k′,mk′)th iteration Step 2(a) has complexity
O(|C(k′,mk′)|) = O(n−mk′). (36)
Furthermore, finding a node i in the ordered set C(k′,mk′ ; γ)
such that S(k′,mk′) ∪ {i} is a set with correlation intensity
greater than γ in Step 2(b) has complexity O(|C(k′,mk′ ; γ)| ·
|S(k′,mk′)|). It follows from (35) and |S(k′,mk′)| = mk′
that at the (k′,mk′)th iteration Step 2(b) has complexity
O(|C(k′,mk′ ; γ)| · |S(k′,mk′)|) = O((n−mk′)mk′). (37)
As such, we see from (36) and (37) that at the (k′,mk′)th
iteration Step 2 has complexity O((n −mk′)mk′). Thus, the
complexity for finding the set Sk′ is
O
 nk′∑
mk′=1
(n−mk′)mk′

= O(nk′(nk′ + 1)(3n− 2nk′ − 1)/6) = O(n(nk′)2).(38)
Therefore, we have from (38) that the complexity for finding
the sets S1, S2, . . . , Sk is O(n
∑k
k′=1 n
2
k′).
In Step 3 of Algorithm 2, finding S(1), S(2), . . . , S(k) by
sorting the self correlations of S1, S2, . . . , Sk has complexity
O(log k), and finding the the number c in (32) has complexity
O(cn). It follows from c ≤ k that the complexity for the
execution of Step 3 is O(log k+ cn) = O(kn). Therefore, we
see from kn ≤ n∑kk′=1(nk′)2 that the overall complexity of
Algorithm 2 is
O
(
n
k∑
k′=1
n2k′
)
+O(kn) = O
(
n
k∑
k′=1
n2k′
)
. (39)
In general, k and n1, n2, . . . , nk are graph-dependent.
In practice, as remarked in (ii) at the end of Section III-A,
we observe from our numerical results that in Step 2(b) we
8Proof. (Proof of Theorem 5) Let 1 ≤ k′ ≤ k. To show that
nk′ ≥ 2, we see from Step 2 of Algorithm 2 that it suffices
to show that there exists a node i such that S(k′, 1) ∪ {i} =
{i(k′, 1), i} is a set with correlation intensity greater than γ.
For simplicity, let i∗ = i(k′, 1). From the assumption in
the statement of the theorem, we see that there exists a node
j∗ 6= i∗ such that (45) holds with i = i∗ and j = j∗. In
the following, we show that {i∗, j∗} is a set with correlation
intensity greater γ, i.e., ρ{i∗},{j∗} = ρ(X{i∗}, Y{j∗}) > γ and
ρ{j∗},{i∗} = ρ(X{j∗}, Y{i∗}) > γ, and the proof is completed.
Note that from (17), (10), and (3), we have
Var(X{i∗}) = P (X{i∗} = 1)− (P (X{i∗} = 1))2
= PX(i
∗)− (PX(i∗))2 = di
∗
2m
−
(
di∗
2m
)2
.(46)
Similarly, we have
Var(Y{j∗}) =
di∗
2m
−
(
di∗
2m
)2
. (47)
It follows from (16), (10)–(12), (2)–(4), and (45)–(47) that
Cov(X{i∗}, Y{j∗})
= P (X{i∗} = 1, Y{j∗} = 1)− P (X{i∗} = 1)P (Y{j∗} = 1)
= PX,Y (i
∗, j∗)− PX(i∗)PY (j∗)
=
f(A)i∗j∗
α(f(A))
−
∑n
j=1 f(A)i∗j
α(f(A))
·
∑n
j=1 f(A)j∗j
α(f(A))
=
f(A)i∗j∗
2m
− di∗
2m
· dj∗
2m
>
γ
2m
·
√√√√(di∗ − d2i∗
2m
)(
dj∗ −
d2j∗
2m
)
= γ ·
√
Var(X{i∗})Var(Y{j∗}). (48)
As such, we have from (15) and (48) that
ρ(X{i∗}, Y{j∗}) =
Cov(X{i∗}, Y{j∗})√
Var(X{i∗})
√
Var(Y{j∗})
> γ.
Furthermore, we have from Lemma 1 that ρ(X{j∗}, Y{i∗}) =
ρ(X{i∗}, Y{j∗}) > γ.
We have the following corollary to Theorem 5.
Corollary 6 Let di, i ∈ V , and m be given as in Theorem 5.
Suppose that there exists h > 0 such that for all i ∈ V ,
we have di ≤
√
2hm and f(A)ij ≥ h + γ
√
2hm when
j is connected to {i}. Then we have nk′ ≥ 2 for all
1 ≤ k′ ≤ k. Therefore, S1, S2, . . . , Sk are all sets with
correlation intensities greater than γ.
Proof. It is clear from Theorem 5 that it suffices to show that
(45) holds for all i ∈ V . Let i ∈ V . As we assume that the
graph is connected, there exists a node j that is connected to
{i}, i.e., f(A)ij > 0. Note that j 6= i by definition of con-
nectedness. It follows that di =
∑n
j′=1 f(A)ij′ ≥ f(A)ij > 0
and dj =
∑n
j′=1 f(A)jj′ ≥ f(A)ji = f(A)ij > 0. As such,
we have
f(A)ij − γ
√√√√(di − d2i
2m
)(
dj −
d2j
2m
)
− didj
2m
> f(A)ij − γ
√
didj − didj
2m
≥ h+ γ
√
2hm− γ
√
2hm− 2hm
2m
= 0.
The proof is completed.
Note that if γ = 0 and we choose h = min{f(A)ij :
f(A)ij > 0}, then for all i ∈ V , we have f(A)ij ≥
h + γ
√
2hm when j is connected to {i}. As such, we have
from Corollary 6 that S1, S2, . . . , Sk are sets with corre-
lation intensities greater than zero if di ≤
√
2hm for all
i ∈ V . In particular, if f(A) = A, then we can choose
h = min{f(A)ij : f(A)ij > 0} = 1, and hence for graphs
with di ≤
√
2m for all i ∈ V (e.g., the Facebook data set
in [15]), the sets S1, S2, . . . , Sk generated by Algorithm 2 are
sets with correlation intensities greater than zero.
Obviously, if the conditions in Theorem 4 and Theorem 5
(or Corollary 6) hold, then the sets S1, S2, . . . , Sk generated by
Algorithm 2 are all “communities” with correlation intensities
greater than γ.
V. SIMULATION RESULTS
In this section, we report our simulation results. We first
apply Algorithm 2 to a large number of random graphs to
see whether the built-in overlapping communities are detected.
Then we apply Algorithm 2 to real-world online social net-
work data sets from Facebook [15], YouTube [9], and Flickr
[9], and show the cumulative distributions of community sizes
and the average community sizes.
A. Random Graphs With Built-in Overlapping Communities
In this section, we show our simulation results on a large
number of random graphs with built-in overlapping communi-
ties. In our simulations, there are four built-in communities in
each random graph, each community consists of 32 nodes, and
the ith community has 8 nodes in common with the (i+ 1)th
community for i = 1, 2, 3. Specifically, the built-in overlap-
ping cover for each random graph is B = {T1, T2, T3, T4},
where T1 = {i : 1 ≤ i ≤ 32}, T2 = {i : 25 ≤ i ≤ 56},
T3 = {i : 49 ≤ i ≤ 80}, and T4 = {i : 73 ≤ i ≤ 104}.
Thus, there are a total of 104 nodes in each random graph.
We generate the Erdo¨s-Re´nyi [17] type of random graphs
by establishing an edge between two nodes within the same
communities with probability pin and establishing an edge
between two nodes in different communities with probability
pout. Naturally, we would like to have the expected number
of edges, say zin, between a node and the other nodes in the
same community to be greater than or equal to the expected
number of edges, say zout, between a node and the other
nodes in different communities. For this, we need to have
pin ≥ 7231pout (as zin = 31pin and zout = 72pout). This
10
100 200 300 400
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
f(A)=A
x
Fr
ac
tio
n 
of
 c
om
m
un
itie
s 
wi
th
 s
ize
 n
o 
gr
ea
te
r t
ha
n 
x
 
 
γ = 0.01
γ = 0.02
γ = 0.03
100 200 300 400
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
f(A)=I+A
x
Fr
ac
tio
n 
of
 c
om
m
un
itie
s 
wi
th
 s
ize
 n
o 
gr
ea
te
r t
ha
n 
x
 
 
γ = 0.01
γ = 0.02
γ = 0.03
(b)(a)
Fig. 3. Cumulative distributions of community sizes in Facebook data set
given by applying Algorithm 2 with γ = 0.01, 0.02, 0.03: (a) f(A) = A;
(b) f(A) = I +A.
500 1000 1500
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
f(A)=A
x
Fr
ac
tio
n 
of
 c
om
m
un
itie
s 
wi
th
 s
ize
 n
o 
gr
ea
te
r t
ha
n 
x
 
 
γ = 0.01
γ = 0.02
γ = 0.03
500 1000 1500
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
f(A)=I+A
x
Fr
ac
tio
n 
of
 c
om
m
un
itie
s 
wi
th
 s
ize
 n
o 
gr
ea
te
r t
ha
n 
x
 
 
γ = 0.01
γ = 0.02
γ = 0.03
(a) (b)
Fig. 4. Cumulative distributions of community sizes in YouTube data set
given by applying Algorithm 2 with γ = 0.01, 0.02, 0.03: (a) f(A) = A;
(b) f(A) = I +A.
200 400 600
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
f(A)=A
x
Fr
ac
tio
n 
of
 c
om
m
un
itie
s 
wi
th
 s
ize
 n
o 
gr
ea
te
r t
ha
n 
x
 
 
γ = 0.01
γ = 0.02
γ = 0.03
200 400 600
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
f(A)=I+A
x
Fr
ac
tio
n 
of
 c
om
m
un
itie
s 
wi
th
 s
ize
 n
o 
gr
ea
te
r t
ha
n 
x
 
 
γ = 0.01
γ = 0.02
γ = 0.03
(a) (b)
Fig. 5. Cumulative distributions of community sizes in Flickr data set given
by applying Algorithm 2 with γ = 0.01, 0.02, 0.03: (a) f(A) = A; (b)
f(A) = I +A.
In Figure 3 (resp., Figure 4 and Figure 5), we show the cu-
mulative distributions of community sizes in Facebook (resp.,
YouTube and Flickr) data set given by applying Algorithm 2
with γ = 0.01, 0.02, 0.03 and f(A) = A, I + A. In Table I,
we show the corresponding average community sizes for these
distributions. From Figure 3–Figure 5, we can see that for the
same γ, most communities detected with f(A) = I + A are
smaller than those detected with f(A) = A. Furthermore, for
the same f(A), the fraction of community sizes not greater
than a fixed value increases as γ increases, and this leads to
the result in Table I that the average community size decreases
as γ increases.
From Table I, we see that the average sizes of communities
in YouTube and Flickr are less than those in Facebook in all
cases. However, we observe from our numerical results that
there exist very large communities in YouTube and Flickr. For
instance, in the case that γ = 0.01, there exist communities
with sizes 1532 and 776, respectively, in YouTube and Flickr.
This phenomenon may be explained by the user behavior in
YouTube and Flickr as follows. Note that YouTube and Flickr
are platforms for sharing videos and pictures, respectively,
in which a small portion of users indeed represent certain
commercial organizations and hence have a large number of
edges between them and the other users. This results in a small
portion of very large communities in YouTube and Flickr (but
they do not contribute significantly to the average community
sizes).
VI. CONCLUSION
Based on a general probabilistic framework for networks
(graphs) in our previous work, in this report we proposed
a correlation-based algorithm for detecting overlapping com-
munities in graphs. The key idea in our correlation-based
algorithm is to locally maximize the self correlations of sets
of nodes in a greedy manner while maintaining the correla-
tion intensities of those sets to be above a given threshold.
Through extensive computer simulations of random graphs
with built-in overlapping community structure, we showed
that our algorithm outperforms the fitness algorithm and the
communities detected by our algorithm are very close to
the built-in overlapping communities in most cases. We also
applied our algorithm to real-world online social networks data
sets from Facebook, YouTube, and Flickr that consist of tens of
thousands of nodes, and showed the cumulative distributions
of community sizes and the average community sizes.
There are some research directions that are worth further
investigation.
(i) As mentioned in Section V, we see from our numerical
results of random graphs that using Algorithm 2 with f(A) =
A (or f(A) = I + A) and γ = 0.01 appears to perform very
well. Clearly, it is possible that other choices of f(A) and
γ may lead to better results. However, it is not clear how to
determine appropriate f(A) and γ for a given graph.
(ii) Application to time-varying graphs: In real-world appli-
cations, the graph under consideration is in general a time-vary
graph, i.e., nodes and edges in the graph may disappear and
12
REFERENCES
[1] C.-S. Chang, C.-Y. Hsu, J. Cheng, and D.-S. Lee, “A general proba-
bilistic framework for detecting community structure in networks,” in
Proceedings IEEE International Conference on Computer Communica-
tions (INFOCOM’11), Shanghai, China, April 10–15, 2011.
[2] M. E. J. Newman, “Fast algorithm for detecting community structure in
networks,” Physical Review E, vol. 69, 066133, June 2004.
[3] S. Fortunato, “Community detection in graphs,” Physics Reports,
vol. 486, pp. 75–174, February 2010.
[4] M. A. Porter, J.-P. Onnela, and P. J. Mucha, “Communities in networks,”
Notices of the American Mathematical Society, vol. 56, pp. 1082–1097,
October 2009.
[5] G. Palla, I. Dere´nyi, I. Farkas, and T. Vicsek, “Uncovering the overlap-
ping community structure of complex networks in nature and society,”
Nature Letters, vol. 435, pp. 814–818, June 2005.
[6] S. Garriss, M. Kaminsky, M. J. Freedman, B. Karp, D. Mazie´res, and H.
Yu, “Re:Reliable email,” in Proceedings 3rd Symposium on Networked
Systems Design and Implementation (NSDI’06), San Jose, CA, USA,
May 8–10, 2006.
[7] A. Mislove, K. P. Gummadi, and P. Druschel, “Exploiting social net-
works for Internet search,” in Proceedings 5th Workshop on Hot Topics
in Networks (HotNets-V’06), Irvine, CA, USA, November 29–30, 2006.
[8] H. Yu, M. Kaminsky, P. B. Gibbons, and A. Flaxman, “SybilGuard:
Defending against sybil attacks via social networks,” IEEE/ACM Trans-
actions on Networking, vol. 16, pp. 576–589, June 2008
[9] A. Mislove, M. Marcon, K. P. Gummadi, P. Druschel, and B. Bhattachar-
jee, “Measurement and analysis of online social networks,” in Proceed-
ings 5th ACM/Usenix Internet Measurement Conference (IMC’07), San
Diego, CA, USA, October 24–26, 2007.
[10] S. Zhang, R.-S. Wang, and X.-S. Zhang, “Identification of overlapping
community structure in complex networks using fuzzy c-means cluster-
ing,” Physica A, vol. 374, pp. 483–490, January 2007.
[11] T. Nepusz, A. Petro´czi, L. Ne´gyessy, and F. Bazso´, “Fuzzy communities
and the concept of bridgeness in complex networks,” Physical Reiew E,
vol. 77, 016107, January 2008.
[12] H.-W. Shen, X.-Q. Cheng, and J.-F. Guo, “Quantifying and identifying
the overlapping community structure in networks,” Journal of Statisitical
Mechanics: Theory and Experiment, vol. 2009, July 2009.
[13] V. Nicosia, G. Mangioni, V. Carchiolo, and M. Malgeri, “Extending
the definition of modularity to directed graphs with overlapping com-
munities,” Journal of Statisitical Mechanics: Theory and Experiment,
vol. 2009, March 2009.
[14] I. Psorakis, S. Roberts, and B. Sheldo, “Efficient bayesian community
detection using non-negative matrix factorisation,” arXiv:1009.2646v5,
September 2010.
[15] B. Viswanath, A. Mislove, M. Cha, and K. P. Gummadi, “On the evo-
lution of user interaction in Facebook,” in Proceedings 2nd ACM SIG-
COMM Workshop on Online Social Networks (WOSN’09), Barcelona,
Spain, August 17, 2009.
[16] A. Lancichinetti, S. Fortunato, and J. Kerte´sz, “Detecting the overlap-
ping and hierarchical community structure in complex networks,” New
Journal of Physics, vol. 11, 033015, March 2009.
[17] Erdo¨s and Re´nyi, “On random graphs,” Publicationes Mathematicae,
vol. 6, pp. 290–297, 1959.
[18] G. Csardi and T. Nepusz, “The igraph software package for complex
network research,” InterJournal Complex Systems, vol. 1695, 2006.
Mr. Cédric Soulas (R&D Engineer for the OPA language) 
3. Keynote: 
(1) On Managing Heterogeneity in Production Cloud Computing Environments 
Pr. Raouf Boutaba (D.R. Cheriton School of Computer Science University of Waterloo) 
(2) Towards Urban Vehicular Networking 
Dr. Yacine Ghamri-Doudane (Ecole Nationale Supérieure d'Informatique pour l'Industrie 
et l'Entreprise) 
 
4. 會議論文： 
  本次會議共錄取 32 篇會議論文，主要為通訊網路方面的研究成果。以
下是與我們的研究主題較為相關或我們較有興趣深入研究的論文： 
(1) Performance Evaluation of Fairness between High-speed TCPs in Wireless Environment 
(2) Evaluation of SIP Call Setup Delay for VoIP in IMS 
(3) MPLS-TP: OAM Discovery Mechanism 
(4) Supporting data center management through clustering of system data streams 
(5) Extension of Path Computation Element (PCE) Framework for Resource Provisioning based on 
User Profile in Dynamic Circuit Network 
(6) Traffic Engineering Approaches in P2P Environments 
(7) CO2 Laser Writing of Long-Period Fiber Gratings in Polarization-Maintaining Fiber under 
Tension 
(8) SAVI - A Model for Video Workload Generation Based on Scene Length 
(9) UNIVERSALLY: A Context-Aware Architecture for Multimedia Access in Digital Homes 
(10) A User-Centric Network Architecture For Sustainable Rural Areas 
(11) A Relative Delay Measurement Method For Wideband Array with LFM Waveform 
(12) Signal Detection Based on Maximum-minimum Eigenvalue in Rician Fading Channel 
(13) Collective Intelligence based Place Recommendation System 
(14) Mantle: a novel DOSN leveraging free storage and local software 
(15) Overcoming the deficiencies of collaborative detection of spatially-correlated events in WSN 
(16) A Low-Complexity and High-Performance Beamforming Scheme for mmWave WPAN systems 
(17) Energy efficient aggregation in wireless sensor networks 
(18) Energy optimization of femtocell access networks 
(19) Predictive sink mobility for target tracking in sensor networks 
(20) Backhaul Topology Design and Weighted Max-Min Fair Capacity Allocation in Wireless Mesh 
Network 
(21) GeoSUZ: A Geocast Routing Protocol in Sub-ZORs for VANETs 
(22) Adaptive Contention Window for Zone-based Dissemination of Vehicular Traffic 
(23) Highway Preventive Congestion Control Through Input Regulation in Vehicular Networks 
 
 
Jay Cheng  
From: "ICAIT'12 Chair" <chair@icait2012.org>
To: <jcheng@ee.nthu.edu.tw>
Sent: 2012年6月19日 下午 02:05
Attach: paper 1370 - ICAIT12-invitation.pdf
Subject: [ICAIT'12] Paper #1370 - Invitation Letter
Page 1 of 1
2012/9/7
Dear Jay Cheng, 
Congratulations for the acceptance of your paper "Loss Probability and 
Delay of Finite-Buffer Queues With Discrete ON-OFF Markovian Arrivals 
and Geometric Service Times" (#1370) at ICAIT'12. 
Please, find enclosed your invitation letter to facilitate visa obtaining. 
Let me know if anything goes wrong. 
Best regards, 
 
Vincent GUYOT, as ICAIT'12 Conference Chair
2 Sheng-Hua Yang, Jay Cheng, Hsin-Hung Chou, and Chih-Heng Cheng
burstiness [7]–[10]. Therefore, it is more realistic to model the arrival traffic to
a discrete-time queue as a time-correlated process, i.e., the numbers of packets
arriving in different time slots are correlated.
A widely used time-correlated arrival traffic model is the ON-OFF traffic
model [9]–[18] as it is capable of capturing the burstiness of real-world traffics
(we note that continuous-time ON-OFF traffic model is considered in [9]–[15]
and discrete-time ON-OFF traffic model is considered in [16]–[18]). Specifically,
the ON-OFF traffic is characterized by alternating ON and OFF periods, where
packets arrive at a constant rate in the ON periods and there are no packet
arrivals in the OFF periods. In particular, it is commonly adopted for modeling
voice traffics, where the talker is speaking (resp., silent) in the ON (resp., OFF )
periods.
The performance analysis of various kinds of queueing systems with ON-
OFF arrival traffic has been studied intensively in the literature [10]–[18]. In
[10], a multiplexer fed by voice traffics or by mixed voice and data traffics is
considered, where each single voice source is modeled as a continuous-time ON-
OFF traffic, and approximation and simulation results of the loss probability and
the first and second moments of the packet delay are given. In [11]–[15], various
communications systems with the same ON-OFF traffic model as that in [10] are
designed to meet certain quality of service (QoS) requirements, such as packet
loss probability and average packet delay. In [16] and [17], a multiplexer with
discrete-time ON-OFF traffics is considered, and the mean buffer occupancy
is derived in [16] and the asymptotic tail probability distribution of the buffer
occupancy and approximated loss probability are given in [17]. In [18], a loss
probability and delay analysis is performed for a special hybrid optical packet
switch, called OpCut switch, with ON-OFF Markovian traffic (a special type of
ON-OFF traffic).
In this paper, we consider a single-server queue with finite buffer size B
and i.i.d. geometric service times with discrete-time ON-OFF Markovian arrival
traffic, called ON-OFF/Geom/1/B queue in this paper. The main contribution
of this paper is to provide closed-form expressions for packet loss probability
and average packet delay for ON-OFF/Geom/1/B queues. The closed-form ex-
pressions are given in term of the buffer size of the queue, the characterizing
parameters of the ON-OFF Markovian traffic, and the service rate.
The rest of this paper is organized as follows. In Section 2, we introduce the
ON-OFF Markovian traffic model. In Section 3, we present our derivations of the
packet loss probability and the average packet delay. In Section 4, we show our
numerical results on the packet loss probability and the average packet delay.
This paper is concluded in Section 5.
2 ON-OFF Markovian Traffic Model
Under the discrete-time ON-OFF Markovian traffic model, there is always a
packet arrival when the arrival process is in the ON state and there are no
packet arrivals when the arrival process is in the OFF state. Furthermore, given
4 Sheng-Hua Yang, Jay Cheng, Hsin-Hung Chou, and Chih-Heng Cheng
As mentioned in Section 1 that the service times of packets are i.i.d. geometric
random variables, we can assume the service times are geometrically distributed
with parameter γ, where 0 < γ < 1, i.e., the service time of a packet is n
with probability γ(1 − γ)n−1 for n ≥ 1. It is clear that the service rate is γ.
Furthermore, the server can be viewed as having i.i.d. time-varying capacity
c(t), where c(t) = 1 with probability γ and c(t) = 0 with probability 1 − γ.
In other words, the process {c(t), t ≥ 1} of the service capacity is an i.i.d.
Bernoulli process with parameter γ, and this is independent of everything else. As
a practical scenario, the server could be viewed as resources that are also shared
by some other network elements in the same network, and could be regulated
by certain resource management or congestion control schemes. In the case that
the queue is allotted to use the server for a fraction of time that is equal to γ, it
is reasonable to assume that the service capacity at each time is equal to 1 with
probability γ and is equal to 0 with probability 1− γ.
Let q(t) be the number of packets in the system at time t (at the end of the
tth time slot). Assume the system is initially empty, then we can see that the
evolution of buffer occupancy follows the following well-known Lindley equation:
q(t) = min{[q(t− 1) + a(t)− c(t)]+, B}, (6)
where x+ = max{x, 0}.
We note that throughout this paper, we denote α¯ = 1 − α, β¯ = 1 − β,
γ¯ = 1−γ, and we assume that the system is initially empty at time 0. From (6),
it is easy to see that q(t) is uniquely determined by q(t − 1), a(t), and c(t) for
all t ≥ 1. As we assume that the arrival process {a(t), t ≥ 1} is a homogeneous
two-state discrete-time Markov chain that is independent of everything else, and
the service capacity process {c(t), t ≥ 1} is an i.i.d. Bernoulli process that is also
independent of everything else, it then follows that the process {(a(t), q(t)), t ≥
1} is a homogeneous discrete-time Markov chain. In Section 3.1, we obtain the
steady state probabilities for the Markov chain {(a(t), q(t)), t ≥ 1} and use them
to derive the packet loss probability and the average packet delay in Section 3.2.
3.1 Steady State Probabilities of the Markov Chain
{(a(t), q(t)), t ≥ 1}
In this section, we obtain the steady state probabilities for the Markov chain
{(a(t), q(t)), t ≥ 1}. For this, we need to first calculate the state transition prob-
abilities as follows.
As we assume that the system is initially empty at time 0 and we know that
q(t) is uniquely determined by q(t − 1), a(t), and c(t) for all t ≥ 1, it is easy
to deduce that q(t) depends on a(1), a(2), . . . , a(t) and c(1), c(2), . . . , c(t) for all
t ≥ 1. Since we assume that the arrival process {a(t), t ≥ 1} is a homogeneous
two-state discrete-time Markov chain with state transition probabilities given
by (1)–(4) that is independent of everything else, and the service capacity pro-
cess {c(t), t ≥ 1} is an i.i.d. Bernoulli process with parameter γ that is also
6 Sheng-Hua Yang, Jay Cheng, Hsin-Hung Chou, and Chih-Heng Cheng
Furthermore, we have
P (a(t) = 0, q(t) = 0|a(t− 1) = 0, q(t− 1) = 0)
= P (a(t) = 0|a(t− 1) = 0, q(t− 1) = 0)
×P (q(t) = 0|a(t) = 0, a(t− 1) = 0, q(t− 1) = 0)
= P (a(t) = 0|a(t− 1) = 0) · 1 = β¯, (15)
P (a(t) = 0, q(t) = 0|a(t− 1) = 1, q(t− 1) = 0)
= P (a(t) = 0|a(t− 1) = 1) · 1 = α, (16)
P (a(t) = 1, q(t) = B|a(t− 1) = 0, q(t− 1) = B)
= P (a(t) = 1|a(t− 1) = 0, q(t− 1) = B)
×P (q(t) = B|a(t) = 1, a(t− 1) = 0, q(t− 1) = B)
= P (a(t) = 1|a(t− 1) = 0) · 1 = β, (17)
P (a(t) = 1, q(t) = B|a(t− 1) = 1, q(t− 1) = B)
= P (a(t) = 1|a(t− 1) = 1) · 1 = α¯. (18)
The rest of the state transition probabilities are all zero.
0, 0 0, 1
1, 0 1, 1
0, 2
1, 2
0, B-2 0, B-1
1, B-2 1, B-1
0, B
1, B
.  .  .
.  .  .
Fig. 1. The state transition diagram for the homogeneous Markov chain
{(a(t), q(t)), t ≥ 1}
Clearly, the Markov chain {(a(t), q(t)), t ≥ 1} is a homogeneous Markov
chain as its state transition probabilities in (7)–(18) are independent of time t.
In Figure 1, we show the state transition diagram for the homogeneous Markov
chain {(a(t), q(t)), t ≥ 1}. It is easy to see from the state transition diagram in
Figure 1 and 0 < α, β, γ < 1 that any two states can communicate with each
other, and hence the Markov chain {(a(t), q(t)), t ≥ 1} is irreducible. Also, we
have from (11), (14), (15), (18), and 0 < α, β, γ < 1 that
P (a(t) = k, q(t) = i|a(t− 1) = k, q(t− 1) = i) > 0,
for k = 0, 1 and i = 0, 1, . . . , B.
It follows that the Markov chain {(a(t), q(t)), t ≥ 1} is aperiodic. As the Markov
chain {(a(t), q(t)), t ≥ 1} is finite, irreducible, and aperiodic, it is well known [19]
8 Sheng-Hua Yang, Jay Cheng, Hsin-Hung Chou, and Chih-Heng Cheng
pi0,0 =
α(1 + β)
(α+ β)(1 +B(α+ β))
, (34)
pi1,0 =
β2
(α+ β)(1 +B(α+ β))
, (35)
pi0,i =
α
1 +B(α+ β)
, for i = 1, 2, . . . , B − 1, (36)
pi1,i =
β
1 +B(α+ β)
, for i = 1, 2, . . . , B − 1, (37)
pi0,B =
α2
(α+ β)(1 +B(α+ β))
, (38)
pi1,B =
β(1 + α)
(α+ β)(1 +B(α+ β))
. (39)
3.2 Packet Loss Probability and Average Packet Delay
In this section, we use the steady state probabilities obtained in Section 3.1 for
the Markov chain {(a(t), q(t)), t ≥ 1} to derive the packet loss probability and
the average packet delay.
Packet loss probability. Let Pℓ(α, β, γ,B) be the packet loss probability in
steady state, namely, the probability that there is a loss packet at a time slot
in steady state. Since there is a loss packet at time t if and only if the buffer is
full at time t − 1, there is a packet arrival at time t, and the service capacity
is equal to 0 at time t, i.e., q(t − 1) = B, a(t) = 1, c(t) = 0. As we assume that
the arrival process {a(t), t ≥ 1} and the service capacity process {c(t), t ≥ 1}
are independent of everything else and we know from (6) that q(t) depends on
a(1), a(2), . . . , a(t) and c(1), c(2), . . . , c(t) for all t ≥ 1, it then follows that the
10 Sheng-Hua Yang, Jay Cheng, Hsin-Hung Chou, and Chih-Heng Cheng
Finally, if ρ = 1, then we see from (42) that
lim
B→∞
B · Pℓ(α, β, γ,B) = αβ
(α+ β)3
, if ρ = 1. (45)
Therefore, it follows from (43)–(45) that the packet loss probability is lower
bounded from a positive constant when ρ > 1, decreases exponentially to zero
with B as B goes to infinity when ρ < 1, and decreases inverse linearly to zero
with B as B goes to infinity when ρ = 1.
Average packet delay. Let Pb(α, β, γ,B) be the packet blocking probability in
steady state, namely, the probability that an arrival packet is blocked in steady
state. It follows from (5) that the packet blocking probability in steady state is
given by
Pb(α, β, γ,B) = lim
t→∞P (q(t− 1) = B, c(t) = 0|a(t) = 1)
= lim
t→∞
P (q(t− 1) = B, c(t) = 0, a(t) = 1)
P (a(t) = 1)
=
Pℓ(α, β, γ,B)
λ
. (46)
Therefore, it follows from (46) and (5) that the effective arrival rate to the queue
is given by
λeff = λ(1− Pb(α, β, γ,B))
= λ− Pℓ(α, β, γ,B)
=
β
α+ β
− Pℓ(α, β, γ,B) (47)
Let N(α, β, γ,B) be the average number of packets in the system in steady
state. Then we can see that
N(α, β, γ,B) =
B∑
i=1
i lim
t→∞P (q(t) = i)
=
B∑
i=1
i lim
t→∞(P (a(t) = 0, q(t) = i) + P (a(t) = 1, q(t) = i))
=
B∑
i=1
i(pi0,i + pi1,i). (48)
12 Sheng-Hua Yang, Jay Cheng, Hsin-Hung Chou, and Chih-Heng Cheng
Finally, if ρ = 1, then Pℓ(α, β, γ,∞) = 0 as mentioned in the analysis of loss
probability. As such, we see from (51), Pℓ(α, β, γ,∞) = 0, and (50) that
lim
B→∞
D(α, β, γ,B)
B
=
α+ β
2β
, if ρ = 1. (54)
Therefore, it follows from (52)–(54) that the average packet delay is upper
bounded by a positive constant when ρ < 1 and grows linearly to infinity with
B as B goes to infinity when ρ ≥ 1. This suggests that ρ plays the role of
traffic intensity in a single server queue. Indeed, it can be seen from (32) that
ρ T 1 if and only if βα+β T γ. As we know from (5) that λ =
β
α+β is the arrival
rate of the arrival traffic to the queue and we can view γ as the service rate of
the queue, it is natural to expect that the average packet delay is upper bounded
when λ < γ, i.e., ρ < 1, and grows to infinity as the buffer size goes to infinity
when λ ≥ γ, i.e., ρ ≥ 1.
4 Numerical Results
In this section, we show our numerical results on the packet loss probability and
the average packet delay. In Figure 2 (resp., Figure 3), we show the numerical
results on the the packet loss probability Pℓ(α, β, γ,B) (resp., average packet
delay D(α, β, γ,B)) given by (41) and (42) (resp., (51)) for ρ = 0.5, 0.8, 0.98, 1,
and 1.02 when β = 0.5 and γ = 0.8
From Figure 2, we observe that the packet loss probability decreases expo-
nentially with B for sufficiently large B when ρ = 0.5, 0.8, and 0.98 as expected
from (44), decreases inverse linearly with B for sufficiently large B when ρ = 1
as expected from (45), and approaches a lower bound 0.00507 for sufficiently
large B when ρ = 1.02 as expected from (43). From Figure 3, we observe that
the average packet delay approaches an upper bound 1.5000 (resp., 5.2500 and
61.500) for sufficiently large B when ρ = 0.5 (resp., ρ = 0.8 and ρ = 0.98) as
expected from (52), and increases linearly with B for sufficiently large B when
ρ = 1 and ρ = 1.02 as expected from (53) and (54).
5 Conclusion
In this paper, we have conducted the performance analysis of an ON-OFF/Geom/
1/B queue, a finite-buffer queue with ON-OFF Markovian arrival traffic and ge-
ometric service times. Specifically, we have obtained closed-form expressions for
the packet loss probability and the average packet delay. The closed-form ex-
pressions were given in term of the buffer size of the queue, the characterizing
parameters of the ON-OFF Markovian traffic, and the service rate. As future
work, we will conduct the comparison of the performance of our model with
other used models and with real-world traffics.
Acknowledgements. This work was supported in part by the National Science
Council, Taiwan, R.O.C., under Contract NSC 100-2628-E-007-006.
14 Sheng-Hua Yang, Jay Cheng, Hsin-Hung Chou, and Chih-Heng Cheng
References
1. Hunter, J.J.: Mathematical Techniques of Applied Probability, vol. 2. Academic
Press, New York, NY (1983)
2. Bruneel, H., Kim, B. G.: Discrete-Time Models for Communication Systems In-
cluding ATM. Kluwer Academic Publishers, Boston, MA (1993)
3. Takagi, H.: Queueing Analysis, A Foundation of Performance Evaluation, vol. 3.
North-Holland, Amsterdam, The Netherlands (1993)
4. Rubin, I., Zhang, Z.: Message delay and queue-size analysis for circuit-switched
TDMA systems. IEEE Trans. Commun. 39, 905–914 (1991)
5. Rubin, I., Zhang, Z.: Message delay analysis for TDMA schemes using contiguous-
slot assignments. IEEE Trans. Commun. 40, 730–737 (1992)
6. Neuts, M., Guo,J., Zukerman, M., Vu, H.L.: The waiting time distribution for
a TDMA model with a finite buffer and state-dependent service. IEEE Trans.
Commun. 53, 1522–1533 (2005)
7. Andersen, A.T., Nielsen, B.F.: A Markovian approach for modeling packet traffic
with long-range dependence. IEEE J. Sel. Areas Commun. 16, 719–732 (1998)
8. Heffes, H., Lucantoni, D.M.: A Markov modulated characterization of packetized
voice and data traffic and related statistical multiplexer performance. IEEE J. Sel.
Areas Commun. 4, 856–868 (1986)
9. Daigle, J.N., Langford, J.D.: Models for analysis of packet voice communications
systems. IEEE J. Sel. Areas Commun. 4, 847–855 (1986)
10. Sriram, K., Whitt, W.: Characterizing superposition arrival processes in packet
multiplexers for voice and data. IEEE J. Sel. Areas Commun. 4, 833–846 (1986)
11. Ren, Q., Ramamurthy, G.: A real-time dynamic connection admission controller
based on traffic modeling, measurement, and fuzzy logic control. IEEE J. Sel. Areas
Commun. 18, 184–196 (2000)
12. Chaskar, H.M., Madhow, U.: Statistical multiplexing and QoS provisioning for
real-time traffic on wireless downlinks. IEEE J. Sel. Areas Commun. 19, 347–354
(2001)
13. Sheu, S.-T., Sheu, T.-F.: A bandwidth allocation/sharing/extension protocol for
multimedia over IEEE 802.11 ad hoc wireless LANs. IEEE J. Sel. Areas Commun.
19, 2065–2080 (2001)
14. Sze, H.P., Liew, S.C., Lee, J.Y.B., Yip, D.C.S.: A multiplexing scheme for H.323
voice-over-IP applications. IEEE J. Sel. Areas Commun. 20, 1360–1368 (2002)
15. Wang, Y., Chan, S., Zukerman, M., Harris, R.J.: Priority-based fair scheduling for
multimedia WiMAX uplink traffic. in Proceedings IEEE International Conference
on Communications (ICC’08), Beijing, China, pp. 301–305 (2008)
16. Bruneel, H.: Queueing behavior of statistical multiplexers with correlated inputs.
IEEE Trans. Commun. 36, 1339–1341 (1988)
17. Sohraby, K.: On the theory of general ON-OFF sources with applications in high-
speed networks. in: Proceedings IEEE International Conference on Computer Com-
munications (INFOCOM’93), San Francisco, CA, USA, pp. 401–410 (1993)
18. Guo, Z., Zhang, Z., Yang, Y.: Performance modeling of hybrid optical packet
switches with shared buffer. in: Proceedings IEEE International Conference on
Computer Communications (INFOCOM’11), Shanghai, China, pp. 1692–1700
(2011)
19. Resnick, S.I.: Adventures in Stochastic Processes. Birkhau¨ser, Boston, MA (1992)
20. Gross, D., Shortle, J.F., Thompson, J.M., Harris, C.M.: Fundamentals of Queueing
Theory, 4th Ed. John Wiley & Sons, New York, NY (2008)
100 年度專題研究計畫研究成果彙整表 
計畫主持人：鄭傑 計畫編號：100-2628-E-007-006- 
計畫名稱：大型複雜網路之研究--子計畫三：大型複雜網路之編碼及其應用(2/3) 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 5 5 100%  
博士生 4 4 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
