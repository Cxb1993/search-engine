 2
分散式運算(distributed computing)所想
要達成的一個目標。由於分散式運算中，
其他協同運算的電腦在網際網路上都是屬
於自願性質的，也就表示，協同運算電腦
上的程式是否有能夠有效的運作均為志願
者所決定的。由此得知，計畫執行者對於
何時能夠擁有多少的電腦資源完全無法明
確的掌握，嚴格的說，這樣子的計算方式
對大部分需要運算量的問題而言，並不是
一個很合適的一種方式，於是為了要將許
多的電腦有效率的結合在一起，是一個很
重要的課題。 
“Grid Computing＂(格網運算)[1,2]
就是透過網際網路的聯結，以及適當的作
業系統及軟體的協助將分散在各地的電腦
資源加以串聯起來，且將這些資源分享，
這些資源包含了計算設備、不同的儲存設
備以及各式各樣的輸出入裝置。這些分享
的資源也許包含了許多的組織，但他們的
目的只有一個，就是為了要解決在科學、
工程或商業上的一些需要高運算量或需要
處理大量資料的問題。 
由於格網計算具有上述運算上的優
勢，所以本計劃提出了一個 WebGrid 的格
網整合式運算架構，在現有的 Globus 
toolkit[3]之上，整合開發了四個具有前
瞻性的格網技術，包括：中介軟體、計算
格網應用、資料格網應用、以及安全服務。
在第一年計畫的執行成果架構之下，第二
年各子計劃針對上述四項技術做更深入的
探討與研究，期望讓格網計算更有效率與
更佳的安全性。另外，透過我們研發的格
網入口服務介面，用以整合各項技術功
能，提供一個共通的介面，可讓運算資源
更易於使用。 
 
三、計畫研究報告 
本計畫 WebGrid 的整體架構如圖一所
示。WebGrid 中研發整合四項前瞻技術： 
z Grid Portal Services 
z Smart-Grid Security Service 
z Grid Applications 
z Computational-Grid App. 
z Data-Grid App. 
z Grid Middleware 
 
圖一、WebGrid Architecture 
  第 一 年 的 計 畫 成 果 中 ， 在 Golbus 
 4
Globus 的 RLS(Replica Location 
Service)[6] 為 基 礎 ， 在 WebGrid 
Middleware 開 發 Replica Location 
Management Service 來解決這個問題。RLS 
database 中 儲 存 了 replica 的
LFN(Logical File Name)到 PFN(Physical 
File Name)的對應。在 Middleware 中的
Replica Location Management 中，我們將
replica 的內容經由 MD5 algorithm [7]來
當作儲存某一站台的 PFN，如圖三所示，用
以解決 replica redundant problem。  
在 WebGrid 計算的環境和觀念普遍之
後，各個虛擬組織(VO)，為了方便管理和
提供完善的服務給社群的使用者，自行建
立一個可信任的憑證管理機制是必須的。
因此，第一年子計畫 Smart-Grid Security 
Service 則在 WebGrid 計算環境下對於使
用者的 userkey 以及 certificate，提出有
效的解決方案，以改善並提高在 grid 環境
中的安全性。 
當我們整個Grid環境建置完善之後我
們便可以在此環境中運作 Application，子
計畫 compuational-grid application 主要是
在研究如何利用 WebGrid 的高運算能力來
解決最小推銷員問題(Travelling Salesman 
Problem, TSP)，主要動機是計算生物中有
許多的問題如：多重序列的比對（Multiple 
Sequence Alignment）、實際地圖的建立
（Physical Mapping）、DNA 超字串的找尋
（DNA Universal Strings）、演化樹的建立
（Evolutionary Tree Reconstruction）和蛋白
質 結 構 的 預 測 （ Protein Structure 
Prediction）等皆可以轉成一個組合最佳
化的『最小推銷員問題』。在第一年子計
畫 compuational-grid application 成果中，我
們利用平行的分支界定策略去設計出一個
有效率的 TSP Scheduler，並將它實做在
Grid 的架構上，遵循開放性網格式運算系
統服務架構標準 (OGSA)。然後以 TSP 
Scheduler 為核心，用 JAVA 設計跨平台的
程式有效地解決上述六個不同的計算生物
應用。同時，也在 WebGrid 上針對不同的
應用設計出不同的使用者介面以提供方便
使用。 
在 Data-Grid Application 子計畫中，
第一年的成果是在資料探勘的領域中，針
對週期性式樣探勘大量運算的研究。改進
在探勘時的花費（cost）過大而相當沒有
效率的缺點外，另外也改善會產生重複
（redundant）的型樣出來的缺點。利用週
期包含的特徵去減低運算以及重複式樣的
產生。這些技術利用 WebGrid 之強大的分
散式計算能力，達到更快速的週期性式樣
分析結果。在計劃中我們研究質數週期和
合數週期之間所有獨立及相關之關係，並
完成了在不同質數週期之間分析與分析合
數週期時選取質數週期來組合分析的方
法。研究方向定位於週期性資料分析。而
在近幾年的研究裡面，分散處理的觀念則
被大量且廣泛的應用在資料探勘應用上。
而我們主要研究的研究成果是著重於如何
在格網環境上去實現週期性型樣探勘。此
 6
東華大學廣大校園內擁有其他校園所沒有
的特殊生態景觀，但對於學生老師對生態
環境研究，或是對於其他來訪的遊客來
賓，想要了解與觀察校園生態卻沒有一套
很有效率很有系統的方法，所以基於這些
原因，我們希望在已開發的 grid platform
之上，研究 e-Ecology application。我們
希望以長期的 sensor 設置的方式，將生
態、動植物的長期數位影片資訊，定期的
傳送至後端 Grid Infrastructure 內的儲
存裝置，可以想像到的是，這些資料將是
非常大量且耗廢空間，所以我們在此利用
Data-Grid 的技術，來有效的儲存這些大量
的資訊。此後，當環境生態系所的老師或
同學想要針對某地作環境分析研究時，可
以利用 e-Ecology application 去存取到
後端的 Data-Grid infrastructure，利用
Data-Grid 的查詢與分散傳輸機制，可以快
速且有效率的傳輸所需的資料給使用者；
又例如當有訪客來訪時，可以透過具有無
限 上 網 的 PDA 或 是 Notebook 透 過
e-Ecology application 的 web service，
只要訪客通過我們的認證機制，就可以加
入到 Grid 的環境中，並且存取 Grid 
Resources。 
在 e-Classroom 方面，主要是針對教
師上課的影音資料作一數位化儲存，後端
利用 Data-Grid 的儲存技術，將易於管理
這 樣 大 量 性 的 資 料 。 學 生 可 利 用
e-Classroom application 登 入 Grid 
System，可以針對所選修的課程加以複
習，透過這樣的多媒體數位複習系統，可
以讓學生的學習效率提高，進而提高教學
效率。 
 
圖八、e-Ecology Architecture 
 
在 Data-Grids 的前端建置 storage 
broker，當有大量的工作請求時，可以將請
求分配到其他擁有此 replica 的機器上，如
此可以加速下載的速度，也可以平衡整個
系統的負載。 
 
圖九、Storage Broker Architecture 
 
我們將所有的功能整合至一個非常易
用的介面程式：NDHU Grid Client。NDHU 
Grid Client 是利用 CoG Java Toolkit[8]來實
做，具有跨平台執行的特性，且研發了以
下的功能： 
 User’s Certification Tool 
 GridFTP Transmission Tool 
 Grid Job Tool 
 e-Campus Application 
如圖十所示，NDHU Grid Client 是一
個 Multi-InternalFrame 的多工程式，每個
Internal Frame 可獨立開啟一個工作，並不
會影響到其他的工作執行。 
 8
0
0.5
1
1.5
2
2.5
3
3.5
1 2 3 4 5 6
The Number of TCP Streams
Ti
me
 (m
inu
tes
)
 
圖十三、Evaluation of A Variety of The 
Number of TCP Data Streams 
 
0
2
4
6
8
10
12
14
500 1000 1500 2000
File Size (MB)
Ti
me
 (m
inu
tes
)
Conventional
Parallel
 
圖十四、Comparison Between Conventional 
and Parallel Transmissions 
 
 子計劃(Middleware)部分： 
第一年的計畫成果中，基於 Golbus 
Tookit 的基礎上，我們完成資料管理服務
以及複製檔案位置管理服務。基於第一年
的成果，第二年的計畫針對中介軟體的工
作排程與運算資源管理功能加以研究開
發，讓中介軟體的功能與效能更趨完整。 
Middleware 的整體架構如圖十五所
示。植基於第一年的計畫成果之上，第二
年執行的重點在於開發 middleware 中 Job 
Scheduling 與 Resource Management 的功
能。如圖五所示，middleware 介於 Portal 
Service 與底層的 Globus 以及 Physical 
Resources 之間，經由 Job Scheduling 與
Resource Management 的運作，將不同種類
的工作適當的分配到不同類型的計算資
源，可以讓工作執行的效率更為提升。 
在此子計畫的成果上，完成了 Job 
Scheduler 的建置，並且以 WebService[9]
技術來提供 Resource Management 的查詢
機制。最後進行整體嚴謹的實際實驗測
試，並且由實驗中驗證我們系統的可用性
與效能。 
 
圖十五、Overall Architecture of Middleware 
 
 子 計 劃 (Smart-Grid Security 
Service)部分： 
近 年 來 ， 隨 著 格 網 運 算  (Grid 
Computing) 的興起，使得在其上有了越來
越多的應用，因此格網上的安全亦愈漸被
重視。格網安全基礎建設 (Gris Security 
Infrastructure, GSI) 即是在格網環境裡
用來規範安全措施所制定的準則，其提供
