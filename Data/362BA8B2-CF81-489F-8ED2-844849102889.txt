2time-independent multiqroup
three-dimensional neutron and photon
transport equations in the transport
theory. These subroutines are connected
to computer program TORT. Several
problems will be tested in personal
computer. The numerical solution of
flux by GMRES is compared with
generalized conjugate gradient methods
are used TFQMR (Transpose free QMR),
CGS (conjugate gradient square
algorithm), Bi-CGSTAB (bi-conjugate
gradient stabilized algorithm), It is the
reasons to choose the generalized
conjugate gradient methods that the
methods have better residual (equivalent
to error) control procedures in the
computation and have better convergent
rate. The incomplete factorization ILU
and modified incomplete factorization
MILU are the preconditioning
techniques used in the several testing
problems. The TORT is installed
computer with AMD 64 bit X4 CPU
and 2010 version of LINUX operation
system to make TORT a new life in new
generation CPU system.computer.
.
The comparison on GMRES,
Bi-CGSTAB, CGS, TFQMR and
QMRCGSTAB algorithms, we find that
Bi-CGSTAB algorithm combined with
preconditioner ILU is the most efficient
algorithm in these methods in the
problem 6. The numerical solution of
flux by preconditioned GMRES CGS,
Bi-CGSTAB, TFQMR and
QMRCGSTAB method have same
results with those results, obtained by
either point successive relaxation
method or line successive relaxation
method combined with Gaussian
elimination in TORT with AMD 64 bit
X4 CPU and 2010 version of
Mandriva LINUX operation system.
Key words: neutron and photon
transport equations; Generalized
conjugate gradient methods; TORT;
Neutron transport; GMRES, CGS,
Bi-CGSTAB, TFQMR, Preconditioner.
二、計畫緣由與目的
2. Introduction
The generalized conjugate
gradient (CG) method and its variants
[Fletcher, 1976; Concus and Golub,
1976; Eisenstat, Elman and Schultz,
1983; Saad and Schultz, 1985, 1986;
Dennis and Turner, 1987; Sonneveld,
1989] have been found effectively in
solving the large sparse linear systems
of equations [Brussino and Sonnad,
1989; Joly and Eymard, 1990]. The
convergence rate of the CG-like
methods takes the advantage of the
eigenvalue distribution of the coefficient
matrix [Axelsson and Lindskog, 1986].
The convergence rate of the CG-like
methods can be further accelerated by
preconditioning idea, which results in a
linear system having more favorable
eigenvalue distribution and
well-conditioned than those of A itself.
Instead of solving the original linear
system of equations
Ax = b, (1)
4),,(
'')',',(),',()',(),()4/(1
'')',',()',,',,(
),,(),,(),,(






ErQ
dEdErErErEr
dEdErEEr
ErErEr
f
s
t



(3)
Here E is the energy of particle, r is
the position of the particles with
reference to an arbitrary origin and 
is the solid angle of the direction of
particle. The function ( , , )r E  is
the flux of particles at r with
energy E and moving in the direction
. The function s is the cross
section for scatering from energy E’
and direction ’  to energy E and
direction . Also, the functions t
and f are the macroscopic cross
section for total interaction and fission,
respectively. The functions  and 
represent the total fission yield and
the corresponding energy distribution.
The function Q represents an
extraneous source. In the numerical
computation of the three-dimension
discrete ordinates transport program
TORT for equation (3), a seven bands
matrix equations is always involved to
solve the flux [Rhodes and Simpson,
1995]. According to the program and
manual of the TORT version 3, the
matrix equations is described by
ai-1,j,kxi-1,j,k + ai,j,kxi,j,k + ai+1,j,kxi+1,j ,k
+ai,j-1,kxi,j-1 ,k
+ai,j+1,kxi,j +1,k + ai,j,k-1xi,j,k + ai,j,kxi,j,k +
ai,j,kxi,j,k+1 = bi,j,k
i=1,2,...,I, j=1,2,...,J, k=1,2,...,K. ( 4)
We can write (4) as the form of
7-stripe matrix solution
Ax=b (5)
where vectors x and b represent flux and source
in all space grid points.
The matrix equation is solved by
either point successive relaxation
method or line successive relaxation
method combined with Gaussian
elimination in TORT. The rounding
error of the Gaussian elimination can be
significant if the matrix is not diagonally.
The of solution of flux can be also
solved by the other method. For
example, preconditioned GMRES, CGS
and Bi-CGSTAB, TFQMR,
QMRCGSTAB. The popularity of
these methods is due to several
reasons as the following [ Axelsson, 94].
(a) The rate of convergence of
theses methods can be improved
with various preconditioning techniques.
(b) The parameters of the these
method are estimated and updated by
the each iteration, automatically.
(c) These methods usually
have relatively high rate of convergence
and the rounding off error are
acceptable.
(d) The short recurrence
relations in each iteration makes
memory requirements and the
computing time to be acceptable.
6hj,j = γ ;
Compute fj+1:
1 0
j ji i
i ij
f fc s
s cf 
             
;
where fj+1 is equal to the
residual at jth step.
If fj+1 is small, then
set m = j ;
go to Least square
solution ;
End If
End j ;
Least square solution:
Solve the upper triangular
system:
1 1
11 12 1 2 2
22 2
... ...
... ... . . ;
. . . .
m
m
mm m m
y f
h h h y f
h h
h y f
    
    
    
    
    
    
        
x(m) = x(0) +
1
m
i
 (yi / ρi)v(i) ;
If x(m) is accurate enough,
then
Stop ;
else
Set x(0) = x(m) ;
Solve v(1) from Cv(1) = (b - Ax(0)) ;
           ρ1 = [(v(1),v(1))]1/2 ;
f1 = ρ1 ;
Go to ITERATION ;
End If.
For algorithm 1 to be effective iterative
method, the linear system of form
Cz=f
(7)
where f = p(k), t, must be easily solved.
The choice of a good preconditioner C
can have dramatic effect on the rate of
convergence. The linear system (7)
should be easily solved for the
Algorithm 1 to be an effective iterative
method. The matrix C, called
preconditioner, should be chosen so that
it is easy to invert, a good approximation
for A and less storage requirement. In
other words, we should try to choose C
so that the matrix C-1A is being close to
the identity matrix. The eigenvalues of
C-1A should be more clustered together
about one than are those of A for the
problem (4).
The simple choice of the
preconditioning matrix C is as the
product of a lower triangular, L and
upper triangular, U i.e. C=LU or
C=LDU with diagonal matrix D. In
general, the relaxed pointwise
incomplete factorization method will
be applied to construct the lower
triangular, L, and upper triangular, U,
for preconditioning matrix C. The
choice of preconditioning matrix C as
8Choose x(0) (e.g., solve x(0) from
Cx(0) = b) ;
Compute r(0) = b - Ax(0) ;
Set p(0) = q(0) = r(0) and choose
(0) such that ((0),r(0)) 0,
e.g., (0) = r(0) ;
ITERATION:
For k = 0,1,2,... until convergence,
do
= ((0),r(k)) ;
Solve y from Cy = p(k) ;
v = Ay ;
= / ((0),v) ;
s = q(k) - v ;
t = q(k) + s ;
Solve z from Cz = t ;
x(k+1) = x(k) + z ;
u = Az ;
r(k+1) = r(k) - u ;
= ((0),r(k+1)) / ;
q(k+1) = r(k+1) + s ;
p(k+1) = q(k+1) + (p(k) + s) .
ALGORITHM 3: Bi-CGSTAB
method for solving
C-1Ax = C-1b
INITIALIZATION:
Choose x(0) (e.g., solve x(0) from
Cx(0) = b) ;
Compute r(0) = b - Cx(0) ;
Set p(0) = r(0) and choose (0)
such that ((0),r(0)) 0,
e.g., (0) = r(0) ;
ITERATION:
For k = 0,1,2,... until
convergence, do
= ((0),r(k)) ;
Solve y from Cy = p(k) ;
v = Cy ;
 = / ((0),v) ;
s = r(k) - v ;
Solve z from Cz = s ;
t = Az ;
 = (s,t) / (t,t) ;
r(k+1) = s - t ;
x(k+1) = x(k) + y + z ;
= ( / ) ((0),r(k+1)) /;
p(k+1 =r(k+1)+(p(k) -v) .
We have to solve two linear system
Cx=y (9)
for given y at each iteration in
Algorithm 2.
ALGORITHM 4: TFQMR Method for
10
0=(h0,r0);
(2) For k=0, 1,... do
(a) y= Apk;
Solve Cv=y;
k= k/(h0,v);
sk=rk-kv;
w=Ask
Solve tk from Ctk =w;
k =(sk,tk)/(tk,tk);
rk+1= sk-ktk;
(b) For m = 2k+1, 2k+2, do
m+1 = sk
for m=2k+1,
m+1= rk
for m=2k+2,
m= m+1/m-1;
cm= 1/(1+)1/2;
m= m-1mcm;
dm= ckym + c-1dm-1;
m= k for m=2k+1;
m=k for m=2k+2;
ym = qm for m=2k+1;
ym = um for m=2k+2;
xm = xm-1 + dm;
If xm has converged ; stop;
(c) k+1=(h0, rk+1);
k= (k+1/k)(k/k);
pk+1= rk+1+k(pk-kv).
四、結果
4. Numerical Results
In this section we briefly present
the numerical results obtained by using
GMRES and generalized CG-like
methods combined with the
preconditions. The GMRES,
Bi-CGSTAB, CGS, TFQMR, and
QMRCGSTAB algorithms are written as
subroutines to combined with TORT
program. The preconditioning
techniques are transferred to another
subroutines, too. Then we link these
subroutines with the TORT program.
We consider the problem 6, which is
appended to TORT program, to test
these algorithm. The numerical results
implies that these algorithms can find
same accuracy solution for equation (5)
for the gamma and neutron flux as the
numerical results from personal
computer with 64 bit AMD Phenom
X4 CPU and 2010 version of
Mandriva LINUX operation system.
We consider a problem, which is the
problem 6 in TORT program. The
problem is involved a very large
numerical building solution of the
reinforced concrete building subjected
to the nuclear weapon attack during
world war II. The source is taken to
be uniform over the right, inside, and
top surfaces . The flux at 10 key
locations is monitored to indicate the
results of the calculation [ Rhoades and
Simpson,1995, Rhodes Childs and
Ingersoll 1992]. Figure 1 and Table 1
show the position and data of 10 key
12
method being used in the program
TORT. Table 2 lists numerical results of
the flux at 10 key locations with
different methods. If we compare the
Table 2 for the test problem 6
involved with 8 set of matrix equations
with unknowns 24255 in TORT package,
the preconditioned GMRES with
restarting, with CGS, Bi-CGSTAB,
TFQMR and QMRCGSTAB methods
have same results with the results which
is obtained by the line SOR method in
TORT. Using preconditioned GMRES
iterations with restarting (m=60), The
residue can declines less than
1.0x10E-12 in one restarting .
REFERENCES
1. Abu-Shumays I. K. (1987) Trans. Am.
Nucl. Soc. 55, 316.
2. Abu-Shumays I. K. (1990) SIAM J.
Sci. Stat. Comput. 11, 545.
3. Axelsson O. and Lindskog G. (1986)
Numer. Math. 48, 499.
4. Axelsson (1994) Iterative Solution
Methods Cambridge University
Press, New York.
5. Azmy Y. Y, Johnson J. O, Lillie R. A,
Rennich M. J, and Santoro R. T,
(2001)
Progress in Nuclear Energy, 39,321.
6. Chan. T. F, Gallopoulos E,
Simoncini V, Szeto T, and Tong C. H,
SIAM J. Sci. Stat (1994). Comput. 15,
pp.338-347.
7. Chen G. S., Christenson J.M. and
Yang, D. Y. (1997), Annals of Nuclear
Energy , 24, 339.
8. Chen, G. S. and Yang, (1998) Annals
of Nuclear Energy. 25, 97.
9. Golub G. and van Loan (1996) Matrix
Computions, John Hopkin
University Press, Boltimore, 3rd
Edition.
10. Hoebel W. (1986) Nucl. Sci. Engng
92, 20.
11. Hogeben L (2007) Handbook of
Linear Algebra , Chapman&
Hall/CRC, FL.
12. Kobayashi K. and Sugimura N.,
(2001) Progress in Nuclear Energy,
39,119.
13. Konno C. (2001) Progress in
Nuclear Energy, 39,167.
14. Ortega J. M. (1988) Introduction to
Parallel and Vector Solution of
Linear Systems. Plenum
Press, New York and London.
15. Rhodes W.A. , Childs R. L and
Ingersoll D. T. (1992) Health
Physics 63,5,510-521.
16. Rhoades, W. A. and Simpson, D.
B. (1995) TORT version 3.
Three-Dimensional Discrete
Ordinates Neutron /Photon Transport
Code System, Oak Ridge National
Laboratory Report .
17. Saad, Y. (2003) Iterative Method for
Sparse Linear Systems, 2nd edition,
SIAM, Philadelphia.
18. Saad Y. and Zhang J. (1999)
SIAM J. Sci. Stat. Comput. 20,
2103.
19. Sonneveld P. (1989) SIAM J. Sci.
14
Table 2. Numerical results of the flux at 10 key locations with different methods
for test problem 6 in Tort program.
Location SOR gmres_ilu gmres_milu cgs-ilu cgs-milu tfqmr_ilu tfqmr_milu qmrcgstab_ilu
1 2.41222E-22 2.412190E-22 2.412150E-22 2.41225E-22 2.41222E-22 2.412250E-22 2.412250E-22 2.412190E-22
2 2.61043E-21 2.610420E-21 2.610400E-21 2.61046E-21 2.61043E-21 2.610460E-21 2.610460E-21 2.610420E-21
3 2.70772E-21 2.707710E-21 2.707690E-21 2.70775E-21 2.70772E-21 2.707750E-21 2.707750E-21 2.707710E-21
4 2.08799E-23 2.087990E-23 2.087970E-23 2.08801E-23 2.08799E-23 2.088010E-23 2.088010E-23 2.087990E-23
5 1.22114E-22 1.221140E-22 1.221140E-22 1.22112E-22 1.22114E-22 1.221120E-22 1.221120E-22 1.221140E-22
6 3.03375E-22 3.033740E-22 3.033720E-22 3.03374E-22 3.03375E-22 3.033740E-22 3.033740E-22 3.033740E-22
7 2.74581E-21 2.745800E-21 2.745770E-21 2.74585E-21 2.74581E-21 2.745850E-21 2.745850E-21 2.745800E-21
8 3.01802E-21 3.018010E-21 3.017990E-21 3.01805E-21 3.01802E-21 3.018050E-21 3.018050E-21 3.018010E-21
9 5.84260E-23 5.842640E-23 5.842830E-23 5.84265E-23 5.84260E-23 5.842650E-23 5.842650E-23 5.842640E-23
10 3.36056E-22 3.360550E-22 3.360530E-22 3.36064E-22 3.36056E-22 3.360630E-22 3.360630E-22 3.360550E-22
Figure 2 Convergence of GMRES(60) with preconditioner ilu and milu.
0 20 40 60 80 100 120
1E-13
1E-12
1E-11
1E-10
1E-9
1E-8
1E-7
1E-6
1E-5
1E-4
1E-3
0.01
0.1
1
10
R
es
id
ue
Iteration
ilu
milu
16
99 年度專題研究計畫研究成果彙整表 
計畫主持人：陳金順 計畫編號：99-2221-E-007-058- 
計畫名稱：應用預先條件化廣義最小殘餘值(GMRES)在三維中子/光子遷移電腦程式(TORT)研究 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 1 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 0 1 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
 
