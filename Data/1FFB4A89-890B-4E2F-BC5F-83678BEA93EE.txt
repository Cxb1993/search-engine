表 C012-1                                                                           共 14 頁  第 2 頁 
國科會九十七年度專題研究計畫成果報告 
 
 
時序性資料上的非同步週期樣式探勘 - 效能提升及推廣 
Asynchronous Periodic Pattern Mining in Time Series Data – 
Performance Improvements and Generalizations 
 
計畫編號：NSC97-2221-E-126-007 
執行期限：97年08月01日 至 98年07月31日 
主持人：葉介山 jsyeh@pu.edu.tw 靜宜大學 資訊管理學系 
計畫參與人員：林盈霖、丁嘉賢 靜宜大學 資訊管理學系 
 
 
【中文摘要】 
關鍵詞： 週期樣式、非同步序列、樣式探勘、資料探勘 
 
在過去的十年，週期樣式探勘研究獲得到了很大的關注。以前的研究大多集中在同步週期模式。 
許多文獻中已提出週期樣式探勘的方法。不過，非同步週期樣式探勘已逐漸獲得更多的注意。在
本研究中，我們提出一個有效率的串列結構和 OEOP 演算法來有效的挖掘各種單一事件單一樣式
的序列。然後，再透過我們所提出的 MEOP 及 MEMP 演算法，將 OEOP 挖掘的結果結合成多重
事件-單一樣式及多重事件-多重樣式的序列。最後，利用我們所提出的 APP 結合出非同步週期樣
式。 
我們採用基因序列、股票指數及人造數列為實驗數據，實驗結果顯示：我們所提出的演算法具有
良好的效能和可擴充性。 
本計劃之部分成果已發表於 2009 年 一月份「the 3rd International Conference on Ubiquitous 
Information Management and Communication」會議中，並收錄於該會議論文集。 
 
表 C012-1                                                                           共 14 頁  第 4 頁 
2. PROBLEM DEFINITION 
This section defines the problem of asynchronous periodic pattern mining. The problem definition and 
notations are similar to [15] with minor modification. 
Let },,,{ 21 neeeE K= be a set of all events. An eventset X  is a nonempty subset of E . An eventset with k  
events is called a k -eventset. A sequence D is an ordered list of eventsets. For example, },,,{ dcbaE = , 
},,{ cbaX = is a 3-eventset, }),,,{},}{,,{},,,{},{},,}{,}{,,({ dcbadcadcaadcbadcabdcacbcbaD = is a 
sequence. 
Definition 1. A pattern with period l  is a nonempty sequence ),,,( 21 lpppP K= , where 1p  is an 
eventset and ip  is either an eventset or *, for li ≤≤2 . The symbol * indicates a “don’t care” position. 
A pattern P  is called an i-pattern if exactly i positions in P contain eventsets. For example, ,*,*,*)(a  
is a 1-pattern with period 4, and ,*),*},,({ cbba  is a 3-pattern with period 5. 
Definition 2. For two patterns ),,,( 21 lpppP K=  and ),,,( ''2'1' lpppP K=  with the same period l, 
'P is a specialization of P (i.e., P is a generalization of 'P ) if and only if 'ii pp ⊆  or *=ip , for 
li ≤≤1 . For example, let ,*),*,( caP = , ,*),},,({' cbbaP =  is a specialization of P . 
Definition 3. For pattern ),,,( 21 lpppP K=  with period l and a sequence of eventsets 
),,,( 21 ldddD K= , we say that P matches D or D supports P if and only if ii dp ⊆  or *=ip , for 
li ≤≤1 . D is also called a match (or a match block) of P . For example, let ,*),*,( caP = , 
}),{},,,{,},,({ dbcbabbaD = is a match of P . 
Consider pattern ),,,( 21 lpppP K=  with period l, a original sequence of eventsets 
),,,( 21 mdddD K=  with length m, two subsequences ),,,( 111 −++= liii dddD K  and 
),,,( 112 −++= ljjj dddD K  of D where mji ≤≤≤1 : 
If 1−+≤≤ liji , 1D and 2D overlap each other .  
If jli <−+ 1 , the distance of 1D and 2D  is 1)1( +−+− lij . 
Definition 4. Given a pattern P with period l, a original sequence D , and k subsequences kDDD ,,, 21 K  
of D , if iD ( )1 ki ≤≤  matches P and the distance of iD  and 1+iD  ( )11 −≤≤ ki equals 0,  the 
sequence kDDD K21 is called a k-segment (or a continuous matching block with the repetition k) of 
P . For example, let ,*),*,( caP = , ),,,},,{},,,{,},,{,,,,( ccaadbcbabbadcbaS = is a 3-segment of P , 
since P  matches ),,,(1 dcbaD = , }),{},,,{,},,({2 dbcbabbaD = , and ),,,(3 ccaaD = . 
Definition 5. A maximum segment S with respect to a pattern P  is called a valid segment, if and only 
if the number of repetitions of S is no less than a given minimum repetition (i.e., min_rep). For example, 
let ,*),*,( caP = and min_rep=3, ),,,},,{},,,{,},,{,,,,( ccaadbcbabbadcbaS = is a valid segment w. r. t. 
P . 
Problem Definition. Given a sequence of eventsets D, a minimum repetition min_rep, a maximum 
distance max_dis, an asynchronous periodic pattern P indicates that there exists a valid subsequence S 
with respect to P in D and S is a set of non-overlapping valid segments, where each valid segment has at 
least min_rep contiguous matches of P and the distance between any two successive valid segments does 
表 C012-1                                                                           共 14 頁  第 6 頁 
3.2 The linked data structures 
To accelerate the mining process and properly record the pattern information of the list of time instants, 
we introduce the following three structures, START node, END node, and VALID node. By efficiently 
connecting START nodes and END nodes while processing the time instants, we are able to obtain all 
1-patterns for the given event for its list of time instants.    
START node: A structure consists of three fields. The first field, stime, saves the starting time instant of 
a 1-pattern; the second field, next_s, is a pointer that links to the next START node; the third field, list_e, 
is a pointer linking to an END node.  
END node: A structure consists of four fields. The first field, etime, saves an ending time instant of a 
1-pattern; the second field, period, records the period of the pattern; the third field, rep_num, stores the 
repetition of the pattern; the last field, next_e, is a pointer that links to the next END node. 
VALID node: A 4-field structure to record a valid 1-pattern. The fields, stime, etime, period, and 
rep_num, indicate the starting time instant, the ending time instant, the period, and the repetition of the 
1-pattern, respectively.  
The structures of START, END, and VALID nodes are shown in Figure 2. 
 
Figure 2. The linked list structures 
 
3.3 OEOP (One Event One Pattern Mining) Algorithm 
Given a sequence of eventsets D, for each event e, we first generate the list of time instants of e, denoted 
as eTL . The preliminary goal of OEOP is to discover all valid 1-pattens in eTL .  
For each list of time instants eTL  of event e, with the minimal repetition min_rep, and the maximal 
period Lmax, the OEOP algorithm utilizes the new linked list structures and generates all valid 1-pattern 
segments of event e. The details of OEOP are as follows: 
OEOP Algorithm 
Input: the list of time instants eTL for event e, min_rep, Lmax 
Output: valid segments VS of event e 
Method: 
1. L= null ;       
       //L : the list of Start node allocate a valid array VS 
2. for each time instant t in eTL  do 
3. { 
4.      allocate a START node X; 
5.     X.stime = t ; 
表 C012-1                                                                           共 14 頁  第 8 頁 
Step 3 (read 5): for the 1-pattern with starting time 1, modify the ending time from 3 to 5 and also 
allocate a new END node with ending time 5 and period 4.  
 
Step 4 (read 7):  
 
Step 5 (read 13): 
 
Finally, three valid 1-pattern structures are as follows:   
 
3.4 MEOP and MEMP Algorithms 
After obtaining all valid segments of 1-patterns for each event, we record them in the following format: 
(event, startTime, period, rep_num). For example, (A, 1, 2, 4) indicates that the 1-pattern for event A 
starts at time 1, is during period 2, and repeats 4 times.  
For valid segments of two different events with different starting times, the offsets of the two segments 
are calculated by the formula offset=startTime % period. Two segments with the same offset are possibly 
combined into a multiple-event segment.   
The overlapping section of two valid segments is from min{ei.endTime, ej.endTime} to max{ ei.startTime, 
ej.startTime}, where endTime= startTime+ (rep_num-1) * period. If valid segments can be combined, we 
denote the result as: 
 ({e1,…,en}, max{ei.startTime}, p , ⎡ ⎤ 1/}).max{).(min( +− pendTimeeendTimee ii ). For example, the 
combination of (A, 2, 2, 3) and (B, 2, 2, 3) is recorded as ({A, B}, 2, 2, 3), which is a multiple-event 
1-pattern ({A, B} , *). 
表C012-1                                                                           共 14 頁  第 10 頁 
Stock Price Series 
Second, we selected the 2008 Taiwan Stock Exchange Capitalization Weighted Stock Index (TAIEX) by 
Taiwan Stock Exchange Co., Ltd. (TSEC, http://www.tse.com.tw) [16] and the 2008 Dow Jones 
Industrial Average Index ($INDU) by Dow Jones & Company (http://www.djindexes.com) [17]. Due to 
TSEC regulations, the daily change of TAIEX is limited to between -7% and 7%. Therefore, we 
transformed both TAIEX and $INDU numerical index series to the symbolic series using the following 
formula: 
Change_rate(i-th day) = (i-th day’s index – (i-1)-th day’s index) / (i-1)-th day’s index  
Event(i-th day) = A, if Change_rate(i-th day)>=3% 
Event(i-th day) = B, if 3% > Change_rate(i-th day)>= 1% 
Event(i-th day) = C, if 1% > Change_rate(i-th day)>= -1% 
Event(i-th day) = D, if -1% > Change_rate(i-th day)>= -3% 
Event(i-th day) = E, if -3% > Change_rate(i-th day) 
For example, in Table 1, the change rate of TAIEX on 2008/01/03 is (8,184.20-8,323.05)/ 8,323.05≒
-0.01668. We set it to be the symbol D. In Table 2, the change rate of $INDU on 2008/01/03 is 
(13056.72328-13043.96091)/ 13043.96091≒-0.000978. We set it to be the symbol C.  
Table 1.  Example of TAIEX  
Date TAIEX % Event
2008/01/02 8,323.05  
2008/01/03 8,184.20 -0.01668 D 
2008/01/04 8,221.10 0.004509 C 
2008/01/07 7,883.37 -0.04108 E 
2008/01/08 7,962.91 0.01009 B 
2008/01/09 8,085.06 0.01534 B 
 
Table 2.  Dow Jones Industrial Average Index ($INDU)  
Date $INDU % Event
2008/01/02 13043.96091   
2008/01/03 13056.72328 0.000978 C 
2008/01/04 12800.17514 -0.01965 D 
2008/01/07 12827.48825 0.002134 C 
2008/01/08 12589.06756 -0.01859 D 
2008/01/09 12735.30651 0.011616 B 
 
Synthetic data for multiple eventsets 
Both GenBank sequences and transformed stock price sequences only include one event at each time 
instant. For examining the performance of MEMP algorithm, we also artificially generated a multiple 
表C012-1                                                                           共 14 頁  第 12 頁 
OEOP results 
length of sequence versus running time , min_rep=3, Lmax=9
0
200
400
600
800
0 500 1000 1500 2000
length of sequence
ru
nn
ing
 tim
e (
ms
)
GenBank sequence
 
 Figure 4.  Length of sequence vs running time 
Figure 4 shows the relationship between length of sequence and running time. Apparently, running time 
significantly relates to the lengths of sequences.  
number of segments versus min_rep , Lmax=9
0
100
200
300
400
0 1 2 3 4 5 6
min_rep
nu
mb
er 
of
 se
gm
en
ts
X60729 GenBank sequence , a event stock 07 , C event
 
Figure 5.  min_rep vs number of valid segments  
Figure 5 compares min_rep with the number of valid segments. For both X60729 GenBank and 2008 
TAIEX sequences, the number of valid segments varies almost as the inverse of min_rep.  
running time versus min_rep , Lmax=9
0
50
100
150
200
0 1 2 3 4 5 6
min_rep
ru
nn
ing
 tim
e (
ms
)
X60729 genBank sequence , g event stock07,C event
 
Figure 6.  min_rep vs running time  
表C012-1                                                                           共 14 頁  第 14 頁 
6. H. Mannila, H. Toivonen, and A.I. Verkamo, “Discovering generalized episodes using minimal 
occurrences,” In Proceedings of the 2nd International Conference Knowledge Discovery and Data 
Mining, pp. 146-151, 1996.  
7. H. Mannila, H. Toivonen, and A.I. Verkamo, “Discovering frequent episodes in event sequences,” 
Data Mining and Knowledge Discovery, vol. 1, no. 3, pp. 259-289, 1997. 
8. H. J. Loether and D. G. McTavish, “Descriptive and inferential statistics: an Introduction,” Allyn 
and Bacon, 1993 
9. J. Han, W. Gong, and Y. Yin, “Mining segment-wise periodic patterns in time-related databases,” In 
Proceedings of the 4th ACM SIGKDD International Conference Knowledge Discovery and Data 
Mining (KDD’98), pp. 214218, 1998. 
10. J. Han, G. Dong, and Y. Yin, “Efficient mining partial periodic patterns in time series database,” In 
Proceedings of the 15th International Conference Data Eng. (ICDE ’99), pp. 106-115, 1999. 
11. J. Yang, W. Wang, and P. S. Yu, "Mining asynchronous periodic patterns in time series data," In 
Proceedings of the 6th ACM SIGKDD International Conference on Knowledge Discovery and Data 
Mining, pp. 275-279, 2000. 
12. J. Yang, W. Wang, and P. S. Yu, "Infominer: mining surprising periodic patterns," In Proceedings 
of ACM SIGKDD International Conference Knowledge Discovery and Data Mining (KDD’01), San 
Francisco CA, USA, pp. 395-400, 2001. 
13. J. Yang, W. Wang, and P. S. Yu, "InfoMiner+: mining surprising periodic patterns with gap 
penalties," In Proceedings of the 2002 IEEE International Conference on Data Mining (ICDM 
2002), pp. 725-728, 2002. 
14. J. Yang, W. Wang, and P.S. Yu, “Mining asynchronous periodic patterns in time series data,” IEEE 
Transactions on Knowledge and Data Engineering, vol. 15, no. 3, pp. 613-628, 2003. 
15. K. Y. Huang and C. H. Chang, "SMCA: a general model for mining asynchronous periodic patterns 
in temporal databases," IEEE Transactions on Knowledge and Data Engineering, vol. 17, pp. 
774-785, 2005. 
16. TAIEX Total Return Index, 
http://www.twse.com.tw/en/trading/indices/MFI94U/genpage/Report200908/A941200908.php,  
August  2009. 
17. Dow Jones Industrial Average, http://www.djaverages.com/?view=industrial&page=index-data, 
August 2009.  
           - 2 - 
報告內容應包括下列各項： 
一、參加會議經過 
The 3rd International Conference on Ubiquitous Information Management and 
Communication (ICUIMC 2009) was hold in Sungkyunkwan University, Suwon, Korea.  
  
My scheduled presentation was at 2:20 pm, January 14-16, 2009. It was a twenty-minute 
talk, including Q&A. The presentation topic was “A New Data Structure for Asynchronous 
Periodic Pattern Mining.” The audiences participated the discussion eagerly. I also received 
lots of inputs from participants for the future research.  
  
二、與會心得 
The 3rd International Conference on Ubiquitous Information Management and 
Communication (ICUIMC 2009) provided a forum for the exchange of ideas and information, 
for cultivating opportunities for collaborative research, and for fostering friendship among 
researchers in key technology hotbeds in the Asia Pacific region engaged in various facets of 
information management and communications technologies appropriate for ubiquitous 
computing and application environments. 
 In the 2-day conference, researchers and graduate students presented their research 
results. People discussed topics in the presentation sections, and chatted in the coffee breaks 
and banquets. The research atmosphere was great.  
The organization committee provided very good service and assistance, including 
housing, dinning and transportation. It was a very well organized conference.  
 
三、考察參觀活動(無此項活動者省略) 
A short tour to Insadong, a neighborhood of the Jongno-gu district of Seoul. Insadong is a 
large market for antiques and artworks.  
 
 
A New Data Structure for Asynchronous Periodic Pattern 
Mining 
Jieh-Shan Yeh 
Department of Computer Science and Information 
Management, Providence University 
200 ChungChi Rd., Taichung 43301, Taiwan 
+886-4-2632-8001 ext. 18113 
jsyeh@pu.edu.tw 
Szu-Chen Lin 
Department of Computer Science and Information 
Management, Providence University 
200 ChungChi Rd., Taichung 43301, Taiwan 
+886-4-2632-8001 
g9571043@pu.edu.tw 
 
ABSTRACT 
The periodic pattern mining is to discover valid periodic patterns 
in a time-related dataset. Previous studies mostly concern the 
synchronous periodic patterns. There are many methods for 
mining periodic patterns proposed in literature. Nevertheless, 
asynchronous periodic pattern mining gradually receives more and 
more attention recently. In this paper, we propose an efficient 
linked structure and the OEOP algorithm to discover all kinds of 
valid segments in each single event sequence. Then, refer to the 
general model of asynchronous periodic pattern mining proposed 
by Huang and Chang, we combine these valid segments found by 
OEOP into 1-patterns with multiple events, multiple patterns with 
multiple events and asynchronous periodic patterns. Besides, we 
implement these algorithms on two real datasets. The 
experimental results show that these algorithms have the good 
performance and scalability.  
Categories and Subject Descriptors 
H.2.8 [Database Management]: Database Applications – data 
mining. 
General Terms 
Algorithms, Performance, Experimentation, Theory. 
Keywords 
Periodic pattern, asynchronous sequence, data mining. 
1. INTRODUCTION 
Pattern mining is extensively studied in view of the importance in 
the field of data mining. Various pattern mining models have been 
introduced and implemented for different applications. For 
transaction databases, there are frequent itemset mining [1], [2] 
and sequential pattern mining [3], [4]. For event sequence 
databases, there is frequent episode mining [5], [6], [7].  
Periodic patterns commonly appear in all kinds of time-series 
databases. For instance, trajectories of objects, weather, tides, 
stock market prices, DNA sequences, and etc. The discovery of 
patterns with periodicity is considered of great importance and has 
been rapidly developed in recent years. The periodic pattern 
mining models include full-cycle periodic pattern mining [8], 
segment-wise periodic pattern mining [9], partial periodic pattern 
mining [10], frequent partial periodic pattern mining [10], and 
asynchronous periodic pattern mining [11], [12], [13], [14] , [15]. 
Yang et al. [11] first proposed the concept of the asynchronous 
periodic patterns to deal with disturbances in the data sequences. 
They aimed at discovering the longest periodic subsequence 
which may contain small disturbance. Formally, a valid 
subsequence with respect to a pattern P in a time-series database 
is a set of non-overlapping valid segments, where a valid segment 
has at least min_rep contiguous matches of P and the distance 
between any two successive valid segments does not exceed a 
given threshold max_dis.  
In order to accelerate the mining process of discovering 
asynchronous periodic patterns, in this paper, we propose an 
efficient linked list structure and the OEOP algorithm to discover 
all kinds of valid segments in each single event sequence. 
Afterwards, by calculating the offsets of the valid 1-pattern 
segments, the proposed MEOP algorithm and MEMP algorithm 
will merge them into multiple-event patterns. Finally, the 
proposed ASAM algorithm will produce asynchronous periodic 
patterns. 
The rest of this paper is organized as follows: Section 2 introduces 
the definitions of the notions and the problem. The new linked list 
structure and the proposed mining process are presented in Section 
3. Section 4 provides experimental results and evaluates the 
performance of the proposed strategy. Finally, we conclude in 
Section 5 with a summary of our work. 
2. PROBLEM DEFINITION 
In this section, we define the problem of asynchronous periodic 
pattern mining. The problem definition is similar to [HC05] with 
some modification. 
Let },,,{ 21 neeeE K= be a set of all events. An eventset X  is a 
nonempty subset of E . An eventset with k  events is called a k -
eventset. A sequence D is an ordered list of eventsets. For 
example, E = {a, b, c, d}, D = ({a,b,c} {b,c} {a,c,d} b {a,c} d 
{a,b,c,d} a {a,c,d} {a,c} d {a,b,c,d}) 
 
Permission to make digital or hard copies of all or part of this work for 
personal or classroom use is granted without fee provided that copies are 
not made or distributed for profit or commercial advantage and that 
copies bear this notice and the full citation on the first page. To copy 
otherwise, or republish, to post on servers or to redistribute to lists, 
requires prior specific permission and/or a fee. 
ICUIMC-09, January 15-16, 2009, Suwon, S. Korea 
Copyright 2009 ACM 978-1-60558-405-8109101...$5.00 
Appendix 4
pattern segments for each events of the dataset. For different 
events, by compute the offsets of the valid 1-pattern segments, 
either the MEOP algorithm or the MEMP algorithm will merge 
them into multiple events patterns. Finally, the ASAM algorithm 
will generate asynchronous periodic patterns. Figure 2 illustrates 
the steps of the proposed mining process for asynchronous 
periodic pattern mining.   
3.2 OEOP (One Event One Pattern Mining) 
Algorithm 
Given the list of time instants TimeList for event e, the minimal 
repetition min_rep, and the maximal period Lmax, the OEOP 
algorithm utilizes the new linked list structures and generates all 
valid 1-pattern segments of event e. The detail of OEOP is as 
follows: 
OEOP Algorithm 
Input: the list of time instants TimeList for event e, 
min_rep, Lmax 
Output: valid segments VS of event e 
Method: 
1. L= null ;       
       //L : the list of Start node allocate a valid array VS 
2. for each time instant t in TimeList do 
3. { 
4.      allocate a START node X; 
5.     X.stime = t ; 
6.     X.next = null; 
7.     X. list_e = null ; 
8.     L.insert(X) ;       // insert X at the end of L 
9.     for each Xi node L do 
10.   { 
11.      for each Yj node in Xi. list_e do 
12.      { 
13.         if ( t -Yj.etime = Yj.period ) 
14.         Yj.etime = t ;   Yj.rep_num++ ; 
15.         if ( t -Yj.etime > Yj.period ) 
16.            { 
17.             if ( Yj.rep_num >= min_rep ) 
18.                   move VS(Yj) ;       
19.                       //insert Yj at the end of VS array 
20.                   free (Yj) ;  // delete Yj 
21.            } 
22.         if ( t-Xi.stime <= Lmax ) 
23.           { 
24.               allocate END node Y; 
25.             Y.etime = t ; 
26.             Y.period = t -Xi.stime ; 
27.            Y.rep_num = 2 ; 
28.             Xi.list_e.insert (Y) ;   
29.             // insert Y at the end of Xj.list_e 
30.            } 
31.       } 
32.  } 
33.  return VS; 
For example, let TimeList ={1, 3, 5, 7, 13} for event A, min_rep 
=3, Lmax =6. The constructing steps of the linked list structure are 
illustrated as follows.  
Step 1 (read 1): allocate a new START node. 
 
Step 2 (read 3): for the 1-pattern with starting time 1, allocate a 
new END node for a pattern with the ending time 3. 
 
Step 3 (read 5): for the 1-pattern with starting time 1, modify the 
ending time from 3 to 5 and also allocate a new END node with 
ending time 5 and period 4.  
1A
3
5 32
5 /
5 22 /
5 24 /
/  
Step 4 (read 7):  
Step 5 (read 13): 
 
Finally, the valid 1-pattern structures are as follows:   
 
3.3 MEOP and MEMP Algorithms 
After obtain all valid segments of 1-patterns for each event, we 
record them in the following format: (event, startTime, period, 
rep_num). For example, (A, 1, 2, 4) indicates that the 1-pattern for 
event A will starting time 1, period 2 and repetition 4.  
For valid segments of two different events with different starting 
times, we calculate the offsets of the two segments by the formula 
offset=startTime % period. Two segments with the same offset are 
possibly combined to a multiple-event segment.   
The overlapping section of two valid segments is from 
min{ei.endTime, ej.endTime } to max{ ei.startTime, ej.startTime}, 
where endTime= startTime+ (rep_num-1) * period. If valid 
segments can be combined, we denote the result as: 
Appendix 6
4.3 OEOP results 
length of sequence versus running time , min_rep=3, Lmax=9
0
200
400
600
800
0 500 1000 1500 2000
length of sequence
ru
nn
ing
 tim
e (
ms
)
GenBank sequence
 
 Figure 4.  Length of sequence vs running time 
 
Figure 4 shows the relation between the length of sequence and 
the running time. It appears that the running time is significantly 
related to the lengths of sequences.  
number of segments versus min_rep , Lmax=9
0
100
200
300
400
0 1 2 3 4 5 6
min_rep
nu
mb
er 
of
 se
gm
en
ts
X60729 GenBank sequence , a event stock 07 , C event
 
Figure 5.  min_rep vs number of valid segments  
 
Figure 5 compares  min_rep with the number of valid segments.  
For both X60729 GenBank and stock07 sequences, the number of 
valid segments varies almost as the inverse of min_rep. Table 4 
and Table 5 list the numbers of valid segments of each event for  
stock07 and X60729 GenBank sequences, respectively.  
Table 4. stock 07 sequence 
Event Number of valid segments 
A 0 
B 19 
C 355 
D 44 
E 1 
F 0 
Table 5.   X60729 GenBank sequence 
Event Number of valid segments 
a 595 
t 620 
c 297 
g 162 
 
 
running time versus min_rep , Lmax=9
0
50
100
150
200
0 1 2 3 4 5 6
min_rep
ru
nn
ing
 tim
e (
ms
)
X60729 genBank sequence , g event stock07,C event
 
Figure 6.  min_rep vs running time  
 
In Figure 6, as expected, the increase in the size of min_rep is 
observed with decreasing running time, for both X60729 GenBank 
and stock07 sequences.   
 
number of segments versus period , min_rep=3
0
20
40
60
80
100
120
0 2 4 6 8 10 12
period
nu
mb
er 
of
 se
gm
en
ts
AJ131352 GenBank sequence , t event X60729 GenBank sequence , t event
 
Figure 7.  Period vs number of valid segments 
 
Figure 7 illustrates that the size of pattern period is not clearly 
related to the number of valid segments on both X60729 GenBank 
and stock07 sequences.  
 
4.4 MEOP and MEMP results 
 
min_rep versus multiple events segments, artifical sequence , Lmax=9
0
10
20
30
40
50
0 1 2 3 4 5
min_rep
nu
mb
er 
of 
seg
me
nts
 w
ith
mu
ltip
le 
ev
en
ts
AB AC BC
 
Figure 8.  min_rep vs number of segments with multiple events 
 
For the synthetic data sequence AM_seq, we calculate the 
numbers of segments including multi-event 1-patterns and mulit-
patterns by applying MEOP and MEMP algorithms. Figure 8 
demonstrates that the numbers of segments and min_rep size are 
reversely related for events {A, B}, {A, C} and {B, C}.  
 
Appendix 8
