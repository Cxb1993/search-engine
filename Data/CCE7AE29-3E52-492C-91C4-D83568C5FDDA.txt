provides internet-based and scalable infrastructure, 
platforms and services. In this research, we develop 
an effectiveness evaluation cloud service based on 
powerful computing capability to process a large 
amount of data. We collect design pattern’s 
applications in open source projects, and provide 
programmers valuable and real-time analysis 
information to help them inspect the value of 
deployed design patterns. 
英文關鍵詞： Cloud Computing, Design Pattern, Software Quality, 
Software Evolution, Hadoop, MapReduce 
 
 i 
目      錄 
1. 中文摘要................................................................................................................ 2 
2. 英文摘要................................................................................................................ 2 
3. 前言........................................................................................................................ 2 
4. 研究計畫的目的.................................................................................................... 3 
5. 研究方法................................................................................................................ 3 
5.1. 設計樣式應用情境 (Pattern Application Context; PAC) ......................... 4 
5.2. 設計樣式應用演化 (Pattern Application Evolution; PAE) ...................... 5 
5.3. 有效的設計樣式應用................................................................................ 6 
5.4. 有效性分析方法........................................................................................ 6 
5.5. MapReduce 設計 ....................................................................................... 7 
6. 文獻探討................................................................................................................ 8 
6.1. 設計樣式.................................................................................................... 8 
6.2. 設計樣式偵測工具.................................................................................... 8 
6.3. Hadoop ....................................................................................................... 9 
6.4. MapReduce ................................................................................................ 9 
6.5. Hadoop Distributed File System (HDFS) ................................................ 10 
7. 結果與討論.......................................................................................................... 11 
7.1. 以設計樣式分析實驗結果...................................................................... 12 
7.2. 以效能分析實驗結果.............................................................................. 13 
7.3. 結論.......................................................................................................... 16 
8. 參考文獻.............................................................................................................. 18 
國科會補助專題研究計畫成果報告自評表.............................................................. 19 
 
 3 
計師套用某些設計樣式，不僅是想解決特定的設計問題，更期盼這些設計樣式能
夠增加程式的彈性，並在往後軟體的設計發生改變時能發揮功效。本系統需要處
理較繁雜的平行運算，在執行速度上不快，我們需要一個強大的框架來解決這個
問題，Hadoop 強調可以快速處理大量資料的運算，因此將本系統建立在雲端上。 
4. 研究計畫的目的 
本計畫預期提出一個評估設計樣式有效性的方法，首先找出軟體中所應用的
設計樣式，分析每個設計樣式所包含的樣式應用情境(Pattern Application Context, 
PAC)，並比較該設計樣式在不同版本應用情境的差異，是否符合該樣式應用模
型(Pattern Application Model, PAM)，透過此方法我們可分別算出每個不同的設計
樣式實體所得到的應用程度，並可幫助程式設計師重新檢視這些設計樣式的正確
性。本計畫將此評估方法開發成為設計樣式有效性分析工具(Pattern Effectiveness 
Analyzer, PEA)，其系統架構圖如圖 1 示，我們開發的有效性分析工具 PEA 預期
包含三個模組：System Evolution Manager、PAC Modeler 以及 PAM Analyzer，其
中 System Evolution Manager 包括各種不同系統版本管理等功能，此模組亦偵測
系統演進中所應用的設計樣式。PAC Modeler 蒐集各個設計樣式在程式中的應用
情境(PAC)， PAM Analyzer 檢驗不同版本 PAC 的改變是否符合該設計樣式的應
用模式(PAM)。 
  
圖 1. 系統架構圖 
 
5. 研究方法 
為了提升評估設計樣式有效性方法的運算效率，我們將設計樣式有效性分析
工具 (Pattern Effectiveness Analyzer; PEA) 的技術發展為雲端運算服務。現今雲
端運算的平台及服務愈來愈多，知名度較高的有Hadoop、Amazon Elastic Compute 
Cloud (EC2) 、Google App Engine 以及 Microsoft Azure [1][2][3][4] 等等，其中
Hadoop 為自由軟體，因此許多企業都以 Hadoop 為基礎來開發相關的雲端運算應
用服務。本研究使用 Hadoop 為基礎來建置設計樣式有效性分析雲端運算服務，
Pattern Detection Tool 
Pattern Effectiveness Analyzer 
(PEA) 
 
 
 
 
 
 
 
PAM Analyzer 
PAC Modeler 
System Evolution Manager  
 5 
 
圖 5.1 設計樣式 Strategy 的設計樣式應用情境 
因此我們將 Strategy 設計樣式的應用情境定義為： 
 PAC (Strategy, D) = {<Context, Rc>, < Context, RS>, 
 <ConcreteStrategyAdd, Rcs>, (2) 
 <ConcreteStrategySub, Rcs>} 
其中 RS, RC, RCS 為 Context, Strategy, Concrete Strategy 中扮演的角色。 
 
5.2. 設計樣式應用演化 (Pattern Application Evolution; PAE) 
設計樣式應用演化定義為描述軟體演化過程中設計樣式期盼被應用的情
境。我們將設計樣式的應用演化定義為： 
  (3) 
其中角色 role 為設計樣式 dp 裡的設計元素，而 operator 表示程式設計師對
該角色的操作方式，分別為增加 (+)、刪除 (-) 與修改 (*) 三種操作方式。以先
前圖 5.1 的 Strategy 設計樣式為例，我們預期增加新的 Strategy 或是移除
Strategy，但是不修改其他設計元素，換言之，我們增加或刪除 Concrete Strategy
設計元素的角色。因此我們將 Strategy 設計樣式的 PAE 定義為： 
 PAE (Strategy) = <Rcs, +>, <Rcs, -> (4) 
其中 RCS 為 Concrete Strategy 中扮演的角色。 
 
 7 
   (6) 
但是我們很難判定被套用的設計樣式是否被有效的應用，這必須由程式設計
師主動介入才能得知。所以本研究假設設計樣式在每次的版本轉換都是有效應
用，因此設計樣式在整個軟體演化過程的有效性應用程度  (Degree of 
Effectiveness; DoE) 為： 
   (7) 
DoE 可以幫助我們觀察每種設計樣式應用的情況，以及瞭解程式設計師對於
該設計樣式的掌握能力。 
 
5.5. MapReduce 設計 
 
圖 5 MapReduce 架構圖 
本研究的 MapReduce 架構如圖 ，為了要比較自由軟體的各個版本，所以我
們輸入專案名稱以及版本編號資訊。Map 收到資訊之後，Master 會指派每個分
割給不同的 Worker。Worker 透過路徑找到存放在 HDFS 裡對應的各個專案，接
著調用偵測工具 Pattern4，分析出專案的各個版本應用了哪些設計樣式、設計樣
式實體和元素，並將這些資訊產出為 XML 檔案。我們將 Map 輸出的 Key 和 Value
設定為： 
list (Key2 ,Value2) = list <(Project Name, Vi ), PAC> 
 9 
樹 (inheritance tree)。為了提升偵測設計樣式的效能，利用演算法建置子系統矩
陣，並透過圖形相似度演算法，分別計算各種設計樣式的矩陣與子系統矩陣相似
度，藉此找出系統中所套用的設計樣式實體。 
6.3. Hadoop 
全球知名研究資訊科技公司 IDC的統計指出，2006年全球資料量總共為 0.18 
ZB 0，因此他們預測 2011 年全球資料量將會高達 1.8 ZB。隨著日益增加的資料
量，我們將會面臨資料儲存與分析的挑戰 00。幾個知名企業如 Google、Amazon
和 Yahoo，每天必須從 PB 或 TB 的資料中分析出哪些網站比較受歡迎、哪些書
的需求量比較高或是哪種類型的廣告比較吸引人等等，而現有的工具越來越無法
處理這些龐大的資料量。Google 首先在 2004 年提出 MapReduce 程式設計模型，
它擁有擴展性及容錯機制，因此立刻引起廣泛的關注，但是 Google 並沒有公布
模型的細節。Doug Cutting 從模型看到了未來契機，帶領團隊開發出可以實行
MapReduce 的開放源碼 (Open Source) 框架—Hadoop。 
它和以往的分散式運算不同的地方在於 0： 
(1) 方便：Hadoop 一般是執行在標準化商用硬體 (commodity hardware) 組
成的大型叢集，或是例如 Amazon 提供的 EC2 雲端運算服務平台上； 
(2) 穩固：Hadoop 因為在標準化商用硬體上執行，可以快速的處理其硬體故
障問題； 
(3) 可擴展性：Hadoop 透過增加節點至叢集，線性方式擴展以處理更大的資
料量； 
(4) 簡單：Hadoop 讓使用者可以快速開發分散式運算。 
6.4. MapReduce 
MapReduce 為 Google 於 2004 年提出的程式設計模型 0，Google 為了處理
龐大的資料，已經撰寫了數百個特殊用途的程式，而且資料量還在日益增加中。
雖然這些運算並不複雜，但是為了讓這些大量資料分散在數千台機器上運作，使
得如何平行運算、分派工作與處理故障問題變得繁複。因此 Google 設計一個新
的模型，讓我們即使不瞭解分散式運算細節、容錯以及資料分配等問題，也能處
理大量的資料。其運算方式為使用者自行定義 Map，設定輸入的 Key/Value 值以
產出我們要的 Key/Value 值，MapReduce library 將相同 Key 值的 Value 值群組 
(group) 在一起並輸出給 Reduce，Reduce 同樣由使用者自行定義，將收到的 Value
值合併之後即可得到結果。簡單的表示方式如下： 
 
 
Hadoop 將執行的工作，例如輸入資料、分配 MapReduce 等等，分為許多個
任務，而 MapReduce 提供 JobTracker 和 TaskTracker 程序來管理任務。每個叢集
裡只有一個 JobTracker，通常在主節點上執行，只要叢集一接收到程式碼，
 11 
整個運作流程如圖 ，當我們要讀取或是寫入存放於 HDFS 裡的檔案，檔案會被
切割成多個區塊，之後 NameNode 會通知客戶端每個資料區塊被儲存到哪個
DataNode，讓客戶端直接與 DataNode 聯繫，以讀取與檔案區塊相對應的本地檔
案。 
 
圖 7 HDFS 架構圖 
其中 NameNode 為單點失效，如果它發生故障會導致整個檔案系統無法運作。因
此 Hadoop 提供兩種容錯機制以進行恢復和自動備份功能，第一個方法是配置
NameNode 在多個檔案系統上，以備份元資料的持久狀態；另一種方法是使用
Secondary NameNode (SNN)，SNN 會根據叢集的時間間隔來儲存元資料複本，
萬一發生故障就可以依備份資料進行復原；但是，如果在建立複本之前即發生故
障，難免仍會遺失部分資料。 
 
7. 結果與討論 
本研究提出一個建立在雲端上的評估軟體設計演進中設計樣式有效性之方
法，我們對十五個自由軟體進行實驗，分析其設計樣式有效性應用的情況，並且
比較 PEA 系統與建立在 Hadoop 上的 PEA 系統之間的效能差異。我們的實驗環
境設定開發語言為 Java，實驗平台為十九台桌上型個人電腦。 
為了能夠即時提供程式設計師正確的設計樣式應用分析資訊，我們需要更有
效率的方法來分析網際網路上大量自由軟體的程式碼資料，因此選擇使用
Hadoop 框架來解決這個問題，Hadoop 可以幫助我們進行複雜的分析運算，並且
快速地處理大量資料的運算。目前 Hadoop 必須在 Linux 環境下才能執行，所以
我們桌上型個人電腦的作業系統為 Ubuntu10.4。表 1 與表 2 列出本實驗的硬體及
軟體環境： 
表 1 實驗之硬體環境 
項目 規格 
 13 
LatexDraw 0 0.005 0.058 0.261 N/A 0.174 0.073 0.075 N/A 0.073 
PDFsam N/A N/A 0 N/A N/A N/A 0.029 0 N/A 0 
Pixelitor 0.011 0 0.007 N/A N/A 0.020 0.016 0.029 N/A 0.014 
TuxGuitar 0.200 0.009 0.062 0 N/A 0.125 0.051 0.032 N/A 0.051 
Weka 0.068 0 0.052 N/A 0.145 0 0.315 0.013 N/A 0.052 
由表 1 可得知本研究實驗的十五項自由軟體的套用情形，分為沒有套用、沒
有有效性應用以及有有效性應用。我們將這些資訊整理成圖 ，縱軸為專案的數
量，橫軸為設計樣式。從沒有套用設計樣式的情形來看，Visitor 設計樣式最少被
套用，Command 與 State/Strategy 設計樣式都有被套用。套用之後沒有出現有效
性應用的部分，以 Prototype 設計樣式最高，代表 Prototype 設計樣式被套用之後
很少會發生改變。而 Command 與 State/Strategy 設計樣式出現最多次有效性應
用，其次是 Template 設計樣式，代表 Command 與 State/Strategy 設計樣式被套用
之後很常會發生改變。 
 
圖 8 設計樣式套用情形 
 
7.2. 以效能分析實驗結果 
在這個章節裡將分析本系統在 Hadoop 環境下執行的效能，我們假設專案版
本數量和節點數量相同的時候，它的執行效率最好。實驗的效能結果如圖 、圖 和
圖 所示，縱軸為各個專案執行本系統所花費的時間，橫軸為各個實驗的專案名
稱，括號內代表該專案的版本數量。總共進行十一種不同節點的實驗，但是後面
節點數的效率差異不大，故僅列出其中九種節點的實驗結果。我們將執行時間長
度做為區別分為三個群組來分析，以易於觀察時間的落差，其中圖 為執行時間
小於 10 分鐘的專案，圖 為執行時間小於 120 分鐘的專案，圖 為執行時間大於
120 分鐘的專案。 
 15 
圖 10 專案執行時間比較圖(二) 
圖 11 專案執行時間比較圖(三) 
透過表分析圖 、圖 及圖 執行時間比較圖，我們可以發現專案最大檔案大
小在 1,500KB 以上的專案可以讓 Hadoop 分散式處理的效益發揮正面的助益，其
0
20
40
60
80
100
120
140
TuxGuitar (11) FreeMind (16) Jena (17) JHotDraw (8) Pixelitor (34)
執
行
時
間
(
分
鐘
)
 
PEA PEA with Hadoop node*2 PEA with Hadoop node*3
PEA with Hadoop node*4 PEA with Hadoop node*5 PEA with Hadoop node*7
PEA with Hadoop node*9 PEA with Hadoop node*11 PEA with Hadoop node*13
PEA with Hadoop node*15
0
100
200
300
400
500
600
700
800
900
1000
jGnash (27) Weka (12) jMemorize (12)
執
行
時
間
(
分
鐘
)
 
 
PEA PEA with Hadoop node*2 PEA with Hadoop node*3
PEA with Hadoop node*4 PEA with Hadoop node*5 PEA with Hadoop node*7
PEA with Hadoop node*9 PEA with Hadoop node*11 PEA with Hadoop node*13
PEA with Hadoop node*15
 17 
能發揮設計上的彈性；反之，Prototype 設計樣式很少發生有效應用，代表這
種設計樣式較無法發揮設計上的彈性。 
(2) MapReduce 架構降低分散式處理的應用門檻，讓我們即使在不瞭解分散式運
算細節、容錯以及資料分配等問題的情況下，也能容易地處理大量的資料。 
(3) 以本研究進行的實驗結果來看，整體而言 Hadoop 的確能增加 PEA 分析效
益，當軟體專案檔案越大時分析效益越加明顯。實驗結果顯示檔案大小在
1,500KB 以上的專案可以讓 Hadoop 分散式處理的效益發揮最大的效益。若
執行最大檔案大小在 1,500KB 以下的專案，會比在非 Hadoop 環境下執行
PEA 花費的時間還長。 
(4) 在 Hadoop 環境下執行 PEA 的時候，增加節點可以改善執行效率，即使執行
最大檔案大小在 1,500KB 以下的專案會比較慢，但是增加節點明顯可以減少
執行時間。另外，我們也從實驗結果發現本系統在五個節點時可以發揮
Hadoop 最佳執行效益。 
最後，我們探討實驗的限制及未來研究方向。由於我們以設計樣式偵測工具
Pattern4 工具進行分析，因此僅能針對以 Java 開發的自由軟體進行實驗，所以在
評估設計樣式軟體專案的取樣，我們受限於 Pattern4 而無法檢視 C/C++或其它程
式語言開發的專案。另外，我們實驗的 Hadoop 環境最多有十九個節點，且進行
實驗的十九台桌上型個人電腦配備並不一致，導致在評估執行效能上可能會有些
許差異，這些都是未來預期改善的研究方向。 
 
 
 
 
 
 
 
 
 
 
 
 
 
 19 
國科會補助專題研究計畫成果報告自評表 
請就研究內容與原計畫相符程度、達成預期目標情況、研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）、是否適
合在學術期刊發表或申請專利、主要發現或其他有關價值等，作一綜合評估。 
1. 請就研究內容與原計畫相符程度、達成預期目標情況作一綜合評估 
 達成目標 
□ 未達成目標（請說明，以 100 字為限） 
□ 實驗失敗 
□ 因故實驗中斷 
□ 其他原因 
說明：開發一個即時評估設計樣式有效性的雲端運算服務，並對十五套自由軟
體實進行實驗。 
2. 研究成果在學術期刊發表或申請專利等情形： 
論文：已發表 □未發表之文稿 □撰寫中 □無 
專利：□已獲得 □申請中 無 
技轉：□已技轉 □洽談中 無 
其他：論文發表於 2012 6th International Conference on Genetic and 
Evolutionary Computing , pages 1-6 , 2012-08. Kitakyushu, Japan. 
3. 請依學術成就、技術創新、社會影響等方面，評估研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性） 
本研究提出一個建立在雲端上的評估軟體設計演進中設計樣式有效性之方法，協助程式設
計師和品質管理團隊在軟體的演化過程中監控應用設計樣式的有效性，因此對學術研究及
國家軟體發展上都有相當的幫助與貢獻。綜合來說，在本研究中，我們完成了幾項貢獻： 
 開發一個即時評估設計樣式有效性的雲端運算服務 
 以知名的自由軟體進行實驗：本研究預計使用十五套自由軟體進行實驗，從不同角
度對實驗結果進行有效性分析，以多方面評估其設計樣式的有效性。 
 幫助程式設計師和品質管理團隊監控在軟體演化中設計樣式的有效性 
 
在未來，我們希望能夠以本研究作為基礎，完成更進一步的目標： 
 支援以非Java語言開發的自由軟體品質評估：由於我們以設計樣式偵測工具Pattern4
工具進行分析，因此僅能針對以 Java 開發的自由軟體進行實驗，所以在評估設計樣
式軟體專案的取樣，我們受限於 Pattern4 而無法檢視 C/C++或其它程式語言開發的
專案。 
 
表 Y04 
路網路的使用分析等。 
 
此次會議中由我與學生共同發表了論文『A PATTERN-BASED FRAMEWORK FOR 
MOBILE APPLICATION DESIGN: AN EXAMPLE OF ANDROID IMPLEMENTATION』，是
探討手機程式設計的快速開發問題。由於目前手機開發的重要性日益受到重視，我們的研究
受到不錯的迴響，許多與會的研究者紛紛參與討論，也讓我們發掘更多可以繼續延伸的研究
議題，是此行最大的收穫。 
 
陸續參加幾個 session 的探討，包含Kasetsart 大學的 High availability and scalability of 
parallel stateful firewall design; Murdoch 大 學 的  Integrated mobile content 
recommendation: A comparison study; Bekiaris 教授的 An ontology-based approach for 
user profile representation and management in a cloud infrastructure; 以及Kaewkiriya 
教授的 Design of prototype system for distributed e-learning management system，雖然不
完全是我熟悉的軟體工程領域，但期設計方法都給我一些啟示，對未來研究方向與有極大的
幫助。 
 
二、與會心得 
參加國際會議可以與世界各地不同國家的學者共同研討，除了可以了解在自己研究領域
中各種不同觀點的研究成果，也可以接觸到其它研究領域的新觀念與新的研究方法。對我們
加強研究的內容與品質有實質上的助益，尤其是能相互近距離研討、溝通觀念及想法，更能
強化未來於研究方法的精進。 
世界各地的華人在軟體工程論文的篇數有逐年增加的趨勢，在國際學術的能見度越來越
高。這一點除了可以惕勵自己外，也可以在學術研究的國際合作拓展華人的研究成果。 
 
三、考察參觀活動(無是項活動者省略) 
 
四、建議 
Nets 研討會所包含的研究包含資管領域與資工領域，由於我本身比較在資工領域，過去
對資管網際網路案例研究接觸的比較少，但透過此會議讓我更了解此兩領域應該可以多
多的交流。資管領域比較在站使用者的角度來思考問題，可以給我不少寶貴的意見。 
 
五、攜回資料名稱及內容 
 
Nets2012 研討會光碟片一張。 
表 Y04 
中各種不同觀點的研究成果，也可以接觸到其它研究領域的新觀念與新的研究方法。對我們
加強研究的內容與品質有實質上的助益，尤其是能相互近距離研討、溝通觀念及想法，更能
強化未來於研究方法的精進。 
世界各地的華人在軟體工程論文的篇數有逐年增加的趨勢，在國際學術的能見度越來越
高。這一點除了可以惕勵自己外，也可以在學術研究的國際合作拓展華人的研究成果。 
 
三、考察參觀活動(無是項活動者省略) 
 
四、建議 
大型研討會的舉辦規劃上困難較大，這次在日本舉行的會議就出現一些作業上的問題，
例如第二天的午宴就忙中有錯，把與會的人員引導到錯的餐廳，造成許多不便。日本許多文
化上的細膩之處是我們可以學習的，但英文語言溝通方面卻有不少問題。 這一次與會的人數
雖人很多，但來自於台灣的學者似乎佔了多數，我想既然是國際研討會就應該廣邀世界各地
的論文參與討論，我想這是大會可以改善的地方。 
 
五、攜回資料名稱及內容 
 
ICGEC 2012 研討會光碟片一張。 
 
 
照片：主持會議 
 
100 年度專題研究計畫研究成果彙整表 
計畫主持人：薛念林 計畫編號：100-2218-E-035-003- 
計畫名稱：模型導向企業雲之樣式支援軟體服務組合環境 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 1 1 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 3 3 100%  
博士生 1 1 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
