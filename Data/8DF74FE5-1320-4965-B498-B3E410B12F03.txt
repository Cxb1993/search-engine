 2 
 
行政院國家科學委員會專題研究計畫期未報告 
多維可調式視訊傳輸於寬頻無線網路之研究-子計畫一: 
適用於 WiMAX 系統之即時性速 H.264/AVC 壓縮解碼研究 
計畫編號: NSC 96-2221-E-008-013-MY2 
執行期限: 96 年 8 月 1 日 到 98 年 7 月 31 日 
主持人: 林銀議 教授 
計畫參與人員: 李育銘、王永富、吳俊德、吳建達、蘇詮智、崔致中、邱韋堯、
許鶴瀚、林姿宜
一、中文摘要 
新一代的 H.264 不管是壓縮率和影像
品質都明顯優於以往的視訊標準。這是因
為其使用了新的技術：可變區塊大小的移
動估計、多幅參考畫面的移動估計、整數
轉換。為了達到更好的編碼效益，
H.264/AVC 更使用位元率失真函數技術來
得到更好的編碼結果。然而卻使其編碼端
的運算複雜度大幅提升，導致增加了硬體
實現的困難度；而其計算的複雜度主要分
佈在可變區塊大小及多幅參考畫面的移動
估計。在本計畫中，利用時間域的移動緩
慢特性 (stationary)及空間域的平滑特性
(homogenous)，我們提出畫面間與畫面內
的快速區塊模式演算法，在影像品質幾乎
沒有失真的情況下，大大降低編碼複雜
度。此計畫研究成果已被發表或接受於
IEEE T-CSVT 2010 [19]、IEEE T-IP 2009 
[20]、IEEE ICIP 2007 [21]、IEEE ICME 
2008 [22]、IEEE ICASSP 2009 [23]、PCM 
2009 [24]和 PSIVT 2009 [25]。  
關鍵字: H.264/AVC、快速模式決策、零區
塊、絕對轉換誤差和、多幅參考畫面。 
二、Abstract 
The H.264/AVC uses variable block 
size ranging from 16x16 to 4x4 and multiple 
reference frame motion estimation in inter 
frame coding. This new feature has achieved 
significant coding gain, when compared to 
prior video coding standards. To obtain the 
highest coding efficiency, H.264/AVC 
applies the Lagrangian rate-distortion 
optimization (RDO) to check all possible 
coding modes and find the best coding result. 
This work proposed several fast and 
efficient algorithms to decide the best mode 
in inter coding and intra coding. It makes 
use of the spatial homogenous and the 
temporal stationary. Based on homogeneity 
and stationary of the video objects, only a 
small number of inter modes and intra 
modes are selected in RDO process. The 
 4 
 
別對七種畫面間區塊模式(inter mode)做移
動估計(motion estimation, ME)，如【圖
2】，若以±16 的搜尋範圍和區塊模式 16x16
為例，則需要比對 1089 次，而區塊模式
16x8 則為區塊模式 16x16 的 2 倍計算量。
此外，每種區塊模式又可以往前/後搜尋最
多 16 張參考畫面，因此在可變區塊大小
(variable block size) 及 多 幅 參 考 畫 面
(multiple reference frames)的架構下，雖然
可以達到很好的編碼效益，卻導致編碼端
的複雜度大幅提升。 
2、空間域的運算複雜度分析： 
為了去除空間性的冗餘，畫面內預測提
供了三種預測方法，分別為 I4MB、I16MB
及 C8×8MB： 
(1) I4MB 預測模式： 
每一個 亮度區塊有九種預測模式，如
【圖 3】，包含八種方向性模式(directional 
prediction mode)和一個 DC 模式，其中 DC
是一個很特別的預測模式，它是由【圖 3】
中的像素點 A-D 與 I-L 來做整個區塊的預
測。 
  Mode name0 vertical
1 horizontal
2 DC
3 diagonal down-left
4 diagonal down-right
5 vertical-right
6 horizontal-down
7 vertical-left
8 horizontal-up  
【圖 3】I4MB 中九種預測模式 
  
 
【圖 4】I16MB 中四種預測模式 
(2) I16MB 預測模式： 
除了 I4MB 預測模式外另外一個模式
為完整的巨區塊預測，也就是 I16MB 預測
模式，它適合用於平滑的影像區域，提供
四種模式選擇，如【圖 4】所示。 
 (3) 彩度預測模式： 
類似於 I16MB 預測模式也有四種彩度
預測模式可供選擇，但這四種預測模式與
I16MB 的編號順序不同。 
H.264/AVC 在畫面間與畫面內區塊模
式決策時，花費了相當多的運算量，因此
必須找出一些方法在影像品質(PSNR)不
損失很多且位元率(bit-rate)上升不多的前
題下減少編碼端的運算複雜度。 
五、文獻探討 
近年來，很多相關研究在幫助編碼器
快速找到最佳的區塊模式，其演算法的精
髓在於：利用平滑區塊(homogenous region)
或是運動量低的區塊(stationary region)為
前題，來選擇只做其中幾種區塊模式，以
減低系統的複雜度來達到加速的目的，以
下為快速畫面間與畫面內模式決策的相關
研究(fast mode decision)： 
1、緩慢移動區域(stationary region)： 
在移動估計之前就先判斷此區塊的特
性有助於區塊模式決策的提早結束，因此
有很多演算法利用各式定量分析來量測區
塊的特性，在[3]-[5]是以簡單的方法來做
判斷，像是區塊差異性…等資訊來判斷是
否為變化量低的區塊。 
2、平滑區域(homogenous)： 
另外[6]則是以考慮巨區塊的離散餘弦
轉換資訊來獲得其區塊的特性，轉換後的
資訊對於判斷水平或垂直邊界有很大的幫
助，可是卻需要較多的運算量。 
3、參考空間域與時間域的資訊： 
[7]-[10]分別參考了編碼區塊前後周圍
的資訊來預測目前的編碼方式，[7]以週遭
 6 
 
【表 1】基於零區塊數目之巨區塊個數
分佈情形(QP=32) 
# of ZB m0 m1 m2 & m3 mP8x8
16 172802 1564 270 1
15 67555 3609 751 42
14 58208 5216 1252 171
13 56604 7347 2059 347
12 56051 10670 3649 592
11 52279 10956 4234 851
10 45008 12064 5497 1315
9 45202 13162 6735 1694
8 45570 14564 8486 2536
7 46313 14548 9321 3126
6 44544 15334 11044 4393
5 45445 16442 12601 5957
4 47829 18744 15108 8403
3 42853 18173 15144 9758
2 38001 18859 16296 12844
1 30376 21536 18688 17855
0 31347 41353 39062 44727  
 
由【表 1】可得知，當一巨區塊中的零
區塊個數愈多愈適合用巨區塊切割模式來
做移動估計/補償，反之則 P8×8 區塊切割
模式較合適。因此我們可以針對零區塊的
個數，來決定要使用哪些畫面間區塊模式
進行移動估計/補償。基於統計分析，我們
提出針對時間域的快速演算法，零區塊畫
面間模式決策(ZBD4×4)，其演算法如下所
述： 
(1) 計算出該巨區塊之零區塊個數（N）。 
(2) 當 N 為 16 時，判斷為移動緩慢，則只
選擇使用 SKIP 模式。 
(3) 當 N 介於 8 到 15 之間，判斷為幾乎移
動緩慢，先使用 SKIP 和 16×16 模式，
假設 16×16 模式優於 SKIP，則再執行
16×8 和 8×16，否則提前結束。 
(4) 當 N 介於 5 到 7 之間，判斷為部份移
動緩慢，只選擇 SKIP，16×16，16×8，
8×16 去做移動估計。 
(5) 當 N 介於 0 到 4 之間，判斷為複雜移
動，此時為了避免嚴重的失真，則使
用所有的區塊模式來做移動估計。 
 
為了提升零區塊畫面間模式決策，利
用我們所提出的近似充分必要條件(nearly 
sufficient condition, 3.5Q)去計算零區塊的
個數，因為只是簡單地比較門檻值
(threshold)即可判別，所以可省去計算零區
塊時所耗費離散餘弦轉換和量化的計算
量。另外，因分裂法(splitting) [15]適合移
動緩慢的區域，合併法(merging) [16]適合
在複雜移動的區域，所以我們分別將這兩
種演算法皆應用到零區塊畫面間模式決策
中的部份移動緩慢及複雜移動的區域，最
後增強型零區塊畫面間模式決策的
(enhanced zero-block inter mode decision)
的架構，如【圖 5】。 
 
Decision Mode
detectionblock -zeroearly  using (N)  ZBsofnumber  Calculate
16N  15N8  7N5  4N0 
0m
Perform
10 m ,m
Perform
splittingdown -Top
Perform
merging up-Bottom
Perform
10 m  m
cost RD

32 m ,m
Perform
0m Choose
321 m ,m ,m among
best  theChoose
0m Choose
End
Y
N
 
【圖 5】增強型零區塊畫面間區塊模式演
算法 
 
 
 
【圖6】提出快速畫面內模式預測法架構圖 
 
 
 8 
 
 實驗結果與討論 
1、畫面間預測模式之模擬： 
在實驗中，我們使用 JM coder 的參考
軟體實現所提出的演算法，討論並分析其
影像品質、位元率、整體編碼時間，並與
JM coder 中原始架構做比較，另外也跟離
散餘弦轉換法(DCT) [6]、合併法(merging)
做比較，如【表 2】。 
由【表 2】中，可以發現我們所提出的
增強型零區塊模式決策的演算法平均可以
節省 70%的時間，而且在影像品質(PSNR)
和位元率(bit-rate)都幾乎和原始架構下的
效能相似。 
2、畫面內預測模式之模擬： 
為了可單純比較有關畫面內預測模式
的演算法，將畫面間模擬環境中GOP結構
更改為全部都只做I畫面，另外和另一篇快
速演算法(DED) [17]做比較分析，如【表
3】。由表中可得知，我們所提出的快速演
算法(SATD based intra mode decision)不僅
在時間上可節省更多的時間，同時也兼顧
了影像品質和位元率。 
【表 2】畫面間預測模式之效能分析(QP=28) 
(a) PSNR comparison 
△PSNR(dB) Sequence ZBD DCT Merging Enhanced ZBD
salesman -0.046 -0.038 -0.003 -0.030
paris -0.072 -0.029 0.002 -0.062
container -0.030 -0.037 -0.020 -0.063
foreman -0.091 -0.038 -0.015 -0.098
grandma -0.039 -0.037 -0.008 -0.036
mthr_dotr -0.067 -0.027 0.023 -0.050
-0.057 -0.034 -0.004 -0.057
CIF
QCIF
 
(b) Bit-rate comparison 
△Bitrate(%) Sequence ZBD DCT Merging Enhanced ZBD
salesman 0.84 1.14 -0.21 0.00
paris 1.59 0.64 0.06 1.41
container 0.01 0.27 0.10 0.84
foreman 1.05 -0.47 -0.40 0.12
grandma 0.23 1.60 1.34 0.33
mthr_dotr 0.89 1.18 0.21 0.81
0.77 0.73 0.18 0.59
CIF
QCIF
 
(c) Coding time comparison 
△Time(%) Sequence ZBD DCT Merging Enhanced ZBD
salesman -56.55 -41.95 -42.42 -75.30
paris -49.18 -25.49 -37.31 -67.88
container -56.81 -50.55 -49.68 -78.60
foreman -42.37 -22.49 -33.68 -61.47
grandma -62.75 -60.90 -44.26 -79.05
mthr_dotr -47.39 -38.00 -35.45 -65.54
-52.51 -39.90 -40.47 -71.31
CIF
QCIF
 
【表 3】畫面內預測模式之效能分析(QP=28) 
DED SATD based DED SATD based DED SATD based
foreman -0.172 -0.115 6.58 0.02 -71.71 -82.10
carphone -0.149 -0.104 8.63 0.01 -71.89 -82.35
mthr_dotr -0.196 -0.144 5.23 0.02 -72.02 -81.56
stefan -0.234 -0.174 5.34 0.12 -72.03 -82.16
news -0.131 -0.079 8.41 0.21 -71.98 -82.21
football -0.404 -0.221 2.29 0.02 -72.20 -81.24
-0.214 -0.139 6.079 0.065 -71.972 -81.936
△Bit rate (%) △Time (%)
AVG.
Sequence
QCIF
CIF
△PSNR (dB)QP=18
 
 10 
 
較 16×8 和 8×16 區塊切割(block partition)
的絕對誤差和，哪一數值較為小則區塊模
式為開，倘若 16×8 絕對誤差和較小，則不
僅其區塊模式開，兩相鄰的 8×8 零區塊可
以視為非方形之 16×8 大小零區塊，且 16×
8 零區塊還可以不作移動估測的搜尋，故
當情況是 C8_2 時，我們作 SKIP、m1、m2
或是 m3。不做移動估測這項動作適用於不
同區塊大小的零區塊，以及適用在【圖 7】
模式決策中，往後會詳細說明。 
當 8×8 零區塊分佈情況為 C8_3 以及
C8_4，我們依照其 8×8 零區塊分佈作不同
區塊模式的移動估測提前中止動作，犧牲
些微畫面品質換取速度，也就是如【圖
7】，C8_3 的情況下作 SKIP、m1、m2，C8_4
的情況下則作 SKIP、m1、m3。然而 8×8
零區塊在巨區塊中呈現對角線分佈，也就
C8_5 是最為尷尬的情況，其雖有兩個 8×8
零區塊，但卻無法利用非方形零區塊去省
略移動估測的動作，故我們將 C8_5 與
C8_6 以及 C8_7 歸為一類，這三種情況可
以利用 8×8 區塊分割作中止移動估測的動
作，所以當分佈情況為 C8_5、C8_6 以及
C8_7 時，我們無法利用 16×8 或 8×16 的區
塊分割，且 P8×8 區塊模式機率升高，所
以我們將畫面品質換取編碼時間，即是在
此三種情況發生，則作 SKIP、m1、P8x8
區塊模式。 
然而針對 C8_5、C8_6 以及 C8_7 三種
情況，我們會詳細細分到 P8×8 區塊模式，
也就是 8×8 非零區塊之區塊繼續往小區塊
切割探討，如上述 8×8 零區塊分佈區塊模
式決策所述，P8×8 同理則是小區塊再分
析，且利用區塊切割的零區塊中止移動估
測的運算，最後 P8×8 所有 4×4 零區塊分
佈所作的區塊模式決策，同【圖 7】括號
中所示。 
當 8×8 零區塊分佈為 C8_5、C8_6 以
及 C8_7 情況時，其中對於 8×8 區塊為零
區塊的部分，也就如【圖 7】中 4 個 4×4
零區塊集中在一 8×8 區塊內，所以系統編
碼到那一 8×8 零區塊時，其區塊模式只需
要做到 8×8 即可，且省略移動估測之動
作；然而系統編碼到 8×8 非零區塊時，則
要參照【圖 7】來決策 P8×8 區塊模式。 
雖然 8×8 區塊非 8×8 零區塊，但其中
可能包含有 4 個 4×4 零區塊，也就如 C4_1
的情況，只做到 m4。接著若是 3 個 4×4 零
區塊也就是 C4_2 的情況時，同 C8_2 的決
策機制，我們藉由比較 8×4 與 4×8 區塊切
割的絕對誤差和數值決策 P8×8 區塊模
式，所以當 C4_2 的情況發生時，則作 m4、
m5 或 m6。接下來考慮到 4×4 零區塊個數
為 2 時，我們為了降低運算複雜度，所以
與 MB level 情況相同，我們參照【圖 7】
其利用 4×4 零區塊分佈的情況決策區塊模
式，使鄰近 4×4 零區塊可形成非方形零區
塊，進而跳過移動估測的運算，C4_3 的情
況我們作 m4 和 m5，C4_4 的情況則作 m4
與 m6。 
 
【圖 8】8×8 level 模式決策 
 
我們同樣將 4×4 零區塊對角線分佈的
情況歸類與 4×4 零區塊個數為 0 或 1 時相
 12 
 
【圖 12】為 Stefan.CIF 在量化參數為
28 下，相對於低頻交流值之和巨區塊型態
為 I4MB 及 I16MB 的累積分佈函數
(CDF)，而由圖中就可以看的出來，由低
頻交流值之和可以很明確的分類出 I4MB
與 I16MB 的差別。 
 
【圖 12】相對於低頻交流值之和巨區塊型
態的累積分佈函數 
selection
I16MB / I4MB
SATD 2 cost RD
Compute
DCT of lowAC
decision Mode
stage1st 
selection mode Prediction
stage2st 
mode
optimal-RDO
data
Input
 
【圖 13】Improved SATD-based intra mode 
decision 
最後我們利用低頻交流值之和(AClow)
門檻值來對巨區塊型態進行判斷，其門檻
計算方法如(式 8)，其中μI16MB及μI4MB 分
別代表處理到目前巨區塊之前決策為
I16MB 及 I4MB 巨區塊型態的所有低頻交
流值之和的總平均值，即是隨巨區塊決策
來調整之動態平均值。利用此門檻值與低
頻交流值之和做比較，若其值小於門檻值
則選擇 I16MB 巨塊型態，並進行 I16MB
的模式預測；反之則選擇 I4MB 巨區塊型
態，並進行 I4MB 的模式預測，演算法流
程如【圖 13】。 
 
 
12
40
16416
6
1
,



QP
III
efactor
factorTH 
 (式 8) 
 
3、選擇性多幅參考畫面移動估測演算法
(selective multiple reference frame 
motion estimation, SMRFME)： 
首先介紹多幅參考畫面間的相關性對於碼
率失真函數的關係，Xt-i表示參考第 i 張畫
面，假設變數 X 並且為高斯分布的隨機變
數，且期望值為零，我們可以得到下面的
結果。 
22log
2
1
log
πe
)dxp(x)p(x)H(X tttt

 
  (式 9) 
22
1111
12log
2
1
|log
)-ρπe(
dx)dxxp(x),xp(x-)|XH(X tttttttt

    
 (式 10) 
1)n-(tt,...,ji,for   )]x,Cov(x[C  ,  
det
det
2log
2
1
log
nxnjin
1
111
21





 
|
C
Cπe|
......dxdx)dx......x|xp(x)......x,xp(x......-
)......X,X|XH(X
n
n
ntttntttnttt
ntttt
 (式 11) 
熵函數表示消息源的平均消息含量，由(式
9)、(式 10)和(式 11)，我們分別計算不同
條件的熵，發現隨著參考畫面越多我們得
到的平均消息含量越低，可以使用較少的
位元來編碼，因為參考越多畫面，取得的
資訊也越多。相對的，失真也應該要越來
越低，另外我們也推導出碼率失真函數與
參考畫面的關係，如(式 12)、(式 13) 和(式
14)。 
D
(D)R
tx
2
log
2
1   (式 12) 
 14 
 
倍，當做一個臨界值可以有效的分辨出是
否需要執行 t-2~t-n 張參考畫面。【圖 16】
是不同β得到的正確率統計,發現β令為
1.2 時，已經可以將正確率提高到九成以上,
甚至有些 sequence可以達到接近百的正確
率。 
若是第一張參考畫面執行完畢後發現
需要執行剩餘的參考畫面，此時我們利用
越遠距離參考畫面的相關性會越來越低的
特性，來做進一步的加速。 
1)?-j-cost(tmotion  j)-cost(tmotion   (式 15) 
我們利用(式 15)的比較，若是如我們
所想,後面的參考畫面其相關性較低，相對
的其 motion cost 也會較高，因此我們觀察
前參考畫面motion cost是否比後參考畫面
motion cost 還要小。若成立，則表示後面
的參考畫面已經沒有參考的價值了。【表
4】為使用此方法的正確率，我們可以發現
此方法正確率大致都蠻高的，不過有些測
試影像正確率較低，其主要是移動複雜且
快速的測試影像。其原因是我們只單純比
較兩張參考畫面的 motion cost，但是移動
快速複雜的測試影像其motion cost變化容
易上下震盪劇烈，導致此畫面不容易符合
我們所設想的 stationary 的狀況,因此我們
還需要一些偵測 non-stationary 的方法讓
此演算法趨於完整 
因為周圍區塊與目前預區塊之區塊緊
緊相鄰，相關性較高，如【圖 17】，所以
我們藉由周圍區塊與目前區塊的資訊去判
斷該區塊是否為 stationary 
從【表 5】我們可以觀察出，若是三
區塊最佳參考畫面都是同一張，代表此參
考畫面相對穩定，不至於變動複雜，因為
變動複雜較容易出現 motion cost 曲線震
盪，導致最佳參考畫面值亂跳，周圍三區
塊的最佳參考畫面值就很容易出現不同的
情況。由【表 5】亦可得知在三者相同的
情況下，比較 motion cost 的判斷方法其正
確性很高，而三者皆不同的情況下，正確
率相對較低，且此情況理論上來說畫面變
動較大，針對此情況不採用單純比較
motion cost 的方法加速，而兩者相同的情
況較為特殊，因為判斷穩定與否皆很有可
能，因此針對此情形需要深入討論。 
【表 4】Hit-rate 
 
 
【圖 17】周圍區塊與預編碼區塊之示意圖 
【表 5】鄰近三區塊的最佳參考畫面重複
性之正確率 
 
在兩者相同的情形下，需要再去確認
周 圍 區 塊 的 移 動 向 量 (motion vector, 
MV)，我們取出周圍區塊的移動向量與目
前區塊移動向量來做變異數(variance)，如
QP=28 Sequence HIT-rate
claire 98.45
coastguard 95.66
trevor 97.61
foreman 91.59
football 88.59
waterfall 91.96
news 98.01
bus 91.38
dancer 96.09
stefan 88.62
QCIF
CIF
 
三者皆同(%) 唯二相同(%) 全部不同(%)
claire 98.88% 95.55% 91.16%
coastguard 97.51% 91.98% 86.34%
trevor 98.06% 96.38% 94.22%
foreman 93.67% 89.66% 85.59%
football 91.14% 87.30% 84.99%
waterfall 94.60% 90.79% 87.08%
news 98.71% 94.39% 90.34%
bus 94.67% 89.01% 84.97%
dancer 97.33% 94.26% 90.11%
stefan 93.61% 85.52% 80.21%
95.82% 91.48% 87.50%
Sequence
Hit-rate
CIF
Avg.
QCIF
 
鄰近區塊
B
目前區塊鄰近區塊A
鄰近區塊
C
目前畫面
 16 
 
兩張相鄰畫面，由此例子可以看出兩張畫
面其區各區塊最佳參考畫面值的重複性很
高，目前畫面的編碼區塊的最佳參考畫面
值有很大的機會會包含在第一張參考畫面
相對應區塊位置的九宮格範圍內，根據此
論點，我們希望可以根據第一張參考畫面
相對應區塊的九宮格區域其內的最佳參考
畫面資訊來達到目前畫面區塊參考畫面的
減少。 
 1 1 1 3 1 1 1 2 1 2 2 1 1 1 1 1 1 1 3 1 2 2
1 2 1 1 1 2 1 1 3 5 3 1 1 1 2 1 1 1 1 5 5 1
1 1 1 1 1 1 5 1 2 4 4 1 1 1 1 1 1 1 1 2 5 3
1 1 1 1 1 1 1 1 2 5 2 1 2 2 1 1 1 1 1 2 2 2
1 1 4 1 1 1 1 1 2 2 3 1 1 1 1 1 1 1 1 3 1 2
1 1 3 1 1 1 1 1 2 2 2 1 1 1 1 1 1 1 1 1 2 1
1 1 3 3 1 1 1 1 1 1 2 1 2 4 1 1 1 2 1 1 1 1
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1
1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 2 1 1 1 1 1
Reference frame (t-j-1) Current frame (t-j)  
【圖 20】Foreman.QCIF 兩相鄰畫面的最
佳參考畫面資訊 
 
A B C
D E' F E
G H I
Reference frame (t-j-1) Current frame (t-j)  
【圖 21】最佳參考畫面資訊演算法示意圖 
此演算法的示意圖如【圖 21】，當目
前畫面的區塊在做參考畫面搜尋時，我們
先將第一張參考畫面其相對應位置區塊的
九宮格範圍內的各區塊最佳參考畫面資訊
取出，並在最多只搜尋到這些資訊裡面的
最大參考畫面，如(式 16)。其流程圖如【圖
22】。 
}idx ref,...,idx ref,idx max{ref  
framesearch  Maximum
IA B
 (式 16) 
SMRFME 利用理論推導証明來探討
畫面的穩定特性，並以參考畫面的消費成
本(motion cost)比較來判斷目前區塊是否
需要繼續參考下一張畫面，此外參考第一
張畫面結束時便已經有機制判定是否需要
繼續參考其它畫面。另外更提出了兩個提
前結束參考畫面移動估測的方法，並將其
加入 SMRFME 中，使多幅參考畫面移動
估測更有效率。 
 
【圖 22】Best ref info.的流程圖 
 
 實驗結果與討論 
1、進階零區塊模式決策之研究與探討
(Advanced ZBD)： 
我們將 Advanced ZBD 實現於 JM 軟體並
與原始架構下 (Orig.)、ZBD4×4 以及 ZBD8×
8/4×4 演算法比較。我們將量化參數設定為
12、16、20、24、28、32、36 及 40 共八
個，從位元率失真曲線及編碼時間比較
圖，來比較三種演算法在不同量化參數下
的效能表現，如【圖 23】、【圖 24】。 
由位元率失真曲線圖中可以看到我們
所提出之進階零區塊模式決策演算法，不
論在慢、中、快速運動特性的視訊樣本，
其位元率失真曲線都相當貼近 JM 軟體原
始架構之模擬的結果，在影像品質上有不
Start
Encode one MB
Terminate ME for other reference frames
End
Loop of reference frame
N
ref < K
Y
Find the Max searched 
frame K
 18 
 
25
27
29
31
33
35
37
39
41
43
45
47
0 500 1000 1500 2000 2500 3000 3500
Bitrate(kbps)
PS
N
R(
dB
)
Orig. Proposed AFMFSA
 
(a) RD curve 
0
20000
40000
60000
80000
100000
120000
140000
160000
180000
0 500 1000 1500 2000 2500 3000 3500
Bitrate(kbps)
Ti
m
e(
m
s)
Orig. Proposed AFMFSA
 
(b) Time saving 
【圖 26】效能比較, football.QCIF 
 
由於測試影像過多，在這裡我們列舉兩個
測試視訊，比較其位元失真曲線以及位元
速率與時間的對應曲線，並和[18]論文提
出的方法 AFMFSA 做時間與效能的比
較，如【圖 26】、【圖 27】。 
基本上我們所提出的演算法在各量化
參數下時間都較 AFMFSA 快，最主要是
AFMFSA 演算法有些參數設定為定值，容
易因為畫面特性改變而影響演算法的加速
效果，且因為 SMRFME 演算法的每張參
考畫面都有判斷是否有必要繼續參考之後
畫面的機制，且因為有很高的正確性，因
此效能不會與參考所有畫面的效能差異太
大。 
一般來說連續畫面都符合全域穩態的
概念，隨著與目前畫面越來越遠，參考畫
面的參考價值也越來越低，在很多情況下
參考太多的參考畫面往往無形中做了很多
非必要的複雜運算，SMRFME 演算法可以
有效的降低編碼時的運算複雜度，並有效
偵測畫面是否符合全域穩態狀況，經過統
計發現可以將平均參考畫面降低為 1.37
張，對不同測試視訊甚至可以到達降低八
成運算時間的效果，同時保持其畫面品質，  
30
32
34
36
38
40
42
44
46
48
50
0 20 40 60 80 100 120 140 160 180 200
Bitrate(kbps)
PS
N
R
(d
B
)
Orig. Proposed AFMFSA
 
(a) RD curve 
0
10000
20000
30000
40000
50000
60000
70000
0 50 100 150 200 250
Bitrate(kbps)
Ti
m
e(
m
s)
Orig. Proposed AFMFSA
 
(b) Time saving 
【圖 27】效能比較, claire.QCIF 
 
八、結論 
無論在畫面內模式決策、是畫面間模式決
策或多幅參考畫面的移動估計，我們皆提
出全新的演算法，進階型零區塊畫面間模
式決策(Advanced ZBD)、增強型畫面內預
測 演 算 法 (Improved SATD-based Intra 
mode decision)以及選擇性多幅參考畫面
 20 
 
[14] Y. M. Lee and Y. Lin, “An efficient 
mode decision for low bit rate coding in 
H.264/AVC,” in Proc. IASTED IMSA, 
Chamonix, France, March 2007, pp. 
154-159. 
[15] Z. Zhou, M. T. Sun, and Y. F. Hsu, 
“Fast variable block-size motion 
estimation based on merge and split 
procedures for H.264/MPEG-4 AVC,” in 
Proc. IEEE ISCAS, vol. 3, 2004, pp. 
725-728. 
[16] K. C. Hou, M. J. Chen, and C. T. Hsu, 
“Fast motion estimation by motion 
vector merging procedure for H.264,” in 
Proc. IEEE ICME, Amsterdam, 
Netherlands, June 2005. 
[17] B. La, M. Eom and Y. Choe, “Fast 
mode decision for intra prediction in 
H.264/AVC encoder,” in Proc. IEEE 
ICIP, Sept. 2007, pp. V-321-V-324. 
[18] L. Shen, Z. Liu, Z. Zhang and G. Wang, 
“An adaptive and fast multiframe 
selection algorithm for H.264 video 
coding,” IEEE Signal Processing Letters, 
Vol. 14, pp. 836-839, Nov. 2007. 
[19] Y. M. Lee, Y. T. Sun and Y. Lin, 
"SATD-based intra mode decision for 
H.264/AVC video coding," to appear in 
IEEE Trans. Circuits Syst. Video 
Technol., 2010. 
[20] Y. M. Lee and Y. Lin, "Zero-block 
mode decision algorithm for 
H.264/AVC," IEEE Trans. Image 
Process., vol. 18, no. 3, pp. 524-533, 
Mar. 2009. 
[21] Y. M. Lee and Y. Lin, "An Improved 
Zero-Block Mode Decision Algorithm 
for H.264/AVC," in Proc. IEEE ICIP, 
vol. 5, pp. V-293-V-296, Oct. 2007. 
[22] Y. T. Sun and Y. Lin, "SATD-based 
intra mode decision for H.264/AVC 
video coding," in Proc. IEEE  ICME, 
pp. 61-64, Apr. 2008. 
[23] Y. M. Lee, J. D. Wu and Y. Lin, “An 
improved SATD-based intra mode 
decision algorithm for H.264/AVC,” in 
Proc. IEEE ICASSP, pp. 1029-1032, Apr. 
2009. 
[24] Y. M. Lee, W. C. Hsu and Y. Lin, “An 
adaptive multiple reference frame 
motion estimation for H.264 video 
coding,” to be presented in PCM, 
Bangkok, Thailand, Dec 2009. 
[25] Y. M. Lee, Y. F. Wang, J. R. Wang and 
Y. Lin, “An adaptive and efficient 
selective multiple reference frames 
motion estimation for H.264 video 
coding,” in. Proc. PSIVT, LNCS, vol. 
5414, pp. 509-518. Springer, Heidelberg, 
Tokyo, Japan, Jan. 2009. 
