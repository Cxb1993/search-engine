such as sensor nodes and RFID tags, 
leave the decrypted data vulnerable to 
disclosure. In such an exposed 
environment, it is desirable to develop a 
new method that performs secret search 
directly on the ciphertext without 
decryption, thus, preserving secrecy and 
avoiding decryption delay. 
A RFID tag is a small, low-cost 
device with limited data storage space. 
Each tag is assigned an identification (ID) 
to identify itself. Therefore, tagging 
specific targets with RFID tags allows for 
individualization and recognition of each 
target by the attached ID. Through the 
wireless interface, each tag can report 
data when queried over radio by a RFID 
reader. The RFID reader can execute read, 
write, and overwrite commands on each 
tag over the wireless interface. However, 
RFID readers can only recognize tags in 
close proximity; a data tag that is out of 
range cannot be read by a reader. This 
distance limitation severely restricts 
RFID deployment. Despite equipping 
readers and tags with longer-range 
wireless communication capability, RFID 
readers still have difficulty tracking or 
monitoring tags at a distance. To solve 
this distance limitation problem, a 
wireless sensor network can act as a 
bridge between the tags and the readers 
when tracking or monitoring remote 
targets. 
A wireless sensor network 
[5][10][17] consists of groups of sensor 
nodes connected by wireless links that 
perform sensing tasks, such as detecting 
changes in temperature, pressure, etc. 
These sensors are employed for 
specialized tasks like surveillance and 
security, environmental monitoring, 
location tracking, warfare, and health 
care.  
Sensor nodes can communicate with 
RFID tags through the wireless interface. 
Because sensor nodes are cheap, they can 
be widely deployed to monitor every 
target, allowing readers to find targets at 
a distance. Although the use of sensor 
nodes solves the distance limitation 
problem, it introduces additional security 
challenges. 
In the aforementioned environment, 
the collaboration of sensor nodes and 
tags can form a dynamic, distributed 
database, where each sensor node 
contains a tiny database that tracks the 
data stored in RFIDs. Since sensor nodes 
are widely deployed, they form a group 
of distinctive databases. Simply 
encrypting the database ensures data 
security; however, it raises the issue of 
searching secrets. 
For secret searching in wireless 
sensor networks, the following 
requirements are considered important: 
1) Secrecy: Storing data in an 
encrypted form helps retain its 
confidentiality. Because sensors are 
vulnerable, computation-limited, 
and low cost devices, allowing 
sensors to decrypt data to perform a 
search results in unnecessary risk of 
disclosure. Thus, sensors must 
execute a secret search directly on 
2 
remain private. Since readers, tags, and 
sensor nodes send messages through a 
wireless medium, attackers can easily 
listen in on their communication and 
extract secret information. 
An intuitive way to protect private 
data is encryption. However, tags and 
sensor nodes have severely limited 
storage and computation capability; 
consequently, traditional cryptographic 
algorithms are not well-suited for these 
devices. As a result, we must redesign 
security mechanisms to support RFID 
tags and sensor nodes. 
A new problem arise from 
encrypting data: RFID readers cannot 
easily perform queries on secured data 
[18]. Many researchers have investigated 
secret search over encrypted data in an 
untrusted file server or external memory 
environment [6][10][13][15][16]. Dawn 
et al. [2] provide a method for secret 
searching untrusted servers in a way that 
prevents disclosure of data when only 
given the ciphertext. Unfortunately, their 
scheme requires complex encryption 
operations unavailable to both tags and 
sensor nodes. Another solution is to 
support searching over encrypted data by 
using multi-party computation and 
oblivious functions [7][8][9][19][22][23].  
However, this solution requires high 
computation overhead and therefore not 
applicable in a tag or sensor system. 
Our research contribution is 
threefold. First, we propose an 
architecture consisting of RFIDs and 
RFID-aware sensor networks (ARIES). 
This architecture extends RFID’s 
capabilities through a wireless sensor 
network by utilizing sensor nodes to 
locate targets at a distance. Second, we 
design a mutual authentication protocol 
(AMULET) that is feasible for RFIDs and 
sensor nodes. Moreover, AMULET 
reduces the cost of re-authentication. 
Third, we present a secret search protocol 
(ASSART) that enables readers to perform 
searches over encrypted data, allowing 
data to remain encrypted during 
transmission or at vulnerable locations. 
By only using one-way hash functions, 
pseudo random number generation 
functions, and XOR operations, ASSART 
accommodates the resource limitations of 
both tags and sensors. 
The remainder of this paper is 
organized as follows. Section 2 
introduces our proposed ARIES 
architecture of RFID and sensor 
networks, while section 3 presents our 
AMULET mutual authentication protocol 
for readers and tags. Next, we develop 
our ASSART secret search protocol to 
query encrypted data in section 4. Finally, 
section 5 provides proof of our proposed 
schemes’ security, and section 6 
concludes our work. 
 
2. ARIES 
Motivated by the distance limitation 
problem of RFID readers, we propose an 
ARchitecture of RFIDs and RFID-aware 
sEnsor networkS (ARIES). Sensor nodes 
can bridge the gap between readers and 
tags by transmitting commands from 
4 
 
Figure 1: ARIES architecture. 
In our architecture, readers request 
data from tags via sensor nodes. Figure 
1 depicts the RFID readers, RFID tags, 
and RFID-aware wireless sensor nodes 
that make up the ARIES architecture. 
The sensor node collects data from tags 
in its vicinity and stores it in a local tiny 
database, where each attribute represents 
characteristics of the target. Table 1 
represents a distributed tiny database 
located on one sensor node. 
1Attr 2Attr NAttr 
)1(AAttr
)1(AAttr
)2(AAttr
)2(AAttr
)(AnAttr
)(AnAttr
)1(BAttr )2(BAttr )(BnAttr
)1(KAttr )2(KAttr )(KnAttr
ASensor
ASensor
BSensor
KSensor
IDSensor IDTarget  
1ID
2ID
2ID
7ID
 
Table 1: Distributed tiny database. 
3. AMULET 
Authentication is the first step in 
building a trust relationship between 
readers and tags. Since readers and tags 
rely on wireless communication, 
attackers may eavesdrop on transmitted 
data and extract passwords. Previous 
research characterizes RFID 
communication as asymmetrical in 
signal strength. That is, attackers have 
an easier time listening in on signals 
from reader to tag than on data from tag 
to reader. Additionally, attackers can 
easily purchase readers and tags to 
6 
),,(),(, 2123 TRRfIDTTTAck s⊕=−= β
),,(,, 22122 TRRfIDRT s⊕=α
),(,,, 1111 TRfTRHello s),( IDS
),,,( 22 TRIDS
1Target 
Update
Database
DataBase reader-RFID
Databasein  stored Data
22 ,TR
RFIDin  stored Data
 
Figure 2: AMULET architecture. 
AMULET can reduce the 
re-authentication cost when a reader 
wishes to send commands to an 
authenticated tag. The reader need not 
re-authenticate the tag because the 
database stores the tag’s information 
. As depicted in Figure 3, 
the tag can verify future commands by 
the following two steps: 
),,,( 22 TRIDs
1. If a new reader queries the database 
and obtains  instead of 
, then it recognizes that 
another reader already authenticated 
the tag with this ID. As a result, it 
chooses a random number 
, checks for the current 
time , computes the difference in 
time 
),,,( 22 TRIDs
),( IDs
nR }1,0{1 ∈′
3T
23 TTT −= , and calculates 
),,,( 21 TRRdCmfID s ′′⊕=′β .  The 
reader then sends its command 
dCm ′ , along with , 1R′ T , and β ′ , 
to the tag. 
2. Upon receipt of the  packet, 
the tag verifies that 
dCm ′
),,,( 21 TRRdCmfID s ′′⊕′= β  before 
executing dCm ′ . Otherwise, the tag 
drops the command. 
),,,( 22 TRIDS
),,,(,,, 211 TRRdCmfIDRTdCm s ′′⊕=′′′ β
DataBase reader-RFID 22 ,TR
1Target 
 
Figure 3: Commands verification without re-authentication process. 
 
As previously mentioned, it is 
harder to eavesdrop on the channel from 
tag to reader than from the reader to tag; 
accordingly, AMULET provides security 
against passive eavesdropping on the 
reader-to-tag link. A common attack to 
authentication protocols is 
8 
same. This will keep attributes private. 
Figure 5 illustrates ASSART’s 
operations. 
 
 
Figure 5: ASSART operations. 
Authorized readers can 
inversely-transform  back to 
by computing 
. 
KrAtt ′
AttrK
)),(,,(,
)(
22 RsHRNfN
EKHKrAttAttrK
K
s
i
K ⊕⊕′=
Because authorized readers can retrieve 
 from the database, they can 
easily calculate  without 
exposing sensitive and private data 
during wireless transmission. 
),( 2RS
AttrK
A major contribution of ASSART is 
that it ensures the privacy of the 
remaining attributes in the event that 
some attributes are compromised. Since 
 varies by K, 
 will remain secure even when 
 is compromised. 
)),(,,( 22 RsHRNf
K
s
))),(,,(,(
)()1()1(
2
1
2
1
RsHRNfN
EKHKAttrKrAtt
K
s
i
K
+
+ ⊕⊕+=+′
)),(,,( 22 RsHRNf
K
s
To search for an attribute , 
the RFID-reader broadcasts an 
encrypted query  to 
all sensor nodes. Next, each sensor node 
calculates  by 
 with its 
own 
AttrK
)( i
K EKHAttrK ⊕
KrAtt ′
)),(,,(,
)(
22 RsHRNfN
EKHAttrKKrAtt
K
s
i
K ⊕⊕=′
s , , and every value of 2R K . 
The sensor node must calculate an 
KrAtt ′  for all  because it does not 
know the value of 
sK '
K . If any sensor 
node finds a match, it returns KrAtt ′  
and K  to the RFID-reader. Since data 
is encrypted, privacy is maintained 
during the transmission. 
 
10 
),,,( 22 TRIDS
),(,, 1111 TRfTR s ),(,, 1111 TRfTR s
),,(,, 22122 TRRfIDRT s⊕=α),,(,, 22122 TRRfIDRT s⊕=′ α
),,(),,( 221221 TRRfTRRf ss ≠′
22 ,TR
1Target DataBase reader-RFID
Attacker
 
Figure 7: Type-2 man-in-the-middle attack. 
 
As depicted in Figure 7, a type-2 
attacker eavesdrops on , produces a 
false value , and transmits  and 
2R
2R′ 2R
α  back to the reader. Because 22 RR ′≠ , 
the reader will find that 
),,(),,( 221221 TRRfTRRf ss ′≠ , thus 
thwarting type-2 man-in-the-middle 
attacks. 
22 ,TR),,,( 22 TRIDS
),(,, 1111 TRfTR s ),(,, 1111 TRfTR s′
),,(,, 22122 TRRfIDRT s⊕=α),,(,, 22122 TRRfIDRT s⊕=′ α
),,(),,( 221221 TRRfTRRf ss ≠′
11 RR ≠′
IDDI ≠′
1Target DataBase reader-RFID
Attacker
s 
Figure 8: Type-3 man-in-the-middle attack. 
 
In Figure 8, a type-3 attacker 
generates false 1R′ , , and 2R′ α ′  back 
to the reader and the tag separately. 
Since s  remains secret, the reader will 
observe that 
 and ),,(),,( 221221 TRRfTRRf ss ′≠
DIID ′≠ , causing type-3 
man-in-the-middle attacks to fail. 
5.2 Security of ASSART 
We provide a proof of ASSART’s 
security strength in terms of the secrecy 
of its attributes. By establishing the 
number of resources required to 
compromise a system, we can evaluate 
its security strength. Theorem 1 states 
that an attacker must have knowledge of 
both s  and  to compromise , 
where 
2R KrAtt ′
))),(,,(,(
)(
22 RsHRNfN
EKHAttrKKrAtt
K
s
i
K ⊕⊕=′
12 
attributes after transformation. 
For N = 2, B is 2-breakable by theorem 
2. 
Suppose when N=P, B is P-breakable. 
We want to prove B is P-breakable when 
N=P+1. Let 
)1,,,2,1(1 += AttrNAttrNAttrAttrB L . 
From theorem 2, we know that every 
pair of attributes is distinguishable. 
Therefore, 1+AttrN  and  are 
distinguishable for  by 
verifying  and 
 
respectively. Since all N+1 attributes are 
distinguishable, we have shown that an 
instance of a target is N-breakable. 
AttrM
NM L,2,1=
),( 2
1 RsH N+
),(,),,(),,( 22
2
2
1 RsHRsHRsH NL
If the new attribute  is 
inserted between  to , 
 can be verified by both its 
previous attribute  and its 
following attribute  through 
equations 5 and 6. 
AttrK
1Attr AttrN
AttrK
)1( −KAttr
1+AttrK
),()),(( 22
1 RsHRsHH KK =−  (Equation 5) 
6) 
[3] David Molnar and D vid Wagner, 
Privacy and Security in Library 
RFID Issues, Practices, and 
Architectures, In Proceedings of 
ACM Conference on Computer and 
Communication Security, 
pp.210-219, 2004. 
),()),(( 2
1
2 RsHRsHH
KK +=  (Equation 
If both equation 5 and 6 are satisfied, the 
added attribute  is valid. 
Otherwise,  is invalid and should 
be discarded. 
AttrK
AttrK
 
6. Conclusion 
In this paper, we present the ARIES 
architecture to solve the distance 
limitation problem in RFID applications 
by utilizing RFID-aware sensor nodes to 
monitor distant targets. We also propose 
an authentication protocol, AMULET, 
which mutually authenticates readers 
and tags. AMULET can resist 
man-in-the-middle attacks and reduce 
re-authentication overhead. Finally we 
devise a search protocol, ASSART, to 
perform queries on encrypted data, 
which prevents the disclosure of 
information during the transmission or 
search process. Furthermore, ASSART 
uses a key chain to improve data security. 
Even if some attributes are compromised, 
the rest of attributes remain private. 
 
7. References 
[1] B. Chor, O. Goldreich, E. 
Kushilevitz, and M. Sudan, Private 
Information Retrieval, In 
Proceedings Journal of the ACM, 
pp.965-981, 1998. 
[2] D. Song, D. Wagner, and A. Perrig, 
Practical Techniques for Searches 
on Encrypted Data., In Proceedings 
of IEEE Symposium on Security 
and Privacy, pp.44-55, 2000. 
[4] E. Kusilevitz, and R. Ostrovsky, 
Replication Is Not Needed: Single 
Database, Computationally-Private 
Information Retrieval, In 
Proceedings of the 38th Annual 
Symposium on Foundations of 
Computer Science, pp.364-373, 
1997. 
[5] Estrin, D., Govindan, R., 
14 
