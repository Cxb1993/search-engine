表 C012-1                                                                           共 16 頁  第 2 頁 
國科會九十四年度專題研究計畫成果報告 
 
 
探勘"分配額頻繁項目集合"及"利潤頻繁項目集合"之快速演算法研究(I) 
Fast Algorithms for Mining Share Frequent Itemsets and Profit Frequent Itemsets 
(I) 
 
計畫編號：NSC 94-2213-E-126 -013 
執行期限：94年08月01日 至 95年07月31日 
主持人：葉介山 jsyeh@pu.edu.tw 靜宜大學 資訊管理學系 
計畫參與人員：許柏強、張智揚 靜宜大學 資訊管理學系 
 
 
【中文摘要】 
關鍵詞： 資料探勘、關聯法則、頻繁項目集合、分配額頻繁項目集合、利潤頻繁項目集合 
 
關聯法則(Association Rule)為資料探勘(Data Mining)研究中重要的一個領域，關聯法則是依據所給
定之支持度(support)和信賴度(confidence)，找出在於資料庫中屬性之間有趣的關聯。項目集合
(itemset)的支持度是一個典型的測量尺度，用以描述項目集合在交易資料庫中之重要性，既其發生
機率的多寡。項目集合稱為頻繁(frequent)，如果其支持度大於或等於給定之門檻值(minimum 
support)。而關聯法則探勘問題可被轉換成頻繁項目集合探勘(Frequent Itemset Mining)的問題。 
 
然而，支持度只考慮項目集合出現於交易紀錄中的比率，而每一個項目在交易中確切地被購買的
數量卻沒有被納入考慮和分析。所以，支持度計數方法並不能測量到項目集合所產生的利潤或所
需的費用。1997 年，Carter 等提出「分配額－信賴度架構」(share-confidence framework)，並定義
了交易資料庫中項目集合的分配額(share)，既為所有包含該項目集合之交易紀錄中項目數量的總
和。Carter 等亦提出以分配額及信賴度為基礎的關聯法則。2003 年，Barber 和 Hamilton 提出了 ZP 
(zero pruning)和 ZSP (zero subset pruning)兩種分配額頻繁項目集合探勘之演算法。但是，此兩種方
法僅能在搜尋過程中刪除 share measure 值為零的項目集合，未能有效的提升探勘之效能。2004
年，Li、Yeh 和 Chang 改進了 Barber 的方法，且提出了另一個快速的 FSM 演算法。 
 
本計劃延續以上之研究，我們提出 EFSM、SuFSM 及 ShFSM 三種更有效率之分配額頻繁(share 
frequent)項目集合探勘演算法。我們也生成數個測試資料庫，並藉以驗證演算法之效能。此外，我
們將探勘合作廠商所提供之交易資料庫，藉此以獲得對廠商有意義且實用的法則。 
 
本計劃之部分研究成果[LYC05b] 已發表於 2005 九月份「Intl. Conf. Natural Computation; Fuzzy Sys. 
& Knowledge Discovery (ICNC&FSKD2005),」會議中，並收錄於 Lecture Notes in Artificial 
Intelligence 3614 - Proc. 2005 Intl. Conf. Natural Computation; Fuzzy Sys. & Knowledge Discovery 
(ICNC&FSKD2005), L. Wang and Y. Jin Eds, Springer-Verlag Berlin Heidelberg, 2005。 
以下，我們介紹於本計劃中所採用之符號、定義及定理。 
 
I = {i1, i2, …, im} 為項目(item)的集合。X 為I的子集合(X⊆ I) 稱為項目集合(itemset）。 
DB = {T1, T2, ..., Tn}為交易資料庫(transaction database)。任何交易(transaction) T∈DB，T為I的子集
合(T⊆ I)。任何交易都有唯一的ID (unique identifier)，稱為 TID。 關聯法則(association rule)的表
示如下：  
X Y 當 X I, Y I 且 X⇒ ⊆ ⊆ Ι Y=φ  
(例如： I={A,B,C,D,E}, X={A,E}, Y={B,D}。) 
關聯法則 X Y 有兩個重要的特徵值：支持度(support)和信賴度 (confidence)。 項目集合 X 的支
持度記為 support(X)， 此為交易資料庫中包含 X 之交易的百分比。如果項目集合 XΥ Y 在交易資
料庫中出現 s%，則稱 X⇒Y 的支持度為 s%，即機率 P(X
⇒
ΥY)。 X⇒Y 在交易資料庫中的信賴度
為 c%，如果包含 X 之交易中亦包含 Y 的百分比為 c%，即為條件機率 P(Y|X)。明顯地，
confidence(X Y) = support(X Y)/support(X)。關聯法則探勘的問題既是去挖掘支持度和信賴度滿
足給定門檻值（minimum support 或 minSup) 和 （minimum confidence 或 minConf)的所有法則。
項目集合稱為頻繁項目集合（frequent itemset），如果其支持度大於或等於給定的 minSup。 
⇒ Υ
 
「分配額－信賴度架構」(Share-Confidence Framework) 
在 Hilderman 等所提出的「分配額－信賴度架構」(Share-Confidence Framework)下，另一個項目集
合的特徵值稱為分配額（share）， 分配額既是交易中項目集合所有項目個數總和。 
交易測量值（transaction measure value），記為tmv(ip, Tq)，乃是項目（item）ip 出現於交易（transaction）
Tq的數量。如表格一中tmv(F, T02) = 4。此數字之屬性類型可能為整數類型，譬如某一交易項目被
購買的數量；或是實數類型，譬如利潤率、單位成本或共計收支。 
 
TID Transaction Count 
T01 {A, B, C, D, E, G, H} {1, 1, 1, 1, 1, 1, 1}
T02 {F, H} {4, 3} 
T03 {B, C, D} {4, 3, 3} 
T04 {C, E} {4, 1} 
T05 {B, D} {3, 2} 
T06 {B, C, D} {3, 2, 1} 
T07 {B, C, D, E} {3, 4, 1, 2} 
T08 {A, F, G} {4, 1, 1} 
 
表格一 包含項目計數之交易資料庫 
表 C012-1                                                                           共 16 頁  第 4 頁 
SH-frequent itemset BC BD BCD
lmv(X) 21 22 27 
SH(X) 37.5% 39.3% 48.2%
表格三 所有SH-frequent 之項目集合 
 
本人在此一研究主題方面，於”A Fast Algorithm for Mining Share Frequent Itemsets”文章中提出一個
fast share measure algorithm (FSM) 藉以有效地搜尋所有的分配額頻繁的項目集(share frequent 
itemset)。此結果[LYC05]發表於「The Seventh Asia Pacific Web Conference 2005」，並收錄於 Lecture 
Notes in Computer Science -7th Asia Pacific Web Conference-APWeb 2005, Springer Verlag, Germany, 
2005。茲將此結果簡述如下： 
 
定義： ML 為資料庫裡所有交易中項目個數之最大值。 換言之，ML = max(|Tq| | Tq∈DB)。 
定義： MV 為資料庫中所有項目之最大交易測量值(maximum transaction measure value) 。 換言
之，MV = max(tmv(ip, Tq) | ip∈Tq, and Tq∈DB)。 
我們獲得了以下幾個重要的引理及定理。 
引理： X, X’ 及 X’’ 為項目集合，且 X  X’ ⊆  X’＇，則 ⊆
(1) lmv(X, X’’)  lmv(X’, X’’)。特別的，當 X’ = X’’, lmv(X, X’) ≤ ≤  lmv(X’)。 
(2) lmv(X, X’)  lmv(X, X’’) 。特別的，當 X = X’, lmv(X)  lmv(X, X’’)。 ≥ ≥
 
引理：當 X 為一 k-itemset 時， |dbX| × k ≤ lmv(X) ≤ |dbX|× k ×MV。 
 
定理： 給定一 minShare 及一 k-itemset X， 如果 lmv(X) + (lmv(X)/k)×MV < minShare×TMV，則
所有X之超集合(supersets)且大小為 k + 1 必為不頻繁(infrequent)。 
 
定理：給定一minShare、一k-itemset X 及一正整數k’ ， 如果 lmv(X) + (lmv(X)/k) MV× × k’ < 
minShare×TMV，則所有X之超集合(supersets)且大小為小於或等於 k + k’ 必為不頻繁(infrequent)。 
 
由於以上定理之成立，我們可定義一個重要的函數 CF(X) = lmv(X) + (lmv(X)/k)×MV×L，其中 L = 
min{ML-k, k’}，k＇為給定的正整數。由上述的定理可推得當 CF(X) < minShare×TMV 成立時，沒
有任何 X 之超集合(superset)且大小為小於或等於 k + k’ 是分配額頻繁(SH-frequent)。 此一層次
閉合性質(The level closure property) 可以被用來剔除不需要的候選項目集合，當其所有大小為小於
或等於 k + k’的超集合都不是分配額頻繁時。 
 
我們所提出演算法如下： 
 
 
表 C012-1                                                                           共 16 頁  第 6 頁 
T4.I2.D100k.N50.S10
1
10
100
1000
10000
100000
0.2 0.4 0.6 0.8 1 1.2 1.4 1.6 1.8 2
minShare (%)
Ru
nn
in
g 
tim
e 
(s
ec
)
ZSP
FSM(1)
FSM(2)
FSM(3)
FSM(ML-1)
 
圖表一 T4.I2.D100k.N50.S10 測試資料庫執行探勘結果 
 
在測試不同大小的資料庫方面，我們亦得到類似的結果，如圖表二。 
 
T4.I2.Dz.N50.S10
1
10
100
1000
10000
100000
0 200 400 600 800 1000
Transactions (k)
R
un
ni
ng
 ti
m
e(
se
c)
ZSP
FSM(1)
FSM(2)
FSM(3)
FSM(ML-1)
 
圖表二 不同測試資料庫大小之執行探勘結果 
 
 
表 C012-1                                                                           共 16 頁  第 8 頁 
表C012-1                                                                           共 16 頁  第 10 頁 
23.  RCk:= Ck;  
24. } 
25. return F  
 
其中 Join()和 Prune()分別如下： 
 
    function Join() {  
1.    foreach Xp∈RCk-1 and foreach Xq∈RC1 { 
2.       if (iq>ik-1) { 
3.       X={ i1, i2…, ik-1, iq }; 
4.       Ck=Ck+X;} 
5.    } 
6. } 
 
    function Prune() {  
1.    foreach X∈Ck { 
2.        if  a subset of X∉RC∃ k-1 { 
3.        Ck=Ck-X;} 
4.    } 
5. } 
 
 
(2) Support-Counted Fast Share Measure (SuFSM) Algorithm 
 
定義： 給定 k-itemset X 及資料庫 DB，所有 X 在DB 中的 (k+1)-supersets 記為  Sk+1(X)。 
定義：給定任何k-itemset X之超集合(k+1-superset) Xk+1， 即Xk+1∈Sk+1(X)。 所有交易集合至少
包含一 Xk+1 計為 dbSk+1(X)。 而Sup(Sk+1(X)) = |dbSk+1(X)|。maxSup(Sk+1(X))為所有 Sup(X
k+1) 中
之最大值。 
 
我們推演得以下之引理。 
 
引理：lmv(X)/k  Sup(X)  Sup(S≥ ≥ k+1(X))  maxSup(S≥ k+1(X)). 
而且，如果所有 X 的超集合(superset) 都不是 SH-frequent 則以下的三個不等式皆成立。  
lmv(X) + Sup(X)×MS× (ML - k) < minShare×Tmv, 
lmv(X) + Sup(Sk+1(X))×MS× (ML - k) < minShare×Tmv, 
lmv(X) + maxSup(Sk+1(X))×MS× (ML - k) < minShare×Tmv. 
 
Support-counted FSM (SuFSM)演算法既是利用以上的不等式以改進探勘的效能。 
 
表C012-1                                                                           共 16 頁  第 12 頁 
  -ntrans number_of_transactions_in_000s (default: 1000) 
  -tlen avg_items_per_transaction (default: 10) 
  -nitems number_of_different_items_in_000s) (default: 100) 
  -npats number_of_patterns (default: 10000) 
  -patlen avg_length_of_maximal_pattern (default: 4) 
  -corr correlation_between_patterns (default: 0.25) 
  -conf avg_confidence_in_a_rule (default: 0.75) 
 
但由於該程式原為生成 (0,1)-交易資料庫，亦即只記錄項目出現於何個交易中，而未記錄項
目出現於交易中的次數。然而，本計畫之研究需計算交易中的次數，因此，我們修該其程式
以符合我們的需求。 
 
我們採用測試資料庫標記方式為：Tx.Dyk.Nz.Sw，其中 x、y、z、w為正整數，T、D、N、S
分別代表： 
T：資料庫中交易大小之平均值 
D：資料庫中總交易個數 
N：資料庫中不同項目之個數 
S：單一交易中單一項目計數之上限值 
 
生成之三組測試資料庫以下： 
一、 不同交易個數之五組資料庫，分別為：T5.D200k.N50.S10、T5.D400k.N50.S10、
T5.D600k.N50.S10、T5.D800k.N50.S10、T5.D1000k.N50.S10。利用此五組資料庫，我們
可以用於比較資料庫大小對不同演算法程式之效能影響。 
二、 不同交易大小平均值之三組資料庫，分別為：T5.D200k.N50.S10、
T10.D200k.N50.S10、T20.D200k.N50.S10。利用此三組資料庫，我們可以用於比較資料庫
中交易大小平均值對不同演算法程式之效能影響。 
三、 不同項目個數之三組資料庫，分別為：T5.D200k.N50.S10、T5.D200k.N100.S10、
T5.D200k.N200.S10。利用此三組資料庫，我們可以用於比較資料庫中項目個數的大小對
不同演算法程式之效能影響。 
 
實驗結果分析和探討。 
 
三種不同演算法之效能其實驗結果分析和探討如下： 
 
圖表三及圖表四表列出FSM、EFSM、SuFSM、ShFSM及DCG演算法針對不同之minShare在
T6.I4.D100k.N200.S10 及 T10.I6.D100k.N1000.S10 資料集探勘之執行時間。圖表三顯示DCG的效
能是FSM的一倍。舉例，在minShare = 0.4%時，DCG的執行時間分別是ShFSM, SuFSM, EFSM及 
FSM的 62%, 21%, 9.8%及 0.4%。 
 
在圖表四中，DCG的執行時間分別只是ShFSM 及 SuFSM的 59.5%及 16.6%，當minShare = 0.06%
時。 
k 9 ≥ 2036 2036 1567 12 12 0 
Time(sec) 13610.4 71.55 29.67 10.95 8.83  
表格四 Comparison of the numbers of candidate sets in each pass 
 
圖表五及圖表六比較SuFSM、ShFSM及DCG之擴展性。圖表五顯示在資料集T6.I4.Dz.N200.S10，
minShare = 0.3%的情況下，不同資料集大小所需之執行時間。SuFSM、ShFSM及DCG的執行時間
隨資料集大小成線性的遞增。圖表六顯示在資料集T6.I4.D100k.N200.Sm， minShare = 0.3%的情況
下，不同maximum measure values大小所需之執行時間。SuFSM、ShFSM及DCG的執行時間變化並
不顯著。 
 
BMS-WebView-2 是從真正的電子商務網站累積幾個月的點擊(click stream)資料集。本研究修改這
些資料集並外加另一個參量m 。參量m表示各個項目之measure value為任意地取 1 至m之間，並
且，資料集中 50%項目之measure value被設是 1 。圖表七顯示ShFSM 和DCG在minShare 的範圍
在 0.2% 和 1% 之執行時間。在圖表七中，當minShare為 0.6%時，DCG 的執行時間僅是ShFSM
的 59.5% (minShare = 0.6%) 及 16.6% (minShare = 0.2%)。 
 
T6.I4.Dz.N200.S10
0
20
40
60
80
100
120
140
0 200 400 600 800 1000
Transactions (k)
R
un
ni
ng
 ti
m
e 
(s
ec
)
SuFSM
ShFSM
DCG
 
圖表五 Scalability of algorithms 
表C012-1                                                                           共 16 頁  第 14 頁 
