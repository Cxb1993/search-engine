 
 
2 
 
作，Fn 為基數幀而 Fn-1以及 Fn+1 皆是偶數幀。我們可以看到，將基數幀留下基數行，將偶數幀
留下偶數行的影像交錯動作，故稱為交錯式影像。 
Fn-1 Fn Fn+1
Fn-1 Fn Fn+1
原始漸進式
影像序列
解交錯
影像序列
 
 
圖 1： 幀轉換成場的交錯式影像 
 
為了方便解釋接下來各種演算法，我們使用圖 2 的表示法來幫助說明，Fn 表示第 n 個幀
(frame)，P 代表在 Fn中欲插補的像素值，而 a，b，c，d，e，f，g，h，i，j，k，l 分別是與 P 
相鄰的十二個像素值。 
g
h i
j
k l
a
b c
d
e f
Fn-1 Fn Fn+1
P
 
 
圖 2： Fn 中欲插補像素 P 周圍的十二個像素。 
 
2. Line Doubling 解交錯演算法 
a
b
c
d
e
f
P
O
Q
 
圖 3： Line Doubling 解交錯演算法示意圖 
 
 
 
4 
 
a
b c
d
e f
a
b c
d
e f
a
b c
d
e f
D1 D2 D3  
圖 5： ELA 判斷的三個邊緣方向 
 
5. Weave 解交錯演算法 
以上所列的解交錯演算法是所謂的單一場解交錯方法，也就是欲插補的像素值是藉由單一
場的資訊來獲得。單一場方法是很節省解交錯時所需的儲存空間，只需要一列緩衝記憶空間即
可完成運算，然而所獲得的畫面品質卻不甚理想。因此開始有研究朝向多場間的解交錯方法，
其中最為簡單的就是 Weave 解交錯演算法[6]。 
Weave 解交錯演算法將欲插補的像素由前面一個場相同位置的像素值取代，因此使用
Weave 在畫面靜止不動的地方去交錯所得到的畫面品質是相當好的，若是在畫面有移動的地方
則會有明顯的橫向條紋以及鋸齒現象；若是連續的兩個場剛好是屬於影像中場景變換的部份，
那麼使用 weave 會發生將兩個不同場景合併成為一個幀的鬼影現象。Weave 演算法的數學表示
式如下： 
hP                                       (5) 
 
6. Vertical temporal median filtering 解交錯演算法 
Vertical temporal median filtering (VTMF) 解交錯演算法[7]隱含式地偵測畫面移動以及物
件邊緣，因此相較於 Weave 演算法在動態畫面應用上可以有較好的畫面品質。一個較簡單的
VTMF 演算法的數學表示式如下： 
),,( hebmedianP                                    (6) 
其中 ),,( hebmed 方程式功能如下： 
 ,
seh, otherwi
behhebe, 
ebhhbeb, 
hebmedian







 )()(
)()(
),,(
                         (7) 
由以上的數學式可以了解 VTMF 演算法在靜態畫面上將採用多場資訊來獲得欲插補像素
值，然而遭遇到動態畫面時就會改採單場資訊來獲得欲插補像素值。VTMF 演算法最大的缺點
就在於破壞垂直方向的細緻度而產生畫面失真。 
 
7. Spatiotemporal edge-based median filtering 解交錯演算法 
Spatiotemporal edge-based median filtering (STELA)演算法[8]使用在三維空間上的邊緣基準
線平均方法。STELA 演算法的步驟如下： 
 
 
6 
 
9. 動態補償解交錯方法 
動態補償解交錯方法根據鄰近的畫面去動態的預測畫面中物體的移動軌跡，藉由動態預測
可以得到在鄰近的三維空間內和目前最接近的區塊。這個解交錯方法對欲插補的區塊作了複雜
的預測，而且若是沒有一個好的預測方式則無法提供好的影像品質。 
 
四、 研究方法 
以上所介紹的動態適應性影像解交錯方法皆是透過一個移動偵測的技術，之後再經由判定
欲補插像素是屬於哪一類型的移動形態採取不同的補插方法。其中 HDIF、RII 雖然有低計算
量且有不錯的影像品質但是使用的記憶體空間需要三張畫面，另外，RII 必須要先掃描完整張
畫面才能決定欲插補像素的移動型態，因此增加處理所花費的時間。HPDA 雖然有只需要兩張
畫面的記憶體空間和低計算量的優點，但在解交錯的影像品質上卻並不讓人滿意。除此之外，
還有使用多張畫面資訊做插補的方法，如 MAI[12]、ADHV[13]、EMAD[14]，雖然有不錯的影
像品質表現但在記憶空間使用量上需要四張以上的畫面並且計算量大，在硬體設計成本偏高。
根據以上的方法做討論，本計畫希望能將記憶空間限制在兩張畫面以降低硬體成本，再來改進
移動偵測的技術希望能更精確的判定欲補插像素的移動形態(RII 將移動形態分成三種類型似
乎有很好的效果)，再根據不同的型態發展出獨特的插補方式。圖 7 是本計畫所提出的演算法
示意圖，其中包含四個元件：MDD (motion-direction detector)、Type I TI(temporal interpolator)、
Type II TI、SI(Spatial Interpolation)。MDD 期望藉由多個在時間相關且位置上不同的像素偵測
出目前欲插補像素的移動形態：靜止、垂直方向移動、和水平方向移動。在靜止的情況我們使
用 Type I TI 來插補遺失像素，在垂直方向移動的情況下使用 Type II TI 來插補遺失像素，在水
平方向移動的情況下使用 SI 來插補遺失像素。 
 
Motion
Direction
Detection
Type I  TI
Type II  TI
Interlacing
video
Interpolated
video
SI
 
圖 7 : 本計畫提出的解交錯影像演算法 
 
以下是各區塊的動作說明： 
1. MDD(motion direction detector) 
我們使用五組差值去偵測在 Fn-1 和 Fn+1 的移動程度。圖 8 白色的部份為這五組差值會使
用到的相關像素。 
 
 
8 
 













2
2
3
2
1
ecdb
S
fbea
S
ebS
 
                        (18) 
找出邊緣方向差值的最小值，以及最小值的索引值： 
),,( 321min SSSminS         (19) 









3min
2min
1min
if,4/)(
if,4/)(
if,2/)(
SSecdb
SSfbea
SSeb
P               (20) 
以下是根據發展的演算法所設計的硬體架構，如圖 9 所示。主要分成幾個模組，分別是
Line buffer、Mem1、Mem2、Register Bank、MDD、Type I TI、Type II T 以及 SI。 
 
Motion
Direction
Detector
Type I  TI
Type II  TI
SI
Line Buffer
(Fn+1)
Register
Bank
Mem 1
(Fn-1)
Mem 2
(Fn)
Interpolated
image
Interlacing
image  
圖 9: 提出的硬體架構圖 
 
Line buffer、Mem1、Mem2 這三塊模組主要負責三張連續影像的儲存工作，假設影像的大
小為 MN(以灰階影像為例)，則 Line buffer 的大小為 M28bits，Mem1 以及 Mem2 的大小為
M N8bits。Register Bank 主要工作為將 MDD、Type I TI、Type II T 以及 SI 所需使用到的像
素資料暫存在暫存器中，所暫存的資料可以參考圖 8 中的 a~l、w~z 這些像素值。Register Bank
的設計重點在每一個時脈週期都能同時將 a~l、w~z 這些像素值輸出給 MDD、Type I TI、Type 
II TI 以及 SI 這些模組，同時的運算五組差值、以及 P 值的運算式子。 
MDD 模組由 Register Bank 獲得 a~l、w~z 像素值，同時運算式子(11)~(15)產生 D1~D5。為
了加快效能，這一個模組是使用三級的管線化架構。Type I TI 模組運算式子(16)產生相對應的
P 值。Type II TI 模組則是同時運算式子(17)，再由 MDD 送出的 D4、D5 選擇適當的 P 值出來。
SI 模組則是同時運算式子(18) (19) (20)，再經由式子(19)的結果決定適當的 P 值傳輸出去。最
後的輸出則由 MDD 模組決定選擇哪一組的 P 值當作插補後的結果。 
 
 
 
10 
 
[3] M.H. Lee, J.H. Kim, J.S. Lee, K.K. Ryu, and D.I. Song, “A New Algorithm for Interlaced to Progressive Scan 
Conversion Based on Directional Correlations and its IC Design,” IEEE Trans. Consumer Electronics, vol. 40, no. 
2, pp. 119-129, May. 1994 
[4] C.J. Kuo, C. Liao, and C.C. Lin, “Adaptive Interpolation Technique for Scanning Rate Conversion,” IEEE Trans. 
Circuits Syst. Video Technol., vol. 6, no.3, pp.317-321, Jun.1996.  
[5] T. Chen, H. R. Wu, and Z.H. Yu, “An Efficient De-interlacing Algorithm Using Edge-based Line Average 
Interpolation,” in Proc. Visual Commu. and Image Processing, SPIE vol. 4067,pp.1551-1558,2000. 
[6] G. De Haan and E.B. Bellers, “Deinterlacing  An Overview,” Proceedings of the IEEE, Vol. 86, Issue 9, pp. 
1839 - 1857, Sept. 1998. 
[7] M. Annegarn, T. Doyle, P. Frencken, and D. Hees, “Video signal processing circuit for processing an interlaced 
video signal,” Apr. 1998. U.S. Patent 4740842. 
[8] H.-S. Oh, Y. Kim, Y.-Y. Jung, A. W. Morales and S.-J. Ko, “Spatio-temporal edge-based median filtering for 
deinterlacing,” IEEE International Conference on Consumer Electronics, pp.52–53,2000. 
[9] M.-J. Chen, C.-H. Huang and C.-T. Hsu, „„Efficient De-interlacing Technique by Inter-field Information,” IEEE 
Transactions on Consumer Electronics, Vol. 50, No. 4, pp. 1202-1208, Nov. 2004. 
[10] C.-C. Lin, M.-h. Sheu, H.-k. Chiang, C.-J. Wei, and C. Liaw, „„A High-Performance Architecture of Motion 
Adaptive De-interlacing with Reliable Interfield Information,” IEICE TRANS. FUNDAMENTALS, Vol.E90–A, 
No.11 pp. 2575-2583, Nov. 2007. 
[11] G.-L. Li and M.-J. Chen, „„High Performance De-Interlacing Algorithm for Digital Television Displays,” Journal 
of display technology, Vol. 2, No. 1, pp. 85-90, Mar. 2006. 
[12] S.-F. Lin, Y.-L. Chang, and L.-G. Chen, “Motion Adaptive Interpolation with Horizontal Motion Detection for 
Deinterlacing,” IEEE Transactions on Consumer Electronics, Vol. 49, No. 4, pp. 1256-1265, Nov. 2003.  
[13] C.-C. Lin , C.-J. Wei, M.-H. Sheu, H.-K. Chiang, “ The VLSI Design of Motion Adaptive De-interlacing with 
Horizontal and Vertical Motions Detection,” IEEE Asia Pacific Conference on Circuits and Systems, APCCAS 
2006, pp. 1589-1592, Dec. 2006. 
[14] H. Sun, N. Zheng, C. Ge, D. Wang and P. Ren, “ An efficient motion adaptive de-interlacing and its VLSI 
architecture design, ” ISVLSI, pp. 455-458, Apr. 2008. 
[15] 楊竣百, “高效能影像顯示解交錯電路實作” 國立成功大學資訊工程研究所碩士論文 ,2008.  
98年度專題研究計畫研究成果彙整表 
計畫主持人：蕭宇宏 計畫編號：98-2218-E-224-004- 
計畫名稱：多重解析度動態適應性解交錯 IP 設計與實現 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 3 100 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
 
