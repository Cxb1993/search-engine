 
中 文 摘 要 ： 高黏滯彈性物體之融化在真實世界中是一相當複雜的現象，
包含融化物質之流動、熱量的傳遞轉移以及物質之相態變化
等。我們利用平滑粒子流體動力學法(Smoothed-Particle 
Hydrodynamics, SPH)來模擬物體融化，並且使用一個具有回
饋機制的控制演算法來操縱融化的流體。在納維-斯托克斯方
程式(Navier-Stokes equation)中加入計算彈性壓力的力
量，讓我們可以模擬出同時具有固態與液態特性的高黏滯彈
性流體。我們還在粒子間模擬熱能傳導的行為，利用模擬後
的溫度決定黏滯性與彈力的模擬係數。此外，我們設計了一
套直覺的控制機制來幫助使用者設計融化的過程。使用者可
以直接在場景物表上繪製融化的路徑與融化後流體的形狀。
本計畫為期兩年，第一年著力於高黏滯彈性物體融化模擬系
統之發展與實作；第二年設計一流體控制系統，並發展方法
加速熱量傳遞之計算以及 GPU 加速技術。 
中文關鍵詞： 融化流體模擬、流體控制 
英 文 摘 要 ： The melting process of viscoelastic objects is a 
complicated phenomenon in real world, which includes 
fluid flowing, thermal radiation and heat transfer, 
and transformation between solid and fluid. We 
develop a SPH-based simulation framework for object 
melting simulation and a feedback control algorithm 
to manipulate the melting flow. By adding an elastic 
stress term to the Navier-Stokes equation, we can 
simulate the melting behavior which has both fluid 
and solid features. We develop a thermals transfer 
system to simulate the heat exchange between 
particles, the viscosity and elastic stress 
coefficient are automatically determined base on the 
temperature of particles. Moreover, we introduce a 
feedback control algorithm which can be used to 
intuitively design the flowing behavior. Users can 
draw flowing path directly on the surface to design 
the shape of melting fluid. This is a two-year 
project. In the first year, we develop and implement 
the SPH-based simulation system for object melting. 
In the second year, we develop a feedback control 
scheme that allows artists to design the melting flow 
and its final shape, and speed up the thermal 
exchange computation and develop a GPU-based 
computing framework. 
行政院國家科學委員會補助專題研究計畫成果報告 
（□期中進度報告/■期末報告） 
 
Melting Simulation and Flowing Control for Viscoelastic Models 
高黏滯性物體之融化模擬與流動控制 
 
計畫類別：■個別型計畫   □整合型計畫 
計畫編號：NSC 100-2221-E-009-117-MY2 
執行期間：100 年 8 月 1 日至 102 年 7 月 31 日 
 
執行機構及系所： 
 
計畫主持人：莊榮宏  國立交通大學資訊工程系教授 
共同主持人： 
計畫參與人員：黃聰賢、姚博尹、官彥廷、黃富熙、張澤清 
 
本計畫除繳交成果報告外，另含下列出國報告，共 _3_ 份： 
■執行國際合作與移地研究心得報告 
■出席國際學術會議心得報告 
 
 
  期末報告處理方式： 
1. 公開方式： 
■非列管計畫亦不具下列情形，立即公開查詢 
      □涉及專利或其他智慧財產權，□一年□二年後可公開查詢 
2.「本研究」是否已有嚴重損及公共利益之發現：■否 □是 
3.「本報告」是否建議提供政府單位施政參考 ■否 □是，    （請列舉提
供之單位；本會不經審議，依勾選逕予轉送） 
 
中   華   民   國 103 年 1 月 22 日 
Contents
1 Introduction (߻ق與ࣴزҞ的) 3
2 Related Work (Ў᝘௖૸) 4
2.1 SPH-based Fluids . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 4
2.2 Melting and Flowing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 5
2.3 Fluid Control System . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 5
2.4 Rendering . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 7
3 Melting Framework (ࣴز方法) 8
3.1 Overview . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 8
3.2 Fluid Simulation Framework . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 9
3.2.1 SPH formulations and Navier-Stokes equation . . . . . . . . . . . . . . . . . . . . . . 9
3.2.2 Smooth flow of melting liquids . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 10
3.2.3 Velocity Update . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 12
3.3 Thermal Transfer System . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 12
3.4 Adaptive Sampling . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 15
3.5 Flowing Control System . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 17
3.5.1 Path Control . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 18
3.5.2 Shape Control . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 20
3.6 Rendering Framework . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 21
3.6.1 Screen Space Rendering . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 21
3.6.2 Model the shape using ellipsoids . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 23
3.6.3 Translucent Rendering . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 24
4 Results (ࣴزԋ݀) 25
5 Conclusions (่ፕ與ԋ݀Ծຑ) 30
2
2 Related Work (Ў᝘௖૸)
In this section, we briefly review the related works in several parts: SPH-based fluids, melting and flowing,
and particle-based fluid rendering.
2.1 SPH-based Fluids
The Smoothed Particle Hydrodynamics(SPH) method, originally developed for simulating the astrophysi-
cal problem [Mon05], was first used by Desbrun et al. [DC96] in computer graphics field to animate highly
deformable objects. This method can handle complex and large topological deformation and satisfies the mass
conservation equation easily because it is inherently a lagrangian-based simulation approach.
Later, Müller et al. [MCG03] introduced a SPH-based fluid simulation scheme for interactive applications
by deriving the equation of pressure, viscosity and surface tension term, and using the appropriate smoothing
kernels (Figure 1). Since then, the development of largrangian-based fluid simulation, especially using SPH,
has made great progress.
Figure 1: Three smoothing kernels Wpoly6, Wspiky and Wviscosity (from left to right). The thick lines are the
kernels, the thin lines are the gradients in the direction towards the center, and the dash lines are the Laplacian
[MCG03].
However, how to ensure the incompressibility of fluids in particle-based simulation is a challenge problem.
In [MCG03], [BT07], and [APKG07], the particle pressure is determined by an equation of state(EOS). So-
lenthaler et al. [SP09] enforced incompressibility by purposing a prediction-correction scheme to solve particle
pressure. Their method not only avoided the computational cost of solving a pressure Poisson equation but also
enlarged the simulation time step. Hence, they achieved an order of magnitude speed up for the entire fluid ani-
mation. Raveendran et al. [RWT11] achieved the incompressibility of particle-based fluid animation by solving
the Poisson equation on the coarse grid to enforce a divergence free velocity field.
Besides, the discretization resolution limitation is another problem because low resolution animation often
limits the amount of detail that could be represented. The computation time and the simulation quality are always
the trade-off. Thus, how to allocate more particles at the region of interest becomes a popular research topic.
Adams et al. [APKG07] split and merged particles based on the extended local feature size(ELFS) defined on
each particle. They split the particle if its ELFS is low, which indicates that this particle is near the fluid surface.
Vice versa, they merged those particles whose ELFSs are high, which indicates that the particles are inside the
fluid volume or near a thick flat surface.
Solenthaler et al. [SG11] proposed a two-scale method for particle-based fluid simulation. By simulating
particles with the same size within each simulation level and applying the feedback force between them, Solen-
thaler et al. avoided the operation of particle split and merge and allowed the simulation of particles in large size
differences without introducing the stability problem. Ando et al. [ATT12] preserved fluid sheets of animated
liquids with an adaptively sampled method. They first detect the thin sheet area by analyzing the distribution of
neighbor particles. This process generally follows by the algorithm for determining the stretch and the orienta-
tion of anisotropic kernels proposed by Yu et al. [YT10]. Ando et al. use it as a criterion to determine whether
a particle is located at the thin sheet. After extracting the thin sheets, they detect the candidate positions where
the particles should be placed. See Figure 2.
4
Figure 3: Interfacial tension in [IUDN10].
Figure 4: Thermal transfer in [MGG+10].
McNamara et al. [MTPS04] used the adjoint method to improve the efficiency of solving the nonlinear opti-
mization problem. The key to their approach is to utilize the linear duality for variables substitution. The adjoint
method exploited this powerful aspect of duality to accelerate the gradient calculation in optimization process.
Fattal et al. [FL04] controlled the smoke shape with a sequence of predefined target smoke states. They added
two terms to the standard flow equations : driving force term and smoke gathering term. While the driving force
compelled the fluid to a particular smoke shape, the gathering term gathered the fluid to maintain the density
value. Instead of solving the control forces optimization problem, Hong et al. [HK04] created a geometric po-
tential field to exert the external force, and coerce the fluid to form the target shape. Shi et al. [SY05] controlled
the liquids to match with the rapidly changing targets by building two different external force fields. The first
one is a feedback force field applied to both shape and velocity to compensate the discrepancies with the target
field. The second one is the gradient field of an adaptive geometric potential field defined by the target object
shape and skeleton information. Compared to the original geometric potential field in [HK04], their adaptive
potential field could handle different complex target shape with appropriate force magnitude. Later, Thürey
et al. [TKPR06] introduced a control particles system to control the liquid without losing the detail part. As
show in Figure 2.4, they first generated control particles set using some predefined criteria, then computed the
attraction force and velocity force acting on the general fluid elements separately. In the end, they combined the
control forces with weighting sum to evaluate the final forces for each element. In order to alleviate the virtual
viscosity effect, they also applied high and low pass filter to preserve the detail motion. More recently, Dobashi
et al. [DKNY08] developed a cloud formation control system. They provided a geometric potential field similar
to the previous method [HK04] to solve the horizontal shape, but used a different feedback control scheme to
control the cloud vertical height. Instead of feedback to the force strength, their feedback system controlled a
water vapor supplier and a latent heat controller, allowing them to deal with the phase change effects and the
cloud generation.
Though there are many fluid control methods, none of them had dealt with object melting and flowing
6
3 Melting Framework (ࣴز方法)
3.1 Overview
Figure 6: System flow of our algorithm
This project aims to naturally simulate the melting phenomenon, such as candle or butter. Figure 6 is the flow
of our melting algorithm. First, giving a model as initial shape, we sample it with a set of particles and compute
neighbors for each particle. Then, we compute the temperature of each particle by simulating the heat transfer
between particles. Three types of thermal transfer are considered: thermal radiation, thermal conduction, and
thermal dissipation. Once the temperature of a particle reaches the melting point, the phase transition from solid
to liquid takes place and the viscosity of melting liquid also varies according to the temperature. Moreover, to
simulate the combustion, the liquid transits to the air when it reaches the flash point.
To reveal the realistic cohesion between melting liquids and solids and prevent liquid particles from pen-
etrating the solid, we consider solid particles as ghost particles, and assign some elaborate attributes to them.
We also compensate density deficiency near the free surface by sampling air particles that are viewed as ghost
particles. The fluid particles thus can distribute evenly on the solid surface instead of being clustered to a shell.
8
There are three forces on the right hand side of the Equation 7 modeling pressure, viscosity, and external
forces. We could formulate these force density terms acting on a particle i using SPH as follows [MCG03]:
fpressurei = −∇p = −
∑
j
mj
(pi + pj)
2ρj
∇W (ri − rj, h) (8)
fviscosityi = µ∇2v = µ
∑
j
mj
(vj − vi)
ρj
∇2W (ri − rj, h) (9)
To compute the pressure term in Equation 8 for each particle, we use ideal gas state equation
pi = k(ρi − ρo), (10)
where k determines the incompressibility of the fluid, ρi is the density defined on the particle i, and ρo is the rest
density of the fluid [DC96].
After computing all the forces exerted to the particle i, the acceleration of it can be computed by using
Equation 11.
ai =
fi
ρi
=
fpressurei + f
viscosity
i + ρig
ρi
, (11)
where ai is the acceleration of particle i. The velocity and the position of the particle i is then updated using
Equation 12 and 13.
v∗i = vi + ai∆t, (12)
where v∗i is the updated velocity and ∆t is the time interval, and
r∗i = ri + v∗i∆t, (13)
where r∗i is the updated position.
3.2.2 Smooth flow of melting liquids
To reveal the cohesion phenomenon between solid andmelting liquid and let themelting liquid flows smoothly
on the solid surface, we apply the concept proposed by Schechter et al. [SB12] in our object melting simula-
tion. First, by using ghost particles near fluid boundary, we prevent the density of a liquid particle from being
under-estimated, which introduces obvious artifacts in SPH simulation. Second, by making the density field
continuous across the solid boundary, we could reach no-penetration and no-separation solid-liquid boundary
condition easily. Finally, we apply an artificial viscosity to damp off the non-physical oscillations and obtain
smooth fluid behavior when the melting liquid flow on the solid surface.
Ghost particle The fluid density distribution computed by Equation 2 is not even because the amount of neigh-
bors between interior and boundary liquid particles differs. The pressure equation (Equation 10) leads to a case
that particles near the boundary are clustered to a shell, aiming to rebalance the density; see the Figure 7 .
To correct the density summation for a fluid particle near the boundary of the fluid, we first consider solid
particles as ghost particles with mass equal to the liquid particle and also contribute to the density summation for
liquid particles. As a result, we prevent liquid particles near the solid boundary from being clustered to a shell
due to the neighbor deficiency. Also, we add air ghost particles above the free surface of the fluid and within
the kernel size [SB12]. For simplicity, the position of an air ghost particle for the liquid particle is set to be the
reflection of some solid particles; as shown in Figure 8.
Besides, to prevent liquid particles from either penetrating or leaving solid surface, the pressure field should
be continuous through the boundary. Thus, after computing the density for each liquid particle, we set the
density of each solid particle equal to the density of it's nearest liquid particle. This step naturally enforces the
no-penetration and no-separation boundary condition between solid and liquid.
10
where α, 0 ≤ α ≤ 1, is a tunable tangential friction coefficient. For the very high viscous liquid in our case, we
let α approach to zero such that the liquid could almost stick on the solid surface.
3.2.3 Velocity Update
Figure 9 shows the detail steps for computing the velocity of the melting liquids. We first compute the
density for each liquid particle by using Equation 2. In this step, both the solid ghost particles and the additionally
sampled air ghost particles contribute to the density summation. Then, we set the density of each solid particle as
the density of its nearest liquid particle, expecting that the pressure computed in the next step could be continuous
across the boundary between solid and liquid. After computing the pressure using Equation 10 for each particle,
we could compute the forces on the liquid particle by using Equation 8 and Equation 9. Then, we solve the
velocity for melting liquids by Equation 12. Finally, we set the ghost velocity for solid particle using Equation
16 and smooth the velocity of liquid particles by applying XSPH (Equation 14).
Figure 9: Flow of updating the velocity of melting liquids.
3.3 Thermal Transfer System
Thermal transfer system plays an important role in simulating themelting object because themelting behavior
is triggered according to the simulated temperature. Figure 10 shows each step of our heat transfer system. To
determine the temperature of each particle, we first need to simulate the heat flow of our system. We take
three types of thermal transfer, namely, thermal radiation, thermal dissipation, and temperature conduction, into
account. After simulating the net heat energy flow in the system, the absorbed heat energyQi of the particle i is
Qi = Q
radiation
i −Qemissioni , (17)
where Qradiationi and Qemissioni is the radiation energy received and emitted by particle i respectively. The tem-
perature Ti of particle i is then updated by ∆Ti defined as
∆Ti =
Qi
miC
, (18)
12
Figure 11: Interpolating viscosity coefficient.
Thermal Radiation For the particles heated by the heat source directly, they would absorb the radiation energy.
To efficiently locate the particles that can be heated by the heat sources, we apply the shadow map technique to
find the particles that are visible to the heat sources. Moreover, the radiation energy from the heat source often
attenuate with the distance due to the occlusion of the air. For simplicity, we formulate the radiation energy
received by particle i that is at location r and visible to some heat sources as the following:
Qradiationi =
∑
s
δQs∆tW (r− ps, rs), (19)
where s iterates over the visible heat sources, δ is the coefficient that determines the heat absorption ratio, Qs is
the heat energy from the heat sources per unit time,∆t is the time interval, W is a weighting function, ps and rs
are the position and the effective radius of the heat sources, respectively. In our cases, we use the spiky kernel
as the weighting function.
Thermal Dissipation With the thermal dissipation, the liquid flowing on the solid surface has the chance to
transit to solid again, forming rich shapes. For the surface particles exposed to the air, they either absorb or
release the heat energy according to the difference between their temperature and the ambient temperature. We
use the concept of color field proposed by Muller et al. [MCG03] to locate the surface particles and formulate
the dissipation behavior using the following general thermal radiation equation proposed by [MGG+10].
Q = ϵeσA(T
4 − T 4ambient), (20)
where ϵe is the emissivity of the material, σ is the Stefan-Boltzmann constant, A is the area of heat transfer
surface, T is the temperature of the voxel in their case, and Tambient is the ambient temperature. However,
because it is not easy to compute the heat transfer surface for a particle exactly, we use the surface area of the
particle as an approximation.
Qemissivei = ϵeσ4pih
2
i (T
4
i − T 4ambient), (21)
where hi is the kernel size of the particle i, and Ti is the temperature of the particle i.
Temperature Conduction Once the temperature of each particle has been updated according to Equation 18,
the temperature conduction between particles could be calculated using the following equation:
∂Ti
∂t
= cd
∑
j
mj
Tj
ρj
∇2W (ri − rj, h), (22)
14
Figure 12: Case of s = 2. Splitting a particle of level i into three particles of level i + 1. The newly sampled
particles are placed behind the original one and within the kernel radius.
Figure 13: Case of s = 2. The change of mass for particles during the split process.
Other physical attributes of the newly sampled particles (e.g. conductivity, emissivity, temperature, viscosity
coefficient, and velocity etc) are set to be the same as the original particle. For the particles with different kernel
sizes and masses, the force model used in fluid simulation need to be further modified to avoid asymmetric force
distribution. Hence, we use the force model as Adams et al. [APKG07].
fpressurei = −
mi
ρi
∑
j
mj
ρj
(pi + pj)
(∇W (ri − rj, hi) +∇W (ri − rj, hj))
2
(28)
fviscosityi = µ
mi
ρi
∑
j
mj
ρj
(vj − vi)(∇
2W (ri − rj, hi) +∇2W (ri − rj, hj))
2
(29)
Particle Split Criteria Our concept is to detect which droplet is stretched to the thread and in that case we
split that droplet and sample the new liquid particles right behind that droplet to model this shape. As shown in
Figure 14, we observe that the thread is going to be formed when the droplet is stretched, and at that moment,
the external force exerted on the mass of liquid is larger than the internal force from itself.
16
Figure 15: Flowing control flowchart.
At the initial stage, we sample a set of control particles through the SPH particles. We define an influence
range for each control particle to control the nearby particles. Each control particle has two forces to affect the
movement of SPH particles. Attraction force drags the nearby particles to the control particles and the velocity
force gives the nearby particles the forces based on the control particle's moving direction. The strength of force
is inversely proportional to the distance between the control particle and other SPH particles. We make use of
these control particles to guide all the SPH particles move as the user designed. Furthermore, we also utilize the
attraction force to enhance small droplet formation during the melting process.
3.5.1 Path Control
For path control, user can draw several flowing paths directly on the object surface or other constrainted
surface. These path are used for guiding the nearby control particles to flow along the path. Instead of apply
forces on all the normal SPH particles, we consider the control particles, which is a subset of SPH particles, are
enough to guide the fluid direction. Moreover, by lowering the strength of force with respect to the distance to
the center of control particle, more fluid detail can be preserved. Each path is defined by a set of path nodes
generated along a user-draw trajectory, the path nodes have the information about the influence range R, and
two forces direction: attraction force and velocity force, which can be used to drag the control particles close to
the path and give the control particles a direction along the path. In the end, each path may give the forces to
control particles that will move along the path trajectory.
Attraction Force Our method compute the attraction force based on the vector Va and Vb, which is shown in
Figure 16(a). The control particle is attracted by the path along the direction −Va sin θ, the angle θ is the angle
between Va and Vb. Equation 30 is the final attraction force for each control particle:
Fa =
∑
i
(−V⃗a sin θ)i (30)
18
Figure 17: Modify the adoption coefficient around the path starting point
3.5.2 Shape Control
It is quite often that artists have the needs to control the fluid to form a target shape. In our object melting
simulation, we provide an easy-design shape control interface for artists to do these jobs. Differ from path control
scheme, shape control must control all the SPH particles more precisely to obey the constraints we set. Because
user will not expect there are small droplet cross the shape or there are some details do not follow this constraint.
Therefore, instead of only applying on control particles, we enforce all the SPH particles in the influence range
of control shape to accept the control forces.
As the same way in path creation, we allow user to draw shape contours on the scene surface, and store each
contours with discrete nodes along the trajectory. Although the shape contour is 2D on the surface, the influence
is still on a 3D volume around each node. We think this is adequate for a melting process control since the fluid
is usually flowing close to the surface. A shape contour has several shape nodes on the trajectory. And for each
shape node, it stores a direction for the contour repulsion force and two influence range as shown in Figure 19.
The farther range is the attraction range used to attract SPH particles to move close the contour line and the
closer range is the repulsion range used to keep the particles stay inside the shape contour region.
Once a shape contour is drawn, we then compute the shape force direction for each node on the shape contour.
By finding a nearest surface vertex normal vector and the vector to its next node position, we compute the shape
force vector as the cross product of these two vectors, as shown in Figure 18.
Figure 18: Shape control force for each node.
20
Figure 20: Flowchart of screen Space Rendering.
Figure 21: Depth map with/without Gaussian Filter.
After smoothing the depth map, we use it to compute the fluid normal vectors in per-pixel manner; see Figure
22. In addition, we also calculate the eye-space surface position from the smoothed depth map. Once we have
the per-pixel information of the surface, such as depth, normal, and position, we could shade the surface as
usual, such as by Phong shading. Finally, because there exist solidified particles on the object surface that often
introduce self-shadows, we also apply shadow map to generate the shadow.
Figure 22: Normal map obtained from the depth map filtered with Gaussian filter.
22
Figure 25: Rotate the ellipsoid to align the surface normal vector.
3.6.3 Translucent Rendering
Because the wax is a translucent material, we integrate Translucent Shadow Map [DS03] in our rendering
framework. Figure 26 shows the standard process of Translucent Shadow Map.
Figure 26: The Translucent Shadow Map stores irradiance samples (left). The radiance leaving the object is
them computed by filtering these radiance samples (right) [DS03].
In first step, we view the candle flame as the light source and place a virtual camera at this position. The
virtual camera looks at the particles and the shadow map stores irradiance samples. In the second step, we
compute the radiance leaving the object and use it to shade the object. However, to get better visual effect and
prevent the detail of droplets from looking blurred due to the strong translucent effect, we additionally consider
the local light source to make the shaded droplet more stereoscopic.
24
Figure 29: α = 0.8. The fluid on the slope run away from the solid surface easily.
To illustrate that the parameter α appeared in Equation 16 determines the stickiness of the fluid, Figure 27,
Figure 28, and Figure 29 show the simulation process with different α values. By setting different α values, the
stickiness of the fluid on the solid surface is different. Hence, we could achieve the expected stickiness easily
by only tunning this parameter.
Figure 30: The upper row shows the simulation result without adaptive particle sampling. The droplet simply
flows on the surface. The bottom row shows that the thread is preserved with particle splitting.
Figure 30 shows the simulation result with and without applying adaptive particle sampling. The particle in
the simulation result without applying adaptive particle sampling is rendered as the sphere as usual. Adaptive
26
Figure 33: The shape control line drawn by user
Figure 34: Butter melting with shape control
Figure 32 shows the user can draw the green path line on the melting object to guide the thread of the candle.
Figure 33 show the desired input which is drawn by user. And Figure 34 displays the simulation result with
shape control.
28
5 Conclusions (่ፕ與ԋ݀Ծຑ)
The goal of this two-years project has been achieved. In the first year, we propose a system which integrates
the SPH-based simulation, heat conduction, and adaptive merging or splitting the particles. We model the heat
source as the light source, and the surface particles that receive the radiation energy are determined by using
shadow map. The heat energy dissipates from the fluid surface is also considered. The net heat energy then
introduces the change of the temperature and conducts to the entire model smoothly. We also presented our
result in the conference of Computer Graphics Workshop in 2012.
In the second year, we improve the system with flow control and GPU acceleration, and the quality of detail
are also improved. The path control and shape control are achieved by adding attraction force. With the power
of graphic hardware, the rendering speed gets significant improvement. By utilizing the concepts proposed
by Schechter et al. [SB12], we solve the density deficiency problem near the fluid boundary and achieve no-
penetration and no-separataion solid-liquid boundary condition. The melting liquids thus could run along the
surface closely without introducing any artificial interfacial tension. Moreover, by applying XSPH and setting
appropriate ghost-solid velocities, the fluids can flow on the surface smoothly and achieve the expected stickiness
easily. To further improve the quality, we apply adaptive particle sampling to preserve the thread formed by the
flow of viscous liquid. We also use screen space point splatting approach rather thanmarching cube to reconstruct
the fluid surface. The particles are rendered in sphere with different sizes based on its mass. Then the particles
are stretched as ellipsoids which are aligned with the surface normal to model the shape of the flowing thread.
The entire computation can be performed on GPU to achieve a real-time rendering speed.
30
[PPLT06] A. Paiva, F. Petronetto, T. Lewiner, and G. Tavares. Particle-based non-newtonian fluid ani-
mation for melting objects. In SIBGRAPI'06, pages 78--85, 2006.
[PPLT09] A. Paiva, F. Petronetto, T. Lewiner, and G. Tavares. Particle-based viscoplastic fluid/solid
simulation. Computer-Aided Design, 41(4):306--314, April 2009.
[RWT11] K. Raveendran, C. Wojtan, and G. Turk. Hybrid smoothed particle hydrodynamics. In Pro-
ceedings of the 2011 ACM SIGGRAPH/Eurographics Symposium on Computer Animation,
SCA '11, pages 33--42, New York, NY, USA, 2011. ACM.
[SB12] H. Schechter and R. Bridson. Ghost SPH for animating water. ACM Transactions on Graphics
(Proceedings of ACM SIGGRAPH 2012), 31(4), 2012.
[SG11] B. Solenthaler and M. Gross. Two-scale particle simulation. ACM Transactions on Graphics
(Proceedings of ACM SIGGRAPH 2011), 30(4), 2011.
[SP09] B. Solenthaler and R. Pajarola. Predictive-corrective incompressible SPH. ACM Transactions
on Graphics (Proceedings of ACM SIGGRAPH 2009), 28(3), 2009.
[SSP07] B. Solenthaler, J. Schläfli, and R. Pajarola. A unified particle model for fluid-solid interactions.
Computer Animation and Virtual Worlds, 18:69--82, 2007.
[TKPR09] Nils Thürey, Richard Keiser, Mark Pauly, and Ulrich Rüde. Detail-preserving fluid control.
Graphical Models, 71(6):221--228, 2009.
[vdLGS09] W. J. van der Laan, S. Green, and M. Sainz. Screen space fluid rendering with curvature flow.
In Proceedings of the 2009 symposium on Interactive 3D Graphics and Games, I3D '09, pages
91--98, 2009.
[YT10] J. Yu and G. Turk. Reconstructong surfaces of particle-based fluids using anisotropic ker-
nels. In Proceedings of the 2010 ACM SIGGRAPH/Eurographics Symposium on Computer
Animation, SCA '10, pages 217--225, 2010.
32
發表論文與摘要 
Line Drawing Simplification by Stroke Translation and Combination 
Yun Chien, Wen-Chieh Lin, Tsung-Shian Huang, and Jung-Hong Chuang 
Department of Computer Science, National Chiao Tung University, Taiwan 
ABSTRACT   
In this paper, we propose a new algorithm for simplifying line drawing sketches. First, we segment 
the strokes at the points of large curvature if desired. Then, we perform a low-pass filter and use 
the result to assign a weight to every stroke. The strokes are moved to the position of the higher 
weight. After that, we find the stroke pairs and combine them to reduce the total number of the 
strokes, resulting in a cleaner line drawing art. This system also cuts down the disordered and 
confusing small strokes and combines them to form long strokes. 
 
參加心得 
本次參加會議，個人認為最有價值的部份在於上午的主題演講。影像相關的技術與應
用非常的多元，遠超乎原本的想像。早上第一場演講是由香港大學的 David Zhang教授所報
告的，內容是關於影像與生物方面的特徵辨識技術。傳統方法使用指紋、人臉、虹膜掃描來
辨識一個人，但是這些方法都有各種問題。人臉會隨著時間而老化改變，而且對於雙胞胎或
是父子等親人將會難以分辨。指紋很容易從使用者拿過的物品上取得與偽造，而虹膜掃描則
有可能會因為一些常見的短期眼疾造成影響。演講者提出了使用掌紋的方法做為身份識別。
掌紋是手掌區域但是不包含手指的部份。比起指紋，掌紋可以取得更多的特徵點而且容易精
準定位。實驗顯示人類的掌紋在長時間來看並不改變，相當穩定可靠而不會受老化問題影
響。由於人類拿取物品的習慣，要取得並偽造完整的掌紋比指紋要困難許多。第一位演講者
還有分享一些把影像識別運用在看病上的技術。這個想法來自於中醫，觀察人類的舌頭可以
判斷病狀。演講者蒐集了來自醫院的病患舌頭照片，正常人的舌頭與腸炎、肝炎、闌尾炎、
胃炎的病患都不相同。他們做出了一個識別系統，可以使用醫院的照片進行演算法的訓練，
然後系統就能夠從患者的舌頭照片簡單判別病因。 
第二位演講者是來自逢甲大學的張真誠教授，主題是資訊隱藏相關的技術。原本一張
帶有機密資訊的圖片，可以拆散藏在多張不同的圖片中。如果收齊這些圖片，可以疊起來以
復原並取得原始資訊。而且分散藏匿資訊的多張圖片並不是無意義圖片，可以額外設計各種
圖案上去，這使得原本藏匿資訊的意圖可以被隱藏起來。更有趣的地方是可以藏匿不只一張
圖，圖片疊合的方式不同，就會顯示出完全不同的圖案。藏匿額外的資訊圖片非常有趣，這
國科會補助計畫衍生研發成果推廣資料表
日期:2014/01/23
國科會補助計畫
計畫名稱: 高黏滯性物體之融化模擬與流動控制
計畫主持人: 莊榮宏
計畫編號: 100-2221-E-009-117-MY2 學門領域: 計算機圖學
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
此計畫之第一年成果獲得 Computer Graphics Workshop 2012 優秀論文獎。計
畫成果撰寫論文中，預期投稿國際會議。 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
