 2 
impressive results, they are over simplified in the sense of considering only cross-bar switches, lack of 
buffers, and non-QoS differentiations. We have recently presented an almost-all optical switch system [4] in 
which the control header is processed electronically while the packet payloads remain transported in the 
optical domain. The switching system includes a group of many-to-one optical space switches, a set of 
Fiber-Delay-Line (FDL) optical buffers, and tunable optical wavelength converters (TOWC) [11][12]. 
Specifically, the many-to-one space switches have been constructed of broadcast-and-select 
interconnected semiconductor optical amplifiers (SOAs)[5] due to the advantages of small footprint and low 
power consumption. While such broadcast-and-select based switches [2] have shown excellent switching 
properties, such as fast response time, large extinction ratio, and low crosstalks, it has been difficult to 
realize large fully integrated switch fabric. On the other hand, alternative approaches to realize 1×N or N×N 
switches with a single modulation stage have been demonstrated by several works []. Since the number of 
switching stages in the light-propagating direction does not increase with N, they have potential advantages 
over conventional schemes in terms of size, complexity, optical insertion loss, and power consumption, 
when scaling to large switches. Among single-modulation-stage switches, InP–InGaAsP optical 
phased-array switches (OPAS)[14] have particularly demonstrated the superiority being a basic switching 
element in constructing large optical packet switching system. Basically the operating principle of OPAS is 
similar to the arrayed-waveguide grating (AWG) except that the optical phases in OPAS can be dynamically 
changed/modulated with less than nanoseconds response. In this paper, to minimize the optical insertion loss 
and take advantages of OPAS’s fast switching speed, we construct the N×N space switch with a three-stage 
Clos-like space switch (CLS), in which each switching element is implemented by various 1×n OPASs. 
Note that the CLS is different from the conventional Clos based switch as the OPAS is a type of wavelength 
selective switch, in which more than one packet with different wavelengths arriving at the same input port 
are required to exit to the different output ports. Besides, as multiple different-size OPASs cascade, some 
physical paths can be blocked, especially when a large-size OPAS connect to a small-size OPAS. Therefore, 
in addition to the switch-blocking constraints of the conventional Clos switch, extra blocking constraints for 
the OPASs need to be considered by the packet scheduling.  
For resolving packet contention, a set of single-stage feed-forward FDL based optical buffers together 
with the tunable wavelength converter are further employed in the switching system. Note that, in the system, 
any specific position of the optical buffer is determined by a corresponding internal wavelength. Thus, the 
wavelength converter can be used to select the internal wavelength (buffering delay) to accommodate the 
incoming packets. Besides, due to the limitations of FDL, buffer blocking will occur when multiple packets 
arrive at the same output port of the buffer. With the switch-blocking constraints and buffer-blocking 
constraints taking into account, the packet scheduling is required to determine a set of valid packets/paths 
for the batch of newly-arriving packets in a time slot. Furthermore, to support QoS differentiation, the 
scheduling algorithm needs to assure that the high-priority packets always experience higher throughput and 
lower buffering delay than low-priority packets. In general, the packet scheduling problem can be modeled 
as an optimization problem. Due to the stringent decision delay, the design of an efficient real-time packet 
scheduling to solve the optimization problem becomes crucial for the switching system.    
 4 
wavelengths are considered. CLS1 accommodates three wavelengths ranging from λ1 to λ3 for each of the 
input fibers and CLS2 accommodates λ4 to λ6 wavelengths. This wavelength clustering results in the scalable 
size of CLSs. Specifically, each CLS is a three-stage Clos-based interconnected switch with each switching 
element constructed by several 1×n InP–InGaAsP OPASs. Figure 2 shows an example for a 12×12 CLS with 
switching elements made by 4×4 and 3×3 OPASs. Due to the wavelength selective nature of OPAS, the CLS 
is different from the conventional Clos based switch as different packets departing from the same input port 
of each OPAS are required to exit to the different OPASs, otherwise those packets are regarded as blocking. 
Therefore, in addition to the switch-blocking constraints of conventional Clos based switch, the QOSPS 
needs to consider the extra blocking constraints of OPASs and dynamically control the optical phases of 
each OPAS to setup the valid path for each packet. The switch-blocking constraints together with the 
buffer-blocking constraints mainly determine the system constraints of the switching system and need to be 
strictly enforced by the OOSPS. 
 6 
 
In addition, we denote (I, S1, S2, S3, O, λ) as a path within the CLS that uses internal wavelength λ and start 
from the I-th input port of the S1-th first stage switch, through the S2-th second stage switch, and to the O-th 
output port of the S3-th third stage switch. Owing to the fact that any packet entering the FOB at the ith input 
port will exit the buffer from the ith output port, the set of valid paths should be U ≡ { (I, S1, S2, S3, O, λ) | {λ
－[(λ－O) mod D] mod N} = 0 }. To indicate the current status of each path, we further define a index 
function V(I, S1, S2, S3, O, λ) which is equal to one if path (I, S1, S2, S3, O, λ) is active and equal to zero if path (I, 
S1, S2, S3, O, λ) is inactive.  
To formally describe the switch-blocking and buffer-blocking constraints, we give eight sub-constraints, 
  1 to   8, among which   1 to   6 jointly represent the switch-blocking free constraints and   7 together 
with   8 determine the buffer-blocking free constraints. More specifically,   1,   2, and   3 define the 
switch-blocking free constraints for the stage-one, stage-two, and stage-three switching elements in CLS, 
respectively. As shown in Figure 3(a), more than one packet with the same wavelength exiting to the same 
output port of each switching element, i.e., choosing the same next-stage switching element, is prohibited. 
Those constraints can be realized by limiting the path sets (I, S1, S2, S3, O, λ) and the index function V(I, S1, S2, S3, 
O, λ) as follows, 
 
1 : V I ,S1 ,S2 ,S3 ,O ,λ( )V I ',S1' ,S2' ,S3' ,O ',λ '( )G1
∑ = 0 , where G1 ≡ {U ×U | (S1,S2 ,λ) = (S1
' ,S2
' ,λ ' ), I ,S3,O( ) ≠ I ',S3 ',O '( )} . (1) 
 
2 : V I ,S1 ,S2 ,S3 ,O ,λ( )V I ',S1' ,S2' ,S3' ,O ',λ '( )G2
∑ = 0 , where G2 ≡ {U ×U | (S2 ,S3,λ) = (S2
' ,S3
' ,λ ' ), I ,S1,O( ) ≠ I ',S1 ',O '( )}. (2) 
 
3 : V I ,S1 ,S2 ,S3 ,O ,λ( )V I ',S1' ,S2' ,S3' ,O ',λ '( )G3
∑ = 0 , where  G3 ≡ {U ×U | (S3,O,λ) = (S3
' ,O ' ,λ ' ), I ,S1,S2( ) ≠ I ',S1 ',S2 '( )} . (3) 
Similarly, within each switching element, more than one packet with different wavelengths arriving at the 
same OPAS are required to exit to the different output ports of OPASs (see Figure 3(b)). This type of switch 
blocking for the OPASs in the three-stage switching elements can be respectively described by   4,   5, and 
  6. 
 
4 : V I ,S1 ,S2 ,S3 ,O ,λ( )V I ',S1' ,S2' ,S3' ,O ',λ '( )G4
∑ = 0 , where  G4 ≡ {U ×U | (I ,S1,S2 ) = (I
' ,S1
' ,S2
' ), S3,O,λ( ) ≠ S3 ',O ',λ '( )}. (4) 
 
5 : V I ,S1 ,S2 ,S3 ,O ,λ( )V I ',S1' ,S2' ,S3' ,O ',λ '( )G5
∑ = 0 , where  G5 ≡ {U ×U | (S1,S2 ,S3) = (S1
' ,S2
' ,S3
' ), I ,O,λ( ) ≠ I ',O ',λ '( )} . (5) 
 
6 : V I ,S1 ,S2 ,S3 ,O ,λ( )V I ',S1' ,S2' ,S3' ,O ',λ '( )G6
∑ = 0 , where  G6 ≡ {U ×U | (S2 ,S3,O) = (S2
' ,S3
' ,O ' ), I ,S1,λ( ) ≠ I ',S1 ',λ '( )} . (6) 
 8 
departed from the O-th output port of the S3-th third-stage switch and received delay(O, λ) buffering delay.  
 
Figure 4. Examples of buffer-blocking constraints. 
Since the intersection of G1 to G7 is a non-empty set, the blocking constraints may be overlapped. 
Besides, (O,λ) = (O ' ,λ ' )  implies delay(O,λ) = delay(O ' ,λ ' ) , thus G3 is included in G7. We denote G as the 
union of G1 to G7 except for the G3, 
 G ≡ G1 ∪G2 ∪G4 ∪G5 ∪G6 ∪G7 .     (9) 
Furthermore, in equation (7), the path pair ((I ,S1,S2 ,O,λ),(I ' ,S1' ,S2' ,O ' ,λ ' ))  is same as 
((I ' ,S1' ,S2' ,O ' ,λ ' ),(I ,S1,S2 ,O,λ)) , which has been considered twice. We then divide (7) by two and combine it 
with (8) as 
 
BK : f BK ≡ 1
2
V I ,S1 ,S2 ,S3 ,O ,λ( ) ×V I ',S1 ',S2 ',S3 ',O ',λ '( )
G
∑ + buffer S3,O,delay O,λ( )( ) ×V I ,S1 ,S2 ,S3 ,O ,λ( )
U
∑ = 0 . (10) 
Notice that fBK is a non-negative function and its potentially minimum value is zero. Since  BK  integrates 
the switch-blocking free and buffer-blocking free constraints, once fBK approaches to the minimum value, all 
blocking constraints will be then automatically satisfied. We define a blocking-constrained group as a path 
set, in which all paths are mutually blocked due to the switch-blocking or buffer-blocking constraints. 
Therefore, according to (10), at most one path can be active in each blocking-constrained group.   
In addition to the blocking constraints, one of the major objectives of QOSPS is to maximize the system 
throughput, which can be achieved by limiting the number of selected paths for any incoming packet (or I/O 
pair) to exact one, i.e., 
Type 1 
Type 2 
 10 
It can be proved [] that, as the update process is iterated, the energy function will be monotonically 
decreasing and eventually converges to an equilibrium state (absolute minimum value) only if three critical 
requirements are satisfied. The first requirement is no self-feedback connection, that is Wii = 0. The second 
one is the weights need to be symmetric, i.e., Wij= Wji, and the third one requires the neurons to be 
asynchronously updated, i.e., one neuron update for one time. In principle, the QOSPS associate the energy 
functions to fBK and fIO of the blocking and I/O constraints, set the neuron to the path, and set the neuron 
output to the index function V(I, S1, S2, S3, O, λ). Thus, V(I, S1, S2, S3, O, λ)=1 or path (I, S1, S2, S3, O, λ) is selected, 
implies the neuron is enabled (active), otherwise the neuron is disabled (inactive). Recall that fBK and fIO are 
non-negative functions and their potentially minimum value is zero. As the update process is iterated, due to 
the decreasing and convergence properties of the energy function, fBK and fIO will converge to zero, which 
implies the system constraints are satisfied. Unfortunately, as will be shown in the following subsection, the 
Hopfield network fails to solve the priority-based problems as the energy function is monotonically 
decreasing. We thus propose the enhanced Hopfield network, AHNN, which assigns every neuron a priority 
and treats every neuron differently, to incorporate the priority-based problems into QOSPS. Most 
importantly, we prove that the AHNN/QOSPS still asymptotically converge to the equilibrium state. 
3.1 AHNN and QOSPS System Modeling 
To solve the constraint-based problems, we first construct an neural network, in which the neurons, 
neuron weights, neuron thresholds, and the energy function are denoted by V(I, S1, S2, S3, O, λ) , 
 
W
( I ,S1 ,S2 ,S3 ,O ,λ ),( I
' ,S1
' ,S2
' ,S3
' ,O' ,λ ' )
, 
 
θ( I ,S1 ,S2 ,S3 ,O ,λ ) , and  
 
E = −
1
2
W
I ,S1 ,S2 ,S3 ,O ,λ( ), I ',S1 ',S2 ',S3 ',O ',λ '( )V I ',S1 ',S2 ',S3 ',O ',λ '( )V I ,S1 ,S2 ,S3 ,O ,λ( )
I ,S1 ,S2 ,S3 ,O ,λ( )
, I ',S1 ',S2 ',S3 ',O ',λ '( )≠ I ,S1 ,S2 ,S3 ,O ,λ( )
∑
+ θ
I ,S1 ,S2 ,S3 ,O ,λ( )V I ,S1 ,S2 ,S3 ,O ,λ( )
I ,S1 ,S2 ,S3 ,O ,λ
∑
 , (14) 
respectively. Now let E = fBK,
 
 
E = f BK = − 1
2
− V I ,S1 ,S2 ,S3 ,O ,λ( )V I ',S1 ',S2 ',S3 ',O ',λ '( )
G
∑⎧⎨
⎩
⎫
⎬
⎭
+ buffer S3,O,delay O,λ( )( ) ×V I ,S1 ,S2 ,S3 ,O ,λ( )
U
∑ .   (15) 
The neuron weights and the thresholds, by comparing (15) with (14), can be obtained  
 
W I ,S1 ,S2 ,S3 ,O ,λ( ), I ',S1 ',S2 ',S3 ',O ',λ '( )
BK = −T I ,S1 ,S2 ,S3 ,O ,λ( ), I ',S1 ',S2 ',S3 ',O ',λ '( )
 and 
 
θ I ,S1 ,S2 ,S3 ,O ,λ( )
BK =buffer S3,O,delay O,λ( )( ) , (16) 
 12 
The minimum value of E, 
 
− n2 I ,S1,O( )
I ,S1 ,O
∑ , can be obtained as the equilibrium state is reached, which 
implies the I/O constraint   IO  is satisfied. Note that, from (19), given any two neurons/paths 
 
I ,S1,S2 ,S3,O,λ( ) and  I ',S1 ',S2 ',S3 ',O ',λ '( ) which belong to the same I/O constrained group will lead to 
 
δ I , I '( )δ S1,S1 '( )δ O,O '( ) = 1. 
The problems left are the two priority-based problems, namely the minimization of buffering delay and 
priority differentiations. Since blocking constraints and I/O constraint constrain the number of active path to 
be at most one for any constrained group. Once some paths (neurons) have been selected, any neuron update 
resulting in another active path within the same constrained group will increase the energy, which violates 
the monotonically decreasing property of energy function in standard Hopfield network. Therefore, the paths 
with lower delay/higher priority can never be active, once some paths with higher delay/lower priority have 
been selected. We conclude that, via the above observation, the standard Hopfield network is incapable to 
solve the constraint-based problems and the priority-based problems simultaneously. 
The design principle behind the AHNN is introducing a priority to every neuron and enforcing the 
high-priority neurons to receive extra positive stimulations, called priority situmulation, from the 
low-priority neurons by assigning asymmetric neuron weights for different-priority neurons. As a result, the 
high-priority neurons can always be activated, regardless of the constraints, even though the low-priority 
neurons have been enabled. However, with the modifications, the asymmetric weights violate the 
requirement of Hopfield network, and the energy function is no longer decreasing as the network evolutes. 
To assure that the energy function still asymptotically converges to its minimum value, we provide the 
following theorems, lemmas, and the necessary conditions. 
Theorem 1: Assume that a standard Hopfield network consists a set of n neurons, Φ ≡ {xi | i =1…n}, for a 
constrained group under constraint C, and the neuron weight from xj to xi, 
 
wxi x j , is non-positive. Suppose 
the network converges to the equilibrium state, in which C is satisfied. Let p(xi) denotes the priority of 
neuron xi. If the neuron weight of an AHNN from xj to xi is set to be 
 
′wxi x j = wxi x j + A× 1− u p x j( ) − p xi( )⎡⎣ ⎤⎦{ } , 
where u() is a step function and A is a large enough positive constant, then: 
a) The AHNN will converge to the equilibrium state, in which C is satisfied.  
b) The priorities of active neurons are higher than the priorities of inactive neurons, as the AHNN 
converges. 
 14 
     
Figure 4. AHNN system dynamics. 
Note that, in the AHNN, the introducing of priority stimulations leads to the asymmetric neuron weights and 
the temporally increasing energy (see figure 4). However, after finite neuron updates, the priority 
stimulations will cease to have effects on the neuron weights, hence the constraints dominate the neuron 
updates, which becomes the standard Hopfield networks. According to theorem 1, we consider two specific 
types of constraints and give lemmas as follows. 
Lemma 1: Assume that a standard Hopfield network, with neuron weight Wxy, converges to the equilibrium 
state, in which constraint C: 
 
VyVx
y≠ x
∑
x
∑ = 0 is satisfied. Let p(x) denotes the priority of neuron x. If the 
neuron weight of an AHNN is set to be 
 
′wxy = wxy + A× 1− u p y( ) − p x( )⎡⎣ ⎤⎦{ } , then at most one neuron with 
the largest priority can be enabled, as the AHNN converges to the equilibrium state. 
Proof: It can be shown that Wxy ≤ 0 for constraint C. Since C restricts the number of enabled neurons to at 
most one in every constrained group, according to theorem 1, the active neuron must be with the highest 
priority in the AHNN.           
Lemma 2: Assume that a standard Hopfield network, with neuron weight Wxy, converges to the equilibrium 
state, in which constraint C: 
 
Vx
x
∑⎛⎝⎜
⎞
⎠⎟
− N
⎡
⎣
⎢
⎤
⎦
⎥
2
= 0 is satisfied. Let p(x) denotes the priority of neuron x. If the 
neuron weight of an AHNN is set to be
 
′wxy = wxy + A× 1− u p y( ) − p x( )⎡⎣ ⎤⎦{ } , then exact N neurons with the 
N-largest priorities will be enabled, as the AHNN converges to the equilibrium state. 
 
Priority 
Stimulation 
 
 
Random 
Neuron 
Update 
 
 Constraints 
ΔE > 0 
ΔE ≤ 0 
Converge 
Start 
 16 
 
= −P × T
I ,S1 ,S2 ,S3 ,O ,λ( ), I ',S1 ',S2 ',S3 ',O ',λ '( ) − 2Q × δ I , I '( )δ S1,S1 '( )δ O,O '( )
+ R × T
I ,S1 ,S2 ,S3 ,O ,λ( ), I ',S1 ',S2 ',S3 ',O ',λ '( ) × 1− u pri I ',S1 '( ) − pri I ,S1( )⎡⎣ ⎤⎦{ }
   +U × T
I ,S1 ,S2 ,S3 ,O ,λ( ), I ',S1 ',S2 ',S3 ',O ',λ '( ) × δ pri(O,S1), pri I ',S1 '( )( ) × 1− u delay O,λ( ) − delay O ',λ '( )⎡⎣ ⎤⎦{ }
   + K × δ I , I '( )δ S1,S1 '( )δ O,O '( ) × 1− u delay O,λ( ) − delay O ',λ '( )⎡⎣ ⎤⎦{ }
 ,  (20)
 
 
θ I ,S1 ,S2 ,S3 ,O ,λ( )
JT = P ×θ I ,S1 ,S2 ,S3 ,O ,λ( )
BK + Q ×θ I ,S1 ,S2 ,S3 ,O ,λ( )
IO =P buffer S3,O,delay O,λ( )( )⎡⎣ ⎤⎦ + Q 1− 2 × n I ,S1,O( )⎡⎣ ⎤⎦ .
 
Note that (20) contains inter-play of different constraints, the determination of coefficients becomes 
nontrivial. In the next subsection, we investigate various system conditions to search for the proper 
coefficients with which the QoSPS can obtain the feasible solutions.  
3.2 Coefficient Determination of QoSPS 
We consider the state update of a given neuron, x = (I, S1, S2, S3, O, λ), in an instant of update iteration. 
Suppose there exists α enabled neurons (paths) which belong to the same blocking-constrained group with x, 
β enabled neurons which belong to the same blocking-constrained group with x and also correspond to the 
same packet priority with x, and γ enabled neurons belonging to the same I/O-constrained group (i.e., 
mapping to the same I/O) with x. Let 
 
netx = Wx , I ',S1 ',S2 ',S3 ',O ',λ '( )
JT V I ',S1 ',S2 ',S3 ',O ',λ '( ) −θx
JT
I ',S1 ',S2 ',S3 ',O ',λ '( )≠ x
∑ denotes the 
net input of neuron x. Due to the blocking constraint, according to (20), the α neurons and the neuron 
threshold will jointly contribute 
 
α × (−P) − P × buffer S3,O,delay O,λ( )( )⎡⎣ ⎤⎦ to netx. In addition, due to the I/O 
constraint, the γ neurons and the associated neuron threshold will jointly 
contribute  γ × (−2Q)  
−Q 1− 2 × n I ,S1,O( )⎡⎣ ⎤⎦  to netx. We further consider the contribution of the previously 
discussed multi-objective constraints to netx. First, the (α-β) neurons in the blocking-constrained group will 
contribute extra
 
(α − β) × R × 1− u pri I ',S1 '( ) − pri I ,S1( )⎡⎣ ⎤⎦{ } to netx depending on the priorities of x and the 
(α-β) neurons. Second, the β enabled neurons in the blocking-constrained group and have the same priority 
with x will contribute 
 
β ×U × 1− u delay O,λ( ) − delay O ',λ '( )⎡⎣ ⎤⎦{ }  to netx due to 
 
δ pri(O,S1), pri I ',S1 '( )( ) = 1 . Third, the γ enabled neurons in the I/O-constrained group will contribute 
 
γ × K × 1− u delay O,λ( ) − delay O ',λ '( )⎡⎣ ⎤⎦{ }  to netx. Note that QoSPS intends to enable the neuron x if and 
only if the following five conditions are simultaneously satisfied: (1) x must not lead to buffering blocking 
with the other packets; (2) the corresponding I/O request of x must exist; (3) x must be with the highest 
 18 
 
−αP − (2γ −1)Q + α − β( )R + βU + γ K ≥ 0, for α ≥ 0,γ ≥ 0,α − β ≥ 0;
−(α +1)P − (2γ −1)Q + α − β( )R + βU + γ K < 0, for α ≥ 0,γ ≥ 0,α − β ≥ 0;
−αP − (2γ +1)Q + α − β( )R + βU + γ K < 0, for α ≥ 0,γ ≥ 0,α − β ≥ 0;
−αP − (2γ −1)Q + α − β −1( )R + βU + γ K < 0, for α ≥ 0,γ ≥ 0,α − β ≥ 1;
−αP − (2γ −1)Q + α − β( )R + β −1( )U + γ K < 0, for γ ≥ 0,α − β ≥ 0,β ≥ 1;
−αP − (2γ −1)Q + α − β( )R + βU + γ −1( )K < 0, for α ≥ 0,γ ≥ 1,α − β ≥ 0.
⎧
⎨
⎪
⎪
⎪
⎪
⎩
⎪
⎪
⎪
⎪
 
By reorganizing the boundary conditions, we obtain the following equations. 
 
α −P + R( ) + β −R +U( ) + γ −2Q + K( ) ≥ −Q;
α −P + R( ) + β −R +U( ) + γ −2Q + K( ) < −Q + P;
α −P + R( ) + β −R +U( ) + γ −2Q + K( ) < Q;
α −P + R( ) + β −R +U( ) + γ −2Q + K( ) < −Q + R;
α −P + R( ) + β −R +U( ) + γ −2Q + K( ) < −Q +U ;
α −P + R( ) + β −R +U( ) + γ −2Q + K( ) < −Q + K .
⎧
⎨
⎪
⎪
⎪
⎪
⎩
⎪
⎪
⎪
⎪
 
Obviously P = 2Q = R = U = K > 0 is one of feasible solutions to above equations. 
4. Simulation Results 
   In this section, we carry extensive simulations for the AHNN based packet scheduling for the optical 
switching system. Figure 5 shows the dynamics of energy function for pure HNN and AHNN based packet 
scheduling. While the energy function of AHNN is non-decreasing, after finite iterations, the energy 
function still converge to the equilibrium state as proved in the previous theorem and lemmas. Note that 
although the energy function of HNN is monotonically decreasing and converge more quickly, the resulting 
system state may not satisfy the problem requirements such as the priority-based requirements.   
 
 20 
 
Figure 6. System throughput and average buffering delay under N = 4, M = 4, K = 4, and D = 2. 
 
Figure 7. System throughput and average buffering delay under N = 4, M = 4, K = 4, and L = 8. 
 22 
 
Figure 10. System throughput and average buffering delay under N =4, M = 4, L = 4, and D = 4. 
 
Figure 11. System throughput and average buffering delay under N = M = K = L = D = 4 and 2 priority 
levels with load ratio H:L = 1:1. 
 24 
[3] M. Yuang, S. Lee, P. Tien, Y. Lin, J. Shih, F. Tsai, and A. Chen, “Optical Coarse Packet-Swtiched 
IP-over-WDM Network (OPSINET): Technologies and Experiments,” IEEE J. Select. Areas Comm., 
vol. 24, no. 8, Aug. 2006, pp. 117-127. 
[4] M. Yuang, P. Tien, and J. Shih, “Pseudo-Banyan Optical WDM Packet Switching System With 
Near-Optimal Packet Scheduling,” IEEE/OSA Journal of Optical Communications and Networking, 
Aug. 2008. 
[5] G. Papadimitriou, C. Papazoglou, and A. Pomportsis, “Optical Switching: Switch Fabrics, Techniques, 
and Architectures,” J. Lightw. Technol., vol. 21, no. 2, Feb. 2003, pp. 384-405. 
[6] M. Chia, D. Hunter, I. Andonovic, P. Ball, I. Wright, S. Ferguson, K. Guild, and M. O’Mahony, “Packet 
Loss and Delay Performance of Feedback and Feed-Forward Arrayed-Waveguide Gratings-Based 
Optical Packet Switches With WDM Inputs-Outputs,” J. Lightw. Technol., vol. 19, no. 9, Sep. 2001, pp. 
1241-1254. 
[7] Z. Zhang and Y. Yang, “Low-Loss Switching Fabric Design for Recirculating Buffer in WDM Optical 
Packet Switching Networks Using Arrayed Waveguide Grating Routers,” IEEE Trans. Comm., vol. 54, 
no. 8, Aug. 2006, pp. 1469-1472. 
[8] S. Liew, G. Hu, and H. Chao, “Scheduling Algorithms for Shared Fiber-Delay-Line Optical Packet 
Switches─Part I: The Single-State Case,” J. Lightw. Technol., vol. 23, no. 4, April 2005, pp. 
1586-1600. 
[9] F. Choa, X. Zhao, X. Yu, J. Lin, J. Zhang, Y. Gu, G. Ru, G. Zhang, L. Li, H. Xiang, H. Hadimioglu, and 
H. Chao, “An Optical Packet Switch Based on WDM Technologies,” J. Lightw. Technol., vol. 23, no. 3, 
March 2005, pp. 994-1014. 
[10] M. Yuang, I. Chao, B. Lo, P. Tien, J. Chen, C. Wei, Y. Lin, S. Lee, and C. Chien, “HOPSMAN: An 
Experimental Testbed System for a 10-Gb/s Optical Packet-Switched WDM Metro Ring Network,” 
IEEE Comm. Magazine, vol. 46, no. 7, July 2008, pp. 158-166. 
[11] K. Obermann, S. Kindt, D. Breuer, and K. Petermann, “Performance Analysis of Wavelength 
Converters Based on Cross-Gain Modulation in Semiconductor-Optical Amplifiers,” J. Lightw. Technol., 
vol. 16, no. 1, Jan. 1998, pp. 78-85. 
[12] B. Sarker, T. Yoshino, and S. Majumder, “All-Optical Wavelength Conversion Based on Cross-Phase 
Modulation (XPM) in a Single-Mode Fiber and a Mach-Zehnder Interferometer,” IEEE Photon. 
Technol. Lett., vol. 14, no. 3, March 2002, pp. 340-342. 
[13] H. Li and I. Thng, “Cost-Saving Two-Layer Wavelength Conversion in Optical Switching Network,” J. 
Lightw. Technol., vol. 24, no. 2, Feb. 2006, pp. 705-712. 
[14] V. Eramo, M. Listanti, and M. Spaziani, “Resources Sharing in Optical Packet Switches With 
Limited-Range Wavelength Converters,” J. Lightw. Technol., vol. 23, no. 2, Feb. 2005, pp. 671-687. 
[15] Y. Lin, M. Yuang, S. Lee, and W. Way, “Using Superimposed ASK Label in a 10-Gb/s Multihop 
All-Optical Label Swapping System,” J. Lightw. Technol., vol. 22, no. 2, Feb. 2004, pp. 351-361.  
[16] T. Tanemura, M. Takenaka, A. A. Amin, K. Takeda, T. Shioda, M. Sugiyama, and Y. Nakano, 
“InP–InGaAsP Integrated 1x5 Optical Switch Using Arrayed Phase Shifters,” IEEE Photon. Technol. 
Lett., vol. 20, no. 12, June 2008, pp. 1063-1065. 
[17] J. J . Hopfield and D. W. Tank, “Neural Computation of Decisions in Optimization Problems,” Biol. 
Cyber., vol. 52, pp. 141-152, 1985. 
[18] T. X. Brown, “Neural Networks for Switching,” IEEE Commun. Mag., vol. 27, pp. 72-81, Nov. 1989. 
