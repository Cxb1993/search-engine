說，這些掃雷機器人由於要把偵測地雷和清
除地雷這兩項工作同時完成，因此體積都相
當龐大，造價也十分高昂，實在非一般人員
或機構所能負擔，也因此並沒有被廣泛地使
用。有鑑於此，本計畫的主要目的是想設計
並製作一部價格低廉、能在崎嶇地形運動、 
定位精確、且能以無線遙控方式工作的地雷
偵測機器人，使其能進行地雷偵測的工作。
雖然這種機器人並不具有清除地雷的能力，
但只要地雷能被精確地定位出來，一般的平
民百姓即可免除誤觸地雷的危險，而在經費
或能力許可的情況下，日後再對這些地雷進
行清除。 
表一 部分國家或地區未被清除的地雷數目 
 
三、研究方法、進行步驟及執行進度 
第一年已完成之項目 
本計畫第一年著重於機器人實體架構
的設計、製作與實現，最後希望實際地進行
測試，所以將整體計畫部分將分成下列四個
研究子題：(1) 地雷偵測機器人機構之設計  
(2) 地雷偵測機器人運動學及動力學方程式
的推導與驗證 (3) 馬達與驅動器的設計與
安裝 (4) 系統整合與功能測試。 
 
3.1 地雷偵測機器人機構之設計 
機器人移動平台之機構設計常用的方
法有輪式，履帶式或腿式等，而考慮的因素
有地形、機械複雜性和控制的複雜性等。 
本計畫是採用履帶式(tracked)作為設計的架
構，圖一所示為本計畫所使用的履帶機器
人。其特色是有著良好的爬坡性能和不錯的
越野能力，和輪式系統比較，履帶式系統的
受力面積比輪式系統更大，這是因為履帶式
系統所受的摩擦力均勻分佈在履帶上，而輪
形系統的摩擦力只是集中在輪胎與地面的接
觸面上而已，但就抓地力而言，它們是一樣
的，但在轉彎或者爬坡時，履帶式系統所受
的摩擦力分佈不會像輪式系統那樣發生劇
變，所以就表現出更好的操控性。另外履帶
系統也是屬於兩輪差速驅動系統的延伸應
用，履帶與地面的接觸點會產生側滑(skid 
steering)現象，因此在作航行位移計算（dead 
reckoning）時會產生較大的誤差。 
國家/地區 未被清除地雷數目 
Angola 一千萬至一千五百萬 
Afghanistan 九百萬至一千萬 
Egypt 兩千兩百萬 
Cambodia 八百萬至一千萬 
Kuwait 五百萬至一千萬 
Latin 
America 
三百萬至一千萬 
Mozambique 兩百萬 
Somania 一百萬 
Republic of 
former 
Yugoslavia 
六百萬 
Sri Lanka 三百五十萬 
 
   圖一 計畫中所使用的履帶式機器人 
 
 
 2
其中， 為法線方向，nG τG為切線方向。 轉換
到直角坐標系 xyo 中，可以得到：  
2 2
p p
ni
x y
F m ρ
+= ⋅∑    
2 2
p p p p
i
p p
x x y y
F m
x y
τ
+= ⋅ +∑
   
 
 
3.3 馬達與驅動器的設計與安裝 
計畫中選取的馬達為東元馬達編號
DBT56-80C1AE 的伺服馬達[9]，此馬達的額
定輸出功率為 80W、電源輸入為 DC24V，內
部裝有解碼器。此馬達也有相對應的驅動器
可供搭配，型號為 CSBL900-CS80C1[10]。有
關此馬達及其驅動器的外觀如圖四所示。 
 
 
 
 
 
 
 4
 
 
    圖四 直流馬達及其驅動器的外觀圖 
至於在中央處理控制器採用的是 Microchip 
所 生 產 的 dsPIC 數 位 控 制 器
dsPIC30F4011[11]。 
 
3.3.1 dsPIC30F4011之介紹 
    為16 位元數位訊號控制器(DSC)，具有
處理周邊模組訊號與控制的功能。IC 內建的
周邊功能對照，如表二所示。其中包含:48K 
位元組的內建快閃記憶體程式空間（16K指
令字元）、2K 位元組的內建資料暫存器、
1K的EEPROM、16 位元計時計數器、16 位
元長的輸出比較或是脈寬調變功能、10 位元
類比數位轉換器、兩組非同步串列傳輸模
組、四線SPI 傳輸模組與I2C 模組等功能。
dsPIC DIP包裝腳位圖如圖五所示，中央處理
模組硬體設計圖及外觀圖則如圖六及圖七所
示。dsPIC 除列表的基本功能之外，還可以
作為線上序列程式燒錄（ In-Circuit Serial 
Program-ming）。dsPIC採用CMOS技術，因
此具有低耗電、快速快閃記憶體技術、廣泛
的操作電壓(2.5V∼5.5V）與擴展型的溫度操
作範圍（-40℃∼+125℃）等多項優點。同時
與一般具有控制器設計的IC 的最大差異，係
具有內建高速類比－ 數位轉換（A/D），係
使用10位元的解析度、500Ksps 取樣頻率以
及4組同時取樣與保持的電路設計架構。
dsPIC 設計的工作速度最高可達30MIPS。由
於dsPIC具有快速的執行的能力，因此本計畫
經過評估後，認為符合數學運算等設計需
求。同時具有可重複線上燒錄程式的特性，
亦有利於成事韌體在開發過程中的修改與驗
證， 其快閃程式記憶體在工業溫度範圍內最
少可進行10,000 抹除/寫入的週期。 
表二 控制器dsPIC30F4011 內建功能表 
 
 
圖六 中央處理模組硬體設計圖 
 
圖七 Microchip dsPIC30F4011 實體圖
 6
流(Induce Current)，依據楞次定律將產生一磁
場反抗外加磁場的變化，如果時變的磁場垂
直通過一平面導體，可視同很多同心圓所組
成的平面導體與時變的磁場磁交鏈，同心圓
導體感應出形同漩渦式的電流，所以稱此電
流為渦電流(Eddy Current)，此渦電流會與線
圈產生互感的作用，當待測物與線圈之距離
變化時，互感的程度也會跟著改變，而造成
線圈電感值的改變，換句話說，即為金屬與
線圈距離變化時，產生電流變化，並利用外
加一電流計來判讀電流變化大小，給使用者
透過電流的大小變化來判讀金屬物體的大
小、遠近，此為近代金屬探測器之原理。 
 
圖九 M97 金屬探測器外觀圖[12] 
    透過 M97 資料文件以及圖九之外觀，可
以發現M97可由指針式電流計顯示金屬物體
之遠近與大小。因此，本論文選擇由電流計
拉出兩條線路，並把此線路連接至微處理器
dsPIC 的數位輸入接腳，利用數位類比轉換
器，將電流計的刻度顯示轉換成數位訊號，
以供 PC 端判讀並利用。 
 
4.1.2 金屬探測器諸元介紹 
    本研究選用的金屬探測器為 Fisher 公司
出品的 M97 探測器。目的專為尋找掩埋或鋪
設的閥門或人孔蓋，或任何其他隱藏的金屬
物體。它也能對含有鋁，銅和鉛的目標產生
反應。以下為諸元介紹[12]。  
4.1.3 金屬探測器轉盤總成  操作頻率：4.5KHz 
 靈敏度：0.2mv RMS，靈敏調整 12：1     金屬探測器轉盤機構，目的在於支撐並
固定金屬探測器並擴大掃雷機器人車前的探
測範圍，使其偵搜範圍為車前約 50 度角的扇
型範圍，整體結構主要由轉盤與支撐架構成。 
 顯示：(1)指針電表：1mA；0~100 刻度 
 (2)內藏式擴音器：16 歐姆阻抗 
 電源：9V×2 只 
 電池使用時間：25~35 小時  
4.1.4 轉盤驅動  電源消耗量：13.8mA 
 探測線圈：直徑 8 英吋(20.32 公分)     轉盤的運動與利用極限開關限制的車前
探測範圍如圖十所示；轉盤控制動作為一自
動往復機構，當轉盤機構觸碰到兩側的極限
開關時，微處理器數位輸入埠接收到開關狀
態變化，由微處理器執行邏輯判斷決定正轉
或反轉，並透過數位輸出埠連接至馬達驅動
IC，下達正反轉指令，使其達成轉盤往復之
運動，進而擴大金屬探測器在機器人前方之
探測範圍。 
 儀器重量：1.5Kg(8 英吋) 
 探測深度：約 40 吋(102 公分) 
 儀器長度；38~50 吋(96~127 公分)；可
調整 
 
 
 8
4.1.5 探測器支撐架 
    為求穩定並支撐金屬探測器之位置，需
要另行使用支撐架加以固定探測器，以避免
探測器受到外在因素干擾造成誤判。此外，
為了適應不同路面或環境的可能因素，需將
支撐架設計成能夠加以手動調整高低與角
度，成品如圖十一所示。 
區塊 A：連接轉盤與支撐架並加以固定，以
求穩定探測器。 
區塊 B：連接探測器與支撐架，並可使用共
八顆螺絲調整探測器高度與角度。 
4.2 GPS 的安裝與測試 
4.2.1 全球定位系統 
    全 球 定 位 系 統 （ NAVSTAR/GPS ，
NAVigation Satellite Timing And 
Ranging/Global Positioning System ，簡稱
GPS）原是美國國防部為了軍事定時、定位
與導航的目的所發展希望以衛星導航為基礎
的技術可構成主要的無線電導航系統。全球
定位系統架構可分為三個部份:太空部份，控
制部份及使用者部份，如圖十二所示。 
衛星
24+3 衛星
週期11時58分
高度20,200公里
監控系統
時間同步
預估衛星軌道
數據傳送
衛星狀況監測
接收儀
接收虛擬距離與相位信號
接收衛星座標
定位計算
GPS接收儀  
圖十二 全球定位系統 
    GPS系統之太空部份針對運行的衛星本
體而言，目前係由 27 顆衛星組成，其中 24
顆為操作衛星，3 顆為備用衛星。三個備用
衛星的功能主要在於作為當主衛星失效時之
備用及加強衛星之幾何分佈，在平時，這些
備用衛星也可用於定位，故為主動預備
(active spare)方式。而每顆衛星上面都有一個
頻率穩定的原子鐘，產生 10.23MHz 的穩定
基頻用以組成 C/A 碼(頻率 1.023MHz)、及 P
碼((頻率 10.23MHz)並調制在 L1 載波(頻率
154*10.23MHz，波長為 19cm)及 L2 載波(頻
率 120*10.23MHz，波長為 24cm)上。L1 及
L2 皆調制為 50BPS(Bit Per Second)的衛星訊
息，兩者組成為無線電雙頻訊號，持續向地
面發射。 
    GPS 之地面系統是於 1985 年 9 月完成。
整個系統包括一個主控站、3 個地面天線及 5
個監理站，每個監裡站均擁有數個 GPS 雙頻
接收器、標準原子鐘、感應器及資料處理機。
每個監測站，每天 24 小時不停地連續追蹤觀
測每一個衛星，並將每 1.5 秒之虛擬距離觀
測量、觀測所得氣象資料及電離層資料聯合
起來求解，得到每 15 分鐘一組之均勻化數
據，然後將數據在送至主控站。 
    對於 GPS 導航定位而言，GPS 衛星是一
動態已知點，它是依據衛星傳送的星曆計算
而得。所謂衛星星曆是一系列描述衛星運動
及其軌道的參數。每顆 GPS 衛星所傳送的星
曆，皆由 GPS 的地面監控系統提供。GPS
衛星進入軌道運行之後，衛星的健康狀況，
即衛星上的各種設備是否正常運作，以及衛
星是否依據預定軌道運行，皆都需要由地面
設備進行監測和控制。此外，地面監控系統
還有一個重要工作，保持各顆衛星處於同一
時間標準即 GPS 時間系統。因此地面監控系
統監測各顆衛星的時間，且計算得它們的有
關改正數，進而由導航訊息傳送給用戶，以
確保處於 GPS 系統正常。 
    接收儀部份所指的是能夠接收 GPS 衛
星訊號及資料處理之接受儀。由於 GPS 的用
途相當廣泛，使用者部份可依目的之不同而
有不同功能、精度的接收儀及應用對象而有
所不同的特性。如依用途性質而言，GPS 信
號分為民用的標準定位服務（SPS，Standard 
 10
    所以2341.672,N中的小數點第三位代表
每多 1，距離加 1.8 公尺，而一般 GPS 接收
儀的由於受到 AS 效應影響都有的十五公尺
左右的誤差。 
區塊 B:左、右極限開關，負責限制金屬探測
器左右擺盪幅度，當有碰觸開關事件
發生時，由控制電路偵測變化並控制
轉盤反方向轉動。 
區塊 C:左、右伺服馬達驅動器，負責接收控
制電路板的 PWM 脈波與控制脈波，
進而驅動直流無刷馬達，控制機器人
運動路徑。 
 
4.3 系統整合與功能測試 
4.3.1 硬體整合 
    將上述章節中提到的各硬體元件與系統
程式結合後，完成測試探測地雷機器人的系
統整合，第一層外觀圖如圖十四所示。 
區塊 D:控制電路板，分為主控制電路與轉盤
驅動電路，負責接受 PC 端命令、發
出控制脈波、執行邏輯判斷與數位類
比信號轉換等。 
 
A 
區塊 E:限電流 10 安培的固態繼電器(Solid 
State Relay)，當作伺服馬達驅動器總
開關，可由控制電路發出訊號開啟或
關閉。並作為過電流保護器，以防電
池供給過大瞬間電流，避免驅動器燒
毀。 
圖十四 探測地雷機器人第一層各部元件 
    以下為圖十四各區域功能簡介： 
區塊 A: M97 金屬探測器與其控制面板，負
責探測車體前方金屬物體，並回傳電
流訊號變化給控制電路板，以供 ADC
訊號轉換。 
區塊 F:由湯淺公司出品的 12 伏特、7 安培小
時的鉛酸電池。串連 2 顆供給 24V 給
伺服馬達驅動器使用。 
    由於機器人的平面空間不足，所以另外
加上一層平台作為空間擴充，如圖十五所
示；以下為圖十五各區域功能簡介： 
區塊 G:全球衛星定位系統(GPS)收發模組，
負責接收 NMEA 格式資料，透過 PC
端處理並切割字串資料。 
區塊 H:無線 RS232 模組，由兩個模組分開負
責不同訊號。模組 A 負責傳送載具系
統狀態與接收 PC 端控制訊號。模組 B
負責接收 GPS 模組的資料並回傳給
PC 端處理。 
 
 
 
 
B B 
D 
C C 
E 
F 
 12
 
圖十九 GPS 介面介紹-GPS 座標值 
區塊 A:顯示當前經緯度座標位置，格式為度
分表示，如上圖 2341.672,N 代表北緯
23 度 41.672 分。 
區塊 B:負責儲存目前的座標，每按下按鈕一
次後會將目前座標存在指定的純文字
檔(副檔名.txt)一次，以利日後查詢，
如圖二十所示； 
 
圖二十 將經緯度座標存在純文字檔中 
區塊 C:當按下區塊 B 的按鈕時，經緯度會同
步記錄在 C 區的表格中，供使用者即
時查詢已存了哪些點。 
 
圖二十一 GPS 介面介紹-GPS 字串值 
區塊 D:顯示 GPS 接收儀機碼，由於機碼為
一連串 NMEA 格式字串，難以用人工
閱讀發式辨識，因此在設計上用分頁
模式將區塊 D 加以隱藏，有需要時再
開啟此分頁閱覽。 
A 
B 
C 
4.3.3 系統測試 
    下接圖二十二，測試轉盤運動狀況，驗
證機構能限制探測器在車前往返運動。 
 
(a) T=0 秒 
 
(b) T=1 秒 
 
D 
(c) T=2 秒 
圖二十二 轉盤運動 
 14
    室外測試主要是驗證履帶機構是否能克
服崎嶇不平的路面，同時利用 GPS 進行定
位，測試場地為雲林科大電機系館頂樓。如
圖二十四所示。 
 
 
(d) 前進控制 
 
(e) 左轉控制 
 
(f) 右轉控制 
(a) T=0 秒 
 
(b) T=2 秒 
 
圖二十三 室內測試(續) 
 
 
(c) T=4 秒  
圖二十四 室外測試  
 16
 18
IEEE/RSJ International Conference on 
Intelligent Robots and Systems, vol. 2, 
pp. 1066-1071, 1998. 
[2] G. A. Borges, M. J. Aldon, and T. Gil, 
“An optimal pose estimator for 
map-based mobile robot dynamic 
localization: Experimental comparison 
with the EKF”, Proceedings of the IEEE 
International Conference on Robotics 
and Automation, vol. 2, pp. 1585-1590, 
2001. 
[3] J. Forsberg, U. Larsson, and A. 
Wernersson, “Mobile robot navigation 
using the range-weighted Hough 
transform”, IEEE Robotics and 
Automation Magazine, vol. 2, pp. 18-26, 
1995. 
[4] P. Jensfelt and H. I. Christensen, “Pose 
tracking using laser scanning and 
minimalistic environmental models”, 
IEEE Transactions on Robotics and 
Automation, vol. 17, pp. 138-147, 2001. 
[5] P. Jensfelt and S. Kristensen, “Active 
global localization for a mobile robot 
using multiple hypothesis tracking”, 
IEEE Transactions on Robotics and 
Automation, vol. 17, pp. 748-760, 2001. 
[6] U. Larsson, J. Forsberg, and A. 
Wernersson, “Mobile robot localization: 
Integrating measurements from a 
time-of-flight laser”, IEEE Transactions 
on Industrial Electronics, vol. 43, pp. 
422-431, 1996. 
[7]  K. Nagatani, H. Ishida, S. Yamanaka, 
and Y. Tanaka, “Three-dimensional 
localization and mapping for mobile 
robot in disaster environments”, 
Proceedings of the IEEE/RSJ 
International Conference on Intelligent 
Robots and Systems, vol. 3, pp. 
3112-3117, 2003. 
[8] A. C. Victorino, P. Rives, and J. J. 
Borrelly, “Localization and map building 
using a sensor-based control strategy”, 
Proceedings of the IEEE/RSJ 
International Conference on Intelligent 
Robots and Systems, vol. 2, pp. 937-942, 
2000. 
[9] http://www.1111motor.com/product05.ht
m 
[10] http://www.1111motor.com/DownLoad/
CSBL900-0305.pdf 
[11] http://www.microchip.com/downloads/en
/DeviceDoc/70135E.pdf 
[12] M97 metal detector datasheet. 
 
 
 
 
 
 
 
 
Intelligent Systems、Biomimetic Machines and Robots Embracing Complexity in Natural 
Intelligence Intelligent Control and Robotics，可說是涵蓋了人工智慧與機器人學之理論、技
術、和應用等各個層面。而除論文發表外，大會也安排了三場主題演講(Plenary talk)，題
目分別為 The Pareto Operating Curve for Risk Minimization in Life and Robotics、
Mathematical Modelling of Complex Systems and its Possible Applications、及 Graph Based 
Semi-supervised Learning，另外現場也有機器人展示。 
     此次敝人共發表了六篇論文，其中四篇由博士班的學生加以宣讀發表，至於六篇論
文的題目則如上所示，而敝人研究的主要重點偏重於PSO (particle swarm optimization)、
SVR(support vector regression)的應用及機器人的路徑規劃和感測技術。在發表論文的過程
中有多位學者提出問題和我們討論，彼此交換心得，也對如何發表論文的技巧有更進一步
的認識。 
 
二、與會心得： 
能有機會和各國的專家學者專家交換研究心得是相當寶貴的經驗，參與此次國際會議
以及在日本的所見所聞，讓我收穫良多，而且也有下列幾點心得： 
(1) 從各國發表之論文來看，可以發現雖然台灣之專家學者在各項研究方面均有不錯
的表現，不過各國的進步皆相當快速，我國專家學者應該持續努力，才能保持和
世界各國的競爭能力。 
(2) 政府目前有多項獎勵措施，鼓勵博士班學生出國參加國際會議，以增廣見識，學
生就深覺此行有相當多的心得與收穫，此種獎勵措施應繼續實施，以開拓台灣博
士班學生視野，並培養未來的優秀研究人才。 
(3) 以亞洲地區的標準來說，我國學者的外語能力相當優秀，臨場報告的表現也都在
水準之上。 
 
三、建議事項： 
    大會提供與會者討論和休息的空間嚴重不足，也造成與會者在相互討論和交流方面的
諸多不便，這些缺失可提供我國承辦國際會議時借鏡。如果各項因素可以配合的話，建議
國內的各個大學多爭取機會主辦國際研討會，除了學術之交流外，應也可乘主辦國際會議
之便，宣傳台灣的眾多風景名勝，以吸引各國嘉賓。 
 
四、攜回資料名稱： 
    2009(AROB 14th ‘09)論文集之光碟片乙片。 
 
 
 
 1 1
2 2
( 1) ( ) ( ) ( ( ) ( ))
( ( ))  for 1,  2, ,    
l
i i i i
g
i
V k k V k c r P k P k
c r P P k i m
ω+ = ⋅ + ⋅ ⋅ −
+ ⋅ ⋅ − = "
    (3) 
where the acceleration coefficients 
1c  and 2c  are fixed, 
1r  and 2r  are two random numbers. The inertia weight 
starts with a high value maxω  and linearly decreases to 
minω  at the maximal number of iterations. From hereafter, 
this PSO algorithm will be referred to as the time-varying 
inertia weight factor method (PSO-TVIW). 
Eberhart and Shi[12] found that the PSO-TVIW method 
is not very effective in tracking dynamic systems. 
Considering the dynamic nature of real-world 
applications, they proposed a random inertia weight factor 
to track dynamic systems. In their method, the 
representations are the same as those in the PSO-TVIW 
method except that the inertia weight factor changes 
randomly. In the rest of this paper, this algorithm will be 
referred to as the PSO-RANDW method. 
An automation strategy for the PSO with time- 
varying acceleration coefficients was proposed[13]. The 
objective is to enhance the global search in the early part 
of the optimization and to encourage the particles to 
converge toward the global optimum at the end of the 
search. In their method, the representations are the same 
as those in the PSO-TVIW method except that the 
acceleration coefficients change according to linear 
time-varying evolution. From hereafter, this algorithm 
will be referred to as the PSO-TVAC method. 
A time-varying nonlinear function modulated inertia 
weight adaptation was proposed by Chatterjee and 
Siarry[14]. In this method, the acceleration coefficients are 
also fixed. However, the inertia weight starts with a high 
value maxω  and nonlinearly decreases to minω  at the 
maximal number of iterations. This means that the 
representations are the same as those in the PSO-TVIW 
method except that the inertia weight factor changes 
according to 
max
min max min
max
( ) ( )
iter iter
k
iter
α
ω ω ω ω−= + ⋅ −⎛ ⎞⎜ ⎟⎝ ⎠   (4) 
where 
maxiter  is the maximal number of iterations and 
iter  is the current number of iterations. 
2. PSO-NTVE method based on orthogonal arrays 
In this section, based on the concept presented[13,14], a 
PSO-NTVE method is proposed. In the proposed PSO 
method, the inertia weight is given as described in (4). 
The gnitive parameter 
1c  starts with a high value 
1maxc and nonlinearly decreases to 1minc . Meanwhile, the 
social parameter 2c  starts with a low value 2minc  and 
nonlinearly increases to 2 maxc . This means that the 
mathematical expressions are given as shown in (1), (4), 
and 
 
1 1
2 2
( 1) ( ) ( ) ( ) ( ( ) ( ))
( ) ( ( ))  for 1,  2, ,    
l
i i i i
g
i
V k k V k c k r P k P k
c k r P P k i m
ω+ = ⋅ + ⋅ ⋅ −
+ ⋅ ⋅ − = "
 (5) 
max
1 1min 1max 1min
max
( ) ( )
iter iter
c k c c c
iter
β−= + ⋅ −⎛ ⎞⎜ ⎟⎝ ⎠  (6) 
max
2 2 max 2min 2 max
max
( ) ( )
iter iter
c k c c c
iter
γ−= + ⋅ −⎛ ⎞⎜ ⎟⎝ ⎠  (7) 
where ,α  ,β  and γ  are constant coefficients.  
The proposed PSO method will encourage particles to 
wander through the entire search space, instead of 
clustering around a local optimum, during early iterations 
of the optimization. On the other hand, the algorithm will 
expedite convergence toward the global optimum during 
latter iterations. In this manner, the optimal solution 
should be obtained in a computation-efficient way. 
To determine the optimal combination of ,α  ,β  and 
γ , all combinations must be tested. For example, if it is 
assumed that ,α  ,β  and γ are all within the set 
{0.5, 1, 1.5, 2, 2.5}. Then there are 35  possible 
combinations for the values of ,α  ,β  and .γ  However, 
if ,α  ,β  and γ  have many possible values, then it may 
not be possible to perform the experiments of all 
combinations. An 6
25(5 )L  is an orthogonal array that can 
deal with at most six variables in five possible values with 
25 experiments[15,16]. Instead of 35  possible combin- 
ations, one only needs to perform 25 experiments to 
determine the optimal combination of ,α  ,β  and .γ  
3. PSO-NTVE tuning PID controllers 
In a PID control system, the time-domain form of a 
PID controller is usually expressed as 
1 1 1 1 1 1
2 2 2 2 2 2
( ) ( )  ( ) ( )
( )  ( ) ( )
P I D
P I D
u t K e t K e t dt K e t
K e t K e t dt K e t
= + +
+ + +
∫
∫


 (8) 
where ( )u t  is the control signal, 1( ),e t  2 ( )e t  and 
1( ),e t  2 ( )e t  are the error signals and their derivatives, 
and 1 1 2, , , P I DK K K"  denote the proportional gain, the 
integral gain, and the derivative gain, respectively. In the 
PSO, a particle contains these gains. The optimal values 
of these gains are obtained by the PSO-NTVE method 
according to a defined fitness. 
III. A SIMULATION EXAMPLE 
1. Pendubot system 
The general dynamic model of underactuated 
mechanisms with m  actuated joints from a total of n  
joint can be expressed as follows[17] : 
( ) ( ,  ) ( )+ + =  M q q C q q q G q τ  (9) 
where nR∈q  is the position vector indicating link 
angles, ( )M q  denotes the n n×  inertia matrix, 
( ,  ) nR∈ C q q q  is the vector of damping, coriolis, and 
The Fourteenth International Symposium on Artificial Life and Robotics 2009 (AROB 14th ’09),
B-Con Plaza, Beppu, Oita, Japan, February 5 - 7, 2009
©ISAROB 2009 224
 V. CONCLUSION 
A PSO-NTVE method is presented in the designing of 
an optimal PID controller for a pendubot system. An 
orthogonal array is adopted to determine the parameters 
of the proposed PSO method. Then, this PSO-NTVE 
method is applied to design an optimal PID controller for 
asymptotically stabilizing the pendubot system. The 
simulation results verify the feasibility and the validity of 
the proposed PSO-NTVE method in the design of an 
optimal PID controller of a pendubot system.
 
 
PID gains 
PSO method 
1PK  1IK  1DK  2PK  2IK  2DK  
Fitness(x10-2)
PSO-TVIW 1.373742 -0.521886 -1.959868 -9.999187 -0.207341 -2.865347 8.638798 
PSO-RANDW 0.151508 0.063432 -8.694078 -9.991733 0.014415 -9.999336 8.588553 
PSO-TVAC 0.912552 -0.760333 -2.479824 -9.999038 -0.307233 -3.409042 8.638881 
PSO-NTVE 1.751383 -0.103256 -3.467748 -9.227502 -0.045068 -4.446959 8.765612 
 
ACKNOWLEDGMENT 
This work was supported in part by the National Science 
Council, Taiwan, R.O.C., under grant 
NSC96-2628-E-224-007-MY2. 
 
REFERENCES 
[1] Spong MW, Block DJ (1995), The Pendubot: a 
mechatronic system for control research and 
education. Proceedings of the 34th IEEE conference 
on decision and control, pp. 555-556 
[2] Zhang M, Tarn TJ (2002), Hybrid control of the 
Pendubot. IEEE/ASME Trans on Mechatronics 
(1):79-86 
[3] Fantoni I, Lozano R, Spong MW (2000), Energy 
based control of Pendubot. IEEE Trans on 
Automatic Control  45(4):725-729 
[4] Zhao D, Yi J (2003), Swing up Pendubot with a 
GA-tuned bang-bang controller. Proceedings of the 
IEEE International Conference on Robotics, 
Intelligent Systems and Signal Processing, pp. 
752-757 
[5] Kennedy J, Eberhart R (1995), Particle swarm 
optimization. Proceedings of the IEEE International 
Conference on Neural Networks, pp. 1942-1948 
[6] Gaing ZL (2004), A particle swarm optimization 
approach for optimum design of PID controller in 
AVR system. IEEE Trans on Energy Conversion 
19(2):384-391 
[7] Eberhart RC, Shi Y (1998), Comparison between 
genetic algorithms and particle swarm optimization. 
Proceedings of the IEEE International Congress on 
Evolutionary Computation, pp. 611-616 
[8] Boeringer DW, Werner DH (2004), Particle swarm 
optimization versus genetic algorithms for phased 
array synthesis. IEEE Trans on Antennas and 
Propagation 52(3):771-779 
[9] Mendes R, Kennedy J, Neves J (2004), The fully 
informed particle swarm: Simpler, maybe better. 
IEEE Trans on Evolutionary Computation 
8(3):204-210 
[10] Elbeltagi E, Hegazy T, Grierson D (2005), 
Comparison among five evolutionary-based 
optimization algorithms. Advanced Engineering 
Informatics 19(1):43-53 
[11] Shi Y, Eberhart RC (1998), A modified particle 
swarm optimizer. Proceeding of the IEEE 
International Conference on Evolutionary 
Computation, pp. 69-73 
[12] Eberhart RC, Shi Y (2001), Tracking and optimizing 
dynamic systems with particle swarms. Proceeding 
of the IEEE International Congress on Evolutionary 
Computation, pp. 94-100 
[13] Ratnaweera A, Halgamuge SK, Watson HC (2004), 
Self-organizing hierarchical particle swarm 
optimizer with time-varying acceleration 
coefficients. IEEE Trans on Evolutionary Comput 
8(3):240-255 
[14] Chatterjee A, Siarry P (2006), Nonlinear inertia 
weight variation for dynamic adaptation in particle 
swarm optimization. Computers and Operations 
Research 33:859-871 
[15] Montgomery DC (1991), Design and Analysis of 
Experiments, third edition. Wiley, New York 
[16] Hicks CR (1993), Fundamental Concepts in the 
Design of Experiments, fourth edition. Saunders 
College, Texas 
[17] Spong MW, Vidyasagar M (1989), Robot dynamics 
and control. Wiley, New York 
[18] Krohling RA, Jaschek H, Rey JP (1997), Designing 
PI/PID controllers for a motion control system based 
on genetic algorithms. Proceedings of the IEEE 
International Symmetric Intelligent Control, pp. 
125-130 
[19] Ogata K (2002), Modern control engineering, fourth 
edition. Prentice-Hall, New Jersey 
 
Table 1 Average values of the optimal PID gains and fitness (14) for 20 trials. 
The Fourteenth International Symposium on Artificial Life and Robotics 2009 (AROB 14th ’09),
B-Con Plaza, Beppu, Oita, Japan, February 5 - 7, 2009
©ISAROB 2009 226
 nonlinear relation to be estimated. 
T
1 2( ) [ ( ), ( ), , ( )]mt x t x t x t=x "  is the input vector, 
T
1 2( ) [ ( ), ( ), , ( )]pt y t y t y t= "y is the output vector, un  
and yn  are the maximal lags in the input and output, 
respectively. 
One can use a neural network to estimate the 
input-output relation of a nonlinear MIMO system. In 
this paper, an RBFN will be adopted since it has a 
simple structure. When the Gaussian function is chosen 
as the radial basis function, an RBFN can be expressed 
in the form 
2
,
2
1 1
                        for  1, ,
ˆ
ˆ ( 1) exp( )
2
L L
i
j i ij ij
i i i
j p
y t G w w σ= =
= ⋅ ⋅ ⋅
−+ = = −∑ ∑ x m  (2) 
where T1 2ˆ ˆ ˆ ˆ( ) [ ( ), ( ), , ( )]mt x t x t x t=x "  is the input 
vector, T1 2ˆ ˆ ˆ ˆ( ) [ ( ), ( ), , ( )]pt y t y t y t=y "  is the output 
vector, ijw  is the synaptic weight, iG  is the Gaussian 
function, im  and iσ  are the center and width of ,iG  
respectively, and L  is the number of the Gaussian 
functions, which is also equal to the number of hidden 
layer nodes. 
Given a set of training input-output pairs 
( ) ( )( , ),k kx y 1, 2, , ,k N= " where the identification 
problem of the nonlinear MIMO system is to determine 
the values of ,L  ,ijw  ,im  and ,iσ  to minimize the 
following performance index 
 
2
( ) ( )
1
ˆ ,
N
k k
k
J
=
= −∑ y y  (3) 
where ( )ˆ ky  is the corresponding output of the RBFN 
when the input xˆ  to the network is equal to ( ) .kx  
In usual cases, the initial values of ,L  ,ijw  ,im  
and iσ  are chosen first. Then a training algorithm is 
applied to the RBFN to search for the optimal 
combination of these values in an iterative manner. 
However, as mentioned above, there is no way to 
choose the initial values of ,L  ,ijw  ,im  and iσ  
systematically. Therefore, in the following section, an 
SVR approach will be proposed to serve for this 
purpose. 
 
III. INITIAL STRUCTURE OF RBFNS 
1. SVR-based method to determine ,L  ,im  and 
iσ  
The proposed SVR-based method can approximate an 
unknown function. Without loss of generality, an output 
of the RBFN, say 1 ,y  and its corresponding training 
pairs, ( ) ( )1( , ),
k kyx  1, 2, , ,k N= "  will be used for 
demonstration. Meanwhile, assume that a set of basis 
functions, ( ),  1, 2, , ,lg l M=x "  is given. Then the 
problem of function approximation is transformed into 
finding the parameters of the following basis linear 
expansion 
 
1
( , ) ( ) ,
M
l l
l
f g bθ
=
= +∑x xθ  (4) 
where 1 2( , , , )Mθ θ θ= "θ  is a parameter vector to 
be identified and b  is a constant to be determined.  
From Vapnik[1], one can find that the solution is to 
find ( , )f x θ  that minimizes 
 
1
1
( ) ( ( , )),
N
i
i
R L y f
N ε=
= −∑ xθ θi  (5) 
subject to the constraint 
 2 ,C<θ  (6) 
where ( )Lε ⋅  is the ε -insensitive loss function 
defined as 
 
0
( )L e
eε ε= −
⎧⎨⎩
for
,
otherwise
e ε≤
0ε > . (7) 
By using the Lagrange multiplier method, it was 
shown that the minimization of (5) leads a dual 
optimization problem[1]. 
In this paper, since the Gaussian function is used as 
the kernel function, (12) can be rewritten as 
 
2#
2
1
( , ) exp( )
2
,
SV
l
l
l l
f bλ λ σ=
−= − +∑ x xx  (8) 
where lx  denotes support vectors (SVs), # SV  is 
the number of SVs. Comparing (8) with (2), # ,SV  ,l  
,lλ  and lx  in (8) can be regarded as the ,L   ,i  
1 ,iw  and im  in (2), respectively. From the above 
derivation, the number of hidden layer nodes ,L  the 
initial parameters 1 ,iw  ,im  and iσ  of the RBFNs 
can be determined. 
 
2. LSR-based method to determine the synaptic 
weights 
In the above section, the initial values of 
11 21 1, , , Lw w w"  are determined. However, one still 
needs to determine the initial values of ,ijw  1 ,i L≤ ≤  
2 .j p≤ ≤  Based on the concept of LSR[2], these 
values can be determined by solving the following 
problem: 
Given ,L 11 21 1, , , ,Lw w w"  ,im 1 ,i L≤ ≤  and 
,iσ 1 ,i L≤ ≤  determine ,ijw 1 ,i L≤ ≤  2 ,j p≤ ≤  
to minimize the following performance index 
The Fourteenth International Symposium on Artificial Life and Robotics 2009 (AROB 14th ’09),
B-Con Plaza, Beppu, Oita, Japan, February 5 - 7, 2009
©ISAROB 2009 228
       
1(
)
y
k
 
Fig.2 The desired output for 1y  
1ˆ
(
)
y
k
 
Fig. 3 The final output for 1y  after 1000 epochs 
1
1ˆ
(
)
(
)
y
k
y
k
−
 
Fig. 4 The plot of 1 1ˆ( ) ( )y k y k−  after 1000 epochs 
2
(
)
y
k
 
Fig. 5 The desired output for 2y  
2ˆ
(
)
y
k
 
Fig. 6 The final output for 2y  after 1000 epochs 
2
2ˆ
(
)
(
)
y
k
y
k
−
 
Fig. 7 The plot of 2 2ˆ( ) ( )y k y k−  after 1000 epochs 
 
7. Conclusion 
With the integration of SVR, LSR, and the annealing 
robust algorithm, an RBFN is used for identification of 
an MIMO system. The proposed SVR approach has 
good performance in determining the number of hidden 
layer nodes and the initial parameters of the kernel. 
Then based on the values obtained by the SVR method, 
the synaptic weights can also be determined by using 
the technique of the LSR. After initialization, the 
annealing robust learning algorithm is adopted to adjust 
the parameters of the RBFN to approximate the MIMO 
system as closely as possible. The simulation results 
indicated that the proposed method can be used as a 
reliable technique for identification of nonlinear MIMO 
systems. 
Acknowledgment 
This work was supported in part by the National 
Science Council, Taiwan, R.O.C., under grants 
NSC96-2628-E-224-007-MY2. 
References 
[1] Vapnik VN (1995), The Nature of statistical 
learning Theory. Springer, New York 
[2] Larson R, Edwards BH, Falvo DC (2004), 
Elementary linear algebra, fifth edition. Houghton 
Mifflin Company, New York 
[3] Chuang CC, Jeng JT, Lin PT (2004), Annealing 
robust radial basis function networks for function 
approximation with outliers. Neurocomputing 
56:123-139 
[4] Chuang CC, Su SF, Hsiao CC (2000), The 
annealing robust backpropagation (BP) learning 
algorithm. IEEE Trans on Neural Networks 
11(5):1067-1077 
[5] Purwar S, Kar IN, Jha AN (2007), On-line system 
identification of complex systems using 
Chebyshev neural networks. Applied Soft 
Computing 7:364-372 
The Fourteenth International Symposium on Artificial Life and Robotics 2009 (AROB 14th ’09),
B-Con Plaza, Beppu, Oita, Japan, February 5 - 7, 2009
©ISAROB 2009 230
measurements or noisy data. Our purpose is to find a
suitable nonlinear identification model
ˆ(ˆ ) ( ( ), ( ), , ( ))x t t f x t x t t x t n t     (3)
of the time series, where (ˆ )x t t is the output of the
neural network and fˆ is the estimate of f , which
when subjected to the same past values of x , produces
an output (ˆ )x t t which approximates ( )x t t as
close as possible.
When the radial basis functions are chosen as
Gaussian functions, an ARRBFNs can be expressed as
the form
2
2
0 0
(ˆ ) exp( )
2
L L
j
l jl j jl
j j j
x t t G 
 

     x m ,
for 1, 2, ,l p  , (4)
where
lˆ
x is the lth output of the neural networks,
( ( ), ( ), , ( ))x t x t t x t n t   x is the input to the
neural networks, ,
jl
w 0 ,j L  1 ,l p  are the
synaptic weights, , 0 ,
j
G j L  are the Gaussian
functions, , 0 ,
j
j L m and , 0 ,
j
j L   are the
centers and the widths of ,
j
G respectively, and L is
the number of the Gaussian functions, in which we can
find that L also denotes the number of hidden nodes.
When utilizing an ARRBFNs for the identification
of time series, the goal is to minimize the index as
 
1
1
( ) ( ); ( )
N
N i
i
J h e h h
N
 

  , (5)
where
ˆ( ) ( ) ( )
i i i
e h x t t x t t    , (6)
h is the epoch number, ( )
i
e h is the error between the
ith desired output and the ith output of the ARRBFNs at
epoch h and ( ) is a logistic loss function and
defined as
2( )
[ ; ] ln 1
2
i
i
e
e
 

    
, (7)
where ( )h is a deterministic annealing schedule
acting like the cut-off points. Hence the ARRBFNs are
proposed to overcome the issues while the time series in
equation (1) facing with outliers and have faster learning
speed than the traditional RBFNs to attain perfect
prediction. In the following section, it will be shown how
to use SVR approaches to choose these initial values
methodically.
III. INITIAL STRUCTURE OF ARRBFNS BY
DIFFERENT SVR APPROACH
An SVR approach is used to approximate an
unknown function from a set of (input, output) samples
{ ( , ( )), 1, , }.
i i
x t t i N  x Suppose that a set of
basis functions { ( ), 1, 2, ..., }
k
g k mx is given, there
exists a family of functions that can be expressed as a
linear expansion of the basis functions. The theme is then
be changed into finding the parameters of the following
basis linear expansion
1
( , ) ( )
m
k k
k
g g b

 x x , (8)
where
1 2
( , , ..., )
m
  is a parameter vector to be
identified and b is a constant to be found. The
derivation of ARRBFNs for initial structure with the
different SVR will be derived in the following sections.
1. Initial Structure of the ARRBFNs by the -SVR
Approach
Vapnik[5] firstly proposed the -SVR approach.
The solution for the theme is to find ( , )g x  that
minimizes
1
1
( ) ( ( , ))
n
i
i
R L u g
n


  ix  , (9)
subject to the constraint
2
C , (10)
where ( )L is the -insensitive loss function defined
as
0 for
( )
otherwise ,
e
L e
e








(11)
for some previously chosen nonnegative number .
By using the Lagrange multiplier method,
proposed by Vapnik[5] and Smola et al. [7] and the inner
product of basis function ( )
k r
g x is replaced via the
kernel function
1
( , ) ( ) ( ) .
m
r s k r k s
k
K g g

x x x x (12)
It was shown in Vapnik [5] that the solution of the SVR
approach is in the form of the following linear expansion
of kernel function
* *
1
( , , ) ( ) ( , ) .
m
k k k
k
g K b  

  x x x (13)
This means that the parameter
i
 in equation (8) can be
represented as *
1
( ) ( )
m
k k i
i
g 

 x . Note that only some
of *( )
k k
  ’s are not zeros and the corresponding
vectors
k
x ’s are caled support vectors (SVs). The
derivation of ARRBFNs for initial structure with the
-SVR will be derived in next section.
2. Initial Structure of the ARRBFNs by the -SVR
Approach
The Fourteenth International Symposium on Artificial Life and Robotics 2009 (AROB 14th ’09),
B-Con Plaza, Beppu, Oita, Japan, February 5 - 7, 2009
©ISAROB 2009 232
proposed networks are chose as
ˆ(ˆ 6) ( ( ), ( 6), ( 12), ( 18)), 19x t f x t x t x t x t t      . (22)
That is, ( ), ( 6), ( 12), ( 18)x t x t x t x t   are selected as
the input variables of the ARRBFNs, and ( 6)x t as
the output variable of the ARRBFNs.
1000 simulation data points are generated from
equation (1), the former 500 points with five artificial
outliers are selected as the training data points to build
the proposed ARRBFNs of the Mackey–Glass time
series, and the rest 500 points as the testing data to test
the validity of the proposed ARRBFNs. The parameters
in -SVR are set as C=10, the Gaussian kernel function
with 0.35 , 0.15 , with the hidden nodes (i.e.
the number of SVs) is obtained as 10. Based on the
initial structure of the ARRBFNs and the learning
constant is 0.05, after 2000 epochs training, the final
training output, the error, the prediction output and the
corresponding error are shown in Fig. 1 (a) ~ (d), and the
final RMSE is 0.0094. Another initial structure is
obtained by an -SVR approach, the parameters are set
as C=1, 0.0009 and 0.15 , with the hidden
nodes is obtained as 10. Based on the above initial
structure, the learning constant is 0.05, after 2000 epochs
training, the results are shown in Fig. 2 (a) ~ (d), and the
final RMSE is 0.0096. From the simulation results show
that the proposed ARRBFNs can overcome the outliers
and attain a good training and prediction.
VI. CONCLUSIONS
In this paper, an  or  SVR based the
ARRBFNs with ARLA for the prediction of chaotic time
series with outliers is developed. We firstly utilize the
SVR approaches to determine the number of hidden
nodes, the initial parameters of the kernel and the initial
weights of the proposed ARRBFNs. Then the ARLA is
applied to tunes the parameters of the kernel and the
weights of the time series that can against outliers. From
the results indicated that the proposed method can be
used as a reliable technique for the prediction of chaotic
time series with outliers.
ACKNOWLEDGMENTS
This work was supported in part by the National Science
Council, Taiwan, R.O.C., under grants
NSC96-2628-E-224-007-MY2.
REFERENCES
[1] Gu H, Wang H (2007), Fuzzy prediction of chaotic
time series based on singular value decomposition.
Applied Mathematics and Computation 185:
1171–1185
[2] Zhang W, Wu ZM, Yang GK (2005), Genetic
programming modeling on chaotic time series.
Acta Electronica Sinica 33(4):748-751
[3] Harpham C, Dawson CW (2006), The effect of
different basis functions on a radial basis function
network for time series prediction: A comparative
study. Neurocomputing 69:2161–2170
[4] Chuang CC, Su SF, and Hsiao CC (2000), The
annealing robust backpropagation (BP) learning
algorithm. IEEE Trans. Neural Networks 11(5):
1067–1077
[5] Vapnik V (1995), The Nature of Statistical
Learning Theory, Springer, Berlin
[6] Jeng JT (2006), Hybrid approach of selecting
hyper-parameters of support vector machine for
regression. IEEE Trans. on Systems, Man, and
Cybernatics B36:699-709
[7] Smola AJ, Schölkopf B (1998), From
regularization operators to support vector kernels.
Neural Inf. Process System 10:343–349
[8] Schölkopf B, et al. (1997), Comparing support
vector machines with Gaussian kernels to radial
basis function classifiers. IEEE Trans. Signal
Process 45(11): 2758–2765
0 50 100 150 200 250 300 350 400 450 500
0.4
0.5
0.6
0.7
0.8
0.9
1
1.1
1.2
1.3
1.4
k
x(
t+
6)
(a)
0 50 100 150 200 250 300 350 400 450 500
-0.06
-0.04
-0.02
0
0.02
0.04
0.06
er
ro
r
k
(b)
0 50 100 150 200 250 300 350 400 450 500
0.4
0.5
0.6
0.7
0.8
0.9
1
1.1
1.2
1.3
1.4
k
x(
t+
6)
(c)
0 50 100 150 200 250 300 350 400 450 500
-0.05
-0.04
-0.03
-0.02
-0.01
0
0.01
0.02
0.03
0.04
0.05
er
ro
r
k
(d)
Fig. 1. (a) The final output, (b) the error, (c) the
prediction output and (d) the error of prediction for the
proposed structure with -SVR based under the training
data sets contain five artificial outliers
0 50 100 150 200 250 300 350 400 450 500
0.4
0.5
0.6
0.7
0.8
0.9
1
1.1
1.2
1.3
1.4
k
x(
t+
6)
(a)
0 50 100 150 200 250 300 350 400 450 500
-0.06
-0.04
-0.02
0
0.02
0.04
0.06
k
er
ro
r
(b)
0 50 100 150 200 250 300 350 400 450 500
0.4
0.5
0.6
0.7
0.8
0.9
1
1.1
1.2
1.3
1.4
k
x(
t+
6)
(c)
0 50 100 150 200 250 300 350 400 450 500
-0.05
-0.04
-0.03
-0.02
-0.01
0
0.01
0.02
0.03
0.04
0.05
er
ro
r
k
(d)
Fig. 2. (a) The final output, (b) the error, (c) the
prediction output and (d) the error of prediction for the
proposed structure with -SVR based under the training
data sets contain five artificial outliers
The Fourteenth International Symposium on Artificial Life and Robotics 2009 (AROB 14th ’09),
B-Con Plaza, Beppu, Oita, Japan, February 5 - 7, 2009
©ISAROB 2009 234
  ( )
⎪⎩
⎪⎨
⎧
=
≠−= −
0 if     ,log~
0 if     ,~
1
, 1
λ
λλλ λ
λ
yy
y
y
yz ,            (1) 
where λ  is the transformation parameter and 
N
i
N
i yy 1
~
=∏=  is the geometric mean of the system 
output. For a given λ , an RBFN with a single output 
can be represent as Hong [4] 
( ) ( ) ebxGweWxfyz L
j
jj ++=+= ∑
=1
)(,,
rrλ , (2) 
where )(xf
r
 is the output of the Box-Cox 
transformation-based ARRBFNs Chuange et al [7], e  is 
model error, [ ]TLwwwW ,,, 21 L= is the synaptic weight 
vector, and L is the number of hidden layer in the 
Box-Cox transformation-based ARRBFNs. The radial 
basis functions jG  are chosen as Gaussian functions that 
it can be express in the form 
⎪⎭
⎪⎬
⎫
⎪⎩
⎪⎨
⎧ −−= 2
2
2
exp)(
j
j
j
mx
xG σ
r
r
,          (3) 
where jm  and jσ  are the center and width of 
Gaussian functions, respectively. Hence, the )(⋅f  can 
be rewritten as  
b
mx
wWxf
j
jL
j
j +⎪⎭
⎪⎬
⎫
⎪⎩
⎪⎨
⎧ −−= ∑
= 2
2
1 2
exp),( σ
r
r
,  (4) 
Note that  
yy
y
yyz log~~
1lim),(lim 100 =⎥⎦
⎤⎢⎣
⎡ −= −→→ λ
λ
λλ λλ           (5) 
and the inverse of Box-Cox transformation upon ( )Wxf ,r  for given 0≠λ  and W  is 
( )( ) ( )λ λλ WxfyWxfzy ,~1,ˆ 11 rr −− +== .      (6) 
That is, when 0=λ , ( )⎟⎟⎠
⎞
⎜⎜⎝
⎛=
y
Wxfy ~
,expˆ
r
 in the 
proposed approach. The proposed structure is shown in 
Fig. 1. 
1G
LG
2G
1x
nx
2x Σ Χ
( )λ1−Z
( )λZ
f
e
y
yˆ
+−
1w
2w
Lw
iz
 WeightsInitial and 
Parameters Initial the
 determine to
 SVMan  Using
 Weightsand
 Parameters the
 UpdateTo
ARLAAn  Using
 
Fig.1. Box-Cox transformation-based ARRBFNs. 
 
2.1 The initial structure of Box-Cox transformation- 
based ARRBFNs by the SVR approach 
An SVR approach is used to approximate an 
unknown function from a set of 
samples ( ){ }Nizx ii ,,2,1,, Lr = , where the system output 
iy  is replaced by the normalized transformed 
response iz . Assuming that a set of basis functions { }mkxgk ,,2,1),( Lr =  is given, there exists a family of 
functions that can be expressed as a linear expansion of 
the basis function. Then, the problem of function 
approximation transforms into that finding the 
parameters of the following basis function linear 
expansion: 
( ) bxgxf m
k
kk += ∑
=1
)(,
rrr θθ               (7) 
where ( )mθθθ ,,1 Kr∈  is a parameter vector to be 
identified and b is a constant. Then, the solution for the 
problem is to find f that minimizes 
( ) ( )( )∑
=
−=
n
i
ii xfyLn
R
1
,1 θθ ε
rrr
,               (8) 
subject to the constraint 
      C<2θr ,                            (9) 
where )  ( ⋅εL  is the ε -insensitive loss function and 
defined as 
⎪⎩
⎪⎨
⎧
−
≤=
otherwise,    ,
,efor           ,0
)( ε
ε
ε e
eL               (10) 
for some previously chosen nonnegative numberε . In 
(9), the constraint is imposed to trade off the complexity 
of the solution. 
By using the Lagrange multiplier method, it can be 
shown Vapnik [8] that the minimization of (8) leads to the 
following dual optimization problem, minimize 
( )
,)()())((
2
1        
)()(,
1, 1
**
1 1
***
∑ ∑
∑ ∑
= =
= =
⎥⎦
⎤⎢⎣
⎡−−+
−−+=
N
sr
m
k
skrkssrr
N
r
N
r
rrrrr
xgxg
yQ
rrαααα
ααααεαα
 (11) 
subject to the constraint 
.,,1for     ,0    , *
11
* NrCrr
N
r
r
N
r
r K=<<= ∑∑
==
αααα  (12) 
In (11), the inner product of basis functions )(xgk
r
 is 
replaced via the kernel function 
( ) ∑
=
=
m
k
skrksr xgxgxxK
1
).()(,
rrrr
         (13) 
The kernel function determines the smoothness 
properties of solutions and should reflect a prior 
knowledge of the data. In the literature, the polynomials, 
B-spline and Gaussian kernel function often used Vapnik 
et al [9]. Hence the optimization of (11) is rewritten as 
 
( )
,),())((
2
1          
)()(,
1,
**
1 1
***
∑
∑ ∑
=
= =
−−+
−−+=
N
sr
srssrr
N
r
N
r
rrrrr
xxK
yQ
rrαααα
ααααεαα
  (14) 
It was shown in Vapnik et al [9] that the solution of the 
SVR approach is in the form of the following linear 
expansion of kernel functions (i.e. the parameter iθ  in 
The Fourteenth International Symposium on Artificial Life and Robotics 2009 (AROB 14th ’09),
B-Con Plaza, Beppu, Oita, Japan, February 5 - 7, 2009
©ISAROB 2009 236
 Because the output y must be positive in the Box-Cox 
transformation, the output of sinc function must shifts up 
5. Ten hundred training data )(xy  were generated by 
using uniformly distributed random ].10,10[−∈x  
Besides, the noise is a normal disturbance with )1,0(N  
and one hundred artificial outliers are added to the sinc 
function. Firstly, an initial structure of the Box-Cox 
transformation-based ARRBFNs is obtained by an SVR 
approach. The parameters in the SVR are set as 3=C , 
Gaussian kernel function with 3.0=σ and .05.0=ε  
The initial structure of the Box-Cox transformation- 
based ARRBFNs with the hidden nodes (i.e. the number 
of SVs) are obtained as 149. Secondly, the parameters of 
the Box-Cox transformation-based ARRBFNs are 
adjusted by the ARLA. After 100 epochs using the 
ARLA, the testing RMSE of the Box-Cox 
transformation-based ARRBFNs is 0.0263, as shown in 
Fig. 2. For a comparison study, a Box–Cox 
transformation-based radial basis function networks 
Hong [4] was constructed for the same data, but the 
testing RMSE is 0.4704, as shown in Fig. 3. Besides, the 
results of comparison with different training data and 
artificial outliers are shown in Table 1. From the 
simulation results, the proposed robust learning 
algorithms could indeed improve the learning 
performance as the training data contain outliers. 
 
Table 1: The results with different training data and 
artificial outliers are shown. 
RMSE The 
number 
of 
training 
data 
The 
number 
of 
artificial 
outliers 
Box-Cox 
transformation- 
based RRBFNs 
Box-Cox 
transformation- 
based RBFNs 
Hong [8] 
100 10 0.0549 0.4721 
1000 100 0.0263 (Fig.2) 0.4704 (Fig.3)
5000 500 0.0270 0.5131 
8000 800 0.0254 Out of memory 
10000 1000 0.0434 Out of memory 
 
IV. CONCLUSIONS 
In this paper, we proposed a fast identification 
algorithm with outliers, namely the fixed Box-Cox 
transformation-based ARRBFNs. Using an SVR 
approach determines the number of hidden nodes, the 
initial parameters of the kernel, and the initial weights of 
the proposed neural networks. At the same time, an 
ARLA is applied to adjust the parameters and weights. 
Finally, from the simulation results show that the fixed 
Box–Cox transformation-based ARRBFNs with ARLA 
have fast convergence speed for the identification 
algorithm with outliers. 
ACKNOWLEDGMENTS 
This work was supported in part by the National Science 
Council, Taiwan, R.O.C., under grants 
NSC96-2628-E-224-007-MY2. 
REFERENCE 
[1] Hong X (2007), Modified radial basis function 
neural network using output transformation, IET 
Control Theory & Applications 1(1): 1-8. 
[2] Hong X, Harris CJ (2003), Experimental design 
and model construction algorithms for radial basis 
function networks, Int. J. Syst. Sci. 34(14-15): 
733-745. 
[3] Box GEP, Cox DR (1964), An analysis of 
transformation (with discussion), Journal of the 
Royal Statistical Society, Series B, 26(2):211-252. 
[4] Hong X (2006), A fast identification algorithm for 
Box-Cox transformation based radial basis 
function neural network, IEEE Trans. Neural 
Networks 17(4):1064-1069. 
[5] Hong YP, Pan CT (1992), Rank-revealing QR 
factorizations and the singular value 
decomposition, Math. Comput. 58(192):213-232. 
[6] Hawkins DM (1980), Identification of Outliers, 
Chapman and Hall. 
[7] Chuange CC, Jeng JT, Lin PT (2004), Annealing 
robust radial basis function networks for function 
approximation with outliers, Neurocomputing, 
56(1):123-139. 
[8] Vapnik V (1995), The Nature of Statistical 
Learning Theory, Springer, Berlin. 
[9] Vapnik V, Golowich S, Smola AJ (1997), Support 
vector method for function approximation, 
regression estimation, and signal processing, 
Neural Inf. Process. Syst. 9:281-287. 
[10] Chuang CC, Su SF, Hsiao CC (2000), The 
annealing robust backpropagation (BP) learning 
algorithm, IEEE Trans. Neural Networks 
11(5):1067-1077. 
-10 -8 -6 -4 -2 0 2 4 6 8 10
2
3
4
5
6
7
8
9
x
y
Final approximated results of Box-Cox transformation-based ARRBFNs
Noisy observation
Model prediction
Underlying function
 
Fig.2. The final output of the proposed approach after 
100 epochs uses the ARLA for Example 
(RMSE=0.0263). 
-10 -8 -6 -4 -2 0 2 4 6 8 10
2
3
4
5
6
7
8
9
Final approximated results of Box-Cox transformation-based RBFNs
Noisy observation
Model prediction
Underlying function
 
Fig.3. The final output of the Box-Cox transformation- 
based RBFNs for Example (RMSE =0.4704). 
The Fourteenth International Symposium on Artificial Life and Robotics 2009 (AROB 14th ’09),
B-Con Plaza, Beppu, Oita, Japan, February 5 - 7, 2009
©ISAROB 2009 238
 adjusting the trajectory of each particle its own best 
particle and toward the best particle of the entire swarm 
at each generation. The PSO algorithm has been used in 
solving many optimization problems successfully. 
Compared with GA, the advantage of PSO is that it is 
easier to implement and there are fewer parameters to 
be adjusted. In this paper, The PSO algorithm is 
proposed to determine attractive factor of the potential 
field function, then the path of the mobile robot is 
smooth and shortest from a given initial configuration to 
a desired final configuration in an unknown 
environment. 
 The remaining sections of this paper are organized 
as follows. Section 2 shows the potential field method. 
Section 3 presents a PSO-based potential field method 
for robot navigation in an unknown environment. 
Simulations are performed in Section 4 to confirm the 
feasibility of the proposed algorithm. Section 5 
concludes the paper. 
 
II. POTENTIAL FIELD FOR MOTION  
PLANNING 
1. Potential Field Method 
 In the previous research of potential field methods, 
for simplicity, a robot is usually treated as a point. If the 
position of the robot is denoted by [ , ]r rx y ,  then  the 
most commonly used attractive potential field between a 
robot and an obstacle takes the following form 
Latombe [8] 
2 21 [( ) ( ) ]
2att r g r g
U x x y y          (1) 
where   is a positive scaling factor and [ , ]g gx y  
denotes the posi t i on  of the goal  poin t .  The 
corresponding attractive force is then given by the 
negative gradient of the attractive potential field 
g r
att att
g r
x x
U
y y

       
F           (2) 
which converges linearly toward zero as the robot 
approaches the goal. 
On the other hand, one commonly used repulsive 
potential field between a robot and an obstacle takes the 
following form Latombe [8] 
2 2 2
2 2
1 1 1
( ) ,  if  ( ) ( )
2 ( ) ( )
0,                                      otherwise
r obs r obs
rep r obs r obs
x x y y
U x x y y
 

        
(3) 
where   is a positive scaling factor,   is a positive 
constant denoting the distance of influence of the 
obstacle, and [ , ]obs obsx y  denotes the poin t  on 
the obstacle such  the distance  
2 2( ) ( )r obs r obsx x y y    i s minimal .  The 
corresponding repulsive force is then given by 
, 2 2
,
, if ( ) ( )
0, otherwise
rep x
r obs r obs
rep rep rep y
F
x x y y
U F

           
F
  
(4) 
where 
, 2 2
2 2
2 2
1 1
( )
( ) ( )
( )
( ) ( )
1
( ) ( )
rep x
r obs r obs
r obs
r obs r obs
r obs r obs
F
x x y y
x x
x x y y
x x y y


 
  

  
   
  (5) 
, 2 2
2 2
2 2
1 1
( )
( ) ( )
( )
( ) ( )
1
( ) ( )
rep y
r obs r obs
r obs
r obs r obs
r obs r obs
F
x x y y
y y
x x y y
x x y y


 
  

  
   
 (6) 
The total force applied to the robot is the sum of the 
attractive force and the repulsive force 
total att rep F F F              (7) 
which will determine the movement of the robot. 
 
2. Kinematics of the Mobile Robot 
By assuming that the wheels do not slip, the  
kinematics of the mobile robot as shown in (8). 
         
( 1) ( ) cos ( )
( 1) ( ) sin ( )
( 1)
r r
r r
total
x k x k d k
y k y k d k
k



   
  
  F
       (8) 
where d is the moving distance in sampling  
interval k . 
 
III. DETERMINATION OF ATTRACTIVE 
FACTOR WITH PSO METHOD 
 The attractive factor   plays an important role in 
the proposed potential field method. If its value is very 
large, then only the influence of the attractive force will 
be taken into account. On the other hand, if its value is 
quite small, then the attractive force will be neglected. 
However, there is no systematic way to determine it. 
Therefore, the PSO is used to serve for this purpose. 
The mathematic description of PSO is as the follow: 
The Fourteenth International Symposium on Artificial Life and Robotics 2009 (AROB 14th ’09),
B-Con Plaza, Beppu, Oita, Japan, February 5 - 7, 2009
©ISAROB 2009 256
 Example 2: 
   In this simulation example, the narrow passage is 
shown in Fig. 3.  The value d  and   are chosen 
to 0.1m and 0.5m, respectively. The initial position and 
final position of the mobile robot are (1m, 6.1m) and 
(9m, 6.1m) in a completely unknown environment. The 
attractive factor and repulse factor of the potential field 
method are chosen to be 5 and 5; the simulation result is 
shown in Fig. 3. It is applying Algorithm A in Fig. 4, the 
value 1c , 2c , the inertia weight, and a  are chosen to 
be 2, 2, 0.8, and 100000, respectively. The fitness 
function is defined as in (11). The mobile robot can not 
reach the final position in Fig. 3. The navigation path of 
the mobile robot can reach the final position in Fig. 4 
with algorithm A. 
 
 
 (meter)x
 (m
et
er
)
y
(1m, 6.1m) (9m, 6.1m)
Start Goal
0 2 4 6 8 101 3 5 7 9
3
4
5
6
7
8
9
 
Fig. 3 The mobile robot can not reach the final 
configurat ion  from the in i t ia l configurat ion
(1m, 6.1m)  to the final configuration (9m, 6.1m)  
with the attractive factor and repulse factor of the 
potential field method are chosen to be 5 and 5. 
 
 
 (meter)x
 (m
et
er
)
y
(1m, 6.1m) (9m, 6.1m)
Start Goal
0 2 4 6 8 101 3 5 7 9
3
4
5
6
7
8
9
 
Fig. 4 The navigation distance of mobile robot is 8m 
from the initial configuration (1m, 6.1m)  to the final 
configuration (9m, 6.1m)  with Algorithm A. 
V. CONCLUSIONS 
   The paper uses PSO algorithm to adjust attractive 
factor of potential function, a method is proposed to 
navigate a mobile robot from a given initial 
configuration to a desired final configuration in an 
unknown environment filled with obstacles. Compared 
with most other potential field function, the PSO 
algorithm can solve oscillations in the presence of 
obstacles and oscillations in narrow passages problems. 
The simulation results can show the feasibility of the 
proposed method. 
 
ACKNOWLEDGMENTS 
This work was supported in part by the National 
Science Council, Taiwan, R.O.C., under grants NSC96-
2628-E-224-007-MY2. 
 
REFERENCES 
[1] Conte G, Longhi S, Zulli R (1996), Robot 
   motion planning for unicycle and car-like robots. 
   International Journal of Systems Science 27: 
791–798 
[2] Ge SS, Cui YJ (2000), New potential function  
   for mobile robot path planning. IEEE Trans. on 
   Robotics and Automation 16(5):615–620 
[3] Tsourveloudis NC, Valavanis KP, Hebert T (2001), 
Autonomous vehicle navigation utilizing 
electrostatic potential fields and fuzzy logic. IEEE 
Trans. on Robotics and Automation 17(4):490–497 
[4] Song P, Kumar V (2002), A potential field based 
approach to multi-robot manipulation. Proceedings 
of the IEEE International Conference on Robotics 
and Automation 2:1217–1222 
[5] Lee TL, Lai LC, Wu CJ (2005), A fuzzy algorithm 
for navigation of mobile robots in unknown 
environments. IEEE International Symposium on 
Circuits and Systems 4:3039–3042  
[6] Mester G (2007), Obstacle avoidance of mobile 
robots in unknown environments. 5th International 
Symposium on Intelligent Systems and Informatics, 
pp. 123–127 
[7] Toibero JM, Carelli R, Kuchen B (2007), Switching 
control of mobile robots for autonomous navigation 
in unknown environments. IEEE International 
Conference on Robotics and Automation, pp. 1974–
1979 
[8] Latombe J (1991), Robot Motion Planning. Kluwer, 
Boston, MA, USA 
[9] Lai LC, Wu CJ, Shiue YL (2007), A potential field 
method for robot motion planning in unknown 
environments. Journal of the Chinese Institute of 
Engineers 30(3):369–377 
[10] Kennedy J, Eberhart R (1995), Particle swarm
    optimization. IEEE International Conference on
    Neural Network, pp. 1942–1948 
The Fourteenth International Symposium on Artificial Life and Robotics 2009 (AROB 14th ’09),
B-Con Plaza, Beppu, Oita, Japan, February 5 - 7, 2009
©ISAROB 2009 258
 wireless LAN interface, alarm device, GSM modem, 
detection module, touch screen, remote supervised 
computer, wireless RF interface, driver system and 
some hardware devices [8]. The mobile robot can 
communicate with the remote supervised computer 
through wireless Internet. 
 
 
 
 
 
 
 
 
 
 
 
 
 
Fig. 1 The structure of the mobile robot 
 
In the motion control function, the user can orders 
command to control two DC servomotors through 
motion control card and MAXON driver devices. In the 
avoidance obstacle function, the mobile robot can use 
laser range finder to detect obstacle, and locate the 
position of the mobile robot using laser positioning 
system. In the detection system, there are fire detection 
device, gas detection device, digital input device, power 
detection device and environment detection device, etc. 
The transmission interface between the detection device 
and the mobile robot is wireless RF interface (RS232), 
and the transmission interface between the mobile robot 
and the remote supervised computer and the mobile 
robot is wireless Internet.  
 
3. THE MOTION PLANNING 
The obstacle detection device of the mobile robot is 
laser range finder. The type is S200 that is produced by 
SICK. The device S200 is an optical sensor that its 
surroundings in two dimensions using infrared laser 
beams. The maximum distance is about 30 m. The 
location device of the mobile robot use laser positioning 
system. The type is NAV200 that is produced by SICK, 
too. The NAV200 laser positioning system continuously 
determines its own position and orientation with an 
industrial area using fixed reflectors. The measured 
range is about 30m. 
How to locate the position of the mobile robot? We 
can use the geometry relation to calculate the orientation 
and displacement of the mobile robot. We can define the 
initial position of the mobile robot is at the start 
point ( )ii yx , , and move to the next point ( )11, ++ ii yx . It 
is shown in Fig. 2. The mobile robot can acquire the 
position axis ( )yx,  from the laser positioning system. 
We can use the equation (1) to modify the orientation 
angle of the mobile robot, and control the mobile robot 
move to the next point ( )11, ++ ii yx . 
 
xx
yyTan
xx
yyTan
i
i
i
i
−
−−−
−=
+
+−−
1
111θ          (1) 
 
 
 
 
 
 
 
 
 
 
 
 
 
Fig. 2 The structure of the mobile robot 
 
 
 
 
 
 
 
 
 
 
Fig. 3 The structure of the mobile robot 
 
The motion trajectory of the mobile robot has obstacle, 
and the mobile robot must avoid obstacle using laser 
range finder. It is shown in Fig. 3. The mobile robot can 
measure the distance between the mobile robot and the 
obstacle using laser range finder. The distance is small 
than threshold, and the mobile robot can turn left 
about 2/π . Then it can walk following the obstacle 
with fixed distance using laser range finder. Otherwise 
the mobile robot moves forward to the next point. The 
mobile robot arrives at the motion trajectory according 
to the laser position system, and it can turn left 
about 2/π . Next it can move forward to the next 
point ( )11, ++ ii yx .      
The Fourteenth International Symposium on Artificial Life and Robotics 2009 (AROB 14th ’09),
B-Con Plaza, Beppu, Oita, Japan, February 5 - 7, 2009
©ISAROB 2009 260
