 （一） 計劃中文摘要 
 
關鍵詞：組合問題，最佳化，生物分子計算，生物分子平行決定一個磁帶Turing 機器，和最大權重
Clique 問題。 
 
NP-complete 問題是非常有名的在評估決定因素的困難成指數爭增加，縱然這些因素的輸入僅僅
是數值的，當這問題變大時，解決這些問題變得非常困難，縱然在使用非常大量的超級電腦。一些有
名的例子，如大數分解、理論證明、旅行銷售人員以及組合 問題。 
 
為了解決多數的 NP-complete 問題，在這個研究計畫中藉重生物分子計算最佳化理論之探討及
理論之實作提出一個新的模組，它是生物分子平行決定磁帶 Turing 機器(簡稱 BMPDTM)。BMPDTM 包
含三個就使用基本生物操作的新開發可理解最佳化分子生物計算主要分類。這三個主要分類是最佳布
林生物電路和操作，最佳數學生物裝置和數學操作以及最佳平行比較器是在面對動態設定的不確定時
來支持最佳生物分子計算決策決定。 
 
在這個研究計畫中，提出一個NP-complete 問題-最大權重Clique 問題(簡稱MWCP)-利用BMPDTM 
最佳化實作。MWCP 的問題有很多重要的應用領域,例如:電腦視覺、樣本識別和機器人，這裏權重圖
形被用來代表高階圖表資訊。它對所有 NP-complete 或 NP-hard 許問題並包括組合問題使用最佳化
生物計算能力來完成複雜數學運算提出明顯的證據。 
 
 
 
 
 
 
 
 
 
 
 
 
                                            I 
報告內容 
1.   Introduction 
Feynman [1] first proposed bio-molecular computations in 1961, but his idea was not experimented with 
for several decades. In 1994, Adleman [3] succeeded in solving an instance of the Hamiltonian path problem 
in a test tube by handling DNA strands. Lipton [5] demonstrated that the Adleman techniques could be used 
to solve the satisfiability problem. Adleman and his co-authors [8] proposed sticker for enhancing the error 
rate of hybridization. Through advances in molecular biology [2], it is now possible to produce roughly 1018 
DNA strands that fit in a test tube and they are run without errors, then 1018 bits of information can 
simultaneously be correctly processed. In [9], it was pointed out that storing information in molecules of 
DNA allows for an information density of approximately 1 bit per cubic nm (nanometer). Videotape is a 
kind of traditional storage media and its information density is approximately 1 bit per 1012 cubic 
nanometers. This implies that an information density in molecules of DNA is better than that of traditional 
storage media. 
2.   Bioinformatics Logic Computing 
2.1 DNA Manipulations 
A (test) tube is a set of molecules of DNA (a multi-set of finite strings over the alphabet {A, C, G, T}) 
that can perform the following operations: Separate(T, s, T1, T2), Merge({Ti}), Discard(T), Amplify(T, 
{Ti}), Append(T, s), Append-head(T, s), Detect(T), and Read (T). 
2.2 Optimal Bioinformatics Logic Computing System 
In the beginning, we developed a new bioinformatics logic computing model. We used truth tables to 
optimize and complete logic bio-circuit operations to construct basic bioinformatics logic circuits.  These 
logic circuits (gates) work in test tubes to implement basic logic operations. These gates are AND, OR, 
XOR,…, etc. Using these logic gates, we construct a set of parallel bio-molecular logic adder, subtractor, 
multiplier, and divider. All operations of optimal bioinformatics logic computing are shown in the 
following Figure 1. 
 
Figure 1: Bioinformatics logic computing model 
First, we will use the parallel bio-molecular adder to solve the maximum weighted clique problem.  
Algorithm1: ParallelOneBitAND(T0, Ax,j, By,j, x, y, i, j, m) 
(1) T1 = +(T0, Ax,j1) and T2 = -( T0, Ax,j1); (2) T3 = +(T1, By,j1) and T4 = -( T1, By,j1) 
 (3) T5 = +(T2, By,j1) and T6 = -( T2, By,j1) 
 (4) If(Detect(T3)==”Yes”) then Append-head(T3, TMPi,j,m1)  EndIf 
 (5) If(Detect(T4)==”Yes”) then Append-head(T4, TMPi,j,m0)  EndIf 
 (6) If(Detect(T5)==”Yes”) then Append-head(T5, TMPi,j,m0)  EndIf 
 (7) If(Detect(T6)==”Yes”) then Append-head(T6, TMPi,j,m0)  EndIf 
 (8) T0=∪(T3, T4, T5, T6) 
EndAlgorithm 
Figure 2: Algorithm ParallelOneBitAND(T0, Ax,j, By,j, x, y, i, j, m) 
3.   Bioinformatics Logic Computing Solution: Maximum Weighted Clique Problem 
A clique of a graph is its maximal complete subgraph [4]. Mathematically, a clique is defined as a set of 
vertices in which every vertex is connected to every other vertex by an edge (pairwise adjacent). The 
problem of finding the size of a clique for a given graph is an NP-complete problem [7]. The maximum 
weighted clique problem asks for clique of the maximum weight. The weighted clique number is the total 
weight of weighted maximum clique. It can be seen as a generalization of the maximal clique problem by 
assigning positive, integer weights to the vertices. 
 
The maximum weighted clique problem is known to be NP-hard for arbitrary graphs and, according to 
recent theoretical results, so is the problem of approximating it within a constant factor. Let G=(V, E, w) be 
an undirected graph, where V is the set of vertices, E is the set of edges and wi is the ith component of which 
corresponds to the weight assigned to vertex i. It is assumed that wi > 0 for all i  V . Given a subset of 
vertices S, the weight assigned to S will be denoted by 
 
In figure 7, a problem of five vertices with weight assigned is defined. Note that the weight assigned here 
are binary numbers. For example, vertex one’s weight is 3 in the decimal system. Obviously, the vertices (2, 
3, 4) and (1, 2, 3) also make the largest clique. However, to find the maximum weighted clique. We need to 
sum up the total weights of these two clique, then we find that (1, 2, 3) forms the maximum weighted clique 
with total weights 110.  
 
Figure 7: The original graph describing a maximum weighted clique problem of five vertices (a) and 
its complementary graph (b). 
3.1 Bioinformatics Algorithms to Solve Maximum Weighted Clique Problem 
Suppose that a graph G = (V, E, w), where V is {v1, v2, …, vn are vertices of G}, E is {(vp, vq)| (vp, vq) is an 
edge in G}and w is {w1,3w1,2.....wn,1 is a weight assigned to V }. Also Assume that |V| is n and |E| is at most 
(n * (n  − 1)) / 2. Assume that a complementary graph G1 = (V, E1) for G, where E1 is {(vc, vd)| (vc, vd) is out 
of E}. Assume that |E1| is (n * (n − 1)) / 2 − |E|. A clique for a graph G = (V, E) is a complete subgraph to G. 
The maximum weighted clique problem asks for clique of the maximum weight. The weighted clique 
number is the total weight of weighted maximum clique. Algorithm 6 is presented for solving the maximum 
weighted clique problem. 
 
To solve the maximum weighted clique problem, we first generate solution space of DNA sequences for 
those problems resolved. Then, basic biological operations are used to remove illegal solutions and to find 
legal solutions from solution space. Therefore, we produce a test tube, which contains the entire possible 
N-bits-ParallelAdder is finished, tube T0 includes those solutions which have the sum of the corresponding 
weights. Next, on the execution of Step 5, it invokes extract, detect and merge biological operations to 
compare the sum of the weighs. After Step 5 is run, tube T0 consists of DNA strands encoding the solution 
with the maximum weights. 
Procedure 1: RemoveNonClique(T0) 
For k = 1 to n 
(1a)T1ON = +(T0, Vk1) and T1OFF = −(T0, Vk1) 
(1b) If (Detect(T1ON) = = “yes”) then 
(1b-1)T2ON = +( T1ON, F31) and T2OFF = −( T1ON, F31); (1b-2)T3ON = +( T2OFF, F21) and T3OFF = −( T2OFF, F21)
(1b-3)T4ON = +( T3OFF, F11) and T4OFF = −( T3OFF, F11) 
(1b-4) If (Detect(T3ON) = = “yes”) then Append(T3ON, F31) EndIf 
(1b-5)If (Detect(T4ON) = = “yes”) then Append(T4ON, F21) EndIf 
(1b-6)If (Detect(T4OFF) = = “yes”) then Append(T4OFF, F11) EndIf 
EndIf 
(1c)T3OFF = ∪( T4ON, T4OFF); (1d)T2OFF = ∪( T3ON, T3OFF); (1e)T1ON = ∪( T2ON, T2OFF); (1f)T0 = ∪( T1ON, T1OFF) 
EndFor 
(2)T0 = +(T0, F31)  
EndProcedure 
Figure 9: Procedure of RemoveNonClique. 
Lemma 1: The procedure, RemoveNonClique(T0), can be applied to encode strands which the vertices are 
more than and equal to three. 
Proof:  The procedure, RemoveNonClique(T0), is implemented via the append, extract, detect, and merge 
operations. The main loop in the algorithm is mainly used to finish selection all of the variable Vk, kth bit for 
1 ≤ k ≤ n. Each execution of step (1a) employs the extract operation to form two test tubes: T1ON and T1OFF. 
The first tube T1ON includes all of the strands that have Vk = 1. The second tube T1OFF consists of all of the 
strands that have Vk = 0. Next, each execution of Step (1b) uses the detect operation to check whether there 
is any DNA sequence in tube T1ON. If it returns a true, this indicates that the value of Vk is one. Then, Step 
(1b-1) to Step (1b-3) is mainly used the extract operation to classify these strands into four catalogs. Tube 
T4OFF encodes that strands don’t have F11, F21, and F31. Tube T4ON encodes that strands have F11, but don’t 
have F21, and F31. Tube T3ON encodes that strands have F11and F21, but don’t have F31. The other tubes 
encodes that strands both have F11, F21 and F31. The variable F11 means that the strands in tube have one 
vertex. Then, the variable F21 means that the strands in tube have two vertices. Last, the variable F31 means 
that the strands in tube have three or more than three vertices. Therefore, for those strands in T4OFF, we use 
append operation to append F11 into the back of it. For those strands in T4ON, we use append operation to 
append F21 into the back of it. And, for those strands in T3ON, we use append operation to append F31 into the 
back of it. Next, steps (1c) through (1f) use the merge operation to merge all these tubes into tube T0 for the 
next time executed. After the loop is finished, we employ the extract operation to form test tubes: T0 and the 
tube T0 will include all of the strands that have strands whose vertices are more than and equal to three. 
3.2 Complexity Assessment 
Theorem 2: Suppose that a graph G = (V, E, w), where |V| is n and |E| is at most (n * (n − 1)) / 2 and wi is 
the ith component of which corresponds to the weight assigned to vertex i. The maximum weighted clique 
計畫成果自評 
 
  本計畫內容的第一部分: Both Bio-molecular Computing and Bio-molecular Parallel Deterministic 
One-tape Turing Machinehave been developed and modified. The newly developed bioinformatics 
computing platform is named as “Bio-logic molecular computing base”. Based upon these newly 
developments, several developed articles are accepted and to appear in the following international known 
conferences and journals. They are: 
1) Sien-Tang Tsai, Michael (Shan-Hui) Ho, Weng-Long Chang “Constructing Bio-molecular Parallel 
Adder with Basic Logic Operations in the Adleman-Liption Model,” IEEE CS Proceeding of The 10th 
International Conference on Convergence Information Technology (ICCIT 2007): Nov. 21-23, 2007, 
Gyeongju, Korea. 
2) Shin-Yi Liu, Michael (Shan-Hui) Ho, Yu-Yuan Chang and Yu-Ying Shih “Constructing Bio-molecular 
Parallel Modular with Basic Logic Operations in the Adleman-Liption Model,” ICIM2008第十九屆國
際資訊管理學術研討會 May, 15-16, 2008, 國立暨南國際大學, Taiwan. 
 
Finally, “系統生物資訊:最佳化分子生物計算和最大權重 Clique 問題最佳解” has been submitted in 
the journal of BioSystems. 本計劃藉由最佳化分子生物計算使最大權重 Clique 問題得到最佳解，
完成:(1) 建置 the newly developed DNA logic computing, Systems Bioinformatics 的 DNA 平行加法
器、平行減法器、平行乘法器及平行除法器，(2) 建置 a newly developed biologic molecular 
computing platform，(3) 藉由最佳化分子生物計算使最大權重 Clique 問題得到最佳解，(4) 最佳
化計算模組在面臨不確定動態的設定時支持最佳化生物計算決策，(5) 藉由最佳化分子生物計算使最
大權重 Clique 問題得到最佳解，對所有 NP-complete 或 NP-hard 問題並包括組合問題使用最佳化生
物計算能力來完成複雜數學運算提出明顯的證據。 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
7 
power of the media consumer interact. New businesses around social networking such as 
blogging, ucc, and Wikipedia are emerging within a short period of time. 
 
Nowadays many researchers are strongly interested in questing for the innovations in the 
field of convergence IT. Bioinformatics logic molecular computing has become one of 
major areas that have been developed today. The few key technologies interact in an 
interesting and yet useful way, bringing profound impact and revolution. The revolution 
is transforming the way people live, work, and interacts with each other, and is impacting 
the way business, government services, education, entertainment and health care are 
operating. 
 
There are 5 topics in the ICCIT 2007 conference. They are: 
Topic 1: IT-based Convergence Technology and Service 
Topic 2: HCI & Bioinformatics 
Topic 3: Ubiquitous Computing 
Topic 4: Business and Information Systems 
Topic 5: Social and Business Aspects of Convergence IT and Ubiquitous 
Computing 
 
We have one article published in the IEEE CS Proceeding of the 10th International 
Conference on Convergence Information Technology (ICCIT 2007) and presented in the 
Topics 2.  This article is entitled “Constructing Bio-molecular Parallel Adder with 
Basic Logic Operations in the Adleman-Liption Model” and presented by Dr. Michael 
(Shan-Hui) Ho in session 14 on Nov. 22nd of ICCIT 2007 conference. The ICCIT 2007 
international conference was held in Nov. 21-23 of 2007. During and after his 
presentation, many scholars, R&D scientists and engineers came to Dr. Michael 
(Shan-Hui) Ho not only for discussing his presentation but also asking him for future 
corporations in the bioinformatics logic molecular computing research. In additions, 
some other hot topics such as 'multiple play' among fixed line phone, TV, broadband 
services, and mobile phone. 
 
Finally, the IEEE CS proceeding of ICCIT2007 will be surely cited by EI. 
 
二、與會心得 
 
Dr. Michael (Shan-Hui) Ho has attended many international known conferences and 
presented many sounding papers in these conferences. The ICCIT 2007 conference is 
very special to him. It is his first time to present one of his sounding researches on how to 
Construct Bio-molecular Parallel Adder with Basic Logic Operations in the 
Adleman-Liption Model in one of international known conferences. He also presented his 
country, Taiwan, in front of many famous international leading researchers and engineers. 
