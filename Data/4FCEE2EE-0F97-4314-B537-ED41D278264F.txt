行政院國家科學委員會專題研究計畫成果報告 
(中文計畫名稱) 
退化性工件之單機生產排程問題研究  
(英文計畫名稱) 
Single-machine scheduling with deteriorating jobs consideration 
 
一、中文摘要 
本計畫提出一個新的退化模型，並且探
討在使用資源無限制下單機退化性工件之最
大完工時間、總處理時間、各工件處理時間
絕對差之總和、總提前完工、延後完工和到
期日成本最小化和在沒有工件延遲的條件下
總提前完工成本最小化之排程問題；另外，
本計畫也探討在總使用資源最少條件下之最
大完工時間最小化，以及在最大完工時間最
小化條件下之總使用資源成本最小化等排程
問題。我們推導證明並且提出7個多項式時間
演算法解決上述問題。 
關鍵詞：退化性工件、排程、單機、資源配
置 
Abstract 
This project considers some scheduling 
problems with deteriorating jobs. The 
objectives are to minimize the makespan, the 
total completion time, the total absolute 
deviation of completion time, the earliness, 
tardiness, and due date penalty, the sum of 
earliness penalties subject to no tardy jobs, 
respectively. We also explore two resource 
constrained scheduling problems: how to 
minimize the resource consumption with 
makespan constraints and how to minimize the 
makespan with the total resource consumption 
constraints. Several polynomial time algorithms 
are proposed to optimally solve the problems 
with the above objective functions. 
Keywords: Deteriorating jobs ；
Scheduling ； Single-machine ； Resource 
allocation 
二、緣由與目的 
大部份確定性的生產排程問題研究中，
都視工件的處理時間是事先知道而且固定，
然而，實務上有很多生產情況卻不是這樣，
六十幾年來，研究者陸續不斷的提出或改善
生產模型，使它更符合實際之生產環境的需
要，其中包括考慮人的學習和疲勞效應
(learning and fatigue effects)、機器刀
具的老化效應(aging effects)以及工件的
退化效應(deteriorating effects)。幾十年
來，大部份關於退化工件排程問題的研究都
沒有考慮使用資源配置與限制問題，
Janiak[13]是少數考慮使用資源配置與限制
的研究先驅之一。 
Pinedo[33]指出單機模型是最簡單的生
產排程問題，雖然單機模型所具有的性質不
見得在平行機、流程式、零工型或開放式生
2 
對此問題在等效平行機生產環境，提出fully 
polynomial-time approximation scheme 
(FPTAS)，這是一個十年來未解決的公開問
題。Lee[20]考慮單機維修之退化工件最大完
工時間最小化排程問題。Kuo和Yang[18]探討
單機簡單線性退化工件，求解最佳共同到期
日並提出多項式時間演算法求解提前、延遲
及到期日之最小總成本問題。Oron[32]和
Layegh等作者[19]分別探討單機簡單線性退
化工件總完工時間差異及總完工時間加權最
小化問題。Lee等作者[21- 23]探討流程式退
化工件生產排程問題，並提出啟發式演算法
求解最大完工時間、總完工時間最小化排程
問題以及在加上限制條件下提出多項式時間
演算法。Lee等作者[24]探討單機簡單一般退
化工件最大完工時間最小化排程問題。Wang
等作者[36]探討單機簡單線性退化工件群生
產排程(group scheduling)問題，提出多項
式時間演算法求解最大完工時間及總完工時
間加權最小化問題。Cheng等作者[11]同時考
慮學習與退化效應之單機排程，提出多項式
時間演算法求解最大完工時間及總完工時間
最小化問題。Low等作者[25]探討單機簡單線
性退化工件最大完工時間最小化排程問題，
考慮工件不可分割處理(non-resumable)而
且在加工過程中有一段時間機器不能加工
(non-available)，並考慮在機台恢復可使用
狀態，所有尚未處理工件的處理時間必須重
新退化(re-start)，他們證明此問題是一個
難解之問題(NP-hard)，並提出0-1整數規劃
以及啟發式演算法求最佳解，這個生產模型
很適合金屬加工製造業的生產模式(如冷拉 
(cold drawing)、冷壓(cold pressing)、冷
成 形 (cold forming) 、 冷 擠 伸 (cold 
extrusion) 、 和 金 屬 成 形 製 程 (metal 
forming process)等金屬加工製造業常使用
的製程，之後，一系列探討退化工件與機器
使用受限制(non-availability)的研究，開
始參考這篇研究所提重新退化的概念。Wu等
作者[41,42]考慮單機退化工件與整備時間
群排程(group scheduling)問題，提出多項
式 時 間 演 算 法 求 解 最 大 完 工 時 間
(makespan)、總處理時間(total completion 
time)最小化問題。Wang等作者[37, 38]同時
考慮單機學習與退化工件生產排程問題，提
出多項式時間演算法求解最大完工時間、總
完工時間加權及總完工時間 次方最小化問
題。 
k
以上概略敘述這十幾年來關於退化工件
排程問題所發表的論文(註：礙於參考文獻有
篇數限定，漏列的論文還很多，請見諒！)，
都沒有考慮使用資源配置與限制問題；
Janiak[13]的研究是考慮使用資源配置與限
制的研究先驅之一，之後，Cheng和Janiak[6]
考慮單機使用資源配置與限制生產排程問
題，提出多項式時間演算法求解在總使用資
源最少條件下之最大完工時間最小化，以及
在最大完工時間最小化條件下之總使用資源
最少等問題。Zhao和Tang[42]探討單機退化
工件使用資源配置與限制生產排程問題，提
出多項式時間演算法求解在沒有延遲工件的
條件下總提前完工成本最小化、在總使用資
源最少條件下之最大完工時間最小化以及在
最大完工時間最小化條件下之總使用資源最
少等問題。Zhu等作者[43]考慮單機時間相依
(time-dependent)工件使用資源配置與限制
生產排程問題，提出多項式時間演算法求解
在總使用資源最少條件下之最大完工時間最
小化，以及在最大完工時間最小化條件下之
總使用資源最少等問題。 
四、研究方法與進行步驟 
在一般情況下，排程問題的求解方法有
以下幾種方式:1.排程問題性質之推導
(Scheduling Theory)、 2.多項式時間下之
最佳演算法(Polynomial Time Algorithm)、 
3.分枝與界限法(Branch & Bound Method)、 
4.動態規劃法(Dynamic Programming)、 5.
整數規劃模式(Integer Programming)、 6.
啟發式演算法(Heuristic Method)等。其中
4 
152, 1-13, (2004). 
11. Cheng, T. C. E., C. C. Wu and W. C. Lee, 
"Some scheduling problems with 
deteriorating jobs and learning effects," 
Computers & Industrial Engineering, 54, 
972-982, (2008). 
12. Graham, R. L., E. L. Lawler, J. K. Lenstra 
and A. H. G. Rinnooy Kan, “Optimization 
and approximation in deterministic 
sequencing and scheduling: A survey,” 
Annals of Discrete Mathematics, 5, 
287–326, (1979). 
13. Janiak, A., “Time-optimal control in a 
single machine problems with resource 
constraints,” Automatica, 22, 745-747, 
(1986). 
14. Ji, M., Y. He and T. C. E. Cheng, 
“Scheduling linear deteriorating jobs with 
an availability constraint on a single 
machine,” Theoretical Computer Science, 
362, 115-126, (2006). 
15. Ji, M. and T. C. E. Cheng, 
“Parallel-machine scheduling with simple 
linear deterioration to minimize total 
completion time,” European Journal of 
Operational Research, 188, 342–347, 
(2008). 
16. Kononov, A., and S. Gawiejnowicz, 
“NP-hard cases in scheduling deteriorating 
jobs on dedicated machines,” Journal of the 
Operational Research Society, 52, 708-717, 
(2001). 
17. Kunnathur, A. S. and S. K. Gupta, 
“Minimizing the makespan with late start 
penalties added to processing times in a 
single facility scheduling problem,” 
European Journal of Operational Research, 
47, 56-64, (1990). 
18. Kuo, W. H. and D. L. Yang, “A note on 
due-date assignment and single-machine 
scheduling with deteriorating jobs,” Journal 
of the Operational Research Society, 59, 
857-859, (2008). 
19. Layegh, J., F. Jolai and M. S. Amalnik, “A 
memetic algorithm for minimizing the total 
weighted completion time on a single 
machine under step-deterioration,” 
Advances in Engineering Software, 40, 
1074-1077, (2009). 
20. Lee, W. C. "A note on single-machine 
makespan scheduling with deteriorating 
jobs and scheduled maintenance," Journal 
of Information & Optimization Sciences, 28, 
469-477, (2007).
21. Lee, W. C., C. C., Wu, C. C. Wen and Y. H 
Chung, “A two-machine flowshop 
makespan scheduling problem with 
deteriorating jobs,” Computers & Industrial 
Engineering, 54, 737-749, (2008). 
22. Lee, W. C., C. C., Wu, Y. H. Chung and H. 
C. Liu, "Minimizing the total completion 
time in permutation flow shop with 
machine-dependent job deterioration rates," 
Computers and Operations Research, 36, 
2111-2121, (2009). 
23. Lee, W. C., Y. R., Shiau, S. K. Chen and C. 
C. Wu, "A two-machine flowshop 
scheduling problem with deteriorating jobs 
and blocking," International Journal of 
Production Economics , 
doi:10.1016/j.ijpe.2009.11.001, (2009). 
24. Lee, W. C., C. C. Wu and H. C. Liu, "A 
note on single-machine makespan problem 
with general deteriorating function," 
International Journal of Advanced 
Manufacturing Technology, 40, 1052-1056, 
(2009). 
25. Low, C., C. J. Hsu and C. T. Su, 
“Minimizing the makespan with an 
availability constraint on a single machine 
6 
jobs,” Applied Mathematics and 
Computation, 161, 865–874, (2005). 
43. Zhu, V.C.T., L. Sun, L. Sun, X. Li, 
“Single-machine scheduling 
time-dependent jobs with 
resource-dependent ready times,”Computer 
& Industrial Engineering, 
doi:10.1016/j.cie.2009.08.006, (2009)  
44. 楊達立,「具有不同維護策略下之排程問
題研究」, NSC91-2213-E-150-027, (2001). 
8 
rate-modifying activity in the middle of the job sequence. Mosheiov and Sarig [18] investigate study maintenance activity
scheduling and due-window assignment on a single machine. They introduce a polynomial time algorithm to minimize
the total cost related to earliness, tardiness, and due-window starting time and size. Zhao and Tang [25] consider a common
due-window assignment and single-machine scheduling problemwith deteriorating jobs and a rate-modifying activity. They
provide a polynomial algorithm to solve the problem.
There are many practical scheduling situations in which the processing times of the jobs are time-dependent. The time-
dependent processing model falls into three categories, involving: (i) learning effects, (ii) deterioration effects, and (iii) learn-
ing and deterioration effects. Examples of jobs with deterioration effects can be found in steel production [5], medical pro-
cedure processes [15], and ﬁre ﬁghting [6] etc., where any delay in processing a job may take a longer time to accomplish the
job as time passes. The opposite to the deterioration effect is called the learning effect. An abundance of research on sched-
uling with learning effects has been conducted in different machine environments. For details on this stream of research, the
reader may refer to the comprehensive surveys by Biskup [1]. Some recent papers that consider scheduling jobs with time-
dependent processing times include Cheng et al. [2], Cheng et al. [3], Lee and Lai [10], Lee and Wu [11], Kuo and Yang [7], Yin
et al. [22], and Yin et al. [23], among others.
Recently, Zhao et al. [24] study the two identical parallel-machine scheduling problem with rate-modifying activities to
minimize the total completion time. They ﬁrst show that the problem can be solved in O(n6) time. They then extend the
problem to the case with m identical parallel machines and show that it can be solved in O(n2m+3) time. In this paper we
study the unrelated parallel-machine scheduling problem with rate-modifying activities to minimize the total completion
time. For the case where the rate-modifying rate is larger than 0 and not larger than 1, we show that the problem can be
solved in O(nm+3) time. For the case where the rate-modifying rate is larger than 0, we ﬁnd that the problem can be solved
in O(n2m+2) time. Therefore our solution method is more efﬁcient than that provided by Zhao et al. [24] even though we ex-
tend the scheduling environment to the unrelated parallel-machine setting.
2. Problem formulation
There are n jobs (J = {J1, J2, . . . , Jn}) to be processed on m unrelated parallel machines Mj, j = 1,2, . . . ,m. Assume that each
machine has at most one rate-modifying activity. Let the length of the rate-modifying activity of machine Mj be tj,
j 2 {1,2, . . . ,m}. We assume, as is common in practical situations, that m < n. All the jobs are non-preemptive and available
for processing at time zero. Each machine can handle at most one job at a time and cannot stand idle until the last job as-
signed to it has ﬁnished processing. Let pij denote the normal processing time of job Ji, i 2 {1,2, . . . ,n}, if it is assigned to ma-
chine Mj. Assume that the rate-modifying activity of machine Mj is in position lj, 0 6 lj 6 n, j = 1,2, . . . ,m, if it is scheduled
between the completion time of the job that is scheduled in the position (lj + 1) th to the last job and the starting time of
the job that is scheduled in the position ljth to the last job. Then the actual processing time of job Ji if it is scheduled in
the position kth to the last job on machine Mj is given by:
pijk ¼
pij; k > lj;
dijpij; k 6 lj;
(
where dij is the rate-modifying rate of job Ji if it is assigned to machine Mj after the rate-modifying activity is performed.
In the following we present an instance of the two unrelated parallel-machine scheduling problem under study. Fig. 1
illustrates a feasible schedule in which J1, J2, J3 are processed on M1, J4, J5, J6 are processed on M2, and the rate-modifying
positions are l1 = 2 and l2 = 1.
Similar to Gordon and Tarasevich [4], we impose the constraint 0 < dij 6 1, j = 1,2, . . . ,m, on the modifying rate of job Ji
processed on machine Mj. The objective is to minimize the total completion time. Let Ci denote the completion time of
job Ji, i 2 {1,2, . . . ,n}, and rm denote the rate-modifying activity. Then, following the standard notation used in the scheduling
literature (Lee and Lin [9]; Pinedo [20]), we denote our scheduling problem as Rmjrm;0 < dij 6 1j
P
Ci.
3. Minimization of the total completion time
To solve the problem, we ﬁrst introduce three useful lemmas as follows:
1M 11p 1t 21 21pδ 31 31pδ
2M 42p 52p 2t 62 62pδ
Fig. 1. A feasible schedule with n = 6, m = 2, l1 = 2, and l2 = 1.
4800 C.-J. Hsu et al. / Information Sciences 181 (2011) 4799–4803
Constraints (2), (4) and (6) make sure that each position (s 6 lj, j = 1, . . . ,m) on each machine is taken by one job. Constraints
(3), (5) and (7) make sure that each position (sP lj + 1, j = 1, . . . ,m) on each machine is taken by at most one job. Constraint
(8) makes sure that each job is scheduled exactly once. Constraint (9) ensures that on every machine, the unassigned posi-
tions must precede all the assigned positions so that yijs = 1 if and only if Ji is in fact the sth to the last job on machineMj. Let
wijs be the weight of yijs. Then, wij1 = dijpij, wij2 ¼ 2dijpij; . . . ; wijlj ¼ ljdijpij; wijðljþ1Þ ¼ ðlj þ 1Þpij; . . ., and wijn = npij. Since
0 < dij 6 1, wij1 6 wij2 6    6 wijn for all i = 1,2, . . . ,n and j = 1,2, . . . ,m. Thus constraint (9) is redundant and can thus be re-
moved from the formulation without affecting the optimal solution value of the problem. We can formulate the resulting
problem as the following assignment problem, which can be solved in O(mn3 + n2m log(nm)) time (see, e.g., Li [12]). Conse-
quently, by Lemma 3, the order O(mn3 + n2m log(nm)) is bounded from above by O(mn3) if m < n,
Minimize
Xn
i¼1
Xm
j¼1
Xlj
s¼1
sdijpijyijs þ
Xn
s¼ljþ1
spijyijs
2
4
3
5
Subject to
Xn
i¼1
yi1s ¼ 1; s ¼ 1;2; . . . ; l1;
Xn
i¼1
yi1s 6 1; s ¼ l1 þ 1; l1 þ 2; . . . ; n;
Xn
i¼1
yi2s ¼ 1; s ¼ 1;2; . . . ; l2;
Xn
i¼1
yi2s 6 1; s ¼ l2 þ 1; l2 þ 2; . . . ; n;
. . .Xn
i¼1
yims ¼ 1; s ¼ 1;2; . . . ; lm;
Xn
i¼1
yims 6 1; s ¼ lm þ 1; lm þ 2; . . . ;n;
Xm
j¼1
Xn
s¼1
yijs ¼ 1; i ¼ 1;2; . . . ;n;
yijs 2 f0;1g; i ¼ 1;2; . . . ;n; j ¼ 1;2; . . . ;m; s ¼ 1;2; . . . ;n:
Next we address the question of how many position vectors (l1, l2, . . . , lm) there are. Since there are n jobs to be assigned to
m unrelated parallel machines, we have 0 6 l1 + l2 +    + lm 6 n. Let lm+1 = n  (l1 + l2 +    + lm)P 0. This implies that
l1 + l2 +    + lm+1 = n. By Lemma 1, the number of nonnegative integer solutions to l1 + l2 +    + lm 6 n is C(n +m,m). By Lem-
ma 2, the number C(n +m,m) is bounded from above by (2n)m/m!. Thus we conclude that the following theorem holds.
Theorem 1. The Rmjrm;0 < dij 6 1j
P
Ci problem can be solved in O(n
m+3) time.
In real-life situations, maintenance operations naturally satisfy the constraint 0 < dij 6 1, j = 1,2, . . . ,m, for the modifying
rate of job Ji on machineMj [4]. However, from a mathematical point of view, dij is restricted to positive numbers only. In the
following we discuss the computational complexity of the problem Rmjrm;0 < dijj
P
Ci. Let P(n,m) = (n1,n2, . . . ,nm) denote
the vector of the numbers of jobs allocated to the machines, where
Pm
j¼1nj ¼ n. Let (k1,k2, . . . ,km) (0 6 ki 6 ni) denote the po-
sition vector of the rate-modifying activities for a given (n1,n2, . . . ,nm). For a given vector P(n,m) = (n1,n2, . . . ,nm), note that ni
may be 0,1,2, . . . ,n for i = 1,2, . . . ,m. So if we know the numbers of jobs on the ﬁrst m  1 machines, the number of jobs pro-
cessed on the last machine is then uniquely determined because
Pm
j¼1nj ¼ n. Therefore we conclude that an upper bound on
the number of P(n,m) vectors is (n + 1)m1. Applying a similar analysis given in Section 3 of Zhao et al. [24], we conclude that
the Rmjrm;0 < dijj
P
Ci problem can be solved in O(n2m+2) time.
4. Conclusion
In this study we show that the problem of minimizing the total completion time with rate-modifying activities on unre-
lated parallel machines can be solved optimally by an efﬁcient algorithm. Future research may focus on other scheduling
performance measures or similar problems with aging or learning effects and rate-modifying activities.
Acknowledgements
We are grateful to the Editor-in-Chief and anonymous referees for their helpful comments on an earlier version of our
paper. This research was supported in part by the National Science Council of Taiwan, Republic of China, under Grant No.
NSC 99-2221-E-252-008 and NSC 99-2221-E-150-034-MY2.
4802 C.-J. Hsu et al. / Information Sciences 181 (2011) 4799–4803
Considerations of single-machine scheduling with deteriorating jobs
Chuan-Li Zhao a, Chou-Jung Hsu b, Dar-Li Yang c,⇑
aCollege of Mathematics and Systems Sciences, Shenyang Normal University, Shenyang, Liaoning 110034, People’s Republic of China
bDepartment of Industrial Engineering and Management, Nan Kai University of Technology, Nan-Tou 542, Taiwan
cDepartment of Information Management, National Formosa University, Yun-Lin 632, Taiwan
a r t i c l e i n f o
Article history:
Received 30 January 2010
Received in revised form 5 April 2011
Accepted 15 April 2011
Available online 23 April 2011
Keywords:
Deteriorating jobs
Scheduling
Single-machine
Resource allocation
a b s t r a c t
This paper considers some scheduling problems with deteriorating jobs. The objectives are
to minimize the makespan, the total completion time, the total absolute deviation of com-
pletion time, the earliness, tardiness, and due date penalty, the sum of earliness penalties
subject to no tardy jobs, respectively. We also explore two resource constrained scheduling
problems: how to minimize the resource consumption with makespan constraints and
how to minimize the makespan with the total resource consumption constraints. Several
polynomial time algorithms are proposed to optimally solve the problems with the above
objective functions.
 2011 Elsevier Inc. All rights reserved.
1. Introduction
In deterministic scheduling, job-processing time is static and independent of variable situations throughout the whole
process. However, there are many situations in which the processing time of jobs may be subject to change due to deteri-
oration and/or learning phenomena. Machine scheduling problems with deteriorating jobs and/or learning effect have been
extensively studied in the last two decades in various machine settings and performance measures. The deterioration job
scheduling problem was initiated by Brown and Yechiali [1] and Gupta and Gupta [2]. They presented an optimal solution
for expected makespan minimization problem of single-machine scheduling under linear deteriorating conditions. Since
then, numbers of plentiful research related to the deteriorating jobs have been conducted in scheduling under different ma-
chine environments. Browne and Yechiali [3], Kunnathur and Gupta [4], Mosheiov [5], and Low et al. [6] pointed out several
real-life situations in which deteriorating jobs might occur. These include shops with deteriorating machines, and/or delay of
maintenance or cleaning, ﬁre ﬁghting, hospital emergency wards, steel rolling mills, and metal forming process. For details
on this stream of research, reader may refer to the comprehensive surveys by Alidaee and Womer [7] and Cheng et al. [8],
and a book by Gawiejnowicz [9]. More papers that have explored scheduling problems with deteriorating jobs including
Wang and Xia [10,11], Gawiejnowicz [12], Wang and Cheng [13], Wang et al. [14,15], Wu and Lee [16], Li et al. [17], Cheng
et al. [18], Lee et al. [19], Ng et al. [20], Sun et al. [21], Yang and Yang [22], Zhao and Tang [23], Cheng et al. [24,25], Hsu et al.
[26], and etc.
The manufacturing process can always be inﬂuenced by the resources. Problems with ﬁxed processing time dependent on
resources have been widely investigated in the last three decades in various machine settings and performance measures.
For details on this stream of research, reader may refer to the updated survey by Shabtay and Sreiner [27]. However, to
the best of our knowledge, there exist only a handful papers dealing with the resource allocation and deteriorating jobs
0307-904X/$ - see front matter  2011 Elsevier Inc. All rights reserved.
doi:10.1016/j.apm.2011.04.018
⇑ Corresponding author.
E-mail address: dlyang@nfu.edu.tw (D.-L. Yang).
Applied Mathematical Modelling 35 (2011) 5134–5142
Contents lists available at ScienceDirect
Applied Mathematical Modelling
journal homepage: www.elsevier .com/locate /apm
p½33 ¼ 3bp½3  a3b2bp½2  a3bð1 a2bÞ1bp½1  a3bð1 a2bÞð1 a1bÞt0; and
C½3 ¼ 3bp½3 þ ð1 a3bÞ2bp½2 þ ð1 a3bÞð1 a2bÞ1bp½1 þ ð1 a3bÞð1 a2bÞð1 a1bÞt0:
Similarly, by induction, the actual processing time and the completion time for the job J[i] which is scheduled in the ith posi-
tion in a sequence are
p½ii ¼ ibp½i  aibði 1Þbp½i1  aib 1 aði 1Þb
h i
ði 2Þbp½i2      aib 1 aði 1Þb
h i
   ð1 a3bÞ2bp½2
 aib 1 aði 1Þb
h i
   ð1 a2bÞ1bp½1  aib 1 aði 1Þb
h i
   ð1 a2bÞð1 a1bÞt0 ¼
Xi
k¼1
v ikp½k þ v i0; ð2Þ
where the vectors v ik ¼ aibkb
Qi1
j¼kþ1ð1 ajbÞ for k ¼ 1;2; . . . ; i 2; v ii1 ¼ aibði 1Þb; v ii ¼ ib; v i0 ¼ aibt0
Qi1
j¼1ð1 ajbÞ, andQi
j¼iþ1ð1 ajbÞ ¼ 1.
C½i ¼ ibp½i þ ð1 aibÞði 1Þbp½i1 þ    þ ð1 aibÞ 1 aði 1Þb
h i
   ð1 a3bÞ2bp½2
þ ð1 aibÞ 1 aði 1Þb
h i
   ð1 a2bÞ1bp½1 þ ð1 aibÞ 1 aði 1Þb
h i
   ð1 a2bÞð1 a1bÞt0 ¼
Xi
k¼1
zikp½k þ zi0;
ð3Þ
where the vectors zik ¼ kb
Qi
j¼kþ1ð1 ajbÞ for k = 1,2, . . . , i and zi0 ¼ t0
Qi
j¼1ð1 ajbÞ. Therefore, the completion time of the last
job J[n] can be expressed as
C½n ¼ nbp½n þ ð1 anbÞðn 1Þbp½n1 þ    þ ð1 anbÞ 1 aðn 1Þb
h i
   ð1 a3bÞ2bp½2
þ ð1 anbÞ 1 aðn 1Þb
h i
   ð1 a2bÞ1bp½1 þ ð1 anbÞ 1 aðn 1Þb
h i
   ð1 a2bÞð1 a1bÞt0 ¼
Xn
k¼1
zkp½k þ zn0:
ð4Þ
where the vectors zk ¼ kb
Qn
j¼kþ1ð1 ajbÞ for k = 1,2, . . . ,n. Therefore, from Eq. (4), the makespan of the problem is
Cmax ¼
Pn
k¼1zkp½k þ zn0. Since the last item of Eq. (4) is a constant, to minimize the makespan is equivalently to minimize
the item of
Pn
k¼1zkp½k. Thus, it can be viewed as the scalar product of two vectors zk ¼ kb
Qn
j¼kþ1ð1 ajbÞ and p[k]
(k = 1,2, . . . ,n). Obviously, z1 < z2 <    < zn, by the Lemma 1, the elements of the vector p[k] should be sorted in non-increasing
order to minimize the makespan. That is, the optimal sequence for the problem 1jpir = (pi  at)rbjCmax is the well known LPT
sequence. h
4. The total completion time minimization
Similarly, the problem can be denoted as 1jpir ¼ ðpi  atÞrbj
P
iCi. In this section, we show that the problem
1jpir ¼ ðpi  atÞrbj
P
iCi is also polynomially solvable.
Theorem 2. The scheduling problem 1jpir ¼ ðpi  atÞrbj
P
iCi can be solved in O(nlogn) time.
Proof. From Eq. (3), the total completion time is calculated as follows:
Xn
i¼1
C ½i ¼
Xn
i¼1
Xi
k¼1
zikp½k
 !
þ zi0 ¼
Xn
i¼1
Xn
k¼i
zkip½i þ
Xn
i¼1
zi0 ¼
Xn
i¼1
Xn
k¼i
ib
Yk
j¼iþ1
ð1 ajbÞ
" #
p½i þ
Xn
i¼1
zi0: ð5Þ
Since the last item of Eq. (5) is a constant, to minimize the total completion time is equivalently to minimize the item ofPn
i¼1
Pn
k¼ii
bQk
j¼iþ1ð1 ajbÞ
h i
p½i. Thus, it can be viewed as the scalar product of two vectors qi ¼
Pn
k¼ii
bQk
j¼iþ1ð1 ajbÞ and p[i]
(i = 1,2, . . . ,n). By the Lemma 1, we can ﬁnd an optimal schedule according to the following steps.
Step 1: For i = 1,2, . . . ,n, calculate qi.
Step 2: All jobs are sorted in non-decreasing order of their basic processing time pi.
Step 3: Assign the job with the longest basic processing time to the position with the smallest value of qi, the job with the
second longer basic processing time to the position with the second smaller value of qi. . . and so on.
The time complexity of Steps 1 and 3 are O (1) and the time complexity of Step 2 is O(n logn). Thus, the
1jpir ¼ ðpi  atÞrbj
P
iCi problem can be solved in O(n logn) time. h
5136 C.-L. Zhao et al. / Applied Mathematical Modelling 35 (2011) 5134–5142
By Theorem 1, an optimal schedule of problem 1jpir = (pi  at)rbjCmax can be obtained by sequencing the jobs in non-
increasing order of pi. Given a schedule p ¼ J½1; J½2; . . . ; J½n
h i
and p[1]P p[2]P   P p[n] then the makespan is
Cmax ¼ t0
Yn
i¼1
ð1 aibÞ þ
Xn
k¼1
p½kk
b
Yn
i¼kþ1
ð1 aibÞ:
Therefore, the starting time of the ﬁrst job J[1] is
t0 ¼ Cmax 
Xn
k¼1
p½kk
b
Yn
i¼kþ1
ð1 aibÞ
" # !,Yn
i¼1
ð1 aibÞ: ð7Þ
Based on the above analysis, we conclude the following theorem holds.
Theorem 5. For the scheduling problem 1jpir ¼ ðpi  atÞrbj
P
igðEiÞ, an optimal schedule can be obtained by sequencing the jobs in
non-increasing order of pi and the starting time of the ﬁrst job set to 0
t0 ¼ d
Xn
k¼1
pkk
b
Yn
i¼kþ1
ð1 aibÞ
" # !,Yn
i¼1
ð1 aibÞ:
Proof. Consider an optimal schedule p: suppose there are two adjacent jobs Jj and Jk, job Jj followed by job Jk, such that
pj < pk. And suppose job Jk is scheduled in the position r + 1 and its completion time is C0, the starting time of job Jk and
job Jj are sk ¼ C0pkðrþ1Þ
b
1aðrþ1Þb and sj ¼
C0pkðrþ1Þbpjrb 1aðrþ1Þb½ 
ð1arbÞ 1aðrþ1Þb½  , respectively. The completion time of job Jj is Cj ¼
C0pkðrþ1Þb
1aðrþ1Þb . The earliness
penalties of job Jk and job Jj are Ek = d  C0 and Ej ¼ d C0pkðrþ1Þ
b
1aðrþ1Þb , respectively.
Perform an adjacent pair-wise interchange on jobs Jj and Jk, then one gets a new schedule ~p, and the starting time of job Jj
and job Jk are ~sj ¼ C0pjðrþ1Þ
b
1aðrþ1Þb and
~sk ¼ C0pjðrþ1Þ
bpkrb 1aðrþ1Þb½ 
ð1arbÞ 1aðrþ1Þb½  , respectively. The completion time of job Jj and job Jk are
eCj ¼ C0
and eCk ¼ C0pjðrþ1Þb1aðrþ1Þb , respectively. The earliness penalties of job Jj and job Jk are eEj ¼ d C0 and eEk ¼ d C0pjðrþ1Þb1aðrþ1Þb , respectively.
Since pj < pk and b > 0, then eCk > Cj and eEk < Ej. Hence g eEj þ g eEk  < gðEkÞ þ gðEjÞ.
By Theorem 1 and Eq. (7), the completion time of the jobs processed after jobs Jj and Jk is not affected by the interchange,
the completion time of the jobs processed before jobs Jj and Jk becomes longer and the earliness becomes shorter (Since e
~sk > sj, then the starting time of these jobs is longer in ~pÞ. Hence the value of objective under ~p is strictly less than underp.
This contradicts the optimality of p and proves the theorem. h
8. Resource constrained problems
In this section we assume that the release time of job Ji is ri = f(ui), where ui is the amount of resources allocated to job Ji
with 0 6 u 6 ui 6 u; i ¼ 1;2; . . . ;n; u and u are known technological constraints and f : R+? R+ (R+ is the set of non-negative
real numbers) is a strictly decreasing continuous function with f(u)P 0 and f uð ÞP 0.
Let p denote any schedule of jobs J1, J2, . . . , Jn and the job J[i] in position i of p. We denote all schedules by
Q
. Let eU denote
the set of all possible resource allocations u = [u1,u2, . . . ,un] satisfying the resource constraint (i.e., u 6 ui 6 u; i ¼
1;2; . . . ;n;
Pn
i¼1ui 6 U, where U is the global amount of continuously divisible non-renewable resource, and UP nu).
We consider the problem to minimize the total resource consumption with makespan constraints and the problem to
minimize makespan with the resource consumption constraints. The two problems are denoted as
1jpir ¼ ðpi  atÞrb; ri ¼ f ðuiÞ; Cmax 6 Cj
X
i
ui
and
1jpir ¼ ðpi  atÞrb; ri ¼ f ðuiÞ;
X
ui 6 UjCmax;
respectively. For these two problems, the analyses are similar to that of Janiak [39] and Cheng and Janiak [40] of classical
versions.
8.1. Resource consumption minimization
Given a schedule p ¼ J½1; J½2; . . . ; J½n
h i
and a resource allocation u ¼ u½1;u½2; . . . ;u½n
 
, the release time for each job J[i] is
r[i] = f(u[i]), i = 1,2, . . . ,n. The completion time C[i](p,u) may be calculated recursively as
5138 C.-L. Zhao et al. / Applied Mathematical Modelling 35 (2011) 5134–5142
8.2. Makespan minimization
From Theorem 1 and the results of subsection 8.1, for the scheduling problem 1 pir ¼ ðpi  atÞrb; ri ¼ f ðuiÞ;
P
ui 6 U


 

Cmax,
we need only consider the schedule of the jobs sequenced in non-increasing order of pi, i.e., p = [J1, J2, . . . , Jn]. If ui = u,
i = 1,2, . . . ,n, then Cmax p;uð Þ ¼ f uð Þ
Qn
i¼1ð1 aibÞ þ
Pn
k¼1pkk
bQn
i¼kþ1ð1 aibÞ.
At this condition, r1 = r2 =    = rn = f(u), the makespan can be constrained by r1 = f(u). If we increase the amount of re-
source allocated to job J1 then the release time of r1 will be shorter and the makespan will be smaller too. When
C1 = r2 = f(u), the makespan can be constrained by r2 = f(u). In order to get smaller makespan, we should increase the amount
of resources allocated to both jobs J1 and J2. When C2 = r3 = f(u), the makespan can be constrained by r3 = f(u). In order to get
smaller makespan, we should increase the amount of resources allocated to jobs J1, J2, and J3, etc.
By this way, we assume that the maximal amount of resource allocated to the job J1 is umax1 , then u
max
1 ¼
min U  ðn 1Þu; uf g. Let r1 ¼ f umax1
 
, the completion time of job J1 is C1 ¼ p11b þ r1ð1 a1bÞ. If p11b þ r1ð1 a1bÞP f ðuÞ,
the optimal resource allocation is
u1 ¼ umax1 ;
ui ¼ u; i ¼ 2;3; . . . ;n; and
Cmaxðp; Þ ¼ f ðumax1 Þ
Yn
i¼1
ð1 aibÞ þ
Xn
k¼1
pkk
b
Yn
i¼kþ1
ð1 aibÞ:
If p11
b þ r1ð1 a1bÞ < f ðuÞ, when the resource allocated to job J1 reaches the amount that the completion of job J1 is f(u),
the makespan can be constrained by r2 = f(u). At this time we should increase the resource allocated to jobs J1 and J2, and so
on. This implies that there must be a natural number k, such that
Ciðp;upÞ 6 f uð Þ; i ¼ 1;2; . . . ; k 1;
Ciðp;upÞ > f uð Þ; i ¼ k; kþ 1; . . . ;n;
ui ¼ u; i ¼ kþ 1; kþ 2; . . . ; n:
Let d ¼ f uð Þ  Ck1ðp;upÞ, then
r1 ¼ f ðuÞ  d
Xk1
j¼1
pjj
b
Yk1
i¼jþ1
ð1 aibÞ
" #,Yk1
i¼1
ð1 aibÞ;
r2 ¼ p11b þ r1ð1 a1bÞ;
  
rk1 ¼ r1
Yk2
j¼1
ð1 ajbÞ þ
Xk2
j¼1
pjj
b
Yk2
l¼jþ1
ð1 albÞ;
rk ¼ r1
Yk1
j¼1
ð1 ajbÞ þ
Xk1
j¼1
pjj
b
Yk1
l¼jþ1
ð1 albÞ ¼ f uð Þ  d;
ð8Þ
ui ¼ f1ðri Þ; i ¼ 1;2; . . . ; k; and ui ¼ u; i ¼ kþ 1; kþ 2; . . . ;n: ð9Þ
Xk
i¼1
ui þ ðn kÞu ¼ U: ð10Þ
Since k and d can be determined by Eq. (10). First we consider k.
When rk = f(u), suppose the release time of job Ji is ri, i = 1,2, . . . ,k, then
r1 ¼ f uð Þ 
Xk1
j¼1
pjj
b
Yk1
i¼jþ1
ð1 aibÞ
" #,Yk1
i¼1
ð1 aibÞ;
r2 ¼ p11b þ r1ð1 a1bÞ;
  
rk1 ¼ r1
Yk2
j¼1
ð1 ajbÞ þ
Xk2
j¼1
pjj
b
Yk2
l¼jþ1
ð1 albÞ; and
rk ¼ r1
Yk1
j¼1
ð1 ajbÞ þ
Xk1
j¼1
pjj
b
Yk1
l¼jþ1
ð1 albÞ ¼ f uð Þ:
ð11Þ
5140 C.-L. Zhao et al. / Applied Mathematical Modelling 35 (2011) 5134–5142
[22] S.-J. Yang, D.-L. Yang, Single-machine scheduling problems with aging effect under an optional maintenance activity consideration, INFOR 48 (2010)
171–179.
[23] C.-L. Zhao, H.-Y. Tang, Scheduling deteriorating jobs under disruption, Int. J. Prod. Econ. 125 (2010) 294–299.
[24] T.C.E. Cheng, C.-J. Hsu, D.-L. Yang, Unrelated parallel-machine scheduling with deteriorating maintenance activities, Comput. Ind. Eng. 60 (2011) 602–
605.
[25] T.C.E. Cheng, W.C. Lee, C.C. Wu, Single-machine scheduling with deteriorating jobs and past-sequence-dependent setup times, Appl. Math. Model. 35
(2011) 1861–1867.
[26] C.-J. Hsu, S.-J. Yang, D.-L. Yang, Due-date assignment and optional maintenance activity scheduling problem with linear deteriorating jobs, J. Marine
Sci. Technol. 19 (2011) 97–100.
[27] D. Shabtay, G. Steiner, A survey of scheduling with controllable processing times, Discrete Appl. Math. 155 (2007) 1643–1666.
[28] C.-L. Zhao, H.-Y. Tang, Single machine scheduling problems with deteriorating jobs, Appl. Math. Comput. 161 (2005) 865–874.
[29] Y. Yang, D.-Z. Wang, D.-W. Wang, W.H. Ip, H.-F. Wang, Single machine group scheduling problems with the effects of deterioration and learning, Acta
Autom. Sin. 35 (2009) 1290–1295.
[30] J.-B. Wang, A note on single-machine scheduling with decreasing time-dependent job processing times, Appl. Math. Model. 34 (2010) 294–300.
[31] Valerie C.Y. Zhu, L.Y. Sun, L.H. Sun, X.H. Li, Single-machine scheduling time-dependent jobs with resource-dependent ready times, Computers and
Industrial Engineering, doi:10.1016/j.cie.2009.08.006.
[32] T.C.E. Cheng, L.Y. Kang, C.T. Ng, Single machine due-date scheduling of jobs with decreasing start-time dependent processing times, Int. Trans. Oper.
Res. 12 (2005) 355–366.
[33] D. Biskup, Single-machine scheduling with learning considerations, Eur. J. Oper. Res. 115 (1999) 173–178.
[34] R.L. Graham, E.L. Lawler, J.K. Lenstra, A.H.G. Rinnooy Kan, Optimization and approximation in deterministic sequencing and scheduling: A survey, Ann.
Discrete Math. 5 (1979) 287–326.
[35] G.H. Hardy, J.E. Littlewood, G. Polya, Inequalities, Cambridge University Press, London, 1967.
[36] J.J. Kanet, Minimizing variation of ﬂow time in single machine systems, Manage. Sci. 27 (1981) 1453–1459.
[37] S.S. Panwalkar, M.L. Smith, A. Seidmann, Common due date assignment to minimize total penalty for the one machine scheduling problem, Oper. Res.
30 (1982) 391–399.
[38] S. Chang, H. Schneeberger, Single machine scheduling to minimize weighted earliness subject to no tardy jobs, Eur. J. Oper. Res. 34 (1988) 221–230.
[39] A. Janiak, Time-optimal control in a single machine problems with resource constraints, Automatica 22 (1986) 745–747.
[40] T.C.E. Cheng, A. Janiak, Resource optimal control in some single-machine scheduling problems, IEEE Trans. Autom. Control 39 (1994) 1243–1246.
5142 C.-L. Zhao et al. / Applied Mathematical Modelling 35 (2011) 5134–5142
Journal of the Chinese Institute of Industrial Engineers
Vol. 28, No. 4, June 2011, 247–255
Single-machine scheduling with past-sequence-dependent delivery times
and learning effect
Suh-Jenq Yanga*, Chou-Jung Hsua, Teng-Ruey Changa and Dar-Li Yangb
aDepartment of Industrial Engineering and Management, Nan Kai University of Technology,
Nan-Tou, Taiwan 542, Republic of China; bDepartment of Information Management,
National Formosa University, Yun-Lin, Taiwan 632, Republic of China
(Received August 2010; accepted January 2011)
In this study we consider single-machine scheduling problems with past-sequence-dependent (p-s-d)
delivery times and a learning effect. The objectives are to minimize the makespan, the total completion
time, the total weighted completion time, the total waiting time, and the total weighted waiting time.
We show that the makespan, the total completion time, and the total waiting time minimization
problems can be optimally solved in polynomial time algorithms. For the total weighted completion
time and the total weighted waiting time minimization problems, we prove that they remain
polynomially solvable with certain conditions. Furthermore, we analyze the worst-case bounds for the
total weighted completion time and the total weighted waiting time minimization problems and
propose two heuristic algorithms to find near optimal solutions. Our numerical results indicate that the
two heuristic algorithms are efficient and effective in obtaining near optimal solutions for both
problems.
Keywords: scheduling; past-sequence-dependent; delivery time; learning effect
1. Introduction
In a recent paper, Koulamas and Kyparisis [8]
introduced a scheduling problem with past-
sequence-dependent (p-s-d) setup times. They
assumed that the setup time of a job is dependent
on all already scheduled jobs. The objectives were
to minimize the makespan, the total completion
time, and the total absolute differences in comple-
tion time on a single-machine. They showed that all
the studied problems can be optimally solved in
polynomial time algorithms. They also extended
their study to an environment with the effect of
learning. Later, Biskup and Hermann [3] extended
the study of Koulamas and Kyparisis [8] to
problems with due dates. They proved that the
total lateness, the total tardiness, the maximum
lateness, and the maximum tardiness minimization
problems remain polynomially solvable with agree-
able due dates. Kuo and Yang [10] considered
simultaneous with p-s-d setup times and learning
effects on single-machine scheduling problems.
They showed that all the studied problems remain
polynomially solvable when the objectives are to
minimize the makespan, the total absolute differ-
ences in completion times, and the sum of earliness,
tardiness, and common due-date penalty. More
recent papers which have considered scheduling
problems with simultaneous considerations of p-s-d
setup times and learning and/or deteriorating
effects in different machine environments,
including Wang [11], Wang et al. [12,13], and
Cheng et al. [4].
In a succeeding study, Koulamas and Kyparisis
[9] investigated single-machine scheduling problems
with p-s-d job delivery times to minimize the
makespan, the total completion time, the maximum
lateness, and the number of tardy jobs. They
assumed that the job p-s-d delivery time is propor-
tional to the job’s waiting time. Their results
showed that these problems can be solved in
polynomial time solutions.
On the other hand, there is a growing interest to
many researchers to study scheduling problems
with learning effects. For a complete list of studies,
the reader may refer to the comprehensive surveys
by Biskup [2] and Janiak and Rudek [7]. In
addition, there are also some special models or
approaches to scheduling problems with the issue
of learning effects. The reader can refer to Huang
[6], Cheng et al. [5], Yin et al. [15], and Yang et al.
[14]. However, the scheduling problem with simul-
taneous considerations of p-s-d delivery times and
learning effects has not been explored yet.
Therefore, in this article, we study single-machine
scheduling problems simultaneously with p-s-d
delivery times and the learning effect. We consider
the minimization of the following objective func-
tions: the makespan, the total completion time, the
*Corresponding author. Email: sjyang@nkut.edu.tw
ISSN 1017–0669 print/ISSN 2151–7606 online
 2011 Chinese Institute of Industrial Engineers
DOI: 10.1080/10170669.2011.568016
http://www.informaworld.com
D
o
w
n
lo
ad
ed
 B
y:
 [
Ya
ng
, 
Su
h-
Je
nq
] 
At
: 
01
:4
0 
28
 M
ay
 2
01
1
and
Cj ðS2Þ ¼ ð1þ Þ
Xr1
i¼1
p½i i aþ ð1þ Þpkraþ pj ðrþ 1Þa:
ð7Þ
Then the difference between Cj ðS2Þ and CkðS1Þ is
Cj ðS2Þ CkðS1Þ
¼ ðpk pj Þraþ ðpk pj Þ ra  ðrþ 1Þa½  ð8Þ
Since a  0 and   0, we obtain Cj ðS2Þ  CkðS1Þ if
pk  pj.
Therefore, repeating this interchange argument
for all the jobs which are not sequenced in the
shortest normal processing time first (SPT) rule
yields Theorem 1. œ
3.2 The problem 1j pA½ j ^p½ j  j a, qpsdj
P
Cj
Theorem 2: For the problem 1j pA½ j  ¼ p½ j  j a,
qpsdj
P
Cj, there exists an optimal schedule in
which the jobs are sequenced in the SPT rule.
Proof: We use the same notations as in the proof
of Theorem 1. To show sequence S1 dominates
sequence S2, it suffices to show that (i) wl ðS1Þ 
wl ðS2Þ and (ii) Cj ðS1Þ þ CkðS1Þ  CkðS2Þ þ Cj ðS2Þ.
Suppose that pk  pj. By definition, the waiting
times of job Jl in sequences S1 and S2 are,
respectively, given by
wl ðS1Þ ¼
Xr1
i¼1
p½i i a þ pjra þ pkðrþ 1Þa ð9Þ
and
wl ðS2Þ ¼
Xr1
i¼1
p½i i a þ pkra þ pj ðrþ 1Þa: ð10Þ
Then the difference between wl ðS1Þ and wl ðS2Þ is
wl ðS2Þ  wl ðS1Þ ¼ ð pk  pj Þ ra  ðrþ 1Þa½ : ð11Þ
Since a  0 and pk  pj, we have wl ðS1Þ  wl ðS2Þ.
Moreover, by the proof of Theorem 1, we have
CkðS1Þ  Cj ðS2Þ. And from pk  pj, it is easy to
show that Cj ðS1Þ  CkðS2Þ. Hence, Cj ðS1Þ þ
CkðS1Þ  CkðS2Þ þ Cj ðS2Þ.
Therefore, repeating this interchange argument
for all the jobs which are not arranged in the SPT
rule yields Theorem 2. œ
3.3 The problem 1j pA½ j ^p½ j  j a, qpsdj
P
jCj
Theorem 3: For the problem 1j pA½ j  ¼ p½ j  j a,
qpsdj
P
jCj, if
pk
pj
 kj  1 for any two jobs Jj and
Jk, j, k ¼ 1, 2, . . . , n, an optimal schedule can be
obtained by sequencing the jobs in non-decreasing
order of pj=j (i.e. the WSPT rule).
Proof: We still use the same notations as in the
proof of Theorem 1. Suppose that pkpj 
k
j
 1. To
show sequence S1 dominates sequence S2, we have
to show that (i) wl ðS1Þ  wl ðS2Þ and (ii) jCj ðS1Þþ
kCkðS1Þ  kCkðS2Þ þ jCj ðS2Þ.
The proof of part (i) is given in Theorem 2. In
addition, by the proof of Theorem 1, we have
kCkðS2Þ þ jCj ðS2Þ
  jCj ðS1Þ þ kCkðS1Þ 
¼ ðjpk  kpj Þð1þ Þra
þ ðkpk  jpj Þ ra  ðrþ 1Þa½ : ð12Þ
Since pkpj 
k
j
 1, jCj ðS1Þ þ kCkðS1Þ 
kCkðS2Þ þ jCj ðS2Þ.
Therefore, repeating this interchange argument
for all the jobs not scheduled according to the
WSPT rule completes the proof of Theorem 3. œ
3.4 The problem 1j pA½ j ^p½ j  j a, qpsdj
P
wj
Theorem 4: For the problem 1j pA½ j  ¼ p½ j  j a,
qpsdj
P
wj, there exists an optimal schedule in
which the jobs are sequenced in the SPT rule.
Proof: Here, we still use the same notations as in
the proof of Theorem 1. Suppose that pk  pj. By
the proof of Theorem 2, we have that wl ðS1Þ 
wl ðS2Þ. To show sequence S1 dominates sequence
S2, it suffices to show that wj ðS1Þ þ wkðS1Þ 
wkðS2Þ þ wj ðS2Þ.
By definition, the waiting times of jobs Jj and Jk
in sequence S1 and jobs Jk and Jj in sequence S2
are, respectively, given by
wj ðS1Þ ¼
Xr1
i¼1
p½i i a, ð13Þ
wkðS1Þ ¼
Xr1
i¼1
p½i i a þ pjra, ð14Þ
wkðS2Þ ¼
Xr1
i¼1
p½i i a, ð15Þ
and
wj ðS2Þ ¼
Xr1
i¼1
p½i i a þ pkra: ð16Þ
Observe that wj ðS1Þ ¼ wkðS2Þ and
wj ðS2Þ  wkðS1Þ ¼ ð pk  pj Þra: ð17Þ
Since a  0, we obtain wj ðS1Þ þ wkðS1Þ  wkðS2Þþ
wj ðS2Þ.
Journal of the Chinese Institute of Industrial Engineers 249
D
o
w
n
lo
ad
ed
 B
y:
 [
Ya
ng
, 
Su
h-
Je
nq
] 
At
: 
01
:4
0 
28
 M
ay
 2
01
1
jobs Jk and Jj in sequence S2 are, respectively,
given by
wj ðS1Þ ¼
Xr1
i¼1
p½i , ð26Þ
wkðS1Þ ¼
Xr1
i¼1
p½i  þ pj, ð27Þ
wkðS2Þ ¼
Xr1
i¼1
p½i , ð28Þ
and
wj ðS2Þ ¼
Xr1
i¼1
p½i  þ pk: ð29Þ
Consequently,
kwkðS2Þ þ jwj ðS2Þ
  jwj ðS1Þ þ kwkðS1Þ 
¼ jpk  kpj: ð30Þ
Clearly, we obtain jwj ðS1Þ þ kwkðS1Þ 
kwkðS2Þ þ jwj ðS2Þ if pkk 
pj
j
.
Therefore, repeating this interchange argument
for all the jobs not sequenced according to the
WSPT rule completes the proof of Theorem 7. œ
Theorem 8: Let S be an optimal schedule and S be
a WSPT schedule for the problem 1j pA½ j  ¼ p½ j  j a,
qpsdj
P
jCj. ThenPn
j¼1 jCj ðSÞPn
j¼1 jCj ðSÞ
 1
na
:
Proof: Without loss of generality, we assume that
S ¼ ðJ1, J2, . . . , JnÞ. Let Cj ðSÞ be the completion
time of Jj using WSPT schedule S. Then, we have
Xn
j¼1
jCj ðSÞ ¼
Xn
j¼1
j ð1þ Þ
Xj1
i¼1
pii
a þ pjj a
" #

Xn
j¼1
j ð1þ Þ
Xj1
i¼1
pi þ pj
" #
: ð31Þ
Let ðJ½1, J½2, . . . , J½nÞ be the order in which the jobs
complete in the optimal schedule S. Then, we have
Xn
j¼1
jCj ðSÞ ¼
Xn
j¼1
½ j  ð1þ Þ
Xj1
i¼1
p½i i a þ p½ j  j a
" #

Xn
j¼1
½ j  ð1þ Þ
Xj1
i¼1
p½i  þ p½ j 
" #
na

Xn
j¼1
j ð1þ Þ
Xj1
i¼1
pi þ pj
" #
na: ð32Þ
Hence,
Pn
j¼1 jCj ðSÞPn
j¼1 jCj ðSÞ
 1na : œ
Theorem 9: Let S be an optimal schedule and S be
a WSPT schedule for the problem 1j pA½ j  ¼ p½ j  j a,
qpsdj
P
jwj: ThenPn
j¼1 jwj ðSÞPn
j¼1 jwj ðSÞ
 1
na
:
Proof: Without loss of generality, we assume that
S ¼ ðJ1, J2, . . . , JnÞ. Let wj ðSÞ be the waiting time of
job Jj using WSPT schedule S. Then, we have
Xn
j¼1
jwj ðSÞ ¼
Xn
j¼1
j
Xj1
i¼1
pii
a
 !

Xn
j¼1
Xj1
i¼1
jpi: ð33Þ
Let ðJ½1, J½2, . . . , J½nÞ be the order in which the jobs
complete in the optimal schedule S. Then, we have
Xn
j¼1
jwj ðSÞ ¼
Xn
j¼1
½ j 
Xj1
i¼1
p½i i a
 !
 na
Xn
j¼1
Xj1
i¼1
½ j p½i   na
Xn
j¼1
Xj1
i¼1
jpi:
ð34Þ
Hence,
Pn
j¼1 jwj ðSÞPn
j¼1 jwj ðSÞ
 1na. œ
The heuristics are coded in Visual BASIC 6.0
and implemented on an Intel CoreTM 2 Quad
CPU Q8200 @2.33GHz with 2GB RAM personal
computer. The test problems for each environment
are randomly generated based on the combinations
of the following parameters.
(1) n is equal to 6, 7, 8, 9, 10, 11, or 12;
(2) pi is uniformly distributed over [1, 100];
(3) a is equal to -0.05, 0.25, or 0.45;
(4)  is equal to 0.05, 0.5, or 1;
(5) i is uniformly distributed over [1,10]; and
(6) i is uniformly distributed over [1,10].
The ratio of Ch=Copt is used as an index to
evaluate the performance of the heuristics, where
Ch is the solution found by the heuristic algorithm
and Copt is that for the optimal solution. Therefore,
to evaluate the performance of the heuristics in
finding the solutions of the total weighted comple-
tion time minimization problem and the total
weighted waiting time minimization problem, 63
(7 3 3) experimental conditions are examined
and 30 test problems are randomly generated for
each condition. Therefore, a total of 3780 problems
are tested. The computational results for problems
1j pA½ j  ¼ p½ j  j a, qpsdj
P
jCj and 1j pA½ j  ¼ p½ j  j a,
qpsdj
P
jwj are shown in Tables 1 and 2 and
Figures 1 and 2, respectively.
From Tables 1 and 2, we can see that the
performance of the heuristic algorithms is good.
For the total weighted completion time minimiza-
tion problem, the larger the value of the learning
Journal of the Chinese Institute of Industrial Engineers 251
D
o
w
n
lo
ad
ed
 B
y:
 [
Ya
ng
, 
Su
h-
Je
nq
] 
At
: 
01
:4
0 
28
 M
ay
 2
01
1
tardy jobs. It would also be interesting to investi-
gate an extension of the problem to other shops, or
other performance measures.
Acknowledgments
We thank the Editor and two anonymous reviewers
for their helpful comments on an earlier version of this
article. This research was supported in part by the
National Science Council of Taiwan under grant no.
NSC 99-2221-E-252-008.
Notes on contributors
Suh-Jenq Yang is currently an Associate Professor in the
Department of Industrial Engineering and Management,
0.9950
1.0000
1.0050
1.0100
1.0150
1.0200
1.0250
1.0300
Number of jobs
R
at
io
 o
f h
eu
ris
tic
 to
 o
pt
im
al
a=–0.05 a=–0.25 a=–0.45
0.9950
1.0000
1.0050
1.0100
1.0150
1.0200
1.0250
1.0300
Number of jobs
R
at
io
 o
f h
eu
ris
tic
 to
 o
pt
im
al
a=–0.05 a=–0.25 a=–0.45
(a) (b)
(c) (d)
(e) (f)
0.9950
1.0000
1.0050
1.0100
1.0150
1.0200
1.0250
1.0300
Number of jobs
R
at
io
 o
f h
eu
ris
tic
 to
 o
pt
im
al
a=–0.05 a=–0.25 a=–0.45
1.0000
1.0002
1.0004
1.0006
1.0008
1.0010
Number of jobs
R
at
io
 o
f h
eu
ris
tic
 to
 o
pt
im
al
r =0.05 r =0.5 r =1
1.0000
1.0030
1.0060
1.0090
1.0120
Number of jobs
R
at
io
 o
f h
eu
ris
tic
 to
 o
pt
im
al
r = 0.05 r = 0.5 r = 1
1.0000
1.0050
1.0100
1.0150
1.0200
1.0250
1.0300
6 7 8 9 10 11 12 6 7 8 9 10 11 12
6 7 8 9 10 11 12 6 7 8 9 10 11 12
6 7 8 9 10 11 12 6 7 8 9 10 11 12
Number of jobs
R
at
io
 o
f h
eu
ris
tic
 to
 o
pt
im
al
r = 0.05 r = 0.5 r = 1
Figure 1. Ratio of heuristic to optimal for the total weighted completion time. (a) ¼ 0.05, (b) ¼ 0.5, (c)  ¼ 1,
(d) a¼0.05, (e) a¼0.25 and (a) a¼0.45.
0.9950
1.0000
1.0050
1.0100
1.0150
1.0200
1.0250
1.0300
6 7 8 9 10 11 12
Number of jobs
R
at
io
 o
f h
eu
ris
tic
 to
 o
pt
im
al
a=–0.05 a=–0.25
a=–0.45
Figure 2. Ratio of heuristic to optimal for the total
weighted waiting time.
Journal of the Chinese Institute of Industrial Engineers 253
D
o
w
n
lo
ad
ed
 B
y:
 [
Ya
ng
, 
Su
h-
Je
nq
] 
At
: 
01
:4
0 
28
 M
ay
 2
01
1
*542 568
632 64
(past-sequence-dependent) (delivery time)
(learning effect) (makespan)
(total completion time) (total weighted completion time)
(total waiting time) (total weighted waiting time)
(polynomial time
algorithm) (certain condition)
worst-case
(* sjyang@nkut.edu.tw)
Journal of the Chinese Institute of Industrial Engineers 255
D
o
w
n
lo
ad
ed
 B
y:
 [
Ya
ng
, 
Su
h-
Je
nq
] 
At
: 
01
:4
0 
28
 M
ay
 2
01
1
programming formulation for the problem. Lee et al. [11] considered single-machine scheduling 
problem with a new deterioration model where the actual job processing time is a function of jobs 
already processed. They proved that the makespan minimization problem can be solved in 
polynomial time. Cheng et al. [12, 13, 14] considered some scheduling problems with the actual job 
processing time is a function of jobs already processed. Chen [15], Hsieh and Bricker [16], and 
Mosheiov [17] stressed scheduling deteriorating jobs in a multi-machine setting. They assumed that 
the jobs deteriorate linearly and they are processed on parallel identical machines. Chen [15] 
considered minimizing the flow time, while Hsieh and Bricker [16], and Mosheiov [17] studied 
makespan minimization. Kononov and Gawiejnowicz [18], Mosheiov [19], Wang and Xia [20] and 
Wang [21] found dedicated machines problems with deteriorating jobs. We refer the reader to book 
Gawiejnowicz [22] for more details on scheduling problems with time-dependent processing times. 
Most of the scheduling of the frontal papers with deteriorating jobs literature examines regular 
measures of the performance, which are nondecreasing functions of job completion times. Yet in 
certain situations one is more interested in performance measures that are non-regular. To the best 
of our knowledge, there exist only a few research results on scheduling models considering 
non-regular performance measures. Cheng et al. [23, 24] stressed single-machine scheduling 
problem with linear job-independent increasing (decreasing) deterioration jobs. The problem was to 
determine an optimal combination of the due-date and schedule such that to minimize the sum of 
due-date, earliness, and tardiness penalties. They gave a polynomial time algorithm to solve this 
problem. Wang and Guo [25] considered a single-machine scheduling problem with the effects of 
learning and deterioration. The problem is to determine an optimal combination of the due-date and 
schedule so as to minimize the sum of earliness, tardiness and due-date. They showed that the 
problem remains polynomially solvable under the proposed model.  
Moreover, Yang et al. [26] found single-machine duewindow assignment and scheduling with 
job-dependent aging effects and deteriorating maintenance. The objective is to find jointly the 
optimal time to perform maintenance, the optimal location and size of the due-window, and the 
optimal job sequence to minimize the total earliness, tardiness, and due-window related costs. They 
showed that the problem can be optimally solved in polynomial time. Zhao and Tang [27] 
considered a single-machine due-window assignment scheduling problem with deterioration jobs 
and a rate-modifying activity. The objective is to schedule the jobs, the due-window and the 
rate-modifying activity so as to minimize the sum of earliness, tardiness and due-window starting 
time and due-window size costs. They introduced a polynomial solution for the problem. 
In this paper we investigated a single-machine scheduling in the context of the common due date 
problem, which deals with job scheduling on a single-machine in a just-in-time (JIT) production 
environment [28, 29]. In addition, we studied the case where the actual processing time of a job is a 
simple linear function of its execution starting time and its deterioration rate. The objective function 
was to minimize a non-regular performance measure, i.e., the absolute value in maximum 
lateness [29]. 
Problem description 
The single-machine problem is to schedule n jobs 1 2, ,..., nJ J J  on one machine. All the jobs are 
available for processing at some time 0 0t > . The machine can handle one job at a time and 
preemption is not allowed. The (actual) processing time ( )jp t  of job jJ  ( 1,2, , )j n=   is given 
as a simple linear increasing function dependent on its execution start time t : 
( )j jp t tα= ,  (1) 
where jα  denotes the deterioration rate of job jJ . 
For a given schedule [ ]1 2, ,..., nJ J Jπ = , ( )j jC C π=  represents the completion time of job jJ . 
The objective to be minimized is a function of the completion time jC , which in turn dependent on 
the schedule π . j j jL C d= −  represents the lateness of job jJ , where jd  denotes the due date 
Advanced Materials Research Vols. 201-203 1055
( )
*
1
2
1 1
n
l jj
d
s
α α
=
=
+ + +∏
. 
If * 0s t< , we have to set 
*
0s t= . Hence, we have 
Theorem 2. For the problem 
max
1 ( ) ,j j ip t t d Lα= , there exists an optimal schedule in which the 
largest deterioration rate job lJ  starts at time 
( )0
1
2
: max ,
1 1
n
l jj
d
t t
α α
=
 
 
=  
+ + +  ∏
 
and processes the other jobs without idle time after lJ  in any order. 
Note that the problem 
max
1 ( ) ,j j ip t t d Lα=  can be solved in O(n) time. 
Now we consider the problem 
max
1 ( ) ,j j opt ip t t d Lα= , for optd  is a variable, we have to find a 
value *d  which minimizes (4). We may assume that 0s t= . Hence, we have 
Theorem 3. For the problem 
max
1 ( ) ,j j opt ip t t d Lα= , the optimal solution can be obtained by 
scheduling the largest deterioration rate job lJ  at time 0s t=  and setting 
( ) ( )0 0 1
1
1 1
2
n
opt l jj
d t tα α
=
 = + + +
 ∏ . 
The other jobs without idle time after lJ  will be scheduled in any order. 
Extensions 
Zhao et al. [6], and Kononov and Gawiejnowicz [18] considered a scheduling problem with a 
proportional linear deterioration, i.e., the actual processing time of job jJ  is given by 
( )( )j jp t p a bt= + ,  
if its starting time is t , where  jp , 1,2,...,j n=  is the basic processing time of job jJ , a  and 
b  are positive constants. 
Lemma 3 [18]. For a given schedule [ ]1 2, ,..., nJ J Jπ =  of max1 ( ) ( ),j j ip t p a bt d L= + , if all job 
starts at time 0 0s t≥ ≥ , then job jJ ’s completion time jC  is equal to 
( )
1
1
j
j ii
a a
C s bp
b b=
 = + + − 
 
∏ . 
 
Similar to the previous analysis, we can extend our results (Theorems 1-3) to model 
( )( )j jp t p a bt= + , we can obtain the following results: 
Theorem 4. For the problem 
max
1 ( ) ( ),j j ip t p a bt d L= + , there exists an optimal schedule in 
which the longest deterioration rate job is scheduled first. 
 
Due to Theorem 4, the objective function (2) can be replaced by 
( ) ( )
1
( ) max 1 ,  1
n
l jj
a a a a
f s s bp d s bp d
b b b b=
      = + + − − + + − −          
∏ , (5) 
where { }max | 1, 2,...,l jp p j n= = . 
Similar to Section 3, the objective function ( )f s  is minimized if we choose 
Advanced Materials Research Vols. 201-203 1057
39 (1991), p. 979-991. 
[5]  G. Mosheiov G (1994). Scheduling jobs under simple linear deterioration. Computers and 
Operations Research Vol. 21 (1994), p. 653-659. 
[6]  C. Zhao, Q. Zhang and H. Tang. Scheduling problems under linear deterioration. Acta 
Automatica Sinica Vol. 29 (2003), p. 531-535. 
[7]  J.-B. Wang and Z.-Q. Xia. Scheduling jobs under decreasing linear deterioration. Information 
Processing Letters Vol. 94 (2005), p. 63-69. 
[8]  C.-C. Wu, W.-C. Lee and Y.-R. Shiau. Minimizing the total weighted completion time on a 
single-machine under linear deterioration. International Journal of Advanced Manufacturing 
Technology Vol. 33 (2007), p. 1237-1243. 
[9]  Y.-R. Shiau, W.-C. Lee, C.-C. Wu and C.-M. Chang. Two-machine flowshop scheduling to 
minimize mean flow time under simple linear deterioration. International Journal of Advanced 
Manufacturing Technology Vol. 34 (2007), p. 774-782. 
[10]  M.D. Toksa and E. Guner. Minimizing the earliness/tardiness costs on parallel machine with 
learning effects and deteriorating jobs: a mixed nonlinear integer programming approach. 
International Journal of Advanced Manufacturing Technology Vol. 38 (2008), p. 801-808. 
[11]  W.-C. Lee, C.-C. Wu and H.-C. Liu. A note on single-machine makespan problem with 
general deteriorating function. International Journal of Advanced Manufacturing Technology 
Vol. 40 (2009), p. 1053-1056. 
[12] T.C.E. Cheng, C.-C. Wu and W.-C. Lee. Some scheduling problems with 
sum-of-processing-times-based and job-position-based learning effects. Information Sciences 
Vol. 178 (2008), p. 2476-2487. 
[13] T.C.E. Cheng, C.-C. Wu and W.-C. Lee. Some scheduling problems with deteriorating jobs 
and learning effects. Computers & Industrial Engineering Vol. 54 (2008), p. 972-982. 
[14] T.C.E. Cheng, W.-C. Lee, C.C. Wu. Single-machine scheduling with deteriorating functions 
for 
 job processing times. Applied Mathematical Modelling Vol. 34 (2010), p. 4171-4134. 
[15] Z.-L. Chen. Parallel machine scheduling with time dependent processing times. Discrete 
Applied Mathematics Vol. 70 (1996), p. 81-94. 
[16] Y.C. Hsieh and D.L. Bricker. Scheduling linearly deteriorating jobs on multiple machines. 
Computers and Industrial Engineering Vol. 32 (1997), p. 727-734. 
[17] G. Mosheiov. Multi-machine scheduling with linear deterioration. INFOR Vol. 36 (1998), p. 
205-214. 
[18] A. Kononov and S. Gawiejnowicz. NP-hard cases in scheduling deteriorating jobs on 
dedicated machines. Journal of the Operational Research Society Vol. 52 (2001), p. 708-717. 
[19] G. Mosheiov. Complexity analysis of job-shop scheduling with deteriorating jobs. Discrete 
Applied Mathematics Vol. 117 (2002), p. 195-209. 
[20] J.-B. Wang and Z.-Q. Xia. Flow shop scheduling with deteriorating jobs under dominating 
machines. Omega Vol. 34 (2006), p. 327-336. 
[21] J.-B. Wang. Flow shop scheduling with deteriorating jobs under dominating machines to 
minimize makespan. International Journal of Advanced Manufacturing Technology Vol. 48 
(2010), p. 719-723. 
[22] S. Gawiejnowicz. Time-Dependent Scheduling. Springer, Berlin (2008). 
[23] T.C.E. Cheng, L.Y. Kang and C.T. Ng. Due-date assignment and single machine scheduling 
Advanced Materials Research Vols. 201-203 1059
行政院國家科學委員會補助國內專家學者出席國際學術會議報告 
                                                                                                            100 年 4 月 13 日 
 
報告人姓名 許 洲 榮 
服務機構 
及職稱 
南開科技大學工業工程與管理系副教授 
時間 
會議 
地點 
100/04/09~100/04/11 
    中國桂林  
本會核定 
補助文號 
NSC 99-2221-E-252-008 
一般型研究計書 
會議 
名稱 
(中文)第 2 屆製造科學與工程國際會議 
(英文) The 2nd International Conference on Manufacturing Science and Engineering 
 
本次會議(The 2nd International Conference on Manufacturing Science and Engineering) 於 2011 年 4 月 9 日
至 11 日假中國桂林的大正溫泉渡假酒店舉行。製造科學與工程國際會議每年舉辦一次，由來自中
國各地學者與少數的外國學者發表論文。 
本人在這次研討會出版一篇學術論文，題目為 “Single-machine scheduling to minimize 
absolute value in maximum lateness with deteriorating jobs＂。在研討會的論文發表場次
中 ， 有 一 學 者 Kesavan 發 表 之 研 究 論 文 ， 題 目 為  “Effect of aging treatment on 
microstructure and wear behavior of a nickel based hardfaced coating＂，由於論文是關於
鎳的老化效應處理問題，因此，引發與會學者的討論，本人亦從中獲益良多。 
同時，於會場中，亦遇到多位來自大陸以及台灣的教授，彼此交換一些研究的心得，進一步瞭
解兩岸在研究上的方向，對於將來進一步的合作或個人研究，有相當之助益。來自中國吉林省的張
英爽教授，為我介紹吉林大學機械系有工業工程組，並邀請我參加 IEEE 第 18 屆工業工程與工程管
理國際學術會議，這個會議在中國長春舉行。 
此次會議是本人第一次參加國際會議，除了可以增加國際交流的機會，同時亦認識了幾位國際
的研究學者，相信在以後的研究上，可以有很大的幫助，因此，此次參加國際會議，獲益良多。 
感謝國科會提供此次參加研討會之經費補助。 
 
Most of the scheduling of the frontal papers with deteriorating jobs literature examines regular measures of the performance, 
which are nondecreasing functions of job completion times. Yet in certain situations one is more interested in performance 
measures that are non-regular. To the best of our knowledge, there exist only a few research results on scheduling models 
considering non-regular performance measures. Cheng et al. [23, 24] stressed single-machine scheduling problem with linear job-
independent increasing (decreasing) deterioration jobs. The problem was to determine an optimal combination of the due-date and 
schedule such that to minimize the sum of due-date, earliness, and tardiness penalties. They gave a polynomial time algorithm to 
solve this problem. Wang and Guo [25] considered a single-machine scheduling problem with the effects of learning and 
deterioration. The problem is to determine an optimal combination of the due-date and schedule so as to minimize the sum of 
earliness, tardiness and due-date. They showed that the problem remains polynomially solvable under the proposed model.  
Moreover, Yang et al. [26] found single-machine duewindow assignment and scheduling with job-dependent aging effects and 
deteriorating maintenance. The objective is to find jointly the optimal time to perform maintenance, the optimal location and size 
of the due-window, and the optimal job sequence to minimize the total earliness, tardiness, and due-window related costs. They 
showed that the problem can be optimally solved in polynomial time. Zhao and Tang [27] considered a single-machine due-
window assignment scheduling problem with deterioration jobs and a rate-modifying activity. The objective is to schedule the 
jobs, the due-window and the rate-modifying activity so as to minimize the sum of earliness, tardiness and due-window starting 
time and due-window size costs. They introduced a polynomial solution for the problem. 
In this paper we investigated a single-machine scheduling in the context of the common due date problem, which deals with job 
scheduling on a single-machine in a just-in-time (JIT) production environment [28, 29]. In addition, we studied the case where the 
actual processing time of a job is a simple linear function of its execution starting time and its deterioration rate. The objective 
function was to minimize a non-regular performance measure, i.e., the absolute value in maximum lateness [29]. 
 
Problem description 
 
The single-machine problem is to schedule n jobs  on one machine. All the jobs are available for processing at 
some time . The machine can handle one job at a time and preemption is not allowed. The (actual) processing time 
1 2, ,..., nJ J J
0 0t > ( )jp t  
of job jJ  ( 1, 2, , )j n= "  is given as a simple linear increasing function dependent on its execution start time : t
( )j jp t tα= ,  (1) 
where jα  denotes the deterioration rate of job jJ . 
For a given schedule [ ]1 2, ,..., nJ J Jπ = , ( )j jC C π=  represents the completion time of job jJ . The objective to be 
minimized is a function of the completion time jC , which in turn dependent on the schedule π . j jL C d= − j  represents the 
lateness of job jJ , where jd  denotes the due date of job jJ . In this paper, we assume that , and d  may be a given 
parameter of the problem or it may be a variable, i.e., we are interested in an optimal due date  with respect to the objective 
function. The objective is to find a schedule that minimizes the absolute value of maximum lateness: 
jd = d
optd
{ } maxmax | 1, 2,...,jC d j n L− = = i . Using the three-field notation for scheduling problem classification, the problem can 
be denoted as 
max
1 ( ) ,j j ip t t d Lα=  and max1 ( ) ,j j opt ip t t d Lα= . 
 
Problems 
max
1 ( ) ,j j ip t t d Lα=  and max1 ( ) ,j j opt ip t t d Lα=  
 
Lemma 1. For the problems 
max
1 ( ) ,j j ip t t d Lα=  and max1 ( ) ,j j opt ip t t d Lα= , there exists an optimal schedule in 
which the machine is not idle between the processing of the jobs. 
Proof. Similar to the proof of Lemma 7.1 in reference [29].  
 
Lemma 2 [5]. For a given schedule [ ]1 2, ,..., nJ J Jπ =  of max1 ( ) ,j j ip t t d Lα= , if all job starts at time , then 
job 
0 0s t≥ >
jJ ’s completion time jC  is equal to 
( )1 1jj iiC s α== +∏ . 
Theorem 3. For the problem 
max
1 ( ) ,j j opt ip t t d Lα= , the optimal solution can be obtained by scheduling the largest 
deterioration rate job  at time lJ 0s t=  and setting 
( ) ( )0 0 11 1 12 nopt l jjd t tα α=⎡ ⎤= + + +⎣ ⎦∏ . 
The other jobs without idle time after  will be scheduled in any order. lJ
  
Extensions 
 
Zhao et al. [6], and Kononov and Gawiejnowicz [18] considered a scheduling problem with a proportional linear deterioration, i.e., 
the actual processing time of job jJ  is given by 
( )( )j jp t p a bt= + ,  
if its starting time is t , where  jp , 1, 2,...,j n=  is the basic processing time of job jJ ,  and  are positive constants. a b
Lemma 3 [18]. For a given schedule [ ]1 2, ,..., nJ J Jπ =  of max1 ( ) ( ),j j ip t p a b t d L= + , if all job starts at time 
, then job 0 0s t≥ ≥ jJ ’s completion time jC  is equal to 
( )1 1jj iia aC s bpb b=
⎛ ⎞= + + −⎜ ⎟⎝ ⎠∏ . 
 
Similar to the previous analysis, we can extend our results (Theorems 1-3) to model , we can obtain the 
following results: 
(( )j jp t p a bt= + )
Theorem 4. For the problem 
max
1 ( ) ( ),j j ip t p a b t d L= + , there exists an optimal schedule in which the longest 
deterioration rate job is scheduled first. 
 
Due to Theorem 4, the objective function (2) can be replaced by 
( ) ( )1( ) max 1 ,  1nl ja a a ajf s s bp d s bp db b b b=⎧ ⎫⎛ ⎞ ⎛ ⎞ ⎡ ⎤= + + − − + + − −⎨ ⎬⎜ ⎟ ⎜ ⎟ ⎣ ⎦⎝ ⎠ ⎝ ⎠⎩ ⎭∏ , (5) 
where { }max | 1, 2,...,l jp p j= = n . 
Similar to Section 3, the objective function ( )f s  is minimized if we choose 
( )* 1
2( )
1 1nl jj
ad abs
bbp bp=
⎛ ⎞+⎜ ⎟= −⎜ ⎟+ + +⎜ ⎟⎝ ⎠∏
. 
If , we have to set . Hence, we have * 0s t< * 0s t=
Theorem 5. For the problem 
max
1 ( ) ( ),j j ip t p a b t d L= + , there exists an optimal schedule in which the largest 
deterioration rate job  starts at time lJ
( )0 1
2( )
: max ,
1 1nl jj
ad abt t
bbp bp=
⎧ ⎫⎛ ⎞+⎪ ⎪⎜ ⎟⎪ ⎪= −⎨ ⎬⎜ ⎟+ + +⎪ ⎪⎜ ⎟⎪ ⎪⎝ ⎠⎩ ⎭∏
 
and processes the other jobs without idle time after  in any order. lJ
 
[16] Y.C. Hsieh and D.L. Bricker. Scheduling linearly deteriorating jobs on multiple machines. Computers and Industrial 
Engineering Vol. 32 (1997), p. 727-734. 
[17] G. Mosheiov. Multi-machine scheduling with linear deterioration. INFOR Vol. 36 (1998), p. 205-214. 
[18] A. Kononov and S. Gawiejnowicz. NP-hard cases in scheduling deteriorating jobs on dedicated machines. Journal of the 
Operational Research Society Vol. 52 (2001), p. 708-717. 
[19] G. Mosheiov. Complexity analysis of job-shop scheduling with deteriorating jobs. Discrete Applied Mathematics Vol. 117 
(2002), p. 195-209. 
[20] J.-B. Wang and Z.-Q. Xia. Flow shop scheduling with deteriorating jobs under dominating machines. Omega Vol. 34 
(2006), p. 327-336. 
[21] J.-B. Wang. Flow shop scheduling with deteriorating jobs under dominating machines to minimize makespan. International 
Journal of Advanced Manufacturing Technology Vol. 48 (2010), p. 719-723. 
[22] S. Gawiejnowicz. Time-Dependent Scheduling. Springer, Berlin (2008). 
[23] T.C.E. Cheng, L.Y. Kang and C.T. Ng. Due-date assignment and single machine scheduling with deteriorating jobs. 
Journal of the Operational Research Society Vol. 55 (2004), p. 198-203. 
[24] T.C.E. Cheng, L.Y. Kang and C.T. Ng. Single machine due-date scheduling of jobs with decreasing start-time dependent 
processing times. International Transactions in Operational Research Vol. 12 (2005), p. 355-366. 
[25]  J.-B. Wang and Q. Guo. A due-date assignment problem with learning effect and deteriorating jobs. Applied Mathematical 
Modelling Vol. 34 (2010), p. 309-313. 
[26]  S.-J. Yang, D.-L. Yang and T.C.E. Cheng. Single-machine due-window assignment and scheduling with job-dependent 
aging effects and deteriorating maintenance. Computers & Operations Research Vol. 37 (2010), p. 1510-1514. 
[27]  C.-L. Zhao and H.-Y. Tang. A note to due-window assignment and single machine scheduling with deteriorating jobs and a 
rate-modifying activity. Computers & Operations Research, doi:10.1016/j.cor.2010.04.006. 
[28]  V.S. Gordon, J.M. Porth and C.N. Chu. A survey of the state-of-art of common due date assignment and scheduling 
research. European Journal of Operational Research Vol. 139 (2002), p. 1-25. 
[29]  P. Brucker. Scheduling Algorithm. Springer-Verlag, Berlin (2004). 
 
99 年度專題研究計畫研究成果彙整表 
計畫主持人：許洲榮 計畫編號：99-2221-E-252-008- 
計畫名稱：退化性工件之單機生產排程問題研究 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 1 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 2 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 1 0 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
