(1)initialize =  jiq , )(L , for Mi 1  and Nj 1 . 
(2)compute the new value of   byjir , 


i)\jMk
x
kii
x
ji
j
j
qzIr
(
,
:x
, x)|(

 , and  
according to whether or not x satisfies check i. 
{0,1}x)|( izI
(3)update the value of 


ijNk
jkjiji rLq
\)(
,,, )(
  , where ji,  is chosen such that . 1
1
, 

q
jiq


We then make a tentative decoding sequence , such as . If H  
= z then the decoding algorithm halts having identified a valid decoding of an all-zero 
syndrome, otherwise the algorithm repeats, A failure is declared if some maximum number of 
iterations (e.g. 500) occurs without a valid decoding. 
xˆ xˆ


)(
,i )(maxargxˆ
jNk
jkrL



 
C. Results 
 
 We compare several codes of N symbols over GF(2b). Figure 1 compares the 
performance of Q-LDPC codes with a fixed column weight 3, rate 1/2 codes, over AWGN 
channels using codes over GF(4), GF(16) and GF(64). The code lengths N of Q-LDPC codes 
over GF(4), GF(16) and GF(64) are 6400, 1600 and 400, respectively. The simulation results 
show that Q-LDPC codes over higher order fields can significantly outperform over that of 
lower order fields. An improvement of 1 dB is shown for the rate 1/2 Q-LDPC codes between 
GF(64) and GF(4).  
 
4.5 5 5.5 6 6.5 7 7.5
10-7
10-6
10-5
10-4
10-3
10-2
10-1
Eb/No(in dB)
bi
t e
rro
r r
at
e
performance of Q-LDPC decoding with QAM signaling over AWGN channels
GF(4)
GF(16)
GF(64)
 
Figure 1: Comparison of performance of Q-LDPC codes over AWGN channels over GF(4), 
GF(16) and GF(64)  
 2
 
 
Figure 4: The encoding of LDPC  
 
 
Decoding of LDPC codes  
 
In decoding of LDPC codes, decoding of the data is delivered by Tanner graph. Columns 
and rows in the parity check H are denoted as check nodes and bit nodes, respectively, in 
Tanner graph, which is shown in Figure 5. From this graph, connections between check nodes 
and bit nodes are easily understood. 
There are many kinds of decoding algorithms in LDPC codes. The sum of product 
algorithm (SPA) [25] is the best method of error correction in efficiency, but at the expense of 
the computer complexity. 
 
 
Figuer 5: Tanner Graph 
 
 
 
)
)
2
)tanh(1
)
2
)tanh(1
log()
\'
'
\'
'
  L(q
L(q
   L(r
L(m)
m
L(m)
m
m 









ll
l
ll
l
l
 
 
 
 
 
 

 
m\)M(m'
m'm )L(r)L(v)L(q
l
lll 
 
 4
This parallel computing of dual-core architecture is extended into a proposed 
multiple-core architecture. This study is to develop this eight-core processor, which integrates   
four dual-core architectures (dual1, dual2, dual3, dual4) in a single processor. An additional 
eight-core control unit with external flash memory controller, which Winbond, model of 
Flash, W29C011A of 128Kbytes is used, this eight-core processor architecture is shown in 
Figures 8 .  
In the execution of the program, the core controller unit will first determine the number 
of threads currently waiting for it, and then decide how many core, thereafter sent signals to 
the implementation of the dual-core framework. After a series of signal processing is 
executed in the dual-core framework, the result will be sent back to the core controller unit, 
and then is written into the external Flash. Figure 9 shows implantation with two Xilinx 
Virtex-5 FPGA development boards 
 
C、Result and Discussion 
In comparison of the proposed dual-core processor architectures and a single-core 
processor architecture, the computation time is reduced by 33.4%, and approximately 150% 
process efficiency increases. For the case of the proposed eight-core processor architecture, 
the computation time decreases 83.3%, and approximately 600% increase in process 
efficiency.  
 
 
 
 
 
 
 
 
 
 
Figure 8: architecture of eight cores 
 
 
 
 
 6
 8
[13] “The Institute of Electrical and Electronics Engineers Standard 802.16e-2005: Air 
Interface for Fixed and Mobile Broadband Wireless Access Systems,” IEEE, 2005. 
[14] David A. Patterson, John L. Hennessy, “Computer Organization and Design: The 
Hardware/Software Interface,” 3rd ed., Morgan Kaufmann, California, 2007. 
[15] M. G. Arnold, T. A. Bailey, J. R. Cowles, J. J. Cupal, & F. N. Engineer, “Behavior to 
Structure: Using Verilog and In-Circuit Emulation to Teach How An Algorithm 
Becomes Hardware,” Verilog HDL Conference, Proceedings, IEEE International 27–29, 
pp. 19–28, March 1995. 
[16] M. G. Arnold, ”Verilog Digital Computer Design Algorithms into Hardware,” 1st ed., 
Prentice-Hall, New Jersey, 1995. 
[17] The GNU Compiler Collection, Free Software Foundation, Inc., Available: 
http://gcc.gnu.org/ 
[18] James R. Larus, SPIM: A MIPS32 Simulation, Available: 
http://pages.cs.wisc.edu/~larus/spim.html 
[19] ModelSim User’s Manual, Mentor Graphics Corp., Available: 
http://www.model.com/resources/resources_manuals.asp 
[20] “The Institute of Electrical and Electronics Engineers Standard 802.16-2004: Air 
Interface for Fixed and Mobile Broadband Wireless Access Systems,” IEEE, 2004. 
[21] J. G. Andrews, A. Ghosh, R. Muhamed, “Fundamentals of WiMAX: Understanding 
Broadband Wireless Networking,” Prentice-Hall, New Jersey, Feb. 2007. 
[22] M. Skapa, S. Hanus, “Singal Processing in WiMAX System,” Proceedings of 17th IEEE 
International Conference on Digital Object Identifier, vol. 24-25, pp. 1-4, Apr. 2007. 
[23] R. G. Gallager, “Low density parity check codes,” IRE Trans.  Information . Theory, 
vol. 8, pp. 21-28, Jan. 1962. 
[24] D. J. C. MacKay and R. M. Neal, “Near Shannon limit performance of low density parity 
check codes,” Electron. Lett., vol 32, no. 18, pp. 1645-1646, Aug. 1996. 
[25] Shu Lin, and Daniel J Costello, Jr., “Error Control Coding,” 2nd ed., Prentice-Hall, New 
Jersey, 2004. 
[26] “MIPS32TM Architecture For Programmers Volume II: The MIPS32 Instruction Set ,” 
MIPS Technologies Inc, Mountain View, CA94043-1353., July 2005. 
[27] Hesham El-Rewini, Mostafa Abd-El-Barr, “Advanced Computer Architecture and 
Parallel Processing,” John Wiley & Sons, Inc, USA, 2005. 
[28] W29C011A Flash Memory, Winbond Electronics Corp., Jan. 2002. Available: 
http://www.datasheetsite.com/datasheet/W29C011A 
[29] ISE In-Depth Tutorial, Xilinx, Inc., 
Available:www.xilinx.com/direct/ise10_tutorials/ise10tut.pdf 
[30] ML505/ML506/ML507 Evaluation Platform User Guide, Xilinx, 
Inc.,oct.2009.Available:http://www.xilinx.com/support/documentation/boards_and_kits/
ug347.pdf 
[31] Mathhew C. Davey, David J.C. Mackay, “Low Density Parity Check Codes over 
GF(q), ” IEEE Comm. Letter., June 1998. 
 
98年度專題研究計畫研究成果彙整表 
計畫主持人：胡大湘 計畫編號：98-2221-E-212-017- 
計畫名稱：以 QAM 訊號為依據，非二元 LDPC 碼的混合型解碼法則之研究 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 1 1 100%  
研討會論文 1 1 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 1 1 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 2 2 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 0 1 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 1 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
 
