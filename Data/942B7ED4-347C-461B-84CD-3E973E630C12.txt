用於多媒體資料處理之可重置低功率 NoC 平台的設計與實現(I) 
Design and Implementation of a Low Power Reconfigurable Network-on-a-chip Platform for 
Multimedia Applications (I) 
計畫編號：NSC 94-2213-E-006-104 
執行期間：94 年 8 月 1 日 至 95 年 7 月 31 日 
主持人：周哲民  國立成功大學電機工程學系(所) 
 
一、中文摘要 
伴隨著半導體工業的快速進步，對於可攜
式的通訊多媒體系統應用需求越來越龐大。此
外，越來越多的電晶體能被置入一個單一的晶
片上，將構成一單晶片系統(SoC)。但是目前
廣泛使用的晶片內匯流排架構缺乏可調節性
（scalability），無法滿足未來複雜通訊多媒體
系統內部大量的通訊需求，而近年來漸受重視
的單晶片網路（Network-on-Chip, NoC）架構
則是解決此一問題的有效方法。本整合型總計
畫即設計與實現一個適用於多媒體資料處理
的可重置低功率單晶片網路系統平台，用於未
來複雜可攜式通訊多媒體單晶片系統的設計。 
 
英文摘要 
As the advance of semiconductor industry, 
the demand of the portable communication and 
multimedia system is more and more huge. 
Besides, more and more transistors can be put 
into a single chip to compose a system-on-chip 
(SoC). Current on-chip bus lacks scalability, 
which will result in unacceptable performance 
degradation of the communication and 
multimedia system in the future. 
Network-on-Chip (NoC) architecture, which 
consists of an on-chip packet-switched 
micro-network of interconnection, better 
supports the trend of SoC integration. The 
project is to design and implement a low power 
reconfigurable NoC platform for multimedia 
processing to satisfy the design of complex 
single-chip portable communication and 
multimedia system in the future. 
 
二、研究目的 
在導線延遲(wire delay)效應和 SoC 需求
凸顯的今日，如何有效運用晶片上巨額電晶
體？又如何整合連接大量異質性硬體 IP？再
者，如何進行高速且量大的晶片內資料傳輸？
已 使 晶 片 上 相 互 連 接 網 路 (on-chip 
interconnection network)成為 SoC 研究者專注
的焦點[1]。而隨著製程技術進步，SoC 要整合
連接的異質性硬體越來越多，導致 SoC 內之通
訊架構與整合能力直接的決定了系統效能、運
作與功能，但現今卻沒有一般化可行有效之連
接通訊方法。本總計畫研發一新穎的系統平
台 — 可重置 NoC (reconfigurable Networks 
-on-a-Chip) 平 台 及 其 系 統 軟 體 工 具 
(compilation and mapping) ，將可有效解決上
述的難題。而另一方面，視訊(video)資料傳輸
是現今產學界所強調的應用重點之一：如
PDA、cell phone、遠距教學、遠端監控、隨選
影像播放系統等。也因此，如何在晶片內部連
接網路上傳輸視訊資料，也是我們必須探討的
課題。最後，晶片上連接網路所需使用到的可
重置性通訊網路介面電路，以及使用在網路上
的可重置晶片內路由器，將是我們整合 IP 硬
 - 1 -
且最大缺點就是影像品質的不佳，雖然其運算
量較少於前者，但影像的品質卻遠差於前者，
諸如三步搜尋演算法(Three Step Search，TSS) 
[4]、一維全域搜尋演算法 (One-Dimensional 
Full Search，1DFS) [5][6]和平行階層式一維搜
尋演法(Parallel Hierarchical One-Dimensional 
Search，PHODS) [7]等皆是。反之，全域搜尋
區塊比對演算法雖然運算量較大，但其擁有較
規則的資料流和較好的影像品質等優點，所以
全域搜尋區塊比對演算法較被廣泛使用，表 1
為此兩種演算法的比較分析。 
 
表 1 全域搜尋演算法與快速搜尋演算法優缺點比較 
 全域搜尋演算法 快速搜尋演算法 
優點 1. 影像品質較好 
2. 資料流較規則 
3. 硬體架構較易實現 
1. 運算量較小 
缺點 1. 運算量較大 1. 影像品質較差 
2. 資料流較不規則
 
(B)移動估計硬體架構的研究 
因為移動估計需要龐大的運算量，所以運
算時間很長，因此需要考慮以硬體來實現。在
近二十年來，有許多全域搜尋演算法的硬體架
構被提出，其中最普遍的是一維[8][9][10]和二
維[11][12][13]心縮陣列(Systolic Arrays)，由龐
大的 PE(Processing Element)所組成，每一個
PE 所負責的工作，是去計算目前像素值和參
考像素值的差值。 
在參考[8]中，16 個 PEs 同時工作，允許
16 個候選區塊並行處理，每個 PE 需要 256 個
clock cycles 外加最多 25 個額外的 clock cycles
的時間去比較目前區塊(16x16)和候選區塊(所
以最多需要 281 個 clock cycles)，在搜尋範圍
+8~-7 的情況，總共 256 個候選區塊，需要重
復 16 次的重覆計算，也就是 4496 個 clock 
cycles 的運算時間。在 2 維心縮陣列[11]中，
共使用了 64(16x4)個 PE，藉著重覆使用鄰近
候選區塊的運算結果，這樣的架構需要 1252
個 clock cycles 來完成目前區塊(16x16)和 256
個候選區塊比對。 
根據我們的評估，上述電路是一個極具擴
充性的設計，未來將考慮以此電路架構為基
礎，修改出一個能依據 NoC 平台的限制及要
求來執行移動估計演算法的硬體電路，並整合
到 NoC 系統上。 
 
子計畫三之 NoC 平台設計方法研究及系
統軟體開發，主要分為以下部分: 
(A) 設計流程與方法 
圖 3 顯示本計畫所採用的系統設計流程。
首先，我們必須將單晶片網路系統平台上可以
使用的元件（包含一般型處理器、數位訊號處
理器、特殊用途硬體加速元件、通訊網路元
件、通訊介面、記憶元件等等）蒐集在元件庫
（Component Library）中。這些元件的交易層
次（transaction-level）系統層級模型則放置於
TLM Library 中。隨後輸入欲設計系統的系統
規格（Behavioral Specification）以及相關限制
（Constraints），Analysis and Estimation [14-16] 
階段即根據 Component Library 中可用的各式
元件進行各項評估與分析。多媒體系統規格可
以使用 task graph 來表示，task graph 中的 node
對應到多媒體系統規格的一個計算工作（副程
式），task graph 中的 edge 則對應到多媒體系統
規格的資料傳輸，記錄需要傳送的資料量以及
傳 送 者 與 接 收 者 等 資 訊 。 Analysis and 
Estimation階段則分析Component Library中各
個元件需要佔用的面積以及可以使用的電
壓、各個 node 使用 Component Library 中不同
計算元件在不同執行電壓所需的運算時間以
及功率消耗、以及各個 edge 透過通訊網路傳
輸需要耗費的傳輸時間以及功率消耗等資訊。 
接著，System Architecture Synthesis 階段則是
根據 Analysis and Estimation 階段的分析結果
 - 3 -
擇我們最大效益生成樹拓樸架構。 
我們用一個簡單的例子，來顯示幾種架構
設計的差別。我們以圖 4(a)的完全圖當例子，
而圖 4 的(b)到(d)中，是我們逐步的選擇具有
權重的邊，完成我們最大效益生成樹，而選擇
法則，則是使用 Prim，s 演算法。而圖 4(e)則
是最後完成的連接架構，那是一種每個匯流排
皆是接有四個 IP。而我們使用的模擬工具是使
用 VerilogXL of Cadence Co。而我們模擬的方
式是按傳輸比率以圖 4(a)完全圖形為藍本，亂
數產生封包，從來源結點傳送到目的結點。 
 BUS1
BUS3
BUS2 BUS4
0.24 0.20
0.08
0.04
0.12
(a)
0.16
BUS1
BUS3
BUS2 BUS4
0.24
0.20
0.08
0.04
0.12
(b)
0.16
BUS1
BUS3
BUS2 BUS4
0.24
0.20
0.08
0.04
0.12
(c)
0.16
BUS1
BUS3
BUS2 BUS4
0.24
0.20
0.08
0.04
0.12
(d)
0.16
IP0 IP5 IP7 IP14
switch
IP2 IP4 IP6 IP10
BUS3
BUS1
IP1
IP12
IP8
IP13
BUS2
IP3
IP11
IP9
IP15
BUS4
 
圖 4 (a)~(e) 網路架構產生的例子 
 
本實驗方法是由使用都在自訂的傳輸比
率中，亂數時間產生封包傳送，我們以各種架
構做實驗，分別比較封包從起位置傳送到目的
位置的平均傳送時間。在表 2 中，我們可以看
到在固定傳送封包的數量中，總傳輸時間效率
上是我們最大效益生成樹是優於其他的方法
的。表 3 則比較其連線成本。 
表 3 Comparisons of MST based design BT, SPIN 
and mesh architectures for the example in Figure 4 
Num. 
of 
Packet
s 
Trans.
time 
(MST
) 
Trans. 
time 
(BT) 
% of  
speeding 
up (BT) 
transfe
r time 
SPIN 
% of  
speedin
g up 
SPIN 
Trans. 
time 
mesh 
% of 
speedi
ng up 
mesh
20 26u 43 u 37% 58 u 55%  70u 62% 
25 34u 51 u 34% 68 u 50%  84u 62% 
30 36u 59 u 38% 77 u 53% 97u 59% 
35 43u 67 u 35% 87 u 50% 112u 61% 
40 50u 75 u 33% 99 u 53% 125u 60% 
45 59u 82 u 28% 108 u 50% 139u 57% 
50 53u 90 u 41% 118 u 55% 153u 65% 
55 58u 98 u 40% 129 u 55% 169u 65% 
60 70u 103 u 32% 138 u 49% 181u 61% 
65 75u 108 u 31% 147 u 50% 193u 61% 
70 80u 117 u 32% 161 u 51% 213u 62% 
75 88u 125 u 30% 175 u 50% 232u 62% 
80 90u 130 u 31% 184 u 51% 250u 64% 
 
子計畫五之低功率通道編碼設計提出兩
種低功率編碼和一種串音迴避的編碼。這些方
法都是針對資料匯流排來設計，編碼的基本觀
念是加入了一些同位元，但是我們並不加在匯
流排上，取而代之的是將同位元加在原本的資
料封包後面，來達到低功率訴求與降低串音干
擾。 
(A)序列式位元線編碼 (Serial Line Encoding) 表 2  Comparisons of interconnection cost
      
Type  
Cost 
MT BT SPIN mesh 
Area of a switch ( um2 )   
Ratio (Comparisons with BT) 
65,064 
1.703
38,200 
1 
138,378
3.62 
607,965
15.91 
Number of switches 1 3 8 16 
Number of channels per switch  8 6/4 16/8 10 
Number of bits of buffers per 
switch 
128 96/64 256/128 640 
Total number of bits of buffers 128 256 3072 10240
Total number of transmission 
channels  
8 16 64 128 
Total number of transmission 
lines 
256 512 2048 4096 
Number of Bus Arbitrators  4 4 0 0 
Number of Buses  4 4 0 0 
Total number of Bus’ lines 256 256 0 0 
在介紹這個方法之前我們先定義一些術
語。 假設每個資料字組有 v 個位元，則第 i
個位元可表示為 。令),...,,( 110 iviii dddD −= iD 為 的
反相字組。編碼後的字組可表示為
)。序列式位元線編碼方法是將 1
個同(parity)位元加在 4 個資訊位元後面。假設
資訊位元為 ，編碼後的位元為
。則演算法表示如下： 
iD
,...,,( 110
i
v
iii zzzZ −=
),,,( 0123 dddd
),,,,( 01234 zzzzz
(1) 如果d3=0，則除了 之外，編碼
後的位元都被編碼成 ，然後
)1,0,1,0(=D
),,,,0( 0123 zzzz
 - 5 -
切 換 (packet switching) 、 蟲 洞 (wormhole 
switching)以及虛擬通道(virtual channel)[23]等
等方法並比較其優缺點。為了達到低的傳輸延
遲和封包傳送時的阻擋效應，最後我們採取蟲
洞和虛擬通道混合的方式作為路由器的資料
傳輸方式。此外，為了避免數筆資料在傳輸時
彼此造成阻檔而形成死結的(deadlock)現象，依
照網路的拓墣我們採取不會造成死結的路由
演算法來傳送封包資料。 
(B) 傳輸行為的分析與設計 
選定蟲洞和虛擬通道混合的方式之後，接著針
對這種傳輸方式分析封包傳送時要透過哪些
機制才可以正確的傳送。經由我們的分析[24]
我們設計出如下圖 6 的狀態圖，包含 IDLE(沒
有封包時的初始狀態)、RT(Routing)執行路
由、VCA(Virtual Channel Allocation)執行虛擬
通道的配置、SA(Switch Allocation)執行實體通
道的配置和 ST(Switch Traverse) 執行封包傳
輸。其中，由於蟲洞管線化傳輸資料的特性，
我們可以同時執行2個不同動作來增進傳輸效
率。 
IDLE RT VCA SA ST/IDLE
ST/SA
ST/RT
no flit
head flit
non-head flit
VCA fail SA fail
VCA success
next head flit
next no flit
next non-
head flit
next head flit
next no flit
next non-
next non-
head flit
next head flit
next no flit
SA fail
head flit  
圖 6 路由器狀態圖 
(C) 執行虛擬通道配置的分析與設計 
相對於(B)的研究，這部份算是更深入往下一
個層次的設計。我們把配置(Allocation)的行為
視為配對的(matching)問題，並以 2 次的仲裁
來實現之，如下圖 7 所示。 
acp_arb0
acp_arb1
acp_arbp*v-1
...
...
ovcP*v-1
ovc0
ovc1
vc_gnt0(p*v-1)
vc_gnt00
vc_gnt01
gnt_arbp*v-1
gnt_arb0
gnt_arb1
vc_req00
vc_req01
sovcp*v-1
vca_reqp*v-1
sovc0
vca_req0
vca_req1
... ...
vc_req0(p*v-1)
sovc1
......
......
......
vca_rece0
vca_rece1
vca_recep*v-1
vc_acp00
vc_acp01...
...
...
vc_acp00 ~ vc_acp0(p*v-1)
vc_acp10 ~ vc_acp0(p*v-1)
vc_acp90 ~ vc_acp0(p*v-1)
vc_req(p*v-1)0
vc_req(p*v-1)(p*v-1)
vc_acp0(p*v-1)
vc_gnt(p*v-1)(p*v-1)
(To switch allocater)
(To switch allocater)
(To switch allocater)
vc_acp(p*v-1)(p*v-1)
vc_req10
vc_req1(p*v-1)
vc_gnt10
vc_gnt1(p*v-1)
vc_acp(p*v-1)0
vc_acp10
Vca(p*v-1)
Vca1
Vca0
vc_gnt(p*v-1)0
(From routing module)
(From routing module)
(From routing module)
 
圖 7 VCA 設計 
(D) 實體通道配置的分析與設計 
相對於(B)的研究，這部份算是更深入往下一
個層次的設計。同理，我們把配置(Allocation)
的行為視為配對的(matching)問題，只是這次
要配對的目標是各個虛擬通道所屬的實體通
道，同樣以 2 次的仲裁來實現之，如下圖 8 所
示。 
acp_arb1
...
acp_arbp-1
gnt_arb1
...
gnt_arbp-1
ovc2v sa_reqv
ovc2v-1 sa_req2v-1...
req0(p*v)
ovcp*v
sa_reqp*v
ovc(p*v-1)
sa_reqp*v-1
sa_rece1
...
acp_arb0
gnt00
gnt0(v-1)
gnt_arb0
req00
req0(v-1)
ovcv-1 sa_reqv-1
sa_req0ovc0
sa_rece0
sa_recep-1
opc0
opcv-1Sa0
opcv
opc2v-1
Sa1
Sap-1
acp00 ~ acp0(p*v-1)
acp(v-1)0 ~ acp(v-1)(p*v-1)
req0(p*v-1)
req0(v)
req0(2v-1)
...
...
...
...
...
...
...
...
...
gnt0(v)
gnt0(2v-1)
gnt0(p*v)
gnt0(p*v-1)
acp00
acp0(v-1)
acp0(v)acp0(2v-1)
acp0(p*v)
acp0(p*v-1)
...
...
opcp*v
opcp*v-1
...
...
acpv0 ~ acpv(p*v-1)
acp(2v-1)0 ~ acp(2v-1)(p*v-1)
acp(p*v)0 ~ acp(p*v)(p*v-1)
acp(p*v-1)0 ~ acp(p*v-1)(p*v-1)
...
...
...
... ...
...
...
...
(To Xbar_ctrl)
(From virtual 
channel allocater)
(To Xbar_ctrl)
(From virtual 
channel allocater)
(From virtual 
channel allocater)
(From virtual 
channel allocater)
(From virtual 
channel allocater)
(From virtual 
channel allocater)
 
圖 8  SA 設計 
(E) 路由器的排程設計 
分析完路由器整體的行為和詳細的虛擬/實
體通道配置後，配合蟲洞傳輸管線化的動作，
我們分別將 IDLE、RT、VCA、SA 和 ST 分別
配置同樣大小的時間周期完成，如下圖 9 所
示。另外在考量 VCA 和 SA 的複雜度後，我
們切割出最小的時間周期給每一個小動作。至
於 RT 所空出的時間餘裕可以讓使用者採用更
複雜的路由演算法。 
 - 7 -
協助完成平台系統規格之設計與製定。 
子計畫三則已經發展以整數線性規劃方
法為基礎的對應工具。我們進行兩個實驗來測
試這個對應工具的效能。 
在第一個實驗中，我們使用一個包含 8 個
nodes 以及 12 條 edges 的 task graph 作為輸入，
並且假設每個處理器有三個不同的操作電壓
可以使用，但是特殊用途硬體加速元件只有一
個操作電壓可以使用。為了與傳統的最佳化方
法做比較，我們將提出的整合方法簡化成三種
近似方法，分別以 -dvs、-pipe、-local 表示之。
符號 ‘-’ 表示將對應的設計步驟從我們的整
合方法中去除，‘-dvs’表示各元件只使用單一
操作電壓而不使用多重操作電壓，‘-pipe’表示
不使用管線化排程，‘-local’表示只使用單一傳
輸路徑而不能使用多重傳輸路徑。我們採用的
目標函式如下所示 
OBJ = [α T_A + (β−α) ⋅T_P] / 100 ⋅
其中 OBJ 代表目標函式值，T_A 及 T_P
則分別代表系統架構的面積成本以及功率消
耗量。另外，α 與 β 則是兩個加權值，其中 β 
被設為 100 而 α 則被設為 0 < α < β 。不同的 
α 與 β 的組合用來改變面積成本以及功率消
耗量在目標函式中的重要性。當 α 值很小
時，表示功率消耗較重要，因此將獲得一個低
功率消耗的系統架構。相反地若是α 值很大
時，表示面積成本較重要，因此將獲得一個低
面積成本的系統架構。 
第二個實驗使用另一個包含 6 個 nodes 以
及 7 條 edges 的 task graph 作為輸入。在第二
個實驗中，我們改變系統的生產量限制 ℑ 以
產生不同成本的管線化系統架構。此外，在相
同的生產量限制下我們也改變 α 的值以折衷
系統的面積成本與功率消耗。 
子計畫四已經用硬體描述語言撰寫一個
程式，產生具有 10 組不同傳輸率的匯流排組，
而且這些匯流排組的連線方式分別是以我們
所提出 MST 演算法和我們之前的文獻[30]使
用霍夫曼編碼演算法的方式來連接。而模擬結
果如表4中列出了這兩種的平均傳送時間的實
驗結果比較，其中我們提出的 MST 演算法的
實驗結果傳送時間效能優於使用霍夫曼編碼
法，而在接口埠的數量中(每個接口埠皆有 32
個位元長度)，MST 演算法也是比較好的。 
表4 Comparison of MST based design vs. BT
Num.
of 
Buses
Num. 
of 
flits 
Average 
transfer
Time 
(BT) 
Average 
transfer 
Time 
(MST) 
Average 
Number 
of ports 
(BT) 
Average 
Number 
of  ports 
(MST)
10 10000 35995u 34135u 52 30
20 40000 186689u 135759u 112 84
30 90000 507783u 283967u 172 146
40 160000 812627u 449039u 232 228
50 250000 1374387u 790495u 292 320
60 360000 2270637u 1104525u 352 338
70 490000 3285891u 1538413u 412 474
80 640000 4766123u 1935105u 472 602
90 810000 6689123u 2549311u 532 614
100 1000000 8794433u 3515339u 592 592
路由器的電路佈局圖(layout)的圖 13，是
以圖 4(e)的電路圖為範本所畫，它是以是使用
台積電(TSMC)0.18 微米製程。 
 
圖 13 路由器之佈局圖 
 
子計畫五使用硬體描述語言 Verilog 來進
行硬體的製作，在合成的 CAD 工具部分則是
用 Synopsys 公司所提供的 Design Compiler。
合 成 的 元 件 庫 是 使 用 聯 電 (United 
Microelectronics Corporation)0.18 微米的製
程。在量測編碼器和解碼器的功率消耗時，我
們是輸入 1000 筆隨機的字組，然後使用 Prime 
Power 這套軟體來測量。最後我們將匯流排用
HSPICE的RLC傳輸線模型 (transmission line)
來模擬，並且考量匯流排線為第 4 層金屬線 
(metal-4)，寬度為 0.28 微米，最小間距為 0.28
微米，其中耦合電容與基底電容的比例 λ=1.87
 - 9 -
子計畫二已達成預期目標，也與其他子計
畫成果整合完畢，相信這次的經驗對於未來執
行相關計畫時會很有幫助。 
子計畫三已經完成單晶片網路系統的設
計流程與方法的規劃，並且發展以整數線性規
劃方法為基礎的系統層級軟硬體分割與排程
工具，在考慮通訊時間以及可變執行電壓的情
況下，將多媒體系統規格對應到單晶片網路系
統平台上。本子計畫進度與預定目標大致相
符，目前已有一篇會議論文發表[19]，並且已
經將之投稿至期刊[36]。目前本子計畫正加強
自動化系統層級軟硬體分割與排程工具的效
能，未來將進一步完成單晶片網路系統虛擬平
台及硬體平台。 
在子計畫四中，我們針對晶片網路在單晶
片系統上(network-on-chip)提出了一種新的架
構，並進行了分析和實驗。由實驗數據得知，
我們的方法，最大效益生成樹拓樸架構，與其
他文獻的上的架構比較，它可以縮小硬體面
積，增進傳送效率。本團隊在本計畫中共發表
了 14 篇論文，一項發明專利，3 項發明專專利
申請中。 
在子計畫五的研究中，我們提出了序列式
匯流排編碼，用來降低匯流排的功率消耗與串
音干擾。並且我們將這幾種編碼實現在一個簡
單的 AMBA 平台上。實驗結果顯示，我們提
出的低功率編碼，可以降低匯流排的功率消耗
約 5.6% ~ 19%，而提出的串音迴避編碼，可以
減 少 匯 流 排 的 傳 輸 延 遲 。 我 們 實 現 的
Reed-Solomon 碼，可以節省匯流排的功率 31% 
~ 43%。在未來的研究中，我們期望更縮小編
解碼器的面積，並且整合低功率與串音迴避編
碼成為一個完整的統一編碼架構。除此之外我
們也有做 SLE 的理論分析，並將推導的公式做
數值模擬，請參考我們發表的論文 [31, 32]。 
子計畫六的路由器設計發表於 2006 年國
際 電 腦 與 通 訊 工 程 會 議 (International 
Conference on Computer and Communication 
Engineering, ICCCE’06)[33]。除此之外，本路
由器的研究成果深受肯定，獲 2005 年全國計
算機會議的最佳論文獎[34]，以及於 VLSI 
Design/CAD Symposium 2006 所發表[35]。整
體來說，我們已達成本計畫這一年的研究進
度。 
經過一年的研究，各個子計畫都有按照原
定的計畫時程在執行，其成果也都發表於國內
外重要會議上，並整理準備將投稿於國內外重
要期刊，以達成設計多媒體資料處理之可重置
低功率 NoC 平台的初步目標。之後，我們也
會將其各個子計畫部份共同實現。 
 
七、本計畫研究成果發表情形 
[19] Jin-Lin Liu, Shiann-Rong Kuang, and Shen-Fu Hsiao, 
“Integrated System Architecture Synthesis of Distributed 
Embedded Systems for Multimedia Applications,” 2006 
International Workshop on Computer Architecture, VLSI, 
and Embedded Systems, Dec. 2006. (子計畫三) 
[30] Yuan-Long Jeang, Jer-Min Jou, Win-Hsien Huang, “A 
Binary Tree Based Methodology for Designing an 
Application Specific Network -on-Chip (ASNOC)”, IEICE 
Transactions on Fundamentals of Electronics, 
Communications and Computer Sciences, Vol. E88-A, 
No.12,Dec.2005. (子計畫四) 
[31] C.-H. Kuo, W.-B. Wu, Y.-J. Wu, and J.-H. Lin, “Serial low 
power bus coding for VLSI,” IEEE International 
Conference on Communications Circuits and Systems, Gui 
Lin, China, June 25-28, 2006. (子計畫五) 
[32] W.-B. Wu, Y.-J. Wu, and C.-H. Kuo, “An implementation 
of serial bus coding scheme for AMBA-based platform,” 
The 17th VLSI Design/CAD Symposium, Hualien, Taiwan, 
August 8-11, 2006. (子計畫五) 
[33] Shih-Hsun Hsu, Jer-Min Jou, Ming-Chao Lee, Chien-Ming 
Sun, “An Effieient NoC Pipelined Router Design”, 
International Conference on Computer & Communication 
Engineering (ICCCE '06), 9-11, May, 2006. (子計畫六) 
[34] Shih-Hsun Hsu, Jer-Min Jou, Ming-Chao Lee and 
Chien-Ming Sun, “Design of a New Pipelined Router for 
NoC”, 2005 National Computer Symposium, 15 - 16, 
December, 2005. (子計畫六) 
[35] Shih-Hsun Hsu, Yu-Xuan Lin Jer-Min Jou, and Yuan-Long 
Jeang “A Reconfigurable NoC Router with AMBA-based 
Network Interface”, Proceedings of the 2006 VLSI 
Design/CAD Symposium, 8-11, August, 2006. (子計畫六) 
[36] S.-R. Kuang, J.-L. Liu and S.-F. Hsiao, "Integrated 
low-power system architecture synthesis for embedded 
multimedia applications," submitted to IEE 
Proceedings-Computers and Digital Techniques. (子計畫
三) 
  
八、參考文獻 
 - 11 -
