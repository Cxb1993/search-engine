(T). A DNA chromosome consists of
combinations of the four bases and can
represent different genes. The real living
gene is very complex, and genes in
parents can be carried to their offsprings
by biological genetic operations.
Because GAs are given by inspiration of
natural genetic, genetic mechanisms of
the biological DNA are likely to provide
a good chance to improve the limitations
of traditional GAs.
In [2-4], the proposed methods based
on biological DNA have redundancy and
overlapping of genes, and the length of
the proposed DNA chromosome is
variable. In [5], a DNA-based
evolutionary algorithm for automatic
design of a class of Takagi-Sugeno fuzzy
controllers has been proposed. The
DNA-based evolutionary algorithm has
the frameshift mutation operations and
bacterial mutation operations. According
to structures of biological immune
system and DNA, the authors [6] have
presented a DNA-based immune
algorithm to design a class of
Takagi-Sugeno fuzzy control systems. A
DNA-based genetic algorithm [7] has
been proposed to optimize the design
parameters of a generalized
membership-type fuzzy controller. In [8],
the authors have developed evolving
neural-fuzzy networks that evolve their
structure and parameter values through
incremental, hybrid supervised/
unsupervised, and on-line learning. A
dynamic evolving neural-fuzzy inference
system [9] has been proposed for
adaptive on-line and off-line learning.
In this report, based on the
DNA-based evolution algorithm and
Lyapunov design approach, a method for
developing on-line adaptive DNA-based
fuzzy-neural controllers to achieve
control objectives is proposed for a class
of multi-input multi-output (MIMO)
robot systems.
二、結果與討論
A. Fuzzy Reasoning and Fuzzy-Neural
Networks with B-spline membership
functions
The basic configuration of fuzzy logic
systems consists of some fuzzy
IF-THEN rules and a fuzzy inference
engine. The fuzzy inference engine uses
the fuzzy IF-THEN rules to perform a
mapping from input linguistic variables
to output linguistic variables. Given the
input data nqxq ,,2,1,  , and the output
data mpy p ,,2,1,  , the ith fuzzy
rule has the following form:
i
mm
i
i
nn
ii
wisyandwisyTHEN
AisxandAisxIFR


11
11:
where i is a rule number, iqA ’s are the 
fuzzy sets of the antecedent part, and
i
pw are real numbers of the consequent
part. When the inputs Tnxxxx ][ 21 
are given, the output py of the fuzzy
inference can be derived from the
following equations:


 
 


 h
i
qA
n
q
h
i
qA
n
q
i
p
pp
x
xw
wxy
i
q
i
q
1 1
1 1
))((
))((
)(
where )( qA xiq is the membership
Fig.2. The DNA-based encoding of a
DNA chromosome
Since each amino acid has its own
role, we develop a translation
mechanism to represent the
corresponding relationship between
amino acids and the evolution B-spline
fuzzy-neural networks. Specifically, the
structure and the design parameter
values of the evolution B-spline
fuzzy-neural networks can be created
from the DNA chromosome according to
the translation mechanism. The
translation mechanism is shown as Fig. 2.
The amino acids have more codons, and
then the design parameters use the value
with higher possibility. In order of
symmetry, we assume that the Thr and
Tyr correspond to the same value of the
design parameters. In Fig. 3, the design
parameter values range from within the
intervals RDDD  ][ maxmin , where
the minD and maxD are selected
according to different design problems.
Besides, the objective of the learning
algorithm is to minimize the error
between the desired data and the output
of the fuzzy-neural system.
Fig.3. The translation mechanism of the
DNA Chromosome
C. The proposed DNA-based evolution
algorithm
Based on the proposed DNA-based
encoding method, we propose a
DNA-based evolution algorithm. By
using the proposed DNA-based
evolution algorithm, the evolution
B-spline fuzzy-neural networks evolve
and develop their structure and their
design parameter values from an input
data steam, and can accommodate new
input data. The DNA-based evolution
algorithm uses genetic operations to
create fuzzy rules and to obtain the
values of weighting factors, and control
points, and uses the fitness function to
guide search. The genetic operations
include crossover operation and
mutation operation. According to the
proposed DNA-based evolution




00
10
iA , 



1
0
iB , .0
1



iC
Based on the certainty equivalence
approach, the optimal control law is
}],,,[
],,,[)(){(
2211
21
1*
T
n
T
cn
T
c
T
c
T
mnmm qqq
eKeKeK
xfxGu



  (D.5)
where Tcicici kk ],[ 12K are the feedback
gain vectors, chosen such that the
characteristic polynomials of
A B Ki i ci
T are Hurwitz. Let fuu ,
where T
fnfff uuu ],,,[ 21 u is a vector of
fuzzy systems, )|ˆ(
ififi
uu x . From
(D.4) and (D.5), we have
i
T
ioi
f
T
iii
T
ciiiii
e eC
uugBeKBeAe

 )]*([ˆ (D.6)
where imioi qqe  denote the output
tracking errors. Thus, the tracking
problem is converted into the regulation
problem of designing observers for
estimating the vectors ei in (D.6) in
order to regulate eoi to zero.
Consider the following observers that
estimate the state vectors ei
i
T
ioi
oioioii
T
ciiiii
e
ee
eC
KeKBeAe
ˆˆ
)ˆ(ˆˆˆ


(D.7)
where Toioioi kk ][ 21K are the observer
gain vectors, chosen such that the
characteristic polynomials of
T
ioii CKA  are strictly Hurwitz. We
define the observation errors  e e ei i i 
and  e e eoi oi oi  . Subtracting (D.7)
from (D.6), we have
i
T
ioi
f
T
iii
T
ioiii
e eC
uugBeCKAe
~~
)]([~)(~ *


(D.8)
As well, the output error dynamics of
(D.8) can be given as
)]()[(~ * f
T
iioi sHe uug  (D.9)
where s is the Laplace variable, and
H s si i
T
i oi i
T
i( ) ( ( ))   C I A K C B1 are
the transfer functions of (D.8).
Assumption 2:
Let x and x belong to compact sets
}:{U 2  xX xx mn and
}ˆ:ˆ{U ˆ
2
ˆ  xX xx m
n ,
respectively, and mx and xˆm are the
upper bounds of x and x , respectively.
The optimal parameter vectors
])|ˆ(sup[minarg *
ˆ,M ˆ
i
ii
i fii
uu 

x
xx UxUx


 fo
r i=1,2,…,n lie in some convex regions
}:{M
ii
mi
h
i    , where
the radiuses
i
m are design
parameters.□
The observation error dynamic equation
(D.8) with can be rewritten as
i
T
ioi
if
f
T
iii
T
ioiii
e
w
eC
xu
xugBeCKAe
~~
]))|ˆ(
)|ˆ(([~)(~ *


 (D.10)
where ],,,[ 21 n  , and
)]|ˆ(([ **  xuug f
T
iiw denotes the
effects of the modeling error. The output
error dynamics of (D.10) can be given as
}}||
|]ˆ||||f[|{{~
~
2
1
fitness
1
j
1
1
2










fj
n
j
j
T
cjmj
U
j
n
i
oi
n
i
oi
u
qe
e
eK
The on-line tune weightings and control
points can be obtained by the
DNA-based encoding of a DNA
chromosome.
By incorporating a control term su
into fu , the control law becomes
sf uuu  where su is called a
supervisory control. The supervisory
control su is turned on when the error
function V is greater than a positive
constant V . If VV  , then the
supervisory control su is turned off.
That is, if the system tends to be
unstable ( )VV  , then su forces
VV  . We choose the supervisory
control Tsnsss uuu ],...,,[ 21u as
}|}||]ˆ|
|||f[|){{~(sign j
1



 

fjj
T
cj
mj
U
j
n
i
oisj
u
qeu
eK

By using the supervisory control, we
have






n
i
oi
n
j
sj
n
i
oifjj
T
cj
n
j
mj
U
j
n
i
oi
eueu
qeV
111
1
j
1
2
~}{~}}|||]ˆ|
|||f[|{{|~|
2
1


eK

when VV  . Thus, the bounded
stability can be ensured.
Fig. 5. Two-link robot system.
F. Simulation Example
Consider the two-link robot shown in
Fig. 5 to illustrate the proposed methos.
The parameter values are m kg1 0 5 . ,
m kg2 0 5 . , l m1 1 , l m2 0 8 . and
ge m9 8 2. sec . The feedback and observer
gain vectors are given as
K ci
T[ ]400 40 and Toi ]2000200[K ,
respectively. The filter L si
1( ) is given
as L s si
  1 1 2( ) ( ) . The initial
states and estimation states of the system
are assumed as T]3.0,3.0,3.0,3.0[)0( x
and T]1.0,1.0,1.0,1.0[)0(ˆ x ,
respectively. The population size is
assumed as 10. The adjustable
parameters,
iu
w and
iu
c , of iu are in
the intervals 1D =[-20,20] and 2D =[0,1],
respectively. Two cases corresponding to
two different desired trajectories are
simulated. In case 1, our objective is to
control the outputs 1q and 2q of the
two-link robot to track the desired
trajectories )sin()30(1 tqm  and
)cos()30(2 tqm  , respectively. As can
be seen from Fig. 6, and Fig. 7, the
q1
m1l 1
ge
l2 q2
m2
,u1
,u2
