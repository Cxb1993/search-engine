 
計畫中文摘要 
 
關鍵詞: 系統單晶片; 晶片匯流排; 仲裁器; 仲裁演算法 
 
本研究計劃提出一個可組態之系統單晶片混合仲裁器和一個能夠快速模擬晶片匯流排的系統
效能分析平台。此混合仲裁器具備了靜態優先權演算法且結合動態的仲裁演算法，我們並對此仲
裁器在單晶片系統上，進行效能分析模擬。根據分析系統在各種不同仲裁演算法配置下所得到的
結果，可以選出一組仲裁配置，比一般設計所採用傳統仲裁演算法，能夠擁有更高效能表現。藉
由效能分析，此混合仲裁演算法能夠讓使用者針對設計需求來調整仲裁器的仲裁方式，增加其適
用性。本計劃研究重點，主要是完成一個應用於單晶片單層共享匯流排之可組態混合仲裁器，透
過 FPGA的硬體電路驗證。最後，藉由 Synopsys Design Compiler 以 TSMC 0.18 mµ 來合成仲裁器
的邏輯電路和 SOC Encounter 來完成佈局設計。 
 
 
（一） 計畫英文摘要。（五百字以內） 
 
 
Key Words: System-on-Chip; On-Chip Bus; Arbiter; Arbitration Algorithm 
 
This research proposal is aimed to study the arbiter design, arbitration algorithms, performance analysis, 
and IP integration for SOC applications. The implementation of a reconfigurable arbiter is proposed.  
The main characteristic of the reconfigurable arbiter employs the hybrid arbitration algorithm including 
round-robin algorithm, fixed priority algorithm, first-come-first-serve algorithm, and random access 
algorithm. The methodology of the performance analysis based on software and hardware approach is 
proposed. The objective of the performance analysis is to efficiently evaluate the hybrid arbitration 
algorithm. The reconfigurable arbiter was implemented by FPGA and synthesized by Synopsys Design 
Complier with a TSMC 0.18 mµ cell library. The configurable and synthesizable arbiter can be applied 
in a single layer shared bus system and allows the designer to avoid limitations due to a specific 
arbitration configuration. 
 
This hybrid arbitration scheme can serve up to a maximum 
16 masters and all of them are divided into four groups 
F1-F4 as shown in Fig. 1. 
The AMBA is an open System-on-Chip bus protocol 
for high-performance buses on low-power devices. The 
AHB is a pipelined system backbone bus, designed for 
high-performance operation. It can support up to 16 bus 
masters and slaves that can delay or retry on transfers. It 
consists of masters, slaves, an arbiter and an address decoder. 
It supports burst and split transfers. The address bus can be 
up to 32 bits wide, and the data buses can be up to 128 bits 
wide. However, the arbitration algorithm in AMBA adopted 
the fix priority algorithm only. Fig. 2 shows the architecture 
of the reconfigurable arbiter suitable to be applied in 
AMBA.  
As shown in Fig. 2, this reconfigurable arbiter can 
serve up to a maximum 16 masters and all of them are 
divided into four groups F1-F4 for the first level competition. 
Each group (F1 ~ F5) can be reconfigurable to adapt a 
specific dynamic algorithm. For example, either one of the 
round-robin algorithm, random access algorithm or 
first-come-first-serve algorithm can be combined together to 
decide the functionality of the reconfigurable arbiter. With 
the reconfigurable functionality, it can assign different 
arbitration algorithms for specific groups of masters and 
provide equity for the masters within the specific group to 
avoid the starvation under heavy communication traffic 
scenarios. The ASM chart showing the arbitration operation 
of the reconfigurable arbiter is shown in Fig. 3. 
 
Fig 3. Operation of the reconfigurable arbiter with hybrid 
arbitration algorithms 
 
 
III.  SIMULATION RESULTS  
The reconfigurable hybrid arbitration algorithms can be 
achieved by assigning different arbitration algorithms into 
functional blocks F1 – F5 as shown in Fig. 1, where 1, 2, 3, 
and 4 represents fixed priority, round robin, first come first 
serve and random access algorithm, respectively. For 
example, the arbitration state (12141) denotes the fixed 
priority algorithm is assigned to functional blocks F1, F3 
and F5, round robin algorithm is assigned to functional 
 
Fig. 1.  The hybrid arbitration scheme 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Fig.2 Architecture of the reconfigurable arbiter 
priority and round robin. 
The average waiting time for each master under various 
arbitration states is shown in Fig. 8. The longest waiting 
time and most unstable (with the largest standard deviation) 
is obtained when the arbiter configuration is (14432). The 
average waiting of (21241) can gain the shortest waiting 
time, which is better than the conventional fixed priority 
arbitration scheme as described in previous statements. The 
average grant rate for each master under various arbitration 
states is shown in Figure 9. The grant rate of the arbitration 
state (22222) has an approximate uniform distribution. There 
are two peaks in the distribution of the arbitration state 
(11111), which is in consistency with the prefer property of 
the fixed priority algorithm. 
 
0
2000
4000
6000
8000
10000
12000
14000
16000
18000
M0 M5 M10 M15
Av
g. 
W
ait
ing
 Ti
me
 (s
)
21241
14432
11111
22222
33333
44444
Fig. 8. Average waiting time of each master at various arbiter 
configuration 
 
 
0
10
20
30
40
50
60
70
80
90
M0 M5 M10 M15
Av
g. 
Gr
an
t R
ate
 (%
)
21241
14432
11111
22222
33333
44444
Fig. 9. Average Grant Rate of each master at various 
arbitration states 
 
 
In order to speed efficient transmission of large bursts of 
data, buses usually provide a block transfer mode for 
multiple bus cycles. In addition, a maximum block size is 
typically placed on the amount of data that can be 
transmitted as a single block to prevent any one master from 
monopolizing the bus and introducing a high latency to other 
master’s access requests. 
For AMBA system, the address and data buses can be up to 
32 bits wide and have limits on the length of 16 burst 
cycles. . The total number of data transferred in a burst can 
be calculated by multiplying the number of beats by the size 
of the transfer in each beat. The average waiting time for a 
data transaction is dependent on the data bus width and 
arbitration algorithms.  Fig. 10 shows the effect of burst 
cycles and block size on the performance evaluation, where 
c8b32 indicate 8 burst cycles and 32 bits block size. The 
worst case occurs when the arbitration configuration is set to 
be (43332) for F1~F5 block and the block size is chosen to 
be 16x32 (bits/clock cycle). The best performance is 
obtained by 32314 assignment and the block size is 32x64 
(bits/clock cycle). However, it could be a penalty to large 
block size with no appropriate reconfiguration arbitration 
states assignment. For example, the average waiting time for 
the arbitration state (13332) with 32x64 (bits/clock cycle) 
block size is worse than that of the arbitration state (31434) 
with 8x64  (bits/clock cycle) block size. 
31344
33424
34344
31434
32314
13332 43332 23332
23332 13332
0
1000
2000
3000
4000
5000
6000
c8
b3
2
c1
6b
32
c3
2b
32
c8
b6
4
c3
2b
64
c8
b3
2
c1
6b
32
c3
2b
32
c8
b6
4
c3
2b
64
Block Size
A
vg
 w
ai
tti
ng
 ti
m
e
Best Worst
 
 Fig 10 Block size effect for various arbitration states 
 
IV. RECONFIGURABLE ARBITER IMPLEMATION 
Simulations of the proposed reconfigurable arbiter 
design with hybrid arbitration algorithms are conducted on 
Altera Max Plus II design environment and implementation 
in Altera EPF10K100ARC240-1 FPGA. The traffic patterns 
and reconfiguration states are download to AT89C51 IC. 
Figs. 11 and 12 show the granted signals fetched from logic 
analyzer for arbitration states as (13141) and (31331), 
respectively.  
 
an arbiter with reconfigurable architecture can be easily 
adapted to an application’s requirement are desirable. It also 
indicates that the arbitration efficiency could be greatly 
improved by assigning optimal algorithms into the proposed 
reconfigurable arbiter. The FPGA implementation results of 
the proposed reconfigurable arbiter and the simulation 
results on AUK platform for SOC applications are presented 
to show the feasibility of the functionality of the proposed 
reconfigurable arbiter. 
ACKNOWLEDGMENT 
The authors would like to thanks the design tools 
supported from National Chip Implementation Center, 
National Applied Research Laboratory.  This research was 
supported by National Science Council, R. O. C., under 
Grant NSC94-2215-E-214-006. 
. 
REFERENCES 
[1] K. Lahiri, A. Raghunathan, and S. Dey, “Design Space 
Exploration for Optimizing On-Chip Communication 
Architectures,” IEEE Trans. Computer-Aided Design, 
vol. 23, pp. 952-961, June 2004 
[2] E. Salminen, V. Lahtinen, K. Kuusilinna, T. 
Hamalainen, “Overview of bus-based system-on-chip 
interconnections,” ISCAS 2002. IEEE International 
Symposium on Circuits and Systems, May 2002 pp. 
II-372 - II-375 
[3] Open Microprocessor systems Initiative, DRAFT 
STANDARD OMI 324: PI-Bus Rev. 0.3d, 1994. 
[4] S. B. Furber, ARM System Architecture, Addison 
Wesley Longman, 1996. 
[5] D. Flynn. AMBA: Enabling Reusable On-Chip Design. 
IEEE Micro, July 1997, pp. 20–27. 
[6] http://www.mentor.com  
[7] The Core ConnectTM Bus Architecture, 
http://www-3.ibm.com/chips/techlib/techlib.nsf/produ
ctfamilies/CoreConnect_Bus_Architecture 
[8] “Sonics Integration Architecture, Sonics Inc.” 
http://www.sonicsinc.com. 
[9] W. Peterson. Design Philosophy of the Wishbone SoC 
Architecture. In Silicore Corporation, 1999. 
http://www.silicore.net/wishbone.htm. 
[10] K. Lahiri, A. Raghunathan, G, 
Lakshminaray-ana,“LOTTERYBUS : A new 
high-performance communication architecture for 
system-on-chip designs”, in Proc. Design Automation 
Conf., 2001, pp. 15-20. 
[11] Yu-Jung Huang, Shao-Pin Chang, Chih-Feng Liu, 
Cheng-Chi Wu, “Arbiter Design for On-Chip Bus 
Communication”, 2003 SOC Design Conference, 
COEX ASME Hall, Seoul Korea, November 5-6, 2003, 
pp. 124 – 129. 
[12] Wei Jiang, Tushti Marwah, and Don Bouldin, 
“Enhancing Reliability and Flexibility of a 
System-On-Chip Using Reconfigurable Logic”, 
Proceedings of the Midwest Symposium on Circuits 
and Systems (MWSCAS), Cincinnati, OH, Aug 7-10, 
2005 
 
 
 
 
計畫成果自評 
 
 
研究內容與原計畫相符並達成預期目標情況、先期研究成果已發表於國際之學術會議,  
2004 SOC Design Conference 
Yu-Jung Huang, Chang-Chan Chen, Chih-Feng Liu, Shao-Pin Chang, Feng-Yuan Chuang “Arbiter Design with Hybrid 
Arbitration Algorithm”, 2004 International SoC Design Conference (ISOCC), COEX ASME Hall, Seoul Korea, October 25-26, 
2004, pp. 341 – 344. NSC 93-2215-E-214-005 
 
參與之學生亦將原構想之功能驗證並完成其碩士論文之撰寫，目前正將本次計劃成果整理以便於
國際研討會中發表。希望國科會繼續補助此計畫以便繼續進行此方面之研發，以便將成果進一步
充實，使其成果發表於學術期刊或應用於實務 SOC 平台。 
 
行政院國家科學委員會補助國內專家學者出席國際學術會議報告 
                                                          95 年  8  月 20 日 
報告人姓名  
黃有榕 
 
服務機構
及職稱 
 
義守大學電子系教授 
 
     時間 
會議 
     地點 
民國  95年 8  月 6 日起
至    95年  8  月 10日止
Seattle, Washington, USA
本會核定
補助文號
臺會綜二字第○九四○○五一二七
○號(94.08.10) 
NSC 94-2215-E-214-006 
會議 
名稱 
 (中文) 2006 統計聯合年會 
 (英文) 2006 Joint Statistical Meetings  
發表 
論文 
題目 
 (中文) 封裝測試機負載板之統計品質控制 
 (英文) Statistical Quality Control of Loadboards for Electronic Package Testers
   
 
一、參加會議經過 
 
1. 2006 統計聯合年會研討會(2006 Joint Statistical Meetings)由美國統計聯會
(ASA) 、國際生物辨識 (ENAR/WNAR) 、數學統計協會(IMS)、/加拿大統計學會(SSC) 
及 IEEE computer Society贊助舉辦，會議日期從 2006/8/06 至 2006/8/10 日
五天於美國華盛頓州西雅圖舉行。 
2. 本次研討會舉辦期間有一整天 Computer Technology Workshop 針對各種工
程領域上有關統計之設計分析舉行專題討論及講解,此外亦有 120 餘家廠商
參展,根據大會報導約有 5000 人次參與此次盛會。 
3. 參加論文發表之國家包括美國、日本、中華民國、法國、德國、日本、韓國、
新加坡、瑞典、紐西蘭、香港、丹麥及中國大陸等十餘國參預。共有 552 個場次,
上千篇論文發表含蓋各個不同之領域。我國參加在本次大會發表論文之學校
計有台大、清大、交大、成大、中山、義守、東海、淡江、等多所大學。大
會除白天安排議程外，晚上亦安排晚宴使各參與人員可透過餐敘進一步彼此
了解，整個會議時間非常緊湊、充實。 
 
二、與會心得 
本次所發表之論文為 ”封裝測試機負載板之統計品質控制＂, 論文發表被大會安
排於工業運用之場次,發表後已有多人要求索取報告投影片,為一相當成功
之研討發表會。 
  
 
附件一 
 
Statistical Quality Control of Loadboards for Electronic Package Testers 
 
MeiHui Guoa , Yu-Jung Huangb, Ming-Kun Chenb  
aDepartmrnt of Applied Mathematic  
National Sun Yat-sen Univ., Kaohsiung, Taiwan 
Email:guomh@math.nsysu.edu.tw 
bDepartment of Electronic Engineering, 
I-Shou University, Kaohsiung, Taiwan, ROC. 
Email: yjhuang@isu.edu.tw 
 
 
Abstract :- Each packaged IC undergoes a rigorous process of electrical / electronics testing to assure the 
quality of the finished products before shipping to the manufacturer as well as the customer. These 
electrical testing machines were composed of the machine tester, test interface unit, and the handler. The 
TIU, which is mainly composed of the loadboards, provides the electrical and mechanical connection of 
the device under test and the tester. In this work, we perform statistical quality control of loadborads for 
electronic package testers. In particular, counts of failure and lifetime of loadboards are studied. Control 
charts of mean time between failure are established. Optimal preventive maintenance schedule of planned 
maintenance actions is then proposed to aim at the prevention of breakdowns and failures. The ideal 
preventive maintenance program would enable more accurate and effective equipment maintenance. 
 
Key-Words: - Preventive maintenance, statistical quality control, mean time between failure,  loadboard, 
device under test  
 
1. Introduction 
Advances in silicon manufacture and design 
automation technologies allow  full systems to be 
integrated onto a chip known as system-on-a-chip 
(SOC). However, technologies used to test and 
package these complex chips have not kept pace with 
rapid improvements in the manufacturing process. 
Consequently, many chips now cost more to test or 
package than to manufacture. The automatic test 
equipment (ATE) cost continues to be a major expense 
in the IC development and manufacturing chain. For 
high-performance machines to meet the demands of 
higher speed, greater accuracy measurement, the ATE 
cost is expected to continue growing up. 
In general, an ATE consists of an elaborate 
controller- or microprocessor-based system that 
controls electrical excitation to the device under test 
(DUT) and measure the electrical characteristics and 
behavior of the DUT in response to the applied 
excitation. A test handler brings the device under test 
(DUT) to the test site of the ATE. After testing, the 
handler reloads the device to the appropriate 
output location based on the ATE test results. Another 
piece of hardware that also plays an important role in 
the testing of an IC is the loadboard that houses the 
chip socket. It forms the interface between the ATE 
tester and the DUT. The loadboard consists of extra 
circuitry such as decoupling and load elements which 
are required to maintain the correct interaction of tester 
channel with the IC under test. The loadboard must be 
completely free of contaminates. Common 
contaminates include solder and its oxides from device 
leads, debris from the device substrate, and ambient 
dust. These contaminates are often non-conductive, 
and if allowed to collect on the probe tip may block 
contact with the device lead. This will lead to 
permanent or intermittent contact failures and elevated 
resistance. Loadboard and sockets must therefore be 
maintained carefully, both in the test environment and 
during storage. Therefore, the loadboard reliability is 
very important in production testing since a possible 
breakdown will bring the production line to a stop 
which is highly undesirable. Preventive Maintenance 
(PM) that can assist in early diagnosis and help select 
the most appropriate treatments in order to reduce 
costs and process cycle times. 
附件二 
3.  Optimal Preventive Maintenance 
 
Sim and Endreny [4] have used a minimal 
preventive-maintenance model for repairable, 
continuously-operating devices whose conditions 
deteriorate with the time in service. The times to 
preventive maintenance have an Erlang distribution 
and may be, in a limiting case, deterministic. They 
obtained the optimal value of the mean time to 
minimal preventive-maintenance by minimizing the 
unavailability of the device.  The  steady-state 
unavailability of the device U is defined as: 
∑
=
+++=
k
i
ff riPP
1
10 )1,(PU  
where  
k：number of stages of deterioration before 
deterioration-failure occurs. 
i：stage of deterioration of the device, 
, ..., k, i 21=   
0f ：state of device following a Poisson failure. 
1f ：state of device following a deterioration failure. 
r：number of stages in the minimal 
preventive-maintenance process before 
preventive maintenance is started. 
j：a stage in the minimal preventive-maintenance 
process, 121 += , ..., r, j . Completion of 
stage r  signifies the commencement of 
minimal preventive-maintenance. Stage 
1+= rj  indicates that the device is in 
minimal preventive-maintenance. 
),P( ji ：steady-state probability that the device is in 
state ),( ji ; , ..., k, i 21= , and 
121 += , ..., r, j . 
In their models [4], they have assumed that all 
transition rates are constant and state independent.  
The effect of mean time to minimal maintenance on 
unavailability is shown in Fig. 2. λ  and µ are 
denotes as : 
0/1 λ ：mean time to Poisson failure. 
1/1 λ ：mean time to deterioration failure. 
mλ/1 ：mean time to minimal 
preventive-maintenance. 
0/1 µ ：mean time of repairing a Poisson failure. 
1/1 µ ：mean time of repairing a deterioration failure. 
mµ/1 ：mean duration of minimal 
preventive-maintenance. 
  *U ：minimum unavailability. 
    */1 mλ ：Optimal value of mean time to minimal 
preventive-maintenance. 
 
100 200 300 400 500 600
0.02
0.04
0.06
0.08
0.1
  
Fig 3. Distribution of the the mean time to minimal 
preventive-maintenance 
 
According to the above modeling, Fig 3 shows the 
distribution of the the mean time to minimal 
preventive-maintenance 
 
 
4. Experiment Results 
 
In this section, we give a preliminary summary of 
this study. In the data file, some sensitive fab-specific 
data are removed and item with repaired reason 
classified as PM scheduling are also ignored to 
eliminate incidences of poor PM schedules due to 
occasional oversights in human judgment. For 
experimental evaluation, Table 1 report the summary 
repair times of the listed loadboard ID from year 
2003 to year 2005. The loadborad AV-L/Band 
XM-L/B are found to be the most frequently repaired 
items among all loadboad ID. The Pareto Charts of 
the tester analysis are shown in Figs. 4 (a) – (c) for 
three years, respectively. It indicated that HP93000, 
CATALYST, and QUARTET are the manufacture 
companies whose products need most frequently 
repaired items during year 2003 to year 2005.  
MTBF (mean time between failures) is a measure of 
the reliability of a hardware product or component. 
The results of the MTBF are listed in Table 2. The 
results provide information for engineers or 
managers to schedule the optimal time to maintain 
loadboards and to prevent excessive failure items. 
  
 
