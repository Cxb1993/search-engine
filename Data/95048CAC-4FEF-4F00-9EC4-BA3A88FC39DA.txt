(一)中、英文摘要及關鍵詞(keywords) 
 中文摘要 
近年來，由於其潛在的用路安全以及商業應用，車載通訊網路已成為相當熱門的研究
對象。目前許多的研究以及真實應用都還侷限於單躍(one-hop)或者少數 hop 以內的通訊，
然而，多躍(multi-hop)的傳送方式亦是具備相當的重要性。例如，駕駛者可能在路途中欲預
先得知目的地附近的停車位數，或者向某餐廳預約訂位，這些應都可以藉由 multi-hop 的傳
送方式將封包送至目的地。本計畫的目標為研究車載通訊網路的繞徑技術，是許多需要以
multi-hop 傳送封包的應用的基礎。在此報告中我們將展示目前我們實作一個車載通訊網路
繞徑協定的成果。 
 
關鍵字：車載通訊網路、多躍、繞徑。 
 
 英文摘要 
Recently, due to its potential road safety applications and commercial applications, vehicular 
ad-hoc networks (VANETs) have drawn a great amount of research attention. Currently, most of 
the research and real applications are limited to communication within only one-hop or a few 
hops away. However, it is also important to send data to a remote destination using a multi-hop 
manner. For example, a driver may need to send a query to the parking lot for the available 
parking space, or a reservation message to the destined restarrant. Applications like these may 
send packets to their destinations via the multi-hop transmission manner. The goal of this project 
is to study the routing methods in VANET. In this report, we present our implemention 
experience and results of a VANET routing protocol. 
 
Keywords: VANET, multi-hop, routing. 
 
(二)報告內容 
一.前言 
 隨著網路快速發展，人們對網路的使用日益增加，網路的傳輸也因此拓展出許多種類，
其中車載通訊網路(VANETs)便是近來快速興起的一種傳輸模式。車載通訊網路為一藉由無
線通訊與資料傳遞技術，串聯交通工具以及路邊交通設施而形成的網路，可用於提供道路
安全資訊以及許多的商業應用，以便提高行車效率以及增進用路安全與生活的便利性。 
 
二.研究目的 
 本子計畫主要是在探討車載通訊網路之 unicast 繞徑問題，也就是利用 multi-hop 的方
式使得訊息可以傳遞至目的地。本子計畫所探討的繞徑問題與其他子計畫有著密切的關係；
例如子計畫七車的載網路多媒體串流服務中，無論點對點的傳輸或是 application layer 
multicast 的應用，二點之間的傳輸都需藉由 multi-hop 的傳輸方式來達成；而子計畫一的車
群管理服務與子計畫三的車載網路之位置感知服務等應用中的訊息傳遞，都可藉由 unicast
繞徑技術的輔助來達成。 
 本子計畫可約略畫分成實作與理論兩個部分。在此報告中，我們將著重於展示實作方
面之成果。為了驗證車載通訊網路繞徑的可行性，我們參考由 Zhao 等人所提出之 VADD 
(vehicle-assisted data delivery)[1]車載通訊網路繞徑方法，期望能藉由實際的硬體與軟體，實
現一可行的車載通訊網路繞徑。以下為本子計畫報告的架構。首先我們將簡述 VADD 之繞
位於兩個路口之間的道路上時，期狀態為 Straight way mode，此時封包是以攜帶與轉送方
式往前傳送至下個路口。當車輛進入路口的範圍時，其狀態則轉變為 intersection mode，在
intersection mode 的車輛會依據一個涵蓋該車輛與封包終點的範圍內的道路拓墣、道路長度、
道路密度、平均車速等資訊，將封包朝下一個最佳的路口的方向傳送。最後，當車輛位於
封包目的地的傳送範圍內時，該車輛則近入 destination mode；此時封包則直接傳送給目的
地。 
 
四.車載通訊網路繞徑實作 
 我們所需的硬體包含了工研院所研發的 IWCU (ITRI WAVE/DSRC Communications 
Unit)、筆記型電腦、以及 GPS 接收器。IWCU 為一符合美國電氣與電子工程師協會 (Institute 
of Electrical and Electronics Engineers；IEEE) 所制定的 WAVE/DSRC (Wireless Access in 
Vehicular Environments/Dedicated Short Range Communications) 標準的高階應用平台。
WAVE/DSRC 所代表的是 IEEE 802.11p[3]與 IEEE 1609[4]國際通訊標準，應用於車用環境
的專用短距離通訊。在本文中我們又稱 IWCU 為 wavebox。 
 在我們的實作中，一個 host(即車輛)上的基本配置為一台 IWCU、一台筆記型電腦、
以及一個 GPS 接收器。應用程式以及 routing 程式執行於筆記性電腦上；筆記型電腦與
wavebox 以 Ethernet 連接；應用程式或 routing 程式欲送出封包時，必須先經由 Ethernet 送
至 wavebox，wavebox 將封包標頭格式轉換成 WSMP(Wave Short Message Protocol)的標準
格式後用利用無線傳輸傳送出去，由 wavebox 所傳送出去的封包稱之為 WSM(Wave Short 
Message)； 
IWCU 主要是負責封包的收送。 
 如圖三所示為一傳送封包時的簡易 protocol stack 流程。Host A 上的應用程式要經由
Host B 來轉傳封包給遠端 Host C 上的應用程式。首先，在筆記型電腦上的應用程式先將封
包傳送給我們的 Routing 程式，封包最後會經由 Ethernet 傳送到 wavebox， wavebox 收到
此封包後會將 IP 的標頭除去並轉換成 WSMP 格式的封包，然後透過 WAVE MAC 傳送出
去，Host B 藉由 wavebox 接收到此封包，將此封包傳送到我們的 routing 程式，routing 再藉
由 wavebox 將封包傳送給 Host C，Host C 最後則將此封包傳送給本地端的應用程式。 
 
圖三 
 主程式架構 
 Multi-hop Routing 程式負責處理封包的 Routing，決定將本地的應用程式要傳的封包轉
傳給特定鄰居或是自行攜帶，並且接收或轉送其他車輛所傳送的封包，以及定時傳送及接
收車輛資訊，維護鄰居列表，此程式架構如圖四，分成四個部分：Sender、Receiver、Service 
Handler 及 Delay Estimator。 
Sender：負責與 GPS 溝通、取得車輛資訊後，將其加入 beacon 然後廣播。 
Receiver：負責接受、處理來自 wavebox 的封包，收到 beacon 封包則從中取得車輛資
訊並更新鄰居列表。若收到 RouteRequest 則根據其標頭內的資訊做對應的動作，可能直接
 圖五 
 
封包型態
(int) 
發送者 ID 
(int) 
發送者緯度
(double) 
發送者經度
(double) 
發送者速度
(double) 
發送者所在
路 ID (int) 
圖六 
 
圖六為 beacon 封包格式，此封包內容為車輛的相關資訊，各車輛皆會定時廣播給其周
圍鄰居，鄰居收到 Beacon 後便可以將發送者的資訊從封包中取出，更新其鄰居列表，利用
此一方法，各車輛皆可以得知其 one-hop 鄰居的資訊，各欄位用途如下： 
封包型態：標示封包的型態，以利接收者對封包解碼。 
發送者 ID：標示封包的來源。 
發送者緯度、經度：標示發送者位置，供接收者計算與發送者之間的相對關係，如距
離等。 
發送者速度：標示發送者的速度，目前尚未使用到，為一延伸欄位，日後研究或改進
方法時，可能會用到。 
發送者所在路 ID：標示發送者所在路的編號，需要此欄位的原因：VADD 計算 Routing
優先權時，回傳值為路的編號，因此必須在從鄰居列表中依據優先權選擇車輛。 
 
封包型態 
(int) 
發送者 ID 
 (int) 
Sequence 
number (int) 
目的地 ID 
(int) 
目的地 port 
(int) 
目的地緯度
(double) 
目的地經度
(double) 
Relay ID (int) 資料  
圖七：RouteRequest 封包格式 
 
圖七說明 RouteRequest 的封包格式，為應用程式需要將資料送往遠端應用程式所用的
封包，發送者 ID 及 Sequence number 可以用來判斷封包是否重複，目的地 ID、port 為遠端
應用程式的相關資訊，目的地經緯度則是遠端使用者的位置資訊，可以用來計算 Routing
路徑，Relay ID 用來標記此封包的 next hop，資料欄位則是應用程式實際要傳送給遠端應用
程式的資料，各欄位用途如下： 
封包型態：標示封包的型態，以利接收者對封包解碼。 
發送者 ID：標示封包的來源。 
Sequence number：標示封包的編號，與發送者 ID 結合後，可以用來判斷此封包是否重
11.neighbor_node 儲存路口與哪些路口相鄰。 
12.neighbor_road 儲存路口與哪些道路相連接。 
 
其他與資料庫相關的實作，總結如下： 
 將道路資訊、全台灣"的路口資訊…等等 insert 到資料庫。 
 透過二度分帶(TM2)的座標系(單位為公尺)，計算一段路的長度。 
 與全台灣的路口資訊跟新竹的起點、終點路口資訊代碼比對找出新竹"起點" 路口
的節點型態，得知道路相連的情形。 
 計算出新竹市所有道路方程式儲存在資料庫中，並利用以下GPS定位方法得知目
前所在位置。 
 將所有道路資訊封裝成 object 傳給前端運算程式。 
 
 GPS 定位 
GPS 定位指的是由 GPS 所取得的經緯度取得車輛目前所在道路。VADD 中，車輛必須
能得知其所在的位置位於哪條路上，以便判斷與計算封包的 next hop。我們可以利用所建
立的道路資料庫以及車輛本身所取得的 GPS 資訊實現此目的。我們所採用的方式，是依目
前車輛的所在位置，計算其與每段路段的投影點與垂直距離，若投影點落在某一線段所形
成的矩形範圍內且垂直距離為最短，該路段即為所求。由於每一路段都有兩個端點，可藉
此求得路段的線性方程：若ܲሺݔ଴, y଴ሻ為目前車輛所在位置，ܮ: ܽݔ ൅ ܾݕ ൅ ܿ ൌ 0為某一道路
的直線方程式，d 為 P 到 L 的垂直距離，P代表 P 在 L 上的投影點座標，則 
  ݀ ൌ |௔௫బା௕௬బା௖|√௔మା௕మ ， 
  ܲᇱ ൌ ሺݔ଴ െ ௔ሺ௔௫బା௕௬బା௖ሻ௔మା௕మ , ݕ଴ െ
௕ሺ௔௫బା௕௬బା௖ሻ
௔మା௕మ ሻ。 
例如，圖九中的 P 點，其與道路 L1 的投影點並沒有落在 L1 所形成的矩形內，因此可知 P
點必不在道路 L1 上，但可能在道路 L2 或 L3 上；P 點與 L2 和 L3 的垂直投影距離分別為 d2
與 d3，而 d2 < d3，因此此例中判斷的結果為 P 點在道路 L2 上。 
 
圖九 
圖十所示為給定一座標，定位的流程。 
訊不符 
15. 南外街 否，其他道路 22(m) 資料庫與 Google 
Map 道路地點資
訊不符 
16. 園區一路 是 1.355176(m)  
17. 科技二路 是 10.500(m)  
18. 湖濱三路 是 1.8889(m)  
19. 民有街 22 巷 否，其他道路 2.7213(m) 資料庫無此道
路，名稱，標明
為其他道路 
20. 民享一街 28
巷 
否，民享一街 36
巷 
4.9165(m) 資料庫與 Google 
Map 道路地點資
訊不符 
21. 光復路一段 
   607 巷 1 弄 
是 1.96649(m)  
22. 長春街108巷 否，長春街 98 巷 20.7933(m) 資料庫無此道路 
23. 新莊街122巷 否，新莊街 180 巷 4.259283(m) 資料庫與 Google 
Map 道路地點資
訊不符 
24.關東路 376 巷 是 2.8782(m)  
25.光復路一段
544 巷 
否，光復路 544 巷 89.391(m) 資料庫無此道路 
圖十一 
分析以上的測試結果，可約略得知正確率約八成。判斷錯誤可能來自於以下原因： 
1. 交通部-運輸研究所路網數值圖有許多道路，尤其是小巷弄(道路寬度小於 6M)者並無
建立資料庫，所以在判斷道路精確度上有所出入。 
2. 有一些在路網數值圖的道路資訊與 Google map 的資訊道路名稱並不相同，研判可能
其中一個的資料有所輸入錯誤。 
 
五.系統測試結果 
 考量實際室外測量的困難性，目前我們的測試尚以室內為主。測試環境為數台筆記型
電腦，每台電腦各自連接一台wavebox，並且安裝GPS simulator及地圖資料庫。GPS simulator
是用來產生虛擬的 GPS 座標，用以模擬實際道路駕駛時車輛所接收到的 GPS 訊號。我們依
據實際地圖，選擇一個小的範圍，當做模擬的場地。我們選定其中一台設定成在此範圍內
的某一定點，扮演 RSU(road-side unit)的角色，也就是封包傳送時的目的地；其餘各台電腦
上的 GPS simulator 設定成在此範圍內的街道上做等速的移動，扮演 OBU(onboard unit)的角
色。 
  系統啟動之後，各 OBU 皆會定時產生資料封包要送到 RSU。若 RSU 在 OBU 的傳送
範圍內，OBU 便可直接傳送給 RSU；否則則尋找一 relay node 當做 next hop。若不存在適
合的 relay node，OBU 則自行 carry 資料封包，直到到達目的地或是找到 relay node。測試
結果為 RSU 可以收到來自各個 OBU 經由各種方法所傳送的封包。 
 
