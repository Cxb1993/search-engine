 
中文關鍵詞： 資料管理、時空資料、巨量資料、位置感測。 
英 文 摘 要 ： With the advances in wireless communications and GPS 
technology, pervasive location sensing applications 
are rapidly permeating every part of our living 
environments. The difference between the new genre of 
applications and conventional ones is that they are 
driven by moving objects with the location 
information as a function of time. With the emerging 
proliferation of location aware services, the amount 
of spatial-temporal data contributed by location 
sensing applications increases dramatically over 
time, leading to storage, transmission, and 
computation problems. To tackle the emerging issue of 
spatial-temporal data management in petabyte scale, 
we have proposed a novel algorithm, called Inter-
Frame Coding (IFC), for trajectory compression. Using 
realistic spatial-temporal datasets, we demonstrate 
that the IFC scheme is lossless and able to achieve a 
high compression rate of 50%. Moreover, we propose an 
IFC-based range query algorithm that can reduce 
greatly the computational complexity of conventional 
range queries. We argue that the simplicity and 
effectiveness of the IFC scheme renders itself an 
ideal solution for future massive spatial-temporal 
data management.   
 
In this project, we propose to research the data 
management aspect of emerging pervasive location 
sensing applications. First, based on our preliminary 
research results, we plan to design a set of basic 
spatial-temporal data query algorithms based on the 
IFC scheme. In addition, we design the adaptive IFC 
approach to optimize its performance in dynamic 
deployment environments, and study IFC-based data 
management with heterogeneous IFC configurations. 
Second, we plan to improve the data reliability of 
the IFC scheme by applying proper unequal erasure 
protection schemes, and enhance data security by 
using isomorphism functions. The two issues are 
essential to emerging location sensing applications, 
 行政院國家科學委員會補助專題研究計畫   
■成果報告    □期中進度報告  
 
普及位置感測:關鍵技術與應用之研發--子計畫五：普及位置
感測:資料管理技術之研發(I)	 
 
計畫類別：□ 個別型計畫	 	 ■ 整合型計畫 
計畫編號：ＮＳＣ－１００－２２１９－Ｅ－００１－００１ 
執行期間：１００年０5月０１日至	 １０１年０７月３１日 
 
計畫主持人：陳伶志 
共同主持人： 
計畫參與人員：黃冠豪、李威賢、呂御瑋、簡琮訓、吳政龍 
 
 
成果報告類型(依經費核定清單規定繳交)：□精簡報告  ■完整報告 
 
本成果報告包括以下應繳交之附件： 
□赴國外出差或研習心得報告一份 
□赴大陸地區出差或研習心得報告一份 
■出席國際學術會議心得報告及發表之論文各一份 
■國際合作研究計畫國外研究報告書一份 
 
處理方式：除產學合作研究計畫、提升產業技術及人才培育研究計畫、
列管計畫及下列情形者外，得立即公開查詢 
          □涉及專利或其他智慧財產權，□一年□二年後可公開查詢 
           
執行單位：中央研究院資訊科學研究所 
 
中   華   民   國 	 一 	 O 	  一 	 年 	 七 	 月 	 卅  一  日 
TABLE I
EXAMPLES OF MOBILE OBJECTS
Mobility Speed (km/hr) Movement (5 sec) Movement (1 min)
Airplane 800 1,111.11 m 13,333.33 m
Car 100 138.89 m 1,666.67 m
Bus 60 83.33 m 1,000.00 m
Pedestrian 5 6.94 m 83.33 m
Fig. 1. An illustration of I frames and O frames in the IFC scheme.
III. INTER-FRAME CODING
A. The IFC Algorithm
The rationale for this study is based on the observation that
spatial and temporal localities are common in a trajectory, and
the spatial and temporal offsets between any two contiguous
data points in a trajectory are limited to the object’s mobility
and the trajectory’s sampling rate, as shown in Table I. Thus,
we propose a novel trajectory compression algorithm, called
Inter-Frame Coding (IFC), to exploit the spatial and temporal
localities of contiguous spatial-temporal data points, thereby
reducing the amount of redundant information in the raw
trajectory data.
As shown in Figure 1, there are two types of data points in
the IFC scheme: I frames, which contain the index data points
of a trajectory; and O frames, which contain the offsets of the
subsequent data points that correspond to the I frames. Let Iui
denote the i-th I frame that represents the v-th spatial-temporal
data point of the u-th trajectory (i.e., T uv ); and let Oui,j denote
the j-th O frame associated with Iui , i.e., the offset of T uv+j
to T uv .
Specifically, Iui = (sn, u, lngui , latui , tui ), where sn is
the sequence number of Iui ; u is the trajectory identi-
fier; and lngi, lati, and ti are the longitude, latitude,
and timestamp of T uv respectively. Meanwhile, Oui,j =
(i sn, lngOffui,j, latOff
u
i,j, tOff
u
i,j), where i sn is the se-
quence number of the I frame that Oui,j is associated with
(i.e., i sn = Iui .sn); and lngOffui,j , latOffui,j , and tOffui,j
represent, respectively, the longitude, latitude, and time offsets
of T uv+j to T uv .
Generally, an I frame is associated with n O frames. The
value of n is a system parameter tunable based on several
factors, such as the sampling rate of the trajectory data, the
speed of the moving object, and the data compression ratio
required for the application (which we discuss in detail in
the next subsection). However, when the offset values exceed
Fig. 2. The inverted right circular cones of Iui−1, Iui , and Iui+1 in the
projected 3D spatial-temporal space. (n = 3)
the range allowed in an O frame1, a new I frame must be
created, even though the number of O frames associated with
the former I frame is less than n.
We project trajectory data points in a 3D spatial-temporal
space, where the x, y, and z axes represent the longitude,
latitude, and time respectively. The maximum possible space
of O-frame data points associated with Iui form an inverted
right circular cone Υui , which is rooted at Iui with a height
Υui .h equal to the maximum temporal offset and a radius Υui .r
equal to the maximum spatial offset to Iui . Moreover, we know
that, Υui .r = Vmax × Υui .h, where Vmax is the maximum
speed of a moving object in the database. Figure 2 shows three
contiguous I frames and their associated O frames (n = 3) in
the projected 3D spatial-temporal space.
Table II shows an example of ten contiguous spatial-
temporal data points contributed by a random user’s GPS
logger. Given the IFC configuration n = 3, the ten data points
are IFC encoded into three I frames and seven O frames, as
shown in Tables III and IV respectively. More precisely, in this
example, the second I frame is created because n O frames
have been created for the first I frame; and the third I frame is
created because the longitude and latitude offsets between the
7th data point and the second I frame (i.e., the 5th data point)
exceed the maximum offset value allowed for an O frame.
B. Performance Analysis
In this subsection, we use analysis to examine the intrinsic
properties of the proposed IFC scheme. We assume that 1)
the maximum possible speed of a moving object along lines
of latitude and lines of longitude is Vmax meters per second;
2) the trajectory data is collected at a rate of s data points per
second; 3) the maximum value of the latitude and the longitude
offsets is Max dist offset; and 4) the maximum value of
the time offset is Max time offset. We know that
1For instance, the offset values may exceed the range allowed in an O frame
if, in the data stream, a long period containing data points is missed due to
transmission errors or GPS errors.
Fig. 3. The projected square cuboid of the range query RQ(Bs,Bt,Rt,Rs)
in the 3D spatial-temporal space, and its cross-section in the 2D latitude-time
space.
• Case 1: There exists an I frame within Bs distance (along
the lines of latitude or longitude) of Rs no more than Bt
time units before Rt.
• Case 2: There exists an I frame that is not within the
query range, but it has at least one O-frame data point
within the range.
The first case can be processed in the same way as the
conventional method (i.e., without the IFC scheme), and the
u-th trajectory meets the criteria of the range query if there
exists an i such that

Rs.lng −Bs ≤ lng
u
i ≤ Rs.lng +Bs;
Rs.lat−Bs ≤ lat
u
i ≤ Rs.lat+Bs; and
Rt −Bt ≤ t
u
i ≤ Rt.
(5)
However, in the second case, it may be necessary to examine
all I frames that are not within the query range, as well as
their associated O frames. This is computationally expensive
and unaffordable when the database is very large. To resolve
this problem, we propose a simple algorithm that can identify
the set of candidate I frames that may have O frames within
the query range, thereby avoiding extensive lookups of all
I frames in the databases. Using the projected 3D spatial-
temporal space, we regard the i-th I frame of the u-th trajectory
Iui as a candidate I frame if and only if there is an intersection
between Υui and the query range space; that is, if Iui satisfies
the criteria of either Equation 6 or Equation 7.


Rs.lng −Bs −Υ
u
i .r ≤ lng
u
i ≤ Rs.lng +Bs +Υ
u
i .r;
Rs.lat−Bs −Υ
u
i .r ≤ lat
u
i ≤ Rs.lat+Bs +Υ
u
i .r; and
Rt −Bt −Υ
u
i .h ≤ t
u
i < Rt −Bt. (6)

Bs < |lng
u
i −Rs.lng| ≤ Bs +Υ
u
i .r;
Bs < |lat
u
i −Rs.lat| ≤ Bs +Υ
u
i .r; and
Rt −Bt ≤ t
u
i < Rt.
(7)
B. k-Nearest Neighbor Searches
We formally define the k-nearest neighbor search
kNN(k,Rs,Rt) in DEFINITION 2.
Definition 2: kNN(k,Rs,Rt) is a database lookup that finds
the top k spatial nearest objects to the reference location Rs
at the reference time Rt.
Answering the query kNN(k,Rs,Rt) involves three steps: 1)
find the location of each moving object (i.e., the trajectory) at
time Rt; 2) calculate the distance between Rs and the object’s
location at time Rt; and 3) sort the distances in ascending order
and take the corresponding objects of the first k distance as
the result. Let L(u,Rt) denote the location of the object’s u-th
trajectory at time Rt. There are two cases related to obtaining
L(u,Rt).
• Case 1: There exists a j such that the timestamp of the
i-th I frame of the u-th trajectory is exactly equal to Rt
(i.e., tui = Rt). In this case, L(u,Rt) = (lngui , latui ).
• Case 2: If the u-th trajectory does not have any I frames
with timestamp values equal to Rt, we find the two
adjacent I frames that have the largest timestamp values
prior to Rt. Suppose the two I frames are Iui−1 and Iui ;
then we can calculate L(u,Rt) in the following three
subcases2.
– Case 2.a: If two or more O frames are associated
with Iui (say the last two O frames are Oui,j−1 and
Oui,j ), we obtain the location L(u,Rt) by
L(u, Rt) = (lng
u
i + (Rt − t
u
i − tOff
u
i,j)×
lngOffui,j−lngOff
u
i,j−1
tOffu
i,j
−tOffu
i,j−1
,
latui + (Rt − t
u
i − tOff
u
i,j)×
latOffui,j−latOff
u
i,j−1
tOffu
i,j
−tOffu
i,j−1
).
(8)
– Case 2.b: If only one O frame is associated with Ij ,
we obtain the location L(u,Rt) by
L(u,Rt) = (lng
u
i +
lngOffui,1(Rt−t
u
i −tOff
u
i,1)
tOffu
i,1
,
latui +
latOffui,1(Rt−t
u
i −tOff
u
i,1)
tOffu
i,1
).
(9)
– Case 2.c: If no O frames are associated with Iui , we
let Oui−1,j denote the last O frame associated with
Iui−1; then, we can calculate L(u,Rt) by
L(u,Rt) = (lng
u
i + (Rt − t
u
i )×
lngui −(lng
u
i−1+lngOff
u
i−1,j)
tu
i
−(tu
i−1
+tOffu
i−1,j
)
,
latui + (Rt − t
u
i )×
latui −(lat
u
i−1+latOff
u
i−1,j)
tu
i
−(tu
i−1
+tOffu
i−1,j
)
).
(10)
If no O frames are associated with Iui−1, we obtain
L(u,Rt) by
L(u,Rt) = (lng
u
i +
(lngui −lng
u
i−1)(Rt−t
u
i )
tu
i
−tu
i−1
,
latui +
(latui −lat
u
i−1)(Rt−t
u
i )
tu
i
−tu
i−1
).
(11)
After obtaining the location of each moving object at time
Rt, we calculate the Euclidean distance between L(u,Rt) and
Rs for all trajectories in the database. Then, kNN(k,Rs,Rt)
reports the k trajectories that have the smallest distance to Rs
at time Rt.
2The location L(u,Rt) can be obtained by either interpolation or extrap-
olation. However, for simplicity, we only consider the interpolation approach
in this study.
TABLE V
THE BASIC PROPERTIES OF THE TWO DATASETS USED IN THIS STUDY
TPE GeoLife
Data source Taipei e-bus System GeoLife Project, Microsoft Research Asia
Duration 22 days (2010/04/01 - 2010/04/23) 1,129 days (2007/04/13 - 2010/05/15)
Coverage greater Taipei area, Taiwan mostly in Beijing, China
# of distinct moving objects 4,028 104
trajectory types bus bus, car, bike, and walk
avg # of trajectories per day 3,865 12
avg # of data points per day 3,235,460 24,020
avg # of data points per trajectory per day 836 1.517
data resolution about 1 minute about 5 seconds
of (n+1), so there will be fewer O frames for the last I frame.
Moreover, most trajectories are related to urban areas, which
have poor GPS reception due to buildings and other obstacles;
therefore, an I frame may not have exactly n O frames if one
data point floats away from the maximum offset value allowed
for an O frame. Since the I frame is larger than the O frame,
the compression ratio becomes larger if some I frames do not
have n O frames in the dataset.
In addition, using the full-length TPE and GeoLife datasets,
we compare the IFC scheme with five trajectory compression
approaches (i.e., OPW [26], TDTR [26], STTrace [31], Uni-
form Sample [31], and Douglas-Peucker (DP) [12]) using an
exhaustive set of configurations for each scheme in the evalu-
ation4, and observe their Pareto frontiers [17] in two-objective
space of the average distance error and the compression ratio,
as shown in Figure 6.
Figure 6 shows that the IFC scheme outperforms the other
schemes significantly and it always achieves the “Pareto opti-
mum” [17]. In other words, there are no instances on the other
schemes’ frontiers that have both smaller distance error and
lower compression ratio than the instances on IFC’s frontier.
In addition, the results confirm that the IFC scheme is lossless
in compression, as its distance error is zero despite different
compression ratios achieved. Meanwhile, the other schemes
are lossy in location sensing data compression; and the lower
compression ratio, the larger distance error.
B. IFC-based Range Queries
We evaluate the proposed IFC scheme to support range
queries. For simplicity, we set Rt as the timestamp of the
latest data point of the dataset. In addition, we set Rs as the
center of one of the 100 predefined cells (which we explain
below) for each dataset used in the evaluation. All the results
are based on the average performance using the 100 different
Rs.
For the TPE dataset, we use the map of central Taipei (north
to Taipei SongShan Airport, east to Taipei City Hall, south to
National Taiwan University of Technology, and west to Taipei
Main Station). The area covers approximately 30 sq. km (6
4For instance, we vary the number of the O frames per I frame (i.e., n)
from 1 to 10 in the IFC scheme; the sampling gap from 1 to 10 in the Uniform
Sample scheme; the target compression ratio from 10% to 90% in the STTrace
scheme; and the error threshold from 10m to 90m in the OPW, TDTR, and
DP schemes.
km from east to west, and 5 km from south to north), and we
divide it into a 10 × 10 equal-sized cells. Similarly, for the
GeoLife dataset, we use the map of Beijing (north to Shang
Qing Qiao Qu, east to Yuan Tong Qiao, south to Nan Zhong
Zhou Lu, and west to Ya Men Kou Qiao). The area covers
approximately 812 sq. km (28 km from east to west, and 29
km from south to north), and we divide it into a 10 × 10
equal-sized cells.
First, we evaluate the impact of the dataset’s size on the
evaluation time of range queries when the values of Bs and
Bt are fixed at 1 km and 5 minutes respectively. From the
results shown in Figure 7, we observe that the execution time
ratio, i.e., the execution time when the scalable data scheme
is applied over that when the original data format is used,
decreases as the time period covered by the dataset increases.
Specifically, the ratio is less than 1 when the time period of
the TPE dataset is more than 2 days, and it is consistently
less than 1 in the GeoLife case. Moreover, the ratio tends
to converge to the values of 0.28 and 0.45 in the TPE and
GeoLife datasets respectively, i.e. the execution time of range
query operations is reduced by more than 50%. The results
demonstrate that the proposed data scheme can support range
queries more efficiently than the conventional approach, as
long as the dataset is large enough. Fortunately, this is not a
problem for durable applications in reality.
Next, using the TPE and GeoLife datasets, we apply the
scalable data format with the Bt value fixed at 5 minutes, and
evaluate its execution time ratio using different-sized datasets
and various Bs values. The results shown in Figure 8 confirm
our previous findings that the larger the dataset, the greater will
be the reduction in the execution time (i.e., a lower execution
time ratio is achieved). In addition, the results show that,
overall, the execution time ratio tends to increase with the
value of Bs; however, the curves drop after Bs becomes larger
than a certain value when the dataset size is less than 1 day in
the TPE scenario. The reason is that, as Bs increases, the query
must examine a larger number of data points, which involves
an increased number of I frame and O frame lookups, resulting
in a higher time complexity. However, after Bs becomes larger
than a certain threshold, the number of data points involved
in the query is considerable, given the size of the dataset.
As a consequence, the time complexity of the range query is
reduced because of the B-tree index used for the data points.
 0
 2
 4
 6
 8
 10
 12
 14
 16
 0.1  0.5  1  2  4  8 10  20
Ex
ec
ut
io
n 
tim
e 
ra
tio
Bs (km)
1 hour8 hourss1 day
2 days3 days4 days
1 week2 weeks3 weeks
(a) TPE dataset
 0
 0.1
 0.2
 0.3
 0.4
 0.5
 0.6
 0.1  0.5  1  2  4  8 10  20
Ex
ec
ut
io
n 
tim
e 
ra
tio
Bs (km)
6 months1 year 2 years3 years
(b) GeoLife dataset
Fig. 8. Comparison of the execution times of range query operations (Bt = 5 minutes) with different-sized datasets and Bs values in the logarithmic scale
under the IFC scheme.
proposed scheme with different Bt values using the TPE and
GeoLife datasets. Again, the results in Figure 8 confirm our
previous findings that, for both datasets, the execution time
ratio improves with the dataset size, regardless of the value of
Bt. Moreover, the execution time ratio is stable under different
Bt values in the GeoLife case. However, in the TPE dataset,
the ratio increases with the Bt values, except that the curve
of the 1-hour TPE dataset drops initially and than remains
stable when the value of Bt increases. The reason is that
the query must examine a larger number of data points as
the value of Bt increases, which involves a greater number
of data lookups for both I frames and O frames, resulting
in higher time complexity. Meanwhile, when the 1-hour TPE
dataset is used, the number of data points involved in the query
is considerable, given the size of the dataset; thus, the time
complexity of the range query declines because of the GiST
index used for the data points.
C. IFC-based k-Nearest Neighbor Searches
We also evaluate the proposed scheme’s ability to support
k-nearest neighbor (kNN) searches. Similar to the previous
evaluation, we set Rt as the timestamp of the latest data point
in the dataset, and set Rs as the center of one of the 100
predefined cells for both TPE and GeoLife datasets. All the
results are based on the average performance using the 100
different Rs.
From the results shown in Figure 10, we observe that the
execution time of kNN searches is consistent regardless of
the value of k. The results also show that the larger dataset
used, the longer will be the execution time. The reason is quite
straightforward: as the search space increases with the size of
the dataset, it takes longer to perform kNN searches.
Moreover, the results in Figure 11 demonstrate that the IFC
scheme requires a consistently longer execution time than the
original scheme (i.e., using raw data format). The execution
time ratio is about 1.5 in all test cases. The reason is that, when
performing kNN searches, the IFC scheme has to restore the
latest data point by doing two database lookups (i.e., one for
the latest I frame, and the other for the last O frame associated
with the latest I frame). In contrast, the non-IFC scheme can
retrieve the latest data point by only doing lookups on the
raw dataset. Even so, we note that the execution time of
kNN searches is still affordable under the IFC scheme. For
instance, the results in Figure 11 show that the execution time
is less than 3 seconds under the TPE dataset and less than 60
milliseconds under the GeoLife dataset.
VI. DISCUSSION
In this section, we consider a number of issues related to
the proposed IFC scheme that require further investigation.
First, the performance of an IFC-based moving object
database depends to a great extent on the maximum number
of O frames that can be associated with an I frame (i.e., the n
value). However, rather than adopt a ‘one-size-fits-all’ solution
(i.e., apply a fixed n value to all trajectories), it is desirable
to adapt the value of n in accordance with the mobility (i.e.,
Vmax) and the sampling rate (i.e., s) of a trajectory, especially
when there is heterogeneity among the trajectories in the
database. Similarly, to improve the computational efficiency
of range queries, it is desirable to have tighter settings for
the height and the radius of the inverted right circular cone
(i.e., Υhi and Υri for Υi, which represents the maximum
possible space for O-frame data points associated with the
i-th I frame in the projected 3D spatial-temporal space). We
defer a detailed discussion of this issue to a future work.
Second, the proposed IFC scheme only has two layers (i.e.,
the I frame layer and the O frame layer); however, the concept
can be extended to support multiple layered coding, which
would be beneficial in scalable GIS-based services, i.e., GIS
applications that require different resolutions. For instance,
when plotting trajectories on a map, the IFC-enabled scheme
only requires lookups of I frames when the scale of the map
is several kilometers, but it requires lookups of both I frames
and O frames when the scale of the map is several meters.
Due to the space limitation of the paper, we do not discuss
this aspect in detail.
and should be given more protection/redundancy. The IFC
scheme can also be implemented in conjunction with data
prioritization [22, 24] to give priority to I frames when sending
trajectory data in lossy or low-bandwidth networks. Again, we
defer a detailed discussion of this issue to a future work.
VII. CONCLUSION
In this project, we propose the Inter-Frame Coding algo-
rithm (IFC) for lossless compression of trajectory data. We
have also implemented two database queries, i.e., the range
query and the k-nearest neighbor search, based on the pro-
posed scheme. Using realistic datasets compiled by two real-
world systems, we evaluated the proposed IFC scheme and
verified that it can achieve a compression ratio of 58%. The
results also demonstrate that the IFC scheme can effectively
reduce the execution time of range queries; and it only requires
a moderate execution time for k-nearest neighbor searches.
The scheme is simple, lossless, efficient, and extensible with
advance features (e.g., unequal erasure protection and data
prioritization). Thus, we believe that it could facilitate the
development of trajectory databases and future location-aware
services.
REFERENCES
[1] GeoLife: Building social networks using human
location history. http://research.microsoft.com/en-
us/projects/geolife/.
[2] GIST: Generalized Search Tree.
http://gist.cs.berkeley.edu/.
[3] PostGIS. http://postgis.refractions.net/.
[4] PostgreSQL Database. http://www.postgresql.org/.
[5] PostgreSQL EXPLAIN Command.
http://www.postgresql.org/docs/current/static/sql-
explain.html.
[6] Taipei e-bus system. http://www.e-
bus.taipei.gov.tw/index.htm.
[7] N. Beckmann, H. peter Begel, R. Schneider, and
B. Seeger. The R*-tree: An Efficient and Robust Access
Method for Points and Rectangles. In International
Conference on Mangament of Data, 1990.
[8] C.-I. Cha, S.-W. Kim, J.-I. Won, J. Lee, and D.-H. Ba.
Efficient Indexing in Trajectory Databases. International
Journal of Database Theory and Application, 1(1):21–
28, 2008.
[9] V. P. Chakka, V. Prasad, C. Adam, A. C. Everspaugh,
and J. M. Patel. Indexing Large Trajectory Data Sets
With SETI. In International Conference on Biennial
Conference on Innovative Data Systems Research, 2003.
[10] H. D. Chon, D. Agrawal, and A. E. Abbadi. Storage and
Retrieval of Moving Objects. In MDM, 2001.
[11] P. A. Chou, H. J. Wang, and V. N. Padmanabhan. Layered
multiple description coding. In IEEE Packet Video
Workshop, 2003.
[12] D. Douglas and T. Peucker. Algorithms for the reduction
of the number of points required to represent a digitized
line or its caricature. The Canadian Cartographer,
10(2):112–122, 1973.
[13] X. feng Liu, Y. sheng Liu, and Y. yuan Xiao. K Nearest
Neighbors Search for the Trajectory of Moving Object. In
International Conference on Wireless Communications,
Networking and Mobile Computing, 2005.
[14] E. Frentzos, K. Gratsias, N. Pelekis, and Y. Theodoridis.
Nearest Neighbor Search on Moving Object Trajectories.
In International Symposium on Spatial and Temporal
Databases, 2005.
[15] E. Frentzos, K. Gratsias, N. Pelekis, and Y. Theodoridis.
Algorithms for Nearest Neighbor Search on Moving
Object Trajectories. GeoInformatica, 11:159–193, 2007.
[16] E. Frentzos, K. Gratsias, and Y. Theodoridis. Index-based
Most Similar Trajectory Search. In IEEE International
Conference on Data Engineering, 2007.
[17] D. Fudenberg and J. Tirole. Game Theory. The MIT
Press, Auguest 1991.
[18] J. Gudmundsson, J. Katajainen, D. Merrick, C. Ong, and
T. Wolle. Compressing spatio-temporal trajectories. In
International Conference on Algorithms and Computa-
tion, 2007.
[19] R. H. Guting, T. Behr, and J. Xu. Efficient k-nearest
neighbor search on moving object trajectories. The VLDB
Journal, In press.
[20] M. Hadjieleftheriou, G. Kollios, D. Gunopulos, and V. J.
Tsotras. Efficient Indexing of Spatiotemporal Objects. In
International Conference on Extending Database Tech-
nology: Advances in Database Technology, 2002.
[21] H. Jeung, M. Lung, Y. Xiaofang, Z. Christian, S. Jensen,
and H. T. Shen. Discovery of Convoys in Trajectory
Databases. In VLDB, 2008.
[22] Z. Jiang and L. Kleinrock. A Packet Selection Algorithm
for Adaptive Transmission of Smoothed Video Over a
Wireless Channel. Journal of Parallel and Distributed
Computing, 60(4):494–509, April 2000.
[23] X. Jin, Z. Zhang, J. Wang, and D. Li. Watermarking
Spatial Trajectory Database. In International Conference
on Database Systems for Advanced Applications, 2005.
[24] R. Kapoor, M. Cesana, and M. Gerla. Link layer support
for streaming MPEG video over wireless links. In IEEE
ICCCN, 2003.
[25] G. Kollios, V. J. Tsotras, D. Gunopulos, A. Delis, and
M. Hadjieleftheriou. Indexing Animated Objects Using
Spatiotemporal Access Methods. IEEE Transactions
on Knowledge and Data Engineering, 13(5):758–777,
September 2001.
[26] N. Meratnia and R. A. de By. Spatiotemporal Compres-
sion Techniques for Moving Point Objects. In EDBT,
2004.
[27] M. E. Nergiz, M. Atzori, Y. Saygin, and B. Guc. Towards
Trajectory Anonymization: a Generalization-Based Ap-
proach. Transactions on Data Privacy, 2(1):47–75, 2009.
[28] D. Papadias, Y. Tao, J. Zhang, N. Mamoulis, Q. Shen,
and J. Sun. Indexing and Retrieval of Historical Ag-
gregate Information about Moving Objects. IEEE Data
detection of network outages after a natural or man-
made disaster. IFI is comprised of two components:
1) the Active Network Probing (ANP) module, which
proactively probes the network infrastructure to detect
geographic areas that may be disconnected; and 2) the
Reactive Footprint Search (RFS) module, a reactive
mechanism that improves the accuracy of the ANP
results by incorporating the footprints of location-based
social networks (LBSNs) established after a disaster
occurs. Using Typhoon Morakot, which struck Taiwan
in August 2009, as a case study, we implement the
IFI system and evaluate its feasibility in a real-world
scenario. We observe that the accuracy of existing IP
geolocation services is unsatisfactory, and posit that
localized IP geolocation services should be deployed
and maintained all the times. Moreover, we demonstrate
how existing LBSNs can be used to search for disaster
victims in areas reported by ANP, and identify so-called
“critical areas,” which have no Internet activity, for
priority inspection. The proposed IFI solution is simple
and effective, and it can be deployed worldwide.
4) Li-Ping Tung, Tsung-Hsun Chien, Ting-An Wang,
Cheng-Yu Lin, Shyh-Kang Jeng, and Ling-Jyh Chen.
A Study of Comfort Measuring System using Taxi
Trajectories. IEEE International Workshop on Internet
of Things (in conjunction with IEEE ICPADS’11),
Tainan, Taiwan, 2011.
Abstract: The comfort of rides has been identied as one
of the top criteria that affects passengers satisfaction
with public transportation systems. Conventional
comfort measurement approaches rely on professional
measure tools or interviews from passengers, which
are costly, time-consuming, and not yet feasible. The
concept of Internet of Things (IoT) is a new solution to
answer this problem. The idea of IoT is to interconnect
state-of-the-art digital products in physical world to
provide more powerful applications. Vehicles equipped
with GPS devices and wireless access technologies are
parts of the IoT elements in trafc networks. We use the
GPS data to measure the comfort level of vehicle rides,
and provide a detailed comfort statistics as a value
added service. Using real data collected from one of the
Taipei taxi service providers, we show that over 95%
taxi trajectories are viewed as comfortable. In addition,
rides without passengers get higher comfort scores
than with passengers. We also give the rankings of all
taxi drivers according to a number of criteria, such as
the comfort score and the number of loads. With the
ranking results, we can track back to the trajectories
and infer drives driving behaviors, road conditions, and
trafc conditions. We believe that the proposed solution
has the potential to provide a representative comfort
measurement service for taxi services and additional
value-added services for public transportation systems.
B. Research Assistants Mentoring
1) Mr. Guang-How Huang (NTU-CSIE BS student)
2) Mr. Wei-Xian Lee (NTNU-CSIE MS student)
3) Mr. Yu-Wei Lu (NTNU-CSIE MS student)
4) Mr. Tsung-Hsun Chien
5) Mr. Cheng-Lung Wu
 2 
復與應對』，我們也是唯一一個入選HST會議的亞洲國家，並於美東時間，11月15日
下午三點半，進行論文口頭報告。	 
本次會議中，令我印象比較深刻的系統是DIORAMA，它利用類似物聯網的概
念，在每個傷患與物資上貼上一個主動式的RFID標籤，以此來追蹤傷患與物資的動
態，加速傷患的救治與物資的發放，但與物聯網不同的是，這些標籤並非一開始就
已經貼在傷患與物資上，而是由第一組進入災區的人員，進行物資與標籤的發放，
好處是可以有效的節省成本，並可以讓準備進入災區的人員立即知道災區內傷患的
確切位置，也讓遠端管理人員，能指揮並管控物資的數量。	 
	 
二、與會心得	 
最後要感謝國科會計畫於此次參與會議的補助與支持，除了使我們可以在九成
九都是歐美人士的國際會議上，提昇台灣學術研究的能見度，也使我們能藉由此會
議，與其他與會人士進行資訊交流，並獲得最新的技術與想法。	 
	 
三、建議	 
本次的會議已經是第五屆HST會議，我深刻的感受到歐美國家對國土安全的重
視，不但由政府、學術界與業界共同參與，更利用舉行國際會議的方式，獲得最新
的技術與概念，這個方式值得我們學習。	 
	 
四、攜回資料名稱及內容	 
1.	 Abstracts	 Book(HST會議議程與論文摘要)	 
2.	 會議光碟(HST會議議程與完整論文)	 
一、  行程安排  
 
日期	 行程活動 地點 
05/28 23:30 啟程 (長榮航空BR028班機) 台北 
05/29 
10:09 抵達State College，並前往賓州州
立大學拜訪李旺謙教授 
美國賓州州立大學 
05/30 與李旺謙教授及其研究生進行研究討論 美國賓州州立大學 
05/31 與李旺謙教授及其研究生進行研究討論 美國賓州州立大學 
06/1 11:55 返程 (達美航空DL3819班機) 美國賓州州立大學 
06/2, 3 6/3 06:30 抵達 (長榮航空BR017班機) 台北 
 
二、  心得感想  
 
本次很榮幸接受國科會專題研究計劃的國際合作研究補助，至美國賓州州立大學
進行學術訪問，針對我們近期的合作研究項目，進行深入的討論，並且瞭解對方
近期在軌跡資料處理以及巨量資料相關技術上的研究，規劃未來共同針對特定議
題進行合作研究的計劃及方法。 
 
由於航班班次的關係，本人的班機在5/29接近中午時，方才抵達最後的目的地
State College Airport，在簡單的前往飯店辦理入住手續後，隨即與本次訪問的李
旺謙教授一同前往賓州州立大學資訊科學系，申請該校的電腦網路服務帳號，並
且由李教授簡略介紹其實驗室目前學生的研究項目；接著我們便直接針對此次訪
問的研究主題，進行初步的討論，並且規劃近期共同撰寫論文的主題、內容與期
程。 
 
在第二天(5/30)的行程中，我們在早上共同聽取李教授目前指導的學生(Mr. 
國科會補助計畫衍生研發成果推廣資料表
日期:2012/07/10
國科會補助計畫
計畫名稱: 子計畫五：普及位置感測:資料管理技術之研發(I)
計畫主持人: 陳伶志
計畫編號: 100-2219-E-001-001- 學門領域: 應用服務(網通國家型)
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
無 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
