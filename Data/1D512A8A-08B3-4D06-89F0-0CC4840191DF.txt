 2 
possible. The objectives of this paper is to design and 
implement functions that allow users to define residential 
contextual rules and them invoke associated service once 
contextual conditions are met. 
B. Literature Survey 
Context awareness accesses relevant information based on 
user’s context. SenSay [4] is a context-aware mobile phone 
that adapts to dynamically changing environmental and 
physiological states.  A number of sensors including 
accelerometers, light, and microphones are mounted at 
various points on the body to provide data about the user’s 
context.  A decision module uses a set of rules to analyze 
the sensor data and manage a state machine composed of 
uninterruptible, idle, active and normal states. 
W. R. Jih, S. Y. Cheng and Y. J. Hsu present a rule-based 
approach to context-aware access control in pervasive 
healthcare [6]. Their system is designed to work on 
resource-limited mobile devices over a peer-to-peer wireless 
network.  Dynamic access authorization is achieved in real 
time by actively collecting context information, and 
integrating appropriate access control rules. 
T. Broens developed an application framework for 
context-aware m-health applications [5] which captures and 
processes raw patient data, and possible contextual 
information. Their paper focuses on the tele-monitoring 
domain as a subset of the healthcare domain.  
The OSGi (Open Services Gateway Initiative) [7] 
platform is a versatile platform, and is widely used in 
various fields.  D. Marples [8] provides an overview of 
OSGi, and outlines the associated benefits, typical markets, 
and example use cases.  OSGi aims to definite an open 
platform for a remote software service provider which 
provides applications for users. Based on user needs, it can 
dynamical download updating file through the internet to the 
user's home gateway, and install automatically. "Open" 
means that OSGi alliance members can participate in the 
formulation, follow this standard, and develop products that 
meet the specifications. With this open framework, different 
manufacturer’s product, services software, and equipment 
can communicate with each other.  OSGi platform is very 
suitable for use in the home network.  It can be used for a 
variety of dynamic services.  “MyHome” system is built in 
this framework, so is the vision sensor system. 
C. Major Contributions of This Work 
We investigate context-aware applications for smart 
homes and developed an OSGi-compliant integration 
platform for it. Regarding context awareness, we have 
defined context-aware applications and suitable scenarios in 
home environment; we have designed a systematic 
rule-based engine module for implementing {who} x {when} 
x {where} x {additional triggering condition} → {service} 
rule template.  Regarding the OSGi-compliant integration 
platform, we have designed an OSGi-compliant 
context-aware platform that integrates all of the contextual 
information; in particular, on this platform, we have 
implemented a rule-based engine module for easy 
development and efficient run-time execution.  
D. Paper Organization 
The organization of this paper is as follows: Section II 
describes the residential context-aware framework which 
introduces applications of MyHome and rule-based engine 
module. Section III describes the OSGi-compliant 
context-aware platform and the system structure for 
implementing modules communications. Section IV presents 
demonstrations of our system. Finally, section V concludes 
our study and discusses future work. 
II. Residential Contexts 
Bill Schilit [2] says that “people’s actions can often be 
predicted by their situation. Contextual information and 
commands aim to exploit this fact.  To characterize 
contextual applications, the rule of X => Y means that once 
X is satisfied, service action Y follows.  In other words, X, 
as pre-condition variable, is taking as contextual information.  
For example, if father is home, the system will turn on light.  
It’s obvious that father is home is a pre-condition variable 
for turning on light. For more complicated cases, X can be a 
combination of several variables, and Y as service, thus a 
way to represent a context-aware service rule can be 
represented as: {who} x {when} x {where} x {additional 
triggering condition} → {Service}.  
In our MyHome system, we consider anycombination of 
contexts (e.g., family member, occupant’s locations, current 
time in a day, and environment sensor status) as contextual 
information, and the corresponding service as context-aware 
actions for that family member, at that particular room, at 
the time, conditioned by specific environment sensor status. 
The mapping of contextual information and service action 
makes one context-ware rule. 
A. Contextual applications 
In our demo environment, six kinds of peripheral devices 
are included to facilitate context aware services: IP camera, 
MyMobile, a small PC, blood pressure meter, security 
sensor and message server, as shown in Fig. 1. IP camera is 
used for COTS (configurable occupant tracking system) 
which provides family member’s location as one source of 
contextual information.  MyMobile is a wireless accessible 
user interface for MyHome. The PC is used as a media 
player that plays music or opens browser automatically. The 
blood pressure meter is to measure their heath state and 
upload to MyHome server automatically through Zigbee 
device. The security devices include reed switch sensor, 
glass break sensor and fire detector sensor; reed switch will 
be triggered when it is opened, glass break will be triggered 
when it is vibrated.  Finally, the message server is to send 
newsletter or e-mails to designated family members.   
We list some examples of contextual service in a smart 
home: 
(1) Sending a real-time message to MyMobile. 
(2) Sending video clips taken from a camera to 
MyMobile. 
 4 
living room” message, it sets the “father_in_living_room” 
variable to true value, gets current system time, and then 
scans the whole rule set to match the current contextual 
condition.  
As Rule1 in Fig. 3 is satisfied, the associated service will 
be invoked, and our system will show news for father. If 
another message “fire detector is on” comes later, the 
rule-based engine will set “fire_detector” variable to true 
and scans rules again.  As Rule2 is satisfied, the smart 
home system will trigger some alarm services. 
 
 
Fig. 3 Mechanism of rule-based engine module. 
III. Design a Context-Aware 
Integration Platform 
A. Design overview 
Here we talk about the design overview of rule-based 
engine module, and we focus the development time of the 
rule-based engine module. If any context-aware rule 
conform this rule template “{Who} x {When} x {Where} x 
{other condition variable} => Service,” it can be worked by 
utilizing our context-aware platform to make a 
context-aware rule for occupants, so we describe how to 
accomplish it. 
We utilizing the MOM software called ActiveMQ for 
rule-based engine module, and it is implemented by an 
ActiveMQ template. The defined rules are embedded within, 
event triggering is generated by other program (also 
implemented by an ActiveMQ template), upon reception of 
an event triggering, all embedded rules are scanned, and 
rules with combination of condition variables satisfied 
automatically invoke corresponding service. The rule-based 
engine module subscribes all context-aware related topics, 
and ActiveMQ sends all contextual information to this 
module for setting relation variables. 
At first, we talk about how the rules enter the engine in 
the development time? In the development time, the 
rule-based engine module scans the rule list file whose 
format was pre-defined in our system, the rule-based engine 
module counts how many rules there are, and build the same 
number of rules according to the rule list file. The rule list 
file is shown as  Fig. 4.  
 Fig. 4 List of rules is stored in a text file. 
 
Here we describe how the services are linked to the 
rule-based engine module, the rule template right hand side 
(RHS) is “Service”. In the OSGi framework, there is an 
OSGi Service Registry which is used for any module want to 
register/get services, if any module wants to register / get 
services, it follow the bundle template to link its service 
implement function. The bundle template is shown as Fig. 5. 
 
 
Fig. 5 The bundle template and the service registry. 
 
 
Fig. 6 Variables used in the rule-based engine module. 
 
In the rule-based engine module, there are many variables 
relate to COTS and Sensors, it’s shown as Fig. 6. In the 
COTS, we let {Who} and {Where} as a variable because 
“who is in where?” is a fact can’t be divided, for example, 
“Father_in_living_room” is a variable about who and where, 
the other sensor’s module variables like “glass_break” and 
“reed_switch”, their state can be on or off. The initial values 
of these variables are false, when an event coming, the 
 6 
register/getting function between rule-based engine module 
and providing service bundle. When we start the OSGi 
framework, all of the bundles will register two kinds of 
service, one is providing service and the other is getting 
service. The providing service means it have implemented 
and can provide to other modules. The getting service means 
it will declare that what service will be use. They register 
providing service and getting in the service registry, if others 
module want using service, it will get service by searching 
service registry which include all services index. 
 
Fig. 11 Implementing the service register function. 
 
 One thing is important, the getting service must declare 
before the providing service because when the getting 
service register in service registry, it will implement a 
service listener function, the service listener function will 
listen the corresponding service state change and do 
corresponding work as a callback function, if we let the 
providing service firstly start, we can’t listen the service 
change event.  
C. Integration into MyHome platform  
Here we describe integration of context-aware platform 
and some example of context-aware system procedure, we 
describe the integration between COTS, MOM and OSGi 
service at first, the integration between COTS, MOM and 
OSGi service is shown as Fig. 12.  
 
Fig. 12 Integration between COTS, MOM and OSGi 
services. 
 
When the position bundle is starting, the position bundle 
continues listen the “image processing” service. If the image 
processing bundle is starting, it registers the “image 
processing” service to the OSGi service registry. The 
position bundle listen a change of the image processing 
service, and than the position will get the image processing 
service. The position bundle utilizes the service function to 
calculate the physical position of occupants, we can also 
stop or restart the “image processing” service with the main 
bundle not interrupted because the OSGi service is a 
dynamically function. 
In other hand, to send the condition variables, the 
MyHome tell to the MOM (Message Oriented Middleware) 
it subscribes the location topic when starting, after 
calculating physical location of occupant, we send these 
contextual information to the MOM and assign the location 
topic for them, such MyHome sever can get the location of 
occupant by subscribe the location topic. 
Fig. 13 shows the integration of context-aware platform 
in smart home, the context relation module (position module, 
peripheral module and GPS module) publish contextual 
information and assigning different topics.  
 
Fig. 13 The context-aware service architecture 
 
The position module provides the “who, where and when” 
contextual information which are main condition variables, 
the peripheral module provides the additional triggering 
condition, for example, reed switch, glass break, etc..., the 
GPS module provides occupant location when they aren’t at 
home.  
The rule module receives all of contextual information by 
subscribing related topics, and different topic has different 
callback function, when receiving contextual information, 
the rule module will set all rule condition variables and 
check all rules in their callback function, if some rules are 
satisfied, the rule module will invoke corresponding services 
which have registered in OSGi platform. 
In order to let reader understand run time procedure more 
cleanly in our system, and we list two context-aware 
examples.  Fig. 14 shows the example 1, if there is a 
rule ”father is in living room at 7:00~8:00 => playing 
music”, when COTS discover that father is in living room, 
and then it’s will send a contextual information 
“father_living_room” to ActiveMQ in “location” channel 
(topic). Because of the rule module subscribes the 
 8 
videos in each camera, these nine cameras cover the entire 
smart home and making there isn’t any dead corner. We set 
our MyHome server in the study room (in the left up of the 
figure), the study room is our control room which we don’t 
use tracking algorithm to avoid mistake. 
The IP Cam which we have used is HUNT HLC-83M 
IP Cam, and we have installed all of them in the smart home 
areas. The setting of the local area network is shown as Fig. 
20. 
 
 
Fig. 19 Smart home environment in the demo room 
 
The COTS transmits instant images through the 
platform of RJ-45 in 100Mbps local area network and 
analyzes image sourced from the nine IP Cams. In order to 
start image procedure, the tracking system needs the real 
time image from IP cameras, and we build them in local 
network which is fast speed for transition. We get an image 
each camera once, than we start image processing procedure. 
After the images are analyzed by the image processing 
system, the COTS retrieves new images from each camera 
again and analyze again.  
 
Fig. 20 Connectivity of devices 
B. Example Residential Scenario  
To combine pervious scenarios and to integrate all of 
service provided by MyHome, we use a daily activity of 
family to illustrate our system. The family members include 
father, mother, grandfather, old brother, young brother, aunt 
and her child, and the scenario is shown as following: 
At 7 o’clock in the morning, MyHome system plays 
different music in different rooms automatically (The rule 
format is {all occupants} x {7:00} x {each room} x {none} 
=> to wake up all occupants). After the father gets up, he 
walks to the monitor next to the balcony; the monitor will 
show immediately the news he interests in (The rule format 
is {father} x {any time} x {bed room} x {none} => to show 
financial and economic news). Meanwhile, the mother walks 
to the kitchen to prepare breakfast.  When she approaches 
the refrigerator, the refrigerator monitor will show the foods 
inside (The rule format is {all occupants} x {any time} x 
{kitchen} x {none} => the refrigerator monitor show foods 
inside). The grandmother uses MyHome system to link the 
medical equipment and measures her blood pressure.  
When she finishing measurement, MyHome system stores 
the measurement information and may notify the family 
physician if a preset alarming condition is met; The remote 
family physician may observe the grandmother's blood 
pressure record through MyIcon. 
After 8 o’clock in the morning, when the father is at work, 
he may be concerned if the old brother is still in the bed.  
The father may use the MyIcon interface to learn that his 
elder son has left home at 8:00, meaning that his son should 
not be late for school. At the same time, the GUI may shows 
that the light in the study room is still on; the father can 
switch off the light by using the remote interface of MyIcon. 
At this time, say, the mother is shopping outdoor but forgot 
to check shopping list. She can use the MyMobile to query 
the home inventory. 
Suppose the grandmother went out to her friend's for 
chatting, but got lost when she wants to walk to home.  She 
can use her MyMobile to send her GPS location to the 
MyHome server; family member  can view her location 
form Google map by using MyMobile before finding her 
and bringing her home. 
If the mother receives a text message, indicating that the 
glass break sensors were triggered at home, the anxious 
mother may want to view the images transmitted from the 
MyHome system.  Suppose it’s the young brother playing a 
ball which hit the window (The rule format is {mother} x 
{any time} x {living room} x {glass break sensor} => To 
send warning text message).  
C. Comparison to existing systems 
To compare with existing solutions, we list several 
features for comparison  in 錯誤! 找不到參照來源。. 
Table. II The comparison with other approaches table. 
 
Activity 
Analysis 
[11] 
EasyLiving 
[9] 
Intelligent 
Video [10] 
Our 
project 
Platform 
Proprietary 
platform 
 
Proprietary 
platform 
 
Proprietary 
platform 
OSGi 
platform 
 
Equipment 
Fisheye 
camera 
Stereo 
camera 
Normal 
camera 
Normal 
camera 
 
Camera 
position 
 
Ceiling 
corner 
Parallel 
with 
people 
Parallel 
with 
people 
Ceiling 
corner 
Viewpoint 
 
Single view 
 
Multi view 
 
Single 
view 
Multi 
view 
 
DVR Normally Normally Normally Annotated 
出席國際學術會議心得報告 
                                                             
計畫編號 NSC 98-2221-E-011-132 
計畫名稱 智慧型家庭的開發 – 子計畫二：「我的家」icon：家庭資訊全覽 
出國人員姓名 
服務機關及職稱 
姓名: 鍾聖倫 
服務機關及職稱: 台灣科技大學電機系教授 
會議時間地點 
時間: 2010 年 10 月 10~12 日 
地點: 土耳其，依斯坦堡 (Istanbul, Turkey) 
會議名稱 
中文: 2010 年 IEEE 國際系統、人與控制論研討會 
英文: 2010 IEEE International Conference on System, Man, and 
Cybernetics Society (SMC) 
發表論文題目 
Sequence-based Autonomous Robot Navigation by Log-Polar Image 
Transform and Epipolar Geometry 
 
參加會議經過 
 
IEEE SMC (系統、人與控制論國際會議) 是全世界所有電機電子系統、人機與控
制領域學術界及業界研究者的年度盛事，其亦為同領域最具規模的研討會議。本
人於 99 年 10 月 9 日傍晚從桃園中正國際機場搭乘新加坡航空飛機，經新加坡，
再轉至土耳其伊斯坦堡。同行有十餘名國內學者。本人的報告是 10月 11日下午，
講題是自主性機器人利用有限影像作導航，效果是目前文獻上看到速度效能較好
的。當天約有廾餘位學者列席，因為當天有本人報告時也有展示影片， 報告後
由聽眾的問答來看，反應不錯。 
 
 
12 日早上，本人也參與 Edgar Koerner 所演說的「Learning to behave in a natural 
國科會補助計畫衍生研發成果推廣資料表
日期:2011/03/02
國科會補助計畫
計畫名稱: 子計畫二：「我的家」icon: 家庭資訊全覽
計畫主持人: 鍾聖倫
計畫編號: 98-2221-E-011-132- 學門領域: 智慧型控制
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
1. 自動監測之整合界面技術：申請人經由台科大推薦申請兩項專利：「顯示訊
號處理系統及其處理方法」；以及「用於資源量錶之影像偵測裝置及其方法」。
其中第一項的技術並促成撼訊科技的園區產學合作案。 
2. 2010年「學界關懷─控制系統整合網路應用服務」(財團法人金屬工業研究
發展中心)。 
3. 2010年「中小企業雲端資訊服務平台先期開發計畫產學合作案」(經濟部中
小企業處) 
4. 2008年「97年度教育部推動技專校院與產業園區產學合作計畫：以 Zigbee
無線傳輸量測結果之血壓計」(計劃主持人  鍾聖倫教授；配合廠商  撼訊科技
股份有限公司)。 
5. 2007 年「工研院共通平台應用展示委託服務案：機器人的地圖建置與自我
定位」(計劃主持人  鍾聖倫教授；廠商 工研院機械所)； 
6. 2007 年「96 年度教育部推動技專校院與產業園區產學合作計畫：電源自給
式之無線遠端監控與資料擷取工業電腦」(計劃主持人  鍾聖倫教授；配合廠商
研揚科技股份有限公司)。 
 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
