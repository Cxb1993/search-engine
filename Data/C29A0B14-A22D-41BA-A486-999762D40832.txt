 1
中文摘要 
 
本研究提出一個新的方法，用來建立蛋白質成對序列排比。目前在蛋白質序列排比
上一直存在一個致命的問題，那就是當使用明確値資料去進行分析時，太多的不確定因
子與敏感性資訊的遺失，導致序列排比問題出現瓶頸。由於使用不同的軟體和演算法會
造成不同的結果，對於正在研究生物基因的科學家們，不同演算法亦很難廣泛地運用於
基因序列上。因此基於這個最重要的前提下，本研究提出模糊的概念，將250單點突變
矩陣 (point accepted mutations, PAMs)與62區塊突變矩陣 (blocks substitution matrix, 
BLOSUM)利用基因演算法(genetic algorithm, GA)於序列排比上。最主要的目的是用來減
少不確定因子的影響，避免利用明確値或權重的方式，造成重要資訊的遺失，以及增加
解的正確性與適用性。實驗果顯示，不論是利用PAM250還是BLOSUM62矩陣，利用GA
演算法皆能找到更長且配對的蛋白質序列，並在不同矩陣的運用上，利用模糊矩陣所產
生解的變動性要比明確値小，也就是說，將模糊概念運用於序列排比，確實能夠減少不
確定性的影響並且增加解在區域相似上的利用性。 
關鍵詞：蛋白質序列排比、基因演算法、模糊理論、仿射性間格懲罰函數 
 
Abstract 
In this paper a novel way to construct pairwise alignment of protein sequence is 
proposed. Currently in protein sequence alignment the vital problem is having too many 
uncertain factors and causes significant data loss while using crisp data. Due to using different 
software and algorithms that will bring about different results, for scientists researching in 
protein, different algorithms will be difficult to use widespread. Therefore, for this important 
premise, fuzzy concept is introduced and fuzziness is implemented in the matrix for 250 point 
accepted mutations (PAMs) and matrix for 62 blocks substitution matrix (BLOSUM) in 
sequence aligning, and integrated with the Genetic algorithm (GA). The purpose for this 
implementation is to reduce the effects of uncertain factor, avoid making use of crisp values 
or weights resulting in significant data loss, and increase solution accuracy and method 
suitability.  
Results of experiment shows that application of fuzzy matrix to sequence alignment 
could find more continuous and identical protein sequence. Furthermore, this research used 
different matrix to sequence alignment. The result shows that variation of fuzzy matrix is 
smaller than crisp matrix. Therefore, application of fuzzy matrix certainly can reduce the 
effects of uncertain factor and increase solution accuracy. Hence, these results of experiment 
evidenced fuzzy logic useful to dealing with the uncertainties problem, and applied to protein 
sequence alignment successfully. The new method can provide different viewpoint for related 
research. 
Keywords: protein sequence alignment; genetic algorithm; fuzzy theory; affine gap cost. 
 
 
 
 3
2. 模糊算數、模糊PAM與模糊BLOSUM矩陣  
 
2.1 模糊算數操作 
 
模糊算數是根據Zadeh在模糊集理論中的擴張原則(Zadeh, 1965)，最初是被使用在
Dubois and Prade (1980), Nahmias (1978), Mizumoto and Tanaka (1976)等的文章中,其他還
有將擴張原則應用在approximate and exact manners (e.g., see Chang (2005) for a review)。
假設有一個模糊集合或模糊數在實線ℜ上，以下將介紹模糊定義與模糊算數。  
模糊歸屬函數⎯有一個模糊集合或模糊數（FN）在實線ℜ上，可表示為( 1 2 3, ,a a a ), 2a
表示眾數， 1a 與 3a 分別表示 ( )A x% 的左界與右界，而歸屬函數 ( )A x% 可被定義為x ∈ ℜ to %A   
1
1 2 1 1 2
3 3 2 2 3
3
0, ,
(( ) /( )), ,
( )
(( ) /( )), ,
0, ,
x a
L x a a a a x a
A x
R a x a a a x a
x a
<⎧⎪ − − ≤ ≤⎪= ⎨ − − ≤ ≤⎪⎪ >⎩
%                                       (1) 
L和R分別表示 ( )A x% 中左邊與右邊的(shape functions)。若以三角型隸屬度函數或三角模
糊數（triangular membership function or called triangular fuzzy numbers(TFN)）可表示成如
圖2 
1
1 2 1 1 2
3 3 2 2 3
3
0, ,
( ) /( ), ,
( )
( ) /( ), ,
0, .
x a
x a a a a x a
A x
a x a a a x a
x a
⎧ <⎪⎪⎪⎪ − − ≤ ≤⎪=⎨⎪ − − ≤ ≤⎪⎪⎪ >⎪⎪⎩
                                        (2) 
( )A x%
 
圖 2 三角隸屬度函數 (a1, a2, a3) 
 
在一信賴區間α水準，α ∈ (0, 1]，我們定義Aα： 
{ }( )A x A xα α= ≥ ,                                                        (3) 
三角型隸屬度函數以α-截集表示為： 
( ) ( )
1 2 1 2 1 3 3 2[ , ] [ ( ), ( )]A a a a a a a a a
α α
α α α= = + − − − ,                               (4) 
( )
1a
α 表示Aα的下界，而 ( )2a α 表示Aα的上界。 
α-截集（α-cut）模糊算術(The α-cut fuzzy arithmetic) 根據模糊算術方法，Zadeh’s sup-min
方法表示如下： 
( )( ) sup min( ( ), ( ))x y zA B z A x B y== D  D ,                                          (5) 
其中，D表示任何的算數操作(arithmetic operation)。公式(5)代表Mizumoto and Tanaka於
（1976）使用相同方法在α-截集模糊數和區間算術。模糊算數的結果可被稱作α-截集算
 5
 
2.3 模糊BLOSUM62矩陣 
 
Henikoff 和Henikoff 在1992年11月發展一種運算胺基酸序列排比時計算替換發生
機率的BLOSUM矩陣。它是以比對蛋白質序列的BLOCKS資料庫為基礎，從其中擷取出
來的序列推演而得。因此以BLOcks SUbstitution Matrix 來命名，目的在改善PAM矩陣的
缺點。Henikoff 和 Henikoff計算出任何位置成對的胺基酸數目與全部期望出現成對的胺
基酸數目的比率，結果以對數來表示。Henikoff考慮到遺傳距離相近的蛋白質序列中，
彼此間胺基酸的差異不大，因此在計算每一點的各種胺基酸比例時，在遺傳距離相近的
蛋白質間共有的同一種胺基酸在其點上所佔的比例會偏高，而導致計算上的偏差。所以
布洛森矩陣的方法是將各個序列片段依照最低相同比例(minimum percentage identity)給
予分組，每組分別計算其中每個點各種胺基酸的比例，事實上就像在計算一條序列的每
個點各種不同的胺基酸出現的機率一樣，這樣就可以修正因為某些蛋白質彼此間遺傳距
離較近而造成的偏差。因此本研究也將此矩陣納入模糊的考量，而模糊方式與上述的模
糊PAM250矩陣相同，差別只在於所使用的 ijm 在此將以BLOSUM矩陣為基礎，其他步驟
同上將不再贅述。 
 
3. 以PAM、BLOSUM矩陣和基因演算法為基礎的序列排比 
 
在本研究中，我們利用基因演算法去找出最大的成對分數加總(sum of pairs)，但由
於模糊矩陣與明確値矩陣所計算出的成對分數加總因基礎不同，不能用來比較，因此我
們利用行分數(column score (CS))來作為明確値矩陣與模糊矩陣結果比較的依據，而CS
公式可參考Thompson et al. (1999)。 
 
3.1.參數編碼 
 
本研究參考Hung (2002)中所用的編碼方式，這個方法是用來解決k緯度(k條序列)的
最短路徑問題，利用向量的方式將編碼範圍分成3個緯度去進行求解搜尋。若以兩條列
排比為例如圖3，圖3(a)為2條序列，利用參數編碼的方式可表示成圖3(b)，S為起點，T
為終點，KPDN與KDN為兩條要進行比對的基因，從起點至終點皆有3個方向可前進，
因此我們在每個x與y軸的交點上可發現皆須進行方向的抉擇，以圖3(b)中的P點為例，若
向緯度1前進，則P點並不能對應到y軸的基因，因此P點會對應到ㄧ個gap，若向緯度2
前進，則P點會保留，因此D點會對應到ㄧ個gap，若向緯度3前進，則P點會與y軸的基因
D相對應，因此P點會對應到ㄧ個D，如此便能從起點至終點完整的對兩條基因行進方向
進行編碼。 
 
 
圖 3 成對排比表示方式 Hung (2002) 
 
S K
P
D N
K
D
N
T
P
1
2 3
K D NP
K D N 
(a) 
(b) 
 7
圖 4 局部保留與交配操作說明  
 
  4) 突變⎯ 傳統的基金演算法為了增加收斂速度，通常是使用較小的突變機率。然
而，在本研究中我們使用較高的突變機率(設為0.2)，因為若使用較低的突變機率，將會
因收斂太過快速而導致無法搜尋到最佳解。除此之外，在局部保留時所留下的基因也有
可能發生突變，這個條件是為了增加搜尋最佳解的機率。在圖5，我們可知道如何去進
行突變的操作。 
 
4. 序列排比分析說明 
 
在眾多的資料中，我們利用BAliBASE(Thompson et al., 1999)所提供的蛋白質序列作
為序列排比的樣本，其中利用reference 1 中的SH3來進行排比與分析，並且使用模糊
PAM矩陣作為評分依據。除此之外，為了解決排比序列長度不同的問題，本研究利用間
隔性懲罰函數(affine gap penalties)，主要原因在於此函數有較低的複雜性，因此求解快
速。而在本研究所使用的間隔性懲罰函數中，開啟成本(open gap cost)設5，延伸成本
(extended gap cost)則設2。. 
在本研究中，我們使用了不同的三角歸屬度函數，分別為右偏、對稱、左偏的三角
歸屬度函數。而右偏歸屬度函數為   ijM =(mij-1, mj, mij+3)，對稱歸屬度函數為   ijM =(mij-3, 
mij, mij+3)，左偏歸屬度函數為   ijM =(mij-3, mij, mij+1)。基因演算法求解代數為500代，重
複次數為20次。基因演算法利用明確值求解(GA-crisp)與基因演算法利用模糊值求解
(GA-fuzzy)比較結果參考表1、表2、圖6、圖7與圖8 。表1中我們包含平均CS、最低CS
、最高CS以及連續最長配對CS。其中，平均CS與GA-crisp 沒有顯著差異，而最低CS
與最高CS皆優於GA-crisp，而在表2中，平均CS與GA-crisp 沒有顯著差異，最低CS優於
GA-crisp，最高CS在序列lpht-lihvA與lpht-lvie有顯著差異，圖6則是針對最高CS所畫出的
圖形，其中藍色與紅色線分別代表模糊PAM與模糊BLOSUM矩陣應用於基因演算法，
而綠色與粉紫色線分別代表明確値PAM與明確値BLOSUM矩陣應用於基因演算法。 
 
 
K D N P 
K D N Initial solution - 
3 3 3 Initial encode 1 
Encode 
3 3 1 
Encode after crossover 
3
Crossover 
Decode 
K - D N Offspring 
Mutation 
3 1 3 3 
Encode after mutation 
Random selection of mutation point 
 9
表 2 蛋白質序列利用GA-crisp與GA-fuzzy比較結果(BLOSUM矩陣) 
Sequence 
name Method Epoch TFNs 
Avg.  
CS(%)
The 
best 
CS(%)
The 
worst 
CS(%) 
The longest 
continued 
sequence 
CS(%) 
lpht-lycsB GA-fuzzy 500 Slant-right 36.25 51.25 30 35 
lpht-laboA GA-fuzzy 500 Symmetric 35 48.75 30 26.25 
lpht-lihvA GA-fuzzy 500 Slant-left 25 50 10 22.5 
lpht-lvie GA-fuzzy 500 Slant-right 27.5 52.5 13.75 25 
lpht-lycsB GA-crisp 500 None 36.25 53.75 27.5 28.75 
lpht-laboA GA-crisp 500 None 36.25 51.25 25 25 
lpht-lihvA GA-crisp 500 None 21.25 35 10 15 
lpht-lvie GA-crisp 500 None 26.25 36.25 13.75 18.75 
 
 
圖 7 GA-crisp與GA-fuzzy應用不同矩陣比較圖(連續最長配對CS) 
 
Fuzzy V.S. Crisp
category of sequences
C
lo
um
 S
co
re
 (C
S
)
8
14
20
26
32
38
1pht-1ycsB lpht-1aboA lpht-1ihvA lpht-1vie
GA_Fuzzy_PAM matrix
GA_Fuzzy_BLOSUM
GA_Crisp_PAM matrix
GA_Crisp_BLOSUM
 11
 
BLOSUM62矩陣 
                                             ORIGINAL AMINO ACID 
C S T P A G N D E Q H R K M I L V F Y W
 
Cy
s Ser 
Th
r Pro 
Al
a 
Gl
y 
As
n 
As
p 
Gl
u 
Gl
n His
Ar
g 
Ly
s 
Me
t Ile 
Le
u 
Va
l 
Ph
e 
Ty
r 
Tr
p 
C Cys 9 -1 -1 -3 0 -3 -3 -3 -4 -3 -3 -3 -3 -1 -1 -1 -1 -2 -2 -2
S Ser -1 4 1 -1 1 0 1 0 0 0 -1 -1 0 -1 -2 -2 -2 -2 -2 -3
T Thr -1 1 5 -1 0 -2 0 -1 -1 -1 -2 -1 -1 -1 -1 -1 0 -2 -2 -2
P Pro -3 -1 -1 7 -1 -2 -2 -1 -1 -1 -2 -2 -1 -2 -3 -3 -2 -4 -3 -4
A Ala 0 1 0 -1 4 0 -2 -2 -1 -1 -2 -1 -1 -1 -1 -1 0 -2 -2 -3
G Gly -3 0 -2 -2 0 6 0 -1 -2 -2 -2 -2 -2 -3 -4 -4 -3 -3 -3 -2
N Asn -3 1 0 -2 -2 0 6 1 0 0 1 0 0 -2 -3 -3 -3 -3 -2 -4
D Asp -3 0 -1 -1 -2 -1 1 6 2 0 -1 -2 -1 -3 -3 -4 -3 -3 -3 -4
E Glu -4 0 -1 -1 -1 -2 0 2 5 2 0 0 1 -2 -3 -3 -2 -3 -2 -3
Q Gln -3 0 -1 -1 -1 -2 0 0 2 5 0 1 1 0 -3 -2 -2 -3 -1 -2
H His -3 -1 -2 -2 -2 -2 1 -1 0 0 8 0 -1 -2 -3 -3 -3 -1 2 -2
R Arg -3 -1 -1 -2 -1 -2 0 -2 0 1 0 5 2 -1 -3 -2 -3 -3 -2 -3
K Lys -3 0 -1 -1 -1 -2 0 -1 1 1 -1 2 5 -1 -3 -2 -2 -3 -2 -3
M Met -1 -1 -1 -2 -1 -3 -2 -3 -2 0 -2 -1 -1 5 1 2 1 0 -1 -1
I Ile -1 -2 -1 -3 -1 -4 -3 -3 -3 -3 -3 -3 -3 1 4 2 3 0 -1 -3
L Leu -1 -2 -1 -3 -1 -4 -3 -4 -3 -2 -3 -2 -2 2 2 4 1 0 -1 -2
V Val -1 -2 0 -2 0 -3 -3 -3 -2 -2 -3 -3 -2 1 3 1 4 -1 -1 -3
F Phe -2 -2 -2 -4 -2 -3 -3 -3 -3 -3 -1 -3 -3 0 0 0 -1 6 3 1 
Y Tyr -2 -2 -2 -3 -2 -3 -2 -3 -2 -1 2 -2 -2 -1 -1 -1 -1 3 7 2 
R
E
P
L
A
C
E
M
E
N
T 
 
A
M
I
N
O 
 
A
C
I
D 
 
W Trp 
-2 -3 -2 -4 -3 -2 -4 -4 -3 -2 -2 -3 -3 -1 -3 -2 -3 1 2 11
 
參考文獻 
[1] S.F. Altschul, R.J. Carroll, and D.J. Lipman, “Weights for data related by a tree,” Journal 
of Molecular Biology, Vol. 207, 1989, pp 647-653. 
[2] S.F. Altschul, W. Gish, W. Miller, E. Myers, and D. Lipman, “A basic local alignment 
search tool,” Journal of Molecular Biology, Vol. 215, 1990, pp 403-410. 
[3] S.F. Altschul, T.L. Madden, A.A. Schaffer, J. Zhang, Z. Zhang, Z.W. Miller, and D. 
Lipman, “Gapped BLAST and PSI-BLAST: a new generation of protein database search 
programs,” Nucleic Acids Research, Vol. 25, 1997, pp 3389-3402.  
[4] R. Blankenbecler, M. Ohlsson, C. Peterson, and M. Ringner, “Matching protein 
structures with fuzzy alignments,” PNAS, Vol. 100, 2003, pp 11936-11940. 
[5] C. Carleos, F. Rodriguez, H. Lamelas, and J.A. Baro, “Simulating complex traits 
influenced by genes with fuzzy-valued effects in pedigreed populations,” Bioinformatics, Vol. 
19, 2003 pp 144-148. 
[6] P.-T. Chang, “Fuzzy strategic replacement analysis,” European Journal of Operational 
Research, Vol. 160, 2005 pp 532-559. 
[7] K.M. Chao, “On computing all suboptimal alignments,” Information Sciences, Vol. 105, 
1998, pp 189-207. 
[8] K.M. Chao, and W. Miller, “Linear-space algorithms that build local alignments from 
fragments,” Algorithmica, Vol. 13, 1995, pp 106-134. 
[9] K.M. Chao, R.C. Hardison, and W. Miller, “Recent developments in linear-space 
alignment methods: A survey,” Journal of Computational Biology, Vol. 1, 1994, pp 271-291. 
[10] M.O. Dayhoff, R.M. Schwartz, and B.C. Orcutt, “A model of evolutionary change in 
proteins,” Atlas of Protein Sequence and Structure, National Biomedical Research 
Foundation, Vol. 5, 1978, pp 345-352.  
[11] D. Dubois, and H. Prade, Fuzzy Sets and Systems, Theory and Applications, Academic 
Press, 1980. 
[12] A. Heger, and L. Holm, “Sensitive pattern discovery with ‘fuzzy’ alignments of distantly 
related proteins,” Bioinformatics, Vol. 19, 2003, pp i130-i137. 
[13] S. Henikoff, and J. G. Henikoff, “Amino acid substitution matrices from protein blocks,” 
