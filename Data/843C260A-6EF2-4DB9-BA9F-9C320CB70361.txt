 1
行政院國家科學委員會補助專題研究計畫 ▓成果報告   □期中進度報告 
 
 
基於多重領域矩陣之目標驅動需求追溯管理方法 
 
 
計畫類別：▓ 個別型計畫  □ 整合型計畫 
計畫編號：NSC100-2218-E-017-003- 
執行期間：100 年 10 月 1 日至 101 年 8 月 31 日 
 
計畫主持人：李文廷 
計畫參與人員：王柏淳、莊博賢、施冠甫、陳諺鋒、陳文澤 
 
成果報告類型(依經費核定清單規定繳交)：□精簡報告  ▓完整報告 
 
本成果報告包括以下應繳交之附件： 
□赴國外出差或研習心得報告一份 
□赴大陸地區出差或研習心得報告一份 
▓出席國際學術會議心得報告及發表之論文各一份 
□國際合作研究計畫國外研究報告書一份 
 
 
處理方式：除產學合作研究計畫、提升產業技術及人才培育研究計畫、列管計畫
及下列情形者外，得立即公開查詢 
          □涉及專利或其他智慧財產權，□一年□二年後可公開查詢 
          
執行單位：國立高雄師範大學軟體工程系 
 
中   華   民   國  101 年 11 月 30 日
 1
（一） 中文摘要	
本計畫以先前發展之目標驅動需求追溯方法為基礎，研究目標、使用案例、元件與類別之
關連性並使用多重領域矩陣建立彼此間之追溯關係。計畫分為幾個步驟：(1)研究軟體工程領域
之標準案例與軟體實際開發案例，分析產生目標驅動使用案例;(2)評估並建立目標與使用案例
之追溯關係;(3)根據目標與使用案例之關係產生目標與使用案例區塊以發展系統初期架構;(4)
根據使用案例區塊定義軟體元件並設計類別。 
計畫根據研究出之方法設計與實作軟體系統，自動建立目標、使用案例、元件與類別之追
溯關係於多重領域矩陣中，提供系統化的方式管理軟體需求追溯關係。 
 
關鍵詞：需求追朔、多重領域矩陣、目標、使用案例、元件、類別 
 3
（三） 報告內容	
1. 前言 
軟體的易變性，導致軟體專案在執行中常會發生需求的變更，隨著軟體產業的發展與日益
進步，軟體專案規模亦隨之日益龐大，需求變更影響分析與管理也愈來愈複雜。當軟體變更時，
相關文件與工作產品也會受到影響，如果在不明確的變更範圍下進行變更，常會造成軟體工作
產品之間的不一致，或因為不當管理而花費高出預期甚多的經費資源，甚至導致整個系統的錯
誤或專案的失敗。近年來在軟體需求追溯管理的研究[17][27][28][54]顯示透過管理需求追溯關
係(requirements traceability relations)以執行變更影響分析可有效避免軟體需求變更所造成的問
題，也可確保所有的需求皆被完整的對應與實作。因此相關的研究與方法越來越受到重視。需
求追溯關係可以找出互相影響的文件與工作產品，然而現今的方法缺乏系統化的管理方式，容
易造成文件與相關工作產品之間不精確的追溯關係。或者文件與工作產品變更後，因沒有同步
更新而造成過期的追溯關係。因此，若能將開發流程結合需求追溯方法，將可以更有效管理需
求追溯關係與需求變更。 
 
2. 研究目的 
本計畫主要目的為提出系統化的目標驅動需求追溯管理方法，辨識與管理軟體工作產品間
之追溯關係，了解需求有無進行分析與設計以實作出滿足需求之軟體系統，或當變更發生時即
可根據追溯關係分析出變更造成的影響。我們使用多重領域矩陣(Multiple Domain Matrix)管理
系統目標、使用案例、軟體元件與類別間之追溯關係。也將根據追溯關係發展叢集分析方法，
透過矩陣分析方法產生彼此合作不互相衝突之目標與使用案例區塊 (goals and use case 
blocks)。根據目標與使用案例區塊，發展軟體初步架構。進一步根據使用案例情節(scenario)發
展細部類別幫助軟體專案進行系統架構分析與細部設計。最後，使用多重領域矩陣研究追溯關
係自動推導與建立方法，自動建立需求與設計階段產生之目標、使用案例、子系統、軟體元件
與類別間之追溯關係。我們根據多重領域矩陣的特性，發展矩陣關係推導公式自動推導與建立
需求追溯關係。本計畫實作需求追溯管理系統，幫助使用者系統化的管理需求追溯關係與軟體
變更。 
 
 5
承諾以建構個人為基礎之需求追溯(Personal-based Requirements Traceability)。學者 D´omges[22]則提
出可調整的需求追溯架構以幫助定義和使用專案特定的追蹤資料和策略。他們認為組織需加強專案
需求追溯的學習以幫助相關成員掌握和使用追溯關係並持續進行流程改善。 
學者 Ramesh[41]呈現影響高階(high-end)和低階(low-end)追溯關係使用者實施追溯關係活動的
因子(factors)。使用者可在執行追溯管理活動時根據因子的特性採取具有幫助的活動以成功的落實
追溯管理。之後，Ramesh 和 Jarke[43]藉由先前需求追溯活動的實務研究，發表包含四個子模型的
需求追溯參考模型。四個子模型分別為需求管理(requirements management)、基本原理(rationale)、
設計配置(design allocation)與一致性驗證(compliance verification)。需求追溯參考模型可根據組織或
專案之需求調整以管理需求追溯。模型中採用四種追溯關係連結型態，分別為滿足(satisfies)、相依
(depends-on)、衍化(evolves-to)和原理(rationale)等追溯關係。 
Spanoudakis 等學者[47]發展一套以規則為基礎的追溯關係自動建立方法，產生四種追溯關係於
需求描述文件、使用案例文件以及分析物件模型之間，追溯關係的規則分為兩類，分別是需求到物
件模型(Requirements-to-Object-Model)與需求內部關係(Inter-Requirement Traceability)。他們採用剖析
文法的方式，將文件轉換成包含文法標籤的 XML 格式，再從中根據規則找出追溯關係。 
學者 Egyed[23][24]提出劇本驅動(Scenario-Driven)方法產生並驗證從模型元素到程式碼之間的
追溯關係。測試劇本和使用劇本可經由測試產生追溯關係並和其他假設的追溯關係進行分析，如此
可產生模型元素和程式碼之間新的追溯關係以解決分析時產生的不一致性和不完整性。 
Jane Cleland-Huang 等人[13]發展以事件為基礎之追溯方法(event-based traceability, EBT)，在軟
體生命週期中使用事件的通知(notification)機制追蹤和維護軟體產品和其追溯連結。EBT 的架構包
含三個主要部分：需求管理員(Requirements Managers)負責處理需求發生時的需求演進，當變更發
生時藉由發佈變更訊息來驅動事件。事件伺服器(Event Server)管理訂閱機制，並接收需求管理員的
事件訊息，再客制化訊息傳送至訂閱管理員(Subscriber Manager)。訂閱管理員接收和解譯事件訊息，
且更新追溯連結的狀態。Jane Cleland-Huang 和其他學者[14][15]列舉了目前的兩種自動化追溯關係
建立的方法，分別是機率模型(Probabilistic IR Model)與向量空間模型(Vector Space IR Model)。他們
提出九個建立自動化追溯關係的常規(Practice)。部分常規可提高計算文件之間相似度進而提升建立
追溯關係的準確率。他們亦提出了以目標為中心的方法用以管理非功能需求，方法分為四個步驟：
(1)使用軟性目標相依圖(softgoal interdependency graph, SIG)塑模非功能需求。(2)當變更發生時，使
用機率網路模型(probabilistic network model)自動產生追溯連結，使用者再過濾不相關的追溯連結。
(3)分析和評估受影響的 SIG 元素。(4)決定是否實作變更，若要變更則在變更之前先定義風險減緩
策略。 
Giuliano Antoniol 等學者[3]提出了自動化恢復文件與程式碼之間的追溯關係，方法採用資訊檢
索模型(IR Model)，分為機率模型(Probabilistic IR Model)與向量空間模型(Vector Space IR Model)。
主要方法為分析文件與程式碼中的文字，並且從中計算相似度回傳給使用者決定追溯關係。以相似
度作為建立追溯關係。然而，其關係之準確率問題在此類方法上仍是一大挑戰。 
Andrian Marcus等學者[37]則透過Latent Semantic Indexing分析改善Giuliano Antoniol 等學者提
出的資訊檢索模型與演算法，可降低使用不同文字描述相同或類似概念造成的準確率下降，有效的
提高了追溯關係建立的準確率。 
 7
矩陣的分析。圖 2 為包含 3 個領域(Domain)之多重領域矩陣(MDM)，其元素(Elements)分別由圓形、
三角形與正方形所代表。同領域元素間的關係(dependency)記錄在對角線的三個設計結構矩陣(DSM 
area)中，不同領域元素間的關係則紀錄在上三角與下三角的 6 個領域對應矩陣(DMM area)中。 
圖 2 多重領域矩陣(節錄自[35]) 
對於矩陣表示法，主要有叢集(clustering)與分割(partitioning)分析方法。分割的目的是要減少設
計結構矩陣中元素之回饋(feedback)，例如以活動為基礎的設計結構矩陣，若安排好的行程活動於執
行過程發現前置條件尚未達成，這時候就需要往回執行前面的工作。這樣的結果會讓行程進行受
阻，因此要將矩陣中的非零數值往下三角型集中，減少設計結構矩陣中元素回饋。同時也可經由分
析設計結構矩陣中元素之間的相互關係而產生多個集中於對角線上的區塊，區塊內的元素彼此之相
互關係可組成迴圈。從圖論的角度來看，區塊內部任兩個元素皆可互相到達對方。因此，若區塊內
的元素進行變更時，需先分析區塊內的其他元素，以了解主要影響的工作產品。 
叢集的目的則是為了找出矩陣中具有關連性的元素子集。進行叢集分析時，矩陣中的元素通常
為系統元件或組織成員。換句話說，叢集可以找出彼此關連性很強的元素，並將他們歸於同一個群
組。由於群組內是彼此關連性很強的元素，群組內的溝通與連結較為容易。而叢集過後，群組和群
組間的關連性較少，亦可減少溝通的花費。本計畫將分析需求追溯關係發展叢集方法[50]，產生目
標與使用案例叢集和類別叢集，協助軟體系統的分析與設計。並使用多重領域矩陣建立與自動推導
目標、使用案例、子系統、元件與類別間之追溯關係。 
 9
5. 結果與討論 
 本計畫的執行成果根據研究方法分為以下四個部分(1)分析目標與使用案例 (2)評估目標互動 (3)
使用案例區塊建立系統初期架構 (4)定義元件與設計類別。 
(1) 分析目標與使用案例(Analyze Goals and Use Cases)： 
本計畫使用目標驅動軟體工程方法[30][32][33]的研究成果和軟體工程研究領域廣為採用的標準案
例 [25][45]，分析需求轉變成系統目標，並根據系統目標產生目標驅動使用案例(Goal-Driven Use 
Cases)。以目標為基礎的方法論聚焦於系統為何被建構，以及提供方法來印證軟體需求。這個方法提供
需求分析師去建構與擷取出使用者需求，並且分析與計算需求之間的關係，擷取需求的主要步驟如以
下三個步驟： 
1. 透過調查所有可能的類型與系統直接互動的使用者，辨識出系統中的角色 
2. 辨識出目標: 區別軟性(Soft)與強制(Rigid)的目標來處理不精確的非功能性目標 
3. 建立使用案例模型: 將目標資訊嵌入於使用案例中 
從目標與使用案例之間的關係分析出需求之間的互動關係，評估目標有以下三個步驟： 
1. 從執行使用案例後對於目標的影響分析使用案例與目標之間的關係 
2. 分析目標之間的關係於使用案例階層 
3. 分析目標之間的關係於系統階層: 將目標資訊嵌入於使用案例中 
本計畫將採用會議排程系統為例子，說明研究所採用的方法，其所定義的目標驅動使用案例如圖
4。其中目標分為 R:Rigid 表示此目標必須被全部達成，S:Soft 表示此目標可被部分滿足即可。
A:Actor-specific 表示此目標為使用者相關之目標，Y:System-specific 表示此目標為系統需提供服務之目
標。F:Functional 表示此目標為功能性目標，需經由執行一系列運算達成，N:Nonfunctional 表示此目標
為非功能性目標，通常代表系統的限制(Constraints)。如目標 GMP 為<R,A,F>表示此目標為必須被滿足
達成、為使用者相關且為功能性目標。目標 GMP 對應之使用案例為 UPAM。 
 11
步驟(4)－分析目標(G2G)之間的關係：分析目標之間的關係，如圖 5 所示，當目標 G1 與使用案例
U1 有衍生關係，而使用案例 U1 與目標 G2 有滿足關係，那個就可以衍生出目標 G1 與目標 G2 之間的
相依關係。同樣的道理，若目標 G1 與使用案例 U1 有衍生關係，而使用案例 U1 與使用案例 U2 有相
依關係，使用案例 U2 與目標 G2 有滿足關係，就可以利用矩陣的運算推導出目標 G1 與目標 G2 之間
的相依關係。 
 
圖 6. 分析目標之間的關係 
最後產生如圖 5－會議排程系統的範例，結果將放置於設計結構矩陣中進一步分析。 
 
 
圖 6. 會議排程系統分析範例 
 13
 
(4) 定義元件與設計類別 (Identify Components and Design Classes)： 
傳統的方法採用人工的方式判斷進行群組群組類別以產生軟體架構的功能元件。Morgan 
Björkander 和 Cris Kobryn[6]的研究使用 UML2.0 的複合結構圖(Composite Structure Diagram)與類別圖
(Class Diagram)設計軟體系統架構。所提出的方法階層式的分解系統成越來越小的區塊(parts)，再組合
這些區塊以完成系統設計。他們的方法使用複合結構群組類別，是屬於較低階層的軟體元件設計。 
如圖 9，我們使用 DSM 將會議排程系統分析產生的使用案例區塊建立成五個套件，分別是
authorization、constraint、register、plan 以及 quality，每一個套件包含對應的目標及使用案例，並且針
對每一個套件讓系統設計師進一步設計系統設計模型。 
 
圖 9. 會議排程系統的 5 個套件與設計模型 
為了群組彼此互相影響的類別產生類別叢集以建立高聚合力和低耦合力的軟體元件，我們分析
類別間彼此的相依追溯關係 (如圖 10)。而為了自動化建立類別之間的關係，我們分析 UML 設計工
具(CASE tool)產生之標準 XMI (XML Metadata Exchange)標籤發展 XMI 剖析模組，用以讀入 UML
設計工具產生之 XMI 檔案以自動建立類別間之追溯關係。 
 15
係的對照表，我們可以剖析設計模型以分析類別間的相依關係。圖 13 是會議排程系統透過分析系統設
計模型後擷取出來的類別之間的追溯關係。 
 
圖 12. 會議排程系統使用案例與類別的追溯關係 
 
圖 13. 會議排程系統類別之間的追溯關係 
 17
[19] B. Dano, H. Briand, and F. Barbier. Progressing towards object-oriented requirements specifications 
byusing the use case concept. In Proceedings of the international conference on Requirements 
Engineering, pages 450–456, 1996. 
[20] A. Dardenne, A. van Lamsweerde, and S. Fickas. Goal-directed requirements acquisition. Science of 
Computer Programming, 20(1-2):3–50, April 1993. 
[21] J. Dick. Design traceability. IEEE Software, 22(6):14–16, November/December 2005. 
[22] R. D´omges and K. Pohl. Adapting traceability environments to projectspecific needs. Communications 
of the ACM, 41(12):54 – 62, December 1998. 
[23] A. Egyed. A scenario-driven approach to trace dependency analysis. IEEE Transactions on Software 
Engineering, 29(2):116–132, February 2003. 
[24] A. Egyed. Resolving uncertainties during trace analysis. In Proceedings of the 12th ACM SIGSOFT 
Symposium on Foundations of Software Engineering (FSE), pages 3–12, 2004. 
[25] M. S. Feather, S. Fickas, A. Finkelstein, and A. van Lamsweerde. Requirements and specifications 
exemplars. Automated Software Engineering, 4(4):419–438, October 1997. 
[26] O. Gotel and A. Finkelstein. Extended requirements traceability: results of an industrial case study. In 
Proceedings of the 3rd IEEE International Symposium on Requirements Engineering, pages 169–178, 
Jan 1993. 
[27] O. C. Z. Gotel and A. C. W. Finkelstein. An analysis of the requirements traceability problem. In 
Proceedings of the International Conference on Requirements Engineering, pages 94–101, Appril 1994. 
[28] M. Jarke. Requirements tracing. Communications of the ACM, 41(12):32–36, December 1998. 
[29] H. Kaindl. The missing link in requirements engineering. ACM SIGSOFT Software Engineering Notes, 
18(2):30–39, April 1993. 
[30] J. Lee and K.-H. Hsu. Modeling software architectures with goals in virtual university environment. 
Information and Software Technology, 44(6):361–380, April 2002. 
[31] J. Lee and J.-Y. Kuo. New approach to requirements trade-off analysis for complex systems. IEEE 
Transactions on Knowledge and Data Engineering, 10(4):551–562, Jul/Aug 1998. 
[32] J. Lee and N.-L. Xue. Analyzing user requirements by use cases: A goal-driven approach. IEEE Software, 
16(4):92–101, July/August 1999. 
[33] J. Lee, N.-L. Xue, and J.-Y. Kuo. Structuring requirements specifications with goals. Information and 
Software Technology, 43(2):121–135, February 2001. 
[34] W.-T. Lee, W.-Y. Deng, J. Lee, and S.-J. Lee. Change impact analysis with a goal-driven 
traceability-based approach. International Journal of Intelligent Systems, 25(8):878–908, August 2010. 
[35] U. Lindemann, M. Maurer, and T. Braun. Structural Complexity Management: An Approach for the Field 
of Product Design. Springer, November, 2008. 
[36] U. Lindemann and M. S. Maurer. Facing multi-domainccomplexity in product development. In The 
future of product development, Proceedings of the17th CIRP Design Conference, 2007. 
[37] A. Marcus and J. I. Maletic. Recovering documentation-to-source-code traceability links using latent 
semantic indexing. In Proceedings of the 25th International Conference on Software Engineering, 
ICSE ’03, pages 125–135, Washington, DC, USA, 2003. IEEE Computer Society. 
[38] M. S. Maurer. Structural Awareness in Complex Product Design. PhD thesis, Technical University of 
Munich, Munich, Germany, 2007. 
 19
（五） 計畫成果自評	
本計劃中提出基於多重領域矩陣之目標驅動需求追溯方法管理軟體開發之需求追溯關係
並分析追溯關係產生目標與使用案例區塊，進一步發展系統初期架構設計，再根據系統初期架
構與使用案例劇本定義元件和設計類別。之後，根據建立好的需求與元件的追溯關係反覆的分
析與設計軟體系統並建立追溯關係。本計畫完成的項目包含：(1) 發展目標與使用案例追溯關
係建立方法；(2) 運用設計結構矩陣之目標與使用案例區塊分析方法；(3)發展基於使用案例區
塊之系統架構設計方法；(4) 建立需求追溯系統，可建立並儲存目標、使用案例與元件與類別
等設計模型間之追溯關係並存放於多重領域矩陣中。透過本研究計畫發展出來之需求追溯管理
方法，可應用在軟體系統開發，幫助設計出無衝突且高度聚合的模組，以及使用多重領域矩陣
系統化管理軟體需求與工作產品間的追溯關係。 
本計畫共完成兩篇國外研討會論文與三篇國內研討會論文，符合計畫規劃。其中＂軟體架
構功能大小度量方法–應用於UML之複合結構圖＂論文於全國電子計算機會議中獲得最佳論
文獎。發表論文詳列如下: 
1. Wen-Tin Lee, Kuo-Hsun Hsu and Jonathan Lee. Designing Software Architecture with Use Case 
Blocks using the Design Structure Matrix. International Symposium on Computer, Consumer and 
Control 2012. June 2012. (EI) 
2. Wen-Tin Lee, Kuo-Hsun Hsu, Jonathan Lee, Jong Yih Kuo, August 2012, Applying Software Effort 
Estimation Model based on Work Breakdown Structure, The Sixth International Conference on 
Genetic and Evolutionary Computing, Kitakyushu, Japan (2012.8.25-28) (EI) 
3. 李文廷、李允中, 軟體架構功能大小度量方法–應用於UML之複合結構圖. Workshop of Software 
Engineering and Programming Language, In Proceedings of 2011 National Computer Symposium, 
Taiwan. (Best Paper Award) 
4. 李文廷、甘家澤、尚宗承、邱培嘉, July 2012,  設計與實作以 Android 為基礎之語言學習卡工
具, 2012 Taiwan Conference on Software Engineering. Taipei, Taiwan. (2012.7.6-7) 
5. 李文廷、許佑齊、李允中, July 2012,  使用工作分解結構與專案配置因子估算軟體人力, 2012 
Taiwan Conference on Software Engineering. Taipei, Taiwan. (2012.7.6-7) 
 
 2
Service”議程。我在這三天亦參與了幾個較有興趣的主題議程，如「Evolutionary and 
Intelligent Computing in Social Network」以及「 "Intelligent Computing and Its Applications in 
Multimedia」等，至議程會場聆聽參與這些研究主題的論文報告並參與討論，過程中吸收
了不少最新的研究內容。ICGEC2012 會議於 28 號下午正式圓滿結束。 
 
二、與會心得 
參與此會議中除了吸收了不少最新的研究方向與議題外，本人在此會議中所發表的論
文”Applying Software Effort Estimation Model based on Work Breakdown Structure”，此研究提
出結合專案配置因子與工作分解結構人力因子之人力預估模型。並根據人力預估模型的各
項因子，發展從工作分解結構中分析專案配置因子以估算人力的流程與方法。軟體專案可
根據所提之人力估算流程與模型分析專案的工作分解結構以估算出專案需要的人力。實驗
說明工作分解結構中包含了影響人力的專案配置因子，且經資料驗證結果顯示工作分解結
構之人力因子能提昇人力估算的準確度。本論文提出之人力預估模型在迴歸模式契合度上
有較好的預測釋力，並且對於未知、新的工作分解結構工作項目能夠有較好品質的人力估
算結果。在研討會時亦與其他學者就此論文進行討論，得到了不少寶貴的意見與改進方向。 
 
三、考察參觀活動(無是項活動者略) 
本人在此次研討會過程中，除了在會議所在地參訪外，同時也撥出時間去九州其他的
地點旅遊參訪，包含小倉城、門司港和由布院等地區。對於日本的風土民情與國際化景象
印象深刻。 
四、建議 
無特別建議。 
五、攜回資料名稱及內容 
Proceedings of The Sixth International Conference on Genetic and Evolutionary Computing 
六、其他 
無。 
100年度專題研究計畫研究成果彙整表 
計畫主持人：李文廷 計畫編號：100-2218-E-017-003- 
計畫名稱：基於多重領域矩陣之目標驅動需求追溯管理方法 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 5 1 100% 
篇 
本計畫共完成兩
篇國外研討會論
文與三篇國內研
討會論文，符合計
畫規劃。其中＇軟
體架構功能大小
度量方法–應用
於UML之複合結構
圖＇論文於全國
電子計算機會議
中獲得最佳論文
獎。 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 1 2 50% 
本計畫在碩士生
計畫參與人力上
和原本規劃有進
行變更，由於目前
本系尚未有研究
所，因此將一名碩
士生名額的工作
分給兩名大學生
完成。 
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
國外 
專利 申請中件數 0 0 100% 件  
國科會補助專題研究計畫成果報告自評表 
請就研究內容與原計畫相符程度、達成預期目標情況、研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）、是否適
合在學術期刊發表或申請專利、主要發現或其他有關價值等，作一綜合評估。
1. 請就研究內容與原計畫相符程度、達成預期目標情況作一綜合評估 
■達成目標 
□未達成目標（請說明，以 100字為限） 
□實驗失敗 
□因故實驗中斷 
□其他原因 
說明： 
2. 研究成果在學術期刊發表或申請專利等情形： 
論文：■已發表 □未發表之文稿 □撰寫中 □無 
專利：□已獲得 □申請中 ■無 
技轉：□已技轉 □洽談中 ■無 
其他：（以 100字為限） 
3. 請依學術成就、技術創新、社會影響等方面，評估研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）（以
500字為限） 
本計劃中提出基於多重領域矩陣之目標驅動需求追溯方法管理軟體開發之需求追溯關係
並分析追溯關係產生目標與使用案例區塊，進一步發展系統初期架構設計，再根據系統初
期架構與使用案例劇本定義元件和設計類別。之後，根據建立好的需求與元件的追溯關係
反覆的分析與設計軟體系統並建立追溯關係。本計畫完成的項目包含：(1) 發展目標與使
用案例追溯關係建立方法；(2) 運用設計結構矩陣之目標與使用案例區塊分析方法；(3)
發展基於使用案例區塊之系統架構設計方法；(4) 建立需求追溯系統，可建立並儲存目
標、使用案例與設計模型間之追溯關係。透過本研究計畫發展出來之需求追溯管理方法，
可應用在軟體系統開發，幫助設計出無衝突且高度聚合的模組，以及使用多重領域矩陣系
統化管理軟體需求與工作產品間的追溯關係。 
本計畫共完成兩篇國外研討會論文與三篇國內研討會論文，符合計畫當初規劃。其中＇軟
體架構功能大小度量方法–應用於UML之複合結構圖＇論文於全國電子計算機會議中獲得
最佳論文獎。發表論文詳列如下: 
1.Wen-Tin Lee, Kuo-Hsun Hsu and Jonathan Lee. Designing Software Architecture with 
Use Case Blocks using the Design Structure Matrix. International Symposium on 
Computer, Consumer and Control 2012. June 2012. (EI) 
2.Wen-Tin Lee, Kuo-Hsun Hsu, Jonathan Lee, Jong Yih Kuo, August 2012, Applying 
Software Effort Estimation Model based on Work Breakdown Structure, The Sixth 
International Conference on Genetic and Evolutionary Computing, Kitakyushu, Japan 
