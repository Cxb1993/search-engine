The study of rainbow domination and rainbow 
connection as a graph-theoretic concept has recently 
attracted a great deal of attention. Several bounds 
on different types of rainbow domination numbers were 
obtained of a graph. Lately, Breš et al. boost up the 
research related to rainbow domination numbers of 
graphs. The investigation into the rainbow domination 
problem and rainbow connection problem was carried 
out by researchers while the results for solving the 
rainbow domination numbers and rainbow connection 
numbers on bipartite regular networks, to the best of 
our known, are poor. The most studied types of 
domination in graphs can be defined in terms of an 
appropriately chosen graph. This gives rise to an 
infinite class of domination parameters, each of 
which is defined for every graph. The study of 
rainbow domination as a graph-theoretic concept has 
recently attracted a great deal of attention.  
During the first year of this project, we surveyed 
the characteristics of several interconnection 
networks for the purpose of exploring the 
mathematical properties of the rainbow domination and 
rainbow connection in such graphs. Based on the 
results obtained during the first year of the study, 
our research further established relevant aspects of 
the rainbow numbers of pyramid-like networks, (not 
currently available in the literature), to provide 
essential properties which is needed for the 
development of a concise investigation in the second 
year of the project. Finally, in the second year of 
the work, we developed algorithms for solving rainbow 
numbers on pyramid networks, triangular pyramid 
networks and RTCC pyramids. 
 
英文關鍵詞： Rainbow connection number； Rainbow domination 
problem； Pyramid networks； Global defensive 
alliance. 
 
I 
 
 
 Brešar Henning Rall 2005
G
 k 
 k G
 
Brešar 
 
(rainbow numbers)
(tree)
(minimum global defensive alliance)  
 
 
 
III 
the work, we developed algorithms for solving rainbow numbers on pyramid 
networks, triangular pyramid networks and RTCC pyramids. 
Keywords: Rainbow connection number; Rainbow domination problem; 
Pyramid networks; Global defensive alliance. 
 
  
 
2 
Rainbow domination was first introduced by Brešar, Henning and Rall in 2005 
[BHR05]. Assume we have a set of k colors and to each vertex of a graph G we assign 
an arbitrary subset of these colors. If we require that each vertex to which an empty 
set is assigned has in its neighborhood all k colors, then this is called a k-rainbow 
dominating function of a graph G. The corresponding invariant γ rk(G), which is the 
minimum sum of numbers of assigned colors over all vertices of G, is called the 
k-rainbow domination number of G. A formal definition of rainbow domination 
problem is as follows [CWZ10]: 
Let [k] denote the set {1, 2, …, k} and 2[k] the set of all subsets of [k], where k is 
a positive integer. A k-rainbow dominating function of G is a function f : V(G) 2[k] 
such that for every vertex v, either f (v)=  or f(NG(v))= [k], where 
 and  for any subset S of V(G). 
The weight of f is defined as . The k-rainbow domination 
number  of G is the minimum weight of a k-rainbow dominating function. A 
k-rainbow dominating function f of G is optimal if . The k-rainbow 
domination problem is to determine the k-rainbow domination number of a given 
graph.  
Rainbow domination problem is a variant of ordinary domination problem. 
Domination and its variations in graphs have been extensively studied [HHS98, 
HHS9A]. A set S ⊆ V(G) of a graph G is a dominating set if every vertex not in S is 
adjacent to a vertex in S. The domination number of G, denoted by )(G , is the 
minimum cardinality of a dominating set. By definition, rainbow domination 
intuitively combines coloring and domination. A dominating set S can be regarded as 
a set of vertices colored red, while the vertices been assigned an empty set is 
dominated by S. Hence, domination problem is related to rainbow domination 
problem and a dominating set is also a 1-rainbow dominating set. As an intuition, one 
might think of a minimum rainbow dominating set as a set of most important vertices 
that are able to observe or control all other vertices. A straightforward scenario for 
4 
among them. The researches on rainbow domination have provided theoretical and 
algorithmic insights leading to generalized theorems and algorithms applying to 
similarly formulated problems. Brešar et al. showed that the domination number and 
many domination related parameters can be interpreted as 1-rainbow dominating set 
with the red vertices forming the dominating set [BS07]. They interpret the 
domination number in a new perspective and suggest many other parameters of a 
graph which are related in some way to the domination number. 2-rainbow 
domination problem is also related to paired-domination problem introduced by 
Haynes and Slater [HS98]. Brešar et al. derived the strong connection of a 2-rainbow 
domination of a graph and its paired-domination of Cartesian products with complete 
graphs. The framework places the domination number in a new perspective and 
suggests many other parameters of a graph which are related in some way to the 
domination number.  
The study of rainbow numbers as a graph-theoretic concept has recently attracted 
a great deal of attention. Several bounds on different types of rainbow domination 
numbers were obtained of a graph. Lately, Brešar et al. boost up the research related 
to rainbow numbers of graphs. The investigation into the rainbow connection problem 
was carried out by researchers while the results for solving the rainbow numbers on 
bipartite regular networks, to the best of our known, are poor.  
During the first year of this project, we surveyed the characteristics of several 
interconnection networks for the purpose of exploring the mathematical properties of 
the rainbow domination and rainbow connection in such graphs. Based on the results 
obtained during the first year of the study, our research further established relevant 
aspects of the rainbow numbers of pyramid-like networks, (not currently available in 
the literature), to provide essential properties which is needed for the development of 
a concise investigation in the second year of the project. Finally, in the second year of 
the work, we developed algorithms for solving rainbow numbers on pyramid 
networks, triangular pyramid networks and RTCC pyramids. 
6 
    
8 
3.2. Rainbow Connection Problem on Triangular Pyramids  
and the edges connecting them of different layers are said to be layer edges. 
 
The details of proof for the following results are shown in the published paper which 
is listed in the next section. 
 
10 
 
an RPn. The diameter of RPn is 2n. 
 
12 
 
 
 
 
14 
 
In this project, we first study the essential properties of some bipartite 
regular networks and learned several skills for solving the rainbow connection 
numbers on graphs. The results have been published in Discrete Applied 
Mathematics, an international SCI journal, and related conferences. The related 
published information is as follows: 
 Global defensive alliances of trees and Cartesian product of paths and cycles, 
Discrete Applied Mathematics, 160, P.479-P.487, 2012. (SCI) 
 An upper bound of the rainbow connection number in RTCC pyramids, 
International Computer Symposium (ICS), 2012, Hualien, Taiwan. 
 Rainbow connection number in pyramid networks 11 
2012 05  
 Rainbow connection number in triangular pyramids
 2012 04  
16 
[CWZ10] G. J. Chang, J. Wu, X. Zhu, Rainbow domination on trees, Discrete Applied 
Mathematics 158 (2010) 8–12. 
[CS00]  W. E. Clark, S. Suen, An inequality related to Vizing’s conjecture, Electron. 
J. Combin. 7 (2000) 1-3 (electronic). 
[Er07] A. Ericksen, A matter of security, Graduating Engineer & Computer 
Careers (2007), 24–28. 
[FM97]  O. Favaron, C. M. Mynhardt, On equality in an upper bound for 
domination parameters of graphs, J. Graph Theory 24 (1997) 221–231. 
[GJ79]  M. R. Garey, D. S. Johnson, Computers and Intractability: A Guide to the 
Theory of NP-completeness, Freeman, San Francisco, 1979. 
[GNR05] J. Guo, R. Niedermeier, D. Raible, Improved algorithms and complexity 
results for power domination in graphs, In Proceedings 15th FCT, 
Springer-Verlag LNCS 3623, pp. 172-184, 2005.  
[HD11] H. J. Hsieh, D. R. Duh, ω -wide diameters of enhanced pyramid networks, 
Theoretical Computer Science 412(29) (2011) 3658–3675. 
[RS10] S. Razavi, H. Sarbazi-Azad, The triangular pyramid: Routing and 
topological properties, Information Sciences, 180 (2010) 2328–2339. 
[HR98]  B. Hartnell, D. F. Rall, Domination in Cartesian products: Vizing's 
conjecture, in: Domination in Graphs; Advanced Topics, Marcel Dekker, 
New York, 1998, pp. 163–189. 
[HR04]  B. Hartnell, D. F. Rall, On dominating the Cartesian product of a graph and 
K2, Discuss. Math. Graph Theory 24 (2004) 389–402. 
[HHS98]  T. W. Haynes, S. T. Hedetniemi, P.J. Slater, Fundamentals of Domination 
in Graphs, Marcel Dekker, New York, 1998. 
[HHS9A] T.W. Haynes, S. T. Hedetniemi, P.J. Slater (Eds.), Domination in Graphs: 
Advanced Topics, Marcel Dekker, New York, 1998. 
[HS98]  T. W. Haynes, P. J. Slater, Paired-domination in graphs, Networks 32 
(1998) 199-206.  
[Hen00]  M. A. Henning, Graphs with large total domination number, J. Graph 
18 
tractable algorithms for finding feedback vertex sets. ACM Trans. 
Algorithms, 2(2006), 403–415. 
[Ste08] I. A. Stewart, On the fixed-parameter tractability of parameterized 
model-checking problems, Information Processing Letters 106 (2008), 
33–36. 
[St85]  Q. F. Stout, Pyramid computer solutions of the closest pair problem, 
Journal of Algorithms 6 (1985) 200–212.  
[Viz68]  V. G. Vizing, Some unsolved problems in graph theory, Uspekhi Mat. Nauk 
23 (1968) 117–134. 
 
20 
 Rainbow connection number in triangular pyramids
 2012 04  
 
 
1. 
 (Rainbow coloring problem on triangular pyramids)  
2. 
 (Rainbow coloring problem on pyramid 
networks)  
(tree)
(minimum global defensive alliance)  
Global defensive alliances of trees and Cartesian product of paths and cycles, Discrete 
Applied Mathematics, 160, P.479-P.487, 2012. (SCI) 
[Abstract] The global defensive alliance number of a graph G, denoted γa(G), is the 
minimum size around all the global defensive alliances of G. In this paper, we present 
an efficient algorithm to determine the global defensive alliance numbers of trees, and 
further give formulas to decide the global defensive alliance numbers of complete 
k-ary trees for k = 2, 3, 4. We also establish upper bounds and lower bounds for γa(Pm 
× Pn), γa(Cm × Pn) and γa(Cm × Cn), and show that the bounds are sharp for certain m, 
n.  
Discrete Applied Mathematics 160 (2012) 479–487
Contents lists available at SciVerse ScienceDirect
Discrete Applied Mathematics
journal homepage: www.elsevier.com/locate/dam
Global defensive alliances of trees and Cartesian product of paths
and cycles✩
Chan-Wei Chang a, Ma-Lian Chia a, Cheng-Ju Hsu b, David Kuo c,∗, Li-Ling Lai d,
Fu-Hsing Wang d
a Department of Mathematics, Aletheia University, Tamsui, Taiwan
b Department of Information Management, Ching Yun University, Zhongli, Taiwan
c Department of Applied Mathematics, National Dong Hwa University, Hualien 974, Taiwan
d Department of Information Management, Chinese Culture University, Taipei, Taiwan
a r t i c l e i n f o
Article history:
Received 21 November 2008
Received in revised form 30 October 2011
Accepted 6 November 2011
Available online 30 November 2011
Keywords:
Global defensive alliance
Tree
Cartesian product
Path
Cycle
a b s t r a c t
Given a graph G, a defensive alliance of G is a set of vertices S ⊆ V (G) satisfying the
condition that for each v ∈ S, at least half of the vertices in the closed neighborhood of
v are in S. A defensive alliance S is called global if every vertex in V (G) − S is adjacent
to at least one member of the defensive alliance S. The global defensive alliance number
of G, denoted γa(G), is the minimum size around all the global defensive alliances of G.
In this paper, we present an efficient algorithm to determine the global defensive alliance
numbers of trees, and further give formulas to decide the global defensive alliance numbers
of complete k-ary trees for k = 2, 3, 4.We also establish upper bounds and lower bounds
for γa(Pm × Pn), γa(Cm × Pn) and γa(Cm × Cn), and show that the bounds are sharp for
certainm, n.
© 2011 Elsevier B.V. All rights reserved.
1. Introduction
Given a graph G and a vertex v ∈ V (G), the open neighborhood of v in G is the set NG(v) = {u ∈ V (G) : uv ∈ E(G)}, and
the closed neighborhood of v in G is the set NG[v] = NG(v) ∪ {v}. A set S ⊆ V (G) is called a dominating set of G if for every
vertex v ∈ V (G), v ∈ NG[u] for some vertex u in S. A set S ⊆ V (G) is called a global defensive alliance of G if S is a dominating
set of G, and for all v ∈ S, |NG[v] ∩ S| ≥ |NG[v] \ S|. The global defensive alliance number of G, denoted by γa(G), is defined
by γa(G) = min{|S| : S is a global defensive alliance of G}. A set S ⊆ V (G) is called a minimum global defensive alliance of G
if S is a global defensive alliance of G and |S| = γa(G).
The original study and motivated definition of global defensive alliances in graphs were first introduced by Haynes
et al. [3]. In that paper, the authors introduced somemathematical properties of global defensive alliances and found bounds
of global defensive alliance numbers for general graphs, complete graphs, complete bipartite graphs, paths, cycles, 4-regular
graphs and trees [3]. Recently, upper bounds on the size of global defensive alliance numbers have been established on
regular networks, for example, star networks [4] and double-loop networks [7]. The research of alliance as graph-theoretic
concept has recently attracted a great deal of attention due to some interesting applications in a variety of areas. Most
of these applications are based on the original definition of alliance used in national defense [6]. Besides, in networking,
✩ This workwas supported by the National Science Council, Republic of China, under grants NSC95-2115-M-259-001, NSC97-2115-M-156-004-MY2 and
NSC99-2221-E-034-008-MY2.∗ Corresponding author.
E-mail address: davidk@server.am.ndhu.edu.tw (D. Kuo).
0166-218X/$ – see front matter© 2011 Elsevier B.V. All rights reserved.
doi:10.1016/j.dam.2011.11.004
C.-W. Chang et al. / Discrete Applied Mathematics 160 (2012) 479–487 481
Fig. 1. A minimum global defensive alliance of a tree.
to determine the answer. Only two classes aT (v) and bT (v) can produce the global defensive alliance number of T (v). For
example, Fig. 1 demonstrates a minimum global defensive alliance S on a tree T . In Fig. 1, vertex x is a leaf of T with initial
values (1∞110) of the five classes aT (x), bT (x), cT (x), dT (x) and eT (x). The values of vertices v, u and w are computed by the
composition of their subtrees. The global defensive alliance number of T is the minimum of aT (v) = 9 and bT (v) = 11, and S,
containing the darkened vertices, is a minimum global defensive alliance of T .
From these relations, we can use the following algorithm to find the global defensive alliance number of a tree T .
Algorithm GDA
Input: A tree T rooted at v, and T (v)− v =mi=1 T (ui), where ui is the only vertex of T (ui) that is adjacent to v in T (v).
Output: aT (v), bT (v), cT (v), dT (v), eT (v), and γa(T (v)) = min{aT (v), bT (v)}.
Method:
1. For each i, 1 ≤ i ≤ m, if ui is a leaf of T (v), set aT (ui) := 1, bT (ui) := ∞, cT (ui) := 1, dT (ui) := 1, and eT (ui) := 0. Else use
Algorithm GDA to find aT (ui), bT (ui), cT (ui), dT (ui) and eT (ui), respectively.
2. Set αi := eT (ui) − dT (ui), βi := bT (ui) − cT (ui).
3. Sort the values α1, α2, . . . , αm. Let σ be a permutation of {1, 2, . . . ,m}, such that ασ(i) ≥ ασ(i+1) for all i, 1 ≤ i ≤ m.
4. Find the maximum value of β1, β2, . . . , βm. Let σ ′ be a permutation of {1, 2, . . . ,m}, such that βσ ′(1) ≥ βσ ′(i) for all
i, 2 ≤ i ≤ m.
5. Set
aT (v) = 1+

m+1
2

−1
l=1
dT (uσ(l)) +
m
l=

m+1
2
min{dT (uσ(l)), eT (uσ(l))},
bT (v) = cT (uσ ′(1)) +
m
l=2
min{bT (uσ ′(l)), cT (uσ ′(l))},
cT (v) = 1+
⌈m2 ⌉
l=1
dT (uσ(l)) +
m
l=⌈m2 ⌉+1
min{dT (uσ(l)), eT (uσ(l))},
dT (v) = 1+
⌈m2 ⌉−1
l=1
dT (uσ(l)) +
m
l=⌈m2 ⌉
min{dT (uσ(l)), eT (uσ(l))},
eT (v) =
m
l=1
min{bT (uσ ′(l)), cT (uσ ′(l))}.
In Algorithm GDA, for each vertex u in T (v) with degT (u)(u) = k, Step 2 takes time O(k log k) to sort the values
α1, α2, . . . , αk, and Step 3 takes time O(k) to find the maximum value of β1, β2, . . . , βk. So, each vertex uses time O(k log k)
for computing its parameters in Algorithm GDA. As k is the number of children of a vertex in T , the sum of k is in fact the
number of edges of T . Therefore, the time complexity of this algorithm is O(|V (T )| log∆), where∆ is the maximum degree
of T .
C.-W. Chang et al. / Discrete Applied Mathematics 160 (2012) 479–487 483
if l ≡ 0 (mod 4), then
a2,l = 1+ 2
l+1 + 3
5
+min

2l+1 − 2
5
,
2l+1 + 3
5
,
2l+1 + 8
5

= 2
l+2 + 6
5
,
b2,l = 2a2,l−1 − 1 = 2×

2l+1 + 3
5

− 1 = 2
l+2 + 1
5
,
d2,l = 1+ 2min

2l+1 − 2
5
,
2l+1 + 3
5
,
2l+1 + 8
5

= 2
l+2 + 1
5
,
if l ≡ 1 (mod 4), then
a2,l = 1+ 2
l+1 + 1
5
+min

2l+1 + 1
5
,
2l+1 + 1
5
,
2l+1 − 4
5

= 2
l+2 + 2
5
,
b2,l = 2a2,l−1 − 1 = 2×

2l+1 + 6
5

− 1 = 2
l+2 + 7
5
,
d2,l = 1+ 2min

2l+1 + 1
5
,
2l+1 + 1
5
,
2l+1 − 4
5

= 2
l+2 − 3
5
,
if l ≡ 2 (mod 4), then
a2,l = 1+ 2
l+1 − 3
5
+min

2l+1 + 7
5
,
2l+1 − 3
5
,
2l+1 + 2
5

= 2
l+2 − 1
5
,
b2,l = 2a2,l−1 = 2×

2l+1 + 2
5

= 2
l+2 + 4
5
,
d2,l = 1+ 2min

2l+1 + 7
5
,
2l+1 − 3
5
,
2l+1 + 2
5

= 2
l+2 − 1
5
,
and if l ≡ 3 (mod 4), then
a2,l = 1+ 2
l+1 − 1
5
+min

2l+1 + 4
5
,
2l+1 − 1
5
,
2l+1 + 14
5

= 2
l+2 + 3
5
,
b2,l = 2a2,l−1 = 2×

2l+1 − 1
5

= 2
l+2 − 2
5
,
d2,l = 1+ 2min

2l+1 + 4
5
,
2l+1 − 1
5
,
2l+1 + 14
5

= 2
l+2 + 3
5
.
Therefore, the conclusion also holds for l = n + 1. By the Principle of Mathematical Induction, the conclusion holds for all
l ≥ 2. 
By using Lemma 2, and an argument similar as in the proof of Lemma 3, we have the following lemma.
Lemma 4. a3,2 = 7, b3,2 = 9, c3,2 = 7, and for all l ≥ 3,
a3,l =

19× 3l−1 + 7
8
, if l ≡ 0 (mod 4),
19× 3l−1 − 3
8
, if l ≡ 1 (mod 4),
19× 3l−1 − 1
8
, if l ≡ 2 (mod 4),
19× 3l−1 + 5
8
, if l ≡ 3 (mod 4),
b3,l =
a3,l − 1, if l ≡ 0, 3 (mod 4),
a3,l + 2, if l ≡ 1 (mod 4),
a3,l + 5, if l ≡ 2 (mod 4),
and
c3,l =
a3,l + 1, if l ≡ 0 (mod 4),
a3,l + 2, if l ≡ 1 (mod 4),
a3,l, if l ≡ 2, 3 (mod 4).
C.-W. Chang et al. / Discrete Applied Mathematics 160 (2012) 479–487 485
In this section, we study the global defensive alliance numbers of Pm× Pn, Cm× Pn and Cm× Cn. To simplify the notation,
for a given graph G and a set S ⊆ V (G), we let NG,S[v] = NG[v] ∩ S, and let αk(S) = |{v ∈ S : deg(v) = k}|.
We first want to establish a lower bound of the global defensive alliance numbers of a general graph by improving the
result of [3]. In [3], Haynes et al. consider the lower bound of the global defensive alliance number of bipartite graphs and
gave the following result.
Theorem 9 ([3]). If G is a bipartite graph of order n and maximum degree∆, then
γa(G) ≥ 2n
∆+ 3 .
We can give a better lower bound for the global defensive alliance number of a general graph.
Theorem 10. If G is a graph of order n and maximum degree∆, then
γa(G) ≥

n
∆+3
2
 .
Proof. Let S be a minimum global defensive alliance of G. Then, by definition, for each vertex v in S, |NG,S[v]| ≥

deg(v)+1
2

.
Hence |NG,V (G)\S[v]| ≤ (deg(v)+1)−

deg(v)+1
2

=

deg(v)+1
2

. Since S is a dominating set ofG,

v∈S NG,V (G)\S[v] = V (G)\S.
Thus

v∈S

deg(v)+1
2

≥ n− |S|, and so∆k=1  k+12 αk(S) ≥ n− |S|. Then, we have
n ≤∆k=1  k+12 αk(S)+ |S| ≤ ∆+12 ∆k=1 αk(S)+ |S| = ∆+32  |S|.
Therefore, γa(G) ≥

n
∆+3
2
. 
By Theorem 10, the next result follows immediately and hence a lower bound of the global defensive alliance numbers
of the Cartesian product of paths and cycles is established.
Corollary 11. If Gi = Pni or Cni for i = 1, 2, then
γa(G1 × G2) ≥
n1n2
3

.
We are now to prove the following results to establish upper bounds of the global defensive alliance numbers of the
Cartesian product of paths and cycles.
Theorem 12. (i) If 2 ≤ m ≤ n, then γa(Pm × Pn) = mn3 if mn ≡ 0 (mod 3), and
γa(Pm × Pn) ≤

n
3

m+
m
2

+ a, if m ≡ n ≡ 1 (mod 3),n
3

m, if m ≡ n ≡ 2 (mod 3),
min
m
3

n+
n
2

+ b,
n
3

m

, if m ≡ 1 (mod 3) and n ≡ 2 (mod 3),
min
n
3

m+
m
2

+ a,
m
3

n

, if m ≡ 2 (mod 3) and n ≡ 1 (mod 3),
where a = 1+ m+24 − m+24  , b = 1+  n+24 −  n+24 .
(ii) If m ≥ 3, n ≥ 2, then γa(Cm × Pn) =
mn
3

if mn ≡ 0 (mod 3), or m ≥ 7,m ≡ 1 (mod 6), and n = 2 or 4. And
γa(Cm × Pn) ≤

min
n
3

m,
m
3

n

, if n ≡ 2 (mod 3) and m ≢ 0 (mod 3),
min
m
3

n,
n
3

m+
m
2

+ a

, if n ≡ 1 (mod 3) and m ≢ 0 (mod 3),
where a = 1+ m+24 − m+24 . Moreover, if m ≥ 7,m ≡ 1 (mod 6), and n ≡ 2, 4 (mod 6), then
γa(Cm × Pn) ≤

mn
3
+min
n
6
,
m
3

, if n ≡ 2 (mod 6),
mn
3
+min

n
6
,
m
6
+ 3
2
+

m+ 2
4

−

m+ 2
4

, if n ≡ 4 (mod 6).
C.-W. Chang et al. / Discrete Applied Mathematics 160 (2012) 479–487 487 n
3

m+m2 +1+m+24 −m+24  , |S ′| = m3  n. Hence γa(Pm×Pn) ≤ min{ n3m+m2 +1+m+24 −m+24  , m3  n}
ifm ≡ 2 (mod 3) and n ≡ 1 (mod 3).
This proves Theorem 12(i). 
Proof of Theorem 12(ii). There are four cases.
Case 1. n ≡ 2 (mod 3) andm ≢ 0 (mod 3).
In this case, let S = A′, and let S ′ = B′. Then, it is easy to verify that both S and S ′ are global defensive alliances of Cm×Pn,
and |S| = m3  n, |S ′| =  n3m. Hence γa(Cm × Pn) ≤ min{ n3m, m3  n} if n ≡ 2 (mod 3) andm ≢ 0 (mod 3).
Case 2. n ≡ 1 (mod 3) andm ≢ 0 (mod 3).
In this case, if m ≡ 0, 3 (mod 4), let S = B ∪ B1, if m ≡ 1 (mod 4), let S = B ∪ B2, if m ≡ 2 (mod 4), let
S = B ∪ B3. And let S ′ = A′. Then, it is easy to verify that both S and S ′ are global defensive alliances of Cm × Pn, and
|S| =  n3m+m2 +1+m+24 −m+24  , |S ′| = m3  n. Henceγa(Cm×Pn) ≤ min{m3  n,  n3m+m2 +1+m+24 −m+24 }
if n ≡ 1 (mod 3) andm ≢ 0 (mod 3).
Case 3.m ≥ 7,m ≡ 1 (mod 6), and n ≡ 2 (mod 6).
In this case, let S = E, then, it is easy to verify that S is a global defensive alliance of Cm × Pn, and |S| = mn3 + n6 . Since
n ≡ 2 (mod 6), by Case 1, γa(Cm×Pn) ≤ min{
 n
3

m,
m
3

n}. Since m3  n = mn3 + 2n3 > |S| and  n3m = m(n+1)3 = mn3 + m3 ,
we have γa(Cm × Pn) ≤ min{mn3 + n6 ,
 n
3

m,
m
3

n} = mn3 +min{ n6 , m3 } ifm ≥ 7,m ≡ 1 (mod 6), and n ≡ 2 (mod 6).
Case 4.m ≥ 7,m ≡ 1 (mod 6), and n ≡ 4 (mod 6).
In this case, let S = E, then, it is easy to verify that S is a global defensive alliance of Cm × Pn, and |S| = mn3 + n6 . Since
n ≡ 4 (mod 6), by Case 2, γa(Cm×Pn) ≤ min{
m
3

n,
 n
3

m+m2 +1+m+24 −m+24 }. Since m3  n = mn3 + 2n3 > |S| and n
3

m+m2 +1+m+24 −m+24  = mn3 + m6 + 32 +m+24 −m+24 , we have γa(Cm×Pn) ≤ min{mn3 + n6 , m3  n,  n3m+m
2
+ 1+ m+24 − m+24 } = mn3 +min{ n6 , m6 + 32 + m+24 − m+24 } ifm ≥ 7,m ≡ 1 (mod 6), and n ≡ 4 (mod 6). Note
that when n = 4, γa(Cm × P4) ≤ 4m+23 =
 4m
3

. Hence by Corollary 11, γa(Cm × P4) =
 4m
3

ifm ≥ 7,m ≡ 1 (mod 6).
Note that by Case 3, γa(Cm × P2) ≤ 2m+13 =
 2m
3

, and by Case 4, γa(Cm × P4) ≤ 4m+23 =
 4m
3

. Hence by Corollary 11,
γa(Cm × Pn) =
mn
3

if n = 2 or 4,m ≥ 7,m ≡ 1 (mod 6). From the argument above, the result follows. 
Proof of Theorem 12(iii). By an argument similar as the proof of Theorem 12, Case 1, we have γa(Cm × Cn) = mn3 if
mn ≡ 0 (mod 3). If m = 4, n ≥ 7, n ≡ 1 (mod 6), let S = E ′. Then, it is easy to verify that S is a global defensive
alliance of C4 × Cn, and |S| = 4n+23 =
 4n
3

. Hence by Corollary 11, γa(C4 × Cn) =
 4n
3

if n ≥ 7, n ≡ 1 (mod 6). If
mn ≢ 0 (mod 3), let S = A′, and let S ′ = B′. Then, it is easy to verify that both S and S ′ are global defensive alliances of
Cm × Cn, and |S| =
m
3

n, |S ′| =  n3m. Hence γa(Cm × Cn) ≤ min{ n3m, m3  n} ifmn ≢ 0 (mod 3). 
4. Concluding remarks
For algorithmic purposes, an O(|V (T )| log∆) algorithm is presented for finding theminimum global defensive alliance of
trees. We also give formulas to determine the global defensive alliance numbers of complete k-ary trees for k = 2, 3, 4. For
higher k, we leave it open for future research.We also establish upper bounds and lower bounds for γa(Pm×Pn), γa(Cm×Pn)
and γa(Cm × Cn), and show that the bounds are sharp for certainm, n.
Acknowledgments
The authors thank the referees for helpful comments which resulted in an improvement in the clarity of exposition of
the paper.
References
[1] A. Cami, H. Balakrishnan, N. Deo, R.D. Dutton, On the complexity of finding optimal global alliances, J. Combin. Math. Combin. Comput. 58 (2006)
23–31.
[2] P. Flocchini, E. Lodi, F. Luccio, L. Pagli, N. Santoro, Dynamic monopolies in tori, Discrete Applied Mathematics 137 (2004) 192–212.
[3] T.W. Haynes, S.T. Hedetniemi, M.A. Henning, Global defensive alliances in graphs, Electron. J. Combin. 10 (2003) R47.
[4] C.J. Hsu, F.H. Wang, Y.L. Wang, Global defensive alliances in star graphs, Discrete Appl. Math. 157 (2009) 1924–1931.
[5] L.H. Jamieson, Algorithms and complexity for alliances and weighted alliances of various types, Ph.D. Dissertation, Clemson University, 2007.
[6] P. Kristiansen, S.M. Hedetniemi, S.T. Hedetniemi, Alliances in graphs, J. Combin. Math. Combin. Comput. 48 (2004) 157–177.
[7] S.C. Liaw, S.H. Lo, Global defensive alliances in double-loop networks, in: Proceedings of India–Taiwan Conference on Discrete Mathematics, Taipei,
Taiwan, 2009, pp. 70–71.
[8] D. Peleg, Local majorities, coalitions and monopolies in graphs: a review, Theoret. Comput. Sci. 282 (2002) 213–257.
[9] K.H. Shafique, R.D. Dutton, On satisfactory partitioning of graphs, Congr. Numer. 154 (2002) 183–194.
[10] P.K. Srimani, Z. Xu, Distributed protocols for defensive and offensive alliances in network graphs using self-stabilization, in: Proceedings of the
International Conference on Computing: Theory and Applications, Kolkata, India, 2007, pp. 27–31.
[11] T.V. Wimer, S.T. Hedetniemi, R.C. Laskar, A methodology for constructing linear graph algorithms, Congr. Numer. 50 (1985) 43–60.
[12] Z. Xu, P.K. Srimani, Self-stabilizing distributed algorithms for graph alliances, in: Proceedings of the 20th International Parallel and Distributed
Processing Symposium, Rhodes Island, Greece, 2006.
(0, 0) (0, 1) (1, 0) (1, 1)
(0, 3) (0, 2) (1, 3) (1, 2)
(3, 0) (3, 1) (2, 0) (2, 1)
(3, 3) (3, 2) (2, 3) (2, 2)
R2(0) R2(1)
R2(2)R2(3)
Figure 1: The R2.
two v-edges. The two edges incident on vertices numbered 0, 1 and 2, 3 are called h-edges of a
4-cycle, while the other two edges of the 4-cycle are said to be v-edges. We label the vertices of
Rn(i) with initial index i and get V (Rn(i)) = {(i, x2, . . . , xn) | 0 ≤ xi < 4}. A vertex with labeling
(x1, x2, . . . , xn) is connected to vertices (x1, x2, . . . , (xn ± 1) mod 4) and connected to a vertex with
address schema (x1, x2, . . . , xn−j , xn−j+2, (xn−j+1)j), where 1 ≤ xn−j+1 ≤ 3, if there exists one j
such that xn = xn−1 = · · · = xn−j+1 and xn−j 6= xn−j+1.
The number of vertices and edges in a Rn is equal to 4n and 3 × 22n−1 − 2, respectively. The
diameter of Rn is equal to 3×2n−1−1. For example, Figure 1 depicts an instance of a RTCC network
R2. The R2 consists of subnetworks R2(0), R2(1), R2(2) and R2(3). The vertices of V (R2(1)) =
{(1, 0), (1, 1), (1, 2), (1, 3)} have the same initial index 1 and are connected as a 4-cycle. The vertex
(1, 3) has neighbors (1, 0) and (1, 2) according to the modification rule at the rightmost index 3. The
vertices (1, 3) and (3, 1) are adjacent due to the other neighboring rule.
The n-layered RTCC pyramid, denoted by RPn, has the vertex set V (RPn) = V0 ∪ V1 ∪ · · · ∪ Vn,
where Vk = {(x1, x2, . . . , xk) | 0 ≤ xi < 4, 1 ≤ i ≤ k} is the set of vertices on layer k and 0 ≤ k ≤ n.
Each Vk is connected as a Rk and an edge of Rk is also called an internal edge in RPn. We use
< (x1, x2, . . . , xk), (y1, y2, . . . , yk) > to denote an internal edge incident on vertices (x1, x2, . . . , xk)
and (y1, y2, . . . , yk) of RPn. Each vertex (x1, x2, . . . , xk) ∈ Vk is adjacent to exactly four vertices
3
( 01XXX )
( 03XXX )
Figure 3: Clusters (01XXX) and (03XXX) in R5.
the clusters are of the form buddy cluster in those layers of even layer numbers. A square cluster
in Rk is a subgraph induced by the set of vertices with the same leftmost two indices and thus of
size 2k−2 × 2k−2. We label the square cluster by the first two indices following (X)k−2. A buddy
cluster in Rk is a union of two adjacent square clusters which have the same parity in their second
index, and we address a buddy cluster by the label of the square cluster with smaller index. We
use Figure 3 to illustrate the definition of clusters. Among the 24 square clusters of R5, the solid
lines show the two square clusters with the leftmost two indices 01, and 03, respectively. In fact,
the clusters labeled (01XXX) and (03XXX) will be joined to be a buddy cluster in R6 as those
second indices 1 and 3 have the same parity. Note that the union of the clusters labeled (00XXX)
and (02XXX) is a buddy cluster in R6. And we name this buddy cluster as (00XXX) or (00(X)3)
in R6.
5
2 2
2
2
2
2
3
3
4 4
7
7
8 8
9
9
10 10
5
5
6 6
1
1
1 1
1
1
11 11
11
11
11
11
12
12
13 13
16
16
17 17
18
18
19 19
14
14
15 15
20 20
20
20
20
20
21
21
22 22
25
25
26 26
27
27
28 28
23
23
24 24
29 29
29
29
29
29
30
30
31 31
34
34
35 35
36
36
37 37
32
32
33 33
Figure 4: The edge coloring χ on a cluster of R5.
7
Case 1. s and t are on the same square clusters.
By Lemma 1, there is an s− t rainbow path using at most 7×2k−2−13 colors, completing the proof of
this case.
Case 2. s and t are on different square clusters.
Each of the two paths s − e and e − t, by Lemma 1, is a rainbow path and assigned by using at
most 7×2
k−2−1
3 colors. Therefore, the s − t path is colored by less than or equal to (7×2
k−2−1
3 ) +
(7×2
k−2−1
3 ) + 1 =
7×2k−2+1
3 colors, completing the proof.
Q. E. D.
We now consider the number of colors assigned to the layer edges of RPn under the edge coloring
χ. Since the layer edges incident on the cluster C and the parent vertices of the vertices in C are
assigned the same color, the number of colors assigned to the layer edges of RPn is equal to the sum
of number of clusters in RPn. By the definition of clusters, the layer k of RPn has exactly 2k−1
clusters. Then we have the number of clusters in RPn as: 1 + 2 + 22 + · · · + 2n−1 = 2n − 1. Thus,
the next result follows.
Lemma 3. Let RPn be an n−layered RTCC pyramid. The layer edges of RPn are assigned totally
2n − 1 colors under the edge coloring χ.
We now show that χ is a rainbow coloring of a RTCC pyramid.
Theorem 4. Let RPn be an n−layered RTCC pyramid where n is odd (respectively, even). Then
rc(RPn) ≤ 7×2n−1−13 (respectively, rc(RPn) ≤ 7×2
n−1+1
3 ).
Proof. Let s and t be two vertices of RPn. If one of the two vertices is the apex of RPn, then
we get a shortest s− t path T , consisting of only layer edges, of length less than n. Since the layer
edges in distinct layers are assigned different colors, T is a rainbow path under the edge coloring
χ. Now, we suppose neither s nor t is the apex. If s and t are in the same cluster Ck, then, by
Lemmas 1 and 2, s and t have a rainbow path of length at most 7×2
k−1−1
3 (respectively,
7×2k−1+1
3 ) for
odd k (respectively, even k). Otherwise, we let s′ (respectively, t′) be an ancestor of s (respectively,
9
3 A Rainbow Colouring on Pyramid Networks
Note that the edge set of a pyramid is classified into mesh edges and layer edges. In edge coloring χ,
we shall color mesh edges by using a recursive construction and let the edge coloring on layer 1 be
a basis. That is, we shall first assign colors to the four edges of M1. To color mesh edges on layer
k, where 2 ≤ k ≤ n, we regard Mk as four submeshes Mk(0),Mk(1),Mk(2) and Mk(3) and then
assign colors to the mesh edges of each submesh with respect to the edge coloring of Mk−1. Note
that Mk(i), for each i = 0, 1, 2, 3, is a square mesh of size 2k−1 × 2k−1 and isomorphic to Mk−1.
Actually, each edge of Mk(i), i = 0, 3, is assigned the same color of the relative edge of Mk−1,
while each edge of Mk(i), i = 1, 2, is colored 2k greater than the relative edge in Mk−1. The layer
edges incident on the nodes of the same cluster and their parent nodes are assigned the same color,
whereas the layer edges of two distinct clusters are assigned different colors. The formal definition
of the edge coloring χ in Pn is as follows:
Definition 1. Let χ be an edge coloring of Pn, e = [k;x, y, x′, y′] a mesh edge and f = [k;x, y] a
layer edge of Pn, where 2 ≤ k ≤ n and 1 ≤ x, y, x′, y′ ≤ 2k.
(i) χ([1; 1, 1, 1, 2]) = χ([1; 2, 1, 2, 2]) = 1, χ([1; 1, 1, 2, 1]) = χ([1; 1, 2, 2, 2]) = 2, and χ([0; 1, 1]) =
2.
(ii) χ(e) =

χ([k − 1;x, y, x′, y′]) if e ∈ E(Mk(0)),
χ([k − 1;x− 2k, y, x′ − 2k, y′]) + 2k if e ∈ E(Mk(1)),
χ([k − 1;x, y − 2k, x′, y′ − 2k]) + 2k if e ∈ E(Mk(2)),
χ([k − 1;x− 2k, y − 2k, x′ − 2k, y′ − 2k]) if e ∈ E(Mk(3)),
2k−1 + 1 if x = 2k−1, x′ = 2k−1 + 1 and y = y′,
2k−1 if y = 2k−1, y′ = 2k−1 + 1 and x = x′.
(iii) χ(f) = 2k−1 + dy2e.
We use Figure 2 as an example to illustrate the above notation. In Figure 2(a), the layer edges
connecting the nodes of B(1; 2, 1) and their parent node (1; 2, 1) are all colored 3. The mesh edges
of B(1; 1, 1) and B(0; 1, 1), by the first rule of Definition 1(ii), have the same coloring. Figure 2(b)
reveals the edge coloring χ on M2.
Lemma 2. All edges of a column on layer k are assigned distinct colors under the edge coloring χ.
4
Corollary 3. The two columns of a cluster are colored the same under the edge coloring χ.
Since each column of layer k has 2k − 1 edges, we use 2k − 1 colors to color a column of layer k
under the edge coloring χ. Then, we consider the edge coloring of a cluster.
Lemma 4. Let L(k; y) be a cluster of Pn. L(k; y) has a rainbow 2k−coloring under the edge coloring
χ.
Proof. Let nodes s and t be two nodes of L(k; y). We want to show that their is an s − t
rainbow path under edge coloring χ. Two cases are considered depending on the positions of s and
t.
Case 1. s and t are on the same column.
Clearly, the s − t shortest path, along this column, is of length less than 2k − 1. Furthermore, by
Lemma 2, all edges of a column are assigned distinct colors. So, s and t are rainbow connected,
completing the proof of this case.
Case 2. s and t are on different columns.
Note that L(k; y) is the subgraph induced by the nodes of B(k;x, y), for each x = 1, 2, 3, . . . , 2k, and
consists of columns 2y − 1 and 2y. Without loss of generality, let s be a node in column 2y − 1 and
t a node of column 2y. Columns 2y− 1 and 2y are clearly in the same submesh and, by Corollary 3,
are colored the same. Actually, each column is colored by using 2k+1 − 1 colors (2k − 1 odd colors
and 2k even colors). Since L(k; y) has 2k−1 blocks, the h-edges between columns are colored by
using 2k odd colors. Thus, we shall find an h-edge, say (k+1;x, y, x, y+1), be colored an odd color
which is different from all odd colors of columns 1 and 2. Then the s − t path, constituted by the
shortest s−(x, y) path, mesh edge (k+1;x, y, x, y+1) and the shortest (x, y+1)−t path, is rainbow
connected and assigned within 2k colors under edge coloring χ.
Q. E. D.
We now show that χ is a rainbow coloring of a pyramid network.
Theorem 5. Let Pn be an n−dimensional pyramid network. Then rc(Pn) ≤ 2n.
6
24 
 (Appendix IV)  
 Rainbow connection number in triangular pyramids
 2012 04 ( ) 
 
 
 
(1; (0, 0))
(2; (0, 0)) (2; (0, 1))
(3; (0, 0)) (3; (0, 1))
(3; (1, 0)) (3; (1, 1))
(3; (0, 2))
(2; (1, 0))
(3; (2, 0))
Figure 2: The TP3.
(0, 0)
(0, 1) (1, 0)
(0, 2)
(1, 1)
(2, 0)
1 1
2 2 2 2
21
1
Figure 3: The edge coloring χ on T3.
the edge coloring χ on T3.
Theorem 2. Let Tn be a radix−n triangular mesh. Tn is rainbow connected under the edge coloring
χ.
Proof. We shall prove this theorem by induction on the number of radix n. A radix−2
triangular mesh T2 has edges < (0, 0), (0, 1) >, < (0, 0), (1, 0) > and < (0, 1), (1, 0) >. And the
three edges, by definition of χ, are all colored 1. Since T2 is indeed a 3−cycle, T2 is clearly rainbow
connected as the basis of induction. For the inductive hypothesis, assuming that the theorem is true
for Tn, i.e., any two vertices are connected by a rainbow path under the edge coloring χ. We now
4
edges connecting layers j and j+1. In χp, we regard the mesh edges in Ek as the edges of a Tk and
so apply the rule of χ to the coloring of Ek. Clearly, Ek is colored by using colors in {1, 2, . . . , k}.
On the other hand, Fk is assigned the color k to ensure color number greater than that of Ek. The
formal definition of the edge coloring χp in TPn is as follows:
Definition 4. Let χp be an edge coloring on TPn, e =< k; (x1, y1), (x2, y2) > a mesh edge on layer
k and f a layer edge incidents on a vertex in Vk−1 and a vertex in Vk, where 2 ≤ k ≤ n and
0 ≤ x1 + y1 ≤ x2 + y2 < n.
(i) χp(e) =
{
max(x1, x2) if x1 + y1 = x2 + y2,
x2 + y2 if x1 + y1 < x2 + y2.
(iii) χp(f) = k − 1.
Theorem 5. If TPn is an n−layered triangular pyramid, then rc(TPn) = n− 1.
Proof. Let s = (k1; (x1, y1)) and t = (k2; (x2, y2)) be two distinct vertices of TPn. If one of the
two vertices, say s, is the apex of TPn, then we get a shortest s− t path P of length k2−1 and every
edge of P is a layer edge. By the definition of χ, the k2 − 1 layer edges of P , say l1, l2, . . . , lk2−1,
are assigned the colors 1, 2, . . . , k2 − 1, respectively. Therefore, P is a rainbow path under the edge
coloring χp. Now, we suppose neither s nor t is the apex. Without loss of generality, assuming
k1 ≤ k2. If k1 = k2, then s and t are on the same layer of TPn. Since the layer k1 connected as a
Tk1 , by Theorem 2 and Corollary 3, we have a rainbow s− t path using less than or equal to k1 − 1
colors. When k1 < k2. Let w be a vertex on layer k1 such that the w− t path is of length k2−k1. It
can be seen that the edges along with the w − t path, say ek1 , ek1+1, . . . , ek2−1, are layer edges and
thus were assigned the color k1, k1 + 1, . . . , k2 − 1, respectively. Moreover, by Theorem 2, there is
a rainbow s− w path being colored by using colors in {1, 2, . . . , k1 − 1}. Therefore, s− t path is a
rainbow path under the rainbow edge coloring χp.
Q. E. D.
6
99 年度專題研究計畫研究成果彙整表 
計畫主持人：王福星 計畫編號：99-2221-E-034-008-MY2 
計畫名稱：二分規則網路彩虹支配數之研究 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 2 2 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 4 4 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 1 1 100%  
研究報告/技術報告 0 0 100%  
研討會論文 1 1 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
