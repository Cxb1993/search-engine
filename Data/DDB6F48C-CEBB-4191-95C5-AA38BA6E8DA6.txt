中文摘要：
動態單機排程問題（Dynamic Single Machine Scheduling Problems）總加權完工時
間（Total Weighted Completion Time）最小化的研究可視為是其他複雜排程問題的基
礎，故其實務上的應用價值相當高。這類的問題已經被證明是屬於 NP-hard 的問題，
所以在求解大問題的最佳解上會花費許多計算時間。許多萬用啟發式方法
（Metaheuristics）已被應用在此類問題上，並獲得了讓人信服的結果。基因演算法
（Genetic Algorithms）是目前公認對組合最佳化問題（Combinatorial Optimization
Problems）的求解具有相當效率的方法，案例式推理法（Case-Based Reasoning）模仿
人類的思考方式給予問題適當合理的解答也在人工智慧的領域中但有相當重要的角
色，局部搜尋法（Local Search）通常在得到問題的初步解答之後，對解進行擾動，以
期跳脫局部最佳解（Local Optima），進而提升解的品質。在這個研究中將以啟發式解
法的流程當作進行局部搜尋的依據，總共發展三種啟發式的局部搜尋法。
本研究以基因演算法為基礎對動態單機排程加權完工時間最小化問題進行求解，
在求解過程中為了增加求解的效率，每隔固定的世代數將會以案例式推理法加入其他
的解，再由基因演算法進行演化，待基因演算法執行完畢之後再進行啟發式局部搜尋。
由實驗結果中可以發現本研究所設計的搜尋法對求解動態單機排程加權完工時間最小
化問題具有相當的效率。
關鍵詞：動態單機排程、基因演算法、案例式推理法、啟發式局部搜尋、加權完工
時間
Abstract：
Dynamic single machine scheduling problems with minimizing total weighted
completion time are able to be regarded as the origins for other more complicated
scheduling problems. Consequently, this research is good for practical applications. This
type of problem has been proven that belongs to a NP-hard class. Therefore it is
time-consuming to solve large-size problems. Many metaheuristic approaches have been
applied in this problem and with convincing results. Genetic algorithms are recognized that
are efficient in solving combinatorial optimization problems. Case-based reasoning imitates
the way how people think to provide some appropriate and reasonable solutions. It is also an
important branch in the field of artificial intelligence. Local search techniques perturb the
solution structures in order to get off local optima and enhance the solutions quality. In this
research, heuristic rules are the basis to run local search. Three heuristic-based local search
are developed.
Genetic algorithm is the main search algorithm in this research. To improve the
efficiency of genetic algorithm, case-based reasoning inserts some quality solutions every a
prespecified number of generations. Then the solutions generated by genetic algorithm are
求解效率的問題，但啟發式方法本身的求解品質與演算法架構不具彈性的問題依然是
目前研究的重點。為了克服這些潛在的問題，許多萬用啟發式解法(Metaheuristics)應
運而生。
基因演算法(Genetic Algorithms)自 1975年由 Holland提出之後，被廣泛地應用在各
個領域，其中在組合最佳化(Combinatorial Optimization)的應用中廣受各界好評。如同
前述，基因演算法應用於求解單機動態排程問題的情形也沒有受到太大的迴響，至今
有 Liu與 Tang (1999)提出一修改的基因演算法處理平均完工時間最小化之問題，在此
法中包括了兩個新的步驟：1. 剔除最差的解；2. 當解的品質沒有改善時，修改基因的
排列。Madureira 等學者 (2001)發展一個以基因演算法為基礎之排程，求解總加權延
遲時間最小化之問題。Süer 等學者 (2003)提出一個遺傳規劃法 (Evolutionary
Programming)，求解平均流動時間最小化之問題。
3. 研究方法
本研究處理單機動態排程總加權完工時間最小化之問題，研究限制如下所示：
1. 加工工件之到達時間(Release Time)與處理時間(Processing Time)均為已
知。
2. 工件之設置時間(Setup Time)互相獨立，且並包含在處理時間中。
3. 機器隨時皆為可用狀態。
4. 允許機器有閒置。
5. 工件在處理中不可中斷。
6. 機器一次僅能處理一個工件。
7. 各工作的重要性不一定相同，其重要性以權重(Weight)來表示。
本研究中衡量排程績效的準則為總加權完工時間(Total Weighted Completion
Time; TWCT)，其計算方式如下：
TWCT= niCw ii ,...,2,1, 
其中， iw 為各工件的權重， iC 為各工件的完工時間。
本研究整合基因演算法與案例式推理法，另外發展以啟發式解法為架構的局部搜
尋增加求解之效率。在整合的過程中利用過去的案例來產生基因演算法之起始解，希
望藉由過去所解決過的案例中，找到對解決新問題有用的資訊，藉此提昇一般基因演
算法在演算初期的搜尋速度，另外，本研究在基因演算法演算過程中也適時加入案例，
藉由加入的案例來提供基因演算法正確的搜尋方向，或能避免基因演算法落入局部最
佳解的情況。
使用符號說明：
Npop ：母體染色體數目。
Nsimilar ：相似案例個數。
某一種啟發式方法來當作整個案例指標的方式，將原本為 2個維度的生產排程問題，
轉換為單一維度的問題，如圖 2所示。
圖 1 不同維度的案例問題
案例轉換
圖 2 排程問題的案例比對
步驟 3：產生起始解
本研究產生起始解的方式，為擷取由步驟 2所搜尋相似案例中的相關資訊，來產
生起始解，其運作步驟如下：
(1) 決定起始染色體是否由案例產生：產生 Npop個隨機亂數值 Rndini，若 Rndini
≦Pini，此染色體則由案例來產生起始解，若 Rndini＞Pini，此染色體則隨機產生起
始解。
(2) 案例來產生起始解：若是由案例來產生起始解，則依照與新問題的相似度，
利用案例式推理架構，將相似案例轉換基因演算法之染色體編碼，工件最低門檻
值設為 0.1。
(3) 隨機產生起始解：若是隨機產生起始解，則是將染色體的基因以亂數進行排
列產生起始解。
步驟 4：計算目標函數值
在此階段需計算在Ψt內，所有染色體的目標函數值，並與目前最佳解做比較，若
該母體的某一染色體的目標函數值優於目前最佳解，則最佳解便由該染色體所取代。
步驟 5：判斷最佳解是否有改善
此階段主要是判斷最佳解是否有改善，若最佳解有改善，則令 Nfail=0，然後到步
驟 7。若最佳解未改善，則 Nfail =Nfail+1，然後到步驟 7，若最佳解未改善，而且 Nfail >=
Gfail則到步驟 6。
步驟 6：加入案例調適
由於連續未改善次數大於最大未改善次數，即 Nfail >= Gfail，此時可能基因演算法
已經若入局部最佳解區域，因此本研究再由相似案例中隨機抽取一個案例，然後取代
Ψt中適合度函數值最小的染色體，藉由加入的案例來提供基因演算法正確的搜尋方向
以及跳離局部最佳解的情況。
步驟 7：計算適合度函數值
在此階段需計算在Ψt內，所有染色體的適合度函數值，由於本研究為求總加權完
圖 4 工件指派範例
兩工件順序；反之則不交換。
除了 ii tr 2 法則之外也將使用WSPT (Weighted Shortest Processing Time)與 ERT
(Earliest Release Time)為局部搜尋的判斷法則，期望可以增加解的品質。
步驟 12：取代
本研究取代的方式是採用菁英政策，其運算步驟如下：
(1) 找出親代染色體中的菁英：找出親代染色體中適合度函數最高的染色體，並
將此一染色體保留到新母體中。
(2) 補足不足之染色體：新母體中不足之 Npop－1個染色體，由子代染色體適合
度函數值高者取代。
步驟 13：終止條件
本研究的終止條件為最大演化世代數 Gmax，即目前演化世代 T到達最大演化世代
Gmax，則停止演算法，否則回步驟 4。
以上所述便是本研究之研究方法。
4. 結果與討論
為了比較前述所發展的三種方法，以下列測試例題進行實驗。測試例題產生的步
驟如下：
1. 工件數：20或 40。
2. 工件加工時間（Processing Time）服從均勻分配（1, 100），權重（Weight）服
從均勻分配（1, 10），工件到達時間服從均勻分配（0, 50.5nR）（R=0.4）。
在基因演算法中所用到的參數如下表 1所示：
表 1 基因演算法參數表
母體數 50
演化世代數 20000
交配率 0.9
突變率 0.1
實驗結果如表 2所示：
表 2 各種混合基因演算法的總加權完工時間
工件數/方法 2ri+ti ERT WSPT
20 13449.2 13551.1 13646.6
40 59299.7 60518.1 60847.1
表 2中顯示 2ri+ti法則表現比 ERT與WSPT法則要好。
本研究顯示以啟發式解法為局部搜尋的機制是可行的，未來可用更大型的測試例
and Computations, The Hague: Martinus Nijhoff, 1976.
16. Süer, G.A., Vazques, R., Santos, J., Evolutionary programming for minimizing the
average flow time in the presence of non-zero ready times, Computers and
Industrial Engineering, 45, pp.331-344, 2003.
計畫成果自評
1. 與原計畫相符程度
在第 2點中預計達到目標均已達成，所以是百分之百與原計畫相符。
2. 達成預期目標情況
在申請計畫中提到整個計劃執行之後預期完成的工作項目有下列幾點：
1. 電腦排程程式。
2. 整合基因演算法與案例式推理法之發展。
3. 三種以問題為導向的局部搜尋法之發展
4. 撰寫程式處理計劃中所面對的複雜問題。
5. 程式結果在實際工作現場的可用性評估。
6. 計劃的結案報告。
以上六點在這次的研究中均已達成。
3. 研究成果之學術或應用價值
動態單機排程問題是很多複雜排程問題的基礎，所以在實務上的應用價值相當
高。另外，動態單機排程問題屬於 NP-hard，提供一個有效且具效率的求解流程，對
學術上的進展也有相當的幫助。
4. 學術期刊發表或申請專利
本研究的測試例題中尚未嘗試大型的問題，但已得到初步的成果。預計將這個成
果發表在工業工程或是與人工智慧相關的國際研討會中。
通，並對未來的研究予以鼓勵及支持。
在這四天的議程中，大會的議程安排兼顧理論與實務，大會邀請提出基因
演算法的原創者，美國密西根大學 John Holland教授來專題演講有關創新的主
題。Holland 教授根據本身多年的經驗總結了基因演算法的成效並提出了基因
演算法未來的發展趨勢，讓與會者獲益良多。另外會中邀請來自於美、日、德
等國家的實務工作經驗人員分享其經驗，內容豐富有包括基因與遺傳演算法在
自動化、圖形辨識、機器學習、最佳化問題以及預測上的實際應用範例。整個
議程分成三個 Sessions:
1. Genetic and Evolutionary Algorithms + Programming
2. Heuristic Search Algorithms
3. Novel Applications
因為本身研究方向的緣故，所以被安排在第 3組 Novel Applications的專題
討論中發表論文。
二、與會心得
在此次會議中，我被接受的論文題目為〝Genetic Heuristic-Based Local
Search Algorithms for Single Machine Scheduling Problems with Release Time〞。排
程的問題自從 1954年 Johnson開始進行有系統的討論以來，已經發展了超過五
十年的時間。在這麼長的一段時間裡世界各地的專家學者提出了很多的方法。
動態單機排程問題本身是一個 NP-hard的困難問題，早期的研究專注在最佳解
的發展，這種求解方式耗時費力。所以後續的研究者轉而發展啟發式解法，利
用易於應用的啟發式解法求解動態單機排程問題，在某些假設的條件下可以得
到令人滿意的解答，但是萬一啟發式方法所假設的條件不成立時，所得出的答
案可能績效非常低落。Holland在 1975提出基因演算法，此一演算法模仿自然
