objective. This study focuses on solving the multi-
objective flexible job shop scheduling problem (MO-
FJSSP) with four minimization objectives: makespan 
(F1), total machine workload (F2), critical workload 
(F3), and total tardiness (F4). The study presents a 
double greedy randomized adaptive search procedure 
(D-GRASP) to solve the MO-FJSSP. The D-GRASP is a 
hierarchical approach using two encoding schemes: 
operation-machine assignment (OMA) and operation-
sequence list (OSL). At each iteration step, the D-
GRASP employs GRASP with a greedy function 
considering F2 and F3 to search for a good quality 
OMA, and then applies another GRASP with a greedy 
function considering F1 and F2 to find a good 
schedule under the given OMA.  
   Several experiments were conducted to evaluate the 
D-GRASP performance using the five instances given by 
Kacem et al. (2002). The results indicate that the D-
GRASP is very competitive or even superior compared 
to several state-of-the-art published algorithms for 
problems with three objectives – F1, F2, and F3. The 
D-GRASP finds a new Pareto optimal solution for the 
8x8 and the 10x10 instances. In addition, the D-GRASP 
outperforms NSGAII+SA+PR (path relinking) and 
SPEA2+SA+PR for problems with different three 
objectives – F2, F3, and F4, by using 25 instances 
generated based on Kacem et al.(2002) and Lee and 
Pinedo (1997). 
   For the four-objective problems, three different 
hybrid evolutionary algorithms were developed – ant 
colony optimization (ACO) for OMA with simulated 
annealing (SA) for OSL (denoted as ACO+SA), 
ACO+GRASP, and GRASP+SA. By comparing the four 
algorithms using the 25 derived instances based on 
several performance metrics in multi-objective 
optimization, it is shown that D-GRASP performs best.
 
英文關鍵詞： Multi-objective evolutionary algorithms, flexible job 
shop scheduling, Pareto dominance, GRASP, meta-
heuristics, performance metrics 
 
國科會補助專題研究計畫成果報告自評表 
請就研究內容與原計畫相符程度、達成預期目標情況、研究成果之學術或應用價值（簡要敘
述成果所代表之意義、價值、影響或進一步發展之可能性）、是否適合在學術期刊發表或申
請專利、主要發現或其他有關價值等，作一綜合評估。 
1. 請就研究內容與原計畫相符程度、達成預期目標情況作一綜合評估 
■達成目標 
□ 未達成目標（請說明，以 100 字為限） 
□ 實驗失敗 
□ 因故實驗中斷 
□ 其他原因 
說明：原計畫提案主旨在於使用 GRASP 演算法與多目標母體演化演算法求解多目標彈性零
工型排程問題(MO-FJSSP)，並探討何種貪婪函數最適合 GRASP 求解此問題。此計畫皆已達
成此兩個主要目標。 
以下為此計畫研究成果說明：首先研究探討範圍更廣之四目標問題：分別為最小化最大
完工時間(makespan; Cmax)、所有機台總工作時間(total machine workload; TMW)、關鍵機台工
作時間(critical machine workload; CMW)、總延遲時間(total tardiness; TT)。此問題使用分解方
式(decomposition approach)為最自然且有效，可以先決定作業-機台指派(operation-machine
assignment; OMA)，此時已決定兩目標(TMW, CMW)之值。在 OMA 固定下，可以致力另兩
目標值(Cmax, TT)較佳值。在此下層過程中 TMW 與 CMW 值不變。研究提出分解方式為架構
解算所提出之問題。  
本研究發展四種分層式演算法：上下層皆使用 GRASP+GRASP 演算法(稱 D-GRASP)、
GRASP+SA 以及混合式分層演化演算法 ACO+GRASP、ACO+SA。利用 Kacem et al. (2002)
之 5 個標竿測試題與 Lee and Pinedo (1997)方法依交期參數每題各衍生 5 題，共 25 題。研究
亦使用 NSGAII+SA+PR (path relinkng)、SPEA+SA+PR 等求解三目標(TMW, CMW, TT)之
MO-FJSSP。 
經由實驗使用標竿題目測試結果，在四個目標問題上，所提 D-GRASP 優於其他三種混合
式演算法。在 Kacem et al. (2002a) 之三目標 (Cmax, TMW, CMW)測試題，D-GRASP 演算法
於大部分的測試題優於 FL+EA (Kacem et al. 2002b)、PSO+SA (Xia and Wu 2005)、PSO+TS
(Zhang et al. 2009)等；與 MOEA+LS (Ho and Tay 2008)、MOEA + GLS (Ghasem and Mehdi 
2011)、Xing et al. (2011)等相比並不遜色；另一個三目標(TT, TMW, CMW)問題則使用四目標
問題相同之 25 個標竿測試題，D-GRASP 之表現亦優於本研究所發展之 NSGAII+SA+PR 與
SPEA2+SA+PR 之混合式演化式演算法。 
GRASP 與演化式演算法於多目標彈性零工型排程之研究 
 
中文摘要 
本研究探討多目標之彈性零工型生產排程問題，包括四個最小化目標：總完工時間 (makespan; 
Cmax)、所有機台總工作量(total machine workload, TMW)、關鍵機台的工作量(critical machine workload; 
CMW)、以及總延遲時間(total tardiness, TT)。演算法架構使用分層方式求解法 (hierarchical approach)：
在此分層策略下，上層決定作業-機台指派問題 (operation-machine assignment, OMA)，專注於極小化與
機台負擔有關兩個目標：TMW 與 CMW；之後在每個 OMA 下，下層尋求兩個排程目標最小化：Cmax
與 TT，在此下層過程中 TMW 與 CMW 值不變。 
本研究使用 GRASP (greedy randomized adaptive search procedure) 演算法，OMA 階段使用貪婪函
數同時考慮最短作業時間與最小工作量兩個派工法則，再加區域改善；在排程階段使用最小剩餘時間派
工法則為貪婪函數加上區域搜尋法改善兩個作業排程目標，求得區域非被支配解。此演算法稱之為
Double-GRASP (D-GRASP)。除 D-GRASP 外，研究亦發展以 GRASP 選取 OMA，再使用 SA 決定每個
OMA 下之兩目標多機排程問題。同時亦發展 ACO + SA、ACO + GRASP 以及 NSGAII+SA+PR (path 
relinking) 與 SPEA2+SA+PR 等混合式演化演算法。 
  研究所使用之測試題源於 Kacem et al. (2002a,b)的 5 題，再使用 Lee and Pinedo (1997)方法將每題
各產生 5 種不同交期參數結構之測試題，共 25 題。本研究將 D-GRASP 演算結果在兩種三目標問題與
先前文獻結果相互比較，在三目標(Cmax, TMW, CMW) 5 題測試題方面，D-GRASP 演算法於大部分的測
試題優於 FL+EA (Kacem et al. 2002b)、PSO+SA (Xia and Wu 2005)、PSO+TS (Zhang et al. 2009)等；與
MOEA+LS (Ho and Tay 2008)、MOEA + GLS (Ghasem and Mehdi 2011)、Xing et al. (2011)等相比並不遜
色；在另一種三目標(TT, TMW, CMW) 問題方面，D-GRASP 之表現亦優於 NSGAII+SA+PR (path 
relinking) 與 SPEA2+SA+PR 之混合式演化式演算法。在四個目標 (Cmax, TT, TMW, CMW) 問題上，所
提 D-GRASP 優於 GRASP+SA、ACO+SA、ACO+GRASP 等其他三種混合式演算法。 
關鍵詞：多目標最佳化、彈性零工型生產排程、GRASP、萬用啟發式演算法、派工法則、績效量測 
 
Hierarchical-Approach Algorithms for Multi-Objective Flexible Job Shop Scheduling 
Problems  
 
ABSTRACT 
Flexible job shop scheduling problems (FJSSPs) arise in many production systems. When scheduling jobs, 
management generally does not focus solely on one objective. This study focuses on solving the 
multi-objective flexible job shop scheduling problem (MO-FJSSP) with four minimization objectives: 
makespan (F1), total machine workload (F2), critical workload (F3), and total tardiness (F4). The study presents 
a double greedy randomized adaptive search procedure (D-GRASP) to solve the MO-FJSSP. The D-GRASP is 
a hierarchical approach using two encoding schemes: operation-machine assignment (OMA) and 
operation-sequence list (OSL). At each iteration step, the D-GRASP employs GRASP with a greedy function 
considering F2 and F3 to search for a good quality OMA, and then applies another GRASP with a greedy 
function considering F1 and F2 to find a good schedule under the given OMA.  
Several experiments were conducted to evaluate the D-GRASP performance using the five instances given 
by Kacem et al. (2002). The results indicate that the D-GRASP is very competitive or even superior compared 
to several state-of-the-art published algorithms for problems with three objectives – F1, F2, and F3. The 
D-GRASP finds a new Pareto optimal solution for the 8x8 and the 10x10 instances. In addition, the D-GRASP 
outperforms NSGAII+SA+PR (path relinking) and SPEA2+SA+PR for problems with different three 
objectives – F2, F3, and F4, by using 25 instances generated based on Kacem et al.(2002) and Lee and Pinedo 
(1997). 
For the four-objective problems, three different hybrid evolutionary algorithms were developed – ant 
colony optimization (ACO) for OMA with simulated annealing (SA) for OSL (denoted as ACO+SA), 
索引： 
i：  工件索引 (i=1,… ,n)  
j：  作業索引 
k：  機台索引 (k = 1,…,m) 
t：  時間點 
Mi,j：工件 i 之作業 j 可加工的機台集合 
參數： 
n:   工件數量 
m:    機台數量  
qi:    工件 i 的作業數量 
Pi,j,k：工件 i 之作業 j 在機台 k 的加工時間 
ri:   工件 i 的到達時間 
di：  工件 i 的交期 
決策變數： 
Xi,j,k： 機台 k 是否能加工工件 i 作業 j，是 Xi,j,k = 1；否 Xi,j,k = 0 
Yi.j.k,t： 工件 i 作業 j 在機台 k 的時間 t 是否加工，是 Yi.j.k,t =1；否 Yi.j.k,t = 0 
Zi,j,k,t： 工件 i 作業 j 在機台 k 的時間 t 是否完工，是 Zi,j,k,t =1；否 Zi,j,k,t = 0 
Ci,j：      工件 i 作業 j 的完工時間 
Ti：  工件 i 的延遲時間  
Wk：      機台 k 的工作時間總和 
Tub: ௨ܶ௕ ൌ ∑ ∑ ∑ ௜ܲ,௝,௞௞∈ெ೔ೕ௤೔௝ୀଵ௡௝ୀଵ ，總完工時間上限 
2.2  數學模式 
目標式   
Minimize ሺܨଵ, ܨଶ, ܨଷ, ܨସሻ 
ܨଵ ൌ ܥ௠௔௫ ൌ 	݉ܽݔଵஸ௜ஸ௡ሼܥ௜,௤೔ሽ，總完工時間  ܨଶ ൌ TMW ൌ ∑ ௞ܹ௠௞ୀଵ ，所有機台之總工作量  
ܨଷ ൌ CMW ൌ ݉ܽݔଵஸ௞ஸ௠ሼ ௞ܹሽ，關鍵機台的工作量  
ܨସ ൌ TT ൌ ∑ ௜ܶ௡௜ୀଵ ，所有工件總延遲時間  
限制式 
ܥ௜,ଵ ൒ ݎ௜ ൅ ∑ ௜ܲ,ଵ,௞ ∙ ௜ܺ,ଵ,௞௠௞ୀଵ 					݅	 ൌ 1,… , ݊          (1) 
ܥ௜,௝ ൒ ܥ௜,௝ିଵ ൅ ∑ ௜ܲ,௝,௞ ∙ ௜ܺ,௝,௞௠௞ୀଵ 				݅ ൌ 1,… , ݊	; ݆ ൌ 2,… , ݍ௜ (2) 
∑ ௜ܺ,௝,௞௠௞ୀଵ ൌ 1									݅ ൌ 1,… , ݊	; ݆ ൌ 1,… , ݍ௜     (3) 
∑ ௜ܻ,௝,௞,௧௠௞ୀଵ ൑ 1								݅ ൌ 1,… , ݊	; ݆ ൌ 1,… , ݍ௜	; ݐ ൒ 1  (4) 
∑ ∑ ܼ௜,௝,௞,௧	்ೠ್௧ୀଵ௠௞ୀଵ ൌ 1							݅ ൌ 1,… , ݊	; ݆ ൌ 1,… , ݍ௜; (5) 
∑ ∑ ݐ ∙ ܼ௜,௝,௞,௧ ൌ ܥ௜,௝	்ೠ್௧ୀଵ௠௞ୀଵ 								݅ ൌ 1,… , ݊	; ݆ ൌ 1,… , ݍ௜ (6) 
௜ܺ,௝,௞ ൌ ∑ ܼ௜,௝,௞,௧்ೠ್௧ୀଵ 									݅ ൌ 1,… , ݊	; ݆ ൌ 1,… , ݍ௜; ݇	 ൌ 	1, … ,݉ (7) ∑ ௜ܻ,௝,௞,௧௧௧ି௉೔,ೕ,ೖାଵ ൌ ௜ܲ,௝,௞ ∙ ܼ௜,௝,௞,௧	݅ ൌ 1,… , ݊	; ݆ ൌ 1,… , ݍ௜	; ݇ ൌ 1,… ,݉; ݐ ൒ 1    (8) 
௞ܹ ൌ ∑ ∑ ௜ܲ,௝,௞௤೔௝ୀଵ ∙ ௜ܺ,௝,௞							݇ ൌ 1	, … ,݉௡௜ୀଵ  (9) 
௜ܶ ൒ ܥ௜,௤೔ െ ݀௜							݅ ൌ 1,…	, ݊ (10) 
௜ܶ ൒ 0							݅ ൌ 1,…	, ݊ (11) 
限制式 (1) (2) 表示工件 i 之第 j 個作業之最早完工時間，此時間為前一個作業的完成時間加上該
作業於機台 k 的作業時間，若作業 j 為工件 i 的第一個作業，則為作業的到達時間加上該作業於機台 k
的作業時間；限制式 (3) 代表每個作業只能選擇其中一個機台執行；限制式 (4) 表示每個機台在同一
時間點 t 最多只能加工一個作業；限制式 (5) 表示每個作業必有一個完工時間；限制式 (6) 表示作業 j
的完工時間點等於完工時間ܥ௜,௝，並且受限制式(1)(2)影響不得小於最早完工時間；限制式 (7) 表示作業
必須在被指派的機台上完工；限制式 (8) 表示若作業 j 在機台 k 加工，則總施工時間必為作業時間 ௜ܲ,௝,௞且
加工時間不可中斷；限制式 (9)用於計算機台 k 的總工作量；限制式(10)(11) 用於計算工件的延遲時間。 
߬௜௝௟ ← ሺ1 െ ߦሻ߬௜௝௟ ൅ ߦ߬଴	, ݈߳ܯ௜,௝, ߦ ൌ 0.5, ߬଴ ൌ 1݌௜௝௠ 
每世代會進行一次全域費洛蒙濃度更新，公式如下： 
߬௜௝௠ ← ሺ1 െ ߩሻ߬௜௝௠ ൅ ߩ∆߬௜௝௠௕௦ 		,								∀ሺ݅, ݆, ݉ሻ ∈ ܶ௕௦ 
其中ܶ௕௦為計算該世代最佳的螞蟻的機台指派，並將費洛蒙增加∆߬௜௝௠௕௦ ൌ ଵ௣೔ೕ೘್ೞ 。 
3.2  OMA 下之作業排序 
GRASP 使用下列貪婪函數進行 OMA 下之兩排程目標(F1, F4) = (Cmax, TT)如表 2，篩選範圍介於
ሾܫ௠௜௡ ൅ ሺ1 െ ߙሻሺܫ௠௔௫ െ ܫ௠௜௡ሻ, ܫ௠௔௫ሿ，自區間內的組合挑選，選擇的機率：	݌ݎ݋ܾܾ݈ܽ݅݅ݐሺ݅, ݆ሻ ൌ ூሺ௜,௝ሻ∑ ூሺ௜,௝ሻೝ∈ೃ಴ಽ 。
使用 15x10 第五題(測試題編號 25)做實驗，選取一組機台指派 OMA 其兩目標值為(TMW, CMW) = (93, 
10)，對於下列函數執行 10 次，每次計算 1000 解，使用 HV 之平均值並比較計算時間，結論為 = 0.3，
MST(minimum slack time) 指數函數所求得之 HV 值最大，能找到最優之前緣解，而計算時間差別不大。 
表 2  GRASP 求解作業排程之貪婪函數 
派工法則 分數 指數 
FIFO ࡵሺ࢏, ࢐ሻ ൌ ૚ ࡿ࢏,࢐,࢓⁄ ， ࡿ࢏,࢐,࢓ 最早開始時間 ࡵሺ࢏, ࢐ሻ ൌ ܍ܠܘ	ሺെࡿ࢏,࢐,࢓ሻ 
EDD ࡵሺ࢏, ࢐ሻ ൌ ૚ ࢊ࢏⁄  ࡵሺ࢏, ࢐ሻ ൌ ܍ܠܘ	ሺെࢊ࢏ሻ 
CR ࢊ࢏ െ ࡿ࢏,࢐,࢓		૙, ࡵሺ࢏, ࢐ሻ ൌ ૚; ࢋ࢒࢙ࢋ ࡵሺ࢏, ࢐ሻ ൌ  
෍ ࡼ࢏,࢐,࢓
ࢗ࢏
࢐
ሺࢊ࢏ൗ െ ࡿ࢏,࢐,࢓ሻ 
ࢋ࢞࢖ሺെ࢓ࢇ࢞ ሺሺࢊ࢏ െ ࡿ࢏.࢐.࢓ሻ ෍ ࡼ࢏,࢐,࢓, ૙ሻሻ
ࢗ࢏
࢐
ൗ
MST ࢊ࢏ െ ∑ ࡼ࢏,࢐,࢓ࢗ࢏࢐ െ ࡿ࢏,࢐,࢓  ૙, ࡵሺ࢏, ࢐ሻ ൌ ૚;
else ࡵሺ࢏, ࢐ሻ ൌ ૚ ሺࢊ࢏⁄ െ ∑ ࡼ࢏,࢐,࢓ࢗ࢏࢐ െ ࡿ࢏,࢐,࢓ሻ
܍ܠܘ ሺെܕ܉ܠ ሺࢊ࢏ െ෍ ࡼ࢏,࢐,࢓
ࢗ࢏
࢐
െ ࡿ࢏,࢐,࢓, ૙ሻሻ
區域搜尋則考慮交換法與插入法。交換法為將兩作業順序交換，插入法則隨機選擇一作業插入於某
作業之前，兩者機台指派不變，同時不違反相同工件下之作業優先順序。使用圖 2 之作業順序編碼方式
可以迅速執行區域搜尋機制，此例包括 5 工件共 12 作業。在交換例子中，第四個順序-工件 3 之第 1 個
作業(第一次出現數字 3)與第六順位之工件 2 之第 2 個作業交換；在插入例子中，第七個順序-工件 4
之第 1 個作業放置在與第五順位之工件 5 之第 1 個作業之前。 
      
 
2 34531254311作業順序
O21 O42O52O32O13O22O51O41O31O12O11 O33
插入
 
圖 2  區域搜尋之交換法與插入法 
選擇 15x10 測試題第五題以隨機產生一組解其四目標值為 (F1,F2, F3, F4) = (17, 95, 12, 19)為初始解，
計算 10 次，每次計算 1000 個解。由於 OMA 不變，(F2, F3) = (95, 12)值不變。Nadir point 針對 (F1, F4) 採
用(25, 20)，所得結論為插入法所產生之平均 HV 值與非被凌駕解之品質在柏拉圖前緣接近度與分散度皆
較佳，因此使用插入法。 
模擬退火 SA 機制中則採用 MST 法則求得初始解，再使用上述區域搜尋插入法改善(F2, F3)目標品
質。 
在給予 OMA 下使用 GRASP 搜尋(F2, F3) 方法為 100 x 20，實施為每步驟使用貪婪函數 MST 得一
個建構解，每個建構解實施 20 次區域搜尋改善。而使用 SA 方法為 1 x 2000，先使用貪婪函數 MST 得
一個建構解，之後運用 SA 機制改善此解；初始溫度設為 100，降溫次數 20，降溫係數為 0.9，每個溫
演算法 FL+EA MOEA+LS MOEA+GLS 本研究 
F1 24   23 23 23   23 23   23 
F2 91   95 91 91   93 91   93 
F3 11   11 11 11   10 11   10 
從表 7 中數據可以發現，D-GRASP 在此測試題中，所找到的前緣解與 MOEA+GLS 相同，
但優於 MOEA+LS 與 FL+EA。 
(2) D-GRASP 與 PSO+SA、PSO+TS 和 Xing 演算法相互比較 
考量目標為總完工時間、機台總工作量與關鍵機台工作量，使用 8 x 8、10 x 10 與 15 x 10 測
試題進行分析，對照用演算法為 PSO+SA (Xia and Wu, 2005)、PSO+TS (Zhang et al., 2009) 和 Xing 
et al. (2011)演算法。 
表 8 測試題 8 x 8 之前緣解比較 
演算法 PSO+SA PSO+TS Xing 本研究 
F1 15   16 14   15 14   15 16   15   16 
F2 75   73 77   75 77   76 77   75   73 
F3 12   13 12   12 12   12 11   12   13 
D-GRASP 於此測試題中，找到二組其他演算法已發現的前緣解(15,75,12)與(16,73,13)，一組
未發現的前緣解(16,77,11)，結果為圖 3 之甘特圖。 
 
圖 3  8 x 8 之一個前緣解甘特圖 
表 9 測試題 10 x 10 之前緣解比較 
演算法 PSO+SA PSO+TS Xing 本研究 
F1 7 7 7   8 8   7   8 
F2 44 43 42   42 42   42  41 
F3 6 6 6   5 5   6    7 
從表 9 的數據，D-GRASP 演算法所求的前緣解範圍能涵蓋其他演算法，並於此測試題中，找
到一組其他演算法未發現的前緣解(8,41,7)，圖 4 顯示其甘特圖。 
測試題 演化式演算法(EA) 門檻值搜尋法(TA) 本研究(D-GRASP) 
15x10_1 (91,15,113)、(91,13,114)、
(91,12,116)、 
(93,11,113)、(91,12,115)、
(93,10,124)*、(91,15,114)、
(92,11,114) 
(92,11,112)*、(91,12,112)*、
(91,13,111)*、(91,11,114)*、
(91,15,110)*、(96,10,117)* 
15x10_2 (91,15,172)、(91,13,174)、
(91,14,173)、(91,12,178) 
(93,11,174)、(92,11,177)、
(91,12,176)、(92,12,171)、
(91,13,172) 
(91,11,173)*、(92,11,172)*、
(91,12,170)*、(91,15,169)* 
15x10_3 (91,17,59)*、(91,16,60)*、
(91,13,62)、(93,13,60) 
(92,11,61)*、(97,10,60)*、
(91,12,62)、(93,13,60) 
(92,15,58)*、(95,11,62)、
(91,12,59)*、(92,11,63)、
(98,10,76)* 
15x10_4 (91,13,0)、(91,12,2) (91,12,2)、(91,13,0)、
(92,11,0)* 
(91,12,0)*、(92,11,0)* 
15x10_5 (91,13,23) (92,11,23)、(91,12,23) (91,11,23)*、(93,10,23)* 
表 13 顯示三個演算法在 PDC、Purity、和 ER 在 25 題之表現，其中 PDC (pairwise dominance 
comparison)為比較兩個非被支配解集合後各自所剩餘之解集合。例如若演算法 A 之分數為 3/4，演算法
B 之分數為 1/6，則表示經過比較後，演算法 A 之 4 個非被支配解剩餘 3 個；演算法 B 之 6 個非被支配
解剩餘 1 個，所以演算法 A 表現較佳。 
從表 13 的數據表示，D-GRASP 在 25 題中平均 purity 值為 0.8，代表 D-GRASP 能找出 75%的前
緣解；平均 ER 值為 0.21，代表 D-GRASP 所找出的解中，約有 21%不是前緣解；無論是平均 purity 值
或 ER 值，D-GRASP 演算法比演化式演算法與門檻值搜尋法來的佳，特別在 15x10 測試題中，所找到
的前緣解，幾乎都來自於 D-GRASP 演算法。 
表 13  EA、TA、D-GRAS 於 25 題測試題之量測數據 
 演化式演算法(EA) 門檻值搜尋法 (TA) D-GRASP 
 PDC purity ER PDC purity ER PDC (EA) 
PDC 
(TA) purity ER 
1 4/4 3/4 1/4 2/2 1/2 0 3/3 3/2 1/2 1/2 
2 4/4 3/4 1/4 2/2 1/2 0 4/4 4/3 3/4 1/4 
3 4/4 3/4 1/4 2/2 1/2 0 3/3 3/2 1/2 1/3 
4 3/2 2/3 1/3 3/3 1 0 3/3 3/3 1 0 
5 3/3 1 0 2/2 2/3 0 3/3 3/3 1 0 
6 3/3 3/4 0 5/1 0 1 2/1 2/2 1/4 1/2 
7 3/2 1/2 1/3 3/0 0 1 4/3 4/4 3/4 1/4 
8 4/4 4/5 0 4/0 0 1 3/1 3/3 1/5 2/3 
9 2/1 1/2 1/2 4/1 1/2 3/4 2/2 2/2 1 0 
10 6/3 3/4 1/2 8/0 0 1 3/1 3/3 1/4 2/3 
11 5/5 4/5 1/5 3/3 3/5 0 5/5 5/4 4/5 1/5 
12 5/5 3/4 0 3/3 3/4 1/3 5/5 5/3 3/4 2/5 
13 2/2 1 0 1/1 1/2 0 2/2 2/2 1 0 
14 2/2 1 0 2/2 1 0 2/2 2/2 1 0 
15 2/2 1 0 2/2 1 0 2/2 2/2 1 0 
16 6/4 4/5 1/3 5/0 0 1 3/3 3/3 3/5 0 
17 4/4 2/3 0 4/1 1/6 3/4 5/3 5/4 1/2 2/5
18 4/3 1/2 1/2 5/1 1/4 4/5 4/4 4/3 3/4 1/4
19 4/2 1/3 3/4 2/2 2/3 0 4/4 4/2 2/3 1/2
20 4/2 1/2 1/2 2/0 0 1 3/3 3/3 1 0 
21 3/0 0 1 5/1 1/7 4/5 6/6 6/6 6/7 0 
22 4/0 0 1 5/0 0 1 4/4 4/4 1 0 
23 4/0 0 1 4/2 2/5 1/2 5/5 5/3 3/5 2/5 
24 2/0 0 1 3/1 1/2 2/3 2/2 2/2 1 0 
25 1/0 0 1 2/0 0 1 2/2 2/2 1 0 
平均  0.56 0.39  0.39 0.50   0.75 0.21
 
Purity 1/3 1/3 2/4 2/3 3/4 0.516 
ER 1/2 1/2 1/3 1/3 0/3 0.333 
D-GRASP 
HVR 1.000 0.943 1.000 1.000 0.992 0.987 
GD 1.500 0.000 0.000 0.000 0.000 0.300 
Purity 1/3 3/3 3/4 3/3 3/4 0.767 
ER 1/2 0/2 0/3 0/3 0/3 0.1 
4x5 測試題是所有測試題中，工件與機台數最少的一題。由表 17 可知，使用 D-GRASP 在 4x5 的
測試題中有較佳的表現， 但與 ACO+GRASP 差別不大。 
表 17  4x5 混合式演算法表現數據 
演算法  4x5_1 4x5_2 4x5_3 4x5_4 4x5_5 平均 
ACO+SA 
HVR 0.910 0.838 0.958 1.000 1.000 0.941 
GD 0.333 0.354 0.000 0.000 0.000 0.137 
Purity 2/4 3/6 2/3 3/3 3/3 0.733 
ER 1/3 1/4 0/2 0/3 0/3 0.117 
ACO+GRASP 
HVR 1.000 0.915 0.958 1.000 0.959 0.966 
GD 0.000 0.000 0.000 0.000 0.000 0.000 
Purity 4/4 4/6 2/3 3/3 2/3 0.8 
ER 0/4 0/4 0/2 0/3 0/2 0 
GRASP+SA 
HVR 0.910 0.800 1.000 0.959 1.000 0.934 
GD 0.333 0.000 0.000 0.000 0.000 0.067 
Purity 2/4 3/6 3/3 2/3 3/3 0.733 
ER 1/3 0/3 0/3 0/2 0/3 0.067 
D-GRASP 
HVR 1.000 0.990 0.958 0.959 1.000 0.981 
GD 0.000 0.000 0.000 0.000 0.000 0.000 
Purity 4/4 5/6 2/3 2/3 3/3 0.833 
ER 0/4 0/5 0/2 0/2 0/3 0 
表 18 呈現 10x7 測試題之表現，此類測試題是每個機台平均作業數最多的題型。由表 18 可知，
D-GRASP 的 HVR 略低於 ACO+GRASP 但 GD、Purity 與 ER 皆優於其他三者，代表 D-GRASP 所搜尋
到的解皆相當逼近柏拉圖前緣解，但分散性略微不足。 
表 18  10x7 混合式演算法表現數據 
演算法  10x7_1 10x7_2 10x7_3 10x7_4 10x7_5 平均 
ACO+SA 
HVR 0.942 0.978 0.999 1.000 0.908 0.965 
GD 0.378 0.247 0.433 0.000 0.000 0.212 
Purity 4/8 5/10 1/4 4/4 6/6 0.65 
ER 3/7 2/7 3/4 0/4 0/6 0.293 
ACO+GRASP 
HVR 0.946 1.000 0.990 1.000 0.937 0.975 
GD 0.319 0.245 0.612 0.000 0.250 0.285 
Purity 5/8 7/10 1/4 4/4 4/6 0.648 
ER 2/7 5/12 3/4 0/4 4/8 0.39 
GRASP+SA 
HVR 0.956 0.920 0.997 1.000 1.000 0.975 
GD 0.395 0.471 0.354 0.000 0.000 0.244 
Purity 5/8 3/10 2/4 4/4 6/6 0.685 
ER 3/8 6/9 2/4 0/4 0/6 0.308 
D-GRASP 
HVR 0.870 1.000 1.000 1.000 0.944 0.963 
GD 0.369 0.125 0.000 0.000 0.494 0.198 
Purity 3/8 7/10 4/4 4/4 3/6 0.715 
ER 6/9 1/8 0/4 0/4 4/7 0.273 
表 19 呈現 15x10 測試題之表現，D-GRASP 的 HVR 略低於 ACO+GRASP 但 GD、Purity 與 ER 皆
優於其他三者，代表 D-GRASP 所搜尋到的解皆相當逼近柏拉圖前緣解。 
表 19  15x10 混合式演算法表現數據 
演算法  21 22 23 24 25 平均 
with setup times: An adaptive memory-based GRASP approach, European Journal of Operational 
Research, 183:100-114. 
Bagheria, A. and Zandiehb, M. (2011) Bi-criteria flexible job-shop scheduling with sequence dependent setup 
times-Variable neighborhood search approach, Journal of Manufacturing Systems, 30:8-15. 
Deb, K. (2001) Multi-Objective Optimization using Evolutionary Algorithm. Wiley, Chichester, pp. 322-330. 
Dorigo, M., and Gambardella L.M. (1997) Ant colony system: A cooperative learning approach to the traveling 
salesman problem, IEEE Transitions on Evolutionary Computation, 1:53-66. 
Feo, T.A. and Resende, M.G.C. (1989) A probabilistic heuristic for a computationally difficult set covering 
problem, Operations Research Letters, 8: 67-71. 
Fleurent C. and Glover F. (1999) Improved constructive multi-start strategies for the Quadratic assignment 
problem using adaptive memory, INFORMS Journal on Computing, 11(2):198-204. 
Garey, M.R., Johnson, D.S. and Sethi, R. (1996) The complexity of flow shop and job shop scheduling, 
Mathematics of Operations Research, 1(2):117-129. 
Ho, N.B. and Tay, J.C. (2008) Solving multi-objective flexible job shop problems by evolution and local search, 
IEEE Transactions on Systems, Man, and Cybernetics, 38(5): 1-12. 
Kacem, I., Hammadi, S., and Borne, P. (2002a) Approach by localization and multiobjective , systems, Man, 
and Cybernetics, 32(1):1-13 
Kacem, I., Hammadi, S., and Borne, P. (2002b) Pareto-optimality approach for flexible job-shop scheduling 
problems: Hybridization of evolutionary algorithms and fuzzy logic. Mathematics and Computers in 
Simulation , 60:245-276 
Kirkpatrick, S., Gelatt Jr., C.D., and Vecchi, M.P. (1983) Optimization by simulated annealing, Science, 
220:671-680. 
Lee, Y. H. and Pinedo, M. (1997) Scheduling jobs on parallel machines with sequence-dependent setup times, 
European Journal of Operational Research, 100: 464-474. 
Resende, M., and Werneck, R.F. (2004) A hybrid heuristic for the p-median problem, Journal of Heuristics, 10 
(1):59-88. 
Van Veldhuizen, D.A. (1998) Lament Evolutionary Computation and Convergence to a Pareto Front. In John 
R. Koza, editor, Late Breaking Papers at the Genetic Programming 1998 Conference, pages 221-228, 
Stanford University, California. 
Xia, W.J. and Wu, Z.M., (2005) An effective hybrid optimization approach for multi-objective flexible 
job-shop scheduling problem, Computers and Industrial Engineering, 48:409-425. 
Xing, L-N., Chen, Y-W., Wang, P., Zhao, Q-S. and Xiong, J. (2009) A knowledge-based ant colony 
optimization for flexible job shop scheduling problems, Applied Soft Computing 10(3):888-896 
Xing, L-N., Chen, Y-W. and Yang, K-W. (2011) Multi-population interactive coevolutionary algorithm for 
flexible job shop scheduling problems, Computational Optimization and Applications, 48 (1):139-155. 
Zhang, G.H., Shao, X.Y., Li, P.G. and Gao, L. (2009) An effective hybrid partical searm optimization 
algorithm for multi-objective flexible job-shop scheduling problem, Computers and Industrial 
Engineering, 56(4):1309-1318. 
黃文洲，「演化式演算法於多目標彈性零工型排程問題之研究」，元智大學工業工程與管理研究所，碩
士論文，民國 99 年。 
蘇海興，「門檻值搜尋法求解含完工期限下多目標彈性零工型排程問題」，元智大學工業工程與管理研
究所，碩士論文，民國 100 年。 
100 年度專題研究計畫研究成果彙整表 
計畫主持人：徐旭昇 計畫編號：100-2221-E-155-024- 
計畫名稱：GRASP 與演化式演算法於多目標彈性零工型排程之研究 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 1 1 100%  
研討會論文 3 3 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 3 100%  
博士生 0 1 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 3 3 100%  
研究報告/技術報告 0 0 100%  
研討會論文 4 4 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
