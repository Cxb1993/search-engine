 2 
植基於 Android平台之 OSGi車載資通訊系統設計與實作 
The Design And Implementation of OSGi Telematics System on Android-based Platform 
計畫編號：NSC 99-2220-E-366 -001 
執行期限：99年 8月 1日至 100年 7月 31日 
主持人：張晉源    執行單位﹕樹德科技大學 資訊工程系(所) 
 
中文摘要 
 
本篇論文提出以Google 開發之Android系統建構車載資通
訊平台，結合無線網路通訊技術與雲端伺服器系統，改善
目前車載資通訊系統封閉性架構與服務不足問題。本系統
架構以Thin-Client與雲端服務概念設計，將服務所需的複
雜運算交由雲端伺服器處理，並透過OSGi動態管理車載
系統服務，解決車載系統運算效能不足問題。 
關鍵辭：Telematics, Android, Cloud Service, Thin-Client, 
OSGi 
Abstract 
This paper present a telematics system constructed by 
Android systemdeveloped by Google, and it combines the 
communication technology of wireless network and the 
system of cloud service to improve the problems of closed 
architecture and lack of services. The system architecture 
designed in the concepts of “Thin-Client” and “Cloud 
Service”, and the complexity of computing the services 
required are addressed by the cloud server and management 
the services of telematics dynamically by OSGi.  
 
Index Terms:Telematics, Android, Cloud Service, Thin-
Client, OSGi 
1. 前言 
由Google所主導開發的Android作業系統於行動裝置
上搭載已越趨普及，由於Android系統高度可移植性，讓
Android系統不僅出現在手機裝置 (如：HTC Desire, 
Motorola Milestone, Samsung Galaxy…等)上，也被移植於
PDA (如：Dell Axim x51v、Sharp Zaurus…等 )與Netbook 
(如：Asus EeePC 701 )上。  
Android系統採用Open Source的GNU/Linux Kernel為
基礎架構，整合系統函式庫並提供以Java語言為基礎的
API套件庫與應用程式框架，解決傳統嵌入式Linux系統基
於GNU libc與相依函式庫(library dependencies)問題，提供
應用程式開發人員良好的開發環境。基於以上兩點，以
Android作為車載資通訊系統平台作業系統不僅解決嵌入
式系統中常見的相依函式庫問題，其所提供的應用程式框
架更可以讓服務應用程式快速被開發，使車載系統具備更
多的功能，讓車輛成為連接辦公室與家庭的橋樑。  
目前市面上現行之車載資通訊系統主要可分為兩類：
第一類為由車商所自行研發系統，如：Lexus G-Book、
GM OnStar、Luxgen Think+…等；第二類為市面上所販售
導航機系列，如：TomTom GO、MiTac Mio…等。此兩類
車載資通訊系統功能雖然完善，但其封閉式的系統架構，
往往造成系統更新與除錯速度過慢，而系統缺少強大後端
平台的支援，使應用程式種類單一而缺乏，進而造成使用
者減少使用車載資通訊平台的意願，使車載資通訊系統淪
為娛樂播放設備，浪費所能提供駕駛者之輔助功能。  
而現今車載資通訊系統硬體設備方面，所採用處理器
規格主要以低效能複雜指令集 ( CISC ) 處理器 (如：Intel 
Atom, VIA C7 ) 或精簡指令集 ( RISC ) 處理器 ( 如：ARM, 
MIPS )，無法提供高效能運算，使車載系統所能提供之服
務或功能有限。因此，如何使車載系統具有更高的開放
性、更多的服務支援與提高車載系統的效能將是本研究探
討重點。本計畫報告書後續章節的安排如下：第二章將探
討目前市面上所擁有的車載資通訊系統，第三章為在計畫
中所會使用到的重點技術，第四章為整個平台的實作流程
與結果，結論與未來發展將在第五章中描述。 
2. 文獻探討 
 
目前市面上採用Android系統作為車載資通訊平台已
經成為趨勢，許多硬體廠商及車商也相繼投入Android系
統 的 研 發 。 中 國 軟 體 公 司 誠 邁 科 技 (ArcherMind 
Technology)與中國硬體廠商合作開發Android車載導航系
統，配備美國Marvell Technology Group 所採用的ARM核
心處理器，配備畫素800x480的7吋螢幕。目前已實際裝置
於汽車上並開啟販售。  
 
圖1. 車載導航系統 
(圖片來源：http://www.newmaker.com/news_7 
4691.html) 
 
除了誠邁科技之外，德國汽車電子零組件供應商
Continental也發表一款專為汽車設計的Android 網際網路
平台AutoLinQ，提供駕駛者網路連線的能力。而該公司
 4 
行環境主要是由core libraries與Dalvik virtual machie組成，
其core libraries提供了大部份的Java core libraries功能，而
Dalvik virtual machine是改良過的Java virtual machine，主
要執行.dex檔。  
 
 應用程式框架：  
提供Android 應用程式API 框架與抽象層來存取系統
資源與使用者介面。  
 
 應用程式：  
Android 應用程式皆使用 Java 程式語言編寫並基於
Android系統的 API建構。 
 
3.2. Open Service Gateway initiative ( OSGi ) Platform  
OSGi主要定義一個開放性平台，能讓遠端軟體服務
供應商所提供的應用程式服務，能視使用者需求而隨時下
載至用戶端的閘道器上，並自動安裝與執行。OSGi 架構
主要由Framework、Bundle和Service所組成：  
 Framework： 
建構於 Java Virtual Machine上。 
 Bundle：  
執行於OSGi Framework上的應用程式。  
 
 Service：  
Bundle所 export或 import的介面服務。 
 
圖 6. OSGi架構圖 
 
當 OSGi 的 Bundle被啟動時，將其 Service註冊到
OSGi Framework的 Service Registry內提供服務，其它 
Bundle可於相同的 Service Registry中找尋所需要的
Service 物件來使用，如圖 7所示： 
 
圖 7. Service Registry 
 
3.3. OSGi Platform on Android  
 
由於 OSGi Framework是執行於 Java Virtual Machine
上，而 Android系統所使用的 Dalvik Virtual Machine所執
行的檔案格式為.dex 檔，不同於 Java 的.class 檔。因此，
若要將 OSGi Framework 能順利執行於 Android 系統上，
必須先透過 Android 所提供之工具程式進行轉換。如圖 8
所示： 
 
圖 8. Android檔案格式轉換示意圖 
轉換完成後，須經過 Dalvik Virtual Machine的指令執
行 OSGi Framework。其指令格式為： 
 
圖 9. DVM執行 OSGi Framework指令 
執行指令後，OSGi Framework 即可運行於 Android 
系統上。 
4. 系統設計與實作 
4.1. 系統設計  
本計畫以 Android 系統建立車載資通訊平台，並透過
OSGi 作為車載服務之核心架構。為使 OSGi 能作為一個
Android Service常駐於 Android系統中，OSGi啟動指令製
作成 Linux batch 檔，並加入 Android 系統中的”init.rc”檔
案中啟動。其系統架構圖(System Software Stack)如圖 10
所示： 
 6 
在本計畫中撰寫 OSGi服務包，並透過此服務包將已撰寫
好的系統錄影程式啟動，並開始執行錄影功能；圖 15為
OSGi服務包程式碼。 
 
圖 15.OSGi服務包程式 
完成錄製後即可將檔案從系統中抓取出並利用播放器播
放，本計畫使用 Ubuntu內建播放器播放，如下圖 16所
示。 
 
5. 結論與未來發展 
本計畫主要設計與實作車載資通訊平台，並結合
Android 系統與 OSGi 服務平台運行車載資通訊服務，透
過使用 OSGi 作為車載資通訊平台系統服務核心，解決傳
統車載資通訊系統平台封閉性架構，提供開放性架構與標
準供服務開發商開發，提升車載系統服務的多元性。 
在實作方面，主要困難點在於 Linux Kernel 移植部
分，由於 Linux Kernel從 2.6.22版本升級至 2.6.25中，版
本的差異常造成編譯時期錯誤，此方面的除錯須耗費不少
時間。Android系統中由於使用的 Shell與一般嵌入式系統
常用由 BusyBox 所編譯的 Shell 有極大的出入，Android
所使用的 Shell 經由 Google 重新設計，是一極輕量型的
Shell，在 C函式庫部分也有著與 GNU Library C不同的輕
量化 Bionic C取代，在程式執行上也常出現許多錯誤。本
系統目前所執行的編碼執行檔仍是使用 glibc 函式庫，未
來的研究方向將可朝向使用 Android的 Bionic函式庫進行
編譯。 
由於本系統採用基於 GPL授權的 GNU C的編譯器進
行 DaVinci 程式相關編譯，未來可透過使用 Android 所提
供基於 BSD授權的 Bionoc C編譯器進行編譯。未來亦可
結合雲端伺服器系統，將大量運算交予雲端伺服器進行，
達成車載資通訊系統 Thin-Client 架構，提供車載系統輕
量化平台。 
References 
[1]張騰文，2009，Android/OSGi平台於遠距車載網路管理
應用，東華大學資訊工程學系碩士論文 
[2]鍾文昌，2009，Android作業系統移植之研究與實現，
台北科技大學資訊工程學系碩士論文 
[3]陳世英，2007，台灣地區車載資通訊系統採用行為之
研究，大同大學資訊經營研究所碩士論文 
[4]林建志，2008，基於智慧型碰撞預警之多功能數位車
用控制台，成功大學資訊工程學系碩士論文 
[5]林國弘，2009，「Android在ARM Versatile Soc平台移
植實例」，Android Embedded System技術研討會 
[6]韓超、梁泉，2010，深入淺出Android系統原理及開發
要點，博碩文化，台北 
[7]黃永順、李坤敏、吳文鈴、林文瑋, “OSGi 開放式服
務平台技術家用閘道器與智慧型車輛之應用”, 工業技術
研究院電腦與通訊工業研究所 
[8]D. Marples and P. Kriens, "The Open Services Gateway 
Initiative: An Introductory Overview," IEEE Commun. Mag., 
vol. 39 no. 12, Dec. 2001. 
[9]Empower Technologies，
http://www.empowertechnologies.com/edk6446.html 
[10]Android官方網站，http://www.android.com/ 
[11]Android Open Source Projcet，
http://source.android.com/ 
[12]Android論壇，http://www.android1.net/ 
[13]AutoLinQ，http://www.autolinq.de/ 
[14]OSGi VEG，http://www.osgi.org/VEG/HomePage 
[15]COMPOTECH Asia，
http://www.compotech.com.tw/articleinfo.php?cid=35&id=11
193 
[16]LUXGEN Think Ahead, from:,http://www.luxgen-
motor.com.tw/ 
[17]交通部交通統計資料網頁http://www.motc.gov.tw/ 
 8 
與應用服務的開發，預期將對本國汽車資訊產業具有顯著的貢獻與影響。 
本計畫未來的發展性主要是實作完成原有的設計與應用服務，提供本國車載資通訊產
業另一條產品發展的契機，也可以解決產業進入此一技術的技術障礙與門檻。 
 
 
 
 
 
 10 
This is why the users are not really willing to use the Telematics Systems and the Telematics 
Systems becomes a media entertainer which wastes the supportive service for car drivers. 
 
For the Telematics Systems’ hardware, most of them use the CISC processor such as Intel Atom, 
VIA C7) or RISC processor like ARM, MIPS. The defect is that it cannot provide high 
performance and it limits the numbers of service providing. Thus, the know-how to make 
Telematics Systems more open, to provide more services on supporting and to enhance the 
Telematics Systemis the main topics we focus on. 
 
2. Literature Review 
Using Android system becomes the trend in Telematics Systems, many car salesmen and 
hardware manufacturers are also research and development their Android system. The Chinese 
software company ArcherMind Technology and Chinese hardware manufacturers to develop the 
navigation system of Android cooperatively [6], they uses the CPU of ARM core and 7-inch 
screen with 800x400 pixel. The device has been installed in the car and began to sell(Shown in 
figure 1) 
 
Figure 1 ArcherMind Technology Android System 
(Resource: http://www.newmaker.com/news_74691.html) 
 
The Car electronic component suppliers in Germany also made a car designed specifically for the 
Internet platform of Android – AutoLinQ [7](Shown in figure 2), provide the driver the ability to 
network connectivity. They are also expected to release the development kit for AutoLinQ, and 
AutoLinQ not only to provide vehicle navigation, but also provide to connection with care 
remotely, and they will provide other Internet Service in the feature. 
 12 
 
Figure 4Therelationship between telematics and cloud server 
 
3.1 Android System 
Android was developed by Google and OHA (Open Handset Alliances), and it is a software stack 
of the Operating System, middleware and applications [2,3] (Shown in figure 5). 
 
Figure 5 Android software stacks 
 
The architecture of Android system is divided into four levels: 
 Layer 1: Linux kernel and Drivers 
The major components of layer 1 are composed of standard Linux kernel, Android 
system core driver and Android device driver. It includes Binder IPC, display 
drivers, audio drivers, camera drivers, input device drivers, Wi-Fi drivers, 
Bluetooth drivers, power managers.  
 14 
 
When the OSGi Bundle are stared, the bundles will registry the service information to the Service 
Registry of OSGi framework, other bundles can search the services in the same Service Registry 
and import the Bundle to use (Shown as figure 7) 
 
Figure 7 OSGi Service registry 
 
3.2 OSGi Platform on Android 
Because the executable file format between OSGi Framework and Android system are different, 
we have to conversion the OSGi Framework by the conversion tool provided by Android if we 
want to execute the OSGi Framework on the Android system (Shawn in figure 8) 
 
Figure 8the conversion step 
 
After the conversion is complete, we have to execute the command of Dalvik virtual machine. 
The format of command shown as follow: 
 
Figure 9The command format of start OSGi Framework 
 
After the command s complete, the OSGi framework executed on the Android system. 
 
4.System Design and Implement 
4.1 System Design 
This paper proposes a telematics interoperability platform built by Android System, and using 
OSGi as core architecture for providing telematics services(Shown as figure 10). For the purpose 
of using OSGi as an Android Service to reside in the Android System, we decide to create a 
Linux batch filecontent with OSGi “START” command and add the batch file name into the 
“init.rc” in the Android System (Shown as figure 11). 
 16 
 
Figure 13Thecooperation model between Android and OSGi 
 
As the paragraph above, to offer the ability of available OSGi services in Android System, we 
decide to design an AO Bridge (Android-OSGi Bridge) between Android System and OSGi 
framework to communicate each other (Shown in figure 14). 
 
Figure 14 Android and OSGi bridge 
 
AO Bridge including 3 main functions(Shown in figure 15): 
1. To create an Android Package corresponding to export bundle and install in the 
Android System. 
2. To retrieve the Android Package START command exported by OSGi. 
3. Service Bundle become available in Android System   
 18 
 
4.2 System Implement 
In order to prove the feasibility of the architecture that we proposed, the telematics platform 
system is chose to be built on the embedded development kit EDK6446 by Empower 
Technologies and porting Android 2.1 version as its operating system (Shown in figure 16). 
 
Figure 16Android on EDK6446 
 
OSGi platform choose Apache Felixthe Apache Felix is chose to be out OSGi Framework, and be 
executed on the embedded developed kit of Android System after it is converted(Shown in figure 
18).   
 
Figure 17 Apache Felix OSGi Framework On Android 
 
To execute the Android Application that is implemented by this project on the Android platform, 
and the OSGi service is started by using AO-Bridge (Shown in figure 19). 
 
Figure 18Android application screenshot 
 20 
出席國際學術會議心得報告 
 
此次參加的論文研討會為 e-CASE & e-Tech 2011並於日本東京舉行，主要為國際性論
文研討會議，主投稿主題包含：e-Commerce、e-Administration、e-Education、e-Society和
e-Technology。議程中有許多來自世界各國的研究學者投遞此次論文研討會，而本次主要
以「An Architecture Based on Android Platform for Telematics System」投稿 e-Technology主
題。研討會第一天主要為簽到日，從下午開始進行簽到並領取會議論文手冊，並於晚上舉
行餐會。在餐會上，主要介紹此次大會的主辦單位相關人員、主席與評審，並頒發本次論
文研討會中最佳論文獎，其中不乏各國優秀的研究學者，見識到許多不同領域的研究主
題。 
 
 在四天的會議中，本計畫所發表的論文安排於第三天發表。在本論文發表場次中，
本人同時亦邀請擔任該場次主持人，主持本場論文的發表與控制發表的流程。發表會後並
與語彙相關論文發表作者進行相關技術討論，獲得不少的建議，提供做為計畫執行的參考! 
 
 此外本次對於研討會的舉辦方式與場地流程的安排有進一步的認識，可以作為本系
或本人主辦相關類似會議的參考! 
99 年度專題研究計畫研究成果彙整表 
計畫主持人：張晉源 計畫編號：99-2220-E-366-001- 
計畫名稱：結合雲端運算之創新車載資通訊系統與應用服務平台之研發與實作--子計畫一:植基於
Android 平台之 OSGi 車載資通訊系統設計與實作 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 1 1 100%  
研討會論文 2 1 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 4 4 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 0 0 100%  
研究報告/技術報告 1 1 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
