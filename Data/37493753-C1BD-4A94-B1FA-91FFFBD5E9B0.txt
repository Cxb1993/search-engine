中文摘要 
本子計畫設定之目標在研究多媒體存取與網路資源管理間之各議題並實現於
DiffServ/MPLS 網路上進行包括聲音、影像、圖文等之互動式多媒體存取服務技
術。本文就本子計畫執行完成之四項成果進行報告: (1) 建置多媒體播放系統 (2) 
發展多媒體服務之session移動性技術  (3) 開發以SIP 為基礎之多媒體服務
session 管理與允入控制策略與介面管理機制 (4) 開發適於DiffServ/MPLS 核心
網路之多媒體服務模型，並進行效能評估。本子計劃之執行對於理論研究,系統
實現與人員訓練上都有成果。其中共完成之直接與間接之研究成果
(2004.9-2006.10) 包括2篇SCI, 11篇國內外會議論文, 9篇碩士論文，其中session 
移動性技術更得到2006教育部通訊競賽之研究所組佳作。 
 
 
關鍵詞: MoMPLS，多媒體伺服器，多媒體傳輸，資源使用管理，服務品質保證 
策略，具內容感知安全性網路。 
第一章 第一期計畫目的與成果回顧 
隨著網際網路（Internet）及無線通訊技術的蓬勃發展，人們對於網路的需
求，不再只是把它當作資料交換的工具而已，而是當成生活的一部分。因此，近
年來網際網路應用 (Internet application) 越來越多元化，已從早期單純的文字、
數據資料傳遞，演進到包含圖形、聲音與影像等的多媒體新型態應用，例如：語
音電話 (如: VoIP, Voice over IP)、影像電話、視訊會議、隨選視訊 (Video on 
Demand, VoD)…等多媒體影音服務，都廣泛被開發及使用。由於多媒體資料的
傳輸型態，直接影響對網路品質的要求，如：封包延遲 (Packet Delay)、延遲變
異量 (Jitter)、封包遺失 (Packet Lost) 等要求，使得網路技術的開發除了加大頻
寬以符合多媒體資料的傳輸要求之外，其設計目標已拓展至對服務品質 (Quality 
of Service, QoS) 的支援，除此之外，如何達到 QoS 保證也已成為新一代寬頻網
路基礎建設之發展重點。 
 
目前常用的互動式多媒體應用有網路電話 (VoIP)、隨選視訊 (VoD)、網路
電台 (MMS, Microsoft Media Service 或 Realaudio)…等等，這些多媒體應用對
於網路之品質要求尤其重視。然而，目前網際網路對於網路服務品質並無支援，
因此除了逐年不斷增加線路頻寬外，另一解決方式，則是透過代理伺服器 (Proxy 
Server) 將資料流導向專屬路徑，以避免與其他不需 QoS 的封包阻塞於壅塞路
徑上。但現有代理伺服器解決方案，並無記錄每條資料串流之傳輸狀態 (Soft 
State)，以供網路資源的有效管理，因此往往會造成網路資源的浪費。另一方面，
使用者對於通訊安全與資料保密之要求日益增加，因此互動式多媒體應用如何與
具有 Content-Aware Secured 之網路上傳輸互連，也將成為重要的網路核心技術
之一。 
 
本 計 畫 之 目 的 ， 即 在 支 援  Content-Aware Secured 與  QoS 之 
Diffserv/MPLS 網路上，研究互動式多媒體存取與網路資源管理之議題。其中各
項研究與其他各子計畫相關配合如圖 1 所示，我們將使用 SIP 協定來整合各系
統使成為一個以 SIP Protocol 為基礎之多媒體資源代理器以進行多媒體高速網路
通訊(在本文中所提到之 SIP Proxy 即包含 Multimedia Proxy 之功能實現)，並進
行使用者與 Diffserv/MPLS 網路資源之協調，並探討資源使用管理 (Resource 
Usage Management) 、服務品質管理 (QoS Management)、服務品質保證策略 
(QoS Guarantee Policy)、使用者網路存取等議題。 
 
 4
 
 
 
3. 多媒體應用互動服務與各子計畫整合平台建置規劃 
 
我們除了將建構以 SIP 為 Signaling 的通訊網路與服務外，本計畫更將與各
子計畫整合以展示各項高品質服務。例如與子計畫一 MPLS 高速網路整合可以
達成高品質之多媒體通訊要求，與子計畫二安全機制整合可達成具有安全通訊機
制之各項多媒體通訊應用，透過與 Content Agent Processor (CAP) 之互動，達到
使用者資訊隱私與資料安全之功能。與子計畫三網路資源管理整合，透過與 Call 
Control Agent (CCA)之互動，可達成各項服務品質保證之策略，並探討網路資源
之協調，除了可以滿足網路品質要求外，亦可以實驗研究當為多媒體內容提供之
Delivery Service 時如何來存取 Diffserv/MPLS 網路的資源管理方法與各項 QoS
保證策略，以達到服務品質保證與網路資源有效使用之目標。 
 6
因此在 media server 中所要播放的檔案格式也是我們所要考慮的。 
Media server 的工作則是負責提供串流媒體，來測試我們所開發的軟體，
是否能夠編解碼正確，影像在傳遞過程中確保錯誤為傳輸媒體的 noise 所造成，
而非 media server 本身及播放器程式，所以在其他的計畫當中，如果需要使用
到 media server 的部份，也可由這台主機提供。實驗的環境所提供的 media 
channel 為區域網路所使用的 Ethernet，由於實驗環境單純，所以 delay 與
packet lost 並不高，能夠很平順的播放完所測試的影片，未來我們會測試在不
同環境，如無線網路的傳輸上，以將 media 傳送到一般家用 ADSL 等環境上來測
試其效率與效能。 
播放器實做的介面如圖 3，其中包含播放主畫面，以及控制播放的按鈕。在
這邊逐一介紹，我們利用 URL 網址選擇所要播放的媒體，然後再按下方播放的按
鈕即可開始播放。播放進行中可按下暫停，亦可停止這個 stream 的播放。在這
邊要注意的是在控制鈕與主畫面的中間有個可以拉動的 bar，可以隨時控制所要
播放的畫面。 
 
圖 3   播放器介面 
 
此外播放器的最下方所顯示的兩個方塊中，其中左方的方塊，可控制壓縮的
格式，而右方的方塊則是來控制bit rate，因為之後的計畫會使用到Distributed 
Video Coding 的技術，所以保留這個選項，供日後研究用途，而我們現在所測
試播放的都是採用預設值來播放。 
 8
Gateway)。 
 
圖 4：本技術欲提供服務之示意圖 
2. 技術研究目的 
現階段有許多針對可攜式串流服務的討論和研究，但對於小型企業網路或家
庭網路，卻未看見一有效且實際的解決方案被提出，而本技術即是研究在這樣的
網路環境下如何有效的提供可攜式的串流服務，並加以實現。此外，技術中還加
入了分享的概念，提出 Multicast + Peer-to-Peer 的機制，讓使用者人數不在受限
制，本技術系統架構中的智慧型閘道器，將是一嵌入式系統，再配合其他裝置的
開發，來完成整個技術。 
 
圖 5：系統網路環境架構 
本技術主要利用一智慧型閘道器，針對由外部網路進來內步網路的多媒體串
流，提供 Session Mobility + Mulicast + Peer-to-Peer 的服務，以下針對各項開發的
裝置及其功能做介紹： 
(1)閘道器Gateway，包含 3P2S Agent和Layer 3 Switch Router兩大主要功能： 
 10
以利用現行的網路和感測技術來知道每個裝置的網路狀況和運算能力(顯示螢幕
的大小)，然而要利用閘道器來幫忙做轉碼的動作似乎是不可行的，因為轉碼需
要的運算量很大，如果要用其他機器幫忙做又會造成時間上的延遲，這樣看來轉
碼似乎是不可行的，所以在技術中我們假設視訊的資料是採用了 Scalable Video 
Coding(SVC)的編碼技術，這樣閘道器當知道每個裝置的能力之後，只需從多媒
體串流中選擇其所需要的部分即可。 
目前本技術著重於 Home Gateway 的開發，利用 Intel IXP425 Network 
Processor 為核心的平台來實現，搭配 Montavista Embedded Linux 和 Intel IXP400 
Software Codelet，來完成整個技術最核心的部份。 
3. 技術重要貢獻 
本技術的系統環境，採用嵌入式系統為 Intel IXP425 Network Processor 為核
心的平台，利用 ADI Engineering 公司所生產 Coyote Gateway Reference Design 
Based on the Intel IXP425 Network Processor，此平台提供兩個 SLIC/CODEC 電
路，給家用電話；四路 10/100 Mbps Ethernet port 給家中網路設備使用；一路 ADSL 
PHY 提供對外 ADSL 服務和連接 PSTN 網路，介面為 RJ-11；亦有一路 Ethernet 
PHY 提供對外的網路服務，介面為 RJ-45。另外，此硬體提供兩個 Mini PCI 插
槽，可用來作為無線網路基地台使用，這些硬體所支援的功能，都非常適合本技
術的利用與開發。 
先前本實驗室的研究團隊已在 Intel IXP425 的發展平台上，設計與實作一家
庭整合型語音閘道器 (Home Gateway)，提供外部電話網路 (Internet、PSTN) 和
家庭內部電話 (POTS Phone、SIP Phone、H.323 Phone) 之間轉接通話服務，並
提出 SIP-Based 內部共同信令的概念，降低電話信令整合的複雜度，以更簡單
更有效益的方式解決信令互連相容性問題；整合 ENUM 服務，希望能在不改變
使用者習慣下，以電話號碼撥打方式打電話，並透過 ENUM 服務功能，提供使
用者往後維護個人電話號碼轉換資訊等功能，此研究技術名為『Integration of 
ENUM-Based PSTN/VOIP Phone Gateway Embedded in ADI Coyote』。此研究成果
已在去年六月發表於教育部九十三學年度大專校院通訊科技技術製作競賽，並獲
入圍肯定。其中此屆比賽本技術的一名參賽的隊員-邱志偉 同學，也參與了上次
的比賽，相信透過他的經驗也將大大的幫助了本技術的完成。 
本實驗室秉持近多年來對 VoIP Gateway 相關研究之經驗，再者，結合多媒
體視訊串流技術已成為近來興起的潮流，於是我們此次競賽主題主要利用 
IXP425 當作一個處理多媒體串流服務的平台，對小型區域網路和家庭網路的使
用者，提供多媒體串流的 Session Mobility，並加上 Multicast 配合 P2P Streaming
的機制，來擴大使用者人數。 
 
 
 12
 圖 6：SIP Session Mobility 的訊息流程圖 
接下來則是討論，在本技術中的 Session Mobility 與上述的 Session Mobility
的做法有何不同，並搭配 Multicast 功能所帶來的好處與影響，在這先簡單的說
明，本技術的 Session Mobility 是結合了 Mobile IP 的好處，就是由 Home Gateway
幫忙轉送封包，而不需重建 session 而造成不必要的延遲。 
 
圖 7：傳統 Cross device 流程圖 
首先，讓我們來想像一個一般家中的情況，客廳有台能提供 IPTV 服務的電
視(dev1)，並且有台有網路功能的 PDA(dev2)，一開始有人從客廳的電視觀賞體
育節目，但後來想移動到家中的另一個位置，但移動之後的地點沒有任何可接收
IPTV 服務的設備，但卻想繼續收看體育節目，因為想將畫面轉移至另一攜帶式
的裝置 PDA，以便可繼續收看節目。 
如圖 7 所示，為傳統 cross device 時的 session mobility 流程圖，一開始 dev1
 14
的服務。 
當使用者想從原本的客廳移動到另一處沒有可提供 IPTV 服務的裝置的位置
時，可將原本傳送給 dev1 的 streaming data 轉至 dev2 (PDA)，以繼續提供使用者
服務。當使用者攜帶 dev2 時，dev2 上的感應裝置將偵測到使用者身上的 sensor， 
並且從使用者上的 sensor 得知該使用者之前已要求一個尚未結束的 IPTV 服務，
再將此訊息通知 HG，告訴 HG 建立該 session 的使用者已經移動至 dev2 所服務
的範圍，之後 HG 會修改之前所紀錄的資訊，如表 3。dev2 不需再對外部的 server
重新建立 session，減少重建 session 造成的 delay，之後 HG 只要收到 session1 的
streaming data 都會轉送至 dev2，達到 cross device 的服務。 
此外，若使用者想在 dev2 上收看原本的節目但卻不想將原本 dev1 上的節目
中斷，也就是說 dev1 繼續收看原本的節目而讓 dev2 也能收看同節目或者說使用
者想將 dev2 上的節目分享給其它 device(dev3)，此時，透過我們所提供的 multicast
即可達到。首先，dev2 會通知 HG 要求 multicast 給 dev3 的服務，HG 收到此通
知之後會紀錄此 multicast 的訊息，如表 4。之後所有要送給 dev2 的 streaming data
也會轉送至 dev3，讓 dev3 可以享受與 dev2 相同的服務但又不用重建 session 也
不會增加對外的頻寬造成多餘的負擔。 
由於我們所提供的 cross device 及 multicast 可以省去重建 session 的 delay 但
是相對地，由於我們必須在 HG 檢查封包至應用層才能知道那些封包是屬於
RTSP 或 SIP 的封包而需要轉送，這些察看封包至應用層的動作會耗費大量的時
間而造成 performance 的降低，因為我們在一開始收到 device 要求 streaming 的服
務時，會啟動一個學習 IP:port 的功能，根據 HG 所紀錄的 session maintain table
中的 dest ip:port 以及 src ip:port 可知封包是否為需要轉送的封包，因此當下層收
到封包並在檢查後確定符合轉送的條件時，立即轉送封包而無需再將封包往上層
送，此學習 ip:port 的機制可以加速轉送而提高 performance。 
 
表 1. device IP and capacity 
 
表 2. HG session maintain table 
 
表 3. HG session maintain table, cross device 
 16
為 Seed。在任何 Device 成為 Seed 之前，必須向 Tracker 告知此媒
體 P2P 機制的啟動。當一個 Stream 的所有需求端可能因為處理效
能不足以成為 Seed 時，Tracker 可以成為此 Stream 的 Seed。 
Peer 
當 Tracker 向所有裝置廣播一個媒體已經啟動 P2P 機制的訊息之
後，所有對此媒體有需求的裝置都稱為 Peer。而 Peer 不能再向 HG
提出這一媒體的請求，必須向 Tracker 申請該媒體的 Seed 位址。然
後轉向 Seed 申請該媒體。 
B. 運作流程 
圖 9 表示了在一般情況下，此 3 種元件的作用流程。(1)Dev 1 向
HG 要求建立一個新的 Session。(2)HG 同時將此媒體轉送給要求端與
Tracker。在此時 HG 可決定是否將此 Stream 的 P2P 機制啟動，或可由
Dev 1 提出申請，當 P2P 啟動之後，Dev 1 即成為此媒體的 Seed。
(3)Tracker 將廣播 P2P 機制啟動的訊息給所有 Device。(4)當 Dev 3 需要
此媒體時，我們稱它為 Peer，且根據 Tracker 的廣播內容得知該媒體已
經啟動 P2P 機制，必須直接向 Tracker 索取 Seed 的位址。(5)Tracker 估
計 Dev 1 可以繼續承擔 Seed 的腳色，將 Dev 1 的位址告知 Dev 3。(6)Dev 
3 根據位址向 Dev 1 請求該媒體。(7)Dev 1 提供該媒體給 Dev3。則 Dev 
3 對此媒體的傳輸上，皆不會造成 HG 的額外負擔。 
 
圖 9：P2P Streaming 範例之訊息溝通示意圖 
 18
ADI Engineering 公司所生產 Coyote Gateway Reference Design Based on the 
Intel IXP425 Network Processor，此平台提供兩個 SLIC/CODEC 電路，給家用電
話；四路 10/100 Mbps Ethernet port 給家中網路設備使用；一路 ADSL PHY 提供
對外 ADSL 服務和連接 PSTN 網路，介面為 RJ-11；亦有一路 Ethernet PHY 提供
對外的網路服務，介面為 RJ-45。另外，此硬體提供兩個 Mini PCI 插槽，可用來
作為無線網路基地台使用，這些硬體所支援的功能，都非常適合本技術的利用與
開發。 
 
圖 11：本系統開發平台之硬體架構圖 
(2) Layer 3 Switch Router 的開發 
Intel IXP425 開發板上提供的 Ethernet Interface 中，其中有四個 LAN Port 與
一個 WAN Port。四個 LAN Port 共用同一張 Ethernet 網路卡，而 WAN Port 則是
自己獨立一張網路卡。本技術利用 Intel 提供的 IXP400 Software Codelet 實作出
利用軟體支援的 Layer 3 Switch Router。而我們主要利用 IXP400 Software Codelet
中的 Ixp400EthAccCodelet、Ixp400EthDBCodelet 與 Ixp400EthMiiCodelet 三支 API
來進行開發。 
 20
Router 中的 Mobility/Multicast Dispatcher 與 3P2S Agent 的溝通。 
首先有多媒體串流的 Session 要被服務時，會經由 Layer 3 Switch Router 接
收並送至上層的 3P2S Agent 做服務確認與紀錄，一但確定之後，則告訴
Mobility/Multicast Dispatcher 有哪些封包是需要處理的，自此之後所有要處理的
封包都將在 Layer 3 Switch Router 功能方塊中被處理裡完畢。另外，多媒體串流
的資料都會在 Layer 3 Switch Router 被處理，而不會送到上層的 3P2S Agent。 
(4)軟體發展系統架構 
在我們的技術中，Layer 3 Switch Router 我們利用 Intel IXP400 Software 
Library 所提供的 Codelets 的 API 來做修改，自行開發我們要的功能。在軟體上
我們套用了 MontaVista 3.10 與 Intel 公司所 Release 出的 IXP400 Software 
Version1.3 軟體。而 3P2S Agent 也分別利用 oSIP Libaray 與 oRTSP 來進行相關
功能的程式開發。 
 
圖 14：軟體發展系統架構圖 
圖 14 為我們 Home Gateway 軟體發展系統架構圖。有關上下層的部分，我
們皆採用現行 Open Source 之程式，其中包含：oSIP Library、oRTSP Library、
Intel Ixp400 Software Library。下面將述敘各功能方塊和這些軟體的搭配： 
1. Layer 3 Switch Router。Intel IXP400 Software 提供的 Codelets Library，
我 們 利 用 其 中 的 Ixp400EthAccCodelet 、 Ixp400EthDBCodelet 與
Ixp400EthMiiCodelet 三支 API，來實現 Software 的 Layer 3 Switch 
Router，這都將在 Montavista Linux 中的 Kernel Mode 來完成。 
 22
器，來提供多媒體串流的服務。由於近年來網路多媒體應用的盛行，其中 VoIP
和 IPTV 是現階段網際網路服務中，讓內容提供商、軟硬體製造業者與使用者都
有著高度的期待，而人們要的不只是將原有的電信或電視服務換到網際網路中而
已，他們想要更有彈性地使用這些服務，可以不受地點的限制，也不會因為一些
小事而打斷他們的使用，所以就有了可攜式串流服務的提出，並配合網路多媒體
分享的概念，也因此有了本技術 Session Mobility + Multicast + P2P Streaming 服
務的提出。 
在技術創新部分，我們所提供的服務整合到 IXP425 的平台上，利用此平台
在多媒體串流的 Session Mobility 服務加入了 Mobile IP 的優點，使得當啟動
Session Mobility 服務時，不必重建 Session，造成過多的延遲，另外，因應小型
企業網路或家庭網路這樣的私有網路環境，我們提出了 Multicast 配合 P2P 
Streaming 的機制，既可排除使用人數的限制，又可不必擔心這樣的 P2P 機制造
成網路的癱瘓，而這些都是我們技術的創新。 
在本技術裡我們最大的貢獻在於為像家庭或小型企業的網路環境，提供有效
的可攜式串流服務，並配合 Multicast 與 P2P Streaming 的機制，整合於 Embedded 
System 的閘道器上，相信在不久未來，「Portable/Peer-to-Peer Streaming Service」
能夠提供人們生活更多的便利和樂趣，也提供未來多媒體串流服務一個很好的例
子。 
 24
 圖 15 SIP-based VoIP over MPLS Architecture 
 
I. OAM(Operation, Administration, Monitoring)模組: 
CCA(Content Control Agent): CCA 的工作是協調網路傳輸的資源分配與傳送
其內容，在網路資源的管理是仲裁 CAP 和使用者之間的。在這邊是當作
gateway controller 來控管 edge LSRs 的頻寬使用狀態與 LSP 的分配情況，因
此 CCA 要在 ingress LSR 設定分類法則(Classified Rules)，使得封包可以分
級傳送而不會造成網路的壅塞。當使用者需要網路資源時，CCA 會決定如
何滿足使用者的需求，並要求相關的 QoS 參數，請 NRB 釋放資源。  
NRB(Network Resource Broker): NRB 的工作是網路資源監控與管理，管理
MPLS 網路的頻寬，利用 OSPF-TE 做為路由協定，取得 MPLS 拓樸的資料，
再利用 CSPF (Constraint Shortest Path  Function)演算法，算出滿足使用者的
需求與最短路徑，再透過 RSVP (Resource ReSerVation Protocol)來建立有保
留頻寬的 LSP，透過這種方式可以避免某些網段壅塞而其他網段卻使用率很
低的現象發生。而採用 NRB 的網管軟體是可以監控 LSP 的 SNMP。 
 26
(2) SIP Registration 和 Signaling 程序 
 我們遵循 RFC 3261 並依照著網路環境中的元件，並提出一套適合本計劃的
Registration 與 Signaling 的程序。 
 
A. Registration 程序 
 任何一台在 SIP 網域下的機器開機或重新啟動都需要經過論註冊的程序，
Registrar 提供一個 Discovery 的機制，透過註冊過的 SIP-URI 找到機器進行 SIP
相關的服務。SIP Server 亦可做為 Location Server，提供 Address bindings 對應接
收到的 SIP-URI。 
 以本計劃中的元件來描述REGISTER Message，回覆 200 OK給欲註冊的元件
的流程路徑[10][11]。假設Caller (UAC)想要與Callee (UAC or UAS)初始化一條
Session，Caller和Callee都必須向註冊機(Registrar)做註冊的動作，在此SIP Server
是當註冊機的角色，所以SIP網域下的每一台機器位址它都必須記錄，這樣才能
透過SIP Server做進一步的多媒體存取服務。Caller或Callee會從本地端的Proxy 
Server取得SIP Server的位址，並且本地端的Proxy Server將會保持註冊的狀態直
到回報安全連線狀態給Security和OAM模組。REGISTER Message被CAP分析封
包的安全性問題，假設封包是安全的，Message Flow才會轉送到SIP Server。最後
SIP Server會傳回 200 OK給Caller或Callee以確定註冊程序成功。註冊成功之後，
註冊的資料會暫留在SIP Server的記憶體，當成定位服務(Location Service)詢問的
元件，發揮SIP user location的功能。 
 
B. Signaling 程序 
 SIP Signaling程序屬於應用層面的三方交握(three-way handshaking)。包含了
三道次序:INVITE、200 OK、ACK，忽略重要性較低的 100 Trying與 180 Ringing
訊息，在圖將會完整地秀出本計劃完整的訊息流。 
I. INVITE 訊息流: 當一個使用者(Caller)想要與另一方的做用者(Callee)做
VoIP 的語音通話，選用 SIP-based MPLS 網路。Caller 端會送出 INVITE 的
要求給本地端的 Proxy Server，因為 Proxy State 是設定 Stateful 的，所以當
Proxy Server 收到此訊息，就會解析 SIP header 的欄位，並記錄下來，最重
要的是 Via 與 Record-Route 兩個欄位，是確保 200 OK 訊息回來的路徑是走
同一條。不過 INVITE 在 Proxy Server 傳給 SIP Server 之前，要先由 CAP 來
做非法封包攻擊的偵測，假設是安全的 SIP 封包，才可以送到 SIP Server，
因為 CCA 與 SIP Server 都是在同一台機器上，所以當 SIP Server/CCA 收到
INVITE，CCA 會取出這通 Caller 的資源參數，並等待 200 OK 訊息流回來，
確定 Callee 也同意使用跟 Caller 一樣的參數(如頻寬、Media Codec)，再將這
此參數傳給 NRB 做網路資源的評估與計算，讓 MPLS 可以預先保留資源給
這通 Call 使用。CCA 在這邊的工作也可以針對黑名單上，將使用者帳號封
 28
 圖 16 Signaling Procedure 
 
 30
B. The GNU oSIP Library 
完全是將 SIP 的實作成一個函式庫(Library)，實作的規格是參照 RFC 3261。
此函式庫最主要的目的是提供多媒體服務與電話通訊之間更簡單、更強大的介
面，此介面可以初始化並控制 SIP 導向的 sessions。 
 GNU oSIP library 亦是由 C 語言寫成，提供的函式庫都是 C library 實作而
成。oSIP 是以 Thread safe 的方式並且可以被使用在 Multi-thread 的應用程式中，
不過 multi-thread 的模式是非必須選項。 
 oSIP可以被使用實作在IP soft-phone或Embedded SIP software，並且oSIP不只
應用在Endpoint Agents，也可以實作成SIP Proxy。關於這一方面，是指oSIP不只
可以提供high layer API控制SIP session，亦提供一個介面可以做SIP message 
parser、SDP message parser並且處理SIP transactions。圖是oSIP library支援SIP 
parser的欄位[14]。 
 
圖 18 oSIP related SIP Parser 
 32
B. Threads 接收 SIP Message 的流程 
 如圖20 所示，說明partysip threads接收SIP messages的流程圖。一開始tlp 
thread會先開一個socket等待接收message，接收到一個message，會先解析header
欄位的內容，將其儲存在已定義的資料結構。針對收到message的header欄位資
料，決定送到合適的server transaction (IST或NIST)處理，然後再判斷收到message
為新的transaction event還是已經存在的transaction event。如果是新的event，tlp 
thread會配置資源(resource)給transaction使用;如果是已存在的event，將會把此
event儲存到相關的event list，最後都會傳到core thread，做執行event的動作。執
行完event的工作，會通知sfp thread做出決策，決定將儲存在event list的下一個
event，執行相關transaction的state machine流程。 
 
 
圖 20 Threads Process Received Message Flowchart 
 34
(3) 多媒體服務應用軟體系統架構 
本計劃在此階段提出兩個多媒體應用的系統架構，一是SIP Phone的應用(見
圖22)；另一個是MOD(Multimedia on Demand (見圖23)的服務。而現階段皆以x86
的PC為開發平台，且已有初步的成果，在不久的將來會與Residential Gateway共
同開發，以配合數位家庭時代的來臨。在這兩架構中，MOD服務的架構與一般
MOD系統有著一個最大的差異，而這個不同的地方在於我們提出的MOD架構加
入的SIP協定，用來作為Signaling的途徑，使用SIP的最主要原因是利用SIP 簡單
的Signaling來達到通話服務，再加入Call Control Agent元件來保證通話服務的品
質。 
圖中可以看出端對端的使用者皆利用 SIP 來 Signaling 的動作，以確保雙方 
共同使用相同的資源、codec。架構圖中現行的方案是跑在一般傳統網路上，未
來的環境會以 Diffserv/MPLS 來做為資料傳送平台，可以針對使用者使用不同的
應用軟體做優先權的分級、保留資源、快速傳送資料等等，繼承了一切
Diffserv/MPLS 的所有特點。 
 36
 圖 23 MOD 軟體架構圖 
 38
LSP，這同時也是因為台灣是採用發話者付費的決策。以圖24、圖25來說明此一
例子。圖24是描述沒有服務策略下，一通call所走L-LSP的等級有可能不同的;圖25
代表是經過了決策方針下，一通call所走L-LSP的等級是相同的，以保證此通call
的通話服務品質。 
 我們的服務策略主要設計方針可以區分為三大項。第一，以服務付費為導向
保證發話者與受話者的通話服務品質。第二，當EF-LSP網路資源充足時，應該
採用的是將具有AF+3服務使用者升級的策略，完善的使用網路資源。第三，當
EF-LSP網路資源不足時，應該採用的是將具有AF+的使用者導到所屬的LSP，或
是將之前升級到EF-LSP的call再導向AF-LSP的降級策略，防止call blocking的發
生。以上三項設計方針都是以提高網路資源的使用率與減少call blocking的發生
機率為目標。 
                                                 
3 AF+的模型在 6.4 節測試數據結果分析有詳細說明 
 40
(2) 服務策略的設計流程 
服務策略可分成兩大部份探討: EF-LSP網路資源足夠與不足時。預設的假
設前提是LSP需事先建好，將LSP的資訊存於CCA，以有效的利用LSP資源為優
先考量，而在此處指的網路資源即是LSP中的最大與最小保留頻寬。圖26是架構
在 本 計 劃 的 測 試 環 境 下 ， 一 session 的 建 立 與 終 結 的 訊 息 流 程 圖 。
 
圖 26 Session 的建立與終結的訊息流程圖 
在簽訂S-SLA合約時，就已明白指出使用者簽訂的等級，分級保證使用者該
享用的服務品質。根據使用者付費的觀念，花比較多錢可以買到EF等級的品質，
 42
 圖 27 服務策略的設計流程
 44
Table 內容 
Rcv_msg 記錄收到的 SIP msg 
Snd_msg 記錄送出去的 SIP msg 
SDP_parser 記錄由 200 OK msg parser 出來的 SDP 欄位的資訊 
Call_counter 記錄每一通 call 的通話時間、與通話費用 
表 7 MySQL 中的表格內容 
通話者(Caller)與受話者(Callee)的角色是由 SJ Labs 提出的 SJphone 來擔任，
SJphone 是一套支援 SIP 與 H.323 的 Software Phone，但是此一軟體沒有釋出原
始碼，其功能有點對點(Point-to-point)直接輸入 IP，而不需要做 Signaling 的動作，
就可以通話，還有顯示未接來電、建立電話簿等功能。 
由SIP signaling流程圖來說明封包的傳送與將欲從SIP server/CCA的資料轉存
到Database的流程。 一開始啟動SJphone向Partysip Server註冊，Caller端要與Calle
端通話發出INVITE訊息，經過Partysip Server，將訊息截取下來做解析，再填上
下一個目的地，並將從各欄位解析出來的資訊存到MySQL Database，雖然Proxy 
State為Statefull，但Partysip Server只是將它暫時存到RAM，通話一結束就不會有
任何資訊可查。在實作上，我們先將Log檔從RAM轉儲至MySQL Database，以供
Servic Provider查詢客戶通聯記錄，在圖就是由Rcv_msg與Snd_msg這兩tables負責
記錄管理資料。假設成功建起通話，在收到 200 OK訊息就已經在開始傳送語音
封包，並且解析SDP message中的欄位(caller IP and port number、callee IP and port 
number、media codec、call status)，存到SDP_Parser的table裡，而ACK只是防止
這一通Call逾時斷話。等通話結束時，需要將此通Call的開始通話時間、結束通
話時間，兩個時間點抓取出來計算總共通話時間，再按時計費，此工作由Database
中的Call_Counter資料表完成通話費的計算。 
 46
 圖 29 Media Type 與 SDP codec 
 
 
圖 30 通話時間計算與通話費 
 
 
 48
Blocking List 
lb show the blocking_list information 
ab add a new user_ID to the blocking_list information 
db delete a user_ID form the blocking_list information 
AF_plus List 
lv show the AF_plus_list information 
av add a new user_ID to the AF_plus_list information 
dv delete a user_ID form the AF_plus_list information 
表 9 Blocking List & AF_plus List in CCA 
 
在測試的環境中，SIP server/CCA是扮演VoIP service provider，而Network 
provider元件的NRB server是將之關閉的。同時在有linux-based的機器上，寫一支
有SIP multi-call generator功能的小程式將設定有AF+和EF等級的帳號，做為caller
端，並在callee端的帳號設定成EF或AF。最後用兩台linux-based的機器上用兩支
具有socket的程式模擬IXP 2400 MPLS Edge Router，以待接收classified  rules或
delete classified rules，雖然此測試環境沒有實地接上IXDP2400 MPLS Edge Router
做到封包分類，但也具有接收classified rules才能讓packet通過的功能，如下圖31
所示。 
 
圖 31 測試環境 
 50
 圖 33 動態更正 AF 系列中有簽訂 AF+的使用者 
 
 在此值得一提的是，與 AF+服務相對的是 Blocking 使用者的通話限制。需
要 AF+的服務是 AF 系列中的使用者中有需要 EF 等級的品質，但又沒有長時間
在使用時，就可以增加此一服務以滿足此方面的需求。而 Blocking 的決策是因
為使用者有一段時間沒有繳費，就此把他列入 blocking list 的名單中，讓他不能
進行發話服務，只能收聽進來的通話。所以相對於 blocking users，AF+服務的加
設可以解決 DiffServ 硬性分級的缺點，讓使用者可以多一種選擇，亦可以解決
AF 使用者造成 AF-LSP 保留頻寬的不足; 也可解決 EF 使用者在 EF-LSP 中的保
留頻寬的使用效率不彰的情形。 
 52
 
圖 36 Call State Information2 
 
圖 37 LSP Information2 
 54
EF-LSP中有一通call，因為CCA判定EF-LSP的資源不足，所以需要把此通call導
到AF-LSP中，因此將此通call的classified rules移除，然後重新增加classified 
rules，以致於可以導到AF-LSP的classified rules，如圖42 如示，此通call才可以順
利的導到AF-LSP中。 
 
圖 40 EF-LSP 重導入 AF-LSP 的流程 1 
 
 
圖 41 EF-LSP 重導入 AF-LSP 的流程 2 
 
 56
(5) 測試數據與結果分析 
  將測試分成兩個部份探討，假設前提是沒有通話結束，這是因為測試的SIP 
call generator沒有此功能，不過這並不影響CAC policy的功能測試。然後將實驗
所得數據繪成圖形表示，以便進一步分析。第一部份為AF+升級後便不能降級，
直到EF-LSP的頻寬用盡，稱為 服務模型錯誤! 找不到參照來源。;第二
部份為AF+使用者升級後，假設EF-LSP的頻寬用盡，可將其降級，服務真正的
簽訂EF等級的使用者，稱為
non RAAF
+
−
RAAF
+ 服務模型錯誤! 找不到參照來源。，本計劃即
是採用此模型實作而成。圖44 為 服務模型的數據結果。此模型的特點
是當AF+的使用者佔滿EF-LSP時，就會將真正簽訂EF等級的使用者喪失通話服
務的權利，不過這是很極端的例子，通常VoIP service provider的管理者不會讓
此情形發生，例如限制AF+使用者在EF-LSP的通話數。此特點顯現了 模
型需應用在多AF使用者、少EF使用者的環境，才能看出它的效能。 
non RAAF
+
−
non RAAF
+
−
 
圖 44 的數據結果 non RAAF + −
 再來看看 RAAF + 服務模型的數據結果，如圖45、圖46 所示。也是用了兩個極
 58
 圖 45 RAAF + 範例 1 的數據結果 
 
 60
第五章 開發適於 DiffServ/MPLS 核心網路之多媒體
服務模型，並進行效能評估 
本計劃已開發適於 DiffServ/MPLS 核心網路之多媒體服務模型，並進行效能評
估。已有初步成果並已在國際會議發表。詳細內容如下： 
 62
  
 
 64
  
 66
Mobility 和 Multicast 的服務，在 Layer3 Switch Router 的功能中加入一個
Mobility/ Multicast Dispatcher 來加速對這些封包的處裡。  
(3) 本技術中提出 Multicast+P2P Streaming 的概念，來突破閘道器的有限能
力，並大幅提升使用者的人數限制，P2P 是趨勢，但 P2P 為人詬病的地方就
是他會佔到許多的網路資源，不過我們是針對私有網路來提供 P2P 的服務，
這樣使用的情形將受到控管，且在私有網路內頻寬資源較多，在這樣的狀況
下使用，可說是個很適當的辦法。 
(4) 未來是無線的社會，目前也有人在進行 Intel IXP425 平台加上 WiMAX 
Adapter 的開發，如開發成功再配合本技術的貢獻，將可以把它放在大眾運
輸系統上，這樣一來在公車、捷運或火車上也都可以享受到這樣的服務。 
 
現階段有許多針對可攜式串流服務的討論和研究，但對於小型企業網路或家
庭網路，卻未看見一有效且實際的解決方案被提出，而本技術即是研究在這樣的
網路環境下如何有效的提供可攜式的串流服務，並加以實現。 
4. 開發以 SIP 為基礎之多媒體服務 session 管理與允入控制策略與介面管理     
機制 
針對 DiffServ/MPLS 的環境，在 SIP Server 中整合話務控制代理器(Call 
Control Agent , CCA)，並在 Call Admission Control (CAC)設計一套服務策
略以供 CCA 的話務控制運作機制達到完善。在 VoIP Service Provider (CCA) 與
Network Provider (NRB) 之間簽訂的 SLA 合約中，有規定每條 L-LSP 最大與最
小的保留頻寬，加入的 Service Policy 目的，以 VoIP Service Provider 的角
度就是在提高頻寬的使用效率並減小 Call Blocking 的發生，以 VoIP users 的
角度來看就是付經濟的費用去買到最合適的服務。總體而言，就是提高 VoIP 
Service Provider 的利益。透過本計劃的實作執行，相信對未來網路互動式多
媒體服務發展能有所貢獻。 
此外，開發 SIP Proxy Server 與 Database Server 的應用、加強 CCA 模組
功能與 SIP Proxy Server 的整合與針對 SIP Proxy Server 的負載性能測試等相
關工作亦已完成。我們將 SIP Proxy 整合成為一個以 SIP Protocol 為基礎之多
媒體資源代理器以進行多媒體高速網路通訊，在 SIP Proxy Server 之建置規劃
中，規劃的功能包含有: 加入 MySQL Database 做為管理和維護通話狀態
(Maintain Call State)、利用 CCA 模組解析 SDP Message 和計算通話時間與通
話費，最後的部份是加入 MySQL C API 並整合 CCA 模組到 SIP server，達到資
料轉存的目的，以備事後相關資料查詢。 
 
5. 開發適於 DiffServ/MPLS 核心網路之多媒體服務模型，並進行效能評估 
 我們檢討 DiffServ 的服務模型，在 DiffServ/MPLS 網路上，最多使用者
的簽定是 AF 等級的，所以有可能造成 AF-LSP 的不夠用或 EF-LSP 使用的效率
不彰，更或者造成AF的使用者的call blocking發生的機率提高，都是因為DiffServ
 68
[6]. H. K. Su, Huan Chen, B.C. Cheng and C.S. Wu, “Performance Analysis of 
Bandwidth Provisioning for AF+ VoIP Service Models over DiffServ-based 
MPLS Networks”, SPECTS 2006 To appear [EI] 
[7]. Chi-Chou. Wen and Huan Chen, Mobile IP to SPIE 2006, To appear [EI]  
[8]. Kuo-Shing Huang, Huan Chen, Cheng-Song Wu and Chun-Yi Lu, "Enhanced 
Radio Resource Management Schemes in the Downlink Wideband-CDMA 
Systems,"IEE Mobility 05, To appear accept and submit camera ready on 8/15 
[EI] 
[9]. Chih-Wei Hsu, Wen-Hsing Shen, Huan Chen, Ting-Chao Hou, “SIP-based 
VoIP-over-MPLS Architecture Design and System Development for Interactive 
and Secure Multimedia Services”, Oct. 27, Taiwan, (TANET) To appear accept 
and submit camera ready on 9/15 (國內研討會) 
[10]. Huan Chen, C.-C. Cheng, M.-H. Chi and H.-H. Yeh, "A Sensitivity Analysis 
Approach to the Optimal Policy Range of the Resource Access Control in 
Wireless Systems," Wireless Telecommunications Symposium (WTS), 6-7 April. 
2005, Pomona,CA,U.S.A, Page(s):100 - 105  
[11]. Huan Chen and C.-W. Huang, "Power Management Modeling and Optimal 
Policy for IEEE 802.11 WLAN Systems," Vehicular Technology Conference, 
2004, VTC2004-Fall. 2004 IEEE 60th Volume 6,  26-29 Sept. 2004, 
Page(s):4416 - 4421, Vol. 6 [EI] 
[12]. H.-K. Su, Huan Chen, C.-Y. Wang and K.-J. Chen, "A Novel AF+ Service for 
VoIP Applications over Diff-Serv/MPLS Networks," Vehicular Technology 
Conference, 2004. VTC2004-Fall. 2004 IEEE 60th, Volume 7,  26-29 Sept. 2004 
Page(s):4846 - 4850 Vol. 7  [EI]  
[13]. Huan Chen, C.-C. Cheng, "Priority Access for Hybrid Handoff Wireless 
Systems", Vehicular Technology Conference, 2004. VTC2004-Fall. 2004 IEEE 
60th, Volume 2,  26-29 Sept. 2004 Page(s):1028 - 1032 Vol. 2  [EI] 
 
8. 碩士論文與科技報告 
1. (95 年度) 碩士論文:邱志偉,"Portable Streaming Service Based on Intelligent 
Gateway" 
2. (95 年度) 碩士論文:蔡明君, "Integrate GPS, GPRS and GIS for personal 
tracking system" 
3. (95 年度) 碩士論文:蔡立光, "Energy Residue Aware（ERA）Clustering 
Algorithm for Wireless Sensor Network" 
4. (95 年度) 碩士論文:陳楙仕, "On optimal Adaptive Contention Window 
Control in Wireless LAN" 
 70
參考文獻 
[1] J. Rosenberg, H. Schulzrinne, G. Camarillo, A. Johnston, J. Peterson, R. Sparks, 
M. Handley and E. Schooler, “SIP: Session Initiation Protocol,” IETF RFC 3261, 
Jun 2002. 
[2] Gonzalo Camarillo, “SIP Demystified,” McGraw-Hill Networking and 
Telecommunications, 2002. 
[3] http://www.vovida.org/ 
[4] Daniel Collins, “Carrier Grade Voice over IP,” McGraw-Hill Networking and 
Telecommunications, 2003. 
[5] B. Goode, “Voice over Internet protocol (VoIP),” Proceedings of the IEEE, vol. 
90, pp. 1495–1517, Sept. 2002. 
[6] M. Handley, V. Jacobson, ISI/LBNL, “SDP: Session Description Protocol,” IETF 
RFC 2327, April 1998. 
[7] F. L. Faucheur and W. Lai, “Requirements for Support of Differentiated 
Services-aware MPLS Traffic Engineering,” RFC 3564, July 2003. 
[8] E. Rosen, A. Viswanathan, and R. Callon, “Multiprotocol Label Switching     
Architecture,” IETF RFC 3031, Jan. 2001. 
[9] F. L. Faucheur, B. D. L. Wu, S. Davari, P. Vaananen, R. Krishnan, P. Cheval, 
and J. Heinanen, “Multi-Protocol Label Switching (MPLS) Support of 
Differentiated Services,” IETF RFC 3270, May 2002. 
[10] A. Johnston, MCT, S. Donovan, R. Sparks, C. Cunningham, dynamicsoft, K. 
Summers, Sonus, “Session Initiation Protocol (SIP) Basic Call Flow Examples,” 
IETF RFC 3665, December 2003. 
[11] C. G. G. C. Zhang, “TE-SIP server Design for a SIP-over-MPLS based network,” 
ICCT (International Conference Communication Technology), Apr. 2003. 
[12] Yeong-Hun Cho, Moon-Sang Jeong, Jong-Tae Park, Wee-Hyuk Lee, 
“Distributed Management Architecture for Multimedia Conferencing Using SIP,” 
Proc. IEEE Conference on DFMA’05,0-7695-2273-4/05.  
[13] http://www.nongnu.org/partysip/partysip.html#faq 
[14] http://www.gnu.org/software/osip/osip.html 
[15] Dongyan Xu, Mohamed Hefeeda, Susanne Hambrusch, Bharat Bhargava, "On 
Peer-to-Peer Media Streaming", Proceedings of the 22 nd International 
Conference on Distributed Computing Systems (ICDCS'02), pages 
363--371,Vienna, Austria, July 2002 
[16] Xuxian Jiang, Yu Dong, Dongyan Xu, Bharat Bhargava, "GnuStream: a P2P 
Media Streaming Prototype", Proceedings of IEEE International Conference on 
Multimedia & Expo, July 2003 
 72
