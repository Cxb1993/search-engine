  
行政院國家科學委員會專題研究計畫期末報告 
應用一個新的高精度不可壓縮Navior-Stokes方程式計算法則於對
流支配流場 
 
Applications of a novel incompressible Navior-Stokes equations 
solver in convection-dominant flows  
  
計畫編號： 100-2221-E-022-005 
執行期間：100 年 8 月 1 日至 101 年 7 月 31 日 
計畫主持人：黃耀新  國立高雄海洋科技大學 
計畫參與人員：姜銘豐、何秉寰 
 
摘要 
本計畫將配合先前發展的非結構化格點的不可壓縮流場的數值解法，探討適用於對流支配流場問
題。由於變數空間梯度值被視為計算變數，使用梯度限制器便為一相當簡便的過程，然而，整體式
的梯度限制器需要較為繁複的計算步驟，若干簡化但有效的處理方式便可用來簡化計算過程。本計
畫將探討梯度限制器對流場計算效率與精度的影響。由計算結果可知，合適的梯度限制器確實可以
增加計算的穩定性與精度。  
   
 
關鍵字：方程式求解梯度、梯度限制器、高Reynolds 數流場 
 
1. Introduction 
In our previous work, we have successfully 
developed a compact and accurate discretization for 
incompressible Navier-Stokes equations on 
staggered polygonal grids to simulate fluid flow 
problems in complicated domains [1-3]. It can 
demonstrate second-order accurate results in 
numerical experiments. However, as indicated by 
Godunov [4] and became a well-known numerical 
discipline, solution gradient in a high-resolution 
scheme must be taken within a certain bound to 
avoid unrealistically oscillatory results. This thorny 
phenomenon can be attributed to the inappropriate 
assignment of solution gradient in the realization of 
convection flux [5].  It is also the case for our 
formulation. Although quite accurate results can be 
obtained with sufficiently refined grids, the 
computational results will be contaminated with 
unphysical wiggles in the convection dominated 
flow problems. Therefore, to effectively simulate 
practical high Reynolds number flow problems, 
limiter functions must be imposed on solution 
gradient both in the sakes of solution accuracy and 
numerical stability [6, 7]. 
The objective of this project is to explore 
suitable limiter functions for solution gradients. As 
a special feature in our formulation [1-3], the 
solution gradients are solved with their associate 
governing equations. They can be directly 
manipulated without mingling with information at 
neighboring nodes in the limiterization process. 
Therefore, the limiter operations can be put into 
effect in a simple and explicit manner. Nevertheless, 
with a general polygonal grid to cope with 
complicated computational domains, difficulty may 
arise from the unstructured nature inherent in the 
grid system: All components must be 
simultaneously taken into account. Although a 
globally consistent limiter can be acquired, 
significant amount of computational efforts must be 
invested to perform the necessary manipulations. 
To successfully reduce the computational burden, 
simple but effective ones should be considered as 
feasible alternatives. Therefore, besides the 
globally consistent limiter operator, several 
  3
least displacement measure: 
AD
(G) (i)min∇φ∈Ω∇φ = ∇φ−∇φ  (4) 
which, for convenience, is denoted as the limiterG 
operator. In a rectangular cell, it is an easy task to 
perform this operator since it can be executed in a 
component-wise manner. However, in a general 
polygonal cell, all components must be 
simultaneously taken into account due to the 
arbitrary orientation of boundary face. A global 
searching scheme is required to fulfill this objective, 
which will inevitably raise the computational load. 
Therefore, it will be helpful if some simplified but 
effective limiter operators can be employed to 
lessen the computational burden. These schemes 
will be designed to be of localized style. That is, 
the limiter constraint in Eq. (2) can be sequentially 
executed in a face-by face fashion. 
 
3.2 Fixed direction limiter 
The first simplified limiter function considered 
in the present work is performed by preserving the 
gradient direction: 
(FD) (i) (i)
AD{max(r) 0 r 1and r }∇φ = ∇φ ≤ ≤ ∇φ ∈Ω  (5) 
which is denoted as the limiterFD operator. This 
operator can be executed sequentially for all 
boundary faces: 
 
Algorithm limiterFD 
For k=1,2,.., Vn  
1. Calculate maxΔφ  and minΔφ .  
2. Update solution gradient, 
k
k
max
m P
min
m P
{max[min( ,1),0]
( )
max[min( ,1),0]}
( )
Δφ∇φ = ∇φ⋅ −
Δφ+ ∇φ∇φ⋅ −
r r
r r
 (6) 
3. (FD)∇φ =∇φ  
As given in this algorithm, only the gradient 
magnitude is modified. 
 
3.3 Single direction limiter 
The second simplified operator is a single 
direction limiter which limits the solution gradient 
in the effective direction, 
km P
−r r . It is denoted as 
limiterSD and can be executed sequentially for all 
boundary faces: 
 
Algorithm limiterSD 
For k=1,2,.., Vn  
1. Calculate maxΔφ  and minΔφ . 
2. Update solution gradient, 
k
k
k
k
m P
max2
m P
m P
min m P
( )
{min[
( ),0]
max[ ( ),0]}
−∇φ = ∇φ+ Δφ
−
−∇φ⋅ −
+ Δφ −∇φ⋅ −
r r
r r
r r
r r
 (7) 
3. (SD)∇φ =∇φ  
As evident in this algorithm, only the component in 
the direction of 
km P
−r r  is modified. Contrary to 
the limiterFD, the resulting limited gradient for 
limiterSD may be dependent upon the execution 
order of operating faces. Furthermore, this 
limiterization procedure can not guarantee the 
resulting limited gradient to lie within the 
admissible region. Nevertheless, the magnitude of 
limited gradient will be effectively decreased, 
which is beneficial to reduce the solution wiggles. 
Operational sequences for these two simplified 
functions can be displayed on the state diagram. 
Figure 2(b) shows the evolution process with 
limiterFD and limiterSD. 
 
3.4 XY direction limiter 
The third simplified operator considered in the 
present work is the one with different evaluation 
points. In the previous simplified operators 
(limiterFD and limiterSD), the evaluation points are 
assigned as the midpoints of boundary face. These 
locations are also employed to estimate boundary 
flux functions. In this simplified operator, we 
choose the intersection points of horizontal x- and 
vertical y-line with boundary faces as the limiter 
evaluation locations. These horizontal and vertical 
lines are emanated from the computational node 
which are illustrated in Fig. 2(c). Although these 
points are not the evaluation points for boundary 
flux functions, it can significantly simplify the 
limiterization procedure. Indeed, the resulting 
admissible region will become a rectangle 
irrespective of the original shape owned by the 
computational cell. Consequently, simple operation 
procedure such as limiterSD can be employed. For 
convenience, this simplified operator is denoted as 
limiterXY ( (XY)∇φ ). 
 
3.5 Un-sloped limiter 
For comparison, bedsides the aforementioned 
operators, we consider the limiterO operator: 
(O)limiterO( )∇φ =∇φ = 0  (8) 
As mentioned before, it will yield a first-order 
discretization for governing equations. 
  5
with a 64x64 uniform rectangular grid. As clearly 
illustrated in this figure, the unlimited formulation 
is incapable of driving the computation to a 
convergence solution in the high Reynolds number 
circumstances, Re 2400≥ . Nevertheless, these 
computations can be stabilized without 
deteriorating the convergent rate if the solution 
gradient is enforced by the limiter function.  
To comprehensively exhibit the effects of 
limiter functions on solution accuracy, 
computations will be performed with four grid 
arrangements: rectangular (mesh R), randomly 
quadrilateral grid (mesh R’), regularly triangular 
grid (mesh T) and randomly triangular grid (mesh 
T’). These grid arrangements are also employed in 
our previous work [3], where detailed description 
can be referred to. For concreteness, Figures 6(a)-
6(d) show the typical grid distributions of these 
meshes derived from a 20x20 uniform rectangular 
grid. As have been shown in our previous work [3], 
very accurate results can be obtained in the case of 
Re=400 irrespective of grid arrangement. These 
results can be obtained without any limiter operator. 
However, in the case of high Reynolds number 
flow, Re=3200, a limiter function must be imposed 
on solution gradient to secure a convergent solution 
(see Fig. 5). Figures 7(a)-7(d) display the resulting 
x-component velocity profile along the cavity 
center (x=0.5) with meshes R, R’, T and T’, 
respectively. The computational meshes are 
generated based on a 64x64 uniform rectangular 
grid. Benchmark solution provided by Ghia et al. 
[15] with a 128x128 uniform grid is also included 
for comparison. As evidently shown in these 
figures, all limiter operators except limiterO can 
yield quite agreed distribution with the referenced 
solution. Further examination on these figures 
reveals some interesting findings. Discrepancies in 
the computational results between limiterG and 
limiterSD are negligible regardless of grid 
arrangement. Meanwhile, limiterXY can provide 
more accurate solution than other operators with 
irregular meshes R’ and T’; while more favorable 
results can be obtained by limiterG/limiterSD with 
regular meshes R and T. It can be concluded that 
not a particular operator can be designated as an 
optimum one in view of solution accuracy. It is a 
natural attempt to construct a more accurate 
operator by taking advantages of the special 
features in these limiter functions. 
Besides the solution accuracy, an important 
factor must be taken into account to evaluate a 
useful limiter operator. It is the additional 
computational effort invested to accomplish the 
limiterization manipulations. Table 1 lists the 
required CPU times for 500 iterations on a 64x64 
uniform rectangular grid. Both the total and limiter 
execution times are tabulated for comparison. As 
expected, heaviest computational load is demanded 
to perform the limiterG function. Over 18% of total 
CPU time must be spent for this global operator; 
while only 4.68%, 5.57% and 4.99% are required 
for the simplified limiterFD, limiterSD and 
limiterXY, respectively. By taking the resulting 
solution accuracy and required CPU time into 
consideration, limiterXY and limiterSD will be the 
proper candidates to form a practical limiter 
operator. 
Since limiterXY can provide accurate results for 
irregular grids, it can be served as the building 
block and should be modified by limiterSD if the 
regular meshes are employed. Considering the 
special attributes in regular meshes R and T, the 
limiter applied location for limiterXY will be 
coincident with the corner of velocity control 
volume. Therefore, limiterSD should be brought 
into play if the corner is near to limiter applied 
location. Accordingly, a mixed limiter function can 
be devised: 
 
Algorithm limiterMX 
For k=1,2,.., Vn  
1. Determine the intersection point of horizontal 
and vertical lines originated from computational 
node with boundary face. If there does not exist 
intersection point, go to next boundary face 
( k k 1← + ) 
2. If the distance between the intersection point 
and the corner node is less than 0.1 of boundary 
length, take the midpoint of boundary face as the 
limiter applied point (limiterSD). Otherwise, take 
the intersection point as the applied point 
(limiterXY). 
3. Calculate maxΔφ  and minΔφ . 
4. Update solution gradient, 
k
k
k
k
m P
max2
m P
m P
min m P
( )
{min[
( ),0]
max[ ( ),0]}
−∇φ = ∇φ+ Δφ
−
−∇φ⋅ −
+ Δφ −∇φ⋅ −
r r
r r
r r
r r
 (12) 
5. (MX)∇φ =∇φ  
Numerical performances of this mixed function 
are elucidated in Fig. 8(a) and 8(b) for the 
computational x- and y-component velocity profiles 
along x=0.5 and y=0.5, respectively. As shown in 
  7
straightforward hybridization of simplified ones. 
Finally, feasibility of the proposed operator is 
validated by solving backward-facing step and tilt 
lip-driven cavity flows. From the computational 
results, it can be concluded that the resulting limiter 
function incorporated in our solution procedure can 
be served as a useful simulation tool for 
incompressible flow problems. 
 
References 
1. Y.-H. Hwang, Development of a compact and 
accurate discretization for incompressible 
Navier-Stokes equations based on equation-
solving solution gradient, part I: kernel scheme 
fundamentals, Numerical Heat Transfer, part 
B: Fundamentals, Vol.58, pp.145-169, 2010. 
2. Y.-H. Hwang, Development of a compact and 
accurate discretization for incompressible 
Navier-Stokes equations based on equation-
solving solution gradient, part II: formulation 
on unstructured polygonal mesh, Numerical 
Heat Transfer, part B: Fundamentals, Vol.58, 
pp.170-192, 2010. 
3. Y.-H. Hwang, Development of a compact and 
accurate discretization for incompressible 
Navier-Stokes equations based on equation-
solving solution gradient, part III: fluid flow 
simulations on staggered polygonal grids, 
Numerical Heat Transfer, part B: 
Fundamentals, Vol.58, pp.193-215, 2010. 
4. S. K. Godunov, A difference scheme for 
numerical computation of discontinuous 
solution of hydrodunamic equations, Math. 
Sbornik, Vol.47, pp.271-306, 1959 
5. Hirsch, Numerical Computation of Internal 
and External Flows, John Wiley & Sons, New 
York, 1990. 
6. B. van Leer, Towards the ultimate conservative 
difference scheme. V. a second order sequel to 
Godunov’s method, Journal of Computational 
Physics, Vol.32, pp.101-136, 1979. 
7. P. K. Sweby, High resolution schemes using 
flux limiters for hyperbolic conservation laws”, 
SIAM Journal on Numerical Analysis, Vol.21, 
pp.995-1011, 1984. 
8. S. V. Patankar, Numerical Heat Transfer and 
Fluid Flow, Hemisphere Publishing Co., 1980 
9. M. E. Hubbard, Multidimensional slope 
limiters for MUSCL-type Finite volume 
schemes on unstructured grids, Journal of 
Computational Physics, Vol.155, pp.54-74, 
1999. 
10. D. N. Allen and R. V. Southwell, Relaxation 
methods applied to determine the motion in two 
dimensions of a viscous fluid past a fixed 
cylinder, Quarterly Journal of Mechanics and 
Applied Mathematics, Vol.8, pp.129-143, 1955. 
11. G. D. Raithby, Skew upstream differencing 
schemes for problems involving fluid flow, 
Computer Methods in Applied Mechanics and 
Engineering, Vol.9, pp153-164, 1976. 
12. M. Atias, M. Wolfshtein and M. Israeli, 
Efficiency of Navier-Stokes solvers, AIAA 
Journal, Vol.15, pp.263-266, 1977. 
13. B. P. Leonard, A stable and accurate 
convective modelling procedure based on 
quadratic upstream interpolation, Computer 
Methods in Applied Mechanics and 
Engineering, Vol.19, pp.59-98,1979. 
14. R. M. Smith and A. G. Hutton, The numerical 
treatment of convection – a performance 
comparing of current methods, Numerical 
Heat Transfer, Vol.5, pp.439-461, 1982. 
15. U. Ghia., K. N., Ghia and C. T. Shin, High-Re 
Solutions for incompressible flow using the 
Navier-Stokes equations and a multigrid 
method, Journal of Computational Physics, 
Vol.48, pp.387-411, 1982. 
16. E. Erturk, Numerical solutions of 2-D steady 
incompressible flow over a backward-facing 
step, part I: High Reynolds number solutions, 
Computers and Fluids, Vol.37, pp.633-655, 
2008. 
17. E. Erturk and B. Dursum, Numerical solutions 
of 2-D steady incompressible in a driven 
skewed cavity, ZAMM, Vol.87, pp.377-392, 
2007. 
 
 
(a) gird distribution and computational nodes 
 
  9
θ
0 5 10 15 20 25 30 35 40 45
εm
0.00
0.02
0.04
0.06
0.08
0.10
1UD
SKUD
2UD
QUICK
present w/o limiter
present w/ limiter
 
(e) solution errors 
Figure 3 Pure convection problem in a constant 
velocity field 
 
 
(a) computational domain, flow streamlines and 
boundary conditions 
 
x
0.0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0
φ
-0.5
0.0
0.5
1.0
1.5
2.0
2.5
1UD
SKUD
2UD
QUICK
present w/o limiter
present w/ limiter
exact
 
(b) computational results at outlet 
 
Nx
20 40 60 80 100
εm
0.01
0.1
1
1UD
SKUD
2UD
QUICK
present w/o limiter
present w/ limiter
 
(c) solution errors 
 
 
(d) computational result with 100x50 grid 
Figure 4 Pure convection problem in a rotary flow 
field 
iteration number
0 50 100 150 200
m
as
s r
es
id
ue
0.01
0.1
1
Re=800
Re=1600
Re=2400
Re=3200
Re=2400 w/ limiter
Re=3200 w/ limiter
 
Figure 5 Mass residues for various Reynolds 
numbers 
 
 
(a) mesh R 
 
 
(b) mesh R’ 
 
  11
u
-0.5 0.0 0.5 1.0
y
0.0
0.2
0.4
0.6
0.8
1.0
mesh R (128x128)
mesh R (64x64)
mesh R (32x32)
Ghia et al.
 
(a) x-component 
 
x
0.0 0.2 0.4 0.6 0.8 1.0
v
-0.6
-0.4
-0.2
0.0
0.2
0.4
0.6
mesh R (128x128)
mesh R (64x64)
mesh R (32x32)
Ghia et al.
 
(b) y-component 
Figure 9 Velocity profile along cavity geometrical 
center with various grid densities 
 
 
(a) streamlines 
 
u
-1.0 -0.5 0.0 0.5 1.0 1.5
y*
0.0
0.5
1.0
1.5
2.0
present
Erturk (x*=6)
Erturk (x*=14)
Erturk (x*=30)
 
(b) x-component velocity 
 
v
-0.050 -0.025 0.000 0.025
y*
0.0
0.5
1.0
1.5
2.0
present
Erturk (x*=6)
Erturk (x*=14)
Erturk (x*=30)
 
(c) y-component velocity 
 
ω
-6 -4 -2 0 2 4 6 8
y*
0.0
0.5
1.0
1.5
2.0
present
Erturk (x*=6)
Erturk (x*=14)
Erturk (x*=30)
 
(d) vorticity 
Figure 10 Backward-facing step flow problem 
 
 
(a) o45θ =  
 
 
(b) o90θ =  
 
 
(c) o135θ =  
Figure 11 Streamlines in tilt cavity flow 
 
u
-0.3 0.0 0.3 0.6 0.9
y*
0.0
0.2
0.4
0.6
0.8
1.0
present
Erturk and Dursun
 
(a) o45θ =  
國科會補助計畫衍生研發成果推廣資料表
日期:2012/10/29
國科會補助計畫
計畫名稱: 應用一個新的高精度不可壓縮Navior-Stokes方程式計算法則於對流支配流場
計畫主持人: 黃耀新
計畫編號: 100-2221-E-022-005- 學門領域: 造船工程
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
論文由期刊總編輯以高品質理由直接接受發表，無須進一步審查。 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
