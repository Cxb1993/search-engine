 I
中文摘要 
本計畫為三年整合型計畫中的子計畫一，此整合型計畫的主要目標就是透過實體層、
資料連結層、網路層、傳輸層及應用層之間的技術合作，實作一個具智慧型、容錯、省電、
高可靠性、高傳輸效能之無線感測網路系統，並使其具有『室內服務跟隨』與『戶外環境
感測與自動修復』之能力。本子計畫之主要目的為設計與實作智慧型感測器、媒體存取控
制之協定與個人化的室內『服務跟隨』(Context-Aware Service)之應用，來提供其它子計畫
所需要的軟、硬體。最後，我們將設計出能有效運作的實體層之硬體，與媒體存取控制層
的通訊協定，再配合其它子計劃的研究成果，發展出高效能的智慧型服務之無線感測網路。 
在計畫第二年中，我們完成設計的一個簡單的時間同步方法，可以達到節點的Multi-hop
時間同步。同時也設計一個在無線感測網路中使用六角虛擬座標的繞徑協定，讓傳送封包
的路徑可以分散，避免過於集中造成過度損耗某些節點的電量，藉以達到負載平衡而延長
網路壽命的目的。此階段所設計的演算法與通訊協定，將會應用於本計畫中的室內服務跟
隨及其它子計畫，發展出高效能的智慧型服務之無線感測網路。 
關鍵詞: 服務跟隨、時間同步、無線感測網路、繞徑協定、負載平衡 
 
 1
一、 計畫緣由與目的 
近年來由於科技及硬體技術的進步，使得體積小、記憶容量大、低成本、多功能、省
電、且具無線與感測能力的感測點得以實現，這亦使 Wireless Sensor Networks (WSN)的應
用日趨成熟，並廣泛應用在許多不同的領域，如：自然災害回報、軍事偵測與監控、位置
追蹤、環境採樣、健康監控、自然生態監控、醫學上的人體機能探測、路況監控、導航、
工作場所危險監控、安全控管等多種領域。本計劃將整合感測網路與無線通訊兩領域的相
關技術，設計與實作一個智慧型、省電、具可靠性與安全性、高傳輸效能與可自我修復之
無線感測網路系統，來實現『室內服務跟隨』(Indoor Context-Aware Service)及『戶外環境
感測與自動修復』 (Outdoor failure-Aware Information Collection Service)等應用。 
本子計畫之主要目的為設計與實作智慧型感測器、媒體存取控制之協定與個人化的室
內『服務跟隨』(Context-Aware Service)應用，以提供其它子計畫所需要的軟、硬體應用。
最後，我們將設計出能有效運作的實體層之硬體，與媒體存取控制層的通訊協定，再配合
其它子計劃的研究成果，發展出高效能的智慧型服務之無線感測網路。 
在計畫第二年中，我們完成設計的一個簡單的時間同步方法，可以達到節點的Multi-hop
時間同步。同時也設計一個在無線感測網路中使用六角虛擬座標的繞徑協定，讓傳送封包
的路徑可以分散，避免過於集中造成過度損耗某些節點的電量，藉以達到延長網路壽命的
目的。此階段所設計的演算法與通訊協定，將會應用於本計畫中的室內服務跟隨，並提供
第三子計畫中之所需，及其它子計畫的應用。 
二、 文獻探討 
目前在無線感測器網路中，有許多已發表之時間同步方法，我們選出較具代表性的三
個時間同步的方式，分別為 RBS、TPSN 與 FTSP，以下為這三個同步演算法的進一步介紹。 
 (1) Reference Broadcast Synchronization (RBS) Protocol [1] 
RBS 主要的構想是利用無線網路中，廣播機制的特性，減少在同步過程中，因為封包
傳遞所發生的延遲時間，降低時間誤差值。假如在網路上的某個節點的傳輸範圍中另有兩
個接收端節點在此節點的傳輸範圍內，若此節點送出封包，另兩個鄰居節點幾乎會同時接
收到該封包；利用此特性，設計了 RBS 同步方式。RBS 的特點是利用參考節點廣播封包傳
輸範圍內的接收節點兩兩互相同步，而非傳統的與參考節點同步。參考點在 RBS 中佔有重
要角色，由參考點廣播封包，假設節點 i 與節點 j 均在通訊範圍內，則同時聽到由參考點發
出的封包，紀錄收到的時間分別為 Ti與 Tj，接著節點 r、j 互相交換 Ti與 Tj 值，如此可以算
出兩節點的時間偏差(clock offset)，例如：節點 i 與節點 j 時間的 offset 等於 Ti－Tj，節點 j
亦同。若要達到兩節點時間同步，只需要將內部時間加上此偏差值即可與對方同步。RBS
提出兩個方法，提高同步精確度。第一個方法是增加參考點送出封包的數目，每個節點仍
然記錄與交換多個封包個別到達時間，進而平均所計算出的 offset 值。第二個方式利用多
個計算出的 offset，利用 linear regression 求得最適合的漸進線，此漸進線代表兩者 offset 值。 
(2) Timing-sync Protocol for Sensor Networks (TPSN) [2] 
TPSN 由 Ganeriwal, Kumar, and Srivastava 所提出一個用於無線感測網路中的時間同步
方法，名為 Timing-sync Protocol for Sensor Networks，簡稱 TSPN。此演算法包含了兩個步
驟，第一部分為 Level discovery phase，第二部分為 Synchronization phase。網路中擁有一個
 3
 (2) Glider: Gradient Landmark-based Distributed Routing for Sensor Networks [5] 
Clider 是出自 INFOCOM 2005 的論文，這篇論文便是針對先前提到 GPSR 會造成洞越
來越大的缺失而提出的改進。這篇論文的主要觀念是先在網路中找出一些節點作為
Landmark，且每一個節點並不知道自己的位置座標。Clider 利用這些 Landmark 做 Voronoi
與Delaunary的分割，將整個網路拓樸切割出以Landmark為中心的區塊。而每一個Landmark
將會成為網路中的虛擬座標，每一個 Landmark 會互相交換資訊，因此 Landmark 將會有其
鄰居 Landmark 的資訊。當有節點要傳送封包到某一目的地時，該節點會透過本身所在區塊
內的 Landmark 取得虛擬座標，並根據這個資訊，將封包往該最靠近目的地的鄰居 Landmark
之方向傳送。在傳送的過程中，當封包傳送跨過目前欲傳送之 Landmark 的區塊界線時，由
於已經進入該 Landmark 的領域，目前傳送的節點，便開始找挑選下一個欲前往的 Landmark
之方向，所以封包本身不會在每次傳送時，都被送到 Landmark 後才傳向傳送給下一個
Landmark，而是直接在半路就直接轉向，這樣可以縮短傳送的路徑。但在這篇論文中亦有
一些缺點，例如在挑選 Landmark 時，該論文提到如果網路中有洞的存在，則挑選在洞外圍
的 Landmark 必須要使用手動的方式，而其他 Landmark 則是隨機挑選。如果以手動方式挑
選 Landmark 則是不盡合理之處。 
三、 研究方法 
在第一年中我們主要完成時間同步演算法與在無線感測網路中使用六角虛擬座標的繞
徑協定兩項目標，以下將說明兩項目標之研究方法： 
(A) 時間同步演算法 
在第二年中我們主要完成設計的一個簡單的時間同步方法，命名為 Ratio-based Time 
Synchronization Protocol (RSP)。我們假想節點的個別的 clock 時間為固定的頻率，不考慮震
盪器所產生時間的誤差，因此兩個節點間的 clock drift 為固定的比值；節點利用此項假設，
算出與參考點的換算公式，以達成與參考點時間同步的效果。以下將說明此研究方法： 
(1) 兩點間時間同步 
首先介紹 RSP 同步方式，如何讓相鄰兩個節點可以達到時間同步的功能。假設有兩個
節點 i 與節點 r。在真實時間點 t，節點 i 的內部振盪器所對應時間以 Ci(t)表示之。若節點 i
要推算參考節點 r 的時間，則可以利用下列的線性方程式推算，藉此達到節點 r 與 i 的同步
功能。轉換方程式顯示如下： 
)1()()( φθ +×= tCtC ir  
    方程式中的θ代表節點 r 時間 Cr(t)與節點 i 時間 Ci(t)之 clock drift 比值；ψ代表兩節
點時間差偏移量（offset）。利用上述公式，若所有節點可以計算出本身與參考節點的 clock 
drift 與 offset 值，進而推算參考點的時間，節點 r 與節點 i 擁有相同的時間，此時這兩個節
點達成同步的效果。每個節點內部時間我們也稱作 local time，而以參考點的 local time 為同
步時間的標準，稱為整體網路的 global time。 
    接下來說明節點 i 如何取得與參考點 r 之間的 clock drift 與 offset 值。我們採用時戳封
包交換的方式。如下圖一所示，參考點 r 在真實時間 t1，對應的內部時間為 Cr(t1) = T1 時，
將時戳(Timestamp)放入封包中送出給節點 i，因為使用無線傳輸，其傳輸時間相當短暫，在
此可忽略封包傳遞延遲時間，假設節點 i 也在真實時間 t1 收到此封包，並紀錄封包收到的
內部時間 Ci(t1) = T2；參考點 r 再次重覆上列的動作傳遞另一個封包，節點 i 於真實時間 t2 ，
 5
公式(2)及(3)之運算時，須確保(T1, T2)與(Ti, Ti+1)兩筆資料間隔時間，必須要小於或等於β
值，若大於其值，則更改(T1, T2)為(Tj, Tj+1)，其中(Tj, Tj+1)為符合 j < i 且使得 Ti - Tj+1≧α的
最小值。以圖三為例，每隔 5 分鐘，參考點 r 送出新的同步封包，並設定α= 10，β=15，
ti 代表真實時間點，(Tj, Tj+1)代表該時間點所收集到的資料。第一次進行θ及ψ運算時，為
時間點 t2，使用(T1, T2)與(T3, T4)為計算參數；五分鐘後，參考點於 t3 送出(T5, T6)，此時 t3-t1 
= 10 ≤β符合條件，則使用(T1, T2)與(T5, T6)為計算參數，(T7, T8)同理也符合限制條件；接著
再接收到時戳(T9, T10)，此時 t5-t1 = 20 >β不符合上述條件，則節點需另找出 t`，使其滿足
t5－t` ≧α= 10 的最小值，在此推得 t` = t3，因此，將 t3 時間點對應之(T5, T6)由記錄表中取
出，並取代要進行計算之(T1, T2)，再和(T9, T10)共同代入公式中，推算出新的θ及ψ數值。 
 
 
R A B
 
圖三. 時間軸與對應的資料內容示意圖 圖四. Multi-hop 情境拓樸 
(2) Multi-hop 時間同步 
前一節介紹兩點之間如何利用時間轉換公式與封包交換，進行時間同步。接下來介紹
如何讓不能與參考點直接通訊的節點，也能與參考點完成同步校正之動作。 
若有一個節點不能直接與參考點通訊，其網路環境拓樸如上圖四所示：  
節點 R 為參考點，節點 A 可以直接與 R 通訊，節點 B 則在節點 R 之通訊距離外，無
法直接接收節點 R 送出之封包。此時，節點 B 的時間封包來源為節點 A。當節點 A 與節點
R 完成時間同步後，則節點 A 可以利用自身時間(Local Time)，推算出參考點的時間(Global 
Time)。節點 A 成為同步節點後，即會開始週期性地廣播送出同步封包，而封包所攜帶的時
間資訊為節點 A 預估出的 Global time 時戳，即推算出之參考節點 R 時間值，則節點 B 在
接收兩個同步封包後，可以藉此計算出與參考點之 clock drift 比值θ及偏移量ψ，即達成同
步之目的。在一般之 Multi-hop 網路中，便藉由如此動作，使網路中所有節點都可以計算出
與參考點之 clock drift 比值θ及偏移量ψ，達到整個網路皆為同步之狀態。 
特別值得一提的是，我們設計的主要假設為相同節點的 clock 頻率固定，因此，每個節
點僅有唯一的父節點，只接收同一個父節點所送出之預估的參考點時間。但無線網路訊號
隨環境而改變，可能會有封包資料傳送遺失之情況發生，若某節點等待接收同步封包之時
間，超過預先設定之間隔時間，則送出一個詢問封包，要求父節點重送時間同步訊息，降
低因環境造成網路連線暫時斷裂，而同步更新失敗的情況。若送出多個詢問封包，父節點
皆無回應，則視其為故障或電力耗盡，節點將重新尋找新的鄰居節點當作自己的父節點，
讓自身可以在最短時間內恢復與參考點進行時間同步之動作。 
 (B) 在無線感測網路中使用六角虛擬座標的繞徑協定 
我們提出一個在無線感測網路中使用六角虛擬座標的繞徑協定(Routing with Hexagonal 
Virtual Coordinates in Wireless Sensor Networks)。由於在監視森林火災的情境之下，節點經
由直升機灑下去之後，可能摔壞了，也可能掉到湖泊裡，使得整個無線感測網路有很多洞
(Holes) 的產生，甚至整個無線感測網路有可能被分割成好幾塊。利用找出許多的 Landmarks
來建立虛擬座標，並利用該座標來完成 routing 封包的目的。然而利用以往文獻中，在網路
(T11, T12) (T7, T8) 
t6 t5 t4 t2 t3 t1 
(T1, T2) (T3, T4) (T5, T6) (T9, T10) 
5 分鐘 
 7
圖五. 從環狀重疊的區域中被選取 Landmarks 圖六. 最後所建立出的 HVC chart 
(2) HVC Routing Protocol 
完成建立 HVC chart 後，因為整個網路中的所有節點，都已經具備有這項訊息。所以
當有節點要傳送封包給某個節點時就可以一照這個 HVC chart 來建立 routing 的路徑，底下
我們以一個完整的範例來說明我們的 HVC Routing Protocol 是如何運作。當有一個節點如
下圖七中的節點 S 要傳送封包給目的地節點 D，首先節點 S 會先建立一條從節點 S 到節點
D 中會經過的 Landmarks 所形成的最短路徑稱之為 Auxiliary Routing Path (ARP)。我們利用
現有的 Dijkstra 演算法找出從來源節點 S 到目的地節點 D 的 ARP 路徑，總共我們可以找到
六條路徑，分別是 T1→M→N→O→T5、T1→M→T3→O→T5、T1 → M → T3 → T4 → T5、T1 → 
T2 → T3 → O → T5、 T1→T2→T3→T4→T5 和 T1→T2→P→T4→T5，由此可明顯得知，由於我
們可找出許多不同的最短路徑，所以下次有封包在傳送時，我們的 routing protocol 就會隨
機選擇其中一條路徑作為傳送的路徑。因此，可以達到分散封包傳送的路徑，避免每次都
使用相同的傳輸路徑來傳送封包，而造成某些特定的節點提早因為電量的耗盡，而造成網
路的斷裂。假設我們選擇 T1→T2→T3→T4→T5 這條路徑傳送封包，則首先從節點 S 送出的
封包會往 Landmark T1 的方向傳送，由於所有節點皆沒有位置資訊，所以節點傳送封包時只
知道往某個方向傳送，也由於這樣的傳送方式，會避免重複行走某條固定的 routing 路徑。
當封包傳送到Landmark T2所在的橘色邊界時，因為在邊界內的所有節點已經擁有Landmark 
T2 的資訊，所以封包將不再繼續往 Landmark T1 的方向傳送，而是直接往 Landmark T2 的方
向傳送，如此可以節省往 Landmark T1 方向傳送的時間。同樣的過程將會使封包繼續傳送到
Landmark T5 的位置，但是當封包傳送到以 Landmark T5 為中心的深藍色圓形邊界時，由於
目的地節點 D 是位在最後一個 Landmark T5 的範圍內，且 Landmark T5 並非是目的地節點。
因此，封包一旦進入深藍色圓形邊界後，也由於已經相當靠近目的地節點 D，所以封包在
此範圍內，會被直接往目的地節點 D 傳送，最後封包將可順利傳送到目的地節點 D。 
 
圖七. 表示從來源節點傳送到目的地節點的 ARP routing 路徑 S→T1→T2→T3→T4→T5→D 
四、 結果與討論 
在時間同步方面，我們提出一個名為 Ratio-based Time Synchronization Protocol (RSP)
之時間同步協定，利用週期性送出傳送之時間封包，及簡易的運算式來維護整個網路的同
出席國際學術會議心得報告 
                                                             
計畫編號 NSC 95-2221-E-008-019 
計畫名稱 設計與實作智慧型服務無線感測網路--子計畫一:智慧型感測點與媒體存取控制協定之設計與實作(2/3) 
出國人員姓名 
服務機關及職稱 
姓名:杜信志 
服務機關:國立中央大學資訊工程學系 
職稱:兼任助理 
會議時間地點 
時間:96/3/11日-96/3/15日 
地點:香港 
會議名稱 IEEE Wireless Communications and Networking conference 2007, WCNC 2007 
發表論文題目 Location-Free Topology Control Protocol in Wireless Ad Hoc Networks 
 
一、參加會議經過 
    國際無線通訊與網路會議（IEEE Wireless Communications and Networking conference 
2007, WCNC 2007）於今年的三月十一日至三月十五日在香港的喜來登飯店會議中心舉行。
該會議由 IEEE Computer Society所主辦，主要目的是聚集世界各地大學、產業界、及政府單
位從事有關網路通訊研究的專家學者於一堂，共同切磋，並交換其在無線網路通訊領域中的
研究心得以及最新知識。 
今年大會主席由國際知名學者 Prof. Khaled Ben Letaief與 Chih-Lin I 擔任，議程委員會
的成員則來自世界各地。會議一共收到由 63 個國家或地區送來的快兩千篇論文，經過評審
之後一共接受了約八百篇論文(包含海報論文)。這些論文涵蓋了無線網路技術中 Phy/MAC、
Networking與 Applications and service等領域。 
會議分五天舉行，總共 3個 technical sessions，每個 session各有三個議題同時舉行，有
2個 keynote speeches及 8個 Technology /Business Application Panels。台灣暨南大學 張進福
校長亦受邀擔任 keynote speech的主講，對於無線通訊未來的研究方向提供了相當寶貴的意
見。而 8個 Technology /Business Application Panel分別討論的題目為“ The future of cellular: 
what is ‘4G’?”、“Mobile TV”、“The future of Cooperative Communication”、“Boom Time for 
Wireless Data Services & Applications' Perspectives from Hong Kong”、“Road to 4G from Mobile 
 
Location-Free Topology Control Protocol in Wireless Ad Hoc Networks 
Jang-Ping Sheu, Shin-Chih Tu, and Chi-Hung Hsu 
Dept. of Computer Science and Information Engineering  
National Central University, Taiwan 
Abstract- Topology control not only achieves the objective of 
power saving but also increases the system throughput by in-
creasing the spatial reuse of communication channels. However, 
there exists a hidden terminal problem due to asymmetric trans-
mission radii among nodes after topology control. In this paper, 
we propose a distributed protocol that deals with topology control 
at network layer and hidden terminal problem at MAC layer. 
Each node in the networks determines its power for data trans-
mission and control packets transmission according to the re-
ceived beacon messages from its neighbors. The proposed proto-
col works without location information and uses little control 
packet overhead to prevent the potential collisions due to the 
hidden terminals. Simulations show that our protocol signifi-
cantly decreases total power consumption in the networks and 
has a better network throughput compared to previous work. 
I. INTRODUCTION 
Mobile ad hoc networks (MANETs) have become popular 
research topics recently. Due to the mobile manner of wireless 
nodes, the construction of an ad hoc network, called topology, 
is usually temporary or changes dynamically. In a MANET, 
besides the distribution of wireless nodes, the topology is 
mainly decided by their transmission power or radius. Conven-
tionally, in a MANET, the transmission radii of nodes are 
fixed and all nodes use the maximum power to transmit pack-
ets. However, the overall performance on the end-to-end delay, 
channel utilization, and lifetime of a MANET can be enhanced 
if the transmission power of each node is properly adjusted to 
a reduced level [1][2][3]. The primary object of topology con-
trol is to design an energy-efficient protocol that optimizes the 
transmission power of each node, while the resulting topology 
retains its property of connectivity. In general, higher network 
throughput can be achieved due to the following two benefits. 
First, the interference is reduced by varying the transmission 
radii of the nodes to a nearer scope [1][4]. Second, more data 
transmissions are able to simultaneously occur in the 
neighborhood of a node and thus, increase spatial channel 
re-use[2].  
Several papers were proposed to address topology control in 
the literature. We can classify them into centralized and dis-
tributed computing methods. The centralized topology control 
methods [5][6][7], such as the minimum spanning tree  based 
algorithm [5], assume that a central entity (e.g., sink or access 
point) knows the locations of each node, and is capable of de-
termining the optimum transmission power of each node 
through the collected global information. Although this cen-
tralized method is simple, it is not scalable. Moreover, such a 
central entity is against the nature of ad hoc networks in which 
it normally lacks infrastructure. On the other hand, the 
 
 
distributed methods [8][9][10] have the advantage of scalabil-
ity and adaptation to mobility of nodes whereby each node 
makes a local decision of the suitable transmission power 
based on the gathered information from nearby neighbors.  
However, most of the proposed approaches for topology 
control hold the assumption that each node knows its own lo-
cation information by means of a global positioning system, 
triangulation-based positioning protocols and other positioning 
methods. However, to be equipped with a positioning device 
not only increases the cost of hardware deployment but also 
brings about several other disadvantages. First, it confines the 
location-aware based protocols to work in the outdoor envi-
ronment. Besides, the acquisition of location information will 
introduce computation delay, extra message overhead and en-
ergy consumption at each node. For this reason, the authors in 
[11] presented the XTC algorithm which is one of the few to-
pology control protocols which are location-free. The XTC 
algorithm consists of three steps. In the first step, each node 
broadcasts once at the maximum power and then ranks all its 
neighbors according to its link quality to them (from high to 
low). Each node transmits its ranking results to neighboring 
nodes during the second step. In the final step, each node lo-
cally examines all of its neighbors in the order of their ranking 
and decides which one needs to be directly linked. The XTC 
algorithm features the basic properties of topology control 
such as symmetry and connectivity while running faster than 
most previous algorithms. 
Although many efforts have targeted the topology control 
issue, most of them [5][6][7][8][9][10][11] focus on the net-
work layer and fail to consider the interference or collision 
problems that can occur at the medium access control (MAC) 
layer. The potential collision, which is the well-known hidden 
terminal problem, occurs when each node does not have the 
same transmission power in the resulting topology after power 
control. For example, in Fig. 1, assume that the resulting to-
pology after the power control protocol is constructed by five 
nodes and links (solid edges) between them. If node A intends 
to transmit data packets to B, it initially sends a RTS packet at 
a determined power (the dotted circle centered at A). Node B 
replies with a CTS at its determined power (the dotted circle 
centered at B) to ensure that all its one-hop neighbors (e.g., A 
and E) can overhear. Then, node A starts to transmit the data 
packets to B. Nodes C and D, which lie outside the reserved 
floors of nodes A and B, will not receive the RTS/CTS mes-
sage exchanged by nodes A and B. As C uses its determined 
power (the dotted circle centered at C) to send packets to the 
direct linking neighbor D, it causes a collision at node B. The 
hidden terminal problem is due to the asymmetric link between 
nodes B and C. This work was supported by the National Science Council of Republic of 
China under grant NSC94-2213-E-008- 024 
 
1525-3511/07/$25.00 ©2007 IEEE 
This full text paper was peer reviewed at the direction of IEEE Communications Society subject matter experts for publication in the WCNC 2007 proceedings. 
 
node u records node v as one of its next-hop neighbors 
(v∈DCS(u)). The link_type of v in u’s vicinity table (written 
as link_typeu(v) for simplicity) is marked as ’d’. Obviously, the 
value in min_comm_cost of v in u’s vicinity table (written as 
min_comm_costu(v)) is the same as the value of di-
rect_comm_cost of v (written as direct_comm_costu(v) = 
C(Puv)), which represents the temporary minimum energy 
consumption of communication cost from u to v by direct 
transmission.  
If there exist some CNs with node v, node u will check the 
type of each CN i and update the vicinity table accordingly. 
There are three types of CNs in our protocol. If the summation 
of min_comm_costu(i) in u’s table and min_comm_costv(i) in 
v’s table is smaller than the direct_comm_costu(v), node i is a 
relay CN and node u has a power-efficient path to node v via 
node i. In this case, node u would exclude v from its next-hop 
neighbors (v∉DCS(u)) by marking the link_typeu(v) as “i”. 
Thus, the minimum communication cost from u to v 
(min_comm_costu(v)) is replaced by the summation of 
min_comm_costu(i) and min_comm_costv(i). If node i is not a 
relay CN, node u would compute the summation of 
min_comm_costu(v) and min_comm_costv(i), which is equal to 
the minimum communication cost from u to i via v 
(u→…→v→…→i). If the summation is smaller than the 
min_comm_costu(i), node i is a benefited CN and node u has a 
power-efficient path to node i via node v. Therefore, the 
min_comm_costu(i) is updated to the summation of 
min_comm_costu(v) and min_comm_costv(i) and node i does 
not belong to u’s next-hop nodes (j∉DCS(u)). If the CNs do 
not belong to the above-mentioned types, they are called the 
irrelevant CNs. The irrelevant CNs will not cause any effect on 
the communication cost of node u with its neighbors. 
For example, assuming nodes D and E have received the 
“hello” messages from some of their neighbors and established 
their vicinity tables as shown in Fig. 3(a). Then in Fig. 3(b), 
node E broadcasts a “hello” message at Pmax including the in-
formation of its vicinity table. Once D receives the “hello” 
message from E, it computes the C(PDE) and puts the value 
into direct_comm_costD(E). Assume that the value of C(PDE) is 
equal to 8. There exist two CNs, A and B between nodes D and 
E. Since the summation of min_comm_costD(A)  in D’s table 
and min_comm_costE(A) in E’s table is smaller than the di-
rect_comm_costD(E), node A is a relay CN and node D has a 
power-efficient path to node E via node A. The 
min_comm_cost of node D to node E is equal to 4 as shown in 
Fig. 3(b). Fig. 3(c) illustrates that the communication power 
consumption from D to B can be further reduced after the 
min_comm_costD(E) is determined. The min_comm_costD(B) 
is updated to 5 and node B becomes the benefited CN. Ac-
cordingly, the field link_typeD(B) is changed to “i”. 
After a node u received the “hello” messages from all its 
neighbors, it could determine the DCS(u) and Pdata(u) from its 
vicinity table. Node u determines node v as its next-hop 
neighbor if the link_typeu(v) is marked as “d”. The determined 
transmission power of node u, Pdata(u), is the value that it can 
directly communicate with all of its next-hop nodes in the 
DCS(u). Note that the edges (links) constructed in the resulting 
topology are bi-directional. If node u and v in the resulting 
topology have an edge between them, the power-efficient way 
to communicate with each other is through the direct link. 
However, having no edge between two nodes does not always 
represent that the transmission power of one node cannot reach 
to the other node, because it just shows sometimes that an 
asymmetric link exists between them (for example, node B and 
node C in Fig. 1). 
 
 
(a) 
 
 
(b) 
 
 
(c) 
 
Figure 3: Example of link determination phase (a) vicinity tables of nodes D 
and E (b) a record of new neighbor E is inserted into D’s vicinity table with 
min_comm_cost = 4 (c) the min_comm_cost from node D to node B is updated 
to 5. 
B. Interference Announcement Phase 
After all the nodes have broadcast the “hello” messages and 
the optimal data transmission power at each node has been 
determined, each node starts to execute the interference an-
nouncement phase. This phase avoids data collision resulting 
from the hidden terminal problem when nodes use the power 
determined by the previous phase to transmit the data packets. 
The prevention mechanism proposed here is similar to the 
802.11 protocol which takes advantage of the RTS/CTS con-
trol packets. However, the difference with this method is that 
each node can determine a more appropriate power Pcontrol, to 
transmit the control packet. As we mentioned in the section on 
the previous work, using an excessive control packet power 
has the adverse effect of hindering data transmission from oc-
curring in the neighborhood and results in a low system 
throughput. 
This full text paper was peer reviewed at the direction of IEEE Communications Society subject matter experts for publication in the WCNC 2007 proceedings. 
 
Before proceeding to compare and analyze the results of the 
XTC algorithm and our proposed LFTC protocol based on 
several performance metrics, we would like to understand 
more the characteristics of the resulting topology of both pro-
tocols. Fig. 5(a) shows the original network topology of 100 
nodes, wherein the nodes use the maximum power to commu-
nicate with the others. Fig. 5(b) and 5(c) represent the resulting 
topologies generated by the XTC algorithm and our LFTC 
protocol, respectively. Based on the average node’s degree in 
these topologies, we discuss their pros and cons. The average 
node’s degree should not be too large nor too small. A large 
degree implies an increase of interference and collision, as 
well as an unnecessary energy waste such as the topology 
shown in Fig 5(a). A small degree also tends to increase the 
overall network power consumption because longer paths have 
to be taken from end to end. Note that the topology of our 
protocol has a higher average degree than the one in the XTC. 
This is because each node in our protocol considers the best 
power-efficient links to every neighboring nodes, while the 
nodes in the XTC only allows a minimum number of links to 
connect to the closer neighbors. 
 
(a)                 (b)                   (c) 
Figure 5: Network topologies of 100 nodes constructed by (a) without topol-
ogy control (b) XTC protocol (c) LFTC protocol. 
For any pair of nodes in the resulting topology, we use the 
modified AODV protocol to find out the route which has the 
minimum total power consumption from among all the paths 
between them. For simplicity, we referred to this route as the 
least cost path. The energy cost in the least cost path is the 
summation of the data transmission power of all transmitting 
nodes which participate in the data dissemination along the 
path. The power depletion of the RTS/CTS control packets is 
not included in the energy cost of the path. The following two 
figures show the network density impacts on the hop counts 
and energy cost in the least cost path. The number of ad hoc 
nodes varies from 50 to 300 in the 1000 m x 1000 m region. 
Fig. 6 compares the average hop counts in our protocol with 
the one in the XTC approach. While the hop counts in both 
protocols increase as the network density becomes denser, the 
hop counts in our protocol are obviously less than that in the 
XTC. It is significant to note that the difference in the average 
hop counts of the two algorithms grows from about 2 hops in 
the 50-node network environment to around 5 hops in the 
300-node environment. It reveals that the denser the network 
size, the better the performance of the resulting topology gen-
erated by our protocol when one node sends packets to another 
node. This is because having fewer hop counts means less de-
lay time in the multi-hop wireless transmission. 
Fig. 7 shows the average energy cost of the least cost paths 
between all node pairs in the network. It can be observed that 
our protocol has similar simulation results to that performed by 
the XTC algorithm. Since the nodes in our protocol have 
slightly higher average degrees than those of the XTC, it im-
plies that the decided data transmission power of nodes in our 
protocol could be slightly more than that in the XTC. How-
ever, our protocol has the benefit of having fewer hop counts 
in the least cost path. Overall, the LFTC performs just as good 
as the XTC algorithm as regards the average energy cost in the 
least cost path. 
 
Figure 6: Average hop counts in various network densities. 
 
 
Figure 7: Average energy cost of the least cost paths between all node pairs in 
various network densities. 
The prevention mechanism for collision avoidance (inter-
ference announcement phase) is integrated with the topology 
control algorithm (link determination phase) to obtain the 
LFTC protocol. Then we compared the ratio of collision of the 
LFTC with the XTC in an environment wherein 100 nodes are 
deployed in a 1000 m x 1000 m region. Note that in the XTC, 
it is assumed that the nodes use their determined power to 
transmit both the data and the control packets. In Fig. 8, the 
x-axis represents the number of end-to-end paths (or number of 
source nodes) in which data packets are disseminating simul-
taneously. The y-axis is the ratio of total collisions of data 
packets. In the simulation, source nodes are randomly chosen 
and they send a data packet once. Retransmission mechanism 
is not implemented when collisions occur. Our protocol per-
forms close to 100 percent in terms of successful data receiv-
ing ratio regardless of how many concurrent data transmission 
paths exist in the network. On the contrary, the collision ratio 
in the XTC increases smoothly in the beginning as the number 
of paths increases. Then the ratio boosts as the number of paths 
continues to rise. When there are 50 concurrent transmission 
paths in the network, the ratio of collisions in the XTC reaches 
up to 75%, which means that only 1/4 of the total transmitted 
data packets can be received successfully. It proves that our 
protocol effectively avoids the problem of collision and en-
hances the overall performance. 
The throughput of the LFTC and the 802.11 standard in a 
100-node network is shown in Fig. 9. In the figure, we vary the 
number of source nodes which generate data packets, wherein 
each data packet is assumed to be 256 bytes. It can be ob-
served that the throughput of our LFTC is, on the average, 
about 1.7 times higher than that of the 802.11 standard. The 
This full text paper was peer reviewed at the direction of IEEE Communications Society subject matter experts for publication in the WCNC 2007 proceedings. 
 
