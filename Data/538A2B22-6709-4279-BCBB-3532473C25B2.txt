目      錄 
1. 前言 ................................................................................................................................................1 
2. 研究計畫的目的 ............................................................................................................................1 
3. 文獻探討 ........................................................................................................................................1 
3.1. 物件導向設計品質量測(Quality Measurement of Object Oriented Design, QMOOD) .1 
3.2. 角色為主之設計樣式呈現方式(Role-based Pattern Representation).............................2 
4. 設計樣式的驗證 ............................................................................................................................2 
4.1. 品質提升程度 ..................................................................................................................4 
4.2. 品質提升者設計樣式 ......................................................................................................5 
4.3. 具多重品質重點之設計樣式 ..........................................................................................5 
5. 結果與討論 ....................................................................................................................................6 
5.1. Pattern Verification System ..............................................................................................6 
5.2. 結論 ..................................................................................................................................8 
6. 參考文獻 ........................................................................................................................................8 
7. 計畫成果自評 ................................................................................................................................9 
 
 i
定義在階層二中的設計屬性被用以評估階層一的品質特性，例如耦合度(Coupling)是用來評
估其可重用性。連結關係l12表示一個耦合度較低的模型擁有高的可重用特性。為了量測耦合度，
COF(Coupling Factor)此量測方法被定義在階層三以計算一個類別直接關聯到的其他不同類別個
數。連結關係l23 表示COF量測方法乃是為了評估耦合性。階層四中的元素乃由一群物件模型中
的基本元素所構成，包含有物件、類別、關係和生成(generalization)關係等。連結關係l34表示類
別和類別間的關係可以COF量測方法以評估。 
Level 1 Design Quality
Attribute
Level 2 Object-Oriented
Design Properties
Level 3
Object-Oriented
Design Metrics
Level 4 Object-OrientedDesign Component
L12
L23
L34
QMOOD model
Reusability
Coupling
Coupling Factor
(COF)
Class,
Relationship
l12
l23
l34
An Example
l
l COF
12
23
 : Coupling is used to assess reusability
 :  is used to measure coupling
l  COF34 : Class and relationship are used in  
圖 1. QMOOD 模型及其範例 
圖 2. 一個設計樣式解決方法結構：兩種表示方式 
3.2. 角色為主之設計樣式呈現方式(Role-based Pattern Representation) 
一般而言，一個設計樣式主要由四個基本部分來驗證[6]：”樣式名稱”(pattern name)以簡短的句子
描述設計問題、解決方法以及結果；”問題描述”(problem)用以敘述何種情況可有效應用該設計樣
式；”解決方法”(solution)則以較抽象的方式描述解決方式，包含其相關成員及成員間的關係，還
有成員間如何相互合作；”結果描述”(consequence)說明使用該樣式所提升的優點及可能引發的缺
點。在[8]，解決方法通常藉由在模型層(model level)中使用類別圖和互動圖以非正規地方式呈現，
亦即此模型為一個範例模型。舉例來說，圖 2(a)呈現抽象工廠設計樣式解決方法的結構，這其
實是個存在兩個產品家族的範例（ProductA1 和ProductB1 屬於同一家族）。雖然抽象工廠可以被
應用在有多個產品家族的情況，但是上述結構並無法闡明此概念。 
4. 設計樣式的驗證 
因為設計樣式可以提供解決方法來滿足功能性需求，並能提供較好的方式來滿足非功能性需求
[1]，例如，觀察者設計樣式原本之目的描述如下[2]： 
定義一個物件間一對多的相依關係，當一個物件改變其狀態時，其他與該物件有相依關係之
物件也會被通知並自動更新。 
根據此描述，觀察者設計樣式是被設計以用來解決一個主體物件與其相關觀察者物件間的溝通，
在功能性方面，當主體物件狀態改變時，它必須要能夠通知所有與其相關的觀察者物件，而在非
功能性方面，主體物件必須在不知道相關的觀察主物件型態下，自動的通知所有觀察者物件其狀
態已改變，據此觀察，本就欲探究”設計樣式如何能夠提升非功能性需求”，因而本研究將設計樣
式重新定義另 一表現方式< IF, IN, SF, SN, T>： 
z IF：功能性需求目的(FR-intent)，描述設計樣式所要做的事為何。 
 2
或維持不變 (maintained)，例如：抽象工廠樣式的NFR-intent之品質重點定義為 (coupling, 
decreased)，表示其目的是為了要降低耦合度。當設計樣式有單一品質重點時，Q(IF , IN) 亦可以
Q(dp)來表示，表一描述了數個設計樣式之品質重點範例。 
 圖 3說明了抽象工廠樣式中IF、IN、SF及SN之相互關係。FR-structure為可實現FR-intent之超
模型結構，NFR-structure為可提升NFR-intent之超模型結構，品質重點即為FR-intent擴充到
NFR-intent所影響的品質屬性，轉換則是將FR-structure模型的實體結構轉換為NFR-structure模型
的實體結構。 
4.1. 品質提升程度 
使得µ為一物件導向衡量方式，則模型結構m之量測值為µ(m)。若(P, µ)∈Φ23，則µ能夠被用來評
估物件導向設計屬性P。µ(m1) < µ(m2)即為模型結構m2可提升屬性P較模型結構m1高。本研究中，
μ(m)的計算是基於μ 的原始定義，例如COF[3]定義為： 
( )[ ]
TCTC
CCclientisTC
i
TC
j ji
−
∑ ∑= =
2
1 1
,_ ， 
其中 TC 表示在模型結構 m 內全部的類別數目，而 is_client 函數定義為 
( )
otherwise
CCCCiff
CCclientis jjjiji
≠∩⇒
⎩⎨
⎧=
0
1
,_  
如果類別Ci包含至少一個因非繼承關係參考到類別Cj，則is_client 回傳值為 1，此處之一個參考
也許是一個引數型態、傳回值或是呼叫一個伺服類別的方法。 
本研究將物件測量的概念延伸到超模型的層級以評估超模型和設計樣式的特性。假設 M 為一個
超模型結構，它的量測值能夠藉由它的實例模型的量測推導出來： 
( ) ( )( )mGM Mm μμ ∈=  
其中G為一聚集函數(aggregation function，如平均)，m∈M 表示m為M 的一個實體模型。正如在
模組層級裡的衡量，μ(M1) < μ(M2)表示M2可提升μ所欲量測之屬性P較M1高。理論上，超模型能
夠有無限個實例模型，因此，μ(M)是不可量測的。為此，本研究中定義一個集合為M 表示所有
可能的實例模型的子集合（M 為M 的取樣而來），並且重新定義量測為： 
( ) ( )( )mGM Mm μμ ∈=  
給定給一個超模型結構 M 和一個超模型的轉換 T，我們定義 μ(M,T)為計算原模型上一個轉換的
有效性的量測： 
( ) ( )( ) ( )( ) ⎟⎟⎠
⎞⎜⎜⎝
⎛ −= ∈ m
mmTGTM Mm μ
μμμ ,  
μ(M,T) > 0 意指轉換T提高屬性P，亦即，T能夠將M轉換成另一個屬性P較高的超模型。反之亦
然，若μ(M,T) = 0，則轉換T在有關於屬性P的超模型M上不具備有效性(effective-less)。依據μ(M,T)
本研究方法定義了設計樣式的品質提升程度(quality improvement effectiveness, QIE)，給定一個量
測方式μ，μ(dp)表示為應用設計樣式dp物件有效性程度。更明確的來說，假設dp=<IF, IN, SF, 
SN,T>，有效性是在功能性的結構SF和轉換T的基礎上被測量： 
( ) ( ) ( )( ) ( )( ) ⎟⎟⎠
⎞⎜⎜⎝
⎛ −== ∈ s
ssTGTSdp
FSsF μ
μμμμ ,  
μ(dp) > 0，意指應用設計樣式 dp 將會提高物件屬性 P，然而，μ(dp) < 0，為意指 dp 將降低物件
 4
5. 結果與討論 
5.1. Pattern Verification System 
在本次研究中，為了驗證其理論結果，實做一設計樣式品質評量系統（Pattern Verification System, 
PVS）並以 GoF 中 Mediator 設計樣式為例以驗證此一概念，同時藉由 IBM 塑模工具 Rational XDE
來幫助我們繪製功能性結構（FR-structure）、功能性結構（NFR-structure）與模型轉換規格並將
其匯出成為 PVS 的 Profile（XMI 格式），以下 PVS 實際運作步驟： 
第一步：擷取功能性目的並建立品質重點。 
首先我們會調查 Mediator 設計樣式原本的定義： 
Define an object that encapsulates how a set of object interacts. Mediator promotes loose coupling 
by keeping objects from referring to each other explicitly, and it lets you vary their interaction 
independently. 
我們將其區分為功能性目的與非功能性目的，並依據其描述定義品質點，可以從品質重點明顯的
瞭解到其目的是為了要降低兩個相異的 colleague 物件間的耦合程度，藉由 QMOOD 模型，我們
定義了其品質重點為 〉〈 decreasedcoupling , ，因而，我們有了以下的部分的定義： 
z IF(Mediator): A colleague object can communicate with other colleague objects. 
z IN(Mediator): A colleague object can communicate with other colleague objects by keeping 
objects from referring to each other explicitly to promote loose coupling. 
z Q(Mediator) = 〉〈 decreasedcoupling ,  
第二步：設計該設計樣式的結構。 
在第二步驟中我們將建立Mediator設計樣式的功能性結構與非功能性結構，如圖 5（a）與圖 5（b）
分別以角色為主的方式來描述其功能性結構（SF(Mediator)）與非功能性結構（SN(Mediator)），
其兩者間最大的不同在於SN(Mediator)以一Mediator物件作為代理者協調Colleague物件間的溝
通，因而避免了其直接的相互傳遞。 
 
圖 5. Mediator 設計樣式的結構：（a）功能性結
構（b）功能性結構（c）以 profile 的方式表現
非功能性結構。 
圖 6. Mediator 設計樣式轉換規格 
因為當我們要以metamodel的方式來描述從功能性結構到非功能性結構間的轉換關係，必須將自
訂的stereotype標籤整合到UML中，本研究參照Supakkul’s[7] 與Jing’s[8]的方法，利用UML profile
的方式來建構設計樣式的SF、SN與其轉換規格的metamodel模型，其中所有的模型元件皆以
 6
最終實驗數據如表格 一，可瞭解到COF(sF )、COF(sN )與類別數量的關係（如圖 7），在本圖中
可明顯的看到當模型中的類別數量愈多時，Mediator設計樣式對於降低耦合度越能發揮作用，例
如最高點樣本編號 12 模型中，即使我們必須再加入一Mediator類別，Mediator設計樣式仍可大量
減少類別間的關係，亦即，Mediator設計樣式可有效的降低耦合度。 
Mediator Pattern
-0.8
-0.6
-0.4
-0.2
0
0 5 10 15
numbers of class
QI
E QIE
 
圖 7. COF(sF )、COF(sN )與類別數量的關係 
5.2. 結論 
如Winn及Calder [1]兩位學者所提到，一個設計樣式必須要能夠解決非功能性的需求，因此，本
研究提出了一個方法以品質的觀點來分析及驗證設計樣式；當我們稱一個設計樣式為品質提升者
時，表示其目的能夠滿足品質需求且有較好的結構模型來滿足其目的；而本研究為了要驗證一個
設計樣式其目的與結構模型是否一致，我們應用了物件導向品質模型，其基本概念即為當”設計
樣式之目的可映對到一物件導向特性(如耦合度)時，其結構模型亦可對應到期相關的物件導向衡
量方法(如COF)”，設計樣式的驗證可以幫助我們在物件導向方式開發中管控其品質，本研究亦
提出品質提升程度(QIE)來量測設計樣式對於品質特性所能影響的程度。 
 最後並於SEKE’05 發表本研究論文[12]及開發一設計樣式驗證系統以證明本研究的概念，
未來並希望能提供更簡易的使用環境與更多的設計樣式讓開發者能以最簡便的方式瞭解各種設
計樣式的應用環境與應用前後的成效。 
6. 參考文獻 
[1] T. Winn and P. Calder., “Is this a pattern,” IEEE Software, 19(1):59–66, January/Febury 2002. 
[2] E. Gamma, R. Helm, R. Johnson, and J. Vlissides. Design Patterns: Elements of Reusable Software. 
Addison-Wesley, 1994. 
[3] F. Brito e Abreu. The mood metric set. In Proceedings of ECOOP＇95 Workshop on metrics, 1995. 
[4] C. Alexander, S. Ishikawa, and M. Silverstein. A pattern language: towns, buildings, construction. 
Oxford University Press, New York, NY, 1977. 
[5] F. Buschmann. Pattern Oriented Software Architecture: A System of Patterns. Wiley, 1996. 
[6] E. Gamma, R. Helm, R. Johnson, and J. Vlissides. Design Patterns: Elements of Reusable Software. 
Addison-Wesley, 1994. 
[7] S.Supakkul, L. Chung, “ A UML profile for goal-oriented and use case-driven representation of 
NFRs and FRs,” Software Engineering Research, Management and Applications, 2005. Third ACIS 
International Conference on, pp.112 – 119, 2005. 
[8] Jing Dong and Sheng Yang, “Visualizing design patterns with a UML profile,” Human Centric 
 8
 報告人
姓名 
 
朱鵬化 
 
就讀校院
（科系所）
資訊電機學院資訊工程研究所 
■博士班研究生 
□碩士班研究生 
     
時間 
會議 
     
地點 
Las Vegas, USA 
2006 年 6 月 26 日
至 
2006 年 6 月 29 日 
本會核定
補助文號
NSC94-2213-E-035-41 
會議 
名稱 
 (中文) 2006 年軟體工程研究與實務國際會議 
 (英文) The 2006 International Conference on Software Engineering 
Research and Practice 
發表 
論文 
題目 
 (中文) 應用軟體程序方法論之經驗報告 
 (英文) An Experience Report of Applying the Personal Software Process 
Methodology 
 
一、參加會議經過 
本次發表論文的內容其目的是為了瞭解透過” 個人軟體流程改善”的訓練是否能
夠顯著的提升個人的軟體開發能力，因而與薛老師將九十四學年度上學期個人軟
體流程改善課程中 16 位與課的同學資料做一統計分析，並設計問卷瞭解其實際
效用。 
 
二、與會心得 
本次會議約有 47%是來自美國本土以外投稿的學者，其論文接受率約為 34%，
除了軟體工程議題外，亦有其他相當豐富資訊科學領域相關研究，也遇到了世界
各國的研究學者，大家透過英文互相交換研究心得，同時也覺得相當高興能走出
台灣到國際場合上，瞭解到世界上有這麼多學者投入在資訊科學的研究。 
 
出席 SERP’06 除了發表論文外，同時也旁聽了以下幾場與未來研究相關議題。 
1. Session: SOFTWARE TESTING AND QUALITY ASSURANCE 
軟體測試與設計樣式都有同樣的目的，就是為了提升軟體品質，不同的是設計樣
式是透過設計結構的改變提升軟體品質，且通常為非功能性品質的提升，而目前
的軟體測試是多是位於程式碼的測試，通常為測試功能性的正確性，因而本場次
的軟體測試相關論文多為如何有效的產生測試案例相關議題，如果可融合兩者，
或許可於設計階段時提出測試的設計樣式。 
