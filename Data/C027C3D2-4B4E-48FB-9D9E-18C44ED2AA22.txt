2is much more valuable than ICE for
educational purposes. Its core part is an
embedded processor called CH01
developed by our department along with
CHIRKAL enterprise. This educational
system can send out the control signals,
bus signals, and register signals inside a
microcontroller unit (MCU) core and
these signals can be shown on a delicate
panel using LEDs. There is also an
LCD module used to show the
instructions being executed by the
inverse assembler. This system allows
students to adequately understand how
a processor works and can be also used
for the enhancement of basic design
capability of an embedded processor.
Keywords：Microprocessor, Visualized,
Soft-core
二、緣由與目的
微處理器已應用於各種生活領域，只要
與操作介面有關的範圍，都能發現微處
理器([1]~[5])的蹤跡，微處理器的使用數
量，在國外甚至成為評估收入、經濟狀
況的指標之一。就技術而言，國外大廠
投入較早，所以技術遙遙領先。目前國
內威盛、義隆、盛群、及凌揚等電子大
廠已經具備了發展具有自己特色之微處
理器的能力，生產線仍以 8 位元為主，
其它高階微處理器的技術還在進步中。
因此台灣若要發展成『矽島』，自然不
可輕忽微處理器設計人才的培育，以期
自行發展處理器核心([6]~[11])，才能迎
頭趕上其它國外大廠。為此目的，本系
希望與企業合作發展一套可視化微處理
器軟核設計之教學系統來培養學生微處
理器結構設計之基本能力。
本計畫所實現之可視化微處理器軟
核設計之教學系統是一個比 ICE 更具教
學價值的新穎教具，它的核心是一顆本
系與僑高科技公司共同研發之嵌入式
CH01 微處理器，它能將內部微處理器執
行每一個指令所產生的控制訊號(解碼訊
號)、匯流排訊號、以及暫存器訊號送
出，搭配精美的微控器硬體架構面板、
LED 監控燈號、LCD 反組譯面板來供使
用者作微處理器的實體運作與監控之
用。該教學系統能使學生充份了解微處
理器的運作方式，以期培養學生能夠具
有設計嵌入式系統中核心處理器的基本
能力。嵌入式系統是一種整合軟體硬體
技術的一種快速系統解決方案，它是以
一顆 16 或 32 位元以上的微處理器為核
心，目前消費性電子產品之開發應用仍
以 8 位元處理器為主流，台灣對於低階
處理器之技術已相當成熟，但是以較高
階微處理器為核心的發展技術仍掌握在
國外大廠手中，如 ARM 核心、NIOS 核
心等。我們目前所能做的僅限於了解國
外大廠之處理器架構及其週邊發展環
境。為了突破此一困境，國內有國立中
正大學資工所之研發團隊正在研發一顆
VLIW 之 RISC 高階處理器來作為 SOPC
核心，但仍有許多問題有待克服，在軟
體方面國內也有相關的研發團隊正在研
發 OS 相關技術。若國內能自行研發一
顆高階處理器，並且能夠將自行研發之
OS 順利 PORTING 至該處理器上，將是
國內技術之一大突破。
學習高階處理器之設計可以從低階 8
位元的處理器著手，以往大專院校微處
理機原理、結構與實習相關課程除了基
本原理外，大都著重國外大廠之現成微
處 理 器 的 結 構 與 應 用 ， 但 隨 著
CPLD/FPGA 的出現，設計一顆屬於自己
的微處理器雛型已經變得輕而易舉。微
處理器內部硬體架構的軟核建構可以透
過硬體描述語言來完成，並藉由電路編
譯器進行系統的功能及時序模擬，而雛
型的實體驗證也可透過電路編譯器的下
載或燒錄介面載入 CPLD 或 FPGA 等元
件中來進行實體驗證，因此微處理機的
教學已經邁入了實體設計的領域。本計
畫是專為培育微處理器核心設計人才而
發展一套實體的可視化MCU教學系統，
使學生對於微處理器之設計產生興趣，
為將來高階處理器設計培育技術人才，
4心 UniCore，成立晶心科技
幹”，經濟日報，2005/7/11。
[8] 國家矽導計畫，”自行發展
MPU Core” 工 商 時報，
2005/4/12。
[9] 溫懷岸，”晶片系統國家型
科技計畫—台灣心的構
想”，創新核心處理器技術
交流研討會，2005。
[10] 國家矽導計畫，”二階段任
務 推動台灣心 成立晶心
科技”，交通大學公共事委
員會新聞組，2005。
[11] 褚偉利，”台灣SoC 產業發展
沿革與現況”， 經濟部技術
處，2004。
圖 1. 微處理器核心及控制器架構
6附 件
第一章 程式發展環境使用說明
可視化MCU實體監控系統是使用僑高公司所研發之 C KC軟體，該軟體提
供使用者一個組合語言程式編輯、語法除錯、和程式及資料記憶體 VHDL 原始
碼轉換介面。
1-1 程式編輯環境使用 CKC
執行 CKC 後會出現圖 1-1 的程式編譯視窗，然後使用者就可以撰寫微控器
CH01的組合語言程式。
圖 1-1
與該軟體搭配的重要資料夾安裝在 C槽中，一個是存放組合語言程式原始碼的
資料夾 ch01asm_ex，裡面的程式檔之附檔名皆為.asm，1-3節以後所介紹的程
式碼都存放在此資料夾中。另一個是程式檔經組譯及 VHDL程式及資料記憶區
規劃碼轉換後的資料夾 ch01prog_sel。
8圖 1-4
如圖 1-5所示，按下組譯及轉碼鍵 後，若程式碼編譯有錯誤，錯誤訊息會
顯示於下方。
圖 1-5
當錯誤更正完畢，再按下 鍵，會出現圖 1-6的視窗。
10
CKC可以將所編輯的組合語言程式碼轉成 VHDL程式及資料記憶體硬體
原始碼，這個原始碼需經過 QuartusⅡ編譯後才能載入 ACEX IK100 的 FPGA
元件中。
1-2-1開啟程式記憶體之 QuartusⅡ設計檔
CKC可以將所編輯的組合語言程式碼轉成 VHDL程式及資料記憶體硬體
原始碼，這個原始碼需經過 QuartusⅡ編譯後才能載入 ACEX EPIK100Q208 的
FPGA元件中。
如圖 1-8所示，開啟 QuartusⅡ後，點選 File下的 Open Project:
圖 1-8
出現 Open Project表單後，開啟 c:\ch01prog_sel\prog_sel，如圖 1-9所示。
12
圖 1-11
如圖 1-12所示在完成燒錄後，視窗右上角會在出現 100%的完成圖示。
圖 1-12
14
ext_int.asm的第一行執行 jp main後會無條件跳躍至 main標記處去執行主
程式。
主程式第 1行 : 執行 setb ie使所有中斷遮罩都打開。
主程式第 2行 : 執行 setb efe將外部中斷設定為致能。
主程式第 3行 : 將一般暫存器 r0的起始值設為十進位 0。
主程式第 4行 : 最後執行 jp pause來等待外部中斷的發生。
中斷副程式:
CH01外部有一個外部中斷觸發端 exti，若未設定觸發方式，則內定為負緣
觸發，中斷向量為十進位的 2(十六進位 H02)，因此中斷副式由 org d2開始。
中斷副程式第 1行 : 以 clrb ef來清除外部中斷旗標，使外部中斷可以再被觸
發。
中斷副程式第 2行 : irdrom a,r0是將 r0的內容當作資料記憶體的位址，並將 r0
所指向的資料讀至累積器 a中。
中斷副程式第 3行將 a的內容送至輸出埠 p1，p1可以連接 LED來觀測輸出結
果。
中斷副程式第 4行 : 將累積器內容設定為十進位的 13。
中斷副程式第 5行 : 使用 xorr指令來判定 r0是否等於 d13，若等於 d13，則旗
號 z會變為高電位。
中斷副程式第 6行 : 若 r0等於 d13，z會變為高電位，jz ed會跳至標記 ed處
執行程式。
中斷副程式第 7行 : 若 r0不等於 d13，則 r0值遞增 1。
中斷副程式第 8行 : 返回主程式的 jp pause繼續等待中斷。
中斷副程式第 9行 : 若 r0等於 d13，則 r0值重設為 0。
中斷副程式第 10行 : 返回主程式的 jp pause繼續等待中斷。
16
timer_int1.asm的第一行執行 jp main後會無條件跳躍至 main標記處去執行
主程式。
主程式第 1行 : 執行 setb ie使所有中斷遮罩都打開。
主程式第 2行 : 執行 setb tfe將計時計數中斷設定為致能。
主程式第 3行 : 將一般暫存器 r0的起始值設為十進位 0。
主程式第 4行 : 將一般累積器設為十進位 216，該值會使計時器每 0.2秒溢位
一次。因為程式若沒有設定時脈選擇位元 ckc為高電位，CH01
會以內部 200Hz時脈進行計時計數，由起始值 216計數至 256
發生溢位，因此每 40*0.005=0.2秒，計時/計數器就會溢位一
次。
主程式第 5行 : 將起始值載入計時器中。
主程式第 6行 : 計數器致能端 ts設定為高電位，開始以 200Hz的頻率進行上
數。
主程式第 7行 : 最後執行 jp pause來等待外部計時器溢位的發生。
中斷副程式:
CH01計時計數器的中斷向量為十進位的 d14(十六進位 H0E)，因此中斷副
式由 org d14開始。
中斷副程式第 1行 : 以 clrb ef來清除外部中斷旗標，使外部中斷可以再被觸
發。
中斷副程式第 2行 : irdrom a,r0是將 r0的內容當作資料記憶體的位址，並將 r0
所指向的資料讀至累積器 a中。
中斷副程式第 3行將 a的內容送至輸出埠 p1，p1可以連接 LED來觀測輸出結
果。
中斷副程式第 4~6行 : 設定每 0.2秒溢位一次，並將 ts設定為致能。
中斷副程式第 7行 : 返回主程式的 jp pause繼續等待計時器溢位。
1-5 簡易計數中斷範例程式 2
圖 1-17是一個簡易的計數中斷範例程式，程式碼由.code開始，資料記憶
體如圖 1-18所示，由.rom開始，程式碼位於 c:\ch01asm_ex\timer_int2.asm中。
18
電位。
由於 timer_int2.asm所設定的計數起始值為 251，因此每計數 5次，計時/計數器
就會溢位一次 timer_int2.asm的其它程式碼與 timer_int1.asm，在此不贅述。
1-6 簡易串列通訊中斷範例程式
圖 1-19及 1-20是一個簡易的計數中斷範例程式，程式碼由.code開始，資
料記憶體如圖 1-21所示，由.rom開始，程式碼位於 c:\ch01asm_ex\uart_ex.asm
中。
圖 1-19
圖 1-20
20
傳送完一筆資料後所要執行的中斷副程式由 org d10開始。
傳送副程式第 1行 : 清除傳送中斷旗標 ti，使串列傳送電路可以再觸發一次中
斷。
傳送副程式第 2行 : 呼叫延遲副程式，該副程式由標記 delay開始，由於 CH01
的機械週期為 400ns因此，副程式中的巢狀迴圈共延遲了
小約 0.4秒的時間，計算方式如圖 1-19的程式註解。
傳送副程式第 3行 : 將 r0所指向的資料再次讀至 rtbuf中傳送。
傳送副程式第 4~10行 : 第 4至 10行的功能與 1-3~1-5的程式相同，是用來判
斷是否傳送完資料記憶體中所有的資料，如果傳完，就再
從第一筆資料開始傳送。傳送副程式的最後一行 ret是為了
返回主程式，以等待 rtbuf中的資料傳送完所發生的中斷。
接收副程式:
當傳列資料接收端 rxd接收到一個位元組的 rtbuf後，就會產生中斷一次，
中斷向量為 d6，此時 CH01必須馬上讀取 rtbuf中的資料，以避免被下一筆讀取
的資料覆蓋。
傳送副程式第 1行 : 清除接收中斷旗標 ri，使串列接收電路可以再觸發一次中
斷。
傳送副程式第 2行 : 將所收到的內容送至輸出埠 p1。
傳送副程式第 3行 : 接收副程式的最後一行 ret是為了返回主程式，以等待
rtbuf收完一筆資料所發生的中斷。。
1-7 簡易直流馬達調速範例程式
圖 1-22及 1-23是一個簡易的計數中斷範例程式，程式碼由.code開始，此
程式無資料記憶體，程式碼位於 c:\ch01asm_ex\uart_ex.asm中。
