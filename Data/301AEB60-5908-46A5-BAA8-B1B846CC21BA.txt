 
 
1 
 
壹、前言 
象棋程式「千慮」(Contemplation)是 2002 年就讀於台灣大學資訊工程研究所的吳光哲
[1]所開發，他結合了各種電腦西洋棋先進的搜尋技術，並加上陳志昌的開局資料庫[2]，在
許舜欽教授及徐讚昇教授的指導下實作完成，取得了 2004 年電腦象棋爭霸賽的第三名以及
第九屆電腦奧林匹亞象棋比賽金牌的佳績。 
「深象」(Deep Elephant是在象棋程式「千慮」的基礎上，繼續加以研究與改良。2006
年，由師大資工所林順喜教授指導碩士班研究生黃文樟，改良強化原有「深象」的審局函
數，改善貪吃敵方的弱子而作負的情況並且加入許多重要的棋形特徵、動態調整子力分數
等[3]、以及李任軒加強深象的開局庫[4]，使得深象棋力進步，並於 2006 年取得了在義大
利舉辦之第十一屆電腦奧林匹亞象棋比賽銅牌的佳績。 
 本研究計畫成果報告說明多執行緒技術如何進一步成功的應用於「深象」，大幅提升「深
象」的搜尋效能；以及電腦象棋知識庫的切捨方法及實作經驗，以使龐大且完整的知識庫
得以被切捨、精簡化卻不更改其走步的手順。 
 
貳、研究目的 
 
近年來多執行緒的發展，已成為一股洶湧而不可橫逆的潮流，包括 IBM、Sun、Intel、
AMD 等多家廠商均不約而同朝向此方向發展，多執行緒令運算工作得以平行處理、減少等
待時間，進一步拉高系統效能。這遠比拉高處理器時脈來得有效率得多，因為後者在高耗
電的情況下很容易過熱導致系統出錯。為了增進「深象」的棋力，我們參考西洋棋程式 Crafty
所使用的 Dynamic Tree Splitting 演算法，將程式平行化，提升搜尋速度。當程式改成使用
Dynamic Tree Splitting 平行演算法，需要更改其搜尋架構、以及資料結構。經由實驗顯示，
當使用四顆 CPU，搜尋速度約提升為使用單一 CPU 的 3.3 倍、搜尋深度平均增加 1~2 層，
對戰的戰績也有相當的提升。 
在電腦象棋知識庫切捨技術方面，目的是讓原本龐大、繁瑣、動輒上百萬譜的知識庫，
可被切捨為便於攜帶，或網路上方便且快速傳輸的檔案，供棋友互相交流或研究使用。 
 
參、文獻探討 
 
自從電腦西洋棋吸引了大量的研究者投入研究之後，最近二、三十年來，關於平行化
的搜尋演算法文章如雨後春筍般發表出來[5]，其中被電腦象棋程式所廣泛參考的是由
 
 
3 
 
參考 Crafty 將「深象」平行化是一件浩大的工程。首先，原本「深象」的變數大都是
宣告成全域變數，這樣不利於平行化。因為平行化最重要的事情就是將資訊分享，讓其它
的 Process，可以知道它所要負責搜尋的盤面、以及負責的走步。所以平行化的第一個步驟，
則是先設置一個 struct TREE，將搜尋所需要的變數，全部搬移到 TREE 裡面，如此一來要
分享資訊的時候，我們就將 TREE 裡面的資訊，複製到另一個 Process 的 TREE 的變數。我
們設置一個 struct Shared，來存放共享的資料，比如說：TREE…等，當需要使用共用資料
的時候；此外需要處理臨界區間(Critical Section)問題，變數 lock 就是用來限制 Shared 的存
取。 
同形表也是需要一個需要修改的部份。當平行化之後，每個 Process 都會去存取同形表
(使用 hashtable 實做)，所以需要使用 lock 來控制存取限制，雖然使用 lock 會造成負擔，但
是為了解決臨界區間問題，這是必要的。圖 2 為修改過後的同形表，新增一個欄位 lock，
讓要存取同一個 entry 的 process 不會造成競爭狀況(race condition)。 
深度=5 
大小優先 始終替換 
 
圖 2 修改過後的深象同形表 
 
其次需要修改搜尋的架構。因為深象的 Search_Root()並沒有多做什麼處理，就直接呼
叫 Search()，由 Search()來搜尋所有的節點。所以我們先修改 Search_Root()的程式碼，讓
Search_Root()使用 Nega_Scout 演算法搜尋根節點的走步，除了根節點的走步就是使用
當發生 collision，深
度較深將會取代 
新的、深度=10 
lock 
當發生 collision，新
的 Entry 將會取代 
 
 
5 
 
Iterate ()
SearchRoot ()
一開始的
Process
呼叫
Fork()
產生的
Process
呼叫
呼叫
呼叫
當可以Split
時呼叫
當有工作時呼叫
呼叫
當可以Split時呼叫
Search ()
ThreadInit ()
ThreadWait ()
SearchSMP ()
Thread ()
呼叫
Main()
呼叫
 
圖 3 平行化深象的搜尋架構 
(2)開局知識庫切捨技術 
我們採用 Perfect Ordered Tree 去分析開局知識庫，所謂 Perfect Ordered Tree 即在展開
搜尋樹時，能夠確定那一個節點為最好的著手，而其它著手並不需要判定[7、8]。將 Perfect 
Ordered Tree 的節點分為三種類型： 
。B節點：對局樹中的根節點或是B或O節點之子節點中最佳著手的節點。 
。O節點：B節點之子代節點中除了最佳著手節點以外的其餘子節點。 
。D節點：可被刪除的節點，也就是O節點之子代節點中除了最佳著手節點以外的其餘子節
點，以及D節點下的所有子節點。 
切捨樹的流程由圖4所示。
 
 
7 
 
伍、結果與討論（含結論與建議） 
 
    本節將針對以下兩部分成果說明結果與討論：(1)多執行緒技術 (2)開局知識庫切捨技
術。 
(1)多執行緒技術 
我們第一階段的實驗在一台雙 CPU、每顆 CPU 為雙核心的電腦上計算(相當於有四顆
CPU)，表 1 為電腦詳細規格。表 2 為每秒搜尋節點數效能的比較。 
 
CPU 型號 CPU 頻率 主記憶體大小 
Dual Core AMD 
Opteron(tm) Processor 275 
2189.72-MHz K8-class 
CPU 
real memory = 4031 MB 
avail memory = 3893 MB
表 1 電腦規格 1 
 
 
測試盤面 4 CPU 效能 1 CPU 效能 
1 3.58 1 
2 3.36 1 
3 3.77 1 
4 3.47 1 
5 3.89 1 
6 3.47 1 
7 3.47 1 
8 2.27 1 
9 3.05 1 
10 3.65 1 
表 2 效能比較 
 
表 2 中我們使用 10 個測試盤面讓使用 4 顆 CPU 以平行化的深象與使用 1 顆 CPU 未平行化
的深象做每秒搜尋節點數(NPS)做比較，由表 2 可以看出使用 4 顆 CPU 的每秒搜尋節點數
大約是使用 1 顆 CPU 的 3.3 倍。不過搜尋的深度並沒有和搜尋節點數一樣提升 3.3 倍，平
均增加 1 到 2 層，效能有大幅度的成長。 
 
 
9 
 
捨。 
80%
82%
84%
86%
88%
90%
92%
94%
96%
98%
100%
1 2 3 4 5 6 7 8 9 10 15 20 25 30 35 40 50 60 70
層數
各層的切捨率
切捨率(100%)
 
圖 5  70 層內的各層切捨率曲線圖 
陸、參考文獻 
 
[1]吳光哲, “電腦象棋搜尋圖歷史交互作用問題之研究”, 國立臺灣大學資訊工程研究所碩
士論文, 2005. 
[2]陳志昌, “電腦象棋開局知識庫系統之設計與實作”, 國立台灣大學資訊工程研究所碩士
論文,1998. 
[3]黃文樟, “電腦象棋深象中局程式的設計與實作”, 國立臺灣師範大學資訊工程研究所碩
士論文, 2006 
[4]李任軒, “電腦象棋知識庫切捨技術”, 國立臺灣師範大學資訊工程研究所碩士論文, 2006. 
[5] M. G. Brockington,“ A taxonomy of parallel tree search”, ICGA Journal pp. 162-174, 1996. 
[6] Hyatt, R.M,” The Dynamic Tree-Splitting Parallel Search Algorithm”. ICGA Journal, Vol. 20, 
No. 1, pp. 3 – 19, 1997 
[7]曹任明，”電腦象棋分散式搜尋技術之研究”， 台灣大學資訊工程研究所，碩士論文，1998。 
[8] Knuth, D. E. and Moore, R. W., ”An analysis of Alpha-Beta pruning”, Artificial Intelligence , 
赴國外出差報告 
 
(1)浪潮杯首屆中國電腦博弈錦標賽 
時間：2006/8/2-2006/8/7 
地點：位於中國北京的中國科技館 
出差人員：李任軒、白聖秋 
總共有 18 個隊伍參賽，小組賽如下： 
 
由於作業系統設定的問題，「深象」在 B 組的比賽中幾乎每盤棋都超時作負，無
緣進入決賽，殊為可惜，然而本次比賽我們得到了一些寶貴的心得。首先，許多
象棋程式已經是平行化的版本，這正是當時我們正在努力的方向；其次，大多數
象棋程式的平行化皆是參考並修改 open source 的西洋棋程式 Crafty 與 Fruit；而
一些商業化的軟體(比如棋天大聖、象棋奇兵)甚至有象棋特級大師在幫忙強化程
式的棋力，這是我們學校單位所無法比擬的。 
 
 
 
 
棋天大聖(左)與深象(右)比賽中 
    前三名都是商業化的軟體，這次平行化版本的「深象」獲得第四名。比賽過
程中我們發現，搜尋的平行化讓「深象」的效能大幅提升，加深搜尋層數一至二
層，與前三名的程式在殘局之前都維持均勢甚至領先，因此若「深象」殘局好好
加強的話，將來是大有可為的。 
 
這次也順便於 COMPUTER GAMES WORKSHOP 2007 報告論文： 
June 17, 2007 (Sunday) 
11.10 – 11.30  An Efficient Approach to Solve Mastermind Optimally 
by Li-Te Huang, Shan-Tai Chen, Shih-Chieh Huang, and Shun-Shii Lin 
 
(2)第 12 屆電腦奧林匹亞 
時間：2007/6/11-2007/6/18 
地點：位於荷蘭首都阿姆斯特丹的 Science Park 
出差人員：黃士傑、林子哲 
賽程(電腦象棋項目比賽日期為 6/15,6/16)： 
Date Olympiad 
(Eulerzaal ‐ Z009) 
6/11 10‐14 h Registration+Testing 
14.00 h Players meeting 
15‐21h Games (9x9 Go) 
6/12 10‐21 h (9x9 Go) 
6/13 10‐21 h (9x9 Go, Shogi) 
6/14 Excursion and dinner 
6/15 10‐21 h (9x9 Go, 19x19 Go, Draughts, 
Shogi, Connect6, Backgammon, Chinese 
Chess) 
6/16 10‐21 h (19x19 Go, Draughts, Shogi, 
Connect6, Backgammon, Chinese Chess)
6/17 10‐21 h (19x19 Go) 
19x19 Go, Man‐Machine 19x19 Go 
6/18 10‐21 h (Playoffs) 
 
電腦象棋項目總共有 5 個隊伍參賽，比賽結果如下： 
程式 積分 加賽 結果 
棋天大聖 7.5  金牌 
象棋世家 4.5 1.5 銀牌 
謝謝 4.5 0.5 銅牌 
深象 3.5   
棋謀 0.0   
 
