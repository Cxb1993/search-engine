 2
 
行政院國家科學委員會專題研究計畫成果報告 
國科會專題研究計畫成果報告撰寫格式說明 
Preparation of NSC Project Reports 
計畫編號：NSC 98-2221-E-009 -150- 
執行期限：98 年 8月 1 日至 99 年 7月 31 日 
主持人：胡毓志   交通大學資訊工程系 
計畫參與人員：陳先力，雷佩蘭 交通大學資訊工程系 
一、中文摘要 
 已有許多雙分群的方法被提出，用以降
低傳統分群法的限制。它們有不同的問題闡
述，不同的搜尋方式及複雜度，我們提出利
用頻繁項目集之概念解決基因表現雙分群
的問題。我們將其與其他已知的數種方法做
比較分析，其結果顯示我們的方法有不錯的
表現。 
關鍵詞: 分群，雙分群，基因表現 
Abstract 
A number of biclustering approaches have 
been developed to mitigate the limitations of 
standard clustering algorithms. They have 
different problem formulation, search strategy 
and computational complexity. We proposed a 
new biclustering method based on the 
framework of market basket analysis in which 
a bicluster is described as a frequent itemset. 
As a feasibility test, we compared it with 
several standard clustering algorithms on a 
genome-wide yeast microarray dataset, and it 
showed very promising results. We later did a 
comparison between our approach and various 
current biclustering methods, following a 
systematic evaluation procedure recently 
published. The experimental results 
demonstrate that our new method outperforms 
the others. 
 
Keywords: clustering, biclustering, expression, 
microarray 
 
Introduction 
As the advent of microarray 
technologies, numerous datasets generated by 
massive microarray experiments have drawn a 
lot of attention to the need for efficient and 
effective computational methods for gene 
expression data analysis [1-3]. In general, 
expression datasets are described by 2-D 
arrays. One axis represents the genes; the 
other, the conditions. Each element in the 
array records the expression level of a gene as 
a real number, which is usually derived by 
taking the logarithm of the relative abundance 
of the mRNA of that gene in a specific 
condition. Genes with compatible expression 
patterns are believed to be under identical or 
related regulatory control. Given appropriate 
gene clusters, there can be many further 
applications based on expression behaviors 
when combined with other biological 
information such as subcellular localizations, 
metabolic pathways and intermolecular 
interactions, and so on [4]. This demonstrates 
the importance of the finding of expression 
clusters. 
Clustering can be applied to either genes 
or conditions to obtain expression clusters, i.e., 
grouping genes according to all conditions, or 
grouping conditions according to all genes, 
separately. The most common clustering 
algorithms include hierarchical clustering [5], 
self-organizing maps (SOM) [6] and k-means 
clustering [7], etc. Nevertheless, most of them 
only consider global similarity between 
expression profiles or between condition 
samples, thereby missing local relationships. 
They typically assume that functionally 
related genes behave similarly over all 
measured conditions, and the conserved 
condition patterns run across all measured 
genes. Those clusters found are in a sense 
aimed to reflect a global pattern of expression 
data, and yet for most cases in the real cellular 
processes, expression patterns are common 
only to a subset of genes under certain 
experimental conditions [8]. In order to 
characterize the expression behaviors more 
accurately, we need a local model instead of a 
global one. Identifying such local patterns will 
provide a deeper insight into genetic pathways 
that cannot be revealed from the point of a 
 4
including geometric mean normalization, rank 
normalization, quantile normalization and 
Spellman et al.’s Z-score [21,22]. As some 
pilot tests favored the Z-score approach, we 
decided to adopt the normalization procedure 
of Spellman et al., who normalized the 
expression level of each gene so that the mean 
and the deviation for each row and column are 
zero and one respectively. In addition to 
normalization, discretization is another 
preprocess required of PIFP as a bicluster is 
described by a frequent itemset. We 
partitioned numeric gene expression values 
into a set of intervals; as a result, the original 
expression data matrix can be viewed as a 
database of transactions. Several discretization 
procedures were tried to define intervals 
[23,24]. The intervals may be determined by 
some specific thresholds, such as the median, 
the top N% expression value, or even 
pre-specified ad hoc values. On the other hand, 
we can partition expression levels into J 
intervals of equal size, e.g. J=10. It is usually 
difficult to define appropriate thresholds 
beforehand, and our pilot tests showed that the 
equal-interval partition method worked 
reasonably well, thus in the following 
experiments we adopted this discretization 
procedure with J set to 10. 
There have been many various approaches 
to frequent itemset finding, and one of the 
widely used methods is FP-growth [15]. 
Unlike its relevant pioneer approaches, e.g. 
Apriori [24,25], FP-growth only needs to scan 
the database twice without the 
time-consuming candidate-generation process. 
The first scan of a database derives an ordered 
list of frequent itemsets above some 
pre-specified support threshold. For the 
second scan, FP-growth performs a database 
projection of the frequent itemsets in the order 
that they are in the ordered list, and constructs 
a compact data structure called FP-tree, which 
stores the complete frequent itemset 
information. This significant reduction on the 
number of necessary database scans 
dramatically increases its efficiency. We 
developed PIFP based on FP-growth. It 
extends FP-growth in two directions. First, we 
embed a filter in PIFP to rule out those 
spurious itemsets by removing any itemset of 
less support if it overlaps with others over 
75%. Second, we add a feedback loop to PIFP 
in order to identify weaker (i.e. with less 
support) frequent itemsets which may have 
been clouded by other stronger frequent 
itemsets. By masking out from the expression 
matrix the itemsets already found, PIFP is able 
to progressively identify more frequent 
itemsets than conventional FP-growth 
approaches. Our ablation experiment in the 
following section proves the effectiveness of 
these extensions. Given only two parameter 
values, minimum support s and minimum 
itemset size i, PIFP is capable of identifying 
overlapped biclusters presented as frequent 
itemsets.  
 
Experimental Results 
There are two objectives in our 
experiments. One is to demonstrate the 
superiority of PIFP to those standard 
clustering methods in terms of identifying 
more meaningful gene groups related to GO 
categories. The other is to show PIFP’s 
competitive performance compared with other 
current biclustering algorithms. 
Two expression datasets were used in our 
analysis and comparison with other standard 
clustering algorithms. One dataset contains 
6335 genes with 121 conditions which were 
obtained by combining expression profiles 
from several gene expression experiments 
[5][21][26-31]. This dataset was used in our 
pilot tests to select the appropriate 
normalization and discretization procedures 
for PIFP. We tried different normalization and 
discretization methods as mentioned earlier, 
and settled on the one with the best 
performance. The second dataset is the one 
used by Hughes et al. [32], which contains 
6325 genes and 300 conditions. We tested 
PIFP on this dataset and compared with 
several representative conventional clustering 
algorithms. In order to keep the consistency, 
instead of reimplementing these algorithms or 
using any ad hoc versions, we adopted in our 
experiments Cluster3.0 [5][33], which 
provides hierarchical clustering, k-means, 
SOM and PCA, and also has been used in 
other published similar experiments [18]. In 
addition, we also included the fuzzy c-means 
method in our experiments [34]. 
The quality measure for a cluster is the 
p-value based on the widely used 
hypergeometric distribution [34,35], defined 
as below, 
 experiments were again used in the ablation 
study. Our study shows that with the filtering 
and masking procedures, PIFP does not only  
Discussion 
 Most of the available expression analysis 
tools are based on clustering that try to 
establish either groups of genes which are 
co-regulated under all the measured 
conditions, or groups of conditions which are 
conserved across all the measured genes. 
Although analysis methods of this kind have 
proved useful in several applications, yet their 
biological validity of the global assumptions 
may be questioned especially when the 
analysis goal is to identify molecular networks 
[23]. Numerous biclustering algorithms have 
consequently been proposed to mitigate the 
problem. However, some are limited to 
finding simple biclusters, e.g. constant 
biclusters, and some, on the other hand, 
though capable of identifying more 
complicated bicluster structures, are hampered 
by high computational complexity. In this 
project, we presented a new method for the 
analysis of gene expression data with the aim 
to seek the balance between the 
expressiveness of biclusters and the 
complexity of search strategies. 
 produce more biclusters than without, but 
also covers all the biclusters found by the 
ablated version. The comparison results are 
presented in Table IV, including the number of 
biclusters found, the number of relevant GO 
annotation categories and the running time. It 
demonstrates that PIFP with the enhancement  
 procedures can produce about three times 
the number of biclusters found by the ablated  
 version with less than twice the 
computational time.  
 
TABLE II.  SUMMARY OF PARAMETER SETTINGS AND TOTAL 
NUMBER OF BICLUSTERS 
 6
*We set the parameters in PIFP to s=11 and i=12 to produce 100 
biclusters for comparison as suggested in [11].  We also set 
min_gene and min_chip to 12 and 11 respectively for BiMax. 
 
 
TABLE III.  PARTIAL RESULTS OF BICLUSTERS FOUND BY PIFP 
 
 *The size of a bicluster is presented by the number of genes. 
 
 Based on the framework of market basket 
analysis, we transform the biclustering 
problem into a frequent itemset finding 
problem. By extending the FP-growth method 
to develop PIFP, we are able to efficiently and 
effectively identify interesting biclusters 
described as frequent itemsets whose 
biological significance has been verified by 
the domain knowledge (i.e. Gene Ontology). 
To demonstrate PIFP’s performance, we tested 
it on the same datasets that have been widely 
used by other researchers, and compared the 
results with those of other current biclustering 
methods. Our experiments showed PIFP 
outperformed the others. 
 
TABLE IV.  RESULTS OF ABLATION STUDY FOR PIFP 
 
Algorithm Default Parameter Settings Values Used Total 
Biclusters
Samba D=40,N1=4,N2=6,k=20,L=30 default 100 
ISA tg=1.8~4.0(step 0.1),tc=2.0, 
nr. seeds=20000 
tg=2.0, 
seeds=500 
66 
CC α=1.2,δ=lower end of the 
expression value range  
δ≤0.5 100 
OPSM l=100 default 12 
xMotifs ns=10,nd=1000,sd=7~10, 
α not given, p-value=10-10, 
max_length not given 
sd=7,α=0.1, 
max_length=0.7m 
306 
BiMax* min no. of genes not given,  
min no. of chips not given  
min_genes=12, 
min_chips=11 
100 
PIFP* s=10~20,i=10~25 s=11,i=12 100 
Bicluster Size* p-value  Annotation 
Bicluster1 228 1.80E-119 cytosolic ribosome (sensu Eukaryota)/80S ribosome 
Bicluster85 166 3.00E-39 ribonucleoprotein complex/RNP 
Bicluster58 58 5.30E-32 Ribosome 
Bicluster41 101 3.90E-26 ribosome biogenesis 
Bicluster7 135 5.80E-24 protein complex 
Bicluster11 120 2.60E-19 RNA metabolism 
Bicluster69 64 5.40E-19 non-membrane-bound organelle 
Bicluster13 128 4.00E-18 physiological process 
Bicluster14 108 2.60E-16 cellular process 
Bicluster76 70 8.00E-14 cytoplasm organization and biogenesis 
Bicluster24 76 5.80E-12 
cellular physiological process/cell 
growth and/or maintenance/cell 
physiology 
Bicluster64 70 4.40E-11 translation factor activity, nucleic acid binding 
Bicluster77 62 2.40E-10 mitochondrial ribosome 
Bicluster83 33 7.10E-09 generation of precursor metabolites and energy/energy pathways 
Bicluster67 42 1.20E-06 translation initiation factor activity 
Bicluster82 19 7.70E-06 peroxisomal matrix 
Bicluster35 14 9.60E-06 cellular biosynthesis 
Bicluster34 23 3.60E-05 fatty acid elongase activity 
Bicluster95 23 3.80E-05 molecular function unknown 
Bicluster94 32 9.70E-05 binding/ligand 
Dataset Dataset in BicAT[16] Hughes et al. Dataset[32] 
Algorithm PIFP w/o enhancement
PIFP with 
enhancement 
PIFP w/o 
enhancement
PIFP with 
enhancement
No. of 
Biclusters 36 100 20 98 
GO 
annotation 9 20 3 9 
Running 
time* 48 70 443 665 
*The running time (in seconds) is based on Pentium-4 2GHz 
processor with 512M memory. 
 
 8
 
國科會補助專題研究計畫成果報告自評表 
請就研究內容與原計畫相符程度、達成預期目標情況、研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）、是否適
合在學術期刊發表或申請專利、主要發現或其他有關價值等，作一綜合評估。
1. 請就研究內容與原計畫相符程度、達成預期目標情況作一綜合評估  達成目標 
□ 未達成目標（請說明，以 100 字為限） 
□ 實驗失敗 
□ 因故實驗中斷 
□ 其他原因 
說明： 
 
 
 
2. 研究成果在學術期刊發表或申請專利等情形： 
論文：已發表 □未發表之文稿 □撰寫中 □無 
專利：□已獲得 □申請中 □無 
技轉：□已技轉 □洽談中 □無 
其他：（以 100 字為限） 
 
 
3. 請依學術成就、技術創新、社會影響等方面，評估研究成果之學術或應用價值（簡要敘述
成果所代表之意義、價值、影響或進一步發展之可能性）（以 500 字為限） 
目前國內已有許多研究單位的多位學者及專家致力於生物晶片的開發，這將使我國未來有
自主能力採集重要基因組的基因表現資料，藉由基因表現分析系統的研究與開發，我們可
以與其他研究單位或廠商合作，結合軟硬體的開發。 
 
 
 
 
 
 
 
 
 10
能多支持與獎勵國內學者多參與此類國際研討會，除了增加我國在國際相關領域的能見度，同時，提
供相互學習之機會。此外，建議由國科會主導，召集國內各大學與民間企業支援，以召開國際性生物
資訊與相關科技研討會，邀請國內外學者共同參與，這是直接提昇我國在生技發展地位的最有效做法。 
五、 攜回資料名稱及內容 
The Proceedings of Biocomp2010 
六、其他 
 
 
 
 
 2
 
行政院國家科學委員會專題研究計畫成果報告 
國科會專題研究計畫成果報告撰寫格式說明 
Preparation of NSC Project Reports 
計畫編號：NSC 98-2221-E-009 -150- 
執行期限：98 年 8月 1 日至 99 年 7月 31 日 
主持人：胡毓志   交通大學資訊工程系 
計畫參與人員：陳先力，雷佩蘭 交通大學資訊工程系 
一、中文摘要 
 已有許多雙分群的方法被提出，用以降
低傳統分群法的限制。它們有不同的問題闡
述，不同的搜尋方式及複雜度，我們提出利
用頻繁項目集之概念解決基因表現雙分群
的問題。我們將其與其他已知的數種方法做
比較分析，其結果顯示我們的方法有不錯的
表現。 
關鍵詞: 分群，雙分群，基因表現 
Abstract 
A number of biclustering approaches have 
been developed to mitigate the limitations of 
standard clustering algorithms. They have 
different problem formulation, search strategy 
and computational complexity. We proposed a 
new biclustering method based on the 
framework of market basket analysis in which 
a bicluster is described as a frequent itemset. 
As a feasibility test, we compared it with 
several standard clustering algorithms on a 
genome-wide yeast microarray dataset, and it 
showed very promising results. We later did a 
comparison between our approach and various 
current biclustering methods, following a 
systematic evaluation procedure recently 
published. The experimental results 
demonstrate that our new method outperforms 
the others. 
 
Keywords: clustering, biclustering, expression, 
microarray 
 
Introduction 
As the advent of microarray 
technologies, numerous datasets generated by 
massive microarray experiments have drawn a 
lot of attention to the need for efficient and 
effective computational methods for gene 
expression data analysis [1-3]. In general, 
expression datasets are described by 2-D 
arrays. One axis represents the genes; the 
other, the conditions. Each element in the 
array records the expression level of a gene as 
a real number, which is usually derived by 
taking the logarithm of the relative abundance 
of the mRNA of that gene in a specific 
condition. Genes with compatible expression 
patterns are believed to be under identical or 
related regulatory control. Given appropriate 
gene clusters, there can be many further 
applications based on expression behaviors 
when combined with other biological 
information such as subcellular localizations, 
metabolic pathways and intermolecular 
interactions, and so on [4]. This demonstrates 
the importance of the finding of expression 
clusters. 
Clustering can be applied to either genes 
or conditions to obtain expression clusters, i.e., 
grouping genes according to all conditions, or 
grouping conditions according to all genes, 
separately. The most common clustering 
algorithms include hierarchical clustering [5], 
self-organizing maps (SOM) [6] and k-means 
clustering [7], etc. Nevertheless, most of them 
only consider global similarity between 
expression profiles or between condition 
samples, thereby missing local relationships. 
They typically assume that functionally 
related genes behave similarly over all 
measured conditions, and the conserved 
condition patterns run across all measured 
genes. Those clusters found are in a sense 
aimed to reflect a global pattern of expression 
data, and yet for most cases in the real cellular 
processes, expression patterns are common 
only to a subset of genes under certain 
experimental conditions [8]. In order to 
characterize the expression behaviors more 
accurately, we need a local model instead of a 
global one. Identifying such local patterns will 
provide a deeper insight into genetic pathways 
that cannot be revealed from the point of a 
 4
including geometric mean normalization, rank 
normalization, quantile normalization and 
Spellman et al.’s Z-score [21,22]. As some 
pilot tests favored the Z-score approach, we 
decided to adopt the normalization procedure 
of Spellman et al., who normalized the 
expression level of each gene so that the mean 
and the deviation for each row and column are 
zero and one respectively. In addition to 
normalization, discretization is another 
preprocess required of PIFP as a bicluster is 
described by a frequent itemset. We 
partitioned numeric gene expression values 
into a set of intervals; as a result, the original 
expression data matrix can be viewed as a 
database of transactions. Several discretization 
procedures were tried to define intervals 
[23,24]. The intervals may be determined by 
some specific thresholds, such as the median, 
the top N% expression value, or even 
pre-specified ad hoc values. On the other hand, 
we can partition expression levels into J 
intervals of equal size, e.g. J=10. It is usually 
difficult to define appropriate thresholds 
beforehand, and our pilot tests showed that the 
equal-interval partition method worked 
reasonably well, thus in the following 
experiments we adopted this discretization 
procedure with J set to 10. 
There have been many various approaches 
to frequent itemset finding, and one of the 
widely used methods is FP-growth [15]. 
Unlike its relevant pioneer approaches, e.g. 
Apriori [24,25], FP-growth only needs to scan 
the database twice without the 
time-consuming candidate-generation process. 
The first scan of a database derives an ordered 
list of frequent itemsets above some 
pre-specified support threshold. For the 
second scan, FP-growth performs a database 
projection of the frequent itemsets in the order 
that they are in the ordered list, and constructs 
a compact data structure called FP-tree, which 
stores the complete frequent itemset 
information. This significant reduction on the 
number of necessary database scans 
dramatically increases its efficiency. We 
developed PIFP based on FP-growth. It 
extends FP-growth in two directions. First, we 
embed a filter in PIFP to rule out those 
spurious itemsets by removing any itemset of 
less support if it overlaps with others over 
75%. Second, we add a feedback loop to PIFP 
in order to identify weaker (i.e. with less 
support) frequent itemsets which may have 
been clouded by other stronger frequent 
itemsets. By masking out from the expression 
matrix the itemsets already found, PIFP is able 
to progressively identify more frequent 
itemsets than conventional FP-growth 
approaches. Our ablation experiment in the 
following section proves the effectiveness of 
these extensions. Given only two parameter 
values, minimum support s and minimum 
itemset size i, PIFP is capable of identifying 
overlapped biclusters presented as frequent 
itemsets.  
 
Experimental Results 
There are two objectives in our 
experiments. One is to demonstrate the 
superiority of PIFP to those standard 
clustering methods in terms of identifying 
more meaningful gene groups related to GO 
categories. The other is to show PIFP’s 
competitive performance compared with other 
current biclustering algorithms. 
Two expression datasets were used in our 
analysis and comparison with other standard 
clustering algorithms. One dataset contains 
6335 genes with 121 conditions which were 
obtained by combining expression profiles 
from several gene expression experiments 
[5][21][26-31]. This dataset was used in our 
pilot tests to select the appropriate 
normalization and discretization procedures 
for PIFP. We tried different normalization and 
discretization methods as mentioned earlier, 
and settled on the one with the best 
performance. The second dataset is the one 
used by Hughes et al. [32], which contains 
6325 genes and 300 conditions. We tested 
PIFP on this dataset and compared with 
several representative conventional clustering 
algorithms. In order to keep the consistency, 
instead of reimplementing these algorithms or 
using any ad hoc versions, we adopted in our 
experiments Cluster3.0 [5][33], which 
provides hierarchical clustering, k-means, 
SOM and PCA, and also has been used in 
other published similar experiments [18]. In 
addition, we also included the fuzzy c-means 
method in our experiments [34]. 
The quality measure for a cluster is the 
p-value based on the widely used 
hypergeometric distribution [34,35], defined 
as below, 
 experiments were again used in the ablation 
study. Our study shows that with the filtering 
and masking procedures, PIFP does not only  
Discussion 
 Most of the available expression analysis 
tools are based on clustering that try to 
establish either groups of genes which are 
co-regulated under all the measured 
conditions, or groups of conditions which are 
conserved across all the measured genes. 
Although analysis methods of this kind have 
proved useful in several applications, yet their 
biological validity of the global assumptions 
may be questioned especially when the 
analysis goal is to identify molecular networks 
[23]. Numerous biclustering algorithms have 
consequently been proposed to mitigate the 
problem. However, some are limited to 
finding simple biclusters, e.g. constant 
biclusters, and some, on the other hand, 
though capable of identifying more 
complicated bicluster structures, are hampered 
by high computational complexity. In this 
project, we presented a new method for the 
analysis of gene expression data with the aim 
to seek the balance between the 
expressiveness of biclusters and the 
complexity of search strategies. 
 produce more biclusters than without, but 
also covers all the biclusters found by the 
ablated version. The comparison results are 
presented in Table IV, including the number of 
biclusters found, the number of relevant GO 
annotation categories and the running time. It 
demonstrates that PIFP with the enhancement  
 procedures can produce about three times 
the number of biclusters found by the ablated  
 version with less than twice the 
computational time.  
 
TABLE II.  SUMMARY OF PARAMETER SETTINGS AND TOTAL 
NUMBER OF BICLUSTERS 
 6
*We set the parameters in PIFP to s=11 and i=12 to produce 100 
biclusters for comparison as suggested in [11].  We also set 
min_gene and min_chip to 12 and 11 respectively for BiMax. 
 
 
TABLE III.  PARTIAL RESULTS OF BICLUSTERS FOUND BY PIFP 
 
 *The size of a bicluster is presented by the number of genes. 
 
 Based on the framework of market basket 
analysis, we transform the biclustering 
problem into a frequent itemset finding 
problem. By extending the FP-growth method 
to develop PIFP, we are able to efficiently and 
effectively identify interesting biclusters 
described as frequent itemsets whose 
biological significance has been verified by 
the domain knowledge (i.e. Gene Ontology). 
To demonstrate PIFP’s performance, we tested 
it on the same datasets that have been widely 
used by other researchers, and compared the 
results with those of other current biclustering 
methods. Our experiments showed PIFP 
outperformed the others. 
 
TABLE IV.  RESULTS OF ABLATION STUDY FOR PIFP 
 
Algorithm Default Parameter Settings Values Used Total 
Biclusters
Samba D=40,N1=4,N2=6,k=20,L=30 default 100 
ISA tg=1.8~4.0(step 0.1),tc=2.0, 
nr. seeds=20000 
tg=2.0, 
seeds=500 
66 
CC α=1.2,δ=lower end of the 
expression value range  
δ≤0.5 100 
OPSM l=100 default 12 
xMotifs ns=10,nd=1000,sd=7~10, 
α not given, p-value=10-10, 
max_length not given 
sd=7,α=0.1, 
max_length=0.7m 
306 
BiMax* min no. of genes not given,  
min no. of chips not given  
min_genes=12, 
min_chips=11 
100 
PIFP* s=10~20,i=10~25 s=11,i=12 100 
Bicluster Size* p-value  Annotation 
Bicluster1 228 1.80E-119 cytosolic ribosome (sensu Eukaryota)/80S ribosome 
Bicluster85 166 3.00E-39 ribonucleoprotein complex/RNP 
Bicluster58 58 5.30E-32 Ribosome 
Bicluster41 101 3.90E-26 ribosome biogenesis 
Bicluster7 135 5.80E-24 protein complex 
Bicluster11 120 2.60E-19 RNA metabolism 
Bicluster69 64 5.40E-19 non-membrane-bound organelle 
Bicluster13 128 4.00E-18 physiological process 
Bicluster14 108 2.60E-16 cellular process 
Bicluster76 70 8.00E-14 cytoplasm organization and biogenesis 
Bicluster24 76 5.80E-12 
cellular physiological process/cell 
growth and/or maintenance/cell 
physiology 
Bicluster64 70 4.40E-11 translation factor activity, nucleic acid binding 
Bicluster77 62 2.40E-10 mitochondrial ribosome 
Bicluster83 33 7.10E-09 generation of precursor metabolites and energy/energy pathways 
Bicluster67 42 1.20E-06 translation initiation factor activity 
Bicluster82 19 7.70E-06 peroxisomal matrix 
Bicluster35 14 9.60E-06 cellular biosynthesis 
Bicluster34 23 3.60E-05 fatty acid elongase activity 
Bicluster95 23 3.80E-05 molecular function unknown 
Bicluster94 32 9.70E-05 binding/ligand 
Dataset Dataset in BicAT[16] Hughes et al. Dataset[32] 
Algorithm PIFP w/o enhancement
PIFP with 
enhancement 
PIFP w/o 
enhancement
PIFP with 
enhancement
No. of 
Biclusters 36 100 20 98 
GO 
annotation 9 20 3 9 
Running 
time* 48 70 443 665 
*The running time (in seconds) is based on Pentium-4 2GHz 
processor with 512M memory. 
 
 8
 
國科會補助專題研究計畫成果報告自評表 
請就研究內容與原計畫相符程度、達成預期目標情況、研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）、是否適
合在學術期刊發表或申請專利、主要發現或其他有關價值等，作一綜合評估。
1. 請就研究內容與原計畫相符程度、達成預期目標情況作一綜合評估  達成目標 
□ 未達成目標（請說明，以 100 字為限） 
□ 實驗失敗 
□ 因故實驗中斷 
□ 其他原因 
說明： 
 
 
 
2. 研究成果在學術期刊發表或申請專利等情形： 
論文：已發表 □未發表之文稿 □撰寫中 □無 
專利：□已獲得 □申請中 □無 
技轉：□已技轉 □洽談中 □無 
其他：（以 100 字為限） 
 
 
3. 請依學術成就、技術創新、社會影響等方面，評估研究成果之學術或應用價值（簡要敘述
成果所代表之意義、價值、影響或進一步發展之可能性）（以 500 字為限） 
目前國內已有許多研究單位的多位學者及專家致力於生物晶片的開發，這將使我國未來有
自主能力採集重要基因組的基因表現資料，藉由基因表現分析系統的研究與開發，我們可
以與其他研究單位或廠商合作，結合軟硬體的開發。 
 
 
 
 
 
 
 
 
 10
能多支持與獎勵國內學者多參與此類國際研討會，除了增加我國在國際相關領域的能見度，同時，提
供相互學習之機會。此外，建議由國科會主導，召集國內各大學與民間企業支援，以召開國際性生物
資訊與相關科技研討會，邀請國內外學者共同參與，這是直接提昇我國在生技發展地位的最有效做法。 
五、 攜回資料名稱及內容 
The Proceedings of Biocomp2010 
六、其他 
 
 
 
 
98年度專題研究計畫研究成果彙整表 
計畫主持人：胡毓志 計畫編號：98-2221-E-009-150- 
計畫名稱：利用頻繁項目集概念對基因表現做雙分群分析 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 1 0 40%  
研究報告/技術報告 0 0 100%  
研討會論文 2 0 30% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 1 0 10%  
博士生 1 0 20%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
 
