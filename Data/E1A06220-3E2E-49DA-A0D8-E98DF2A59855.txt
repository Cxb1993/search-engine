 2
行政院國家科學委員會專題研究計畫成果報告 
以影像為基礎之智慧型動作辨識 
計劃編號: NSC96-2221-E-002-262 
執行日期: 96 年 8 月 1 日至 97 年 7 月 31 日 
主持人: 陳永耀   台大電機系教授 
計畫參與人員:蘇恕德、黃璿、許文謙
1. Abstract 
中文摘要 
 本計劃主要目標為建構一套「以影像為基礎
之智慧型動作辨識」系統，其可應用於居家看護、
監控系統等。有關於動作辨識這一方面探討的文
章很多，發展也很迅速，辨識方法不乏利用影像
處理、感測器等。本年度計畫，探討低計算時間、
低記憶體需求、高準確率的移動物體偵測方法。
移動物體偵測方法乃基於背景相減法，利用改善
式單一高斯背景模型，即可降低以下背景相減法
常見之問題，包含：光線影響、雜訊的影響、背
景更新等議題。於影像相減後，利用背景更新時
間、自動取閥值演算法、陰影偵測，即可順利的
偵測移動物體。後續從移動物體當中找出移動的
人，再進行追蹤與智慧型動作辨識。目前計畫成
果已可利用改善式單一高斯背景模型高準確率的
即時偵測移動物體，並且有效降低雜訊、光線的
影響。 
 
關鍵字：移動物體偵測、背景相減、背景更新、
背景更新時間、自動取閥值、陰影偵測 
 
Abstract 
 The primary goal of this project is on the 
development of intelligent human motion 
recognition based on image processing. Human 
motion recognition can be applied in home care 
system and monitoring system, etc. The goal of the 
project in this year is discussing moving object 
detection with low computational time, low memory 
requirement, and high accuracy. The method of 
moving object detection is based on background 
subtraction. Improved Running Gaussian Average 
Background Model (IRGABM) is then the proposed 
for the background model. Our study also shows its 
improvements on the problems of background 
models of the varying luminance effect, the noise 
effect, and background updating. For the purpose of 
moving object detection, background updating time, 
auto-thresholding and shadow detection are also 
discussed in this project. 
 
Keywords: moving object segmentation, 
background subtraction, background updating, 
background updating time, auto-thresholding, 
shadow detection 
 
2. Preliminaries 
 Background subtraction for a relatively static 
environment is a popular method for moving object 
detections. The method first constructs the 
background model and subtracts the background 
from the current frame, to form the absolute 
difference frame. Foreground frame is then 
constructed by thresholding the absolute difference 
frame and the moving object is extracted. 
There are many existing methods for 
background models, such as, the Running Gaussian 
Average Background Model (RGABM) [1][3][9], 
Kernel Density Estimation (KDE) [7], Mixture of 
Gaussians (MoG) [6], and Eigenbackgrounds [8]. 
RGABM is one of the recursive-form background 
models which require less computational time and 
memory. KDE, MoG, and Eigenbackgrounds, on the 
other hand, are non-recursive form background 
models which require more computational time and 
memory, but usually achieve better accuracy. 
Although Moeslund et al. [10] indicated that MoG 
 4
the weighting of the each captured frame is very 
small and noise would appear after background 
subtraction if luminance varies. 
 However, the Moving Average Background 
Model (MABM) improves the disadvantage of the 
LTABM, represented as (5). 
( )
0
, ,
, ,
1
, 1 0
1
i
x y x y
k
k r
x y x y
r k W
I I W i
B I
W
= − −
 = − + < <


=

∑
 (5) 
where W is the moving length. The background is 
the average of last W captured frames. The 
weighting of the last W frames are the same, 
however, it cannot be written in a recursive form, 
and large memory is required. 
 The RGABM [1][3][9] not only reduces the 
varying luminance effect and noise, but also updates 
background. RGABM can be written as recursive 
form (6). 
( ) [ ]1
, ,
, 0
,
1 , 1, 0,1
, 0
k k
x y x yk
x y
x y
B I k
B
I k
α α α− − + > ∈
= 
=
 (6) 
where α  is the background updating rate, typically 
0.05. In equation (6), 1
,
k
x yB
−
 is the reference of 
,
k
x yB  
with a little tuning by the background updating rate 
and the difference between the captured frame and 
the background. RGABM has a strongly ability to 
reduce the varying luminance effect and the noise 
effect. 
In this project, Improved Running Gaussian 
Average Background Model (IRGABM) is 
proposed. It not only improves the accuracy by 
enhancing the noise reduction capability and 
reducing the varying luminance effect, but also 
updates the background effectively. 
The analysis of the background models 
performance about the noise reduction ability, 
background updating, moving object detection false 
positive (mistake still objects for moving ones), and 
false negative (mistake moving objects for still ones) 
will also be discussed in the following paragraphs. 
 
3. Research Content 
3.1 Improved Running Gaussian Background 
Model 
In general, a recursive-form background model 
has the characteristics of low memory requirement 
and high computational speed. However, its level of 
accuracy is only acceptable. The noise effect and the 
varying luminance effect are the major causes for 
low accuracy. The noise effect shows rapid but 
small changes in the luminance of a frame; the 
varying luminance effect shows changes slow but 
large changes in the luminance of a frame. In order 
to reduce the noise effect and the varying luminance 
effect, the appropriate updating speed is required. 
Assume there are no moving objects in the first 
captured frame, and the moving object are in an 
enough moving speed to prevent moving object 
from being updated into background. Based on the 
two assumptions as above, the IRGABM can be 
described in recursive form as (7). 
( )
( )
1
1 , 1 , ,
1
, 2 , 2 , ,
0
,
1 , 0,
1 , 0,
, 0
k k k
x y x y x y
k k k k
x y x y x y x y
x y
B I if k AD Th
B B I if k AD Th
I if k
α α
α α
−
−
 − + > <

= − + > >

=
 (7) 
where 
,
k
x yB is the kth frame of background at pixel 
(x,y), 
,
k
x yI  is the kth frame of captured frame at 
pixel (x,y), 
,
k
x yAD  is the kth absolute difference 
frame at pixel (x,y), i.e. 1
, , ,
k k k
x y x y x yAD I B
−
= − , 1α  
and 2α  are background updating rate, 2 1α α< , 
and Th  is the threshold determined by 
auto-thresholding algorithm. Suitable background 
updating rates, 1α  and 2α , can be determined by 
the concept of background updating time. The larger 
background updating rate, the faster background 
 6
MABM 0.8W  
RGABM ( )1log 9α−−  
IRGABM 
( )
( )
1
2
,1
,1
log 9 ,
log 9 ,
k
x y
k
x y
if AD Th
if AD Th
α
α
−
−
− <

− >
 
Table 2. Background updating time for background models 
 
 
3.3 Moving Object Detection Process 
For moving object detection, first construct the 
background model. Subtract the background from 
captured frame, and the absolute difference frame is 
obtained. The foreground frame is then constructed 
by thresholding the absolute difference frame. For 
the foreground frame, Cucchiara et al.[2] said that 
the foreground can be divided into object part and 
shadow part. Object part includes moving object 
and ghost; shadow part includes moving object 
shadow and ghost shadow. In this project, the 
shadow part can be detected by shadow detection, 
and ghost always be updated by IRGABM. 
Therefore, moving object can be found by 
eliminating shadow parts and ghost. The flow chart 
of moving object detection is shown in Figure 2. 
 
Figure 2. The Flow Chart of Moving Object detection 
 
3.4 Auto-Thresholding Algorithm 
In background subtraction case, the moving 
objects always not occupy large area in the frame. 
Reasonably assume the histogram for the absolute 
difference frame like Figure 3. In order to get a 
proper threshold to find suitable foreground, an 
auto-thresholding algorithm, triangle algorithm[4], 
is provided for background subtraction. First 
construct a histogram of intensities versus number 
of pixels shown in Figure 3. Draw a line between 
the maximum value of the histogram hmax and the 
minimum value hmin and calculate the distance D 
between the line and the histogram. Decrease h 
from hmin to h equals to hmax. The threshold value th 
becomes the h for which the distance D is 
maximized. Substitute the threshold value, Th, into 
(7), then the intensity less than threshold would be 
regarded as background, and the intensity value 
larger than threshold would be regarded as 
foreground. 
,
,
,
1,
0,
k
x yk
x y k
x y
AD th
F
AD th
 >
= 
<
 (8) 
where 
,
k
x yF  is the foreground of the k
th
 frame. 
 
Figure 3. Triangle Algorithm 
3.5 Shadow Detection 
In general scene, if the shadow is cast on the 
background, the intensity of shadow is darker in 
luminosity and few various in chromaticity [11][12]. 
Based on this characteristic mentioned above, the 
pixels of image can be analyzed in the HSV (Hue, 
Saturation, and Value) color model for the sake of 
the HSV color model can separate chromaticity and 
luminosity information. Hue and saturation of the 
HSV color model are chromaticity information, and 
the value of the HSV model is luminosity 
information. The shadow most has lower value, and 
 8
the environment or camera. The experiment (C) and 
(D) have luminance varying, they contain not only 
noise that come from the environment or camera, 
but also luminance varying by fluorescent lamp. Set 
the gray scale of white is 255 and black is 0. Choose 
the parameters Th equals to 5 for TBM, W is 15 
frames for MABM, background updating rate α = 
0.05 for RGABM, and 1α =0.1, 2α =0.05, and Th is 
determined by triangle algorithm for IRGABM. The 
experimental results about the average error per 
frame are then shown in Figure 4. IRGABM 
reduces the noise effect and the varying luminance 
effect, and better than other recursive-form 
background models.  
In Figure 4, the convergence speed of noise 
reduction for IRGABM is faster than others as the 
abrupt noise occurs. The analysis of the average of 
the absolute difference error and the standard 
deviation of the absolute difference error for 
recursive-form background models are shown in 
Table 4, and Table 5, respectively. As the results 
show, IRGABM improves the performance of the 
noise effect reduction and the varying luminance 
effect reduction. For the average of the absolute 
difference error, IRGABM improves RGABM about 
5.93% ~ 24.71%. For the standard deviation of the 
absolute difference error, IRGABM improves 
RGABM about 3.38% ~ 16.62%. The performance 
of IRGABM is better than the others five 
background models. 
 
Experiment (A) (B) (C) (D) 
TIBM 3.4743 3.5907 12.2718 9.8507 
TBM 2.1365 2.2565 12.3072 8.9622 
LTABM 2.0262 2.0801 7.9454 7.4763 
MABM 2.1095 2.1759 7.7963 7.8448 
RGABM 1.9250 1.9985 5.1597 5.1904 
IRGABM 1.8006 1.8799 4.0268 3.9078 
Table 4. The average of the absolute difference error for background models 
Experiment (A) (B) (C) (D) 
TIBM 0.2680 0.2220 5.4517 5.6034 
TBM 0.1937 0.1324 5.9436 5.2175 
LTABM 0.2121 0.1369 5.9834 2.8686 
MABM 0.2656 0.2453 6.3659 2.6779 
RGABM 0.2033 0.1631 5.2042 3.2423 
IRGABM 0.1739 0.1360 4.6753 3.1328 
Table 5. The standard deviation of the absolute difference 
error for background models 
 
4.2 False Positive and False Negative for 
Background Models 
 
In subsection 4.1, we know the MABM, 
RGABM, and IRGABM are better than other three 
background models. Therefore, in the next, MABM, 
RGABM, and IRGABM are discussed only. In the 
experiment, the background scene is designed as 
 
(A) 
 
(B) 
 
(C) 
 
 10
LTABM 
 
 
MABM 
 
 
RGABM 
 
 
IRGABM 
 
 
Figure 6. frame # 160 and # 487 
 
Background Model TIBM TBM LTABM MABM RGABM IRGABM 
Computational Speed 454.55 84.03 106.76 47.10 157.07 71.09 
Table 8. The Comparison of Computational Speed (fps) 
between Recursive-form Background Models and Other Fast 
Background Models 
 
Figure 7. False Positive 
 
Figure 8. False Negative 
 
 
 
Figure 9. Shadow Detection in Frame # 86 
 
 
 
Figure 10. Shadow Detection in Frame # 89 
 
5. Conclusion 
 This project provides IRGABM that with a fast 
computational speed and low memory requirement 
for moving object detection. First objective is to 
find foreground. IRGABM is a better background 
model for the noise reduction and the varying 
luminance effect reduction. Background updating 
also provided in IRGABM. Foreground can be 
found by background subtraction and its threshold is 
determined by auto-thresholding algorithm. The 
auto-thresholding algorithm we suggest is triangle 
algorithm. That is the most suitable algorithm in the 
case of moving object detection to find foreground. 
Background updating time can be used for tuning a 
suitable background updating rates so that we would 
have a better performance as we update 
backgrounds and find suitable foreground. The 
noise and the varying luminance effect should have 
larger background updating rate, and moving 
