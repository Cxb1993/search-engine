行政院國家科學委員會補助專題研究計畫 
□ 成 果 報 告   
▓期中進度報告 
 
高可用性網際服務組合機制研究 
 
 
計畫類別：▓ 個別型計畫  □ 整合型計畫 
計畫編號：NSC 99-2218-E-019-001-MY2 
執行期間：99 年 1 月 1 日至 100 年 7 月 31 日 
 
計畫主持人：馬尚彬 
計畫參與人員：童致品、李佳學、陳瀅至、施又維 
 
 
 
成果報告類型(依經費核定清單規定繳交)：▓精簡報告  □完整報告 
 
本成果報告包括以下應繳交之附件： 
□赴國外出差或研習心得報告一份 
□赴大陸地區出差或研習心得報告一份 
□出席國際學術會議心得報告及發表之論文各一份 
□國際合作研究計畫國外研究報告書一份 
 
 
處理方式：除產學合作研究計畫、提升產業技術及人才培育研究計畫、
列管計畫及下列情形者外，得立即公開查詢 
          □涉及專利或其他智慧財產權，□一年□二年後可公開查詢 
 
          
執行單位：國立海洋大學資訊工程系 
 
中   華   民   國  99  年  5  月  31  日
 3 
一、 報告內容 
1. 前言 
服務導向架構(Service-Oriented 
Architecture, SOA)[3]近年來極度受到重
視，已然成為目前資訊整合與軟體工程的
主流。而在服務導向技術中，服務組合
(service composition)技術實為軟體技術帶
來新的里程碑：服務組合技術可讓服務整
合者將數個網際服務組合成一個功能更強
大的複合服務(composite service)，不需自
己「發展」元件服務，只需「組裝」元件
服務，即可建置出各式各樣的功能。 
然而，然而，上述之服務組合技術要
能成功落實，必須要能夠確保與提升複合
服務之服務品質(quality of web services) [6, 
8, 11, 12]、服務可靠度(reliability)、服務可
用性(availability)、服務安全性(security)
等。其中，服務可靠度與服務安全性目前
皆已具備相關之標準規格與協定，如
WS-Reliability [21]與WS-Security [52]，服
務品質相關議題則是在學術界引起相當廣
泛的討論，已有許多的文獻針對服務品質
提出其觀點與相關之方法論或系統架構。
而服務可用性議題雖具備絕對之重要性，
但目前各 IT大廠尚未制訂之相關標準規
格，在學術界亦屬於新穎且逐漸被重視之
議題，但目前可用性之探討較偏向單一元
件服務之可用性確保，對於複合服務
(composite service)之可用性的提升與確保
則較缺乏有系統且完整之方法。要能提升
複合服務之可用性，除了服務流程引擎需
要能夠依循服務組合文件（包含控制流與
資料流之描述）正確的執行元件服務外，
複合服務必須仰賴所有元件服務（在本計
畫書中亦稱為服務元件）皆正常運作，才
能提供如預期的組合式功能與資料給使用
者。而在選擇元件服務時，許多元件服務
雖在功能上相同，但在服務品質上卻存在
有高低優劣之分，如何設計一個系統可以
因應不同使用者的需求及限制而進行元件
服務的選擇，進而提供一個令使用者滿意
的複合服務，便成為服務組合技術中非常
重要的技術議題。目前已有許多文獻
[1,2,4,5,7,12]探討此類複合服務最佳化的
問題，透過規則基推理、動態規劃、基因
演算法等方法進行服務之探索與選擇。 
2. 研究目的 
根據本計畫之研究路程規劃，第一年
度之重點為服務探索(service discovery)，
在上半年計畫執行之安排上，我們先進行
了以服務品質為基礎之服務探索方法建
構。在探討複合服務之品質時，我們發現
現實生活中即存在許多複合式物件，例
如：汽車 (由引擎、輪胎等等獨立物件組
成)、電腦 (由主機板、外殼等等組成)，其
中某些組件對於複合式物件本身運作具相
當大影響力 (舉例而言，引擎若故障，汽
車將無法運行)，我們稱之為核心物件，其
餘則稱為一般物件，一般而言，我們都會
盡量避免核心物件故障。以汽車為例，儀
表板故障雖造成某些不便，但汽車仍可正
常行駛，但若是引擎故障，則整部汽車即
無法使用。因此，我們認為在建立複合式
物件之初，對於核心物件之品質就應以較
高規格要求，以求其故障率低於一般物
件，以防造成整體複合式物件無法運行。 
如同複合式物件的觀念，複合服務也
應存在核心服務 (core service)，在整體服
務流程中，極可能會有數個較重要之服
務，而這些核心服務之服務品質(QoS)會需
要特別要求。基於以上原因，本研究設計
一套系統，在複合服務運行之前進行核心
服務之分析，並在 QoS之計算時給予核心
服務較高的權重，藉以使核心服務保持較
高的服務品質，以降低核心服務失效的機
率，進一步達成提高複合服務可用度之目
標。 
 5 
2. 系統對 Workflow進行路徑分析
(Path Analysis)，以得到元件服
務在所有可能執行路徑之發生
機率，並根據機率計算出每個服
務的 We權重分數 。 
3. 系統依據管理者設定的計算比
重進行 Wu及 We的加總計算 。 
3. Designer針對此 Weighted Service 
Flow設計配套的 Fault Handling機
制，最後重新發佈此服務流程 。 
4-2 複合服務挑選與服務品質設定 
此部分之運作流程如下： 
1. 使用者依本身需求，選用抽象複合服
務、設定 QoS比重以及錯誤處理階段
置換服務的 QoS限制，完成後系統將
驅動服務演化之執行。 
2. 系統利用基因演算法進行服務的篩
選。 
3. 系統配合節點權重值進行服務的 QoS
計算。 
4. 系統根據所得出之各類QoS值配合使
用者設定的 QoS 比重，代入 fitness 
function公式計算。 
5. 若得出的 fitness function 值達期望標
準，則採用此複合服務的實體服務綁
定選擇，若否，則回步驟 2 重新進行
服務篩選。 
4-3 服務執行與錯誤處理 
為配合核心服務之概念，本計畫將服務失
效之處理分下列狀況（整體錯誤處理流程
如圖 1所示）： 
 若服務失效時系統無可用之 partial 
execution結果： 
1. 若失效節點為 core service，將依
據使用者設定的 QoS 限制進行
服務置換；若無可置換之服務則
回覆使用者無可用結果。 
2. 若失效節點非 core service，則直
接回覆使用者無可用結果。 
 若服務失效時系統已有可用之 partial 
execution結果： 
1. 若失效節點為 core service，依據
使用者設定的 QoS 限制進行服
務置換；若無可置換之服務則回
覆使用者目前 ready 之 partial 
execution結果。 
2. 若失效節點非 core service，則直
接回覆使用者目前 ready 之
partial execution結果。 
 
圖 1 複合服務執行發生錯誤時的錯誤處理 
4-4 基因演算法 
 在此章節將說明此論文如何透過基因
演算法進行服務組合之演化。本方法之染
色體編碼參考 Canfora[4]所提出之編碼方
式，一個 abstract service 對應一組 concrete 
service，染色體由一組 abstract service 排
列形成。突變及交配的方式則如圖 2 所
示。而由於配合權重計算後的 QoS值已非
真實的數據(時間、可靠度)，是屬於調整
過的數值，因此我們定義一染色體 g 的
fitness function如下： 
  
)()(
)()()(
43
21
gPWgATW
gARWgAAWgF
⋅+⋅
⋅+⋅
=       (1) 
W1~4 為使用者設定的 QoS 比重，AA(g)
表 配 合 權 重 運 算 後 的 Adjusted 
Availability，為 Adjusted Availability之縮
寫，其餘 AR(g)代表 Adjusted Reliability、
AT(g)代表 Adjusted Time，而 P(g)則代表實
際之 Cost。 
 7 
二、 參考資料 
[1] R. Aggarwal, K. Verma, J. Miller, and 
W. Milnor, "Constraint Driven Web 
Service Composition in METEOR-S", 
IEEE International Conference on 
Services Computing (SCC 2004), 
Shanghai, China, 2004. 
[2] L. Aversano, M. D. Penta, K. Taneja, A 
Genetic Programming Approach To 
Support the Design of Service 
Compositions, International Journal of 
Computer Systems Science & 
Engineering 21(4), 2006, pp. 247-254. 
[3] D. Booth, et al. Web Services 
Architecture, Technical reports, World  
Wide Web Consor tium (W3C), 11 Feb 
2004. Available at  
http://www.w3.org/TR/ws-arch/ 
[4] G. Canfora, M. D. Penta, R. Esposito, 
and M. L. Villani, An Approach for 
Qos-Aware Service Composition based 
on Genetic Algorithms, Genetic and 
Evolutionary Computation Conference 
(GECCO 2005), Washington DC, USA, 
2005. 
[5] G. Canfora, M. D. Penta, R. Esposito, 
M. L. Villani, A Framework for 
Qos-Aware Binding and Re-Binding of 
Composite Web Services, Journal of 
Systems and Software 81(10), 2008, pp. 
1754-1769. 
[6] J. Cardoso, J. Miller, A. Sheth and J. 
Arnold, Modeling Quality of Service 
for Workflows and Web Service 
Processes. Web Semantics Journal: 
Science, Services and Agents on the 
World Wide Web, 1(3):281-308, 
Elsevier Inc, MA, USA, 2004. 
[7] C. Gao, M. Cai, and H. Chen. 
Qos-Aware Service Composition based 
on Tree-Coded Genetic Algorithm. 
Computer Software and Applications 
Conference, 2007, COMPSAC 2007 – 
Vol. 1. 31st Annual International, 
1:361-367, 24-27 July 2007. 
[8] H. Ludwig, A. Keller, A. Dan, R. King, 
R. Franck, 2003, Web Service Level 
Agreement (WSLA) language 
specification. Available at 
http://www.research.ibm.com/wsla/ 
[9] M. L. Hutcheson. Software Testing 
Fundamentals: Methods and Metrics. 
Wiley Publishing Inc., 2003. 
[10] P. C. Jorgensen. Software Testing: a 
Craftsman’s Approach. CRC Press, Inc. 
1995. 
[11] V. Tosic, B. Pagurek, K. Patel, 2003. 
WSOL – a language for the formal 
specification of classes of service for 
web services. In: Proc. of the 2003 
International Conference on Web 
Services (ICWS’03). CSREA Press, pp. 
375–381.  
[12] L. Zeng, B. Benatallah, M. Dumas, J. 
Kalagnanam, and Q. Z. Sheng. Quality 
Driven Web Services Composition. In 
Proceedings of the 12th international 
conference on World Wide Web 
(WWW), Budapest, Hungary. ACM 
Press, May 2003. 
 1 
國科會補助專題研究計畫項下出席國際學術會議心得報告 
                                   日期： 99  年 7 月  26 日 
                                 
一、參加會議經過 
The 2010 International Conference on Machine Learning and Cybernetics (ICMLC 2010)是
機器學習領域重要的國際研討會，今年度的會議於 2010年 7月 11至 14日於中國山東省青
島市國際洲際飯店舉行，共有約 200多人註冊與出席會議，會中有來自多國的與會學者共
同參與交流。 
在 7 月 11 日首日即舉辦了兩場 Tutorial，分別是由 Fabio Roli 教授主講的「Multiple 
Classifier Systems」，以及由Witold Pedrycz教授主講的「How to disseminate your research 
results: essentials of effective publishing」。會議在 7月 12日上午於青島洲際飯店舉辦開幕
式，並舉辦了兩場專題演講，分別是由 Josef Kittler教授主講的「Multiple Kernel Learning and 
Feature Space Denoising」，以及 Bryan Scotney 教授主講的「Incompleteness in Data for 
Decision Making」，其中尤其是第二場 Scotney教授的演講讓我獲益良多，得到許多研究上
的啟發，他所提及的概念可用於服務組合過程中不完整服務資料的處理。 
開幕後即開始為期三天的分組會議報告，而本人的論文安排在會議的最後一天。我在
這三天亦參與了數個較有興趣的主題議程，如「Intelligent Systems」以及「 Complex Systems 
計畫編號 NSC 99-2218-E-019-001-MY2 
計畫名稱 高可用性網際服務組合機制研究 
出國人員
姓名 馬尚彬 
服務機構
及職稱 國立台灣海洋大學資工系 
會議時間 
99年 7月 11日至 
99年 7月 14日 會議地點 中國山東省青島市 
會議名稱 
(中文) 2010年國際機器學習與控制研討會 
(英文) International Conference on Machine Learning and Cybernetics 
(ICMLC 2010) 
發表論文
題目 
(中文) 無 
(英文) Optimal Service Selection for Composition Based On Weighted 
Service Flow And Genetic Algorithm 
International Conference on
Machine Learning and Cybernetics 2010
Dear Author,
Congratulations. Your paper has been accepted for publication in the proceedings of the
International Conference on Machine Learning and Cybernetics (ICMLC) 2010.
Please verify the following items to ensure their accuracies:
(1) Please confirm the following:
Paper ID: 4261
Title: Optimal Service Selection for Composition Based on Weighted
Service Flow and Genetic Algorithm
Authors: Shang-Pin Ma, Department of Computer Science and
Engineering,National Taiwan Ocean University, Taipei, Taiwan
Please be reminded your paper will be rejected if the title, names of author(s) or
the order of author list of your final version is different from the original version.
(2) If your paper exceeds six pages, you must pay HKD 540 (USD 70 #) per extra
page.
(3) Your paper will NOT be published in the conference proceedings unless you
COMPLETE EVERY STEP of the following tasks by 24-May-2010
a. Register on or before 24-May-2010
The registration fee:
Non-IEEE Member: HKD 4270 (USD 550 #)
IEEE Member*: HKD 3890 (USD 500 #)
Non-IEEE Student Member*: HKD 3500 (USD 450 #)
IEEE Student Member*: HKD 3100 (USD 400 #)
* Identification(s) may be required. Please bring your identification(s) to
the conference.
# As of 23-April-2010, the exchange rate is HKD 7.77 for one USD.
The registration fee of each participant should be settled by credit card
payment. For detail, please see the other attachment (creditcardpayment.
doc)
Please be reminded when you settle the registration fee, attach the Paper
ID, Paper Title and the Registrant Name as a remark.
Page 1/2
  
OPTIMAL SERVICE SELECTION FOR COMPOSITION BASED ON 
WEIGHTED SERVICE FLOW AND GENETIC ALGORITHM 
SHANG-PIN MA1, JONG-YIH KUO2, YONG-YI FANJIANG3, CHIN-PIN TUNG1, CHUN-YING HUANG1 
1Department of Computer Science and Engineering, National Taiwan Ocean University, Taipei, Taiwan 
2Department of Computer Science and Information Engineering, National Taipei University of Technology, Taipei, Taiwan 
3Department of Computer Science and Information Engineering, Fu Jen Catholic University, Taipei, Taiwan 
E-MAIL: albert@mail.ntou.edu.tw, jykuo@ntut.edu.tw, yyfanj@csie.fju.edu.tw, jor2eva@hotmail.com, chuang@mail.ntou.edu.tw 
Abstract: 
Optimization of service selection for composition is a 
critical but difficult issue in the area of service-oriented 
computing. This paper proposes an innovative approach to solve 
this issue. In the proposed approach, every abstract component 
service in the composition will be assigned a weight value to 
represent its importance through user assignment and execution 
path analysis, and then a weighted service flow will be generated. 
A service combination that includes selected concrete 
component services will be produced based on the weighted 
service flow and the Genetic Algorithm. The service 
combination will be of acceptable quality, and ensures the core 
component services that will most likely affect the whole service 
flow execution are more robust than other ones. 
Keywords: 
Web Service Composition; Quality of Service; Basis Path 
Analysis; Genetic Algorithm 
1. Introduction 
Service-Oriented Computing (SOC) has become a main 
trend in software engineering that exploits both web services 
and Service-Oriented Architecture (SOA) as fundamental 
elements for developing on-demand applications. Web 
services are self-described, self-contained, 
platform-independent computational elements that can be 
published, discovered, and composed using standard 
protocols to build applications across various platforms and 
organizations. Recently, researches have been conducted in 
both industry and academia to alleviate issues for 
service-oriented technologies, including semantic service 
discovery, automatic service composition, and QoS aware 
service management, and so forth. 
Web service technologies are best exploited by 
composing web services. Composing multiple web services is 
more beneficial to users than a single service [8]. Generally, a 
composite service is a service flow composed of abstract 
component services (or called service nodes). Concrete 
component services corresponding to abstract services are 
functionally equivalent and can serve as replacements with 
one another. Most importantly, concrete services can be 
bound into a composite service dynamically to construct an 
executable service (See Figure 1). Thus, how to discover 
appropriate concrete component services and generate an 
executable composite service is a very critical but difficult 
issue. For selecting or choosing services, Quality of Service 
(QoS) is always treated as an important concern. QoS can be 
represented as attributes like response time, price, availability 
and responsibility, and a user can specify QoS constraints or 
preferences that will affect the results of service discovery. A 
lot of solutions have been proposed to realize QoS-aware 
service selection and composition [1, 2, 3, 4, 5, 8]. In this 
paper, we argue that not all component services in a 
composition are equally important. Just like a car has a core 
component engine, when the engine is broken, the whole car 
is broken. We always maintain the engine carefully since we 
want to keep the car workable. This idea can be applied to 
service composition technology. We should also identify core 
services from a composite service, maintain their high quality, 
and achieve fault-tolerance or error recovery when any 
unexpected conditions occur. On the basis of this concept, we 
propose a methodology to select concrete services in a 
composition based on the weighted service flow and the 
genetic algorithm. Through the proposed mechanism, a 
composite service can be generated with robust core 
component services and of acceptable quality. 
This paper is organized as follows. Section 2 introduces 
the proposed approaches to select services for composition 
based on the weighted service flow and the genetic algorithm. 
Section 3 presents the system architecture to realize the 
proposed approach. Section 4 outlines some extant research 
work related to our work. The final section depicts the 
conclusion and our future work. 
3252
2010 IEEE978-1-4244-6527-9/10/$26.00 ©
Proceedings of the Ninth International Conference on Machine Learning and Cybernetics, Qingdao, 11-14 July 2010
  
2.1.3. Calculating final weight values 
Now we have two kinds of weights to represent the 
user’s aspect and the aspect of path analysis respectively. We 
can combine these two values by the following formula: 
W(Sn) =SN * ( Iu * Wu(Sn) + Ip * Wp(Sn)) 
Where: 
0  Iu  1, 0  Ip  1, Iu + Ip = 1, 
SN is the number of all service nodes 
 
On the basis of the final weight values, a weighted 
service flow can be produced. The weighted service flow of 
the illustrative example is shown in Figure 3: 
 
Figure 3 Weighted service flow 
2.2. QoS-based Fitness Function 
TABLE 1 QOS AGGREGATION FUNCTIONS 
 
Since QoS is another key factor to select concrete 
services, we enhance the aggregation functions proposed by 
[3, 4]. The enhanced QoS aggregation functions are shown in 
TABLE 1. The weight value of each component service in the 
weighted service flow will be considered and integrated into 
the functions. For calculating the QoS value of price, a 
weight value will be a factor in the formula, but for 
availability and reliability, a weight value will be an exponent. 
The function to calculate the total cost keep unchanged since 
the price of core services does not affect the success of the 
whole composite service. 
The user can also decide which importance of QoS 
factors by assigning four weights, W1,…, W4, which represent 
the importance of cost, response time, availability, and 
reliability respectively. Since we adopt the Genetic Algorithm 
(GA) to search for a solution of the composite service, we 
need to encode the genome. In our definition, a genome is an 
array with several items, and each item represents an abstract 
component service in the service flow, and refers to a 
concrete component services which is matching the interface 
of the abstract service. The combination of component 
services that belongs to different items is a solution of the 
service composition. The fitness function F(g) for a genome g 
is defined as follows: 
 
In the fitness function, all QoS values are calculated 
according to the function definitions in Table 1. It will 
maximize availability and reliability, and minimize time and 
price under the constraints specified by the user. 
2.3. Searching for Service Combinations using the Genetic 
Algorithm 
 
Figure 4 Crossover and mutation operators 
During the GA-based evolution, the fitness function 
mentioned above is used to remove some worse solution in 
the current generation. Two-points crossover is performed to 
produce the next generation, and mutation is also carried out 
randomly according to the given probability. The operational 
concept of the crossover and mutation operators is shown in 
Figure 4. 
The evolution will continue until reaching the max 
number of generations or will stop when best solution in the 
current generation remains unchanged for a given number of 
generations. The abstract composite service will bind 
concrete component services according to the best solution in 
the last generation. 
(4) 
(6) 
3254
Proceedings of the Ninth International Conference on Machine Learning and Cybernetics, Qingdao, 11-14 July 2010
  
composition optimization problem based on the Genetic 
Algorithm (GA). Their experiment result shows that genetic 
algorithm is better than linear integer programming by 
comparing performance and scalability with increasing 
numbers of candidate web services and tasks. The authors 
also propose a re-planning approach [4]. When the actual 
QoS deviates from the estimated one during workflow 
execution time, the re-planning approach will determine the 
re-planning slice and re-bind the concrete services. Our 
approach also applies the Genetic Algorithm, but we infuse 
the core service concept into the service selection strategy to 
produce a more robust service combination from our 
viewpoint. 
Both Aversano et al. [2] and Gao et al. [5] present a 
tree-coded structure of the genetic algorithm to model 
workflow patterns in a composite service. Our method is 
semi-fixed service composition since the structure of a 
composite service is fixed, but concrete services are 
dynamically decided. In our future work, we can apply the 
tree-coded structure to achieve totally dynamic service 
composition that both the structure and service bindings are 
dynamic. 
5. Conclusions 
In this paper, we propose a service selection approach 
for composition based on the weighted service flow and the 
genetic algorithm. In the proposed approach, every abstract 
component service in the composition will be assigned a 
weight value to represent its importance through user 
definition and execution path analysis. A service combination 
that includes selected concrete component services will be 
produced via GA-based service evolution. The main benefit 
of the proposed approach is to search for the service 
combination of acceptable quality, and ensures the core 
component services that will most likely affect the whole 
service flow execution are more robust than other ones. 
Our future research plan will further investigate the 
issues of semantics in service composition and apply the 
tree-coded structure to achieve totally dynamic service 
composition. 
Acknowledgements 
This research was sponsored by National Science 
Council in Taiwan under the grant 99-2218-E-019-001-MY2 
and 97-2218-E-019-004-MY2. 
References 
[1] R. Aggarwal, K. Verma, J. Miller, and W. Milnor, 
"Constraint Driven Web Service Composition in 
METEOR-S", IEEE International Conference on 
Services Computing (SCC 2004), Shanghai, China, 
2004. 
[2] L. Aversano, M. D. Penta, and K. Taneja, “A genetic 
programming approach to support the design of service 
compositions”, International Journal of Computer 
Systems Science & Engineering, 21(4), 2006, pp. 
247-254. 
[3] G. Canfora, M. D. Penta, R. Esposito, and M. L. Villani, 
"An approach for QoS-aware service composition based 
on genetic algorithms", Genetic and Evolutionary 
Computation Conference (GECCO 2005), Washington 
DC, USA, 2005. 
[4] G. Canfora, M. D. Penta, R. Esposito, and M. L. Villani, 
“A Framework for Qos-Aware Binding and Re-Binding 
of Composite Web Services”, Journal of Systems and 
Software, 81(10), 2008, pp. 1754-1769. 
[5] C. Gao, M. Cai, and H. Chen, “Qos-Aware Service 
Composition Based on Tree-Coded Genetic Algorithm”, 
31st Annual International Computer Software and 
Applications Conference (COMPSAC 200), 2007. 
[6] M. L. Hutcheson, “Software Testing Fundamentals: 
Methods and Metrics”, Wiley Publishing Inc., 2003. 
[7] Z. Maamar, S. Mostefaoui, and H. Yahyaoui, “Toward 
an Agent-Based and Context-Oriented Approach for 
Web Services Composition”, IEEE Trans. Knowledge 
and Data Engineering, 17(5), 2005, pp. 686-697. 
[8] L. Zeng, B. Benatallah, M. Dumas, J. Kalagnanam, and 
Q. Z. Sheng, “Quality Driven Web Services 
Composition”, In Proceedings of the 12th international 
conference on World Wide Web (WWW 2003), May 
2003.
 
3256
Proceedings of the Ninth International Conference on Machine Learning and Cybernetics, Qingdao, 11-14 July 2010
99 年度專題研究計畫研究成果彙整表 
計畫主持人：馬尚彬 計畫編號：99-2218-E-019-001-MY2 
計畫名稱：高可用性網際服務組合機制研究 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 2 1 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 4 4 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 1 1 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
