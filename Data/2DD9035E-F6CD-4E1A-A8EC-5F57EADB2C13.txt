 1 
行政院國家科學委員會專題研究計畫成果報告 
針對密碼硬體具有電力分析攻擊抵抗力之設計方法與最佳化 
計畫編號 : NSC 96-2221-E-030-015-MY2  
執行期限: 96年8月1日至98年9月30日 
主持人:  林寬仁 e-mail: kjlin@mail.fju.edu.tw  
輔仁大學電子工程系 
 
 
中文摘要 
在加解密演算的過程中，攻擊者透過差異電力分析 
(Differential Power Analysis)破解其密碼，係資訊安
全一大漏洞。在本計劃中，我們基於能抵擋 DPA
攻擊的邏輯設計方法 Pre-Charge Masked Reed-
Muller Logic (PMRML) ，建構一套輔助 DPA-
resistant 電路設計之工具，並尋求硬體成本與效能
之設計最佳化。包括(1)考量 PMRML 特性，將一般
邏輯函數自動轉換為 Reed-Muller 邏輯之最佳化；
(2)將多輸入之 AND 閘拆解為兩輸入 AND 閘之最
佳網路；(3)簡化用於混亂電力消耗之亂數 mask bits
之使用。 針對這些問題，我們先正規化其為著名的
最佳化模型，然後再提出有效的演算法解答，並以
C 語言實現之，構成一個設計自動化流程。 
 
Abstract 
Various logic design styles have been proposed to 
counteract DPA (Differential Power Analysis) attacks 
for secure cryptographic IC design. However, only a 
couple of papers addressed the automatic synthesis and 
optimization for these secure logic circuits. This 
project attempts to identify common optimization issues 
in typical masking-based countermeasures. They 
include (1) constrained Reed-Muller (RM) logic 
minimization, (2) minimum decomposition of multi-
input AND gates and (3) minimum number of mask bits 
used to randomize power consumption.  An OFDD-
based heuristic method is proposed to minimize the RM 
logic with emphasis on literal number.  The latter two 
optimization problems are formulated as zero-one 
integer linear programming and graph coloring 
problems respectively. Based on these formulations 
and optimizations, an automated design flow for secure 
cryptographic IC design was implemented in C 
language.  
 
1. Background 
Securing information systems can be divided into 
several kinds of different layers. The algorithm layer 
such as AES (Advanced Encryption Standard) has been 
designed to be secure against computational 
cryptanalysis. Thus, as long as the key is kept hidden 
from an attacker, the encrypted information can be 
considered secure. However, the physical 
implementation of cryptographic algorithms leaks the 
so-called side channel information such as power 
consumption and electro-magnetic emanation during 
the computation of cryptographic algorithms, and that 
can be exploited by an attacker to find the secret key. 
In 1998, Kocher et al. first reported that the power 
consumption of a smart card could reveal the secret key 
of the cryptographic algorithm [7]. They found that the 
power consumption of a device executing a 
cryptographic algorithm is correlated with the 
intermediate data and an attacker can use statistical 
analysis to find the key from power traces of data 
processing. The attack called Differential Power 
Analysis (DPA) has been considered as the most 
dangerous attack to the security of cryptographic 
devices. Hereafter, there is a lot of research conducted 
on corresponding countermeasures against the DPA 
attack. An excellent survey can be found in the book 
written by S. Mangard et al [11]. They classified the 
countermeasures into two kinds:  hiding and masking. 
A popular method of hiding is to make the power 
consumption constant and regardless of what 
intermediate result being produced [e.g. 9, 18]. 
However, it is hard to implement the approach using 
standard semi-custom design flow. The masking 
method attempts to randomize the intermediate 
computed data and make the power consumption 
unpredictable. Many logic styles which mask data at 
the gate level and mostly can be realized with common 
standard cell libraries have been proposed [e.g. 5, 10, 
14]. Although secure masked cells or logic structure 
may be different among them, the design flows for 
these masking approaches basically are similar.   
Only a couple of papers addressed the automatic 
synthesis and optimization for securing cryptographic 
IC design against DPA attacks [6, 8, 18], which all are 
about hiding-based methods. This project attempts to 
identify common optimization issues in typical 
 3 
produce these masks. To save the complexity of the 
RNG design, we have the following issue:  
Optimization issue 3: The mask bits should be 
minimized without violating the independency 
constraint. 
     After the masked circuit netlist is obtained, some 
additional schemes such as pre-charge or dual-rail 
coding can be added. They are not considered in this 
paper. 
 
3. Constrained RM Logic Minimization 
3.1 Fixed Polarity Reed-Muller Expansion 
An n-variable Boolean function can be expressed as 
exclusive sum-of-product form, i.e. AND-XOR form, 
which is known as Reed-Muller Form. If every variable 
appears either true or complemented, but not in both 
form, the expression is defined as Fixed Polarity Reed-
Muller Form (FPRM).The advantage of the FPRM is 
that the resulting circuit needs at most n inputs in 
contrast to up to 2n inputs in Mixed Polarity (MP) RM 
representation. Although the MPRM usually needs less 
number of gates, the FMRM can save wring area. The 
RM expression under our consideration will be the 
FMRM form. A polarity is specified by an integer p, 
0≦p≦2n-1, which can be written as a binary n-tuple 
p=(pnpn-1…p1). Given a polarity p, an n-variable 
Boolean function can be expressed by the FPRM form 
as: 
 ∑−
=
− ⊕=
12
0
11 )...(
n
i
iinn bxxxf π  
where the integer subscript i, 0≦i≦2n-1, can be 
written as a binary n-tuple i=(in-1in-2…i0), ‘♁Σ’is the 
XOR operation, bi ∈{0,1} denotes whether the πi exists, 
the pi-term πi  can be represented as 
⎪⎩
⎪⎨
⎧
==
==
=
=
= −
1,1
0,1
01
:... 11
jjj
jjj
j
j
nni
pix
pix
i
x
xxx
&
&&&π
 
     The number of product terms largely depends on the 
polarity. The problem to find the best polarity with a 
least cost is computationally extensive in both space 
and time. A lot of research has been conducted to the 
minimization of FPRM expression. Tabular methods 
and Matrix transformations [e.g. 12, 17] need at least 
O(2n) complexities for both space and computation 
time. Several works have shown that the  use of OFDD 
(Ordered Function Decision Diagram) to represent an 
FPRM expression generally needs less memory and 
less computation time than tabular and matrix methods 
[e.g. 1, 2, 4].   
 
3.2 OFDD-Based FPRM Expansion 
The goal of most previous works [e.g. 1, 2, 4] is to 
minimize the number of product terms.The proposed 
minimization will put emphasis on the number of 
literals rather than the number of product (see 
optimization issue 1). For mixed polarity RM forms, 
there are several works that addressed the issue [e.g. 
13]. However, the key idea behind them is to search 
products with k-distance to be combined to single 
product. It is not applicable for FPRM expressions. In 
this paper, we proposed an OFDD-based approach. The 
OFDD is a kind of ordered decision diagram, which is 
constructed by Davio expansion [3]. For an n-input 
Boolean function ),,,,,,()( 121 xxxxxfXf inn ⋅⋅⋅⋅⋅⋅= − , the 
positive and negative Davio expansions about index 
variable xi are given as follows: 
Positive Davio expansion: 20 fxff i⊕=  ; 
Negative Davio expansion: 21 fxff i⊕=  . 
Where ),,,0,,,( 1210 xxxxff nn ⋅⋅⋅⋅⋅⋅= −  is f(X) with xi 
replaced by 0, ),,,1,,,( 1211 xxxxff nn ⋅⋅⋅⋅⋅⋅= − , ix  replaced 
by 1, and the Boolean difference 2f , 102 fff ⊕=  [3]. 
A simple example of OFDD representing the 
function 12123123123 ),,( xxxxxxxxxxxf ++=  is shown in 
Fig. 3. The variable order from root to leaf is x1 -> x2 -
> x3. The polarity selection is 123 xxx .  
Given a polarity assignment, only one 
decomposition type of Davio expansion (either positive 
or negative) about the same index variable is carries 
out at all nodes on the same tree level. The 
decomposition is performed until all non-decomposed 
nodes being a 1- or 0- terminal, denoted by a square 
box, whose function equals 1 and 0 respectively. The 
resultant OFDD is called as FPRM tree in this paper.  
The corresponding FPRM expression is derived as 
follows: 
∑
∈
⊗=
Uv
Xf )( (NPP(v)), where U is the set of all 1-
terminals and the NPP(v) (Node Path Product) is the 
product of all the literals on the path from the root to 
the node v. For example, the NPP(V6) is  32xx . By 
finding the NPP for all 1-terminals, we get 
3211 xxxf ⊕⊕=  from Fig. 3. 
 5 
 where i≦j and if i≠j, Bij=1,otherwise Bij=n2. 
The solution will use one-literal terms as less as 
possible. A solution of the integer linear programming 
problem defines a set of xij =1. Each multi-input AND 
gate then can be decomposed into several terms from 
this set. Finding a minimum decomposition (i.e. with 
minimum terms) corresponds to a minimum covering 
problem.  Since the input number is often small, exact 
solution can be easily derived. The above derived 
solution is the first level decomposition. Each selected 
2-literal term will be replaced with a new variable. 
Then, the same formulation is applied to drive the 
second level decomposition. The same approach is 
repeated to get the output.  
      
5. Mask Assignment 
In mask assignment, we attempt to use the 
minimum number of bits to satisfy the independency 
constraint: no any two inputs of a masked cell carry the 
same random mask. The procedure of mask assignment 
is shown in the Fig. 4. It traverses the circuit from 
primary outputs to its primary inputs. Each wire will be 
labelled with a string, which will be used to 
differentiate the assignment. Fig. 5 shows an example 
of how the procedure mask_assignment() to label the 
string on each wire. The three primary outputs O0, O1 
and O2 are labelled with a, b and c. Then the strings are 
backward passed to cells’ inputs. If a wire has more 
than one branch, the strings of its branches are 
concatenated to become its label string.  
After all primary inputs are labelled, we construct a 
conflict graph, in which a node represents a primary 
input and an edge (v, u) exists if LS(v) ∩ LS(u) ≠∅, 
which  means that the label strings of v and u  contain 
at least one common literal. According to the 
independency constraint, they must be assigned with 
different masks. Fig. 6 shows such a conflict graph for 
the example in Fig. 5. Since only one of inputs affects 
the mask of the masked AND cell’s output, we can let 
I3 and I5 to share the same mask. This is why they are 
combined to be one supernode in Fig. 6. Based on the 
above formulation, the minimization of mask 
assignment can be transformed to a graph colouring 
problem. In this example, it needs 4 mask bits.  
 
6. Results and Conclusion 
In this project, common optimization issues in typical 
masking-based countermeasures against DPA attacks 
have been identified, which include (1) constrained 
Reed-Muller logic minimization, (2) (2) minimum 
decomposition of multi-input AND gates and (3) 
minimum number of mask bits used to randomize 
power consumption. These optimization problems have 
been formulated and efficient algorithms proposed to 
obtain comprehensive solutions. Based on these 
formulations and optimizations, an automated design 
flow for secure cryptographic IC design was 
implemented in C language. 
The main result of this project has been published in 
[20]. 
 
a
I6
Fig. 5: An example of mask-assignment() that labels 
all wires from POs to PIs.
a 
b 
b 
b
c 
b
b 
ab
c
a 
AND 
XOR 
I0
I1
I2
I5
I4
I3
O0 
O1
O2 
a 
c 
ab 
bc
AND
AND
ab
bc
ab
XOR 
XOR
XOR 
mask_assignment( Circuit C) { 
   //LS(v) is the label string of a wire v 
Traverse backward the circuit from POs to PIs: 
Label different literals to each PO 
For each gate,  
copy the output’s LS to all inputs as their LS  
If a wire v forks, LS(v)=∪ LS(ui), where ui is a  
branch of v. 
     Construct a conflict graph 
Assign masks to each PI by graph colouring : 
      
} 
Fig. 4:  The procedure of mask assignment. 
國科會補助出席國際會議報告書 
 
姓    名 林寬仁 職稱 副教授 服務單位 輔仁大學電子工程系
中  文 第 22 屆超大型積体電路設計國際會議 
會議名稱 
英  文 The 22nd International Conference on VLSI Design 
會議日期 98 年 1 月 5 日～98 年 1 月 9 日 會議地點 New Delhi, India 
行程： 
第 22屆國際 VLSI設計會議是在印度新德里舉行。本人原定搭乘 1 月 4 日泰航 TG637
班機至曼谷，轉機泰航 TG315 班機至新德里。出發前數日，航空公司通知取消 TG637
班次，故本人改搭 1 月 3 日泰航 TG635 班機至曼谷。1 月 4 日抵新德里時，已夜晚 23
時。大會於 1 月 9 日結束，本人搭乘 1 月 10 日凌晨班機 TG316 經曼谷轉機回到台北。 
會議參與： 
   本國際會議係由印度 VLSI 學會舉辦，並由 IEEE 與 ACM 相關學會協辦。該會已有
22 年歷史，今年又與第八屆 embedded system 國際會議共同舉行。此會議乃是
IEEE/ACM DAC 會議所認定之 sister conference 之一，足見其水平與重要性。本次會議
共收到來自 21 個國家之 320 篇論文，每篇論文平均有四位以上專家審稿，最後錄取 57 
regular papers 與 22 short papers。競爭相當激烈，本人發表論文為 regular papers。 
     本次大會主軸是「Improving Productivity Through Higher Abstraction」。第一場
keynote 演講主題是”Raising India’s Relevance in the Semiconductor Industry”。這場演講
者特別提到台灣政府與產學界在推動半導體產業上的努力，值得印度有關單位參考學
習。另外在第二天有一場討論會「EDA Made-In-India:Fact or Fiction?」，與談人特別提
到台灣的 EDA 教育與研究非常成功，足為印度學界參考。作為來自台灣的一員，聽來
與有榮焉。 
國科會補助出席國際會議報告書 
 
姓    名 林寬仁 職稱 副教授 服務單位 輔仁大學電子工程系
中  文 2008 IEEE 第 51 屆中西部電路與系統國際會議 
會議名稱 
英  文 2008 IEEE International 51st Midwest Symposium on 
Circuits and Systems 
會議日期 97 年 8 月 11 日～97 年 8 月 13 日 會議地點 Knoxville, USA 
行程： 
由於 Knoxville 位處美國東南部，台灣並無直飛或一次轉機即能直達之班機。並因石
油飆漲，機票昂貴等因素，乃搭乘日航到東京轉搭美籍大陸航空至紐約，再接大陸航
空飛機至 Knoxville。全程超過 20 小時。 
會議參與： 
   本國際會議係 IEEE 歷史最為悠久之會議之一，個人第一次參加。大會收到超過 360
篇投稿，接受率在六成多，論文來自 28 個國家。因為地緣關係，發現拉美國家論文相
對於過去所參加之會議，明顯增加。台灣則有 12 篇論文，分別來自台大(1)、交大(2)、
中正(1)、中山(1)、海洋大學(1)、彰師大(1)、雲科大(2)、虎科大(1)與輔仁電子(2)。台
灣論文集中在類比或混合電路相當明顯。 
  此次大會安排三場 keynote address，分別討論「Is Analogy VLSI Becoming a Reality」
、「From Security Protocols, through their Implementation Circuitry, to Secure Memory and 
Beyond」 與 「 Physical synthesis: the Good, the Bad, and the Ugly」。本人三場皆到場
聆聽。第一場主要是提出類似 FPGA 之可程式化之類比電路。台灣在個別類比電路係
屬強項，惟可程式化之技術趨勢較少受到重視(個人所知)。第二場演講強調資訊安全必
須自硬體實作(implementation)層次全面考量，方能防止攻擊，這與本人進行中之計畫
目標吻合。第三場主題，台灣在研究上可算領先世界，而演講者精采之動畫式說明，
