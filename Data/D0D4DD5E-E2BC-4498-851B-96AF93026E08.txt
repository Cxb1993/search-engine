 2 
Cell 寬 頻 引 擎 (Cell Broadband 
Engine，簡稱 Cell) 創新多核心架構的設
計，為運算效能的提昇帶來新的突破，但
是對於想要利用它來開發新應用的人來
說，卻帶來了更大的挑戰，這主要是由於
過去CPU單核心架構與Cell的多核心架構
有本質上的不同，不同於以往程式序列式
流程控制，在Cell中我們要考慮並列式(即
平行式)的運算方式，我們同時必頇調控各
個SPE的工作協調，以及PPE對SPE的回應
等，這些是以往程式設計所沒有的一些概
念，反而比較像硬體電路系統的設計，那
我們為何又要自找麻煩由單核心轉換為多
核心，一個主要的原因是：矽製程已無法
繼續以提高時脈來提高處理器的效能，多
核心架構將是未來CPU發展必然的趨勢。 
無論是CT或者是MRI均十分依賴電腦
去重建其影像的，在不同的數學模式中，
有的利用線性矩陣運算，有的則通過濾波
器後進行向量的相加等，在過去30年中不
斷的有新方法或者是現有方法的改良不斷
被提出，但不管是數值逼近或是模型推
算，其運算量都與其影像解析度均呈指數
性的關係，故在要求高維度重建下影像的
解析度提高以及滿足即時分析的需求等前
提下，首先必頇解決運算方面的問題。在
這方面，Cell寬頻引擎的出現提供了一個新
的可能性，由於Cell創新的運算架構，我們
能快速的處理大量的資料，其運作方式對
於矩陣的處理、向量的相加，特別是在2D
或是3D影像的處理上，能提供傳統CPU所
無法提供的運算效率；實用上來說，藉由
建立在Linux上的應用程式，我們能以軟體
的方式實現快速高解析度的影像即時重
建、或用以結合新的應用與功能(例如生物
標記的即時定位或術前定位)、甚至是重建
完整即時的動態3D影像，上述應用無論與
現有的DSP晶片，或是專為重建影像所設
計的FPGA硬體電路相比，Cell更能快速且
有效率的實現複雜的重建運算功能，在系
統的維護與更新方面也將更加便利，可有
效降低成本，故的確值得就此一課題進行
深入研究。 
 
 
 
三、研究方法 
3.1 Cell寬頻引擎的多核心硬體架構 
 Cell 如同其名，如同生物體由多個細
胞所構成完整功能，如圖1所示，第一代的
Cell 微處理器有9個處理器核心，其中包含
1個IBM通用處理器架構之Power Processor 
Element 64 (PPE)，為64-Bit (通用暫存器的
寬度)版本，8個特別設計的協同處理器
Synergistic Processor Element (SPE)，另外
Cell內部之匯流排Element Interconnect Bus 
(EIB)，控制記憶體資料搬運之Memory 
Flow Controller (MFC)，連接外部的控制電
路等，擁有2億5千萬個電晶體。核心面積
為235平方毫米，採用IBM的SOI90奈米銅
互連工藝製造，在此之後採用65奈米工藝
製造。首批工程樣品工作頻率為4.06GHz，
目前市面上運行之通用版Cell的運作時脈
為3.2 GHz，理論尖峰效能為200GFlops (即
處理器每秒可完成2,000億次浮點運算)。 
Cell特別的地方就是其分工的架構，其
中PPE負責程式的流程控制，以及與外部裝
置或是記憶體溝通的工作，而SPE則是負責
運算量繁重方面的工作。PPE基本上是IBM 
PowerPC 64位元架構之通用處理器(general 
purpose processer)，這也意味著，過去為
PowerPC所編譯的程式，Cell能直接執行，
此外PPE配備「硬體超執行緒」 (2-Way 
hardware multithreaded)技術，即虛擬另一
個CPU同時處理兩個執行緒；而每個SPE
單元看成一個小型的系統，SPE運作時所需
的code、data、stack必頇全部在LS上。LS
內的資料交換必頇靠SPE或PPE發起直接
記憶體存取(Direct Memory Access，簡稱
DMA)命令，DMA命令由獨立的記憶體控
制單元(Memory Flow Controller，簡稱MFC)
負責運作，8個SPE及PPE都配備有各自的
MFC，也由於MFC與處理器單元非同步的
處理資料搬運工作，讓Cell在資料的處理量
上十分驚人。 
在指令架構方面，PPE以及下節所提的
SPE都是RISC精簡指令集，不同於X86的
CISC複雜指令集架構有變動長度的指令，
PPE與SPE固定每一個指令都是32-Bit，這
樣有助於處理器在跳躍預測時能更容易且
更準確；雖說PPE的設計主要是分配計算任
務給SPE，但其並非因此就完全不具運算加
 4 
3.3 CT的3D影像重建以及其在Cell上執行
可能獲得的效益 
 電 腦 斷 層 掃 描 Computed 
Tomography(CT)，由投影重建回原本的影
像，當平行於某切面之X-Ray通該物體，會
在對向形成此切面之密度投影，在數學上
來說，投影值就是一條X-Ray經過之像素值
相加，每一條光線對應一個值，一列平行
光束通過二維像素即可得到一維投影值，
如圖4所示，其數學定義如(2.1)的線積分
式。由於不同角度的入射平行光可以形成
不同的一維投影，故以P(t,θ)來表示投影
圖，其中t為旋轉θ之新橫軸座標值，由於互
為對向之投影角度其投影值必然相同，故
只需測量θ= 0 ~ 180∘即可。 
重建原本之切面影像最簡單的方法，
稱為反投影法(backprojection)，即把每一個
投影向其原來投射角度複製展開成二維資
料，再把所有對應不同角度的二維資料相
加，如(2.2)所示，如此即可得到一個模糊
的原始影像，此乃因為其愈靠近中心部分
被累加的數值愈多，此一效應相當於對影
像作一低通濾波處理的效果，故可以發現
原本的邊緣開始往外擴散造成模糊，如圖4
所示：一個簡化的反投影方法，其解析度
只有55，而投影角度只有兩個。 
 
 
 
現今之CT多半不是平行光，而是點光
源，其所形成的投影稱做錐狀投影
(cone-beam projection)。如前所述，橫切面
2D CT影像主要可由平行或扇形X光束經
不同角度照射所得的1D投影資料重建而
得，而由連續切面所得之2D影像則可進一
步堆疊成3D立體影像。至於錐狀投影重建
的原理乃是由點光源經不同角度得到的2D
投影資料重建而直接重建出物體的3D影
像。相較於橫切面掃描的作法，吾人可知
錐狀投影方式由於每次掃描的區域較廣，
故對具相同運算能力的電腦而言，錐狀投
影的3D重建較橫切面重建方式所花費的時
間要來得更短。重建此種CT影像最常用的
方法是由Feldkamp, Davis and Kress三人所
提出的Feldkamp (FDK)演算法，主要步驟
是先把錐狀投影類比出二維之扇型投影，
在將扇型投影經過空間轉換成平行投影，
之後就可以利用前面介紹之FBP來重建影
像，利用座標轉換反投影回疊加至正確的
重建三維位置，再乘上權重函數就可以得
到重建截面，Feldkamp演算法的數學表示
式如(2.3)-(2.10)所示： 
 
 
 
 
 
 
 
 
 
 
根據(2.3)-(2.10)，吾人可歸納出Feldkamp
演算法可分為下列三步驟進行： 
 
1. 先求出加權後之投影資料(即錐狀投
影資料轉換為平行投影資料) 
2. 將加權後之投影資料通過一濾波器 
3. 將濾波後的資料利用反投影法重建出
3D的立體像素(voxel)值 
考慮步驟1，如 (2.3)所示為一投影資料
P(u,v,β)經加權處理後可得P’(u,v,β)，在此加
權函數由(2.4)決定；緊接著是步驟2，即加
權後之投影資料P’(u,v,β)與一個濾波器h(u)
進行迴旋積分運算，如(2.5)所示；最後根
據步驟3，所欲求得之3D立體像素值I(x,y,z)
可由濾波後的資料P*(u,v,β)經一如(2.8)所
定義的加權因子W加權後，再將不同角度β
所得的結果全部加總起來估計而得，如(2.6)
所示。至於(2.7)、(2.9)與(2.10)則表不同座
 6 
在 128 張 128128 像素的錐形投影影
像重建回 128128128 的 voxel 測詴中，
我們分別針對四種不同的實現方式並比較
三維影像重建速度，如圖 9 所示。MATLAB
一如預期為最慢的達 35.703 秒，使用一般
的 C codes 進步到 2 秒以內的成績，更加最
佳化的的 C-code 則可達到 1 秒以下是為最
優良，前三者使用 Intel Core2 Dure 2.33G
之 PC 測詴，而目前 Cell 的版本則達 2 秒，
推測可能獲取資料的 MFC 命令使用不
當，以及過多的 buffer 複雜判別式所造成，
使得 SPE 都在閒置狀態，無法發揮預期之
效益所致，將逐一改進。 
 
五、參考文獻 
[1] C.-Y. Chu and S.-W. Chen, “Parallel 
implementation for cone-beam based 3D 
Computed Tomography (CT) medical 
image reconstruction on multi-core 
processors,” in IFMBE proceedings, vol. 
25/IV, pp. 2066-2069, 2009. 
[2] IBM Systems and Technology Group, 
Cell Broadband Engine Programming 
Handbook 
[3] IBM Systems and Technology Group, 
Programming Tutorial. 
[4] IBM Systems and Technology Group, 
Programmer's Guide Version 3.0. 
[5] M. Sakamoto and M. Murase, “Parallel 
implementation for 3-D CT image 
reconstruction on cell broadband engine,” 
Multimedia and Expo, 2007 IEEE 
International Conference, pp 276-279, 
July 2007. 
[6] M. Knaup, W. A. Kalender and M. 
Kachelrieß, “Statistical cone–beam CT 
image reconstruction using the cell 
broadband engine” 2006 IEEE Nuclear 
Science Symposium Conference Record, 
pp. 2837-2840, 2006. 
[7] M. Kachelrieß, M. Knaup and O. 
Bockenbach, “Hyperfast perspective 
cone–beam backprojection,” 2006 IEEE 
Nuclear Science Symposium Conference 
Record, pp. 1679-1683, 2006. 
[8] M. Kachelrieß, M. Knaup and O. 
Bockenbach, “Hyperfast parallel–beam 
backprojection,” 2006 IEEE Nuclear 
Science Symposium Conference Record, 
pp. 3111-3114, 2006. 
[9] D. Rivera, D. Schaa, M. Moffie, D. Kaeli, 
“Exploring novel parallelization 
technologies for 3-D imaging 
applications,” 2007 IEEE 19th 
International Symposium on Computer 
Architecture and High Performance 
Computing, pp. 26-33, 2007 
[10] 鄭錦峰，“C-arm 影像三維重建” 碩士
論文，國立中央大學機械工程研究所，
2004. 
 
圖1 Cell微處理器架構示意圖。 
 
圖 2 Cell 的軟體支援架構圖 
 
圖 3 Cell 所提供的開發工具 
