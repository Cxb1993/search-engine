 3
報告內容： 
 一、前言 
在網際網路的時代，有很多的資源都是透過網路而取得，不論是一般的資訊或是檔案資料。全世
界最受歡迎的檔案傳輸標準可以說是 FTP(檔案傳輸協定,File Transfer Protocol)[16]。此傳輸協定定義了
將電腦系統透過通訊網路，連接到目前現有的網路中，並且對於網路中的系統資源具有存取的能力，
而檔案伺服器是透過 TCP/IP 的協定來進行檔案的下載，傳統的檔案傳輸下載是利用單一伺服器的下
載方式進行，由於單一伺服器的流量限制，所以無法提供最佳的下載時間。以這種選擇檔案伺服器方
式的技術稱為單一下載技術(Single Download Technique, SDT)[24]。一般來說，當使用者要利用 FTP 進
行檔案下載時，多選擇拓樸位置最近的檔案伺服器進行下載，以確保提供最快的檔案傳輸服務，進而
取得最少的傳輸時間。隨著傳輸資料越來越大，單一檔案伺服器的服務已經無法滿足使用者的需求。
隨著網路科技的發展，在網路之間所傳送的資料量也隨著增加而單一檔案伺服傳輸服務已無法滿足使
用者的需求。分散式網路利用鄰近的拓樸進行檔案分享來減少下載時間的耗費，雖然先前的學者提出
回復到主從式傳輸架構下，利用(Parallelized File Transfer Protoco， P-FTP)方法達到鄰近拓樸伺服器下
載來減少下載所耗費的時間，但是一旦使用者的數量增加時則會對 P-FTP 伺服器造成負擔。 
 
二、研究目的 
本計畫第一年的目的，將去除 P-FTP 協定中特定的中央伺服器，利用使用者端自行決定合適的
伺服器的檔案傳輸協定，我們命名為分散式平行放置檔案傳輸協定: Distributed Parallelized File 
Transfer Protocol, DPFTP)。本計畫後續，分別規劃為「應用 SCTP 及換手機制改良 DPFTP」及「以
基因演算法強化 DPFTP 之換手機制」，本報告針對第一年的研究成果進行說明。 
 
三、文獻探討 
隨著傳輸的資料越來越大，單一檔案伺服器的服務已經無法滿足使用者的需求，因此除了選擇最
短距離之外，也開始加入其它因素來探討多個檔案伺服器同時服務。在先前的研究當中 Guyton 與 
Schwartz 等學者提出以跳躍計數(Hop Counts)以及來回延遲(Round trip)的方法來達到最佳的傳輸效率
[12]。Carter 提出利用頻寬和壅塞路徑來選擇使用者端與伺服端的對映伺服器[3]。Venkatasubramanian
學者提出利用電腦及資訊參數(CPU 週期、I/O 頻寬及 Memory 使用量)來選擇檔案伺服器[9]。以上這
些方法為了增加檔案傳輸的效率，利用網路環境中安置多個檔案伺服器，且將檔案下載工作分配到各
個檔案伺服器中，讓傳輸檔案的工作，由多個伺服器來執行。除此之外，除了 client-server 架構下的
檔案傳輸方法之外，還有一些檔案傳輸的方法是透過 peer to peer 的傳送方式，例如網格式檔案傳輸
(Grid- FTP)[1]與 P2P[17,10]。 
對於大容量檔案的傳輸，Sohail、Jha 與 Elgindy 等作者提出一個新方法，稱為平行放置檔案傳
 5
性並且再發送一次調整後的訊息給對映伺服器，對映伺服器會根據此資訊來調整檔案大小的
比例，並且回送調整後的確認訊息給 P-FTP 伺服器。 
6) 最後客戶端就以一般的 FTP 傳送方式來對所有對映伺服器進行檔案傳輸，在完成傳輸之後，
會由各別的對映伺服器來送出結束訊息告知 P-FTP 整體流程結束。 
7) 如果偵測到所有的對映伺服器都故障或是無法使用時，會由 P-FTP 伺服器向客戶端發出無法
使用的訊息，並且中止檔案傳輸。 
 
從上述流程可以看出，在整個檔案的傳輸過程中，主要是利用一個 P-FTP 中央伺服器執行評估，
評估所有的對映伺服器的網路(傳輸)效能。換句話說，利用這樣的方法所計算出來的對映伺服器，是
對 P-FTP 中央伺服器而言效能最好的對映伺服器，並不見得對使用者端有最佳的傳輸效能。況且，這
樣的服務是將所有的計算都集中在 P-FTP 中央伺服器上，一但使用者的數量增加時，則對 P-FTP 中央
伺服器會產生很大的負擔。因此，本計畫規劃第一年的目的，將去除 P-FTP 協定中特定的中央伺服器，
提出利用使用者端自行決定合適的伺服器的新式檔案傳輸協定(我們預定命名為分散式平行放置檔案
傳輸協定: Distributed Parallelized File Transfer Protocol, DPFTP)。此方法將直接讓使用者端自行尋找合
適的對映伺服器來提供下載，並且利用找尋到的對映伺服器進行計算並分配子檔案的傳輸大了，可以
合乎使用者與對映伺服器之間實際的傳輸延遲速率，來達到比 P-FTP 更快速的傳輸效能。 
 
四、研究方法 
 
圖 4.1:無中央伺服器之 P-FTP 檔案傳輸流程圖 
 
 7
同本身的計算伺服器 M1, M2, M3,及 M4)去執行適當性分配演算法(Suitability algorithm)[22]，計
算各個對映伺服器的適當性。適當性演算法可分成 Best Utilization Policy(簡稱 BUP)及 Lowest 
Delay Policy(簡稱 LDP)兩種。 
BUP 的方法為 
    


 m
k
k
k
k
V
V
S
1
, (1) 
LDP 的方法為 
    
k
z
k V
Vs  , (2) 
   


 m
k
k
k
k
s
s
S
1
, (3) 
其中 m 表示所選擇的對映伺服器數量，Vk表示所選擇的對映伺服器的延遲時間資訊、Vz表示
所選擇的對映伺服器資訊中，最小的最小延遲時間值、sk 表示 Vk與 Vz的比例、Sk表示所選擇
的對映伺服器所得到的適當性分割比例。這樣的方法能利用每一個對映伺服器的傳輸速率，
分配該對映伺服器所負責傳送的子檔案大小，以發送回覆訊息(Reply Message，圖中表示為
ReM)告知使用者端。此回覆訊息中包含支援的對映伺服器位置和負責的子檔案大小比例。 
6) 使用者端可藉由回覆訊息的資訊，進一步向各個支援的對映伺服器以 FTP 進行檔案傳輸
(Transferring File，圖中表示為 TF)。下載的過程中，每一個對映伺服器(包含計算伺服器)會依
FTP，傳送子檔案給使用者端。 
7) 使用者端除了可從回覆訊息中取得各個對映伺服器的位置和下載子檔案大小比例，也可藉由
此訊息重組檔案結構，以完成整體的檔案傳輸過程。在完成傳輸後，會由各別的對映伺服器
送出結束訊息(Complete Message，表示為 CoM)告知使用者端傳輸完成。 
 
本計畫為了測試傳輸效能，使用網路模擬器(Network Simulator 2，簡稱 NS-2)[6]來模擬，初步驗
證此階段所提出的方法效能較好。首先我們設計路由拓樸環境，本計晝以 Boston University 
Representative Internet Topology Generator(簡稱 BRITE)[18]產生 10 路由器節點，並且讓每一個路由器
節點都向外連結至少三個以上的其它路由器節點，來形成我們的路由拓樸環境。在完成路由拓樸環境
之後，將會固定產生十個對映伺服器節點，並使各個對映伺服器節點隨機連結至路由拓樸環境中。在
實驗上，我們規劃由此方法建立新網路環境後，在網路拓樸裡產生一個隨機連結至路由器節點的使用
者端，並且賦予隨機的頻寬與最低延遲時間。在網路環境與使用者端建立後，對 P-FTP 及本方法協定
進行下載 1GBytes 的檔案。模擬實驗重複 100 次，每一次的模擬實驗都會重新產生一組新的網路環境
與連結一個使用者端，並將其資料數據進行加總平均，得到之檔案傳輸所需時間。得到之檔案傳輸所
 9
時間差），依比例計算，對映伺服器 i 應負責子檔案大小的比例計算方式為： 
 


 m
i i
i
D
D
D
D
FAAi
1
1
1
, (4) 
 
其中 D1 為最快回應的對映伺服器之延遲時間值；Di為選擇對映伺服器 i 的延遲時間。 
4) 以 FAA 計算出所有對映伺服器因負責的子檔案大小時，會將子檔案的資訊發送給各個對映伺服
器。對映伺服器開始以 FTP 傳輸負責的子檔案。 
 
五、實驗結果 
在本計畫中，我們主要是根據 P-FTP 的方法進行改進，並且在改進的過程中，提出了去除中央伺
服器的概念，改善了 P-FTP 固定式的中央控制問題，這個方法，我們暫稱為 Modified FTP(MFTP)。本
計畫同時也提出 DPFTP 的技術。因此，在實驗的過程中，會針對 P-FTP、MFTP 和 DPFTP 進行比較，
所以在每次的實驗中，會使用相同的拓樸環境，分別以三種協定進行模擬。 
5.1. 大型檔案下載模擬 
實驗結果如圖 5.1 所示，當下載的檔案越來越大時，P-FTP 下載的時間逐漸與 MFTP 與 DPFTP 產
生差距，而 DPFTP 為三種協定中，下載大型檔案時間最快速的。這證明使用者端如果選擇了合適的
對映伺服器，且依照使用者端與對映伺服器之間實際傳輸延遲的效率切割子檔案時，就可以加速整體
的下載速率，並且減少使用者等待的時間。 
5.2. 多個使用者端同時下載環境 
此模擬實驗的方式，是先產生一個隨機連結至路由器節點的使用者端，並且進行下載檔案。當下
載 1GBytes 資料後，再產生一個隨機連結路由器節點的使用者端，同時進行的檔案下載。使用者端的
數量逐漸增加使用者端的數量到達 10 個，每產生一個使用者端，就會與之前所有的使用者端並存，
並且同時請求下載 1GBytes 的檔案。這樣的時間重複十組，以得到平均結果。實驗結果如圖 5.2 所示，
可看見當使用者數量增加後，第一個使用者端下載檔案的時間需求，會隨著使用者的數量逐漸增加。 
 
 
 11
11751167
10371034
837836
800
850
900
950
1000
1050
1100
1150
1200
1 2 3 4 5 6 7 8 9 10
使用者數量
下
載
1G
B
yt
es
時
間
( S
ec
)
P-FTP
MFTP
DFTP
 
圖 5.3. 多個使用者端間隔下載 
六、接續研究 
我們將以 SCTP(Stream Control Transmission Protocol)改良分散式檔案傳輸協定，並加入換手機制
之考量。當我們在使用 DPFTP 協定時，其方法是先透過控制頻道(control channel)傳輸所需要的控制指
令(signaling)，並形成連線，接著再另外以特定之通訊埠(port)透過 TCP 連線，以資料頻道(data channel)
進行檔案傳送。如此利用二個頻道進行傳輸的設計雖然可以確保資料傳輸之可靠與穩定性，但同時也
會造成傳輸效能降低。接著，我們在一個 SCTP 的連結(association)中內，利用特定之串流傳輸控制指
令(signaling)資料，並且再透過其餘串流進行資料內容傳輸。如此透過 SCTP 特性上之多重串流，達到
取代檔案傳輸協定中可能需要之額外控制指令溝通手段，降低連線建立交握時間以及系統所佔據之資
源。 
實際應用於多變的網路環境時，網路使用者的加入與離開並沒有一定的規律。因此，當網路使用
者增加或減少時，最初所選擇的對映伺服器可能因服務狀況改變，而無法提供適切的服務。換句話說，
當網路中有其他的使用者也要求服務時，若與先前的使用者選擇了相同的伺服器時，會造成先前使用
者所受到的服務品質下降(傳輸速度降低)。因此，未來規劃將加入換手機制的概念，針對我們所提出
的 DPFTP 協定加入簡易換手機制，使得當服務情況改變(例如伺服提供的傳輸速率改變)時，使用者端
能再尋找合適的伺服器。 
 
七、結論 
P-FTP(Parallelized File Transfer Protocol)是透過設立在一個 Autonomous System (AS)區域中心點的
P-FTP 伺服器，來進行會話式訊息傳遞，再經由訊息傳遞來達到使用者端對多個檔案伺服器進行平行
DPFTP 
 13
36, pp. 1903-1913 (2009). 
7. Fall, K. and Varadhan, K., “The NS Manual,” A Collaboration Between Researchers at UC Berkeley, 
LBL, USC/ISI, and Xerox PARC, July 7 (2008). 
8. Fu, S. and Atiquzzaman, M., “SCTP: State of the Art in Research, Products, and Technical 
Challenges,” Communications Magazine of IEEE, Vol. 42, No. 4, pp. 64-76 (2004). 
9. Fu, Z. and Venkatasubramanian, N., “Directory Based Composite Routing and Scheduling Policies 
for Dynamic Multimedia Environment,” Proc. IEEE International Parallel and Distributed Processing 
Symposium, Vol. 9, pp. 398-410 (2004). 
10. Gong, L., “JXTA: A Network Programming Environment,” Proc. IEEE Internet Computing, Vol. 5, pp. 
88-95 (2001). 
11. Grinnem, K. J, Andersson, T., and Brunstrom, A., “Performance Benefits of Avoiding Head-of-Line 
Blocking in SCTP,” Proceedings of the IEEE ICAS/ICNS, pp. 44-51 (2005). 
12. Guyton, J. and Schwartz, M., “Locating Nearby Copies of Replicated Internet Server,” Proc. ACM 
Special Interest Group on Data Communications, pp. 288-298 (1955). 
13. Hammouche, K., Diaf, M., and Siarry, P., “A Multilevel Automatic Thresholding Method Based on a 
Genetic Algorithm for a Fast Image Segmentation,” Computer Vision and Image Understanding, Vol. 
109, pp. 163-175 (2008). 
14. Holland, J. H., Adaptation in Natural and Artificial System, Ann Arbor: The University of Michigan 
Press., 1975. 
15. Ladha, S., Amer, P. D., “Improving File Transfers using SCTP Multi-streaming”, Proceedings of the 
IEEE International Performance Computing and Communications Conference, pp. 513-522 (2004). 
16. Linington, P. F. “File Transfer Protocols,” IEEE Journal on Selected Areas in Communications, Vol. 7, 
pp. 1052-1059 (1989). 
17. Matei, R., Iammitchi, A., and Foster, P., “Mapping the Gnutella Network,” Proc. Internet Computing, 
Vol. 6, pp. 50-57 (2002). 
18. Medina, A., Lakhina, A., Matta, I., and Byers, J. “BRITE: Universal topology generation from a 
user’s perspective,” Technical Report BUCS-TR-2001-03, April 12, 2001, Boston University, U.S.A. 
19. Michalewicz, Z., Genetic Algorithm +Data Structures= Evolution Programs, 3rd Edition, Springer, 
U.S.A. (1999). 
20. Mogul, J., Deering, S., and Mogul , J., “Path MTU Discovery for IP version 6”, RFC 1981, IETF, 
August 1996. 
21. Reeves, C. R., and Rowe, J. E., Genetic Algorithms- Principles and Perspectives, Kluwer Academic 
Publishers, U.S.A. (2003). 
22. 吳炯達，「分散式平行檔案傳輸協定之研究」，碩士論文，朝陽科技大學，資訊與通訊系，2008 
23. Sohail, S., Jha, S., and Elgindy, H., “Parallelized File Transfer Protocol,” Proc. IEEE Local Computer 
Networks Workshop High-Speed Local Networks, pp. 624-631 (2003). 
24. Sohail, S., Jha, S., Kanhere, S.S. and Chun, T.-C., “QoS Driven Parallelization of Resources to 
The Modified Parallelized File Transfer Protocol for 
Multi-users
Wei-Chen Lin          Jiun-Jian Liaw          Chiung-Ta Wu 
Department of Information and Communication Engineering 
Chaoyang University of Technology 
Taiwan(R.O.C.), Taichung 
s9930615@cyut.edu.tw, jjliaw@cyut.edu.tw 
 
 
Abstract—File Transfer Protocol is the most popular file 
transfer standard. This FTP can let a computer system connect to 
the internet via a communication network, and it can also access 
the system resources from the internet. File server is being 
downloaded now by TCP/IP protocol, while before it was 
downloaded by signal server.  Due to the limited flow control, the 
old method could not use download time efficiently. In order to 
solve the flow control problem, some researchers came up with a 
distributed file transfer method that can share the document with 
other users, thus allowing the shortest transfer time using 
neighboring servers. Although the distributed file transfer can 
reduce the file transfer time, it was not concerned with the 
quality of the transfer between two servers, and was 
inappropriate for file segmentation and transfer, so the file 
transfer could not attain the optimal transfer efficacy. Based on 
our research, we propose a new method called Distributed 
Parallelized File Transfer Protocol (DPFTP). This method is 
based on Parallelized File Transfer Protocol (P-FTP) and is 
beneficial to multi-users, as it utilizes server loading and reduces 
the download time. 
Keywords—FTP; P-FTP; DPFTP ; multi-users; 
I.  INTRODUCTION 
Due to the development of Internet, the data transfer by 
TCP/IP protocol [1] has been increasing; as a result, the signal 
server cannot satisfy users' demand anymore. The aim is to 
reduce the download time of the shared document distributed 
through the internet by using neighboring topology. Although 
the previous researchers propose to restore to Client-Server 
architecture by using P-FTP (Parallelized File Transfer 
Protocol) [2], it can cause the P-FTP server overload when the 
number of users increases. In a previous research, Guyton and 
Schwartz have come up with a theory about reaching the 
highest transfer efficiency by Hop Counts and Round trip. 
In addition to the above, Carter and Crovella have put 
forward the idea [3] to choose user and mirror servers by using 
bandwidth and congested paths. Venkatasubramanian has 
suggested to choose the file server by CPU cycle, I/O 
bandwidth, and memory usage amount [4]. All these ways use 
files from the server's network environment to split files and 
achieve appropriate allocation. This distributes the download 
work to each file server and increases the transfer efficiency. 
For large file transfers, researchers Sohail, Jha and 
Elgindy…etc. have proposed a method called P-FTP 
(Parallelized File Transfer Protocol), which uses AS 
(Autonomous System) P-FTP server in the center of the area 
and message passing to allow the client to download from 
multiple file servers by parallel transfer. The P-FTP file 
transfer protocol, divided into three parts performance, includes 
the client, PFTP server and mirror servers; the P-FTP flow chat 
as shown in fig 1[2]. 
II. PARALLELIZED FILE TRANSFER PROTOCOL 
 
Figure 1. Interaction among P-FTP entities 
The process description of P-FTP as below: 
1) When the user needs to download a file, the client sends 
a Request Message (RM) to the P-FTP server. 
2) After the P-FTP server receives a request message, it 
begins to collect all the messages with server utilization data 
from the mirror servers. Then it calculates the number of 
selected mirror servers the message has to pass through, and 
the client delay time.  According to these parameters for proper 
applicability algorithm, the server calculates and selects the 
mirror server with the best transfer efficiency, and the file size 
in accordance with the transmission efficiency of the server 
segments, then it assigns the file to each of the mirror servers. 
Finally, the P-FTP server sends an Inform Message (IM) to 
four mirror servers. The inform message includes the 
requirements of the sub-file sizes and requests the file location 
and the client's location. 
718
reduce the transmission time for the main purpose, both of 
them have a common drawback, which is the need to find a 
central server as computing server. 
The central server evaluation as the best server is not 
necessarily correct, therefore we propose a new method based 
on P-PFT and designed to ignore the central computing servers, 
as well as let the client choose the appropriate new file server. 
This transfer protocol is called DPFTP (Distributed 
Parallelized File Transfer Protocol). This method allows the 
client to directly find the best server as shown in figure 2, and 
also to find mirror servers to calculate and allocate sub-files. 
This method can conform to the actual transmission delay rate 
between client and server in order to achieve more rapid results 
than the P-FTP transmission does. 
IV. DISTRIBUTED PARALLELIZED FILE TRANSFER 
PROTOCOL 
We propose a Distributed Parallelized File Transfer 
Protocol (DP-FTP) to create a distributed and parallelized 
environment of a fixed number of file servers. DP-FTP makes 
users download large size file quickly, and it also balances the 
loading of file servers when a client requests a file [7]. In our 
research, the flow chart of the proposed method DPFTP file 
transfer is shown below: 
 
Figure 2. Interaction among DP-FTP entities 
 1) Request Message, RM: When a client makes a new 
request, it will send the request message packet to all mirror 
servers in AS region. RM packet is mainly used to measure the 
server status between the client and various links (for example, 
time delay). When the client side issues the packet, the RM 
packet will record the time needed to receive the response from 
mirror servers, so the client can calculate the delay time 
between the servers. 
The RM packet consists mainly of information such as: 
a) Client requests file information (file size, file type, file 
name). 
b) If there are some mirror servers in the AS region, the 
client sends multicast request messages to all mirror servers in 
the AS region and demands an immediate response [8]. 
2) Request reply message, RRM: When an AS region 
mirror server receives the RM message, it will determine 
whether a client's requested file corresponds to the RM files 
according to the relevant parameters. If the file exists, the 
server must immediately respond with an RRM (Request Reply 
Message) packet to the client, but if the file does not exist, then 
this RM packet is discarded. We have designed a simple 
response packet called RRM packet, which does not contain 
any information but is mainly used to provide the client with 
the response time. The client receives the feedback through the 
RRM packet, and then the RM packet calculates the delay time 
between servers and the client in order to let the client choose 
the order of the mirror servers. 
3) File Assignment Algorithm, FAA: When a client 
receives a mirror server's RRM packet in response, it will 
subtract the time of RRM from the RM time to find the delay 
time of the mirror server. If the client received the packet 
earlier, it means the transmission efficiency of the mirror server 
is higher, and if the client has received a number of RRM 
packets and calculates the delay time, the appropriate 
algorithms are implemented. 
FAA allocates sub-file ratio to each mirror server through 
the delay time [9] between the client and the server. FFA uses 
the RRM packet from the first response of a mirror server, 
selects the minimum delay time of several mirror servers, and 
in accordance with the delay time splits the file into non-
overlapping sub-files. The mirror server with the smallest delay 
time will be responsible for a larger number of sub-files, as 
mirror servers are responsible for the transmission rate in 
accordance with different transmission ratios of the size of their 
sub-files.  We assume that the network environment does not 
change, and all mirror servers will complete the transfer at the 
same time. Sub-file allocation ratio can be calculated by the 
following formula: 
∑
=
= m
i i
i
D
D
D
D
FAAi
1
1
1
                               (4)  
The FAAi  is responsible for a mirror server, i is 
responsible for the proportion of the sub-file size, D1 is the 
delay time of the mirror server which was the first choice, Di is 
selected as the delay time of a mirror server i. Using the 
proportion of the sums, it calculates the sub-file size ratio of all 
servers to the response of the mirror server.  
When the first mirror server responds with a RRM packet, 
then the client will calculate the delay time between the first 
server and receives a certain number of RRM packets (here we 
set the default number as 4) and begins to perform FAA 
calculations. The mirror server with the earliest response RRM 
packet will have the delay time lower than that of all other 
servers. A higher proportion of sub-files will be assigned to the 
mirror server with a higher transmission efficiency, and the less 
efficient transfer mirror server is assigned a fewer sub-file 
720
download will be speeded up, and the client waiting 
time reduced. 
 
Figure 3.  Large file download simulation 
B. Multiple users download at the same time 
In this simulation we recreate the situation where 
multiple users simultaneously download files from 
the server environment, generate random links to the 
clients' router nodes and perform 1GB file 
downloads. After completion of the first simulation 
experiment, we use the same network environment 
and then generate a second client and his random 
routing node while retaining the first client. This 
simulation experiment gradually increases until the 
client number reaches 10. All clients request the 
download for 1GBytes file at the same time. After 
simulating an increase up to 10 clients, we create a 
different set of network environment and repeat the 
above steps, adding up to 10 clients to the first one. 
The result is a total of 10 sets of duplicate network 
environmental tests, and the data is aggregated and 
then averaged. The main purpose of our experiment 
is to compare how each of the three protocols works 
when the number of clients increases, and how long 
the download time with each protocol is. When two 
or more clients on the network environment make the 
request, each protocol must find the mirror server for 
individual clients at the same time and split the sub-
file size. The transport protocol is able to efficiently 
allocate the download, and the burdens will affect the 
overall transmission efficiency of the network 
environment and the client's download time. When at 
the same time the number of user increases, P-FTP 
curve with more than five users shows that the 
download time rapidly increases. We can see that the 
increased burden on P-FTP server will also increase 
the download time, because P-FTP server using a 
fixed calculation to select the mirror server which 
would link the client requests to the same mirror 
server, resulting in an increased burden. The MFTP 
has the flexibility to select the server, although its 
download process is more efficient than with P-FTP, 
it still must select a mirror server through an 
intermediary server.  When the number of clients is 
greater than 7, the client selection of the duplicate 
server will increase the ratio, so the download time 
increases. In our proposed DP-FTP, it is up to the 
client to choose the mirror server, so he can take a 
full advantage of the whole AS region and choose the 
mirror servers. Even if the number of clients 
increases to 10, the DP-FTP method adjusts to the 
network condition and selects the best mirror servers, 
so that the burden on the downloading network is 
balanced, and the time increase rate is very small. 
C. Multiple users download in interval time 
This simulation experiment was conducted in a manner 
identical with the experiment 2, except that the clients were 
generated at the interval of 10 seconds. In this simulation, 
an interval between clients was generated, to find out 
whether each protocol can efficiently allocate the mirror 
servers and download transfer work scattered in various 
mapping servers to increase the transmission efficiency. 
The result is shown in Figure 5. This simulation experiment 
is the same as experiment 2, but a new client was generated 
every 10 seconds, the previous experiment test whether 
protocol can be balanced for download, and if work can be 
assigned for download transmission in each respective 
server. In figure 4 we can see that when multiple users 
download interval increases, the situation is more stable 
than in figure 3, because the clients at intervals enter a 
network environment, so each could be assigned a suitable 
mirror server. Then, as the network environment changes 
the protocol adjusts the selected mirror server and assigns 
sub-file size to it. In these three experiments, no matter how 
large the file downloads are, or how many multiple users 
simultaneously download files, or at what intervals multiple 
users download files, when we compare the various 
network protocols, we can find that DP-FTP method is the 
fastest, its relative download time is faster than those of 
MFTP and P-FTP. DP-FTP is based on the network 
environment designed for optimal file download and 
achieves the most efficient allocation of servers and the 
best transmission performance. 
 
Figure 4.  Simultaneous download by multiple users 
 
722
Top
Program Guide
Author Index
iCAST 2013
Technical Program
UMEDIA 2013
Technical Program
 2
專家，不分理論派或實務派都有一個互相交流及討論的機會。此次基因演算法及網路研討會之論
文發表及參與學者專家均非常熱烈，使其會議越來越被重視。大會進行可謂相當順利。同時感謝
國科會持續鼓勵研究人員參與國際研討會，讓每次的參與都是一次愉快的體驗。 
 
四、建議 
會議舉辦的地點位於中國深圳，會議地點位國深圳大學城內。目前已有清華大學，北京大學及哈
爾濱工業大學進駐，此次研討會就是由哈爾濱工業大學主辦。一開始在深圳看到哈爾濱的字眼難
免有點突兀，但在瞭解大學城的性質後，也開始對這樣的組合感到有趣。研討會一切順利，只是
深圳的市容並沒有想像中來得好，校園內的飲食環境也顯簡陋。無論如何，非常感謝國科會補助
這次國際學術會議所需的費用。參加國際研討會，除可提高研究人員在國際學術研究團體中的影
響力之外，更可能藉由國際交流，提升自我研究能量及學術成就。 
 
五、攜回資料名稱及內容 
2010 The Fourth International Conference on Genetic and Evolutionary Computing   
論文及會議議程光碟片一片 
六、參加會議照片 
  
  

process can reduce the distortion of the embedded data. And 
modulus operation is used to conceal separated parts. 
The proposed method divides the range table into 
‘lower-level’ and ‘higher-level’ as PVDLSB. When the 
difference of a block is less than the lower level, the secret 
data is separated into two different parts. When the 
difference of a block is more than or equal to the higher 
level, the secret data is also separated into two parts but 
different from the two parts of the lower level. 
 
2.1 Embedding process 
The cover image used to embed data is an a-bits gray-
value image. Cover image is separated into non-overlapping 
pixel blocks composed of two contiguous pixel values (pi 
and pi+1). The pixels of cover image are scanned in a zigzag 
path (see Figure.1). When we calculate the difference (d) of 
each two-pixel block, 1i id p p   . d must belong to 
[0,2a-1] because cover-image is an a-bits gray-value image. 
We divide [0,2a-1] into q sub-ranges. Each sub-range is 
denoted as Rj, j=1,2,…,q. The result of the divided range is 
so-called range table (see Figure.2). The width of each sub-
range (RSj) is 1j ju l  , where uj is the highest number of 
Rj and lj is the lowest number of Rj. RSj is used to decide the 
amount of embedding bit n, 
2log ( ).jn RS  We select n bits 
from a secret bit stream and transform them to a decimal 
value (DEC). After the embedding secret data is known, we 
set a division (DivI) to divide [0,2a-1] into ‘lower-level’ and 
‘higher-level’. We use different embedding methods for the 
lower-level and higher-level. If d < Div, we set it as Case 1 
to hide the secret data. Otherwise, we set it as Case 2 to hide 
the secret data. 
 
2.1.1 Case 1 
If d < Div, we divide DEC into two parts (FN and SN) 
using the following formula: 
nDECSN
n
DECFN
mod



            (1) 
A modulus operation will be used to hide FN and SN 
into pi and pi+1, respectively. Therefore, we should set the 
modulus value that will be used in modulus operation. If d < 
Div, FN and SN are both less than n. The modulus values 
used to conceal in 1 and 						 ii pp  are n. Then we use the 
following equation to conceal FN and SN into pi and pi+1: 
1 1( , ) ( ( , , ), ( , , ))i i i ip p MODS p n FN MODS p n SN         (2) 
where ip  and 1ip   should exceed the range of the pixel 
value [0,2a-1]. When the value of a pixel exceeds the range, 
the following equation is used to make the pixel value 
within the accurate range. 
1
1
1 2 1
1 1 2 1
1
  , if 0
   , if 2 -1
            , Otherwise
 , if 0
 , if 2 -1
            , Otherwise
i i
a
i i i
i
i i
a
i i i
i
p RG p
p p RG p
p
p RG p
p p RG p
p
 
  

 

	   

 

	   

Γ
Γ
      (3) 
where RG1=RG2=n. In Eq.(3), ip	  and 1ip 	  are able to 
exceed the original sub-range of d. Therefore, we should 
calculate the new difference ( d 	 ) between 1and i ip p 	 	  
using the  following equation: 
1i id p p 	 	 	           (4) 
If d 	  belongs to original Rj, the final embedded pixel 
( 1 and 						 ii pp ) is 1and i ip p 	 	 . If not, we use the following 
equation to calculate the smallest distance (BD) between d 	  
and original Rj: 








jj
jj
lddl
udud
BD
''
''
 if , 
 if ,         (5) 
The changing number should be a multiple number of 
modulus value n or BD . Therefore, the following 
equation is used to calculate the changing number of 
1and i ip p 	 	 . 
1 1
1
2 2
2
B DC H M GM G
B DC H M GM G
    
    
        (6) 
Where MG1=MG2=n. The following equation is used to 
decide whether 1and i ip p 	 	  should be added or be subtracted. 
1 1 2 1
1 1 2 1
1
1 1 2 1
1 1 2 1
( , ), if   &  
( , ), if   &  
( , ) ( , ), if   &  
( , ), if   &  
i i j i i
i i j i i
i i
i i j i i
i i j i i
p CH p CH d l p p
p CH p CH d l p p
p p p CH p CH d u p p
p CH p CH d u p p
 
 

 
 
	 	 	 	 	  
 
 	 	 	 	 	  
 		 		  	 	 	 	 	   
	 	 	 	 	   
      (7) 
Finally, we compute the concealed 1 and 						 ii pp . 
1 1
1
1 1
1
( , ) , if [0,2 -1]& [0,2 -1]
                                       & 
( , ) , if [0,2 -1]& [0,2 -1]( , )                                      
a a
i i i i
i i
a a
i i i i
i i
p p p p
MSE MSE
p p p pp p
 

 

		 	 		 		 


	 		 		 		 			 			 
1
1 1
1 1
  & 
( , ) , if [0,2 -1]& [0,2 -1]
( , ) , if [0,2 -1]& [0,2 -1]
i i
a a
i i i i
a a
i i i i
MSE MSE
p p p p
p p p p

 
 




 

	 		 		 		 
 		 	 		 		 
     (8) 
 
2 2
1 1
2 2
1 1 1
( ) ( )
( ) ( )
i i i i i
i i i i i
MSE p p p p
MSE p p p p
 
  
		 	   
	 		   
      (9) 
 
2.1.2 Case 2 
If d Div , we divide the embedding secret data 
DEC into two parts using the following formula: 
651
difference value of the two points. If the difference value is 
higher, we embed more bits of secret data into the pixels. 
We separate the secret data into two parts. If the difference 
value of the two points is high, we separate the secret data 
by a modulus of 10, otherwise, the secret data is separated 
by a modulus of concealing bit number (it is derived from 
the rage table). All possible pixel values are used to show 
the comparison. According to the experimental results, 
proposed technique results in a higher quality than that of 
PVDLSB. 
 
References 
[1] R.-Z. Wang, and Y.-S. Chen, IEEE Signal Processing 
Letters, Vol. 13, Issue 3, March 2006, pp.161-164. 
[2] G. C. Langelaar, I. Setyawan, and R. L. Lagendijk, 
Watermarking digital image and video data. A state-
of-the-art overview, IEEE Signal Processing 
Magazine, Vol. 17, No. 5, 2000, pp. 20-46. 
[3] S.-J Wang, Steganography of capacity required using 
modulo operator for embedding secret image, Applied 
Mathematics and Computation, Vol. 164, Issue 1, 5 
May 2005, pp. 99-116. 
[4] C.-C. Chang, J.-C. Chuang, and Y.-P. Lai, Hiding data 
in multitone images for data communications, IEE 
Proceedings: Image and Signal Processing, Vol. 151, 
No. 2, 2004, pp. 137-145. 
[5] M. U. Celik, G. Sharma, A. M. Tekalp, and E. Saber, 
Lossless generalized-LSB data embedding, IEEE 
Transactions on Image Processing, Vol. 14, No. 2, 
2005, pp. 253-266. 
[6] R.-Z. Wang, C.-F. Lin, and J.-C. Lin, Image hiding by 
optimal LSB substitution and genetic algorithm, 
Pattern Recognition, Vol. 34, No. 3, 2001, pp. 671-
683. 
[7] C.-C. Chang, J.-Y. Hsiao, and C.-S. Chan, Finding 
optimal least-significant-bit substitution in image 
hiding by dynamic programming strategy, Pattern 
Recognition, Vol. 36, No. 7, 2003, pp. 1583-1595. 
[8] C.-K. Chan, and L.-M. Cheng, Hiding data in images 
by simple LSB substitution, Pattern Recognition, Vol. 
37, No. 3, 2004, pp. 469-474 
[9] C.-C Thien and J.-C Lin, A simple and high-hiding 
capacity method for hiding digit-by-digit data in 
images based on modulus function, Pattern 
Recognition, Vol. 36, Issue: 12, December 2003, 
pp.2875-2881 
[10] C.-C. Chang, Y.-S. Hu, and T.-Z. Lu, A 
watermarking-based image ownership and tampering 
authentication scheme, Pattern Recognition Letters, 
Vol. 27, Issue: 5, April 2006, pp.439-446. 
[11] C.-C. Chang, and H.-W Tseng, A steganographic 
method for digital images using side match, Pattern 
Recognition Letters, Vol. 25, Issue: 12, September 
2004, pp. 1431-1437. 
[12] D.-C Wu, and W.-H. Tsai, A steganographic method 
for images by pixel-value differencing, Pattern 
Recognition Letters, Vol. 24, Issue: 9-10, June 2003, 
pp. 1613-1626. 
[13] H.-C. Wu, N.-I. Wu, C.-S. Tsai, and M.-S. Hwang, 
Image steganographic scheme based on pixel-value 
differencing and LSB replacement methods, IEE 
Proceedings: Vision, Image and Signal Processing, 
Vol. 152,  Issue 5,  Oct. 2005, pp.611-615. 
 
]15,0[1 R
]31,16[2 R
 
]63,32[3 R
 
127,64[4 R
 
 
255,128[5 R
 
Fig. 1 Fig. 2 
Figure 1. The non-overlapping pixel blocks are scanned in a 
zigzag path. 
Figure 2. Range table whose range widths are 16, 16, 32, 64, 
and 128 
 
Figure 3. The MSEs of PVDLSB and our method for 
different pixel difference values.  
 
Table 1. The detailed comparison of PVDLSB and our 
method. 
PVDLSB Our methodsub-
range
number of 
cases  false 
cases MSE 
false 
cases MSE
R1 127,232 0 2.5 0 1.60
R2 119,040 0 2.49 0 1.63
R3 427,008 10,912 62.81 0 5.51
R4 1,314,816 87,360 391.40 0 6.82
R5 2,113,536 699,008 6850.46 0 12.88 
653
99年度專題研究計畫研究成果彙整表 
計畫主持人：廖俊鑑 計畫編號：99-2221-E-324-043- 
計畫名稱：以基因演算法及 SCTP 開發分散式平行放置檔案傳輸協定之研究 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 2 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 0 1 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
國科會補助專題研究計畫成果報告自評表 
請就研究內容與原計畫相符程度、達成預期目標情況、研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）、是否適
合在學術期刊發表或申請專利、主要發現或其他有關價值等，作一綜合評估。
1. 請就研究內容與原計畫相符程度、達成預期目標情況作一綜合評估 
■達成目標 
□未達成目標（請說明，以 100字為限） 
□實驗失敗 
□因故實驗中斷 
□其他原因 
說明： 
2. 研究成果在學術期刊發表或申請專利等情形： 
論文：□已發表 ■未發表之文稿 □撰寫中 □無 
專利：□已獲得 □申請中 ■無 
技轉：□已技轉 □洽談中 ■無 
其他：（以 100字為限） 
已投稿至國際期刊(International Journal of Innovative Computing Information and 
Control) 
3. 請依學術成就、技術創新、社會影響等方面，評估研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）（以
500字為限） 
大容量的檔案傳輸技術之一為在主從式的傳輸架構下，進行分散式檔案傳輸下載，其中的
主要方法之一為平行放置檔案傳輸協定(Parallelized File Transfer Protocol, 
P-FTP)。P-FTP 是透過設立在一個 Autonomous System(AS)區域中心點的 P-FTP 伺服器，
來進行會話式訊息傳遞，再經由訊息傳遞來達到使用者端對多個檔案伺服器進行平行下
載。在整個傳輸過程中，是由 P-FTP 伺服器去對所有的對映伺服器進行評估。因此，實際
上會產生對 P-FTP 伺服器所評估出來最好的對映伺服器，不見得對使用者端是最好的。再
加上所有的計算都集中在 P-FTP 伺服器上，當使用者的數量變多時會對 P-FTP 伺服器產生
很大的負擔。因此，本計畫第一年的結果，已去除 P-FTP 協定中特定的中央伺服器，提出
利用使用者端自行決定合適的伺服器的新式檔案傳輸協定。計畫執行的結果已及達到的價
值，簡述如下： 
 
1.開發無中央伺服的 PFTP 傳輸方法，並驗證無中央伺服器的傳輸效能較佳。 
2.研發分散式平行放置檔案傳輸協定(DPFTP)。 
3.於 NS2 上實作 DPFTP，並完成與 PFTP 之完整實驗，進行分析及比較。 
4.計畫執行過程，讓學生充份瞭解 TCP、FTP 及 PFTP 之實作與核心技術。 
5.本年度計畫的執行成果，已完成論文撰寫並己投稿至國際期刊。 
 
