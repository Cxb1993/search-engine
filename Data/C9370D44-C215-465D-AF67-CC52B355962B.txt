 2
 
A systematic optimization approach for assembly sequence planning 
using Taguchi method, DOE, and BPNN 
 
Wen-Chin Chena, Yung-Yuan Hsub,*, Ling-Feng Hsieha, Pei-Hao Taia  
aGraduate Institute of Technology Management, Chung Hua University, 
707 Wufu Rd., Sec. 2, Hsinchu 300, Taiwan 
bDepartment of Mechanical Engineering, Chung Hua University, 
707 Wufu Rd., Sec. 2, Hsinchu 300, Taiwan 
 
                                   
Abstract 
Research in assembly planning can be categorised into three types of approach: 
graph-based, knowledge-based and artificial intelligence approaches. The main drawbacks of the 
above approaches are as follows: the first is time-consuming; in the second approach it is 
difficult to find the optimal solution; and the third approach requires a high computing efficiency. 
To tackle these problems, this study develops a novel approach integrated with some 
graph-based heuristic working rules, robust back-propagation neural network (BPNN) engines 
via Taguchi method and design of experiment (DOE), and a knowledge-based engineering (KBE) 
system to assist the assembly engineers in promptly predicting a near-optimal assembly 
sequence. Three real-world examples are dedicated to evaluating the feasibility of the proposed 
model in terms of the differences in assembly sequences. The results show that the proposed 
model can efficiently generate BPNN engines, facilitate assembly sequence optimisation and 
allow the designers to recognise the contact relationships, assembly difficulties and assembly 
constraints of three-dimensional (3D) components in a virtual environment type. 
 
Keywords: assembly sequence planning; assembly precedence diagrams; neural networks; 
design of experiment; Taguchi method 
 
1. Introduction 
In general, assembly involves the integration of components and parts to create a product or 
system through computer-aided design and manufacturing (CAD/CAM) systems. Assembly 
planning is a crucial design step for generating a feasible assembly sequence. Traditional 
assembly planning is manual and based on the experience and knowledge of industrial engineers; 
however, manual analysis does not allow the feasibility of assembly sequences to be easily 
verified. In the electronics industry, the approximate 40%- 60% of total wages was paid to 
assembly labors (Kalpakjian, 1992). The implementation of design for assembly (DFA) and 
design for manufacturing (DFM) resulted in enormous benefits, including the simplification of 
products, reduction of assembly product costs, improvement of quality, and shrinkage of time to 
market (Kuo et al., 2001). Good assembly sequence planning (ASP) has been recognised as a 
practical way of reducing operational difficulties, the number of tools and the working time (Lai 
and Huang, 2004).  
 4
graphs can be used to represent the correct geometric constraints among the assembly parts. In 
the second stage, a three-level relational model is developed to generate a complete relational 
model graph (RMG) and the incidence matrix. The relational model graph can be advanced and 
transformed into an assembly precedence diagram (APD), which is used to describe the assembly 
precedence relations of the parts. Based on these graphs, the designer can easily find feasible 
sequences and evaluate the difficulty of assembly. In the third stage, the CAD-based Knowledge 
Fusion (KF) programming language and BPNN engines via Taguchi method and design of 
experiment (DOE) are employed to validate the available assembly sequences. The three kinds of 
real-world toy products are utilised to evaluate the feasibility of the proposed model in terms of 
the differences in underlying assembly characteristics and predict a near-optimal assembly 
sequence according to the defined performance criteria. 
2. The working concepts and procedures 
The working concepts and procedures of the proposed approach are shown in Fig. 1. Initially, 
detailed data is input from a 2D engineering drawing and related assembly information into a 
CAD assembly package. Then, the correct explosion graph is developed using the transforming 
rules. Finally, the relational models are generalized to represent the assembly precedence 
relations, and an evaluating mechanism is then employed to find a global feasible solution. The 
planning process is recursive until the defined criteria was satisfied. The main outputs of the 
integrated graph and BPNN-based assembly planning are the complete RMG, APD, and BPNN 
engines. In addition, Fig. 2 represents the knowledge-based engineering (KBE) system rendering 
a UG-based operational interface to access the potential graph and BPNN-related details via 
different types of database, and a robust BPNN engine dedicated to promptly generating a 
near-optimal assembly sequence. 
3. Back-propagation neural network 
In much of the literature, back-propagation neural networks (BPNNs) have been adopted 
because they have the advantages of a fast response and high learning accuracy (Maier and 
Dandy, 1998; Liu et al., 2001; Lee et al., 2001; Yao et al., 2005; Chen and Hsu, 2007). The 
superiority of a network’s functional approach depends on the network architecture and 
parameters, as well as the problem complexity. If inappropriate network architecture or 
parameters are selected, undesirable results may be obtained. Conversely, the results will be much 
more significant if good network architecture and parameters are selected. The BPNN consists of 
an input layer, hidden layer, and output layer. The parameters for the BPNN include the number 
of hidden layers, number of hidden neurons, learning rate, momentum, etc. All of these 
parameters can significantly impact the performance of the neural network. Fogel (1991) 
proposed a final information statistical (FIS) process based on Akaike’s information criterion 
(AIC) to determine the number of hidden layers and neurons. One hidden layer is sufficient to 
compute arbitrary decision boundaries and quite adequate to model nonlinearity in most cases of 
the BPNN (Khaw et al., 1995; Anjum et al., 1997). The limitation of Fogel’s research is that the 
process can only perform simple binary classifications. Murata and Yoshizawa (1994) and Onoda 
 6
Santos and Ludermir (1999) applied a factorial design to assist the design and implementation of 
a neural network. The formulae of the three types of S/N ratios are given as follows: 
 nominal the best: ⎟⎟⎠
⎞
⎜⎜⎝
⎛×= 2
2
log10/
S
yNS  ,                        (3) 
 the larger the better: ⎟⎟⎠
⎞
⎜⎜⎝
⎛×−= ∑
=
n
i iyn
NS
1
2
11log10 / , and             (4) 
 the smaller the better:  ][ log10- 1log10 / 22
1
2 Syy
n
NS
n
i
i +×=⎟⎠
⎞⎜⎝
⎛×−= ∑
=
; (5)         
where iy  is the response value of a specific treatment under i  replications, n  is the number 
of replications, y  is the average of all iy  values, and S  is the standard deviation of all iy  
values. 
5. Optimization of the neural network parameters using RSM & Taguchi method 
In this research, we applied the Taguchi method and DOE to obtaining the optimal parameter 
settings of the BPNN. Since the number of hidden layers did not have a significant effect on 
convergence, the number of hidden layer was set to 1. The controlling factors of Taguchi method 
are transfer function (Ft), the number of hidden neurons (Nh), learning rate (Rl), momentum (Mt), 
and Epochs (Ep). The numbers of neurons in the hidden layer under different levels were obtained 
by the method proposed by Khaw et al. (1995) and Haykin (1999). Information on the factors’ 
assumptive settings at different levels is listed in Table 1. Apart from transfer function (Ft), the 
number of hidden neurons (Nh), learning rate (Rl), momentum (Mt) and the numbers of 
calculation generations i.e. epochs (Ep) are determined by first finding the range in which these 
factors have better converging results, and second by determining the equal-distance value for the 
three levels.  
Under the condition of five factors, one for two levels and four for three level, and no 
correlation among the five factors, the total degrees of freedom were 17 (i.e., 1× (2-1) +4 × (5 – 
1)).  An L18 (21×34) orthogonal array is selected for arranging the factors and carrying out the 
experiment. In this experiment, there are two replications, and the predicted performance (Mean 
square error, MSE) of Y is the evaluation value for different combinations of factor levels. Υ  is 
the average of two Y’s in each replication. The optimal combination of factor levels is the 
experiment with the largest S/N ratio. From the experimental results of Taguchi method, the main 
effects plots of BPNN’s factors through Taguchi method can be seen in Fig. 3. The optimal 
combination of factor levels is represented by the following: BPNN architecture of 5-13-1, the 
transfer function is Hyperbolic Tangent, the number of calculation generations of 35,000, a 
learning rate of 0.9, and a momentum of 0.9.  
Subsequently, the result of the DOE with response surface methodology (RSM) on the 
factors’ assumptive settings at two levels listed in Table 2 is revealed: the number of neurons of 
15, a learning rate of 0.9, a momentum of 0.9, and the number of calculation generations of 
50,000. The response optimization of BPNN’s parameters via DOE is represented in Fig. 4.   
 8
proposed model adopts a three-stage integrated assembly planning approach to express the 
complexity of the assembly relations and to evaluate the feasibility of the respective assembly 
sequences in the design phase. The experimental results for the case study verify the feasibility of 
the proposed approach, which facilitates the DFA in potential applications of 3D component 
models to assist manual or automatic assembly in a virtual environment, and allows the designer 
to recognise the relative position, geometric constraints and relationships of the 3D components 
using the following graph-oriented methods: the Above Graph, APD and relational model graph. 
The planner can further generate a correct explosion graph and construct an incidence matrix for 
validating the assembly relations through applying the Above Graph and relation models. In 
addition, this three-stage integrated approach can effectively promote the quality of the generated 
assembly plan and facilitate assembly sequence optimization via knowledge-based engineering 
(KBE) system and a robust BPNN engine. 
 
Acknowledgements 
Financial support from the National Science Council, Taiwan, ROC, under contract 
NSC97-2212-E-216-011 and Chung Hua University, under contract CHU-96-M-001.  
 
Reference 
 
Anjum, M. F., Tasadduq, I., & Al-Sultan, K. (1997). Response surface methodology: A neural 
network approach. European Journal of Operational Research, 101, 65-73.  
Bourjault, A. (1984). Contribution á une approche méthodologique de l’assemblage automatisé: 
Elaboration automatique des séquences opératoires, Ph.D. Thesis, Faculté des Sciences et 
des Techniques de l’Université de Franche-Comté, France.  
Chen, C.L.P. (1990). Neural computation for planning and/or precedence-constraint robot 
assembly sequences. In: Proceedings of the International Conference on Neural Networks 
(pp. 127-142). San Diego, CA.  
Chen, R.S., Lu, K.Y., & Tai, P.H. (2004a). Optimization of assembly plan through a three-stage 
integrated approach. International Journal of Computer Applications in Technology, 19(1), 
28-38.  
Chen, R.S., Lu, K.Y., & Tai, P.H. (2004b). Optimizing assembly planning through a three-stage 
integrated approach. International Journal of Production Economics, 88, 243-256.  
Chen, W.C., & Hsu, S.W. (2007). A neural-network approach for an automatic LED inspection 
system. Expert Systems with Applications, 33(3), 531-537.  
Chen, W.C., Tai, P.H., Deng, W.J., & Hsieh, L.F. (2008). A three-stage integrated approach for 
assembly sequence planning using neural networks. Expert Systems with Applications, 34, 
1777-1786.  
Cheng, C.S., & Tseng, C.A. (1995). Neural network in detecting the change of process mean 
value and variance. Journal of the Chinese Institute of Industrial Engineers, 12 (3), 215-223.  
De Fazio, T.L., & Whitney, D.E. (1987). Simplified generation of all mechanical assembly 
sequences. IEEE Transactions on Robotics and Automation, 3(6), 640-658.  
 10
........................................................................................................................................................  
Sinanog˘lu, C. (2006). A neural predictor to analyze the effects of metal matrix composite 
structure (6063 Al/SiCp MMC) on journal bearing. Industrial Lubrication and Tribology, 
58(2), 95-109. 
Yao, S., Yan, B., Chen, B., & Zeng, Y. (2005). An ANN-based element extraction method for 
automatic mesh generation. Expert Systems with Applications, 29, 193-206.  
 
 
Fig. 1. Working concepts and procedures. 
 12
 
Tanh_AxonSigmoid_Axon
70.0
67.5
65.0
62.5
60.0
18138 0.90.80.7
0.90.80.7
70.0
67.5
65.0
62.5
60.0
500003500020000
Active Function
M
ea
n 
of
 S
N 
ra
ti
os
Neuron Learning Rate
Momentum Epoch
Main Effects Plot (data means) for SN ratios
Signal-to-noise: Nominal is best (-10*Log(s**2))
Fig. 3. Main effects plots of BPNN’s factors. 
 
 
 
 
 
 
 
Fig. 4. The RSM response optimization of BPNN’s parameters. 
Tanh_AxonSigmoid_Axon
0.05
0.04
0.03
0.02
18138 0.90.80.7
0.90.80.7
0.05
0.04
0.03
0.02
500003500020000
Active Function
M
ea
n 
of
 M
ea
ns
Neuron Learning Rate
Momentum Epoch
Main Effects Plot (data means) for Means
ABCD
BCD
AB
AD
B
BD
ABC
BC
ABD
CD
ACD
C
AC
D
A
706050403020100
Te
rm
Standardized Effect
3.18
A Neuron
B LearningRate
C Momentum
D Epoch
Factor Name
Pareto Chart of the Standardized Effects
(response is Training_MSE, Alpha = .05)
Neuron
Ep
oc
h
17.515.012.510.07.55.0
50000
40000
30000
20000
10000
LearningRate 0.6
Momentum 0.7
Hold Values
>  
-  
-  
-  
-  
-  
<  0.01
0.01 0.02
0.02 0.03
0.03 0.04
0.04 0.05
0.05 0.06
0.06
Training_MSE
Contour Plot of Training_MSE vs Epoch, Neuron
55000
400000.00
0.02
0.04
0.06
250005 10 1000015 20
T raining_MSE
Epoch
Neuron
LearningRate 0.6
Momentum 0.7
Hold Values
Surface Plot of Training_MSE vs Epoch, Neuron
 14
 
 
Fig. 6. The complete RMG and APD of a toy car. 
C40
C39
C21
C22
C23
C24
C25
C26
C27
C28C29
C30
C31C32
C33
C34
C35C36
C37
C38
C2
C3
C4
C5
C6
C7
C8
C9
C10
C11
C12
C13
C14
C15
C16
C17
C18
C19
C20
C1
3DG
21RA
23RBW
22RD
13LBW
14LFW2CP
28SR
27SP2
1MB
24RFW25SL
26SP1
16BS2
15BS1
6GS1_3
10GS3_1
12PO
4GS1_1
7GS2_1
11GS3_2
5GS1_2
8GS2_2
9GS2_3
17PP1 18PP2
20PPS2 19PPS1
2CP 22RD 3DG 17PP1 7GS2_18GS2_29GS2_3
4GS1_15GS1_26GS1_310GS3_111GS3_2
28SR
16BS2
21RA 13LBW 23RBW 14LFW
24RFW 26SP1 27SP2 25SL 1MB
12PO 18PP2
19PPS1 20PPS2
15BS1
 16
 
Fig. 9. The parts list and exploded view of a toy boat. 
 
 
 
Fig. 10. The complete RMG and APD of a boat. 
 18
 
Table 2  Information on the factors’ assumed settings at different levels.   
Item Control factor Level 1 Level 2 
A Number of neurons in the hidden layer 4 18 
B Learning rate 0.3 0.9 
C Momentum 0.5 0.9 
D Number of epochs 10,000 50,000 
 
Table 3  The optimal assembly sequence of a toy car. 
 
 
 
 
 
 
 
 
 
 20
 
 
Table 6  Comparisons of BPNN performance between Taguchi method and DOE  
approach. 
 
Item Training RMSE Testing RMSE Approach 
BPNN engine 1 0.055357604 0.015026421 Taguchi method 
(13-0.9-0.9-35000) 
BPNN engine 2 0.048829895 0.010480437 DOE 
(15-0.9-0.9-50000) 
 
 
 
 
 
