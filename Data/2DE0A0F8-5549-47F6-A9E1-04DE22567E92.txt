2 
 
行政院國家科學委員會專題研究計畫成果報告 
建構高危險感染性醫療廢棄物之模糊逆向運籌管理模式 
A Fuzzy Reverse Logistics Management Model for  
High Risk Infectious Medical Waste 
 
計 畫 編 號：NSC-97-2221-E-224-033 
執 行 期 限：97 年 08 月 01 日至 98 年 07 月 31 日 
主 持 人：林君維, 國立雲林科技大學工業管理系(所) 
計畫參與人員：陳銘凱、蔡立人, 國立雲林科技大學工業管理系(所) 
 
一、中文摘要 
對於醫療產業而言，如何針對醫療廢棄物
進行嚴密的逆向物流控管，尤其是針對具有高
危險性的感染性醫療廢棄物，其關鍵性絕對與
醫療本身同等重要。除了因為醫療廢棄物中含
有之感染性物質，如果物流控管稍一不慎，此
傳染性的病毒與病菌，除了在醫療院所內部對
醫護人員與病患造成致命的威脅外，院內感染
的威脅亦會擴散至院區外，並對整個相關環境
的居民健康造成無法彌補的衝擊。尤有甚者，
如果是面對緊急疫情爆發，例如 SARS、禽流
感、登革熱時，如果未能對短時間內所產生的
大量感染性廢棄物，進行有效逆物流控管與處
理，則引爆的疫情擴散所造成的生命與經濟的
損失，對國家與社會將是無法彌補的損失。本
研究之目的就是針對具有高危險的感染性醫
療廢棄物，分為三大部分：1)依據環保署與衛
生署之醫療廢棄物處理相關辦法，建構出「醫
療廢棄物逆物流處理決策系統流程」； 2)以感
染症風險擴散模式為基礎，並以整體考量模糊
感染擴散風險成本、醫療廢棄物處理成本、醫
療廢棄物儲存成本、物流運輸成本、以及人員
及裝備成本之模糊醫療廢棄物逆物流處理成
本最小化為目標，建構一模糊非線性數學規劃
模式；3)建置以無線射頻識別系統 (RFID, 
Radio Frequency Identification System)為基礎
架構之「醫療廢棄物逆物流處理追蹤與監控系
統」，並套用本研究之管理模式，以為實證研
究之環境。 
關鍵詞：醫療廢棄物、逆向物流、模糊非線性
規劃 
Abstract 
 For the medical service industry, how 
to perform seamless monitor and control of the 
high risk infectious medical waste, are equally 
critical to the medical treatment itself. Besides 
the inherited infectious material in the medical 
waste, by a slight negligence logistic control, it 
will cause deadly infection and treat to not only 
the patients and personnel inside the hospital but 
the community along the transportation route. 
Moreover, while facing the mass infectious 
medical waste caused by SARS, Birds flu, or 
Dengue fever, if there is no effective and 
efficient reverse logistic control and 
management, the loss in both human lives and 
economy caused by these severe epidemics will 
be unaccountable. Targeting on the high risk 
infectious medical waste, the objective of this 
research is threefold: 1) by complying with the 
1 1
I J
ij
i j
TOC w OC
 
                     (1) 
 ij ijw M A k U                       (2) 
2.處理人員人事成本： 
1 1
I J
i j
T L C L C
 
                         (3) 
3.處理人員裝備成本： 
1 1
I J
i j
TAC AC
 
                         (4) 
4.醫療廢棄物儲存成本： 
1 1
I J
ij
i j
TIC w IC
 
                       (5) 
5.模糊感染擴散危險期望成本： 
1 1
I J
ij
i j
TD C t D C
 
                      (6) 
6.運輸成本： 
1 1
I J
ij
ij ij ij
i j q
ij
ij ij ij
q
w
TRC w C x VEC x
S
w
w C y VEC y
S
 
         
          

      
(7) 
限制式如下： 
1 1
I J
i j
i j
w V
 
                          (8) 
1 1
I J
i j
i j
w M I C
 
                        (9) 
3 5 ,qS q  A Band         (10) 1 5 ,qS q 
   
 
111 1 ,
0 1
1 , 11
0
k
e
A
A k
k
A
    


    
           
1    (11) 
0                                (12) 
0i jw                               (13) 
0M                               (14) 
0ijU                               (15) 
 0,1ijx                            (16) 
 0 ,1i jy                            (17) 
限制式說明： 
(8)：質量平衡限制式，所產生之醫療廢棄物，
在經過整個處理流程後，整個統計數量都是一
至的。 
(9)：儲存容量限制，醫院最大存貨量必須能
儲存產生的醫療廢棄物，所以容量必須大於當
日產生量。 
(10)：運送量限制，貨車所能載運之容量，必
須符合貨車之裝載上限。 
(11)：在醫療院所內，感染症在某時間點之擴
散率。 
(12)：醫療院所區域內之每人每日平均接觸人
數大於零。 
(13)：每日醫療廢棄物產生量必大於零。 
(14)：規劃之醫療院所總人員數必須大於零。 
(15)：感染性疾病患者每人每日所產生之醫療
廢棄物基本量必須大於零。 
(16) (17)：決策變數為 0 或 1 的整數。 
 
依據上述之醫療廢棄物處理管理模式，本研究
可將各步驟不同作業階段模式，依序分為兩階
段的方式進行解析，如圖 2 所示。 
1.醫療廢棄物運送成本
2.醫療廢棄物產生量
醫療廢棄物
總運送作業
成本
醫療廢棄物處理
規劃模組
最低
醫療廢棄物處理
物流作業成本
1.醫療廢棄物儲存資訊
2.醫療廢棄物處理作業資訊
3.感染症擴散率
4.模糊資訊
醫療廢棄物運送
規劃模組
1.總處理成本
2.處理人員模糊
危險加給成本
求
解
第
一
階
段
求
解
第
二
階
段
封閉型迴路
是否符合
終止條件
3.醫療廢棄物產
生量
 
圖 2 醫療廢棄物處理決策模式兩階段求解流
程圖 
 
四、模擬實驗與績效分析 
主要的目的是評估本研究所提出之模糊
非線性規劃醫療廢棄物處理決策模式之演算
績效。模擬實驗之進行方式，將比較目前現行
處理決策方式(對照組)與本研究所提出之模
糊非線性規劃醫療廢棄物處理決策模式(實驗
組)，所求的之總成本是否有明顯改善績效，
接著比較醫療廢棄物處理決策模式之演算法
在各控制因子變動下對主績效指標是否有顯
著影響。本研究將實驗因子分為三個，其相關
說明如下所述： 
因子一：此因子為處理人員數目多寡，分為兩
4 
BAI2009  
(2009 International Conference on Business and 
Information) 
Kuala Lumpur, Malaysia (06-08  July, 2009) 
 
Proceedings of Business And Information 
http://bai2009.org 
Volume 6, Issue 1, 2009 ISSN: 1729-9322 
Published by Academy of Taiwan Information Systems Research 
for the performance of the individual activities and minimum as well as maximum 
time lags between the different activities may be given. Bouleimen and Lecocq (2003) 
used a new simulated annealing in multiple mode versions. Artigues et al. (2003) 
provided a rescheduling algorithm for the insertion of an unexpected in a dynamic 
context. Brucker and Knust (2003) presented a destructive lower bound for the 
multi-mode RCPSP with minimal and maximal time-lags. Carlier et al. (2003) 
proposed efficient methods for RCPSP based on makespan lower bounds, which 
linearly depend on the processing times of the activities. Valls et al. (2003) presented 
a new meta-heuristic algorithm. Kim et al. (2003) used a hybrid genetic algorithm 
with fuzzy control for RCPSP. Fleszar et al. (2004) implemented a heuristic based on 
a variable neighborhood search. Kim et al. (2005) proposed a hybrid genetic 
algorithm with fuzzy logic controller. AL-Fawzan et al. (2005) introduced the concept 
of schedule robustness, a bi-objective resource-constrained project scheduling model 
and developed a tabu search algorithm for this problem. Debels et al. (2006) proposed 
a new meta-heuristic with hybrid scatter search/electromagnetism. Tseng and Chen 
(2006) proposed a hybrid metaheuristic method. Jirachia and Kim (2007) presented a 
priority rule-based heuristic for the multi-mode RCPSP with the splitting of activities 
around unavailable resources allowed. Valls et al. (2008) proposed a hybrid genetic 
algorithm for RCPSP. 
    In many real construction projects, contractors are encouraged to complete the 
job earlier than the due date with bonus. On the contrary contractors will face the 
delay penalty when the project is finished with tardiness. The project activities need 
multiple type of manpower, and have different duration based on manpower resource 
mode which have different amount of manpower. The construction manpower comes 
from a resource company, the available quantity is constrained, and the cost is charged 
only when the manpower is used, i.e. the manpower cost depends on the type, amount 
and used period. In this paper we consider that the objective is to determine the 
scheduling and the manpower allocation so that the total costs, including manpower 
cost, earlier bonus and delay penalty, are minimized.   
 
PROBLEM STATEMENT 
A construction project is consisted of  activities linked with precedence 
constraints. The precedence relations of activities are shown by an activity on node 
network that has  nodes. Nodes 0 and
N
2N 1N , start ant finish nodes respectively, 
are dummies. Let A  be the set of activities. These activities require a given amount 
of manpower resources to be performed and the resources have a multi-mode, 
multi-type and limited capacity. Activity  may be performed in any one of the 
resource modes
i
iMm ,...,1 . Each job, once initiated in a specific mode, must be 
finished without changing mode. Each activity i  in mode  has a fixed 
duration . There are 
m
imD K  types of the renewable manpower resources, where 
resource  is available in quantity  per period. Processing activity  in mode 
 requires ,
imkr kR i
m imkr Kk  , manpower resources per period. The unit cost of each 
resource  is , , which is incurred only  is used. A constant penalty 
cost  for each delay unit of time from a contract date 
k kC Kk imkr
PC T  is incurred. On the 
contrary, if the construction project completed time is earlier than due date, a constant 
bonus B  for each unit time can be earned. The problem is to find the optimal 
scheduling and the manpower allocation  in each activity, such that the 
precedence relations of activities and the available manpower are satisfied. The 
ikmr
might be produced by genetic operations. The chromosome may need to be modified 
to ensure that project scheduling is feasible. In general genetic operation, 
chromosomes are randomly selected from the population to perform either crossover 
or mutation. The offspring produced by a genetic operation may represent an 
infeasible schedule due to precedence constraints. In this problem, the possible 
solutions space of random chromosomes will have  

N
i
iMN
1
! types, including 
feasible and infeasible types.  
 
3.1 Representation and Fitness Function 
    We propose a dual gene to represent the chromosomes which consists of a 
 matrix. The chromosome can be shown as follows. N2
I
N
I
i
I
I
N
II
,...,m,...,m m
,v,...,v,...v
IM
IAL
i
1
..... 
)( 
 )( 
(I)Chromosome 1  
where  is activity list,  is the activity number of priority , is 
resource mode of activities  and  is the mode of resources used for activity 
, and two genes( , )are tied together.  
)(IAL I
i
v i )(IM
I
i
v I
i
m
I
i
v I
i
v I
i
m
    For each chromosome I  the fitness function, , is shown as equation (1). 
Before can be computed, the finish time of project have to be known, i.e. the 
value of depends on the project scheduling and resource mode used for each 
activity in chromosome
)(ICT
)(ICT
(ICT )
I . To compute a project scheduling from a chromosome I , 
two generations are considered. They are serial schedule generation scheme (SSS) and 
parallel schedule generation scheme (PSS) (Kolish 1996). In SSS generation 
procedure, in each iteration one activity from activity list is selected and scheduled at 
as its earliest starting time as possible, and has to satisfy the precedence and resource 
constraints. For PSS in each procedure a set of activity is scheduled. In this problem 
chromosome represents the priority of activity and the priority meets the requirement 
of precedence. Therefore we adopted the SSS method.  
 
3.2 Initialization 
    Traditionally, in a GA the initial population is generated randomly. In this 
problem, the chromosome of populations is generated by randomly allocate the 
integer genes from 0 to . However, chromosomes generated randomly are not 
guaranteed feasible due to the precedence relation of activities. The randomly 
allocated genes in chromosome have to be checked and reorder to ensure the solution 
is feasible. 
1N
In this paper, we propose an initial population generation method which can 
generate the feasible schedule with no precedence violation. Let the size of population 
be p , the pairs of immediate precedence j  for activity i be , the total number 
of  be and the checking priority for be denoted . The 
schedule priority of activity
),( ijP
),( ijP q )i,( jP nijP ),(
j and  is and  individually. The procedure of 
generating initial population can be shown as follows. 
i jp ip
 
AL 2 1 3 8 6 7 4 5 9PA1 M 2 3 1 2 2 2 3 1 3
           
AL 4 8 3 9 5 1 2 7 6PA2 M 3 1 2 3 3 2 2 3 1
           
AL 1 2 3 8 6 4 9 5 7CH1 M 2 2 1 2 2 2 3 3 3
           
AL 8 4 3 9 5 2 1 6 7CH2 M 2 3 2 3 3 2 3 2 2
 
Figure 1. An example of crossover operation 
 
3.4 Mutation 
Mutation operator in GA is used to avoid convergence to local optimum and to 
reintroduce new combination of genes in the population. By mutating a chromosome, 
the sequence of genes will be slightly changed. Mainly three different mutation 
methods, SWAP, POSITION and SHIFT are used in the literature for chromosome 
encoding. In this paper, we apply SHIT mutation operator, due to this method 
outperforms the other two methods (see RUIZ et al. 2006). The SHIFT mutation is to 
pick position X  randomly and relocated to another randomly picked positionY . 
Here only the resource modes for activities of these two positions are changed by 
random mode. An example of mutation operation results are illustrated in Figure 2. 
 
AL 2 1 3 8 6 7 4 5 9PA1 M 2 3 1 2 2 2 3 1 3
           
AL 2 1 3 8 6 7 4 5 9CH1 M 2 3 2 2 2 2 1 1 3
 
Figure 2. An example of mutation operation 
 
3.5 Selection 
In order to keep the better chromosomes, Roulette Wheel Selection method is 
usually used. In general GA crossover operation, parents are selected according to 
their fitness. The better the chromosomes are, the more chances to be selected they 
have. The size of the selection section in the roulette wheel is proportional to the 
value of the fitness function of every chromosome. If the fitness value is the better 
then the selection probability is the larger. 
In this paper, several variants of the selection operator have been considered, see, 
e.g. Michalewicz (1995) and Hartmann (2001). The main selection operators include 
ranking method, proportional selection and tournament selection. Based on the 
computational results, the ranking method is the most adopted by authors. The 
ranking method is stated as follows. After computing the fitness of each child 
individual, the children are added to the current population, creating a double size of 
temporary population. Then the ranking method is applied to sort the fitness and to 
reduce the population to its original former size. This method will lead the same 
Table 1. Comparison between GAMA and GAMB solutions for total cost 
GAMA GAMB Test Job Mode K 
Mean Std. Mean Std 
Ave. Cost 
improved (%) 
valuep 
1  10 2 2  35.84 0 35.84 0 0 0.5000 
2    4  103.32 0 103.32 0 0 0.5000 
3    6  188.20 0 188.20 0 0 0.5000 
4  10 3 2  38.54 0 38.54 0 0 0.5000 
5    4  90.74 0 90.74 0 0 0.5000 
6    6  173.98 0 173.98 0 0 0.5000 
7  20 2 2  70.76 0.56 70.99 0.52 0.32 0.0522 
8    4  202.64 1.09 203.31 1.60 0.33   0.0302* 
9    6  355.24 2.39 355.32 2.82 0.02 0.4564  
10  20 3 2  71.44 0.48 71.46 0.60 0.02 0.4436 
11    4  202.12 1.80 203.69 2.85 0.77 0.1501 
12    6  335.08 3.14 336.04 3.30 0.14 0.2902 
13  30 2 2  151.20 2.56 152.50 3.03 0.20 0.0361 
14    4  422.11 5.78 426.44 5.27 1.02 0.0012* 
15    6  704.34 10.16 712.21 11.10 1.11 0.0021* 
16  30 3 2  150.72 2.15 152.34 1.91 1.06 0.0006* 
17    4  390.87 5.24 393.69 5.58 0.72 0.0218* 
18    6  685.43 10.16 689.72 11.01 0.62 0.0585 
 
 
   Table 2. Comparison between GAMA and GAMB solutions for CPU time  
GAMA GAMB Test Job Mode K 
Mean Std. Mean Std 
Ave. CPU 
improved (%) 
valuep 
1  10 2 2  9.32 0.21 11.06 0.33 15.73 0.0000* 
2    4  10.63 0.17 12.06 0.13 11.86 0.0000* 
3    6  10.26 0.12 12.03 0.14 14.71 0.0000* 
4  10 3 2  9.33 0.31 11.06 0.33 15.64 0.0000* 
5    4  10.11 0.18 11.59 0.22 12.77 0.0000* 
6    6  10.34 0.22 11.95 0.30 11.08 0.0000* 
7  20 2 2  17.33 1.02 20.09 1.37 13.73 0.0000* 
8    4  19.06 1.40 22.08 1.50 13.68 0.0000* 
9    6  20.96 7.53 23.61 1.79 11.22 0.0000* 
10  20 3 2  17.53 1.04 22.08 1.50 13.68 0.0000* 
11    4  19.65 0.93 22.56 0.78 12.89 0.0000* 
12    6  20.11 1.05 22.74 1.35 11.56 0.0000* 
13  30 2 2  41.50 2.61 44.40 4.00 6.53 0.0004* 
14    4  49.29 4.02 53.23 5.34 7.40 0.0006* 
15    6  45.47 3.33 51.75 4.39 12.13 0.0000* 
16  30 3 2  44.13 2.84 47.61 4.17 7.32 0.0001* 
17    4  46.95 4.46 52.03 4.28 9.76 0.0000* 
18    6  47.48 4.01 52.93 3.71 10.31 0.0000* 
 
   
 
