maintenance work for software industry, and become 
the basis for future academic research. 
英文關鍵詞： software bug reports, duplication detection, summary 
extraction, text mining, software static features 
 
 2
BTS 採用開放式的回傳策略，讓軟體使用
者可以將所遇到的異常狀況迅速的回傳給
軟體開發者。然而在這種開放式的回傳策
略中，由於回傳的人不一定具有足夠的專
業背景，報告流程也不容易進行報告內容
品質管控，因此有可能會讓不同使用者用
類似的文字敘述報告了相同的異常狀況，
造成重複的錯誤報告出現。例如在 2007
年，Runeson 等人便指出在一項 Sony 
Ericsson 公司的內部調查中發現，至少有
10%以上的錯誤報告是重複報告[4]。而在
自由軟體專案中，這種情況更為嚴重，例
如在 2005 年，Anvik 等人就指出在 Eclipse
的 18,165 份錯誤報告中，有將近 20%的錯
誤報告是重複的，甚至在 Firefox 的 2,013
份錯誤報告中，更高達 30%的錯誤報告是
重複的[1]。由於這些重複錯誤報告所佔的
比例並不低，因此在近幾年中便有許多產
學界的研究人員注意到這個問題的嚴重性
[2,3,4,6,7,8]。 
由於存在不少的重複錯誤報告，這些
重複錯誤報告會造成許多人工檢視上的成
本耗費。例如在 Runeson 等人的報告中便
指出，平均一份錯誤報告所需要人工檢視
的時間是 30 分鐘，如果能有自動化的機制
來協助分析人員的檢視，將可大為減少人
工分析檢視上的成本[4]。因此，他們使用
基本的 NLP 技術來分析錯誤報告的內
容，可將約 40%的重複錯誤報告辨識出
來。另外在 2008 年，Wang 等人除了使用
NLP 的技術以外，再加上了軟體執行資訊
來加強辨識效果[8]。在他們對 Firefox 軟
體專案的實驗中，如果加上了軟體執行資
訊，會比單純使用 NLP 技術再提高約 20%
的辨識率。如果這些重複錯誤報告能夠被
自動化辨識出來，將可以省下許多人工分
析檢視成本。 
基於對近幾年在重複錯誤報告研究上
的文獻回顧，本研究計畫整合文字探勘技
術、語意探勘技術、以及自然語言處理技
術，利用在軟體發展過程中蘊藏豐富的軟
體靜態特徵資訊來分析重複錯誤報告，建
構有效的重複性偵測模型，並且討論除錯
資訊的摘要整合技術，以發展更進階的錯
誤報告管理環境，協助軟體發展者迅速掌
握重要的除錯資訊，藉以有效降低維護軟
體品質的除錯與測試成本。在本年度的研
究計畫中，我們分別建構了兩個不同的偵
測模型，並討論如何萃取軟體中的主題語
意資訊。這些研究成果成為我們未來在此
一研究方向上的基礎。 
 
三、結果與討論 
 
在本年度的研究中，我們建構了兩個
重複軟體錯誤報告的偵測模型。首先我們
基於語意空間的擴展概念，以及語意聚焦
的概念，分別利用 N-gram 的技術以及群
集收縮（Cluster Shrinkage）的技術來加強
重複報告的偵測效能。如圖 1 所示，歷史
的軟體錯誤報告先依照其是否重複的特性
予以分成不同的群集，由於在 BTS 的管理
資料庫中，結案的歷史錯誤報告已經經由
許多管理人員判定其重複性，因此我們依
據這些判定來建構其群集。然後這些歷史
錯誤報告經由 N-gram 的處理，擴展當中
更多具有重複性的特徵。圖 2 即為軟體專
案 SVN 編號 330 的錯誤報告，經由 NLP
處理以及 N-gram 處理後的一些內容。 
 
圖 1、利用 N-Gram 與 Cluster Shrinkage 的技術進
行軟體錯誤報告的重複性偵測。 
SVN #330 WHO: sussman | BUG_WHEN: 2001-03-19 
10:41:03 | Ben rewrote the fs commit editor 
so that replace\_*() would call svn_fs_copy() 
ifthe base_rev argument was unexpected.  
This should result in a transaction being built 
that properly mirrors the mixed-revision … 
NLP result deal edit ... 
Char-based 
n-gram 
mixed- ixed-r xed-re ... 
Word-based 
n-gram 
mirrorsthemixed-revision 
mixedrevisionworking 
revisionworkingcopy ... 
圖 2、軟體專案 SVN 編號 330 的錯誤報告經由
NLP 及 N-Gram 處理後的內容。 
 4
[4]相關研究的方式，每個測試報告測完以
後會加入訓練集當中再訓練一次。由於會
強化訓練資料的效度，因此普遍會比前面
的實驗得到較好的偵測結果，圖 6是BM25
改進 Hiew [3]與 Runeson 等人[4]相關研究
後的偵測成果。從圖中可以看出，BM25
的權重方式能夠有效的改善偵測效能。 
在摘要整合部分，我們首先進行軟體
資訊主題萃取的討論，因此我們使用 LDA
模型來萃取軟體中的主題資訊，如圖 7 所
示，我們目前先在 Android 軟體上來進行
相關的測試，在初步的實驗結果中，也驗
證了其成效。透過對於 LDA 在軟體資訊
探勘上的加強，我們在分類結果上得到不
錯的改善。圖 8 是 LDA 在處理過程中的
一個範例。我們收集了 42 個軟體應用程式
後，進行分類實驗。實驗中可以得到最好
的 precision 為 0.89 以及 recall 為 0.98 的結
果。然而由於時程的關係，摘要整合模型
的整體建構，目前仍在進行。 
 
四、計畫成果自評部份 
本年度的計畫中，我們基於錯誤報告
中的詞語特性，提出相關的軟體錯誤報告
重複性偵測模型，來判斷新進錯誤報告是
否與歷史錯誤報告重複。經由實驗結果顯
示，所提出之重複性偵測模型在一些軟體
專案上有不錯的表現。目前已經先整理一
部分相關成果發表在 The 2012 Conference 
on Technologies and Applications of 
Artificial Intelligence (TAAI 2012)的國際
論文議程上[13]，而有關主題語意資訊萃
取 的 研 究 成 果 ， 則 已 經 發 表 在 the 
International MultiConference of Engineers 
and Computer Scientists 2012 (IMECS 2012) 
上[12]，之後會繼續整理其他成果進行發
表。 然而可惜的是，受限於計畫核定的時
間，因此摘要整合的總體模型並未完全建
構，未來我們仍會繼續這項研究目標，完
成摘要整合模型的建立。 
總體而言，本研究在軟體錯誤報告的
Android App
Decompilation
Android 
Apps CodePreprocessing
LDA
Computation
Topic
Generation
Software
Clustering
…
…
…
App
Clusters
Android
Domain KB
 
圖 7、軟體主題語意特徵萃取模型。 
 
(a) SVN 
 
(b) Apache 
 
(c) ArgoUML 
圖 6、用 BM25 來改進 Hiew 與 Runeson 等人之偵
測模型對三個實際軟體專案的效能測試。 
 
App1: view music music music music
music player player player player…
App2: set music music music music …
App3: photo photo photo photo photo
camera camera camera camera …
App4: game game game game game
game game game game game
ball bb…
Java Code Corpus
LDA
Computation
Topic-Software distribution
App1:
Topic2  0.5
Topic4  0.4
…
App2:
Topic4  0.5
Topic2  0.4
…
App3:
Topic1 0.99
Topic3 0.00
…
App4:
Topic3 0.99
Topic1 0.00
…
Word-Topic distribution
Topic1:
photo 0.11
camera  0.09
…
Topic2:
music 0.16
player 0.14
…
Topic3:
game 0.25
score  0.10
…
Topic4:
music 0.26
song 0.17
…
 
圖 8、軟體主題語意特徵萃取的範例。 
表 Y04 
行政院國家科學委員會補助國內專家學者出席國際學術會議報告 
                                                        101 年 03 月 28 日 
報告人姓名 楊正仁 
服務機構 
及職稱 
元智大學資訊工程系助理教授 
     時間 
會議 
     地點 
101年 3月 14 日至 101年 3
月 16日 
中國，香港 
本會核定 
補助文號 
NSC 100-2221-E-155-060 - 
會議 
名稱 
(中文) 2012 IAENG 軟體工程國際會議 
(英文) The 2012 IAENG International Conference on Software Engineering 
(IAENG ICSE’12) 
發表 
論文 
題目 
(中文) LACTA: 一個針對 Android 應用程式原生程式碼的強化軟體自動分
類 
(英文) LACTA: An Enhanced Automatic Software Categorization on the Native 
Code of Android Applications 
報告內容： 
一、參加會議經過 
 
 IAENG（International Association of Engineers）近幾年舉辦了許多大型的國際會議，
尤其是工程暨電腦科學綜合國際研討會（The International MultiConference of Engineers 
and Computer Scientists）更是每年的一大盛會。今年感謝國科會及學校研發處的經費補
助，本人參加在香港九龍的帝苑酒店舉辦的 2012工程暨電腦科學綜合國際研討會（The 
2012 International MultiConference of Engineers and Computer Scientists）。今年這個會議總
共有 892 篇論文投稿，而其中有 487 篇論文被接受，論文接受率為 54.6%，維持在與往
年差不多的水準。在這個綜合國際會議當中，我們發表了一篇論文在 2012 IAENG 軟體
工程國際會議（The 2012 IAENG International Conference on Software Engineering, IAENG 
ICSE’12）中，與其他的軟體工程界的學者進行交流。 
 本人於 3 月 14 日早上搭乘中華航空的班機抵達香港之後，即在當日下午到會議的
會場報到領取相關論文資訊及論文會議集參加會議，與來自世界各地的學者專家交換研
究心得。本次所報告的論文 “LACTA: An Enhanced Automatic Software Categorization on 
the Native Code of Android Applications”，被安排報告的議程是在 15日上午的 IAENG 
International Conference on Software Engineering (IAENG ICSE’12)的 Session II。在這次
ICSE’12的會議中，所討論的軟體工程研究主題如下： 
 Software requirements engineering 
 Software architecture design 
 Software reusable components 
 Software testing and analysis 
 Software processes and workflows 
 Software safety, security and reliability 
 Software maintenance 
 Reverse engineering 
 Grid software 
 Software economics 
 Distribution systems 
附
件
三 
表 Y04 
以及會議海報等資訊。 
 
五、其他 
 
 在此感謝國科會、學校研發處的經費補助能觀摩此次會進行的情況，並與其他學者
進行交流。以下是本人參與會議的相關記錄。 
 
 
     
 
圖一 本人在會場之留影 
 
 
 
圖二 本人論文的發表證書 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
100年度專題研究計畫研究成果彙整表 
計畫主持人：楊正仁 計畫編號：100-2221-E-155-060- 
計畫名稱：重複軟體錯誤報告之偵測與摘要整合 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 4 4 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 2 2 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
