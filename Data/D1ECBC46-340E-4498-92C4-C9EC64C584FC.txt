1. Introduction 
Microarrays are widely adopted for simultaneously 
investigating gene expression in a number of diseases 
such as adenocarcinoma, breast cancer, colon cancer, 
gastric cancer, hepatoma, lymphoma, and etc. [1, 2, 3]. 
A microarray is typically a glass or polymer slide, onto 
which DNA molecules are attached at fixed locations 
called spots. There may be up to many thousands of 
spots on an array, each containing tens of millions of 
identical DNA molecules or fragments of identical 
molecules of lengths from tens to hundreds of 
nucleotides [4]. The resolution of a microarray image 
is usually 3000 pixels per inch or 1000 pixels per 
centimeter. Given such a high resolution of microarray 
image, how to make the spot computations fast, 
accurate, and repeatable is one of the central issues of 
developing software for microarray image pattern 
analysis. Conventional software such as Array-Pro 
Analyzer 3.0 [12] and GenePix Pro 4.0 [13] are either 
expensive or requesting many user-specified 
parameters such that the work is infeasible or is not 
repeatable. This paper depicts a paradigm of 
microarray image analysis as shown in Figure 1. We 
attempt to fast and accurately compute the repeatable 
statistics such as spot features, associated with the 
number of spot pixels and background pixels, standard 
deviations, and etc. for clustering and classification, 
and gene discovery. 
 
In this report, a set of microarray images were 
acquired by a sequence of biological experiments which 
were scanned via a high resolution scanner. We have 
developed a C program, tiff2rgb.c, to extract the Cy5 
and Cy3 signals based on a 16-bit RGB tiff image as 
shown in Figure 1X. For each spot corresponding to a 
gene, the ratio of Cy3 and Cy5 fluorescent signal 
intensities was obtained and which may be normalized 
based on piecewise linear regression such as lowess 
method. In this study, we computed from 55 microarray 
images to get an NM ×  genematrix, A , with 
55=N  patients and 13574=M  effected genes in 
each microarray. We start with our gene discovery from 
a genematrix NMRA ×∈ , 13574=M , 55=N  
including 291 =N  patients of hepatitis B virus (HBV),  
212 =N  patients of hepatitis C virus (HCV), 1 patient 
clinically diagnosed to be infected with HCV as well as 
HBV, and 4 patients were neither HCV nor HBV 
infected. Simple software was developed to solve the 
following problems: (i) Detect differentially expressed 
genes and (ii) Select a subset of genes which best 
distinguishes HBV patients from HCV ones.  
A cDNA microarray [3] made of glass slide is 
acquired via a sequence of biological experiments and is 
scanned by a high resolution color scanner like GenePix 
4000 to get a color image, each pixel is represented by 
two 16-bit signals, corresponding to Cy3 and Cy5 
channels. Our cDNA microarray image consists of 
119156×  genes which is further divided into 60 
effective blocks. Figure 2(a) shows a typical block of 
270 genes with an ideal spot enclosed by a circular 
region of diameter mμ80 , each pixel has size mμ15 , 
the spacing between horizontal spots and vertical spots 
are mμ150  and mμ161.145 , respectively. The 
remaining of this paper is to describe, as characterized 
in Figure 1, step by step, how to get the spot features 
from a microarray image and how to select a set of 
genes for clustering and classification. The genes in our 
study corresponding to the brighter spots are regarded 
as more expressed ones. We demonstrate the 
intermediate results by images and data plots. 
 
 
 
Figure 1. A paradigm of microarray image pattern 
analysis.  
 
       
         (a)                     (b)                   (c) 
Figure 1X. (a) Block of a microarray image, 
  (b) corresponding Cy5 image, (c) Cy3 image. 
4. M-A Plot of Gene 
Expression Levels 
A microarray image in our experiment, hybridized 
by normal (dyed with Cy5 fluorescence) and tumor 
(dyed with Cy3 fluorescence) tissues, were acquired via 
a sequence of biological experiments. An image of size 
20202350×  containing 18564119156 =×  
potential spots was obtained after semi-manual 
operations. We have demonstrated that we can obtain 
18564 pairs of spot features ( ){ }, 1 18564j jG R j≤ ≤ corresponding to the target 
genes under studies. Microarray analysts attempt to 
determine which genes are differentially expressed by 
analyzing the plot of 
vectors ( ){ }, 1 18564j jG R j≤ ≤ . Since some 
unavoidable noise of biological unknowns or 
phenomena, the experiment designers usually put some 
control spots such as plant genes to reduce the 
difference crossing microarrays and leave some spots 
blank to normalize the intensity levels of each spot. 
Each of our microarray images contains only 13574 
effected genes, the remaining 4990 spots either served 
as "control" or "unused". An M-A plot [4][8] of these 
spot features is given in Figure 3, where the coordinates 
on x-axis (A values) and y-axis (M values) are defined 
as 
 
( ) ( )2 21 log log2j j jA G R⎡ ⎤= +⎣ ⎦  
( ) ( )2 21 log log2j j jM G R⎡ ⎤= −⎣ ⎦  
 
The differentially expressed genes are defined as those 
features in the M-A plot that are far above or below the 
horizontal line corresponding to 0M = . Due to the 
uncertainty and distortion of experiments, a variety of 
statistical approaches have been proposed to make the 
interpretations more practical, whereas no universally 
best method has come out yet [3][4]. We apply a simple 
linear least squares fit to adjust the ratio of Cy3/Cy5 
such that the shape of normalized M-A plot tends to be 
horizontal. Figure 4 shows a linearly normalized M-A 
plot of gene expression. Other normalization methods 
can be applied to better fitting the design issue [10].  
4 6 8 10 12 14 16
−8
−6
−4
−2
0
2
4
6
8
MA−plot for s785.txt
 
 
Figure 3. M-A Plot of 13574 Spots. 
 
5. Seeking for Differentially 
Expressed Genes 
Let A[1:Gn, 1:N] with Gn=13574, N=55, be the 
genematrix with each entry being the normalized  
Cy3/Cy5, where the tumor tissues dyed with the 
fluorescence light of wavelength 532 nanometers and 
the normal tissues dyed with the fluorescence light of 
wavelength 635 nanometers. A gene  is said to be up 
regulated if  
[ ]( )2log , 1A k j T for j N≥ ≤ ≤    (4) 
and down regulated if  
[ ]( )2log , 1A k j T for j N≥ − ≤ ≤   (5) 
 
4 6 8 10 12 14 16
−8
−6
−4
−2
0
2
4
6
8
Normalized MA−plot for s785.txt
 
 
Figure 4. Normalized M-A Plot of 13574 Spot 
Features. 
 
(3)
7. Discussion and Conclusion 
We have proposed a near automatic microarray image 
processing system which takes less than 10 minutes 
running on a Linux based system with Pentium 4 
3.00GHz CPU to compute spot features and M-A plot 
for a pair of Cy3 and Cy5 cDNA microarray images of 
size 2350 2020×  containing 156 119×  spots with 
most expressed genes consisting of 40 ~ 120  pixels 
out of 225 pixels inside a grid. Gene expression was 
normalized based on a linear least squares fit on an M-A 
plot and is used for classification and clustering. In our 
study, cDNA microarray images from patients of 
Hepatoma are provided by ARCNTU [11]. We have 
applied our simple software to seek 11 differentially 
expressions with 3-fold of log ratio. By the usage of 
Matlab tools, we also demonstrate that the 26 most 
discriminative genes can distinguish patients with HBV 
from HCV fairly well. If the locations of control genes 
or spots can be further re-arranged or specifically 
designed, an automatic system to report statistics for 
spot features and their associated statistics will be 
available which merits further studies. The genes 
discovered by our simple software need biological 
verifications before further usages such as gene therapy 
or drug design, a set of discriminative genes for 
separating the patients of vascular invasion from non-
vascular invasive ones is also illustrated in Figure 6. A 
better visualization for 2d dendrogram also merits 
further investigation. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
References 
[1] A.A. Alizadeh et al., "Distinct types of diffuse large 
B-cell lymphoma identified by gene expression 
profiling", Nature, vol. 403, 503-511, 2000.  
[2]  U. Alon et al., "Broad Patterns of Gene Expression 
Revealed by Clustering Analysis of Tumor and 
Normal Colon Tissues Probed by Oligonucleotide 
Arrays", Proceedings of the National Academy of 
Sciences of the United States of America, vol. 96, 
no. 12, 6475-6750, 1999.  
[3] A. Brazma and etc., "Minimum Information about 
Microarray Experiment (MIAME) - toward 
Standards for Micorarray Data", Nature Genetics, 
vol. 29, 365-371, 2001.  
[4] H.C. Causton, J. Quackenbush, and A. Brazma, 
Microarray Gene Expression Analysis, Blackwell 
Publishing, 2003.  
[5] H.Y. Chuang, H. Liu, S. Brown, C. McMunn-
Coffran, C.Y. Kao, D.F. Hsu, Identifying Significant 
Genes from Microarray Data, Proceedings of the 4th 
IEEE Symposium on Bioinformatics and 
Bioengineering, BIBE2004, 358-365, May 
19[EQUATION]21, 2004.  
[6] R.C. Gonzalez and R.E. Woods, Digital Image 
Processing, Prentice-Hall, Inc., 2002.  
[7] N. Otsu. "A Threshold Selection Method from Gray-
Level Histograms", IEEE Trans. on Systems, Man, 
and Cybernetics, vol. SMC-9, 62-66, 1979.  
[8] D. Stekel, Microarray Bioinformatics, Cambridge 
University Press, 2003.  
[9] M.Y. Tsai, Gene Expression Computation on 
Microarray Image Data, M.S. Thesis, National Tsing 
Hua University, Taiwan, January 2006.  
[10] Y.H. Yang et al., "Normalization for cDNA 
microarray data: a robust composite method 
addressing single and multiple slide systematic 
variation", Nucleic Acids Research, Vol. 30, No. 4, 
e15, 2002.  
[11] http://www.angio.bioinfo.ntu.edu.tw  
 
[12] http://www.mediacy.com/arraypro.htm  
 
[13] http://www.axon.com/gn_GenePixSoftware.html  
 
[14] http://www.nslij-genetics.org/microarrray 
 
[15] T.Y. Wang, A Study on Analyzing Microarray  
Data Using SVM and SOM, M.S. thesis, National 
Tsing Hua University, Hsinchu, Taiwan, 2007. 
 
 
 
    A microarray chip is typically a glass or polymer 
slide. There are thousands of spots on it and each 
contains tens of millions of identical DNA molecules 
or fragments of identical molecules of lengths from 
tens to hundreds of nucleotides. We use green and red 
light to illuminate the slide and scan it by a high 
resolution color scanner to acquire the cy3 (green) and 
cy5 (red) microarray images. 
     Gene expression computation [2] is the most 
important part of the whole microarray image pattern 
analysis. The results of analysis are highly dependent 
on the accuracy of computation. The resolution of a 
microarray image is usually 3000 pixels per inch or 
1000 pixels per centimeter. The large dimensions of 
images make the gene expression computation a tough 
task. On the other hand, there usually exists noise on 
the image due to manually biological operations and 
we need to adopt some preprocess before further 
analysis. 
     Although there are several commercial software 
developed for computing and analyzing gene 
expression, they usually require complex and heavy 
manual operations such that the computation is not 
repeatable, slow, and expensive. The purpose of this 
paper is to provide three methods to compute the gene 
expression fast, accurately and repeatedly.  
     A flowchart for microarray array image pattern 
analysis is given in Figure 1. Section 2 explains how to 
do grid fitting. Section 3 introduces three methods for 
gene expression computation. Section 4 shows 
experimental results. Section 5 gives the conclusion. 
 
 
 
Figure 1. A paradigm of microarray image pattern 
analysis. 
2. Gridding 
 
     The purpose of gridding or addressing is to locate 
the spots. The brightness level of each spot represents 
expression level of a gene. Given the top left corner of 
a region of interest associated with the horizontal and 
vertical spacing, and the spot size. We can compute the 
gene expression by image segmentation algorithms. 
Figure 2 is part of results for gridding on our tested 
images with vertical spacing 150 um and 145.161 um, 
where the pixel size is 10 um. During the microarray 
experiments, it might produce some noises and need to 
do some rotation or smoothing to remove them [3] 
before a local segmentation begins. 
     
(a)             (b) 
Figure 2. (a) The original image (b) The result image 
of Gridding. 
 
3. Gene expression computation 
 
     The most important part in the microarray 
processing is the gene expression computation. Here 
we introduce three methods to compute the gene 
expression. 
 
3.1. A simple thresholding algorithm 
 
     A simple thresholding algorithm, proposed by Otsu 
[4], determines a threshold to separate the pixels of a 
grid into foreground and background. The optimal 
threshold is calculated by the discriminant criterion 
which is to maximize the separability of the classes in 
gray levels. 
    When a microarray image is acquired, we do grid 
fitting and find the maximum and minimum gray level 
of each grid, denoted as minL and maxL . Then compute 
and normalize the gray level histogram as a probability 
distribution by the following equation. 
 1  , 0      /
1
∑
=
=≥=
L
i
iiii ppNnp               (1) 
where in  is the number of pixels in gray level i and 
N  is the total number of pixels 
     We suppose that all pixels of each grid can be 
separated into two classes BC  and FC  (background and 
1 1 2
1 1 1
1 2
1 2
1 1
2 2
1 1 2 1
1 1
1 2
1 2
1 1
( ) ( ) ( )
  , ,              (15)
( ) ( )
( )( ) ( )( )
 and 
( ) ( )
n n n
i i i i i
i i i
n n
i i
i i
n n
i i
i i
n n
i i
x x x x x
n x x
x x x x
x x
β β β
α μ μ
β β
β μ β μ
σ σ
β β
= = =
= =
= =
= =
∑ ∑ ∑
= = =
∑ ∑
− −∑ ∑
= =
∑ ∑
% % %
% %
% %
     Repeat E-step and M-step until some convergence 
condition is achieved. Then the gene expression level 
is computed by the difference of μ1 and μ2. 
 12 μμ −=G                              (16) 
where 1μ is the mean of background cluster. 2μ  is the 
mean of foreground cluster. 
 
3.3. Iterated conditional modes (ICM) 
 
    The ICM algorithm was first proposed by Besag in 
1986 to find an optimal labeling x based on a given 
intensity image y [7]. It is a powerful MRF-based 
labeling algorithm for image segmentation [8] which 
usually uses a Markov random field (MRF) to capture 
contextual information. ICM algorithm iteratively 
updates the label of each pixel until a prescribed 
criterion is achieved.  
     We assume the observed image of M by N denoted 
by a random vector y, is from the original distribution 
x which is degraded with Gaussian noise. The 
posteriori distribution of x conditioned on y is a Gibbs 
distribution and it energy function U(x|y) are also 
defined as follows 
( | )
|
2
2
:21 1
( | ) /                                               (17)
( )1( | ) ln( ) ( , )
2 2
t
t
t
U x y
x y
MN ct x
x r t t r
t rx
f x y e Z
y
U x y J x x
μσ βσ
−
+= =
=
⎡ ⎤−⎢ ⎥= +∑ ∑⎢ ⎥⎣ ⎦
 
where J(a,b)= -1 if a=b , J(a,b)=0 if a≠b; c=2 for 1st-
order MRF and c=4 for 2nd-order MRF 
     Besag [9] showed by experiments that it was 
usually enough to take 6 complete scans or fewer to 
achieve a reasonable labeling. An ICM algorithm [7] 
[9] is listed below. 
ICM Algorithm 
(a) Initialize a labeling by applying MLE for each 
pixel 
(b) For t = 1 to MN 
0 0
0
  ( | , ) ( | , ) 
 for  all   and  .
t tt t tx g if f x g x y f x g x y
g A g A
∂ ∂← = > =
∈ ∈  
(c) Repeat (b) until “the energy achieves a local 
minimum” (6 scans here). 
(d) x is the required labeling. 
     We label all pixels of a grid as either foreground or 
background by using ICM algorithm and compute the 
gene expression by the same formula given in (10). 
 
4. Experimental results 
 
      We apply Otsu’s thresholding algorithm, GMM 
and ICM algorithm to compute the gene expression 
levels. The images we use are hepatoma microarray 
images acquired from National Taiwan University 
Hospital and the average height and width are 2300 
and 2200 pixels. Our experiments are running on a 
windows based system with Pentium4 3.00GHz CPU 
to compute gene expression and the computing time by 
Otsu , GMM and ICM algorithm are 4, 14 and 21 
seconds. On the other hand, the spacing between spot 
center on the microarray is 150 um and 145.161 um. 
This is usually ignored by other software which 
requests manual operations for segmentation. 
      From table 1 shows that the average Pearson’s 
correlation coefficients between our three methods and 
commercial software are all nearly over 95%. But the 
Concordance’s correlation coefficients are not very 
high due to the mean of each method is different. 
 
Table 1. The average Pearson’s and Concordance’s 
correlation coefficients of gene expression between 
Otsu, GMM, ICM and commercial software “ArrayPro 
Analyzer.” 
 
Pearson’s Concordance’sCorrelation 
coefficients Cy3 Cy5 Cy3 Cy5 
ArrayPro v.s. Otsu 0.9492 0.9586 0.8934 0.9101
ArrayPro v.s. GMM 0.9563 0.9624 0.8059 0.8203
ArrayPro v.s. ICM 0.9538 0.9612 0.9276 0.9384
Otsu v.s. GMM 0.9577 0.9608 0.6366 0.6633
Otsu v.s. ICM 0.9933 0.9940 0.9878 0.9894
GMM v.s. ICM 0.9721 0.9734 0.6957 0.7184
 
5. Conclusion and discussion 
 
Microarray technology is a new trend because its 
great benefits in the recent years. In this paper, we 
demonstrate how to do gridding and addressing on a 
microarray image. We realize the importance of 
computing gene expression. We propose three 
different methods: Otsu’s thresholding, GMM, and 
ICM algorithms to compute gene expression of 
microarray images and partially improve some 
Appendix 2: 微晶片影像資料分析的軟體研發 (2/3) 
Research  and Software Development for Microarray Image Data 
Analysis (2/3) 
 
 
計畫編號: NSC 95-2221-E-007-222 
執行期限: 95/08/01 – 96/7/31 
 
主持人: 陳朝欽     國立清華大學資訊工程學系 教授 
 
參與研究人員:   樊恩榮 、沈昌志  、王琮郁、李季穎 
 
 
 
 
 
Abstract 
 
當基因表現量從微晶片的掃瞄圖中被算
出後，我們先將這些表現量作一個前置處
理，縮小數值分佈的範圍以方便之後的運
算。接著由基因選取法選出重要的基因
後，我們再將這些選出來的基因以及處理
過的基因表現量用在支源向量機與自我組
織圖作分析，本篇報告將呈現微晶片資料
使用在這兩種分類法上的結果。 
 
 
 
 
 
 
1. Introduction 
 
     Researchers related to biology believe that genes 
can lead or control the diseases and if we find out the 
regular or important genes we may cure all kinds of 
diseases by fixing these genes in the future.  
 
 
Abstract 
 
After the gene expression is computed from the 
microarray image, the following important research is 
to analyze the gene expression. Because the range of 
the value of the gene expression is too huge for us to 
compute, we have to normalize the gene expression 
values first. Then we use smoothly clipped absolute 
deviation (SCAD) SVM and weighted punishment on 
overlap (WEPO) to screen the important genes. When 
these important genes (features) are found out, they are 
used in two classification methods, support vector 
machines (SVM) and self-organizing map (SOM).  
 
 
 
 
 
 
After gene expression is acquired from microarray 
images, the first thing we have to do is to screen the 
important. The gene selection methods used for our 
experiments are  smoothly clipped absolute deviation 
(SCAD) SVM [1] and weighted punishment on 
overlap (WEPO) [2].  
             
                  subject to ( ), 1i iy b+ ≥w x  , 1 i n≤ ≤       
(6)     
     This equation could be solved by Lagrangian 
optimization method which is given below. 
          ( )
1
1( , , ) , , 1
2
n
i i i
i
L b y bα α
=
⎡ ⎤= − + −⎣ ⎦∑w w w w x         
(7) 
     After differentiated by w  and b, we can reduce 
equation (7) to the following equation. 
maximize    ( )W α
1 1 1
1 ,
2
n n n
i i j i j i j
i i j
y yα αα
= = =
= −∑ ∑∑ x x  
           subject to 
1
0
n
i i
i
yα
=
=∑  , 0iα ≥ , 1 i n≤ ≤                 
(8) 
     We can find out the optimal  w  and b by the 
appropriate { }iα  and equation (9) and equation (10) 
* *
1
n
i i i
i
yα
=
=∑w x                           (9)                      
( ) ( )* *1 1* max , min ,
2
i iy i y ib =− =
+= − w x w x        (10) 
 
     For nonlinearly separable patterns, the hyperplane 
is defined as 
( )
1 1
, ( , ) 0
n n
i i i i i j
i i
y b y K bα
= =
+ = + =∑ ∑w x x x           (11) 
2
2
                         Linear 
( + k) , >0   Polynomial                     
( , )
exp     Radial basis function (RBF)  
2
tanh( +k)         Sigmoid                   
t
i j
t d
i j
i j i j
t
i j
K
β β
σ
β
⎛ ⎞= − −⎜ ⎟⎜ ⎟⎝ ⎠
x x
x x
x x x x
x x        
⎧⎪⎪⎪⎪⎨⎪⎪⎪⎪⎩
      (12) 
Then equation (8) will be rewritten as 
maximize   ( )
1 1 1
1 ( , )
2
n n n
i i j i j i j
i i j
W y y Kα α αα
= = =
= −∑ ∑∑ x x  
 subject to    
1
0
n
i i
i
yα
=
=∑   , 0iα ≥ , 1 i n≤ ≤           
(13) 
 
3.2. SOM 
 
     The SOM is an unsupervised learning system based 
on the concept of neural-network. It constructs a 
virtual map which learns from training data and then 
classifies other data. 
     We construct a 2-dimension map of size M M× . 
Each node in the map has the same dimension with the 
input vector. The map is trained by the following steps. 
 
Step 1 : Initialize each prototype vector { }(0)im  in 
the map of size M M× . 
 
Step 2 : Choose one vector x  from the training data 
randomly. Compute the Euclidean distance between x  
and all the prototype vectors. 
                   2|| ( ) ||,  0 ii ir t M= − ≤ ≤x m ,                    
(14) 
where t is the discrete time index. 
 
Step 3 : Find the best matched node for x by 
|| ( ) || min{|| ( ) ||}c c iir t t= − = −x m x m                 (15) 
where the winning vector is ( )mc t . 
 
Step 4 : The vectors of the winning node and its 
neighbors will be updated by the following equation. 
      
,( 1) ( ) ( ) ( )[ ( )]i i c i it t t h t tα+ = + −m m x m ,   i ( )cN t∈       
                                2
, 2
|| ||( ) exp
2 ( )
i c
c i
r rh t
tσ
⎛ ⎞− −= ⎜ ⎟⎝ ⎠
                      
(16) 
where ( )tα  and ( )tσ are decreasing functions. 
Step 5 : Iterate Step 2 to Step 4 several times to acquire 
the map which is more accurate than the initial one.   
After the map has been trained completely, for 
each test vector, we compute the Euclidean distance 
between this vector and each node with legal label in 
the map and search the winning node which has the 
minimum distance to this vector. Then this test vector 
will be assigned the same label with the winning node. 
If a test vector is assigned the same label with its 
original one, this test vector is classified correctly. 
Otherwise, it is treated as a missed hit. 
4. Databases for Experiments 
One of the datasets used in our experiments is 
HCC55 which is acquired from [5]. The gene 
expression is computed from the 55 microarray images 
which were acquired from National Taiwan University 
Hospital. Each microarray image was taken from one 
patient, so there are 55 patients, including 29 with 
hepatitis type B virus (HBV), 21 with hepatitis type C 
virus (HCV), 1 with both HBV and HCV, and 4 
without hepatitis. They all agreed to undergo surgical 
