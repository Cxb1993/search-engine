 Tuning timeProbe
4 Index 2
Access time
 
在行動計算環境中，廣播是一個有效的資料
散佈方法，因為廣播的成本並不會隨著接收
資料人數的增加而增加。在廣播環境下，降
低調校時間與查詢等待時間是目前大家追
求的目標[1]。廣播的資料傳送方式為伺服
器端在廣播頻道上週期性地廣播資料，而行
動客戶端則進入頻道中等待需要的資料被
廣播。在此環境下，當行動客戶端需要某個
資料項時，就進入頻道等待，直到收到所需
要的資料項後，再從頻道上離開。當行動客
戶端進入頻道等待時，會由「休眠模式」 
(Doze mode) 轉為「活躍模式」 (Active 
mode)，休眠模式比活躍模式省電。資料廣
播是以調校時間(Tuning time)，衡量資料擷
取所消耗的電力，而以獲取時間 (Access 
time)，衡量取得資料的速度。調校時間是指
行動客戶端進入廣播通道中，監聽(Listening)
頻道所花費的總時間。而獲取時間是指行動
客戶端從提出資料需求，一直到取得資料項
所經過的時間。圖一所示為行動客戶端進入
廣播頻道，取得data 2的調校時間（綠色部
份）和獲取時間。 
圖一、  Access time 與 Tuning time 
 
根據T. Imielinski等提出選擇式調校的概念
[1]，廣播的最小單位是廣播小包（bucket），
廣播小包分為索引小包（index bucket）和
資料小包（data bucket）兩種，連續相鄰的
索引小包構成索引片段（index segment）；
連續相鄰的資料小包構成資料片段（data 
segment）。當行動客戶端提出資料請求後，
必須先取得索引(Index)，以得知所需資料小
包被伺服器廣播的時間；之後便離開頻道，
進入休眠模式，等到所需的資料小包被播放
時，再進入頻道接收資料小包，減少擷取資
料所需花費的調校時間，以達到節能的目
的。廣播頻道中所用的索引為樹狀結構，此
樹狀結構稱為索引樹，如圖二(a)所示，樹的
最底層為資料項， 
 
 
 
    
b1 b2 b3 b4 b5 b6 b7 b8
b9
a1 a2 a3
R
1 4 7 10 13 16 19 22 25 28 31 34
c1 c2 c6c5c4c3 c7 c8 c9 c10 c11 c12 c13 c27c26c25c24c23c22c21c20c19c18c17c16c15c14
37 40 43 46 49 52 55 58 61 64 67 70 73 76 79~81
 
 
(a) 
 
(b) 
 
圖二、 廣播結構 (a)索引樹 (b)廣播排程 
 
其餘節點為索引項(index entry)。行動客戶
端取得資料項的方式是，根據索引樹的指
引，拿到相關的索引項，依索引項決定所需
資料項的播放時間，在該時間上線取得資料
項。例如，客戶端欲取得 data 22，只要依
序取得 R、a1、b3、c8 後，便可擷取到 data 22。
相對應的一種廣播排程(tuning optimal)，如
圖二(b)所示。 
在廣播環境下，除了利用索引之外，使用快
取，也可使資料擷取更有效率。因為擷取資
料前必須先獲取相關索引，因此快取可分資
料快取[3，4]與索引快取 [2]。在資料快取
的研究方面，一般都是考慮(1)資料被使用
的機率、(2)資料被播放的頻率及(3)下載資
料所花費的成本。來決定快取的對象。如果
客戶端需要的資料項存在於快取中，就可直
接從快取中獲得，不必再進入頻道花費任何
的調校時間與獲取時間來取得所需的資料
項。但是如果資料項在伺服端被異動，則快
 2
步驟一、 將 RAT 與 RTT 的最大值與最小
值分別以RATmax ,RTTmax ,RATmin ,RTTmin表
示，並另外記下,以方便之後做正規化。 
當我們將一個小包放入快取中時，若此小包
的直接子節點存在於快取中，則此小包的存
取機率要做一些調整。如圖三所示，假設
b3 已經存在於快取中，而我們現在要計算
a2 的存取機率，因為 b3 已經存在於快取
中，當行動客戶端需要 d5、d6 時，會使用
b3，而不會使用 a2；因此 a2 所包含的資料
範圍由原本的 d5、d6、d7、d8 變為 d7、d8。
因此 P(a2)=P(d7)+P(d8)=0.1+0.05=0.15。同
樣地，當快取中某一個小包，將被從快取中
移除時，若此小包在索引樹中的直接父節點
已經存在於快取中，則此直接父節點的存取
機率要增加。如圖三所示，假設現在 a2、
b3 同時存在於快取中，若要將 b3 從快取中
移除，a2 的存取機率要做調整。當 b3 在快
取中的情形下，a2 包含的資料範圍是 d7、
d8，當 b3 從快取中移除後，a2 的資料範圍
變為 d5、d6、d7、d8，因此 a2 的存取機率
要調整為
P(a2)=P(d5)+P(d6)+P(d7)+P(d8)=0.5 
 
步驟二、利用 Min-max normalization[7]，將
RAT 與 RTT 正規化，得到 RATR( Reduced 
Access Time Ratio)  RTTR( Reduced Tuning 
Time Ratio)。 
 
minmax
min)()(
RATRAT
RATxRATxRATR −
−= 
 
minmax
min)()(
RTTRTT
RTTxRTTxRTTR −
−= 
 
步驟三、利用 RATR 與 RTTR 可算出
RAVR(Reduced Average Time Ratio)，我們所
求的 R 即為 RAVR。 
 
))()((
2
1)( xRTTRxRATRxRAVR += 
)()( xRAVRxR =  
 
 
(b) 使用小包時，可節省的調校時間與
獲取時間的比例─ R(x) 
(c) 小包放入快取後，client 下次要使
用時，尚未異動的機率─ U(x) 
 
 假設伺服器端異動資料的間隔時間服從
指數分配，如圖五中的 u；而客戶端查
詢的間隔時間一樣也呈現指數分配，如
圖五中的 q。假設 u 與 q 相互獨立。 
    在廣播環境中，調校時間是能源消耗的
指標，獲取時間則是獲取資料時，平均花費
的時間，兩者對系統而言都是越低越好。一
般都是將調校時間與獲取時間分開比較，但
在一些應用中，我們可能要同時考慮這兩個
時間。在[5]中作者利用一個指標來將兩者
做結合。在這邊我們利用類似的概念，將調
校時間與獲取時間做結合，使之成為一個指
標。我們以 RAT (Reduced Access Time)與
RTT (Reduced Tuning Time)分別代表所能
降低的 access time 與 tuning time。其中 RAT
與 RTT 的詳細算法請參考[6]。 
 
 
圖五 client查詢間隔時間與 server異動間隔
時間 
 
則可推論出 U(x)=
TqTu
Tu
+
，當 Tu 上升時，
TqTu
Tu
+
會變大，即 U(x)會越大，詳細請參考
計算步驟如下： 
 
 4
 0
1
2
3
4
5
6
7
8
9
0.0125 0.025 0.05 0.1 0.2 0.4 0.8 1.6 3.2 6.4
DUI
Tu
ni
ng
 T
im
e 
(b
uc
ke
t)
Hybrid
CPF
LRU
No Cache
 
圖六、 DUI 對 Tuning Time 的影響 
0
500
1000
1500
2000
2500
3000
3500
4000
4500
5000
0.0125 0.025 0.05 0.1 0.2 0.4 0.8 1.6 3.2 6.4
DUI
A
cc
es
s T
ie
m
 (b
uc
ke
t)
Hybrid
CPF
LRU
No Cache
 
圖七、 DUI 對 Access Time 的影響 
 
圖八及圖九分別為快取空間對 Tuning Time
及 access time 的影響，隨著快取空間的加
大，Hybrid、CPF 與 LRU 的 Tuning Time 也
都跟著降低。因為 Hybrid 同時可快取資料
項與索引項，它能適當調整快取中資料項與
索引項的比例，使快取的帶來的效益有效發
揮，因此 Tuning Time 都比另外兩者低。而
CPF 因為只允許快取索引項，所以調校時間
始終比 Hybrid 高，當某些資料項能為系統
帶來很大效益時，CPF 並不會快取這些資
料，頂多快取它上端的索引項。至於 LRU
則因為只能快取資料項，除非所需要的資料
項都在快取中，否則就得從索引樹根節點重
新開始擷取，因此調校時間較Hybrid與 CPF
高。但當快取空間越來越大時， LRU 大部
分資料項，都可從快取中滿足；因此 Tuning 
Time 會比 CPF 低。 
圖九可看出 CPF 的 Access Time 始終無法
大幅度降低，因為唯有當所需要的資料項
都在快取中時，才能使 Access Time 有效
降低，但 Hybrid 與 LRU 均能隨著快取空
間的變大，Access Time 也跟著降低。 
 
0
1
2
3
4
5
6
7
8
9
500 1000 1500 2000 2500 3000 3500 4096
Cache Size (bucket)
Tu
ni
ng
 T
im
e 
(b
uc
ke
t)
Hybrid
CPF
LRU
No Cache
 
圖八、 快取空間對 Tuning Time 的影響 
    
0
500
1000
1500
2000
2500
3000
3500
4000
4500
5000
500 1000 1500 2000 2500 3000 3500 4096
Cache Size (bucket)
A
cc
es
s T
im
e 
(b
uc
ke
t)
Hybrid
CPF
LRU
No Cache
 
圖九、 快取空間對 Access Time 的影響 
 
 
 
4.2 廣播資料驗證（Broadcast-IR） 
 
為了讓客戶端能知道快取中的資料項是否
可用，我們在廣播方法中加入驗證報告
[8]。我們修改了封包的表頭，使得客戶端
可以得知驗證報告廣播的時間。並且根據廣
播環境的特性，使用編號來取代驗證報告中
的時間戳記。此外，我們討論驗證報告的擺
放位置，發現若將驗證報告擺在索引之前，
則客戶端會為了要取得驗證資料而錯失廣
播資料。若將驗證報告擺放在每一個資料區
 
 6
 8
圖十三、IR 在索引區段之前 
 
  IR 的最佳位置則是在索引區段之後第一
個異動資料項之前，如圖十四所示。 
no. ID
7 (5,2) (6,3),
6 2
5 3,7
no. ID
7 5,6
6 2
5 3,(7,1)
no. ID
7 5,6
6 (2,2)
5 (3,3),7
4 55 66a3R a1 a2 IR a3R a1 a2 77 8 9IRa3R a1 a2 1 22 33IR
4 55 66a3R a1 a2 IR a3R a1 a2 77 8 9IRa3R a1 a2 1 22 33IR
圖十四、IR 的最佳位置 
五、結論 
 
  在本計畫中，我們提出了兩個有效降低
行動計算環境中有效降低調校時間與查詢
等待時間的方法—混合式快取與使用 IR的
資料快取。實驗結果顯示，這兩個方法都
能達到增加行動計算效能的目的。 
 
六、參考文獻 
 
1. T. Imielinski , S. Viswanathan, and B. R. 
Badrinath, “Data on Air: Organization 
and Access,” IEEE Trans.Knowledge 
and Data Engineering, Vol. 9,No. 3, 
pp353-372 , May/June 1999. 
2. Jen-Jou Hung and Yungho Leu,” 
Efficient index caching schemes for data 
broadcasting in mobile computing 
environments” Database and Expert 
Systems Applications, 2003. 
Proceedings. 14th International 
Workshop, pp. 139 – 143, Sept. 2003. 
3. S.Acharya et al. “Broadcast Disks: Data 
Management for Asymmetric 
Communications Environments,” Proc. 
ACM SIGMOD Conf., pp.199-210,May 
1995.  
4. D.A. Tran, K.A. Hua, and K. 
Prabhakara, “On the Efficient Use of 
Multiple Physical-Channel Air-Cache,” 
Proc. IEEE Wireless Comm. and 
Networking Conf. (WCNC ’02), Mar. 
2002. 
5. Xu Yang and Athman Bouguettaya, 
“Adaptive Data Access in 
Broadcast-Based Wireless 
Environment,” IEEE Trans. Knowledge 
and Data Eng. , Vol 17, pp. 
326-338,March. 2005. 
6. 呂永和,洪振洲,張朝宗, “A hybrid 
caching policy for data dissemination in 
mobile computing environment,” 
NCS-95, 12/15-16, 2005, Tainan.  
7. Jiawei Han and Micheline Kamber, 
“Data Mining: Concepts and 
Techniques,”Morgan Kaufmann 
Publishers, 2001. 
8. D. Barbara and T. Imielinski. “Sleepers 
and Workaholics: Caching Strategies in 
Mobile Environments.” In Proceedings 
of the ACM SIGMOD Conference on 
Management of Data, pages 1-12, 1994. 
9. C.J. Su and L. Tassiulas, “Joint 
broadcast scheduling and user’s cache 
management for efficient information 
delivery,” ACM Wireless Networks, 6, 
2000. 
10. S. Acharya et al., “Prefetching from a 
Broadcast Disk,”12th Int’l Conf. Data 
Eng., pp. 276-285, Feb. 1996. 
 
 
七、計畫成果自評 
 
1、 研究內容與原計畫相符程度 
本研究內容與原提案計畫內容相符。 
 
2、 預計達成目標狀況 
本計畫所提之研究目標，都能有效地達
成。 
 
3、研究成果的學術或應用價值 
本研究初步結果，發表在全國計算機會
議(NCS) [6]及正投稿至NCS2007研討會
中。 
 
4、是否適合在期刊上發表 
本研究的第一個結果（混合式快取）可
望發表於期刊中。 
 
