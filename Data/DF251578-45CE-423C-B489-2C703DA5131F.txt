 2
???????????? 
? ?????  ? ?????                                  ???96?1? 
??????? 
?????????????????????(II) 
????????? 
?????NSC95-2221-E-252-002 ??????????? 
??/???? 
????: ??????? 
????: ???????M280795? 
???/??? ??????? 
???? 
?????????????????????????????
????????????????????????????
?????????????????????????????
?????????????????????????????
?????????????????????????????
???????????????????????? 
???One kind of dexterous three wheeled wheelchairs, for the senior 
people and handicap person, we will provide a very smoothly 
omni-directional motion wheel chair. It will continue to use the 
existing manual and electrically operated wheel chair merit, and 
innovate to a novel omni-directional wheelchair system. Enable the 
dexterous electrically operated wheelchair along each free position 
direct migration, but overcomes the existing wheelchair to need the 
complicated mode of motion. Founds the electrically operated 
wheelchair nimble movement ability, provides in is narrow the 
wheelchair system which disorderly the dynamic environment also 
may cleverly march forward. 
??????? 
?????? 
?????????? 
???? ??????????????????? 
???????? 
?????????????????????????????
?????? 
※ 1.????????????????????????????? ????
????????????????? 
※ 2.???????????????????????????? 
※ 3.???????????????? 
???????? ?????? 
 4
????????????????????
????????????????????
???????????????????
????????????????????
????????????????????
????????????????????
????????????????????
????????????????????
????????????????????
??????????????????
????????????????????
????????????????????
??????????????? 
?? ??????? 
?????????????????
????????????????????
????????????(PLC) ?????
? ? ? ? ? ? ? ? ? : ? ? Kornylak 
Corporation???????????????
????????? 24V ???????
?????????? 36 ????????
????????????????????
????????????????????
???????? (Oriental motor)??
AXH450K ???????????????
????????????????????
????????????????????
????????????????????
????????????????????
????????? 30 ?????????
?????? 50W????????????
????????????????????
0.2Nm??? 15:1????????????
?????? 3.0Nm ??????????
10cm ??????????????? 
F=3.0Nm/5cm=60N(??)????????
60Kg?????? F=ma?????????
a=F/m=60N/60Kg= 1.0m/sec2 ?????
1.0m/sec2 ????? V=at=1.0m/sec2*10sec 
=10m/sec?? 10 ?????? 10m/sec ??
??????????????? 0? 5V?
????????????????????
????????????????? 0V~5V
?????????? 0~3000rpm?????
?????/?????/?????/????
?????????????? 1?????
????????????????????
????????????????????
??????????????????Kg
???????????? 
  
  ?? ?????????? 
????????????????? 
 
     ?? ?????????? 
????????????????????
? ? ? ? ? ? ? (inverse kinematics) ?  
1 1
2 1
3 2
sin( ) cos( )
1 sin( ) cos( )
cos( ) sin( )
w
w
L x
L y
R
L
θ δ φ δ φ
θ δ φ δ φ
θ φ φ φ
  − + +        = − − − −              
& &
& &
& &
               (1) 
 6
????????????? X? Y???
???-50~+50????????? 
 
?? ?????? 
???????????????????
????????????????????
????????????????????
????????????????????
????????????????????
????????????????????
????????????????????
???????????????????
(PLC)?????????????????
????????????????????
????????????????????
?????? 0~5V???????????
???????????? 
 
?? ???????? 
 
?? ????? 
 
?? ?????????? 
??????????????? 
???????????????????
????????????????????
????????????????????
????????????????????
?????????? ?? CXL04LP3??
????????????????????
????????????????????
???????????????????
?????????????? X? Y??
????????????????????
????????????????????
????????????????????
????????????????????
????????????????????
????????????????????
????? 
 8
????????????????????
????????????????????
????????????????????
?????? 
????????????????????
??????????????????
????????????????????
????-A~???-B ?????????
???? 45 ??????????????
A~??? C ??????????????
????????????????????
????????????????????
???????? 
 
???-A ????????????     
 
???-B???????????? 
 
 
???-A ??????? 
 
???-B??????? 
 
???-C??????? 
??????? 
?????????????????
????????????????????
????????????????????
????????????????????
????????????????????
????????????????????
????????????????????
????????????????????
????????????????????
????????????????????
????????????????????
????????????????? 
?????? 
1. R. D. Schraft and G. Schmierer, Service 
Robots, A K Peters, Ltd., 2000. 
2. F. G. Pin and S. M. Killough, “A new 
family of omnidirectional and holonomic 
wheeled platforms for mobile robots,” 
IEEE Trans. on Robotics and Automation, 
vol. 10, pp. 480-489, 1994. 
3. http://www.robocup.org/ 
4. M. J. Jung, H. S. Shim, H. S. Kim, and J. H. 
Kim, “Omni-directional mobile base 
OK-II,” Proc. of the IEEE International 
Conference on Robotics and Automation, pp. 
3449-3454, 2000. 
???????????????????????????? 
????? ??? ????
??? 
??????????????? 
?? 
???? 
5/8/2007-5/11/2007 
Kumamoto, Japan 
????
????
NSC95-2221-E-252-002 
???? 2007 IEEE International Conference on Mechantronics 
?????? 1. Auto-tuning fuzzy PID control of a Pendubot system  
2. A kinematics-based method for time-optimal control of an 
omni-directional robot 
????????? 
2007 ? IEEE ???????? (The 2007 IEEE International Conference on 
Mechatroncis)?? IEEE Industrial Electrical Society?SICE System Integration Division???
???(University of Kumamoto)???????????? 2007? 5? 8?? 5? 11?
????????????????????????????????(???????
?????)??????????????????????????????????
???????????????????????????????????????
???????(New Otani Hotel)??????????????????? 
?????????????????Mechatronics Design?Modeling and Simulation?
Distributed Systems?Fault Detection and Diagnosis?Vision and Sensors, Robots and Mobile 
Machines?Vibration and Control?Computational Intelligence in Mechatronics?Intelligent 
Transportation Systems?Embedded Real-time Systems?Micro Mechatronics?Man Machine 
Interfaces?Motion Control?Hardware/software Co-design? Intelligent Manufacturing Systems?
Education and Training in Mehctronics???????????????????????
????????????????????????(Plenary talk)??????Pulsed 
Power Technology and Its Applications?A New Academic Frontier “Cybernics”: Robot Suit 
Hal??Recent Development on Intelligent Robotic Sweet Home for the Elderly???????
???????????????????????????????????????
???????????????????????????????????????
????????????? 
??????????????????????A kinematics-based method for 
time-optimal control of an omni-directional robot???Auto-tuning fuzzy PID control of a 
Pendubot system?????????? 5? 9????WA1-C?WA2-B???????
???????????????????????????????????????
?????????????????????????????? PID???????
Auto-Tuning Fuzzy PID Control of a Pendubot System 
Chia-Ju Wu Tsong-Li Lee Yu-Yi Fu Li-Chun Lai 
Department of 
Electrical Engineering 
Department of 
Automation Engineering 
Department of 
Automation Engineering 
Graduate School of Engineering 
Science and Technology 
National Yunlin University 
of Science and Technology 
Nan Kai Institute of 
Technology 
Nan Kai Institute of 
Technology 
National Yunlin University 
of Science and Technology 
Douliou, Yunlin 640  Tsaotun, Nantou 542 Tsaotun, Nantou 542 Douliou, Yunlin 640  
Taiwan, R.O.C Taiwan, R.O.C Taiwan, R.O.C Taiwan, R.O.C 
wucj@yuntech.edu.tw alee88@nkc.edu.tw t098@nkc.edu.tw lichun.lai9999@msa.hinet.net 
 
Abstract – The goal of this paper is to design a fuzzy 
proportional-integral-derivative (PID) controller to swing up 
the pendubot and maintain it in an unstable inverted 
equilibrium position. Different from PID controllers with 
fixed gains, the fuzzy PID controller is expressed in terms of 
fuzzy rules such that the PID gains are adaptive and the fuzzy 
PID controller has more flexibility and capability than the 
conventional ones. When tuning the fuzzy PID controller, a 
genetic algorithm (GA) method is proposed, in which the 
centers and the widths of the Gaussian membership functions, 
the number of fuzzy control rules, and the PID gains are 
chosen as parameters to be determined. When defining the 
fitness function of the genetic algorithm, the concept of 
multiobjective optimization is used such that the fitness 
function can be defined in a systematic way. To show the 
performance and robustness of the fuzzy PID controller, 
simulation results are presented. 
I   INTRODUCTION 
A pendubot is a two-link (two-degree-of-freedom) under- 
actuated system and it includes two links rotating on two 
joints, in which the first link (shoulder) is actuated and the 
second link (elbow) is not actuated. This system is a simple 
underactuated mechanical system to permit complete 
dynamic analyses, but complex enough for investigating 
many advanced nonlinear control methods. Therefore, it is 
widely used as a benchmark in the study of underactuated 
systems. 
In order to stabilize the pendubot to the unstable 
inverted equilibrium position, a two-stage control strategy 
is always used. In the first stage, swing up control is used 
to move the pendubot close to the equilibrium manifold. 
Then in the second stage, the swing up controller is 
replaced by a balance controller for position control. Many 
methods such as the partial feedback linearization 
techniques [1], the fuzzy PD and/or PI controller [2, 3], 
and the acrobatic controller [4] have been conducted for 
swing up control of the pendubot. Once both links are 
swung up, the problem of balancing the pendubot about the 
unstable equilibrium was investigated [1-4]. 
In this paper, a GA-tuning fuzzy PID control scheme is 
proposed to swing up the pendubot and maintain it in an 
unstable inverted equilibrium position. This scheme is 
adopted because PID controllers are widely applied in 
industry applications in the past decades. Meanwhile, this 
is also because PID controllers have simple control 
structures and are prone to tune. To complete such a 
controller, the proportional gains, the integral gains, and 
the derivative gains must be determined. Recently, many 
researchers attempted to combine conventional PID 
controllers with fuzzy logic [5-7]. Despite the significant 
improvement of these fuzzy PID controllers over their 
conventional counterparts, it should be noted that they still 
have disadvantages. The membership functions are fixed 
and not adjustable, and the fuzzy control rules are handed- 
designed rules [5, 6]. Furthermore, for nonlinear multi- 
variable systems, how to reduce the number of fuzzy rules 
is unsolved. In [7], a multivariable system is decomposed 
into several SISO systems in order to reduce the number of 
fuzzy rules. However, the drawback is that the inter- 
dependency between the variables is neglected such that 
the designed controller cannot work well for some cases. 
To overcome the above-mentioned weaknesses, a GA is 
used to perform parameter tuning of the fuzzy PID 
controller since GAs provide a means to search poorly 
understood and highly complex space. In the proposed 
GA-tuning method, based on the concept of multiobjective 
optimization [8, 9], a fitness function is defined in a 
systematic way such that the centers and the widths of the 
Gaussian membership functions, the number of fuzzy 
control rules, and the PID gains can all be chosen as 
parameters to be determined. In this manner, it is expected 
that the designed fuzzy PID controller has more flexibility 
and capability than those in [5-7]. The performance of this 
controller will be verified by the simulation results. 
II   DYNAMIC MODEL OF THE PENDUBOT 
In general, the dynamic model of an underactuated 
mechanism with m  actuated joints from a total of n  
joints can be expressed as follows [10]: 
 ( ) ( ,  ) ( )+ + =  M q q C q q q G q τ  (1) 
where nR∈q  represents the angles of the links, 
( ) n nR ×∈M q  represents the inertia matrix, 
( ,  ) nR∈ C q q q  represents the Coriolis and centrifugal 
torques, ( ) nR∈G q  represents the gravitational term, and 
nR∈τ  represents the control torques, which has ( )n m−  
zero components. 
For the pendubot shown in Fig. 1, one can find that 
1m =  and 2.n =  Therefore, in the form of (1), its 
dynamic model can be represented as 
11 12 1 11 12 1 1 1
21 22 2 21 22 2 2 0
M M q C C q G
M M q C C q G
τ
⋅ + + =
                                
 
   (2) 
where 1m ,  2m ,  1q ,  2q ,  1l , 2l ,  1cl ,  and 2cl  are 
 
1
Proceedings of International Conference on Mechatronics
Kumamoto Japan, 8-10 May 2007
WA1-C-3
1-4244-1184-X/07/$25.00©2007 IEEE
 where 1 1 2 1 3 2 4 2( ) ( ) ( ) ( ).
i j k l
ijkl X e X e X e X eω = ⋅ ⋅ ⋅   
From the above description, one can find that the gains 
of a fuzzy PID controller are adaptive. However, it is very 
difficult, if not impossible, to determine the parameters,   
simultaneously. Therefore, a GA-based searching approach 
will be proposed since GAs provide a means to search 
poorly understood, highly complex space.  
IV   GENETIC ALGORITHMS 
A  Chromosome Representations 
One of the key issues of the proposed GA-based method is 
the way to encode the parameters. In this paper, a mixed 
coding method will be used, in which 1,n  2 ,n  3,n  and 
4n  are encoded as binary numbers and  1 ,
ijkl
PY   1 ,
ijkl
IY  1 ,
ijkl
DY  
 2 ,
ijkl
PY   2 ,
ijkl
IY   2 ,
ijkl
DY  ,
km
kρ  ,k
m
klσ  
km
krσ  are encoded as real 
numbers. 
Once the mixed coding techniques are used, a 
chromosome can be represented as 
1 2 3 4 1 2 3 41 2 4 4 4 4 6
[ , , , ] [ ]n n n n n n n n binary realp p p + + + += ="p p p  (9) 
where 
 
1 2 3 41 2
[ , , , ]binary n n n np p p + + += "p  (10) 
 
1 2 3 4 1 2 3 4 1 2 3 41 4 4 4 4 6
[ , , ]real n n n n n n n n n n n np p+ + + + + + + += "p  (11) 
binaryp  is a binary variable vector taking of either “1” or 
“0” and realp  is a real variable vector. 
As described above, the values of 1p  to 1 2 3 4n n n np + + +  are 
used to indicate which ones of the membership functions 
are activated. As for the real genes, the values of 
1 2 3 4 1n n n n
p
+ + + +
 to 
1 2 3 42 2 2 2
,n n n np + + +  1 2 3 42 2 2 2 1n n n np + + + +  to 
1 2 3 43 3 3 3
,n n n np + + +  and 1 2 3 43 3 3 3 1n n n np + + + +  to 1 2 3 44 4 4 4n n n np + + +  are 
used to represent the values of ,kmkρ  ,kmklσ  and ,kmkrσ  
respectively. Furthermore, the values 
1 2 3 44 4 4 4 1n n n n
p + + + +  to 
1 2 3 4 1 2 3 44 4 4 4 6n n n n n n n n
p + + + +  are used to represent the values of 
 1 ,
ijkl
PY   1 ,
ijkl
IY   1 ,
ijkl
DY   2 ,
ijkl
PY   2 ,
ijkl
IY   2 ,
ijkl
DY  for 11 ,i n≤ ≤  
21 ,j n≤ ≤  31 ,k n≤ ≤  41 .l n≤ ≤  
B  Crossover and Mutation 
Crossover is an effective way of exchanging and 
recombining genes from the higher fitness individuals. In 
the proposed GA-based method, a chromosome is 
represented as [ ].binary real=p p p  Consequently, different 
kinds of crossover operators are applied to binaryp  and 
,realp  respectively. For binary-coded genes, one cut-point 
crossover operator is adopted because of its simplicity. As 
for real-coded genes, the convex operator is adopted since 
it is widely used [12]. 
Mutation is also a crucial operator of GAs. It alters one 
or more genes with a mutation probability. In the proposed 
GA-based method, for binary-coded genes, single-point 
mutation operator is employed [13]. For real-coded genes, 
there exist different mutation operators such as the uniform 
mutation and the nonuniform mutation [14]. The non- 
uniform mutation is adopted in this paper. 
C  Fitness 
In GAs, fitness is the performance index to evaluate the 
suitability of each chromosome. By the principle of 
survival of the fittest, a chromosome with higher fitness 
value has a higher probability of contributing one or more 
offspring in the next generation. However, it should be 
pointed out that the definition of fitness function is usually 
different from person to person and may be totally 
different even in a simple application case. Therefore, how 
to define a proper fitness function is still an open problem 
in GAs. 
Based on the concept of multiobjective optimization [8, 
9], a systematic way to define the fitness function is 
proposed in this paper. Assuming that one is interested in 
M performance criteria, which are denoted by 1 ( ),f x  
2 ( ), , ( ),Mf f"x x  respectively, then the fitness function 
can be defined as 
 1 2Maximize   ( ),  ( ), , ( )Mfitness f f f
∈Ω
= "
x
x x x  (12) 
where 1 2( ,  , ,  )nx x x= "x  is a variable vector in a real 
and n-dimensional space, Ω  is the feasible solution space, 
and 1 2( ),  ( ), , ( ) Mf f f"x x x  are the M objective functions 
to be maximized simultaneously. 
From the above illustration, one can realize that the 
fitness function can be defined systematically as shown in 
(12). However, how to find an optimal solution for this 
multiobjective minimization problem is not an easy task 
and several algorithms have been proposed [8, 9]. Among 
these methods, one feasible way is to search from various 
search directions to find the optimal solution [8]. In this 
method, the first step is to rewrite the fitness function in 
(12) as 
 1 1 2 2( ) ( ) ( )M Mfitness w h w h w h= + + +"x x x  (13) 
where 
( )
( )    for  1,  2, ,  
max{ ( ) }
i
i
i
f
h i M
f
∈Ω
= = "
y
x
x
y
 (14) 
1 2( ,  , ,  )Mw w w"  is the weight vector and 
 
1 2
for  1,  2, ,  ii
M
r
w i M
r r r
= =
+ + +
""  (15) 
In which 1 2,  , ,  Mr r r" are nonnegative random real 
numbers.  
How to fuse the optimal solutions corresponding to 
1 2( ,  , ,  )Mw w w"  to obtain the optimal value of the 
multiobjective problem in (12) was not discussed in [8]. 
Therefore, a novel method is developed and the basic idea 
is to determine the average weight vector of the N  sets 
of weight vector by 
 
,
1
,
1
( )
for 1, 2, ,
( )
N
ij i opt j
j
i N
i opt j
j
w h
w i M
h
=
=
⋅
= =
∑
∑
"
x
    
x
 (16) 
With this new set of weight vector, the corresponding 
fitness function is defined and the GA is applied to find the 
3
 generated by the proposed approach are expressed in the 
form of fuzzy rules, they are more adaptive than the PID 
controller with fixed gains. As shown in the simulation 
examples, every key components of the fuzzy PID 
controller are determined simultaneously. Therefore, the 
designed PID controller improves significantly the 
disadvantages of most of the previous PID design methods. 
Another merit of the proposed method is the way to 
define the fitness function based on the concept of 
multiobjective optimization. If one is interested in many 
performance criteria, then the fitness function can be 
defined a systematic way. In the simulation examples, it is 
shown how to achieve the primary goal while minimizing 
the number of fuzzy rules simultaneously. In this manner, a 
fuzzy PID controller with as few as fuzzy rules is designed 
and the simulation results verify its good performance on 
the pendubot system. 
ACKNOWLEDGMENT 
This work was supported in part by the National Science 
Council, Taiwan, R.O.C., under grants 
NSC95-2218-E-224-001 and NSC95-2221-E-252-002. 
REFERENCES 
[1] M. Zhang, T. J. Tarn, “Hybrid control of the Pendubot,” 
IEEE/ASME Transactions on Mechatronics, Vol. 7, No. 1, pp. 
79–86, 2002. 
[2] E. Sanchez, L. A. Nuno, Y. C. Hsu, G. Chen, “Fuzzy PD scheme 
for underactuated robot swing-up control,” Proceedings of the 
IEEE International Conference on Computational Intelligence and 
Fuzzy Systems, pp. 302–306, 1998. 
[3] E. N. Sanchez, V. Flores, “Real-time fuzzy PI + PD control for an 
underactuated robot,” Proceedings of the IEEE International 
Symposium on Intelligent Control, pp. 137–141, 2002. 
[4] W.L. Kazuo, H.O. Wang, “Acrobatic control of a Pendubot,” IEEE 
Transactions on Fuzzy Systems, Vol. 12, No.4, pp. 549–552, 2004. 
[5] D. Misir, H.A. Malki, G. Chen, “Design and analysis of a fuzzy 
proportional- integral-derivative controller,” International Journal 
of Fuzzy Sets and Systems, Vol. 79, pp. 297–314, 1996. 
[6] C. W. Tao, J. S. Taur, “Robust fuzzy control for a plant with fuzzy 
linear model,” IEEE Transactions on Fuzzy Systems, Vol. 13, No.1, 
pp. 30–41, 2005. 
[7] C. J. Wu, G. Y. Liu, M. Y. Cheng, T. L. Lee, “A neural-network- 
based method for fuzzy parameter tuning of PID controllers,” 
Journal of the Chinese Institute of Engineers, Vol. 25, No. 3, pp. 
265–276, 2002. 
[8] H. Ishibuchi, T. Murata, “A multi-objective genetic local search 
algorithm and its application to flowshop scheduling,” IEEE 
Transactions on Systems, Man, and Cybernetics–Part C: 
Applications and Review, Vol. 28, No. 3, pp. 392–403, 1998. 
[9] S. Hajri-Gabouj, “A fuzzy genetic multiobjective optimization 
algorithm for a multilevel generalized assignment problem,” IEEE 
Transactions on Systems, Man, and Cybernetics–Part C: 
Applications and Review, Vol. 33, No.2, pp. 214–224, 2003. 
[10] M. W. Spong, M. Vidyasagar, Robot dynamics and control, New 
York: Wiley, 1989. 
[11] L. X. Wang, A Course in Fuzzy Systems and Control, New Jersey: 
Prentice-Hall, 1997. 
[12] Z. Michalewicz, Genetic Algorithm + Data Structure = Evolution 
Programs, New York: Springer-Verlag, 1996. 
[13] R. L. Haupt, S. E. Haupt, Practical Genetic Algorithms, 2nd ed., 
New York: John Wiley & Sons, 2004. 
[14] J. Holland, Adaptation in Natural and Artificial System, Ann 
Arbor: University of Michigan Press, 1975. 
[15] J. J. Grefenstette, “Optimization of control parameters for genetic 
algorithms,” IEEE Transactions on Systems, Man, and Cybernetics, 
Vol. 16, No. 1, pp. 122–128, 1986. 
[16] K. F. Man, K. S. Tang, S. Kwong, “Genetic algorithms: Concepts 
and applications,” IEEE Transactions on Industrial Electronics, 
Vol. 43 No. 5, pp. 519–534, 1996. 
[17] K. Ogata, Modern Control Engineering, 4th ed., New Jersey: 
Prentice-Hall, 2002. 
 
  (a) 
 
  (b) 
 
  (c) 
 
  (d) 
 
 Figure 2 
Optimal membership functions of the input linguistic variables 
(a) 
1
( ),e t  (b) 
1
( ),e t  (c) 
2
( ),e t  and (d) 
2
( )e t , which are 
determined by applying Algorithm A with the fitness function 
(20). 
2
1X  
-3 -2 -1 0 1 2 3 
0
0.2
0.4
0.6
0.8
1
1e  
M
em
be
rs
hi
p 
fu
nc
tio
ns
 
 
5
1X
 
-3 -2 -1 0 1 2 3 
0 
0.2
0.4
0.6
0.8
1
2e  
M
em
be
rs
hi
p 
fu
nc
tio
ns
 
1
4X
4
4X
-3 -2 -1 0 1 2 3 
0
0.2
0.4
0.6
0.8
1
2e  
M
em
be
rs
hi
p 
fu
nc
tio
ns
 
4
3X  
2
3X
-3 -2 -1 0 1 2 3 
0
0.2
0.4
0.6
0.8
1
M
em
be
rs
hi
p 
fu
nc
tio
ns
 
1e
2
2X
3
2X  
4
2X
5
A Kinematics-Based Method for Time-Optimal Control of 
an Omni-Directional Robot 
Chia-Ju Wu Tsong-Li Lee Chia-Nan Ko Kuo-Lan Su 
Department of  
Electrical Engineering 
Department of  
Automation Engineering 
Department of  
Automation Engineering 
Department of 
Electrical Engineering 
National Yunlin University 
of Science and Technology 
Nan Kai Institute 
of Technology 
Nan Kai Institute  
of Technology 
National Yunlin University 
of Science and Technology 
Douliou, Yunlin 640  Tsaotun, Nantou 542 Tsaotun, Nantou 542 Douliou, Yunlin 640  
Taiwan, R.O.C Taiwan, R.O.C Taiwan, R.O.C Taiwan, R.O.C 
wucj@yuntech.edu.tw alee88@nkc.edu.tw t105@nkc.edu.tw sukl@yuntech.edu.tw 
 
Abstract – The main goal of this study is to investigate the 
time-optimal control problem of an omni-directional mobile 
robot between two configurations. In the proposed method, 
this problem is formulated and solved as a constrained 
nonlinear programming (NLP) one. During the optimization 
process, the count of control steps is fixed initially and the 
sampling period is treated as a variable to be determined. The 
goal is to minimize the sampling period such that it is below a 
specific minimum value, which is set in advance considering 
the accuracy of discretization. To generate initial feasible 
solutions of the NLP problem, a systematic approach is also 
proposed. Since different initial feasible solutions can be 
generated, the optimization process of the NLP problem can 
be started from many different points to find the optimal 
solution. To show the feasibility of the proposed method, 
simulation and experimental results are included for 
illustration. 
I  INTRODUCTION 
In recent years, several kinds of mobile robots have been 
used widely in many applications [1]. Among these mobile 
robots, the omni-directional ones have attracted much 
attention since they can translate and rotate simultaneously 
and independently [2]. A typical application of omni- 
directional mobile robots is the annual international 
Robocup competition [3], in which omni-directional 
mobile robots are used to play soccer-like games. 
Many researchers have studied omni-directional mobile 
robots [2, 4-10]. Pin and Killough presented the concepts 
for a family of holonomic wheeled platforms that feature 
full omni-directionality with simultaneous and independent 
controlled rotational and translational capabilities [2]. 
Betourne and Campion, Kim et al., and Leow et al. studied 
the kinematic modeling and analysis of omni-directional 
mobile robots [4, 5]. Considering the occurrence of slip 
between the wheels and motion surface, William II et al. [6] 
presented a dynamic model for omni-directional wheeled 
mobile robots. Chen et al. [7] presented an off-road 
omni-directional robot, which can run on an uneven road 
and obstacles. With the same kind of omni-directional 
robot in [7], Liu et al. [8] designed a nonlinear controller 
for an omni-directional mobile robot utilizing the so-called 
linearization control method such that robust stability and 
performance can be provided.  
From the competition experience of Robocup games, it 
is realized that a time-optimal control method for the 
mobile robots between configurations can improve the 
performance of a team significantly. In the past few years, 
the time-optimal problem of omni-directional mobile 
robots has attracted the attention of several researchers [9, 
10]. Usually, this kind of time-optimal control problem 
leads to the utilization of the Pontryagin’s Maximum 
Principle (PMP) [11], in which the dynamical equations of 
the mobile robot are used and one needs to solve a set of 
differential equations. Since this set of equations is usually 
highly nonlinear and coupled, it is very difficult to obtain 
the closed-form solution for the time-optimal trajectory of 
any omni-directional mobile robot [9, 10]. 
Because of the disadvantage in applying the PMP, a 
NLP method that does not utilize the PMP was developed 
by one of the authors of this paper to solve the 
time-optimal control problem of linear systems [12]. 
Extending the concept in [12] to nonlinear systems, this 
paper shows the generation of time-optimal motion 
between two configurations for an omni-directional mobile 
robot with three independently driven individual wheels. In 
the beginning of this study, a mobile robot is introduced 
and its kinematic equations are derived. Then an iterative 
procedure is proposed to transform the time-optimal 
problem into a constrained NLP one. However, since the 
kinematic equations of the omni-directional robot are 
usually nonlinear, it is not an easy task to find a feasible 
solution for the NLP problem. Therefore, a systematic 
approach is also proposed to generate feasible solutions. In 
this manner, since feasible solutions can be obtained easily, 
the optimization process of the NLP problem can be started 
from many different starting points to find the optimal 
solution.  
II  THE OMNI-DIRECTIONAL ROBOT AND ITS 
KINEMATICS 
The three-wheeled omni-directional mobile robot used in 
this study is shown in Fig. 1. This mobile robot system is 
mainly equipped with a notebook PC, two 12V serial 
batteries, three omni-directional wheels, and three DC 
servomotors with encoders and drivers. The notebook PC 
is used to implement the proposed method and determine 
the control signals, which are the desired angular velocities 
of the three wheels. These control signals are then 
transformed into the corresponding voltage commands and 
are sent to the DC servomotors to drive the omni- 
directional wheels. The special feature of the 
omni-directional robot hinges on the wheels that allow free 
motions in any directions. To derive the kinematics of the 
mobile robot, a diagram is depicted as shown in Fig. 2, in 
which a fixed world-frame [ , ]Tw wx y  and a moving-frame 
1
Proceedings of International Conference on Mechatronics
Kumamoto Japan, 8-10 May 2007
WA2-B-4
1-4244-1184-X/07/$25.00©2007 IEEE
( ) ( 1) ( 1)
( ) ( 1) ( 1) for 1, 2, ,
( ) ( 1) ( 1)
w w w
w w w
x i x i x i t
y i y i y i t i N
i i i tφ φ φ
− + − ⋅ ∆
= − + − ⋅ ∆ =
− + − ⋅ ∆
           

 "

  (12) 
where ( ( ), ( ), ( ))w wx i y i iφ  and ( ( ), ( ), ( ))w wx i y i iφ   are 
used to denote ( ( ), ( ), ( ))w wx i t y i t i tφ⋅ ∆ ⋅ ∆ ⋅ ∆  and 
( ( ), ( ), ( )),w wx i t y i t i tφ⋅ ∆ ⋅ ∆ ⋅ ∆   respectively. 
If 1 2 3( (0), (0), (0))ω ω ω  is substituted into (6), with the 
given ( (0), (0), (0)),w wx y φ  then the value of 
( (0), (0), (0))w wx y φ   is determined. Then the value of 
( (1), (1), (1))w wx y φ  can be obtained by substituting the 
values of ( (0), (0), (0))w wx y φ  and ( (0), (0), (0))w wx y φ   
into (12). Applying angular velocities to (6) sequentially 
and repeatedly using (12), the final configuration of the 
omni-directional mobile robot can be expressed as 
functions of 1 2 3( (0), (0), (0)),  ( (0), (0), (0)),w wx y φ ω ω ω "  
1 2 3( ( 1), ( 1), ( 1)),N N Nω ω ω− − −  and the sampling 
period t∆ . This means that 
 1 1 2 3( ) ( (0), (0), (0), , , , )w w wx N f x y tφ ω ω ω= ∆
G G G
 (13) 
 2 1 2 3( ) ( (0), (0), (0), , , , )w w wy N f x y tφ ω ω ω= ∆
G G G
 (14) 
 3 1 2 3( ) ( (0), (0), (0), , , , )w wN f x y tφ φ ω ω ω= ∆
G G G
 (15) 
where 
1 1 1 1( (0), (1), , ( ( 1))Nω ω ω ω= −
G "  
2 2 2 2( (0), (1), , ( ( 1))Nω ω ω ω= −
G "   
3 3 3 3( (0), (1), , ( ( 1))Nω ω ω ω= −
G "  
With (13) through (15), Problem 1 is now turned into a 
standard constrained NLP problem as follows: 
PROBLEM 2: 
Given the initial configuration in (7), determine the values 
of 1 2 3, , ,ω ω ω
G G G
 and t∆  to minimize 
 J N t= ⋅ ∆  (16) 
subject to 
 0t∆ >  (17) 
 ( ( ), ( ), ( )) ( , , )w w final final finalx N y N N x yφ φ=  (18) 
,min ,max( )i i ijω ω ω≤ ≤ for 1, 2,3; 0,1, , 1i j N= = −"  (19) 
where ( ( ), ( ), ( ))w wx N y N Nφ are defined in (13) through 
(15). 
B  Choice of Control Steps and Sampling Period 
Although the time-optimal control problem of an omni- 
directional mobile robot can be formulated as shown in 
Problem 2, there still exist several difficulties to be solved. 
One difficulty is the choice of the value of control steps 
.N  It is obvious that a larger value of N  gives more 
freedom for the input variables. However, this also means 
more computation burden for Problem 2. For linear system 
without constraints on the input variables, it has been 
shown that the initial choice of N  must be greater than 
the dimension of state variables [12]. Though no similar 
rules can be followed for nonlinear systems, an integer that 
is large than the dimension of state variables will be 
chosen as an initial value of N  in this paper. 
Another difficulty is the choice of the sampling period. 
From the viewpoint of discretization accuracy, it is obvious 
that smaller sampling period value will result in a more 
accurate model. Therefore, a limitation of the sampling 
period, say limitt∆ , should be chosen. If the value of t∆  
obtained in Problem 2 is greater than limitt∆ , then a new 
value of control steps will be chosen according to 
 new
limit
N t
N
t
⋅ ∆
>
∆
 (20) 
IV  INITIAL FEASIBLE SOLUTIONS 
After formulating the time-optimal control problem of the 
omni-directional mobile robot as a NLP one, it should be 
pointed out that there are only two ways to guarantee the 
global minimum of this NLP problem [13]. The first one is 
to specify that the problem is convex. If the problem is not 
convex, then the second way is to choose a sufficient 
number of different initial feasible solutions to start the 
optimization process such that all local minima may be 
obtained. Since Problem 2 is clearly not a convex problem, 
only the second way can be used to find its global 
minimum. In Problem 2, an initial feasible solution means 
a set of 1 2 3, , ,ω ω ω
G G G
 and t∆  satisfying the constraints in 
(7) and (17) through (19). In this section, a systematic 
approach is proposed to generate initial feasible solutions 
of Problem 2. If initial feasible solutions can be found 
easily, then the optimization process of Problem 2 can be 
started from different points to find the global minimum. 
The first step of this approach is to find a trajectory of 
the omni-directional robot that satisfies the constraints in 
(7), (17), and (18), irrespective of the constraints in (19). If 
this trajectory satisfies the constraints in (19), then an 
initial feasible solution is found. Otherwise, this trajectory 
can be adjusted to be a feasible one by slowing down the 
angular velocities, but tracking the same positions. Such 
kind of adjustment is similar to the situation of driving a 
car along a track.  
For a chosen value of N , there are several ways to 
generate a trajectory to satisfy the constraints in (7), (17), 
and (18). For example, one can choose 
( ) ( )
initial
w initial final initial
final
x
i
x i x x x
N
x
= + − ⋅

 for 
0
1, 2, , 1
i
i N
i N
=
= −
=
"  
  (21) 
( ) ( )
initial
w initial final initial
final
y
i
y i y y y
N
y
= + − ⋅

 for 
0
1, 2, , 1
i
i N
i N
=
= −
=
"  
  (22) 
3
,N the values of limitt∆  and feasibleN  are chosen to be 11, 
0.03 (sec.) and 10, respectively. To generate different 
initial feasible solutions, with the choices in (21), (22), and 
(23), the value of feasiblet∆  must be determined first. In this 
example, it is easy to find that this value is 0.2815 (sec.). 
Therefore, if one substitutes the value 0.2 (sec .)t∆ =  
into (24), then a trajectory that satisfying the constraints in 
(25) and (26) is determined and the corresponding angular 
velocities are shown in Table 1. However, since this is not 
a feasible solution, it will violate the constraints in (27). 
On the other hand, if a value of t∆  that is greater than 
feasiblet∆ , say 0.5 (sec .)t∆ =  is substituted into (24), then 
a set of feasible angular velocities is generated as shown in 
Table 2. With this feasible solution and applying the 
MATLAB Optimization Toolbox, the optimal values of 
t∆  and N t⋅∆  are found to be 0.0928 (sec.) and 1.0208    
(sec.), respectively. However, since limitt t∆ > ∆ , the value 
of N  will be updated according to (20), and the new 
value of N  is chosen to be 36. Applying Algorithm A 
with N=36, the optimal values of t∆  and N t⋅∆  are 
found to be 0.0279 (sec.) and 1.0044 (sec.), respectively, 
and the angular velocities corresponding to the 
time-optimal movement are shown in Fig. 3. 
B  Experimental Example 
To check the validity of the above simulation and the 
feasibility of the proposed method, the angular velocities 
1 2( ), ( ),t tω ω and 3 ( )tω  shown in Fig. 3 are applied to 
the omni-directional mobile robot. The experimental 
results are shown in Fig. 4, from which one can find that 
the mobile robot is driven very closely to the desired final 
configuration. Both the values of ( )w finalx N x− and 
( )w finaly N y−  are less than 10 cm and the value of 
( ) finalNφ φ− is less than 5 .D  Deviation between 
( ( ), ( ), ( ))w wx N y N Nφ  and ( , , )final final finalx y φ  may be 
caused by factors such as discretization accuracy, wheel 
slippage, surface roughness, and so on. 
 
 
Table 1 
A set of infeasible angular velocities corresponding to 11N =     
and 0.2 (sec).t∆ =  The conditions in (25) and (26) are satisfied 
while the constraints in (27) are violated. 
i    1 ( )iω    2 ( )iω  3 ( )iω  
0 22.315 -9.177  6.569 
1 19.116 -11.101 11.691 
2 14.900 -11.592 16.399 
3 10.010 -10.613 20.310 
4 4.841 -8.242 23.108 
5 -0.189 -4.671 24.566 
6 -4.671 -0.189 24.566 
7 -8.242 4.841 23.108 
8 -10.613 10.010 20.310 
9 -11.592 14.900 16.399 
10 -11.101 19.116 11.691 
 
 
Table 2 
A set of feasible angular velocities corresponding to 11N =  
and 0.5 (sec).t∆ =  The constraints in (25), (26), and (27) are all 
satisfied. 
i    1 ( )iω    2 ( )iω  3 ( )iω  
0 8.926 -3.6709 2.6275 
1 7.6463 -4.4402 4.6765 
2 5.9601 -4.6370 6.5594 
3 4.0039 -4.2452 8.1239 
4 1.9362 -3.2967 9.2430 
5 -0.0755 -1.8682 9.8262 
6 -1.8682 -0.0755 9.8262 
7 -3.2967 1.9362 9.2430 
8 -4.2452 4.0039 8.1239 
9 -4.6370 5.9601 6.5594 
10 -4.4402 7.6463 4.6765 
 
0 0.5 1 1.5 2
-20
-15
-10
-5
0
5
10
15
20
Time (sec)
O
m
eg
a1
 (ra
d/
se
c)
 
0 0.5 1 1.5 2
-20
-15
-10
-5
0
5
10
15
20
Time (sec)
O
m
eg
a2
 (ra
d/
se
c)
0 0.5 1 1.5 2
0
2
4
6
8
10
12
14
16
18
20
Time (sec)
O
m
eg
a3
 (ra
d/
se
c)
 
Figure 3 
The angular velocities 
1 2 3
( ( ), ( ), ( ))t t tω ω ω  corresponding to the 
time-optimal movement. 
5
