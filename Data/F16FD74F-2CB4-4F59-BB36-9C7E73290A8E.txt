2. 技術描述 
2.1 OSGi 
OSGi (Open Service Gateway Initiative) 服務平台
依循各開放式標準、網路架構，並且提供跨作業系統的
服務提供，在 OSGi 服務平台上，各式設備可以相互分
享彼此的服務與資訊，創造出更富創意的情境。 
 
 
 
OSGi 主要由三種元件所組成：Framework、Bundle
和 Service；Framework 架構在 Java Virtual Machine 上，
Bundle則是執行於Framework上的應用程式，而Service
是 Bundle 所提供(Export)或所需(Import)的介面服務；
所以只要在依據 OSGi 的規則標準，所有 Bundle 裡的
服務都能很容易的被提供或使用。 
2.2 UPnP / DPWS 
通用隨插即用(UPnP)是由通用型隨插即用論壇
(UPnP™ Forum)提出的一套網路協定。UPnP 的目標是
使家庭網路中的各種裝置能夠相互無縫連線，並簡化相
關網路的操作。 
UPnP 使用各種公開技術進行檢測、描述、控制、
事件通知等功能。 
目前許多網路應用服務改以 XML 作為標準的描
述語言，XML-based service 成為應用開發的主流，
DPWS (Devices Profile for Web Service)的技術因此誕
生。DPWS 將 Web Service 的物件服務化的概念結合了
UPnP，以標準化的 XML 作為服務提供的基本語言，
整合各網路設備的服務。 
以上兩種網路協定都期望帶給使用者隨插即用的
便利性，達到類似網路 USB 概念的功用。 
2.3 Wireless sensor network 
無線感測網路(Wireless Sensor Network, WSN)是
分佈在環境之中的眾多 Sensor node 所組成的網路，每
個 Sensor node 都是由一個運算單元、傳輸單元、感測
單元，和電力單元所組成，這些 Sensor node 在佈署到
環境後會自己形成網路拓撲。WSN 近年來在技術上不
斷的突破創新外，服務應用也相繼不斷的被開發，實作
上也有成熟的規格，如 IEEE 802.15.4[4]和 Zigbee[5]。
WSN 相關應用不斷的出現，例如家庭安全監控、防盜
系統與情境感知。 
優質生活體驗屋亦佈設了許多無線感測模組，以
Zigbee 系列與 Tmote 無線感測模組為大宗，如何有效
管理 Sensor nodes 便是一個重要的議題。 
3. 研究成果 
本系統整合了平台、網路、人性化設備、核心技
術四方面的技術，分層架構如圖 3 所示。 
 
 
圖2. OSGi服務平台架構 
圖3. 系統軟體架構圖  
3.1 平台與網路 
本計畫選用 Knopflerfish OSGi 為服務整合平台並
架設在成功大學優質生活體驗屋的環境當中，平台對於
硬體設備會由 Base Driver 橋接，對上層的各種服務或
不同架構的 Middleware 則透過 Bundle 的方式分享在平
台之上，最後設計了一個集中控管的機制來進一步提昇
QoS，並且為新加入的設備或服務尋找、安裝驅動程式。 
而目前設計了三種銜接 OSGi 與家用設備、感測模
組的方式，一為符合 UPnP 規範之設備透過 UPnP base 
driver 橋接上 OSGi 平台，第二種是符合 DPWS 規範之
設備透過 DPWS base driver 來橋接，其他網路通訊協定
(Zigbee、Tmote、Bluetooth)的設備也由本計畫設計其
base driver 來橋接。 
3.2 設備 
本計畫主要使用無線感測網路之傳輸元件，開發
各式設備與橋接系統，並且研發 UPnP Converter，擴充
本系統的網路多樣化。 
3.2.1 人性化操控介面 
本的使用者介面除了提供一般的多媒體影音之
外，也可以透過它所提供的圖形介面去對家中已裝設
OctopusII 作為傳輸模組的家電做簡易性地操作，還可
經由本去觀看那些散佈在家中的 sensor 其目前的感測
資訊，接下來針對存在於本系統中的顯示頁面所具備的
功能做說明。 
(1) Home State︰使用者位置監控、各區域光溫濕度
偵測、UPnP 裝置狀態與操控、各區域感測器電量
與狀態回報。 
(2) Appliance︰無線遠端操控家中各項家電設備，包
含：各區域電燈、咖啡機、電磁爐、CD 音響等
等。 
參考文獻 為了有效的應用感測器的硬體資源，以及可以讓
感測器的功能具有擴充性，因此提出了 Packet 
Programming 的架構，燒錄方式是透過無線傳輸的方式
將帶有行為模式的 Script File傳送至所要更新的感測器
中，並且透過感測器內建的直譯器(Interpreter)進行解析
與更新，就可以不需要拆下感測節點也可更新節點的行
為，可以讓感測器除了以往的感測資料外，還具有群體
運算，以及擴充或修改功能的能力。 
 
[1] D. Marples and P. Kriens, “The Open Services 
Gateway Initiative: An Introductory Overview,” 
IEEE Communications Magazine (December 2001). 
[2] Microsoft Corp., Universal Plug and Play Device 
Architecture, v.1.0, http://www.upnp.org/download/U 
PNP_UnderstandingUPNP.doc (June, 2000). 
[3] Microsoft Corp., Devices Profile for Web Services, 
http://specs.xmlsoap.org/ws/2006/02/devprof/devices
profile.pdf  (February, 2006). 
 
[4] IEEE, IEEE 802.15 WPAN™ Task Group 4 (TG4), 
http://www.ieee802.org/15/pub/TG4.html 
[5] ZigBee Alliance, Wireless Control That Simply 
Works, http://www.zigbee.org/en/index.asp 
圖5. Packet Programming線上燒錄  
4. 計畫自評 
本計畫開發了支援數位生活之家控服務整合平
台，整合了不同的技術(OSGi、UPnP、DPWS、WSN)，
利用這些技術開發相關設備與服務，並應用於成功大學
優質生活體驗屋之中；未來更可發展到其他網路設備服
務整合的領域上。此研究極具前瞻性，國外亦有許多學
者及企業投入此領域研究。在成果方面，目前除了積極
開發與實作系統之外，已經數篇論文發表與專利申請
中。 
將來持續針對系統問定性與多個服務之間決策機
制進行研究，並將系統擴大至可以進行多人服務的規
模。 
5. 
目次 
一、目的 ..................................................... 3 
二、過程 ......................................................5 
三、心得 ......................................................6 
四、建議事項 ..................................................7 
五、附錄 ..................................................... 8 
2 
local industries in Shenzhen)等。活動的這幾天，大會提供了許多動態交流與回饋
的機會，同時也讓與會者接觸與了解無線網路技術等。整個會議由individual 
mini-conferences 所組成。今年參加的與會者眾多，我也有機會認識一些在無線
網路與通訊技術各方面的專家。在活動的數天裏，每天都有之parallel sessions、
而在special events方面則有technical group meetings提供給member與nonmember參
與的機會、同時還有Technical Forum、Tutorial Presentation、Exhibition等。 
 
4 
 三、 心得 
我個人對於本次研習活動收穫良多，不僅與專家有直接的動態交流與學習的
機會，同時也讓與會者接觸與了解目前在無線通訊與網路方面最先進的技術與發
展。尤其我個人全程參加本會議，聆聽來自各地學者專家發表與報告他們的論
文，自是收穫良多。我個人認為要改良無線通訊與網路之技術，需從通訊軟體與
硬體雙管齊下，因此這也是一個值得研究與探討的領域。 
從此次大會的進行，可以發現議程委員與工作人員都非常用心與投入。時間
的安排雖然稍嫌緊湊，在四天內必須進行所有的演講、學術論文報告、與學術交
流活動，以至於 sessions 的開始時間常常延遲，但是整體而言，大會可說是非常
成功。 
在此國際會議場合，見到不少國際人士。交談以中文與英語為主，進行的非
常融洽。我個人也因此認識許多的學者，有助於開拓視野，增加不少學術交流的
機會。個人在參加此會議得以有機會認識 Wireless Networks and Communications 
Technologies 方面的專家，映證學術與實際的關聯，應可說是我參加這次活動最
大的收穫。 
6 
8 
 
五、 附錄 
1. 攜回資料名稱及內容 
攜回「Proceedings of the International Conference on Advanced Infocomm 
Technologies」論文集一本，以供未來研讀參考。此外，帶回幾個國際會議與期刊
的 Call for paper 簡章，以供參考。 
2. 發表論文如附件 
 
traffic priority. 
Although WiMAX specifies four types of services, how to design 
a scheduling algorithm is an open issue. Manufacturers can 
implement their own scheduling algorithm depending on their 
particular requirements. In literature, many scheduling algorithms 
have been proposed. Wongthavarawat and Ganz have proposed a 
hierarchical structure with strict priority [2]. Another one-level 
scheduling mechanism which is based conceptually on the round-
robin approach has been proposed [3]. In this paper, we propose a 
fairness-based scheduling algorithm and an efficient system 
architecture. 
Let’s consider the below scenario. There are a business building 
and a community. Due to the business requirements, employees in 
the business building process large amount of data everyday. The 
president signs a contract with an ISP, pays a lot of money, and 
wishes to get sufficient bandwidth for his building. The residents 
in the community pay less money and should get less bandwidth 
individually. However, residents in the community share their 
lives with others all over the world through YouTube, or watch 
on-line streaming movies. If the bandwidth request of the 
community is as near as the bandwidth request of the business 
building, the community will obtain more priority than the 
business because of the strict priority strategy. This is an “unfair” 
situation to the business building. In order to prevent unfair 
allocations of the total bandwidth and starvations to low priority 
services, we propose a new scheduling algorithm in this paper. 
This paper is organized as follows. Section 2 presents related 
work. Section 3 is our system architecture and scheduling 
algorithm. Section 4 describes the simulation environment and the 
simulation results. Section 5 concludes the article. 
2. RELATED WORK 
In this section, we will briefly introduce some of IEEE 802.16 
scheduling algorithms. 
2.1 Hierarchical Structure Based 
Wongthavarawat and Ganz have proposed a hierarchical structure 
with strict priority [2]. They introduce a scheduling algorithm and 
admission control policy for IEEE 802.16 broadband wireless 
access standard. The proposed solution, which is practical and 
compatible to the IEEE 802.16 standard, provides QoS support to 
different traffic classes.Bandwidth allocation per flow follows 
strict priority, from highest to lowest: UGS, rtPS, nrtPS and BE. 
Scheduler allocates fixed bandwidth (fixed time duration) to UGS 
connections based on their fixed bandwidth requirement. This 
policy is determined by the IEEE 802.16 standard. Earliest 
deadline first (EDF) service discipline is applied to rtPS service 
flow. Packets with earliest deadline will be scheduled first. And 
weight fair queue (WFQ) service discipline is applied to nrtPS 
service flow. It schedules nrtPS packets based on the weight of 
the connection (ratio between the connection’s nrtPS average data 
rate and total nrtPS average data rates). Finally, the remaining 
bandwidth is equally allocated to each BE connection. 
The disadvantage of the strict priority service discipline is that 
higher priority connections can starve the bandwidth request of 
lower priority connections. 
2.2 Round-Robin Based 
Another simple scheduling mechanism is based conceptually on 
the round-robin (RR) approach. A simpler solution is better, 
because there is not much time to do the scheduling decision. It is 
a simple and efficient solution for the WiMAX base station that is 
capable of allocating slots based on the QoS requirements, 
bandwidth request sizes, and the WiMAX networkParameters [3]. 
There are four distinct service classes defined by the 802.16d 
specification: UGS, rtPS, nrtPS and BE. Then depending on the 
service class the number of slots for each connection is calculated 
differently. 
z Allocate bandwidth to UGS 
z Allocate bandwidth to rtPS under QOS minimum 
requirement 
z Allocate bandwidth to nrtPS under QOS 
minimum requirement 
z Allocate bandwidth to BE 
z If the bandwidth remains finally, allocate to 
needed service. 
In this paper, the proposed WiMAX scheduling comprises three 
major stages: 
1. Allocation of the minimum number of slots. 
At this stage, the task of the BS is to calculate theminimum 
number of slots for each connection to ensure the basic QoS 
requirements. 
2. Allocation of unused slots. 
At this stage, the BS has to assign free slots to some connections 
to avoid non-work-conserving behavior. 
3. Order of slots. 
At this stage, the BS has to select the order of slots to improve the 
provisioning of the QoS guarantees. 
Although it is more efficiency then hierarchy, but it   still have 
chance to starve the bandwidth of lower priority connections.  
3. FAIRNESS-BASED SCHEDULING 
ALGORITHM   
The system architecture of the proposed fairness-based scheduling 
algorithm is shown in Figure 1. Compared to the system 
architecture proposed by many papers[4][5], the common part of 
these system architectures is that the BS and the SS have their 
scheduler individually. After initial ranging and registering to the 
BS, the SS sends its requests to the BS. The BS collects these 
requests from different SSs, and replies its scheduling decisions to 
the SSs through UL_MAP. If the polling strategy is used by the 
BS, the BS burdens these computing loads of uplinks and down 
links. Figure 1 shows our proposed system architecture. In order 
to reduce the computing load on the BS, the BS will separate its 
bandwidth to the SSs by the weighted fair scheduler. When the 
SSs get bandwidth on their own, they allocate their bandwidth to 
connections by the weighted value scheduler. 
 
3.2 Layer 2: Weighted Value Scheduler 
This layer mainly focuses on how a SS utilizes its bandwidth 
admitted by the BS. Our goal is to provide an adjustable weighted 
value scheduler which alleviates the starvations to low priority 
services and satisfies the QoS requirements of high priority 
services. 
Consider the SS has m services. Each service in the SS can be 
characterized by a pair (Vij, Rij) where V is the weighted value of 
the current service, and R is the number of requested time slots of 
the current service in a superframe. The index i indicates the 
current SS, and j indicates the current service. There is a weighted 
value table used by a weighted value scheduler inside each SS. In 
Table 1, there are four service types which have their own 
weighted value. Then we solve  where 
Sij means whether the service j is chosen in the super frame or not. 
If Sij is true, the j service is admitted by the SS, and gets its own 
time slots to transmit data. Besides of Si, the SS 
has  and  The 
weighted value scheduler will find a solution depending on the 
following rules: find the value of Si*ViT that is as large as 
possible when Si*RiT≦NSSSi’. 
1 2[ , ,..., ]i i i imS S S S=
1 2[ , ,..., ]i i i imV V V V= 1 2[ , ,..., ]i i i imR R R R=
Table 1. Weighted value table. 
Type Weighted value Vi
UGS VUGS
rtPS VrtPS
nrtPS VnrtPS
BE VBE
The SS can adjust the weighted value table dynamically to control 
the throughput of the whole system. The SS will set a large value 
of VUGS to satisfy the QoS requirements of UGS services. The 
SS can raise VrtPS to arise the selection opportunity of the rtPS 
services. The weighted value scheduler with high flexibility can 
justify the weighted value table to satisfy different requirements 
depending on environments. Manufacturers can implement their 
own weighted value table to achieve their requirement. The time 
complexity which the weighted value scheduler solves the 
problem is O(n*nsi) by using dynamic programming. However, 
the services of the SS vary constantly. Consider the cost and the 
efficiency, we suggest to develop a greedy algorithm or an 
approximate algorithm. Martello and Toth present some 
interesting and useful greedy algorithms and approximation 
algorithms in their book [8]. Of course, there are still a lot of 
suitable algorithms that can be applied to our weighted fair 
scheduler. 
By the proposed method upon, the SS with an adjustable weighted 
value scheduler will alleviate the starvation of low priority 
services and satisfy the QoS requirements to high priority services. 
4. EXPERIMENT EVALUATION  
4.1 Simulation Environment 
This section provides the few simulations and results for the 
proposed fairness-based scheduling algorithm. We adopt the 
WiMAX module for NS-2 simulator to simulate the proposed 
solution [9]. We implemented the scheduling mechanism in the 
WiMAX module, and do the several experiments on NS-2 
simulator. The system-specific parameters of IEEE 802.16 MAC 
protocol we used are shown in Table 1. The simulation scenario 
obtains one BS and one SS. The SS contains one UGS service 
flow, one rtPS service flow, three nrtPS service flows and three 
BE service flows. The simulation time persists for 60 seconds. 
Table 2. Parameters used in the IEEE 802.16 MAC layer. 
Parameters Value 
bandwidth of the BS 10 (Mbps) 
downlink / uplink ration 3 : 2 
no. of OFDMA symbol per 
frame 
49 
no. of OFDMA symbol per 
frame 
48 (data portion) 
packet size of service flow 200 (byte) 
service distribution of UGS 
service flow 
constant bit rate 
service distribution of rtPS 
service flow 
exponential distribution 
service distribution of nrtPS 
service flow 
normal distribution 
service distribution of BE 
service flow 
normal distribution 
simulation time 60 (seconds) 
 
In our simulations, we used a weighted function to construct the 
weighted table. There is a parameter key in the weighted function. 
The weighted function generates VUGS equal to key∞, VrtPS 
equal to key3, VnrtPS equal to key2 and VBE equal to key. To 
demonstrate the impact of the fairness-based scheduling algorithm, 
we used the value revenue which is the total weighted value of 
system throughput. Our algorithm is compared with strict UGS 
round-robin which always allocates bandwidth to UGS service 
flows, allocates bandwidth to rtPS service flows and nrtPS service 
flows by round-robin strategy, and allocates bandwidth to service 
flows BE if there is any usable bandwidth. 
4.2 Revenue Performance 
Figure 3 presents the system revenue performance under fairness-
based scheduling algorithm and strict UGS round-robin 
scheduling algorithm. Both scheduling algorithms served UGS 
service flows first due to the extremely large VUGS and strict 
UGS policy. However, the rtPS service flows having higher 
weighted value got more transmission opportunities than nrtPS 
service flows got. The higher key of weighted function cause 
more difference between VrtPS and VnrtPS result. This 
phenomenon can be easily discovered in Figure 3. In Figure 3, we 
can find that fairness-based scheduling algorithm has better 
revenue performance than strict UGS round-robin scheduling 
algorithm has. 
