To prevent from long latency delay, interleaving and non-interleaving scheduling are commonly used for 
VLSI architecture design. Interleaving scheduling structure requires  
cycles of system clock to compute complete octaves of k stages if boundary data processing is considered, 
where l  denotes the wavelet filter tap and N denotes the sampling points in a frame of input signals. 
Non-interleaving scheduling structure require  cycles of system clock to 
compute complete octaves of k stages if boundary data processing is considered. Based on parallel-to-serial 
conversion of boundary data manipulation, the latency can reduce to 
12)42)(12/(2 1
11 −++−+ ∑ = −+ kn nklN
∑∑ −== +−+ 201 22)12/( kn nkn nlN
klN )2( −+  [5]. 
In this paper, a new approach referred to as the 1-D non-recursive DPWT (NRDPWT) is presented for 
high octave decomposition. The 1-D NRDPWT using non-recursive filter for each stage can perform 
multi-stage decomposition in parallel and requires minimum computational overhead to obtain the octaves 
of coarse resolution levels. To compute complete octave of the kth stage, the 1-D NRDPWT needs 
 MC and  AC, while the 1-D RDPWT needs  MC 
and  AC. The MC and AC denote multiplication count and addition count, respectively. 
With these merits, the 1-D NRDPWT is well suitable for the PR application. 
kNllN 2/)2()1( −−− )2/1)(1( kllN −− ∏ =⋅ kn nNl 1 )2/(2
∏ =⋅− kn nNl 1 )2/()1(2
The main disadvantage inherent in the 1-D NRDPWT is that the non-recursive filter tap will increase 
dramatically as the decomposition stage increases. This filter tap growth effect is a dike that prevents from 
the direct implementation of the 1-D NRDPWT because of a great of multiplier requirement. By applying 
the relationship between the filter tap and the number of boundary points, a segment accumulation algorithm 
(SAA) is developed to overcome this filter-tap-growing problem. The SAA using  multipliers for high 
octave decomposition is an alternative to the folding method, but without increasing latency.  
1−l
To overcome word length growth problem, a reversible round-off linear transformation (RROLT) theorem 
is developed for determining the optimal word length of non-recursive filter coefficients. The RROLT can 
guarantee the perfect reconstruction result when the filtering is performed in the fixed integer format. Based 
on the RROLT, two experiments are designed for finite precision performance analysis. In the first 
experiment, 8-bit random data are used for lossless and lossy analyses. The experimental result of lossless 
analysis shows that for the four different Daubechies’ filters, the maximum word length of 11 stages octaves 
can be restricted within 11 bits. In the lossy analysis, the experimental result shows that 1-D NRDPWT 
performed with short word length can obtain much better computation accuracy than the 1-D RDPWT. The 
second experiment is an application-oriented analysis that using 160 ultrasonic breast lesion images as the 
test patterns. The purpose of this analysis is to determine the optimal word length of filter coefficients for the 
feature extractor design. In this analysis, the octave coefficients of the 6th and 7th stages are desired for the 
discrimination of benign and malignant breast lesions. The experimental result shows that the maximum 
word length required for the non-recursive filter coefficient representation is only five bits. This paper is a 
generalized work of [6] in which a specific SAA-based architecture is developed. 
 
II. THE DYNAMIC SAA-BASED 1-D NON-RECURSIVE DPWT 
In this section, the 1-D NRDPWT will be derived from 1-D RDPWT in the matrix form simply. By a 
quantitative analysis of the relationship between non-recursive filters and boundary data, a segment 
accumulation algorithm (SAA) is proposed to overcome the filter-tap-growing problem in the 1-D NRDPWT. 
Also a dynamic model for the description of data movement schedule is developed for the SAA 
implementation. The bases used in this paper are orthogonal wavelet functions that generally result in the 
same taps for both low-pass and high-pass filters.  
Given a positive integer , let  be the original sampling data of a finite 
1-D signal with . For , let  and  denote two vectors consisted of the low band 
and high band octaves of the kth stage with 
J [ ]1[ , ],1[ ],0[s −= Nsss JJJJ L ]
JN 2= Jj <≤0 js jd
jJk −= , respectively. The two vectors  and  
correspond to the projection of the 1-D signal onto the finite-dimensional multiresolution approximation 
js jd
 ~  2  ~
should be zero. The high band octaves of the kth stage can be obtained by  
∑−
= +
−+= 1
0
1
)( )1(] [
q
i
m
k
ij ipThsegmd  for , and  1,,0
)( −−= kk NBNm L ∑
−
+ −+=
1
= 1
)( )1(] [
q
m
k
ibj ipThsegmd
0i
b
,              (8) )()( kn
k
n bditd +=
for , and , 1,,)( −−= kkkb NNBNm L )( , ,1 kNBn L=
where denote the kth stage octaves refers to the boundary data , ,  and 
 denote the intermediate data and boundary data, alternatively. For each frame, both  and 
 are defined by 
bm )( knbd kk NN 2/= )(knitd
)(
 
k
nbd
)(k
nitd
)(
 
k
nbd
∑−
= −
−+= nq
i
m
k
i
k
n ipThsegitd b
1
)(
1
)( )1( , and .      (9) ∑
= −+−
−= n
i
i
k
inq
k
n Thsegbd
1
)(
1
)( )1(
where , and  1,,)( −−= kkkb NNBNm L )( , ,1 kNBn L=
Equations (7)-(9) are called the dynamic SAA model. Note that the low band octaves can be also obtained by 
replacing  with . However, for PR application, high band octaves will be preferred.  )(knHFC
)(k
nLFC
According to the data structure of Table 1, the four values , , and 
 are zero. This implies that in fact, the 6th octave , 
)316()6(4 +⋅a )317()6(4 +⋅a )318()6(4 +⋅a
)319()6(4 +⋅a ][6 md 27  to0=m , can be obtained at 
. For convenience, let . The four boundary data , , can 
be derived by . 
319+=Tt uNT =0 ][6 bmd 31 and 30, 29, 28, =bm
)6(
27
)6(
276 ][ −− += mmb bditdmd
 
III. The Saa-Based Architectures For The 1-D NonRecursive Discrete Periodized Wavelet 
Transform  
The SAA is an alterative approach using minimum computational resources to perform 1-D p-shift operator 
correlation process. The SAA treats the sums of a sequence of  data as the elements for generating 
the kth stage octaves as well as the intermediate data  and boundary data . The dynamic SAA 
model translates the SAA into a parallel-pipeline computation structure to generate and accumulate the 
elements of  and also reveal the data movement schedule for facilitating hardware design. In this 
section, the computation of the dynamic SAA model is analyzed for VLSI components and architectures 
design. From (12)-(14), it is obvious that the dynamic SAA model will consist of four elementary data 
processing functions: 1) the generation of , 2) the accumulation of  for deriving , 
3) the accumulation of  for deriving non-boundary octaves as well as the intermediate data 
, and 4) boundary data  processing. The function data  obtain by the original sampling 
data and the filter coefficient product. The non-recursive filter coefficients expanded by the recursive filter 
coefficients, the filter tap will increase along with the decomposition stages, this phenomenon will cause in 
the hardware design not to be easy to realize. To overcome the problem, by way of the SAA analysis, the 
filer coefficients could be cut the filter tap into q segments, every segment contain p coefficients, therefore 
the filter coefficients depositing correspondence to the q ring shifting registers and every register length is p. 
The function data  could be product for every system clock. To generate function data , q 
devices of cyclic-shifting registers (CSR) are utilized to save the non-recursive filter coefficients. The CSR 
device is a simple circuit consisted of p circular shifting registers. Driven by the system clock, the filter 
coefficients can be cyclically shifted in the CSR device. For the example (
)()( ta kx
)(k
nitd
)(k
nbd
)()( thseg ki
)()( ta kx )(
)( ta kx )(
)( thseg ki
)()( thseg ki
)(k
nitd
)(k
nbd )(
)( ta kx
)()( ta kx )(
)( ta kx
8=l , ), the filter coefficients 
arranged is showed in Table. 1. and the logic circuit diagram of  generator is depicted in Fig. 1. in 
which for each system clock cycle, every filter coefficients will be cyclically shifted in upward direction. 
The segment data  obtain by accumulate the function data . To generate the elements of 
, , the second data processing function requires q adders and q registers R1 
constructed in self ring structure for accumulating the data of . Furthermore, q registers R2 are 
utilized to save the segment data . The registers R1 accumulate the function data  as 
segment data  and transmit the segment data  to registers R2 for each p cycle of the 
system clock. For computing each  element, the dynamic SAA model requires a periodic control 
signal with  to clear the initial value for registers R1. The logic circuit diagram of  
2=k
)()( ta kx
)()( thseg ki )(
)( ta kx
)()( thseg ki 1- , ,0 qi L=
)()( ta kx
)()( thseg ki )(
)( ta kx
)()( thseg ki )(
)( thseg ki
)()( thseg ki
pperiod = )()( thseg ki
 ~  4  ~
