 I 
本結案報告摘錄部分研究論文，該論文已發表於 Journal of Network 
and Computer Applications [SCI,EI]。 
 
 
 
 
中文摘要 
 
近年來由於 P2P（Peer-to-Peer）技術發展十分迅速，越來越多人仰賴在網路上分享資源，
為了因應使用者人數增多的問題，目前大部分 P2P 的研究多著重在節點的延展性和查詢效
率，來解決節點數量增加與搜尋速度的問題。隨著資訊科技的進步，越來越多的資訊都放在
網路上，分享資源的種類也越來越複雜，例如分享的資源有可能是檔案（文字檔、音樂檔、
多媒體影音檔）、CPU 的計算能力、印表機的列印能力等等。可以預期的發展將會類似 World 
Wide Web 的情形，以後要找的資源不是太少，而是太多，而這類的研究以關鍵字作搜尋，搜
尋結果大多不是使用者所需要的資源，導致資源搜尋結果的正確性降低，找不到存在的資源
或是找到錯誤的資源，都會使得搜尋的結果無法滿足使用者的需求。因此本研究使用語意中
的資源描述架構（Resource Description Framework, RDF）來描述資源，將資源作分類，結合
新的 P2P 網路架構，來提升搜尋資源的正確性、搜尋速度和延展性。 
 
關鍵詞：P2P、語意、RDF、延展性 
 III 
目錄 
 
1. 前言 1 
2. 文獻探討 2 
2.1 非結構化網路拓樸之語意化 P2P 系統 ……………………………………………… 2 
2.1.1 Edutella ……………………………………………………………………………… 2 
2.1.2 Expertise ……………………………………………………………………………… 2 
2.1.3 ContextPeers ………………………………………………………………………… 3 
2.2 結構化網路拓樸之語意化 P2P 系統 ………………………………………………… 3 
2.2.1 RDFPeers  …………………………………………………………………………… 4 
2.2.2 R-Chord ……………………………………………………………………………… 6 
2.3 鬆散式結構化網路拓樸之語意化 P2P 系統 ………………………………………… 7 
2.3.1 以語意為基礎的 Super-peer 網路 ………………………………………………… 7 
2.3.2 SCS …………………………………………………………………………………… 8 
3. 研究方法 10 
3.1 採用之模擬器 ………………………………………………………………………… 10 
3.2 ML-Chord 之架構  ……………………………………………………………………… 11 
4. 結果與討論 13 
5. 結論 14 
6. 參考書目 15 
 2 
2. 文獻探討 
 
由於網路拓樸結構影響 P2P 系統的效能，我們以網路拓樸的結構來區分目前使用 RDF 作
為描述語言的相關研究並予以探討： 
 
2.1 非結構化網路拓樸之語意化 P2P 系統 
  
2.1.1 Edutella 
Edutella[21]將語意中的 RDF 使用在 Gnutella-likeP2P 網路拓樸中[24]，提升舊有的
Gnutella-like P2P 搜尋資源的準確性。由於 Gnutella-like 為非結構化的 P2P 網路拓樸，查詢時
使用 Edutella 查詢交換語言（Edutella Query Exchange Language, RDF-QEL-i）對鄰近的節點作
廣播查詢，並設定訊息轉傳次數，如果在鄰近節點找不到所需要的資料，則由鄰近節點將訊
息再轉傳至他們的鄰近節點，直到查詢到所需要的資料或超過事先設定的訊息轉傳次數，才
回傳成功或失敗的訊息。這樣的廣播方式除了產生許多不必要的傳輸訊息的問題之外，由於
設定了訊息轉傳次數，當節點數量多時，無法將查詢訊息傳達至全部的節點，因此不能保證
找得到已存在的資源，降低了網路的可延展性。 
 
2.1.2 Expertise 
Expertise[17]系統中的每一個節點把本身的知識庫（Knowledge Base）萃取出一份摘要，
該摘要稱為 Expertise，並將 Expertise 發出公告給其他節點。接收到 Expertise 的節點會核對本
身 Expertise 的相似度，達到標準值的節點則會接受該 Expertise 並儲存起來。當節點要查詢時，
以廣播的方式將查詢訊息傳遞給鄰近節點，為了加快查詢時內容比對的速度，接收到查詢訊
息的節點，將查詢的內容取出 Subject，先計算 Subject 和自己的 Expertise 之相似值，再比對
鄰近節點的 Expertise 之相似值，相似值越高者代表越符合查詢內容，因此只要比本身的相似
值高者，即轉傳給該鄰近節點，直到完全符合 Subject 內容，或者沒有節點可以傳遞為止，把
查詢結果回傳給最初查詢的節點。此方法雖然節省許多不必要傳輸訊息，但是節點增加時，
又必須大規模比對查詢，使整體效能降低，延展性差。在查詢時，若查詢節點與鄰近節點都
沒有連接相關查詢的節點時，則無法找到資源，因此不保證資源一定能被找到。 
 4 
N8
N1
N14
N21
N38
N42
N32
N48
N51
N56
K2
K37
 
 
 
 
2.2.1 RDFPeers 
RDFPeers[10,11]以 Chord 為架構，把 RDF 文件的每一個 Triple 儲存到三個節點中。圖 2.3
為 描 述 資 源 的 RDF 文 件 ， 文 件 中 有 <aaa:rdfpeers><aaa:name>"Eric Lu" 與
<aaa:rdfpeers><aaa:age>"35"二筆 Triple。RDFPeers 使用和節點代碼空間相同位元數的 SHA-1
雜湊函數，將每一筆 Triple 中的三個元素 Subject、Predicate 和 Object 各計算出雜湊值，如圖
2.4 中的<aaa:rdfpeers>值為 3、<$aaa:name>值為 11、<aaa:age>值為 6、"35"值為 12 和"Eric Lu" 
@prefix aaa: <http://www.cyut.edu/2005/08/aaa#> .
@prefix xmls: <http://www.w3.org/2001.XMLSchema#> .
<aaa:rdfpeers><aaa:name> "Eric Lu" .
<aaa:rdfpeers><aaa:age> "35" .
 
 
 
圖 2.2: Chord P2P 系統架構圖 
圖 2.3: RDF 文件描述資源 
 6 
2.2.2 R-Chord 
Chord
Underlying P2P Networks
Semantic Link NetworkResource Space Model
   
sim
 
seq
 re
f
 ref
 s
im
  
  
  
equ
 ref
seq
ref
nu
ll
re
f
sim   
 re
f
 null 
equ
Super Peer Super Peer
 
 
 
 
R-Chord[18]以語意為基礎的資源組織模式，由 P2P 語意連接網模組（P2P Semantic Link 
Network Mode, P2PSLN）、資源空間模組（Resource Space Model, RSM）和 Chord 協定所組成，
R-Chord 提供一個經由分類語意與相關語意聯集而成的語意視圖（View）。P2PSLN 模組由網
路底層的節點之間作語意關聯，所形成單一或多重語意的連接網。RSM 模組是一個多維度空
間類似知識網格（Knowledge Grid），R-Chord 選出能力佳的節點作為 Super-peer，每個
Super-peer 都管理相同類別的節點，節點與 Super-peer 將資源的索引儲存到 Super-peer 管理的
資源空間（Resource Space, RS）中，資源空間是一個多維度的儲存空間，類似知識網格
（Knowledge Grid），所有的資源空間組織成一個 RSM 模組。相鄰的 Super-peer 之間互相交
圖 2.5: R-Chord 系統架構圖 
 8 
2.3.2 SCS 
Semantic Context Space（SCS）[15]針對 ContextPeers 有節點延展性差和維護成本過高的
問題加以改善。SCS 將每一層語意群集（Semantic Cluster, SC）切割成多個群集（Cluster）。
如圖 2.7 中，語意群集 SC0 分成 C0、C1、C2 和 C3 四個群集。由於節點可以分享不同種類 
SC0
SC1
SC2
SC3SC4
SC5
SC6
SC7
C0
C1
C2
C3
C4
C6
C8
C9
C10
C11
C12
C14
C16
C17
C19
C18
C20
C22
C24
C25
C26
C28 N2
N3 N4
N5
N8
N7
N1
N6
 
 
 
的資源，SCS 選擇其中最主要類別將節點配置到一個語意群集當中的任一群集。其餘的類別，
則是把本身的資訊發佈到相關的語意群集中。每一個節點的路由資訊，包括了(1)內部路由資
訊，群集內的鄰近節點，群集內部使用廣播來傳遞訊息；(2)外部路由資訊，相鄰群集中的各
一個節點，使整個拓樸形成一個環狀架構，將所有的群集串連起來，以傳遞訊息；(3)捷徑
（Shortcut），在環形架構中，距離本身語意群集的四分之一與二分之一處的語意群集中，各
選擇一個節點作為捷徑，以加快訊息的傳遞。以圖 2.7 的節點 N1 為例，節點被配置到語意群
集 SC0 的群集 C0 中，其餘類別發佈於語意群集 SC1 與 SC6 中的節點 N5 與 N6。N1 的內部
路由資訊為群集 C0 中鄰近節點 N2，外部路由資訊為相鄰的二個群集 C0 與 C28 中的節點 N4
與 N3，以及捷徑為距離四分之一處的 SC2 中節點 N7 與二分之一處的 SC4 中節點 N8。 
查詢時，節點從路由資訊中找出最接近查詢的語意群集的節點，將訊息傳遞給該節點，
直到查詢訊息達到所查詢的語意群集，該語意群集中的每一個群集以廣播的方式查詢內部的
所有節點。SCS 與 ContextPeers 相較之下加快了搜尋效率與降低了維護成本，但是當群集切
圖 2.7: SCS 檔案分享系統架構圖 
 10 
3. 研究方法 
 
3.1 採用之模擬器 
 我們採用之模擬器為PeerSim[19]。根據Tools for Peer-to-Peer Network Simulation[1]這篇報
告，網路模擬器分成兩大類，一種是偏向底層網路協定的模擬；一種是偏向Application Routing
的模擬，Application Routing是架構在網路層 (Network Layer)之上的路由，其網路結構又稱為
overlay network。P2P協定大部分是屬於overlay network，因此我們將挑選一個overlay network
的模擬器。表 3.1是Tools for Peer-to-Peer Network Simulation整理出來的表格，對使用的程式
語言、已有的P2P協定、節點數上限還有可否進行分散式模擬列表比較。 
 
Simulator Language P2P Protocols Max Nodes 
Distributed 
Simulation 
Narses Java  None  600  No  
3LS Java  Gnutella  < 1,000  No  
NeuroGrid Java  
Gnutella, NeuroGrid, 
Pastry, FreeNet  
300,000  No  
PeerSim Java  
Collection of internally 
developed P2P models  
> 10^6  No  
PlanetSim Java Chord, Symphony > 10^5 No 
P2PSim C++  
Chord, Accordion, 
Koorde, Kelips, 
Tapestry, Kademlia.  
3,000  No  
Omnet++ C++/NED  None  1,000*  Yes  
NS2 C++/OTcl  Gnutella  N/A  Yes  
SSFNet 
Java/C++/
DML  
None  33,000  Yes  
 
以 PeerSim 最符合我們的需求，PeerSim 是由 Java 開發而成的 Overlay 模擬器，其核心架
構簡單且靈活，元件之間的耦合性低，對於模擬器功能的擴充以及模擬協定的撰寫比較沒有
太多的限制，由 Cycle-base engine 與 Event-base engine 兩種不同的引擎來驅動模擬，Cycle-base 
engine 的模擬方式為依序啟動每個節點當中的程序，這種作法可以模擬較多的節點數量(可以
到 10 的 6 次方)，而 Event-base engine 則是依事件的發生啟動節點的程序，效率比 Cycle-base 
engine 差一點，但是更貼近真實的情況，並且支援模擬傳輸層(Transport Layer)。  
PeerSim使用者必須寫一個設定檔來決定模擬時要使用哪些元件，也可以在設定檔當中宣
告變數與調整參數，方便控制自變數來觀察實驗結果。此外，模擬器本身具有很大的改良彈
表 3.1: Tools for P2P Network Simulation 
 
 12 
為了使節點能有效率的找尋到 BP，專門由 BP 所組成的一個 Chord 架構，稱為 BP 層（BP 
Layer），節點不需要從類別層中逐一詢問的方式來找尋 BP，能更有效率的從 BP 層中找到 BP。 
因此在這系統中，除了包含 T 個類別層之外，外加 1 個 BP 層，因而形成 T+1 個 Chord 的結
構。如圖 3.1 所示，在總類別數目為 4 的 ML-Chord 系統中，形成 5 個 Chord 的結構。 
 14 
和 ML-Chord 所花費的總成本。總節點數為 210，SCS 與 ML-Chord 的總類別數目為 24，時間
以 30 秒為單位，每個節點執行一次維護，每個節點的查詢次數分別為 0.25、0.5、0.75、1、
1.25 以及 1.5 次的情況下，來計算總成本。因此可得知，在總節點數目為 210 時，整個系統在
一個時間單位中，執行了 1,024 次的維護以及總查詢量分別為 256、512、768、1024、1280
和 1,536。總成本的實驗結果為圖 4.2，當總查詢量增加到約 300 次時，到達 SCS 與 ML-Chord
的平衡點（Break-Even Point）；查詢量再增加時，對於 ML-Chord 而言，SCS 低維護成本將不
再佔優勢。如果再把 n 個節點加入的成本一起計算，很明顯地我們的方法會更好。至於 Chord
與 SCS 則是在查詢量約 760 次時產生平衡點。 
15000
35000
55000
75000
95000
115000
135000
155000
175000
195000
256 512 768 1024 1280 1536
Number of lookups
N
u
m
b
e
r 
o
f 
m
e
s
s
a
g
e
s
ML-Chord
Chord
SCS
  
 
5. 結論 
 
 在本論文中，我們提出一個以 Chord 為基礎的 P2P 網路架構，結合 RDF 提升查詢的準確
度，並進一步利用 RDF 的機制將資源與節點作分類，形成多重的覆蓋網路。由於針對所需要
的類別來搜尋檔案，以縮小查詢範圍，來提高檔案搜尋的準確度。查詢範圍縮小了，只對相
關類別的節點進行路由，減少不必要的轉傳訊息，進而提升查詢效率。在實驗模擬的數據顯
示，本論文提出將資源與節點作分類的方法，加快了查詢效率、提高延展性以及提高系統的
穩定性等優勢，整體提升 P2P 網路在資源搜尋的效能。
圖4.2: 維護與搜尋的總成本分析 
