 2
},...,,{ 21 Ndiag λλλ=Λ  where iλ are the eigenvalues of R. 
Notably, {x(n)} are assumed to be stationary, so the input 
covariance matrix R is independent of the time n. The 
transformed tap weight vector and the transformed 
equalizer input vector are )()( nn Ucw =  and )()( nn Uxy = , 
respectively. Accordingly, the output of the equalizer can 
also be expressed as ( ) )()()()( njznznnnz IRH +== yw  in 
the transformed domain, where )n(zR  and )n(z I  are 
the real and imaginary parts of the equalizer output, 
respectively. The MMA, the SGA and the MSG-DDA are 
briefly described as follows. 
A. MultiModulus algorithm (MMA) 
The constant modulus algorithm (CMA) is one of the 
most widely used blind equalization algorithms. The CMA 
cost function is invariant to a phase rotation in the 
constellation, so consequently, the equalizer output signal 
constellation suffers from an arbitrary phase rotation. Oh 
and Chin [1], and Yang, Werner, and Dumont [2] proposed 
a modified CMA called the multimodulus algorithm 
(MMA), whose cost function is 
}])({[}])({[)()( 2,2
22
,2
2
IIRRIRMMA RnzERnzEnJnJJ −+−=+=   
                                          (1)                                        
where RR ,2  and IR ,2  are given by )}({
)}({
2
4
,2 naE
naE
R
R
R
R =  
and
)}({
)}({
2
4
,2 naE
naER
I
I
I = , in which )(naR  and )(naI  denote 
the real and imaginary parts of a(n), respectively. 
Decomposing the cost function of the MMA into the real 
and imaginary parts thus allows both the modulus and the 
phase of the equalizer output to be considered; therefore, 
joint blind equalization and carrier phase recovery may be 
simultaneously accomplished, eliminating the need for a 
rotator to perform separate constellation phase recovery in 
steady-state operation [1] – [3]. Analysis results in [3] 
indicate that the MMA alone is able to remove inter-symbol 
interference (ISI) and simultaneously correct the phase error, 
because it implicitly incorporates a phase-tracking loop, 
which automatically recovers carrier phase. Various 
computer simulations demonstrate that the MMA 
outperforms the CMA, and both algorithms require an 
almost identical computational cost. The transformed 
tap-weight vector of the MMA is updated using the 
stochastic gradient descent algorithm 
)()()()1( * nnenn m yww ⋅⋅−=+ μ        (2) 
where )()()( ,, nejnene ImRmm ⋅+=  in which 
))(()()( ,2
2
, RRRRm Rnznzne −⋅=  and ))(()()( ,22, IIIIm Rnznzne −⋅= .  
Notably, 2,2,2 RRR IR ==  for QAM systems with a 
symmetric constellation and their values can be computed 
to be 1.0, 8.2, and 37 for 4-QAM, 16-QAM, and 64-QAM, 
respectively. 
B. Stop-And-Go Algorithm (SGA) 
The stop-and-go algorithm [4] employs the 
decision-directed (DD) error signal given by 
)]n(z[Q)n(z)n(je)n(e)n(e I,ddR,dddd −=+=  and 
adapts the coefficients when the reliability of the decision 
device is judged to be adequate, where Q(.) is the decision 
function. This algorithm utilizes the Godard (or Sato) error 
to control the adaptation of the DD algorithm and has been 
demonstrated to improve the blind convergence 
characteristics of the conventional algorithm [5]. The SGA 
utilizing the Sato-like error has been analyzed in [7]. 
C.MultiModulus Stop-and-Go Decision-Directed Algorithm 
(MSG-DDA) 
An algorithm, MSG-DDA, is now proposed by 
combining the MMA with the SGA. The MSG-DDA adapts 
the coefficients only when the sign of the DD error, 
)n(edd , is the same as that  of the MMA error, )n(em . 
The real and imaginary parts of the error signal for the 
MSG-DDA are given by 
 IRfornenfne ddmsg ,),()()( ,, == γγγγ , where 
{ } { }
⎩⎨
⎧ ==
otherwise
neneif
nf RmRddR 0
)(sgn)(sgn1
)( ,,  and 
{ } { }
⎩⎨
⎧ ==
otherwise
neneif
nf ImIddI 0
)(sgn)(sgn1
)( ,,                
are two binary-valued flags that determine whether 
coefficients will be adapted. Replacing )n(em  in (2) by 
)n(je)n(e)n(e I,msgR,msgmsg +=  and separately 
considering the real and imaginary parts allows (2) to be 
given by 
 { } { })1(Im)1(Re +++ njn ww { } { })(Im)(Re njn ww +=  
{ })]()([)]()([ ,, njnnjene IRImsgRmsg yy +⋅−⋅−μ  
Algebraic manipulation yields the following MSG-DDA: 
{ } { })(Re)1(Re nn ww =+  
)]()()()()()([ ,, nnenfnnenf IIddIRRddR yy ⋅⋅+⋅⋅⋅−μ  and 
{ } { })(Im)1(Im nn ww =+  
)]()()()()()([ ,, nnenfnnenf RIddIIRddR yy ⋅⋅−⋅⋅⋅−μ  
Computer simulations indicate that the MSG-DDA can 
markedly outperform both the MMA and the SGA. To the 
authors’ knowledge, the MSG-DDA is probably one of the 
best T-spaced blind equalizers in terms of both the rate of 
 4
)(
)(
)()}(|)({
2
2
2
n
n
nnznVAR
z
y σ
Φ
σy −= , where each element of 
 2)(nΦ  is the magnitude square of each corresponding 
element of )(nΦ . 
  The output MSE in (4) is computed using (6) and (7) by 
first computing )}()({ * nenyE k , )}()()({ ** nenynwE kk , and 
})()({
2*2 nenyE k ⋅ . )}()({ * nenyE k , where )]([)( nzene ≡ , 
is determined by first computing 
)}(),(|)()({ * nndnenE wy  
)}(),(|)](|)([)({ * nndnznEneE wy⋅=  
)}(),(|)]()([
)(
)(
)()({
2
* nndnnz
n
nnneE z
z
y w
Φ
μ ⎪⎭
⎪⎬
⎫
⎪⎩
⎪⎨
⎧ −+⋅= μσ
)(
)(
)()()(
)(
)()()( *1232
*
1 nθn
nnnθ
n
nnθn
z
z
z
y ⋅⋅−⋅+⋅= σ
μ
σ
ΦΦ
μ , where 
)}(),(|)({)( **1 nndneEnθ w= and
)}(),(|)()({)( *3 nndnenzEnθ w= . Averaging 
)}(),(|)()({ * nndnenE wy  over the conditioning variables 
yields )}](),(|)()({[)}()({ ** nndnenEEnenE wyy =  
02
*
1 )(
)()]()([ B
n
nnndE
z
⋅+⋅= σθ
CM
η , where 
)}()({)()}({ *130 nθndEnpnθEB ⋅−= . 
Consequently,
[ ]
02
*
1
*
)(
)(
)]()([)}()({ B
n
n
nndEnenyE
z
k
kk ⋅+⋅= σθη
CM
, k= 
0,…,N-1. Similarly, based on the assumption (d) such that 
w(n) is independent of y(n), 
02
*
*
1
***
)(
)}()({
)]()([)()}()()({ B
n
nwnE
nndEnMnenynwE
z
kk
kkkk ⋅Φ+⋅⋅= σθη
, 
k = 0,…,N-1, and 
[ ]
34
2
22
*
1
2*2
)(
})({
)(
)(
Re2})()({ B
n
nE
B
n
n
BnenyE
z
k
z
kk
k ⋅Φ+⎪⎭
⎪⎬⎫⎪⎩
⎪⎨⎧ ⋅⋅+=⋅ σσ
ηCM , 
k = 0,…,N-1, can be shown, where 
)}()({)}({ 2
22
21 nndEnECB kkk θηθ ⋅+= , 
)}()({)()}()({ 2
2
4
*
2 nndEnpnndEB θθ ⋅⋅−= , and 
)}]()({)(Re[2)}({ 4
**
53 nndEnpnEB θθ −=  
)}({})()({)( 2
2
2
22 nEnndEnp z θσθ −⋅⋅+  
 in which )}(),(|)({)(
2*
2 nndneEnθ w= ,   
)}(),(|)()({)( 24 nndnenzEnθ w= and 
)}(),(|)()({)( 225 nndnenzEnθ w= . Notably, )(nθi , where i 
= 1, 2, 3, 4, 5 are functions of the random variable d(n) and 
therefore are themselves random variables. Also,  iB , i = 
0, 1, 2, 3 are all ensemble-average results for each iteration, 
n. 
A. The MMA Output MSE Trajectory. 
The MMA output MSE trajectory can be obtained 
from (4), (6), and (7) by setting e(n) in (6) and (7) to  
)()()( ,, nejnene ImRmm ⋅+= . Now, )n(θi , where i = 1, 2, 
3, 4, 5 can be determined based on assumption (b), such 
that )()()( njznznz IR +=  conditioned on both d(n) and 
w(n) is allowed to be a Gaussian random variable with 
mean and variance given by == )()](),(|)([ nnndnzE zμw  
)()()](),(|)([)](),(|)([ njnnndnzEjnndnzE IRIR μμ +=⋅+ ww
and 
)](),(|)([
2
1)](),(|)([)](),(|)([ nndnzVARnndnzVARnndnzVAR IR www ==
)()(
2
1 22 nnz σσ == , respectively, where )(nzμ  can be 
computed using )()()( npndnz =μ , and  
)()}(),(|)({ 2 nnndnzVAR zσ=w  can be computed to be 
22
1
0
2 )(})({)()( ηM nndEnn Hk
N
k
kz −Γ=∑−
=
λσ  
∑−
=
−Γ⋅+
1
0
222 ))()((})({
N
i
kii nMnndE η  [7]. 
Consequently, )}(),(|)({)(1 nndneEnθ m w≡  can be 
computed to be  
)}(),(|)({)(1 nndneEnθ m w≡  
)](),(|))(()([)](),(|))(()([ 2
2
2
2 nndRnznzjEnndRnznzE IIRR ww −⋅+−⋅=
)(}
)(2
)]()([exp{
)(2
1])()([ 2
2
2
3 ndz
n
nnz
n
Rnznz RRRRR σ
μ
σπ
−−−= ∫∞∞−
)(}
)(2
)]()([exp{
)(2
1])()([ 2
2
2
3 ndz
n
nnz
n
Rnznzj IIIII σ
μ
σπ
−−−⋅+ ∫∞∞−
)]n()R)n(3()n([j)]n()R)n(3()n([ I2
23
IR2
23
R μσμμσμ −++−+=  
Computation of )n(θi  for i =2, 3, 4, 5 can be computed 
similarly, yielding the results summarized in Table II. 
B. The MSG-DDA Output MSE Trajectory 
The MSG-DDA output MSE can be obtained from  
(4), (6), and (7) by setting e(n) in (6) and (7) to  
)()()( ,, njenene ImsgRmsgmsg += , where  
)]([)(, nzsne RRmsg ≡ and )]([)(, nzsne IImsg ≡ , as depicted in  
Table I. )(nθi  for i = 1, 2, 3, 4, 5 must be evaluated to 
derive the output MSE trajectory in (4) for the MSG-DDA. 
For example, )(1 nθ  can be computed to be 
 6
 
Fig. 3.   The analytically computed MSE trajectories of 
MMA, SGA, and MSG-DDA 
 
 
Fig. 4.   Simulated and analytically computed 
MSE trajectories 
Table I 
MSG-DDA ERROR FOR SQUARE 16-QAM DATA CONSTELLATION 
WITH DATA LEVELS AT 1± AND 3±  
)()( nzxornzx IR ==  
Conditions s(x)
]22.83,.[
)3sgn())2.8(sgn(2 2
−≤≤−−≤
+=−−≤
xorxei
xxxandx       3x +
]01,.[
)1sgn())2.8(sgn(02 2
≤≤−
+=−≤<−
xei
xxxandx
     1x +
]10,.[
)1sgn())2.8(sgn(20 2
<<
−=−≤<
xei
xxxandx
       1x −
   
]2.823,.[
)3sgn())2.8(sgn(2 2
≤≤≥
−=−≥
xorxei
xxxandx  3x −
Table II 
COMPUTATION OF ( ) 1,2,3,4,5i n for iθ =  FOR MMA 
)]())(3()([)]())(3()([)( 2
23
2
23
1
nnnjnnnn
IIRR RR μσμμσμθ −++−+=
)]()(6)(15)())(12)(45(
)()2)(15()([)]()(6)(15
)())(12)(45()()2)(15()([)(
22
2
4
2
622
2
2
2
4
4
2
2622
2
4
2
6
22
2
2
2
44
2
26
2
nnnnnn
nnnnnn
nnnnnnn
RRRR
RRR
RRR
I
II
RRR
σσσμσσ
μσμσσσ
μσσμσμθ
+−++−
+−+++−+
+−+−+=
)]()()()([)](2
)(6))()()()(6())()([()(
332
2
422
2
244
3
nnnnjn
nnnnnnn
RIIR
IRIR
R
R
μμμμσ
σμμσμμθ
−+−
++−++=
))]()())(()(6)(15(
))()()()()()(12
)(45())()()()()(2)(15(
))()()()([())]()())((3
)(30)(105())()(())(20
)(105())()()(2)(21())()([()(
22
2
4
2
6
222
2
2
2
444
2
2
6622
2
4
2
6332
2
2
2
455
2
277
4
njnnnn
nnjnnn
nnnjnnn
nnjnnnjnn
nnnjnn
nnjnnnjnn
IR
RIIR
IRIR
RIIRIR
IR
IRIR
RR
RR
R
R
RRR
R
μμσσσ
μμμμσ
σμμμμσ
μμμμμμσ
σσμμσ
σμμσμμθ
++−+
++
−++−
++++
+−+++−
++−++=
 
))](2)(12)(30())()())((
)(12)(45())()())((2)(15())(
)()(([))]()())(()(6)(15(
)()())(12)(45(2))()(
)()()(2)(15())()()()([(
))](6)(60)(210())()())((6
)(90)(420())()()()(30
)(210())()()(2)(28())()([()(
42
2
6
2
82222
2
4
2
6442
2
46
622222
2
4
2
6
222
2
2
2
442
42
2
26262
42
2
6
2
82222
2
4
2
644
2
2
2
466
2
688
5
nnnnnn
nnnnnnn
nnnnnnn
nnnnnn
nnnnnnn
nnnnnn
nnnnn
nnnnnnn
RRR
RR
RR
RR
R
RRR
RRR
R
RI
RII
RIR
IRRI
IRRIIR
IR
IR
IRIR
σσσμμσ
σσμμσσμ
μσμμσσσ
μμσσμμ
μμσμμμμ
σσσμμσ
σσμμσ
σμμσμμθ
+−+++
−++−++
+++−
++−⋅+
+−+++
+−++
+−+++−
++−++=
Table III 
COMPUTATION OF 5,4,3,2,1)( =iforn
iθ  FOR MSG-DDA 
)]3,,3()3,2.8,2()1,1,0()1,0,1(
)3,2,2.8()3,3,([)]3,,3()3,2.8,2(
)1,1,0()1,0,1()3,2,2.8()3,3,([)(
01010101
01010101
01010101
1
∞+++−−+
−−−+−−−∞+∞++
+−−+−−−+−−−∞=
GGGG
GGGG
GGGG
IIII
IIRR
RRRR
j
nθ
)]3,,3()3,2.8,2()1,1,0()1,0,1(
)3,2,2.8()3,3,([)]3,,3()3,2.8,2(
)1,1,0()1,0,1()3,2,2.8()3,3,([)(
02020202
02020202
02020202
2
∞+++−−+
−−−+−−−∞+∞++
+−−+−−−+−−−∞=
GGGG
GGGG
GGGG
IIII
IIRR
RRRR
nθ
