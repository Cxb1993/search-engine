Therefore, the packet exchange mechanism between a 
vehicle and static destination is achieved. The 
communication cost of this approach is lower. We also 
propose a distributed scheme to discover the parking 
spaces efficiently in VANETs. Our scheme converts 
parking spaces information to a rough spatial 
distribution and have less data size to be able to 
transfer in VANETs and cost less overhead. In the 
second year, we first propose a distributed taxi 
hailing protocol in VANET. It can truly reduce fuel 
cost and the waiting time of passengers. In the other 
hand, we propose a hierarchical location service 
system that provides a low-cost and rapid location 
query. In the third year, we focus on designing a 
reliable routing protocol that extends the lifetime 
of the communication links between source vehicle and 
destination vehicle in VANETs with assistance of 
RSUs. This scheme includes vehicle registration, 
finding the location of destination vehicle and the 
handover maintenance. It considers the communication 
interaction between vehicles and RSUs. The proposed 
protocol can achieve low communication overhead and 
provide high packet delivery ratio between source and 
destination vehicle. 
英文關鍵詞： Vehicular Ad hoc Networks (VANETs), packet routing 
protocol, virtual landmark, Information 
dissemination, parking space, distributed taxi 
hailing schemes, wireless communications, location 
service, handover 
 
I 
 
目錄 
中文摘要 ............................................................................................................................................... II 
Abstract ................................................................................................................................................ III 
1. Introduction ........................................................................................................................................ 1 
2. The Research Achievement ................................................................................................................ 1 
2.1 The Research Achievement of the First Year ........................................................................... 1 
A. Virtual Landmark assisted routing protocol in Vehicular Ad hoc Networks........................ 1 
B. Parking Spaces Dissemination Scheme in Vehicular Ad hoc Networks .............................. 4 
2.2 The Research Achievement of the Second Year ...................................................................... 8 
A. Distributed Taxi Hailing Protocol in Vehicular Ad-Hoc Networks...................................... 8 
B. Region-based Hierarchical Location Service with Road-adapted Grids for Vehicular 
Networks ................................................................................................................................. 13 
2.3The Research Achievement of the Third Year ........................................................................ 20 
A. Distributed Routing Protocol and Handover Schemes in Hybrid VANETs ....................... 20 
3. Conclusion ....................................................................................................................................... 31 
 
 
  
III 
 
Abstract 
This report is a sub-project of a three-year integrated project. The main purpose of the 
integrated project is to develop and implement a telematics by utilizing wireless communication 
technologies to provide drivers a comfortable and safety driving environments. We aim at designing 
network layer protocols under Vehicle-to-Vehicle framework of Vehicular Ad hoc Networks. In 
addition, we also design and implement a driving safety service system to provide drivers related 
services. 
We have developed many protocol and algorithms in the last three years for this sub-project. 
In the first year of the sub-project, we proposed a virtual landmarks-based approach for packet 
route in VANETs. Therefore, the packet exchange mechanism between a vehicle and static 
destination is achieved. The communication cost of this approach is lower. We also propose a 
distributed scheme to discover the parking spaces efficiently in VANETs. Our scheme converts 
parking spaces information to a rough spatial distribution and have less data size to be able to 
transfer in VANETs and cost less overhead. In the second year, we first propose a distributed taxi 
hailing protocol in VANET. It can truly reduce fuel cost and the waiting time of passengers. In the 
other hand, we propose a hierarchical location service system that provides a low-cost and rapid 
location query. In the third year, we focus on designing a reliable routing protocol that extends the 
lifetime of the communication links between source vehicle and destination vehicle in VANETs 
with assistance of RSUs. This scheme includes vehicle registration, finding the location of 
destination vehicle and the handover maintenance. It considers the communication interaction 
between vehicles and RSUs. The proposed protocol can achieve low communication overhead and 
provide high packet delivery ratio between source and destination vehicle. 
 
Keywords: Vehicular Ad hoc Networks (VANETs), packet routing protocol, virtual landmark, 
Information dissemination, parking space, distributed taxi hailing schemes, wireless 
communications, location service, handover 
 
2 
 
vehicles passing through them. Road segments with high average vehicle density rank higher).  
Packet delivery between a source vehicle and static destination is considered. Clearly, there 
are two main parts of our protocol: (1) the source vehicle sends a request packet to a static 
destination like a restaurant, and (2) the static destination sends a reply packet to the source vehicle. 
A simple example is used to introduce our protocol steps by steps. As a source vehicle S attempts to 
send a request packet to a static destination D, it determines a VL closest to it, say VS, and a VL 
closest to D, say VD. By the aid of Dijkstra’s algorithm, a minimum weighted path from VS to VD in 
VLM is determined. In order to choose a stable path, road segments with higher vehicle density 
have higher priority. 
Notice that the information of the routing path is not appended to the packet. Only the 
following VL on the routing path is recorded in the packet. In Fig. 2, there are 12 VLs on the 
routing path from S to D. When the packet arrives at VL i, it will be recorded VL i+1. The format 
of packet contains seven fields and is shown in Fig. 1. Type field records the packet type. There are 
three packet types: request, reply and notification. The source ID and source location fields record 
the ID and location of source vehicle S, respectively. The destination ID and destination location 
fields record the ID and location of the destination D, respectively. Previous forwarder location 
field records the location of previous vehicle forwarding the request packet. Next field records the 
position of the right next VL on the routing path. Clearly, the request packet will be forwarded to 
the VL recorded in Next field. 
When a packet arrives at the assigned VL, the forwarding vehicle (forwarder) determines the 
next VL on the path. In order to reduce the times of re-compute, the right next VL on the routing 
path is not recorded in Next field. Instead, the VL at the next turning point on the routing path is 
recorded. In Fig. 2, there are originally 12 VLs on the routing path. When the packet arrives at VL 
1 or VL 5, its Next field will become VL 5 or VL 11. Notice that by the simplification mentioned 
above, only four VLs are determined on the simplified path shown in Fig. 3. The routing path is a 
shortest path along the main roads with high traffic load.  
1 byte 4 bytes 8bytes 4 bytes 8 bytes 8 bytes 8 bytes 
Type Source ID 
Source 
location 
Destination 
ID 
Destination 
location 
Previous forwarder 
location 
Next 
Fig. 1. The format of request packet. 
 
Fig. 2. The routing path from S to D. 
 
Fig. 3. Simplified routing path from S to D 
4 
 
ID location direction forwarder location 
Fig. 5. The format of notification packet 
If a notification packet arrives at its destination location and cannot meet the corresponding 
reply packet, this notification packet will stay at the destination with a TTL time. The staying 
packet will be rebroadcasted by the vehicles until the TTL reach to 0. For example, in Fig. 6, the 
destination D sends a reply packet to source S with destination X after it received a request packet. 
We only show some fields of the notification packet and reply packet in Fig. 6. The fields from 
right to left of notification packet are: the destination, the moving direction of S, the latest location 
of S, and the source car ID. The reply packet fields from right to left are: the moving direction and 
destination of source vehicle S, and the source car ID. Assume that S takes a right turn in location Y. 
Then S will send a notification packet to the location X to inform its change of moving direction. 
Assume the reply packet and Notification-1 packet meet at location X. The source location and 
moving direction of the reply packet will be updated according to the Notification-1 packet. If S is 
taking another turn in the intersection Z, it will send Notification-2 to X to inform its current 
location and moving direction. The vehicles between intersections Y and Z may receive both the 
reply packet and Notification-2 packet and forward the updated reply packet to S. 
 
Fig. 6. S sends the notification-1 at position Y and the notification-2 at position Z 
Every notification packet will send to the reply packet at location X. Each vehicle at location 
X will update their notification packet information record which is stored in buffer by latest 
received notification packet. When the reply packet arrives at X, it can obtain the information about 
the latest source vehicle location and moving direction from notification packet. Therefore, the 
reply packet will use VLM to calculate a routing path formed by VLs and route to that location. 
While reply packet arrive that latest source vehicle location, it will forward along the moving 
direction recorded by notification packet to trace the source vehicle.  
B. Parking Spaces Dissemination Scheme in Vehicular Ad hoc Networks 
Our scheme consists of two parts: parking space dissemination scheme (PSD) and auxiliary 
communication overhead reduction scheme (COR). PSD is the fundamental part of our approach 
and COR is applied to PSD for reducing the communication overhead of PSD. 
(a) Parking Space Dissemination Scheme (PSD) 
In general, drivers far from their destination are interested in rough parking space information 
6 
 
level 3 zoom factor. Here an image compression technique, discrete cosine transform (DCT), is 
used to reserve the distribution of free parking space in a super grid and reduce the packet size and 
communication overhead.  
For ease of the following discussion, we assume that a super grid is composed of 8 × 8 grids.  
Each CH is assumed to have the ID of its own super grid. Each CH can receive a number of level 2 
packets within its super grid in a time period. If the number of new received level 2 packets is 
larger than a threshold NL2, the CH forms a level 3 packet by these level 2 packets. Here, NL2 is set 
to be smaller than 64 due to the restriction of TTLL2 or the existence of communication holes in a 
super grid. 
A matrix A is used to store the snapshot of a super grid with level 2 zoom factor. Each entry in 
matrix A denotes the number of free parking spaces in a grid (see Fig. 7). An entry of A is 0 if the 
level 2 packet of the corresponding grid is not received.  
 
Fig. 7. A matrix for recording the distribution of parking spaces in a super grid. 
In order to reduce communication overhead, the following steps is applied to A.  
Step 1: Normalize A. Assume that the size of each entry in matrix A is 8-bit (i.e., each grid can 
represent 0 to 255 number of free parking space. If more than 255 free parking spaces, it is 
recorded as 255). The value of each entry will be shifted to -128 to 127 after normalization (i.e., 
each entry minus 128) and then we get matrix B.  
Step 2: Apply two-dimensional DCT to matrix B to transform B into frequency domain. Each 
entry in matrix B will be transformed by formula (2). Then a new matrix C is obtained. By this step, 
the frequency spectrum of original matrix A is characterized by the value of every entry. 
 Cu,v = α(u)α(v)∑ ∑ Bx,ycos �π8 �x + 12�u� cos �π8 �y + 12� v�7y=07x=0  (2) 
Step 3: Quantization. After Step 2 , we need to a construct a quantization matrix Q. 
𝑄 =
⎣
⎢
⎢
⎢
⎢
⎢
⎢
⎡
16 11 10 16 24 40 51 6112 12 14 19 26 58 60 5514 13 16 24 40 57 69 5614 17 22 29 51 87 80 6218 22 37 56 68 109 103 7724 35 55 64 81 104 113 9249 64 78 87 103 121 120 10172 92 95 98 112 100 103 99 ⎦⎥⎥
⎥
⎥
⎥
⎥
⎤
 
Here, the quantization matrix will use the classic quantization matrix of JPEG which is used to 
8 
 
parking space distribution by sending level 2 packets. These CHs who receive more than NL2 level 
2 packets sends a level 3 packet. Clearly, each level 3 packet contains a CH’s local view of its 
super grid at a given time. In order to guarantee availability of level 3 packets for drivers far apart 
their queried location, level 3 packets should be disseminated far enough, which result in heavy 
communication overhead. 
For the purpose of reducing communication overhead, an adaptive scheme, called COR 
scheme, is proposed. The main idea of COR scheme is to suppress the dissemination of packets 
which are relatively incorrect. A level 3 packet is called to be relatively incorrect if there exists a 
level 3 packet which is formed from more level 2 packets or has newer level 2 packets. The detail 
of COR scheme is described below. Firstly, two additional items are added into a level 3 packet: 
total source number (TSN) and average arrival time (AAT), where TSN denotes the number of level 
2 packets aggregated in the level 3 packet and AAT is the average arrival time of level 2 packets 
aggregated in the level 3 packet. When a certain CH receives a level 3 packet, the CH regards the 
packet to be relatively accurate if the TSN of the received packet is more than or the same as that of 
the CH’s previous level 3 packet, or the CH’s AAT is smaller. If the received packet is relatively 
accurate, the CH reduces its level 3 packet broadcast frequency (i.e., double its broadcast period) 
and TTLL3. If a CH did not receive any relatively accurate level 3 packet during PL3 seconds, it 
regards its level 3 packet as relatively accurate. So a CH halves PL3 and increases TTLL3 by 1 
because that its information is the best version now. 
2.2 The Research Achievement of the Second Year 
In the second year, a distributed taxi hailing protocol in vehicular ad-hoc networks is proposed. 
This protocol efficiently decreases booking time, waiting time of passengers, driving distance from 
booked taxis to passenger and blocking time of taxis. Furthermore, we also design a region-based 
hierarchical location service with road-adapted grids for vehicular networks. The following is the 
detail description of our research achievement. 
A. Distributed Taxi Hailing Protocol in Vehicular Ad-Hoc Networks 
We propose a distributed taxi hailing protocol in VANET for urban areas. In this protocol, 
vehicles are assumed to be equipped with car computers, wireless transmission modules like 802.11, 
and GPS receivers, allowing car computers to calculate their coordinates or determine their location 
by matching the electronic maps. We also assume that it would be on main streets where taxi 
drivers pick up passengers or passengers wait for taxis. Since there is sufficient traffic volume on 
main streets, the connectivity of VANET is guaranteed. 
Our protocol consists of two parts: taxi booking and taxi de-blocking. The detail operation of 
these two parts will be present in the following. 
(a) Taxi Booking 
 Taxi booking is a three-way handshake protocol. Passengers who need to hail taxis use their 
handheld devices with wireless transmission modules to transmit a request message (REQ) via 
VANETs. If a vacant taxi receives this message, the driver will send a reply message (REP) back to 
10 
 
others.  
 Taxis changes from vacancy mode to contention mode when receiving REQ from passengers. 
According to traffic regulation like one-way traffic, prohibition of left turn or prohibition of U turn 
that are provided by the electronic maps, each taxi is able to determine the driving path and driving 
distance from present position to passengers. The determined driving distance is recorded in the 
Payload field of REP message. And the next intersection on the determined driving path is recorded 
in the Destination position field. Then the REP is forwarded for competing for passengers.  
 The Payload field of REP message consists of seven sub-fields. The Taxi ID field records the 
identification of taxi. The Taxi position field records the present position of taxi. The Driving 
distance field records the distance from taxi’s present position to passenger’s position, and the Last 
intersection position field records the position of last intersection that the message passed by. The 
definition of remaining three sub-fields is the same as that of REQ. 
 Recall that REP messages are transmitted along the determined driving paths. Hence, 
taxis/forwarders put next intersection on their determined driving paths in Destination position field. 
Next intersection on the driving path can be determined by the aid of the driving direction and the 
current position of taxis/forwarders. When a vehicle/taxi receives the REP message, it is called a 
receiver and competes for becoming a forwarder. Receivers calculate their back-off time and start 
to forward the REP message when back-off time is expired. Receivers drop received REP messages 
when receiving the same REP message before their back-off time is expired. Their back-off times 
are determined as follows. 
Case 1. Receivers are at or near the destination (records in the Destination field). If the distance 
from receiver to destination is short enough, e.g., less than d meters, then receiver is regarded as 
arriving at the destination and could forward the REP message to next destination (intersection). 
In such a case, back-off time Ws(dist) of receiver is defined in formula (5). Otherwise, the 
procedure will be described in the next paragraph. 
 Wb(dist) = (distls × α + rand_number) × Time_slot (5) 
where dist denotes the distance from receiver to destination (recorded in the Destination position 
field) and ls is a constant. Receivers modifies the REP messages they received: set the 
Destination position field to be the determined next intersection on the driving path and the Last 
intersection position field to be the current intersection (i.e., their current position). The REP will 
be sent out by the receiver whose back-off time Ws(dist) is expired first. If the sending task is 
successful, then the winner becomes a keeper, which keeps the taxi’s REP information at this 
intersection, to reduce the blocking time. Other receivers give up forwarding when receiving the 
same REP. 
Case 2. Receivers are not at or near the destination. Suppose that receivers is not near or at the 
destination (i.e., its distance to the destination position is larger than d meters), but closer to the 
destination than sender’s. Then the back-off time Wf(dist) of receiver could be calculated by the 
following formula: 
 Wf(dist) = Wb(dist) + Max_Ws (6) 
12 
 
 The format of STA is very similar with REP. This is because the main function of STA is to 
leave the track of REPs which have passed through intersections. The definition of the Taxi ID field, 
the Taxi position field, the Passenger ID field and the Moving distance field are the same with REP. 
The Position of intersection field is the position of intersection where the STA stays. Number of 
taxis field is the number of taxis demanded by passengers. If the value of Number of taxis is not 
zero, it means that the passenger needs more than one taxi, and the value decreases while REPs of 
different taxis have passed through. If the value of Number of taxis is zero, REPs with longer 
driving distances are prohibited to pass through (and REJ messages are sent back to taxis of these 
REPs).  
 Notice that, the life time of STA which stays at an intersection close to the passenger is longer 
than that of STA which is far apart from the passenger. The life time of STA is defined as follows: 
 Life_time = Max_Dist−distp
Tx_Range/2 × Max_Hop_Delay (10) 
where distp denotes the remaining driving distance to the passenger’s position. Max_Dist denotes 
the farthest driving distance of taxis that could receive the requests of passengers. Recall that 
Tx_Range/2 denotes the average distance between a forwarder and its successive forwarder. In 
order to guarantee that STA lives when REPs pass through the intersection to competing for the 
passenger recorded in STA, the life time of STA is the time of transmitting REPs of taxis which is 
farthest to the intersection. 
 For an intersection, at least one road passing through it is at red light, i.e., there are vehicles 
waiting for the red light. In our protocol, STA is kept by those taxis/vehicles which are waiting for 
the red light. When the keeper of the STA receives an REP which competes for the same passenger, 
then an REJ will be sent to the taxi of REP if the driving distance recorded in REP is longer than 
that of STA. Otherwise, the original STA terminate its life and the REP leaves a new STA. For 
example, in Fig. 8, the REP of taxi A passed through intersection 1 first and leaved a STA. After a 
while, the REP of taxi B arrives at this intersection and is compared with the STA of taxi A. Since 
left turn is prohibited at intersection 1, the driving distance of taxi A is longer than that of taxi B 
although REP of taxi A passes through intersection 1 first. So only the STA of taxi B is left at 
intersection 1. Then the keeper transmits a reject message (REJ) to taxi A by using the 
position-based forwarding scheme. 
 
Fig. 8. REP of taxi A passed through intersection 1 first 
 The REJ message includes the Taxi ID field, the Passenger ID field and the Passenger position 
field. Taxis who receive the REJ message return to the vacancy mode. When other vehicles 
14 
 
 Area Partition Procedure 
Generally, VANETs has a regional characteristic. For instance, a vehicle fleet must keep 
following in the same region and the vehicles using the same local freight transport system are 
working together. Due to this characteristic, we propose a proper and novel Road-adapted Grid 
partition method. This method collects packets locally in VANETs. Dividing a network into grids is 
a popular method for recent research. In these literatures, the network is divided into grids with 
longitude and latitude. As a result, the boundaries of grids may cut through buildings and shade 
trees. Therefore, the success rate of packet transmission may decrease. The main idea of our 
Road-adapted Grid partition method is to select the main artery to partition the network area into 
grids, i.e., boundaries of each grids are roads. Our area partition procedure is showed below: First, 
examine the whole digital map carefully and select all main arteries, like the big dots lines showed 
in Fig. 9. Second, we define the size of the grids as about 500m × 500m, where the communication 
range is 500m. Therefore, we have to reject some main artery which had already selected in step 
one or add other normal roads until size of the grids comply with our provision. The selected 
normal roads are showed with the gray small dots in Fig. 9. 
Road-adapted Grid partition method divides an area into grids adapted to roads; as a result, the 
boundaries of grids can avoid to be cut through buildings and shade trees. Therefore, our method 
increases the chance of success transmission indirectly. We assume the digital map is well 
partitioned in advance and loaded to every GPS.  
 
Fig. 9. A 2km × 2km region with 16 Road-adapted Grids. The big dots lines are selected main 
arteries and the small dots lines are normal roads. 
 Hierarchical Framework Model 
In order to deal with location update packets collection from a large number of grids, the 
network is provided with three hierarchies, Level 1 to Level 3. Each 500m × 500m grid belongs to 
Level 1, four level 1 grids form a Level 2 grid and four Level 2 grids form a Level 3 grid, any level 
1 grid can belongs to only one Level 2 grid and Level 3 grid, respectively. In each Level 1 grid, we 
choose an intersection which is nearest to the center of the grid to be the Level 1 grid center. Grid 
centers are very important because they have to collect location update packets in their grids and 
transmit the packets to their corresponding upper level. Due to vehicles in an intersection region 
may have to stop and wait for traffic lights; they have more opportunity to stop than other vehicles. 
Therefore, we utilize this property to increase the probability of success transmission once again: 
16 
 
 
Fig. 11. Wired RSUs within two Level 3. 
(b) Location Update in HLSRG 
 In order to obtain location of all vehicles, each vehicle has to send a location update packet to 
the level 1 grid center when crossing a grid or turning right/left. Each level 1 grid center will save 
location information locally. Packets are collected in each grid apart and then merged to the 
corresponding upper level orderly. When doing the packets merging procedure, the sender grids 
send the position information rather than all detail information to its upper level to decrease the 
loading. 
  Location Update Notification of Vehicles 
 One of our goals is to trace location of all vehicles, to achieve this goal. Vehicles have to 
update their location periodically when moving. In past literature, vehicles are required to send 
their new location information to Cell Leader each time when crossing a cell boundary. But we are 
afraid that a large number of location update packets will be caused and will bring high location 
update cost. Nowadays, most of researches design that vehicles have to send an update packet 
every time when driving a given distance, for instance, every 50 meters. Since vehicles update their 
location frequently, vehicles’ location information will be up-to-date. Nevertheless, the total 
number of location update packet is highly proportional to the number of vehicles. And a large 
number of update packets certainly produce high communication overheads. 
 In order to improve this shortcoming, we design a strategy to keep location information fresh 
in Level 1 grid center and decrease the number of location update packets at the same time. The 
main idea is that some given vehicles can stop sending location update packets temporarily. Our 
method can decrease a lot of packets by restraining most of vehicles from sending update packet 
frequently. The detail rules are described as follows.  
 There are always more vehicles on the main arteries. For instance, in Fig. 9, there are about 
107 vehicles within a 1000-meter main artery, but only 11 vehicles within a 1000-meter normal 
road (We count the number of vehicles from Google Map). The number of vehicles within a main 
artery is almost tenfold of the number of vehicles within a normal road. Besides, most of the main 
arteries are selected to be boundaries of grids in our thesis. If we can restrain location update 
packets which are sent from main arteries, then we decrease the total number of location update 
packets for a network indirectly. Owning to these properties, we design a rule that vehicles driving 
on a selected main artery straight do not have to send a location update packet until they turn 
right/left or cross a boundary of Level 3 grid. Since we decrease the number of location update 
Wired Line between RSUs of Level 2 and Level 3.
Wired Line between RSUs of Level 3 and Level 3.
18 
 
 
Fig. 12. An example of location update strategy by vehicle A. 
 Location Messages Collection between Level 1 to Level 3 
 In this subsection, we show in detail that how to deal with the packets collection. In the first 
level, vehicles moving in the Level 1 grid center have to receive the location update packets which 
they have heard. The location update packet includes location, time, direction, Level 1 grid number 
and ID information about a vehicle. When a vehicle is going to enter another Level 1 grid and 
broadcast a location update packet, the receivers in the old Level 1 grid will delete its information 
from their table. Vehicles driving in a Level 1 grid center record all information of received packets 
to their table. When they are going to leave this center, they have to examine the data in the table 
and drop some data that have already been recorded over 2.2 minutes (about 1000m) from the last 
update. And then geographic broadcast their own table in the range of the intersection, and send the 
table to their corresponding Level 2 grid center, a RSU. Other vehicles which have received this 
table in the same intersection will add this information to their own table and record update 
information continuously. The RSU in the Level 2 grid collects the packets sent from Level 1 grid 
to its own table, and sends the table to its corresponding Level 3 grid periodically. The information 
in Level 2 grid and Level 3 grid is saved at most 2.2 minutes (about 1000m) and 4.4 minutes (about 
2000m) respectively, which are counted from the last update time. Due to the increasing of the 
scope for an upper level, items saved in a table of the upper level should be smaller in order to 
decrease the cost. Thus, the Level 2 RSUs only record the vehicle’s ID, time, and sender (ID of 
Level 1 grid) of the packets sent from Level 1 grids, and the Level 3 RSUs record the sender (ID of 
Level 2 RSU), vehicle’s ID and time of the packets sent from Level 2 RSUs. Therefore, only a 
vehicle in Level 1 grid center can be a location server, Level 2 RSU and Level 3 RSU can only 
record information and receive location request packets. Since Level 3 RSUs are connected by 
wires, we can assume that any Level 3 RSU owns vehicle’s information for a specific region.  
(c) Location Request and Service in HLSRG 
 In this section, we describe the method for location request, including how to send a location 
request packet and the location service of this request. Our HLSRG performs a location service 
with short service time, high success probability, and few location update packets. 
A’s routing path
The positions that A have to update its location
Vehicle A crossing a Level 
3 boundary at time T
20 
 
In this situation, RSU can look up its table and figure out that which Level 1 grid Dv is 
belonged to, and then send this request packet to the Level 1 grid center. The request sent from 
the Level 1 grid will not be sent to Level 1 grid again. Because when a Level 1 grid forwards 
the packet, it will attach with its table. In each level, the table update operation has the highest 
priority than other events. Therefore, we ensure that the receiver (Level 2 RSU) has the same 
information with the sender (Level 1 grid) in sender’s region. 
(2) The RSU cannot find Dv’s information from its table: 
If there is no Dv‘s information in RSU’s table, it means that Dv has already driven far away or 
Dv is never here. The RSU needs to forward the request packet and its table to its 
corresponding Level 3 RSU. 
For a Level 3 RSU, there are two strategies to find Dv, which are decided by the sender of the 
location request packet.  
(1) The sender of the packet is a Level 3 RSU: 
Because Level 3 RSUs connect by wires, we can assume that each Level 3 RSU has the 
newest information of vehicles. Therefore, if a request packet is sent from another Level 3 
RSU, it is means that the receiver has the Dv’s information with the latest update time. After 
the Level 3 RSU confirming the packet is been sent from the same level, it will forward this 
packet to the Level 2 RSU which Dv is belonged to and has been recorded in its table.  
(2) If the request packet is not sent from the same level: 
In this situation, the receiver has to forward this request packet to another Level 3 RSU which 
has the newest Dv’s information. 
 We devise that a vehicle can send a location request packet to its nearest Level 3 RSU directly 
if it does not receive an acknowledgement after sending a request packet 5 seconds. The Level 3 
RSUs have vehicles’ location information within a vast urban region. They can find Dv quickly and 
accurately. 
2.3The Research Achievement of the Third Year 
In the third year, we proposed a distributed routing protocol in VANETs with the help of 
roadside units (RSUs). The proposed protocol main focus is on how to construct a reliable routing 
path from a source vehicle to destination vehicle. The proposed protocol can achieve low 
communication overhead and provide high packet delivery ratio between source and destination 
vehicle. The details of our proposed routing protocol are as follows. 
A. Distributed Routing Protocol and Handover Schemes in Hybrid VANETs 
VANETs have general properties with mobile ad hoc networks (MANETs). The survey [13] 
and text book [14] discuss and present three common conditions of operation of these two types of 
networks: (1) short transmission range about 250-300 meters, (2) distributed decisions and 
self-configuring operations, and (3) path loss problems. VANETs and MANETs have some 
differences: (1) vehicles in VANETs are moving faster than nodes in MANETs, (2) VANETs 
frequently change network topologies, and (3) the batteries in vehicles can be recharged but nodes 
22 
 
 
Fig. 13. The VANETs with RSUs 
(b) Forwarding Requests 
 We utilize the distributed characteristic in that a vehicle can determine a back-off time [10] to 
send routing requests. We use this method to construct a route from the source vehicle to the nearest 
RSU. If the source vehicle is in the transmission range of a RSU, the source vehicle directly sends a 
routing request to the RSU. If a source vehicle is not in the transmission range of a RSU, the source 
vehicle will propagate a routing request to the RSU via the multi-hop mechanism. 
 A source vehicle will broadcast routing requests to the nearest RSU by computing distances of 
all RSUs via the preloaded digital map. When senders broadcast routing requests, in order to reduce 
communication overhead, the receivers which are closest to the nearest RSU are responsible for 
rebroadcasting the routing request. Receivers wait for a back-off time before forwarding routing 
requests. Receivers which are closer to the nearest RSU have shorter back-off time and could send 
routing requests earlier than other receivers. In order to avoid packets collision, receivers will select 
a random number to determine the time before rebroadcast the route request. When multiple 
receivers have overheard the same routing request before the corresponding back-off time are 
expired, receivers drop received routing requests and stop counting down the back-off time. The 
back-off time, Wb(dist), is defined in Equation (1). When receivers rebroadcast the routing request, 
they will record the vehicle ID from which the request was transmitted, thus each receiver will 
record the previous vehicle ID. Vehicles will continue above steps until the route request reaches 
the nearest RSU to the source vehicle. 
  Wb(dist) = ��R−distl � × α + rand_number� × time_slot  (12) 
where dist denotes the distance from the receiver to the sender, R denotes the largest 
communication radius of VANETs (250 meters in simulations), l (50 meters in simulations) and α 
(10 in simulations) are two parameters, rand_number is random number from 0 to 9, and time_slot 
denotes the duration from broadcasting a message to receiving it by others (1 ms in simulations). 
Fig. 14 shows an example of selection back-off time, where R is 250 meters and l is 50 meters. 
When sender broadcasts a routing request, receiver1 will selects 16 time slots (random number is 6) 
to be its back-off time, receiver2 will select 32 time slots (random number is 2) to be its back-off 
time, and receiver3 will select 11 time slots (random number is 1) to be its back-off time. 
24 
 
 
Fig. 15. The routing request path from source to destination 
 
Fig. 16. The reply routing path from destination to source 
(c) Handover Schemes 
 A source vehicle, intermediate vehicles and a destination vehicle have to adjust the route to a 
RSU dynamically when they are closed to a RSU or going away from a RSU. In this section, we 
focus on two kinds of handover: intra-RSU handover and inter-RSUs handover. If links between 
intermediate vehicles are broken, the source vehicle will reconstruct a route to the destination 
vehicle. There are two scenarios in intra-RSU handover: (1) A sender vehicle changes its next-hop 
neighbor from a vehicle to a RSU if the sender can connect to the RSU directly. (2) A sender 
vehicle changes its next-hop neighbor from a RSU to a vehicle due to the sender drives away from 
the RSU. These schemes are based on a route which is constructed by the above methods. Each 
vehicle (RSU) knows its previous-hop vehicle or RSU and next-hop vehicle or RSU in order to 
transmit packets and to send replies to a specified receiver. In the route, vehicles may get periodical 
advertisements from the connected RSU and they estimate the Received Signal Strength Indicator 
(RSSI) to determine the link quality to the connected RSU. From the RSSI, the link quality can be 
assigned either of four predefined values. When a vehicle cannot receive advertisements, the 
vehicle determines its link quality to “00”. When a vehicle is receiving advertisements, the vehicle 
computes the RSSI. If the RSSI is above the desired threshold, the vehicle determines that the 
signal from the RSU is strong and it changes its link quality to “11”. If the RSSI is below the 
desired threshold, the vehicle will check the previous stored link quality. If the previous stored link 
26 
 
change its next hop to the RSU. Otherwise, the receiver will forward the packet to its next-hop 
neighbor. For example, in Fig. 18, sender sends packet with its link quality to receiver. If RSU 
receives the packet, it will send a reply to the sender. At the same time, receiver overhears the reply 
from RSU and it drops the packet sent from sender. In the next transmission, sender will send 
packets to RSU directly. In Fig. 19, if RSU does not receive the sending packet, it will not send a 
reply to sender. As receiver does not overhear a reply from RSU, it forwards the packet to RSU. 
 
Fig. 18. Sender sends packets to RSU and receiver drops the packets when RSU sends a reply 
 
Fig. 19. Receiver sends packets to RSU when RSU does not send a reply 
In case (3), assume the link quality of the receiver to the nearest RSU is “10”, it implies that 
the link quality of the sender is “00”, “10”, or “01”. Since the link quality of receiver is “10”, the 
RSU may receive packet from the receiver directly, but the receiver is moving away from the RSU. 
In order to extend the connection time to the RSU, the receiver has to search a backward vehicle to 
transmit packets to the RSU. If the link quality of sender is “00”, the receiver sends packet to the 
RSU and it will also broadcast a routing request to its neighbor vehicles. The vehicle with father 
distance from the receiver and its link quality is “11” will send a reply to the receiver. The vehicle 
which sends a reply is called the backward vehicle and it sets its next-hop neighbor to the RSU. In 
the next packets forwarding, the receiver will forward the packet to the backward vehicle and 
change its next-hop neighbor to the backward vehicle. If the link quality of sender is “01” or “10”, 
it means that the sender may send packet to the RSU. The receiver just waits a time_slot period to 
listen whether there is a reply message from the RSU. If the receiver overhears a reply from the 
RSU, the receiver will drop the packet sent from the sender. Otherwise, the receiver will forward 
the packet to its next-hop neighbor and broadcast a routing request to find a backward vehicle. In 
Fig. 20, receiver sends packet to RSU and then broadcasts a routing request to its neighbors. The 
backward vehicle sends a reply to the receiver. In the next packets transmission, receiver sends 
packets to the backward vehicle and then the backward vehicle sends packets to RSU. 
In case (4), assume the link quality of the receiver to the nearest RSU is “11”, it implies that 
the link quality of the sender is “00”, “01”, “10”, or “11”. Since the link quality of receiver is “11”, 
the receiver can send packet to the RSU directly. If the link quality of sender is “00”, the receiver 
28 
 
packets via the original route. Either the source or destination vehicle can initiate the inter-RSUs 
handover request. Fig. 22 shows an example of an inter-RSUs handover, where source claims an 
inter-RSUs handover request to the nearest RSU2. Source compares the hop-count of the route to 
RSU1 with the hop-count of the route to RSU2. Source chooses the new route to RSU2 with less 
hop-count and discards the original route to RSU1; the RSU2 changes its next RSU to RSU3. The 
pseudo-code of registration, forwarding requests, and handover schemes are listed in Algorithm 1 
and Procedure A. 
 
Fig. 22. Source transmits packet to destination via the new route 
 
Algorithm A: Our routing protocol 
1 /* Registration */ 
2 if vehicles drive through RSUs then 
3   register with the RSU and the RSU send update information to the home RSU 
4 end if 
5 /* Forwarding Requests */ 
6 if vehicles receive a routing request first time and TTL < threshold then 
7   select back-off time according to distance from sender 
8   count down back-off time and then rebroadcast the routing request 
9   set sender ID to previous-hop neighbor 
10   if the routing request is broadcasted from RSU then TTL ← TTL－1 
11   end if 
12 else 
13   drop the routing request and stop counting back-off time 
14 end if 
15 if RSUs receive a routing request first time then 
16   send the routing request to home RSU of destination 
17   the home RSU sends the routing request to the registered RSU of destination 
18   the registered RSU performs a local flooding 
19   set sender ID to previous-hop neighbor 
20 else  
30 
 
19 send the packet to the RSU and then broadcast a routing request 
20     if a backward vehicle sends a reply 
21       set my next-hop neighbor to the backward vehicle 
22     end if 
23   end if 
24   if sender’s link quality is “10” or “01” 
25     if overhear a reply from the RSU 
26       drop the packet 
27     else 
28       send the packet to the RSU 
29     end if 
30   end if 
31 case 4: my link quality is “11” 
32   if overhear a reply from the RSU then 
33     drop the packet 
34   else 
35     send the packet to the RSU 
36   end if 
Fig. 24. Procedure for handover 
 
 
  
32 
 
[3] W. R. Heinzelman, A. Chandrakasan, H. Balakrishnan, “Energy-efficient Communication Protocol for 
Wireless Microsensor Networks,” in Proceedings of Hawaii International Conference on System 
Sciences, USA , pp. 1-10, Jan. 2000. 
[4] C. Lochert, B. Scheuermann, and M. Mauve, “Probabilistic Aggregation for Data Dissemination in 
VANETs,” in Proceedings of ACM International Workshop on Vehicular Ad Hoc Networks, Canada, pp. 
1-8, Sep. 2007. 
[5] P. Zhou, T. Nadeem, P. Kang, C. Borcea and L. Iftode, “EZCab: A Cab Booking Application 
Using Short-Range Wireless Communication,” in Proceedings of IEEE Pervasive Computing 
and Communications, pp. 27-38, Mar. 2005. 
[6] T. Nadeem, P. Shankar, and L. Iftode, “A Comparative Study of Data Dissemination Models 
for VANETs,” in Proceedings of ACM Mobile and Ubiquitous Systems: Networking & 
Services, pp. 1-10, Jul. 2006. 
[7] O. Tonguz, N. Wisitpongphan, F. Bai, P. Mudalige and V. Sadekar, “Broadcasting in VANET,” 
in Proceedings of IEEE Mobile Networking for Vehicular Environments, pp. 7-12, May 2007. 
[8] H. Saleet, R. Langar, O. Basir and R. Boutaba, "Proposal and Analysis of Region-Based 
Location Service Management Protocol for VANETs," in Proceedings of IEEE Global 
Telecommunications Conference (GLOBECOM), pp. 1-6, Dec. 2008. 
[9] H. Cheng, J. Cao, H. H. Chen and H. Zhang, "GrLS: Group-Based Location Service in Mobile 
Ad Hoc Networks," IEEE Transactions Vehicular Technology (TVT), vol. 57, pp. 3693-3707, 
Nov. 2008. 
[10] J.-P. Sheu, G.-Y. Chang, and C.-H. Chen, "A Distributed Taxi Hailing Protocol in Vehicular 
Ad-Hoc Networks," in Proceeding of IEEE 71st Vehicular Technology Conference, pp 1-5, 
May 2010. 
[11] S. M. Das, H. Pucha and Y. C. Hu, "Performance comparison of scalable location services for 
geographic ad hoc routing," in Proceedings of IEEE Joint Conference of the Computer and 
Communications Societies (INFOCOM), pp. 1228-1239, Mar. 2005.  
[12] R. Friedman and G. Kliot, "Location services in wireless ad hoc and hybrid networks: A 
survey," Techanical Report, Technion Computer Science, Apr. 2006. 
[13] F. Li and Y. Wang, "Routing in Vehicular Ad Hoc Networks: A Survey," IEEE Vehicular 
Technology Magazine, pp. 12-22, June 2007. 
[14] C. Siva Ram Murthy and B. S. Manoj, "Ad Hoc Wireless Networks: Architectures and 
Protocols," Prentice Hall PTR, New Jersey, 2004. 
[15] J. Zhao and G. Cao, "VADD: Vehicle-Assisted Data Delivery in Vehicular Ad Hoc Networks," 
IEEE Transactions on Vehicular Technology, Vol. 57, Issue 3, pp. 1910-1922, May 2008. 
[16] V. Naumov and T. R. Gross, "Connectivity-Aware Routing (CAR) in Vehicular Ad-hoc 
Networks," in Proceedings of IEEE International Conference on Computer Communications, 
pp. 1919-1927, May 2007. 
[17] Y. Peng, Z. Abichar, and J. M. Chang, "Roadside-Aided Routing (RAR) in Vehicular 
Networks," in Proceedings of IEEE International Conference on Communications, pp 
3602-3607, June 2006. 
[18] R. He, H. Rutagemwa, and X. Shen, "Differentiated Reliable Routing in Hybrid Vehicular 
34 
 
The self-evaluation of the achievement(計畫成果自評) 
In the past three years, we design several protocols and these protocols are published or 
accepted by the international journals or conferences. All the achievements are listed in the 
following. 
Publications  
[1] J.-P. Sheu, G.-Y. Chang, and Y.-W. Chen, “Virtual Landmarks Assisted Routing Protocol in 
Vehicular Ad Hoc Networks,” Proceedings of the 20th IEEE International Symposium on 
Personal, Indoor and Mobile Radio Communications (PIMRC), Tokyo Japan, September 
2009. 
[2] J.-P. Sheu, K.-Y. Hsieh, and M.-L. Ding, “Routing with Hexagonal Virtual Coordinates in 
Wireless Sensor Networks,” Journal of Wireless Communications & Mobile Computing, Vol. 
9, No. 9, pp.1206-1219, September 2009. 
[3] G.-Y. Chang, J.-P. Sheu, T.-Y. Lin, and K.-Y. Hsieh, “Cache-based Routing for Vehicular Ad 
Hoc Networks in City Environments,” Proceedings of the IEEE Wireless Communications and 
Networking Conference (WCNC), Sydney, Australia, April 2010. 
[4] J.-P. Sheu, G.-Y. Chang, J.-H. Wu, “Typhoon: Resource Sharing Protocol for Metropolitan 
Vehicular Ad hoc Networks,” Proceedings of the IEEE Wireless Communications and 
Networking Conference (WCNC), Sydney, Australia, April 2010. 
[5] J.-P. Sheu, W.-K. Hu, and J.-C. Lin, "Distributed Localization Scheme for Mobile Sensor 
Networks," IEEE Trans. on Mobile Computing, Vol. 9, No. 4, pp. 516 - 526, April 2010. 
[6] J.-P. Sheu, G.-Y. Chang, and C.-H. Chen, “A Distributed Taxi Hailing Protocol in Vehicular 
Ad-Hoc Networks,” Proceedings of the IEEE Vehicular Technology Conference 
(VTC2010-Spring), Taipei, Taiwan, May 2010. 
[7] G.-Y. Chang, J.-P. Sheu and C.-Y. Chung, “Zooming: A Zoom-Based Approach for Parking 
Space Availability in VANET,” Proceedings of the IEEE Vehicular Technology Conference 
(VTC2010-Spring), Taipei, Taiwan, May 2010. 
[8] J.-P. Sheu, C.-Y. Lo, and W.-K. Hu, “A Distributed Routing Protocol and Handover Schemes 
in Hybrid Vehicular Ad Hoc Networks,” Proceedings of the 17th IEEE International 
Conference on Parallel and Distributed Systems (accepted), Tainan, Taipei, December 2011. 
[9] J.-L. Chiang, J.-P. Sheu, H.-C. Tseng, and T.-W. Chen, “An Efficient MAC Protocol with 
Cooperative Retransmission in Mobile Ad Hoc Networks,” Journal of Wireless 
Communications & Mobile Computing (accepted). 
 
 
四、心得 
本人第一次參與 IEEE GLOBECOM會議，在一個主要會議中加上多個Workshop同時進行討
論，已逐漸成會進年來國際研討會的重心。了解相關領域之最新研究現況是本研討會舉辦的
重心。除了有機會與同領域的研究團隊進行交流，對本計畫的無線感測平台在後續研製方向
有相當助益外。國外發展的應用與我國有些許的差異，為了應用需求的不同，在硬體平台設
計、耗能需求、程式更新等都有各自不同的考量，亦有許多心得可以互相交流學習。 
 
五、建議與結語 
1. 會議中有許多的學者與研究團隊，對於技術交流均有莫大的幫助，希望國內的研討會能
夠邀請國外的研究團隊來訪。 
2. 無線感測平台已經有許多廠商在研製，但是新穎的功能及觀念卻沒有提供給業者參考，
希望未來國內的研討會能夠多邀請相關研發廠商參與，並互相討論，讓技術與理論之間
能達到雙方共贏的局面。 
六、攜回資料 
研討會收據*1 
會議集*1 
 
             
(a)                                                 (b) 
 
(c) 
Figure 1.2: Remnant energy of three routing schemes. (a) GPSR. 
(b) SLGF. (c) HARP. 
II. HOLE AVOIDING ROUTING PROTOCOL 
In this Section, we present a distributed Hole Avoiding 
Routing Protocol (HARP) to mitigate load of hot spots. We 
assume that each node knows its own location information and 
its one-hop neighbors. The location information can be 
determined by Global Positioning System (GPS) receivers, 
mobile beacon nodes, or relative coordinate systems. Each node 
can detect whether it is located on the boundary of a hole by 
some boundary recognition schemes [3, 8]. We consider an 
environment which has multi-sources and multi-destinations. 
Before encountering an expanded hot area, each source node S 
forwards data packets to its destination node D by geographic 
greedy forwarding. 
2.1 Expanded Hot Area 
Since a hot spot’s loading decreases as the size of its 
corresponding hot area increases, we expand hot areas for 
mitigating load of hot spots. An expanded hot area is the area 
within k-hops of the corresponding hole as shown in Fig. 2.1. 
Any ongoing transmission toward the hole could detour the hole 
by the aid of expanded hot areas. For ease of the following 
discussion, we define Boundary Contour 1 to be the set of hole 
boundary nodes. We also define Boundary Contour i (BC i for 
short) to be the set of nodes which is (i−1)-hop away from the 
Boundary Contour 1. The expanded hot area is composed of 
Boundary Contours 1, 2, …, k. According to our simulation 
results, k=5 is sufficient. 
2.2 Hole Avoiding Routing Protocol (HARP) 
 
 
Figure 2.1: The expanded hot area when k = 5.  
In this section, we use expanded hot area to develop a new 
hole avoiding routing protocol. 
2.2.1 Single-Hole Environment 
For ease of the following discussion, we simplify the hole 
to be polygon EeEnEwEs, where Ee, Ew, Es, and En denote the 
extreme east, west, south and north locations on a hole. We also 
simplify the corresponding hot area to be the union of four bar 
regions (i.e., four rectangles) and four pie regions, as shown in 
Fig. 2.2.  
Ew
En
q
Es
Ee
kr
kr
S
D  
Figure 2.2: Simplification of the hole and the corresponding 
expanded hot area. 
Fig. 2.3 shows a simplified expanded hot area. Besides, an 
optimistically shortest path (i.e., P*) from the source S to the 
destination D is obtained (i.e., P* may not be the shortest path 
since P* may pass through the hole). P* passes through some 
vertices in {Ee, En, Ew, Es} and includes some segments in {EeEn, 
EnEw, EwEs, EsEe}. In fact, the statements above hold no matter 
where the four vertices Ee, En, Ew, and Es, are. If packets are 
transmitted along P*, vertices located in these four line segments 
EeEn, EnEw, EwEs, and EsEe, become hot spots.  
Notice that P* intersects the boundaries of pie regions or 
bar regions at BC 1. For the purpose of load balancing, we 
randomly choose a BC from BC 1 to BC k in each routing. For 
example, in Fig. 2.3, a packet is transmitted from source S to 
vertex q by geographically greedy forwarding. Since q is in an 
expanded hot area, the packet is forwarded to destination D 
according the following steps. 
1. Randomly choose one BC, say BC 3.  
2. Determine the traveling start point u. First, determine the 
side of the bar/pie region where q is located in and P* 
passes through, i.e., line segment Enp. Then u is the 
intersection of BC 3 and Enp.  
80% ≦ energy ≦ 100%
60% ≦ energy ≦ 80%
40% ≦ energy ≦ 60%
20% ≦ energy ≦ 40%
0% ≦ energy ≦ 20%
Hole
Ew
En
Es
Ee
Boundary Contour 1 (Bondery Node)
Boundary Contour 3
Boundary Contour 2
Boundary Contour 4
Boundary Contour 5
 expanded hot area. Since the packet transmitted to u is leaving 
the bar region which have Ee and En, u determines its 
current-focus hole, i.e., hole A. So, the packet proceeds to be 
transmitted in the expanded hot area of hole A (i.e., the pie 
region which has Ee, u and v). Similarly, when the packet from u 
is transmitted to v (i.e., leaving the pie region which has Ee, u, 
and v), v determines its current-focus hole, i.e., hole B. Suppose 
that v is in BC 2 of the expanded area of hole B. Then the packet 
is transmitted along BC 2 of hole B. When the packet from v is 
forwarded to w (i.e., leaving the bar region which has En and Ew), 
w determines its current-focus hole, i.e., hole B. Notice that w is 
not in the expanded hot area of its first-avoiding hole. So, w’s 
current-focus hole is current-focus hole of the vertex which 
forwards the packet to it, i.e., hole B. Then packet is transmitted 
from w to x (i.e., leaving the pie region which has Ew, w and x), x 
determines its current-focus hole is hole B. Since line segment 
xD passes exactly one region (i.e., the last region should pass), 
the packet is forwarded from x to D by greedy forwarding. The 
real path is shown in Fig. 2.6. 
Similarly, our simplified path in a bar region is shorter than 
or equal to P* in the same region and our simplified path in a pie 
region has length πkr/4 on average. So the stretch factor is 
approximately equal to 1+ c(πkr/4)/(the length of P*), where c is 
the number of pie regions our simplified path passes. 
hole B
hole A
En
Ew
Es
Ee
Ew
En
Es
Ee
D
S
u
v
w
x
q
 
Figure 2.5: The red path denotes our simplified path and the blue 
path is P*. 
 
x
En
Ew
Es
Ee
Ew
En
Es
Ee
D
q
u
v
w
S
 
Figure 2.6: The red path denotes our path. 
III. SIMULATIONS 
In this section, we implement our Hole Avoiding Routing 
Protocol (HARP) using ns-2 and compare the performance of 
our protocol, GPSR [6] and SLGF [5]. Performance measures 
considered the average routing hops and network lifetime. The 
number of nodes varies from 900 to 1400 in increments of 100. 
Initial total energy of each node is 0.07 J. Energy consumption in 
transmitting and receiving packets are 0.35 W and 0.38 W, 
respectively. The communication range of each node is 10 
meters. The monitored area is a 200×200 m2 rectangle area with 
four holes see (Fig. 3.1).  
3.1 Path length  
Fig. 3.2 shows that HARP has shorter average path length 
(hops) than that of SLGF and GPSR. 
 
Figure 3.1: The monitored area is a 200×200 m2 rectangle area 
with four holes. 
Figure 3.2: Average path length of HARP, SLGF, and GPSR.  
In a multi-hole environment, SLGF needs more hops to 
detour unsafe forbidden regions. As a result, average path length 
of SLGF is longer than that of HARP and GPSR. In 900-node to 
1100-node environments, as the node density become larger, the 
detour path of SLGF is closer to the real border of forbidden area, 
which implies a shorter detour path. In 1200-node to 1400-node 
environments, average path length of SLGF increases. An 
example is shown in Fig. 3.3. S finds some new safe neighbors 
(i.e., neighbors not in forbidden area), node a, which are closer 
the destination than original safe neighbors. Therefore the data 
packet is forwarded to node a. At node a, D is located in third 
quadrant of a and no safe neighbors are in third quadrant of a. It 
must employ right-hand rule to search next hop. Consequently, it 
results ineffective path to increase average transmission distance 
of SLGF. 
In GPSR, average path length of GPSR increases as node 
density increases. It is because nodes find new neighbors which 
are closer to the destination than original neighbors and forward 
國科會補助計畫衍生研發成果推廣資料表
日期:2011/10/07
國科會補助計畫
計畫名稱: 子計畫一：車間通訊之網路層協定服務與應用
計畫主持人: 許健平
計畫編號: 97-2221-E-007-040-MY3 學門領域: 計算機網路與網際網路
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
無 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
