 行政院國家科學委員會補助專題研究計畫 □ 成 果 報 告   ■期末進度報告 
 
以點群資料為基礎之次世代電腦輔助設計與製造軟體
系統研發 
 
計畫類別：■ 個別型計畫  □ 整合型計畫 
計畫編號：NSC 96－2221－E－194－061－MY2 
執行期間：96 年 08 月 01 日至 98 年 07 月 31 日 
 
計畫主持人：姚宏宗 
計畫參與人員：許千昱、李建佑、徐雄翊 
 
 
成果報告類型(依經費核定清單規定繳交)：□精簡報告  ■完整報告 
 
本成果報告包括以下應繳交之附件： 
□赴國外出差或研習心得報告一份 
□赴大陸地區出差或研習心得報告一份 
□出席國際學術會議心得報告及發表之論文各一份 
□國際合作研究計畫國外研究報告書一份 
 
處理方式：除產學合作研究計畫、提升產業技術及人才培育研究計畫、列
管計畫及下列情形者外，得立即公開查詢 
          □涉及專利或其他智慧財產權，□一年□二年後可公開查詢 
          
執行單位：國立中正大學 精密模具研究中心 
 
中   華   民   國   98 年 10 月 22 日
  II
目錄 
 
中文摘要………………………………………………………………….I 
英文摘要………………………………………………………………….I 
研究計畫之前言、目的、文獻探討…………………………………….1 
研究方法………………………………………………………………….1 
研究成果與討論………………………………………………………….6 
結論………………………………………………………………….........9 
計畫成果自評部分……………………………………………………….9 
文獻探討…………………………………………………………………10 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
  2 
Surfel 模型只是將圓盤互相重疊調整到沒有破洞的狀況，因此還需經由橢圓權重平均的
方法，求出模型表面任一點的正確資料如法向量、顏色和位置。當二個 Surfel 重疊時，就將
各別的法向量、顏色和位置經權重平均運算出來。 
  
圖 2. 橢圓高斯濾波
器[1] 
圖 3. 圓盤交疊示
意圖 
(1) 從曲面元素產生五軸刀具路徑 
2.1.1 橢圓權重平均 
當 Surfe 模型縮放時可能會產生破洞，Zwicker [7]提出權重平均的方式，以螢幕像
素為座標，在 Surfel 模型上重新取樣。surfe 模型中的圓盤是經橢圓高斯濾波器
(Elliptical Gaussian Filter)所運算，在橢圓的二個軸向各有一條高斯分布曲線，圖 2，
這條曲線就是圓盤的權重分布。圓盤與圓盤之間都會有重疊發生，圖 3，若想得到模型上
任一點的資料，即必需把各個圓盤經權重分布所取得的值做加權平均運算，這就是權重平
均的原理。 
2.1.2 座標系統的轉換 
雖然 EWA 能對 surfel 模型無限細分，但細分後還是需座標系統轉換顯示到螢幕中。
它的 mapping 方式為從區域曲面參數座標系統(local surface parameterization 
coordinates)到眼睛座標系統中位於 1=z 的螢幕座標上，故這是屬於 2D to 2D 的 mapping
方式。 
Local Affine Mapping 推導 
affine mapping 為 )(UmX = ，利用泰勒展開式對 )(UmX = 在 kU 處做展開 
)(),(
)()(
kkk
kkkk
U
U
mJacobianUmXwhere
UUJXUm
∂
∂
==
−⋅+=  
螢幕座標上的兩個主軸方向 0x 、 1x 投影至以 kP (曲面元素模型中心)為中心的切平面上， kP  
的法線方向(
kn )為切平面的法線方向，結果為 0~x 、 1~x 。再者，我們選擇切平面的主軸方
向 0u 、 1u 。而主軸方向為曲面元素圓盤上的任一向量皆可，故選擇
0
0
0
~
~
x
x
u = 、 01 unu k ×= ，
形成一右手座標系統。 






⋅
⋅
=





⋅⋅
⋅⋅
=
−
11
010
1110
01001
~0
~~
~~
~~
ux
uxx
uxux
uxux
J  
當求得 Inverse Jacobian Matrix 之後即可將 EWA 方法所重新取樣的資料繪製在螢幕上，
如圖 4。 
  4 
 
圖 6. 可行刀具傾角圖 
2.1.5 選定刀具軸向 
任選一個可行的刀具傾角即可進行加工。較早期的五軸刀具路徑產生方法中，刀軸
方向是以前進方向決定的固定關系，只有在發生碰撞時才會特別改變，但 Hwang 等人[28]
提出並解釋五軸加工時只需刀軸傾角的改變平滑化即能大量的改善加工表面的品質。 
Lee 等人[27]雖有將可行刀具傾角圖都畫出來，但最後所決定的刀軸還是有較大的變化。
Castagnetti 等人[24]將所有的可行刀具傾角圖都收集起來，以最短路徑演算法找出刀
軸變化量最小的解，雖能得到較好的刀軸結果，但在運算上耗費了大量的時間。 
本研究將 Castagnetti 等人的方法再簡化後得到與之結果相近但更省時的結果，找
出各刀具可行傾角圖中可行區域之重心位置為刀軸方向，圖 7，選擇可行刀具傾角區域
之重心為刀軸方向有二大好處： 
1.二刀具中心點距離相近，可行傾角區域改變量不大，所得到的刀軸方向會有平滑化    
的結果產生。 
2.刀具中心點間可能因背丘高度要求的關系需內插，若刀軸位置落於可行區域的重心   
位置，則內插後所得的刀軸方向將不會再有碰撞問題發生。 
圖 8為刀具傾角求得的結果，可明顯的發現刀軸改變量較為平緩，此結果能使加工表面
更為細緻。 
 
圖 7.可行刀具傾角區域之重心 
(2) 以 GPU 加速刀具路徑產生 
整個路徑最重要的刀具可行傾角圖，以中央處理器(CPU, Computer Processing Unit)
運算一個刀具中心點的要花費五分鐘，此結果是無法讓人接受的。 
Zwicker 等人[25]介紹了可利用 GPU 來加速 surfel 模型在螢幕上的顯示，因此本研究也
GPU 來加速五軸刀具路徑產生的演算法。 
 
：重心位置 
-90° 
-90° 
90° 
90° 
刀軸對Ｙ軸旋轉的角度 
刀
軸
對
Ｘ
軸
旋
轉
的
角
度
 
  6 
2.2.3加速方法  
經過多改正後，最終的 GPU 加速流成如圖 9所示，利用 RTT 技術將重新取樣後的高度
值資訊存於 FBO 的一角，當 FBO 畫滿後再將資料由 GPU 端讀入 CPU 端做碰撞運算。最初的
CPU 流程結果得到一張可行刀具傾角圖要五分鐘，同時發揮 GPU 平行運算與 CPU 快速直線
式運算的特性將時間縮短到 0.8 秒，成功的大量縮短可行刀具傾角圖運算時間。 
(三)研究結果與討論 
實作程式之軟硬體： 
撰寫軟體：Microsoft Visual C++ 
模擬加工軟體：VERICUT 
CPU：AMD Athlon 64 Processor, 2.31GHz 
GPU：NVIDIA GeForce 8600 GT, 256MB 
Main memory：2GB 
(1) 球模型  
圓球半徑 6mm，5,064 個 surfel，半徑 0.5mm 的球刀，0.01mm 背丘高度，先以刀具直徑
為間距在模型上取得 225 個刀具軸向，圖 10，利用這些軸向內插出符合背丘高度的刀具中心
點及軸向，圖 11，整個路徑的運算需時 2 分 43 秒，最後利用 VERICUT 進行加工模擬，得到
最後的結果圖 12、13 所示。模擬切削後所得到的 STL 模型與原先的 surfel 模型做誤差分析，
其結果如圖 14，最大誤差：0.0328616 mm 最小誤差：-0.076416 mm 平均誤差：0.00726892 mm 
為驗證演算法的背丘高度控制正確性，以同樣的模型、刀具及路徑產生法，將背丘高度
設定為 0.02mm 誤差分析後之結果如圖 15，最大誤差：0.060217 mm 最小誤差：-0.0999504 mm 
平均誤差：0.021968 mm 
  
圖10球模型刀軸取樣 圖 11 球模型完整 CL內插結果 
6.1 
  
圖 12 球模型 VERICUT
模擬結果上視圖 
圖 13 球模型
VERICUT 模擬結果側
視圖 
  8 
圖中可見幾乎誤差都集中在齒槽部位，因為齒槽已經小到 R0.5mm 的球刀都無法深入的地
步，但此模擬還是證實，不論表面的起伏還是有無法加工的特徵，本演算法都能確實運算出
正確的路徑結果。 
(3) 其他模型與討論 
本實驗測試了六個模型，數據分別為下表1、2。 
將所有的運算步驟與時間做比較後可得圖 19，整個運算流程大部分的時間都花在刀軸取
樣演算法，粗選刀軸的數量對整個路徑運算時間有決定性的影響，若能再減少可行傾角圖的
計算時間，將直接使路徑產生的時間減少，這將是未來重要的課題。 
利用人臉、臼齒、飛機和龍寶寶四個模型，R2mm 的球刀運算路徑後，得到圖 20 之關系，
每一個刀軸的運算時間與模型的 surfel 數量成正相關，當模型 surfel 愈多，即需要愈多的
時間來運算。產生符合精度的刀具中心點卻非常迅速，若利用取樣後的刀軸先運算粗加工路
徑，再運算精加工路徑，不需再做刀軸取樣，即可減少整體運算時間。 
表 1.R0.5mm 球刀各模型運算數據及時間關係表 
 
 球 臼齒 全口牙 
大小 12*12 
8.9*1
1.1 
74.6*4
7.7 
Surfel 數 5,064 
41,86
0 
101,86
8 
刀具大小 R0.5mm 球刀 
刀軸取樣個
數 225 168 280 
CL 點個數 25,820 
22,18
0 
281,36
1 
刀軸取樣時
間 
2m19
s 4m39s 13m35s 
內插 CL 時間
(s) 
13.7
75 
11.66
9 9.057 
總計時間 2m43s 4m57s 13m55s 
刀軸取樣 
時間百分率 
85.2
% 93.7% 97.6% 
單一刀軸 
運算時間 0.62 1.66 2.9 
表 2.R2mm 球刀各模型運算數據及時間關係表 
 
 人臉 飛機 龍寶寶 
大小 40.4*56.4 83.3*80.7 49*66.8 
Surfel 數 5,067 67,245 120,100 
刀具大小 R2mm 球刀 
刀軸取樣個數 221 529 300 
CL 點個數 111,507 181,374 20,0935 
  10
點資料形式五軸刀具路經演算法更為完整。 
刀軸方向之選定：本演算法的刀軸方向為該刀具中心點之可行傾角區域之重心，若模型
有複雜交疊情形發生時有可能發生碰撞的問題，若能在可行傾角區域中找出一最大內接四邊
形，再以此四邊形重心做為刀軸方向，即可完全避免此狀況發生。 
GPU 之發展：本研究法主要的運算部分皆由 GPU 負擔，現在有的規範下，增加了不少 GPU 與
CPU 間的資料傳輸次數，但可預期 GPU 會持續改進，在運算速度與資料存取速度應有突破，
或許未來能完全以 GPU 來運算，節省 CPU 與 GPU 間溝通的時間。 
(六)參考文獻 
[1]. P.S. Heckbert, “Fundamentals of texture mapping and image warping”, Dept. of Electrical 
Engineering and Computer Science University of California,Berkeley,CA 94720, 1989 
[2]. H. Pfister, M. Zwicher, J. Baar and M. Gross, “Surfels : surface elements as rendering 
primitives”, Proceeding of ACM SIGGRAPH, pp. 335-342, 2000 
[3]. S. Rusinkiewicz and M. Levoy, “Qsplat: A multiresolution point rendering system for large 
meshes”, Proceedings of ACM SIGGRAPH, pp. 343-352, 2000 
[4]. M. Zwicker, H. Pfister, J. Baar, M. Gross, “Surface splatting” , Proceedings of the 28th annual 
conference on Computer graphics and interactive techniques, pp. 371-378, 2001 
[5]. L. Ren, H. Pfister, M. Zwicker, “Object space EWA surface splatting: A hardware accelerated 
approach to high quality point rendering”, EUROGRAPHICS 2002, Vol. 21, N0. 3, 2002 
[6]. M. Alexa, J. Behr, D. Cohen-Or, S. Fleishman, D. Levin and C. T. Silva, “Point set surfaces”, 
Visualization and Computer Graphics, IEEE Transactions on, pp. 3-15, 2003 
[7]. M. Zwicker, H. Pfister, J. Baar, M. Gross “EWA splatting”, IEEE Transactions on Visualization 
and Computer Graphics, pp. 223-238, 2002 
[8]. Y.S. Lee, ”Admissible tool orientation control of gouging avoidance for 5-axis complex 
surface machining”, Comput Aided Des, pp. 507-521, 1997 
[9]. R. Baptista, JFA. Simoes, “Three and five axes milling of sculptured surfaces”, J Mater 
Process Technol, pp. 398-403, 2000 
[10]. H.T. Young, L.C. Chuang, “An integrated machining approach for a centrifugal impeller”, Int J 
Adv Manuf Technol, pp. 556-563, 2003 
[11]. Y.S. Lee, “Admissible tool orientation control of gouging avoidance for 5-axis complex 
surface machining”, Computer Aided Design, pp. 507-521, 1997 
[12]. A. Rao, R. Sarma, “On local gouging in five-axis sculptured surface machining using flat-end 
tools”, Computer Aided Design, pp. 409-420, 2000 
[13]. K. Weinert, S. Du, P. Damm, M. Stautner, “Swept volume generation for the simulation of 
machining proesses”, International Journal of Machine Tools & Manufacture, pp. 617-628, 2004 
[14]. P. Gray, S. Bedi, F. Ismail, “Rolling ball method for 5-axis surface machining”, Computer 
Aided Design, pp. 347-357, 2003 
[15]. P. Gray, S. Bedi, F. Ismail, “Arc-intersection method for 5-axis tool positioning”, Computer 
Aided Design, pp. 663-674, 2005 
[16]. Y. Hosseinkhani, J. Akbari and A. Vafaeesefat, “Penetration-elimination method for five-axis 
CNC machining of sculptured surfaces”,  International Journal of Machine Tools and 
Manufacture, 
pp. 1625-1635, 2007 
[17]. Y.S. Lee, T.C. Chang, “2-phase approach to global tool interference avoidance in 5-axis 
machining”, Computer Aided Design, pp. 715-729, 1995 
