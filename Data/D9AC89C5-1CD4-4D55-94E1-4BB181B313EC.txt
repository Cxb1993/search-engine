2優點，否則反而可能造成視訊品質不如預
期與浪費網路頻寬的副作用。因此，本計
畫提出一套適用於各種網路環境的精準頻
寬估測(Bandwidth Estimation)法，以提供
視訊伺服器與用戶端設備作為流量控制與
影像品質層級切換的依據。
對多媒體視訊串流服務而言，可用頻
寬的偵測由用戶端來主動進行是最適當
的，因為這樣可以避免造成視訊伺服器的
額外負擔。然而，如果頻寬估測是由用戶
端來進行，則在目前所有文獻上所提出的
頻寬估測方法，都只能估測從用戶端到視
訊伺服器端的頻寬，而非是從視訊伺服器
端到用戶端的視訊流所走的路徑之頻寬，
但因為目前網路上傳與下載的頻寬經常是
不對稱的(如 ADSL)，所以傳統的單向頻寬
估測方式是不適合用在採用 SVC 編碼技
術的多媒體網路上的。於是如何由用戶端
來進行估測從視訊伺服器端到用戶端的頻
寬，便是一個很有挑戰性的問題。因此，
在本計畫中，我們提出一個雙向路徑
(Two-Way)可用頻寬估測機制，以讓我們所
提出的頻寬估測法能適用於可調式視訊編
碼的多媒體視訊傳輸系統中。
二、國內外相關研究
目前文獻中有關網路頻寬估測可分為
被動(Passive)與主動(Active)兩種，所謂被
動式估測就是透過網路壅塞(Congestion)
狀況，即封包的遺失率(Loss Rate)或延遲
(Delay)來推估可用頻寬。而主動式估測則
是透過發送探測封包(Probing Packets)來
得知網路可用頻寬，因為主動式估測法較
迅速且可靠，因此大部分的文獻均採用主
動式封包探測的方法。目前利用探測封包
來偵測網路頻寬的技術大致可分成兩類：
間隙模型 (Gap Model)與速率模型 (Rate
Model)。採用間隙模型的頻寬估測方法包
括 Delphi [5], IGI [6], Spruce [7], MoSeab
[8], 及 Pathrate [9]等，主要是利用探測封
包間的間隔變化(Packet Dispersion) 來推
估鏈路容量(Link Capacity) 及可用頻寬。
而速率模型的方法如 TOPP (Train of
Packet Pair) [10], SLoPS [11,12], PathChirp
[13], PathVar [14], 以及 PathMon [15]等，
則是利用改變探測封包的傳送速率來找出
可用頻寬。
上述各種頻寬估測法從分析方法上
來分類，又可分為直接探測法 (Direct
Probing)與疊帶探測法 (Iterative Probing)
[16]。就直接探測法而言，傳送端送出速率
為 iR 的週期性探測流，接收端則量測輸出
速率 oR ，當 iR 大於可用頻寬 A時，
)1( 
o
t
it R
C
RCA ， (1)
但此分析法必須事先知道瓶頸鏈路的頻寬
tC ，採用此法的包括 Delphi [5], Spruce
[7]。而在疊帶探測法中，並不需要事先知
道瓶頸鏈路的頻寬 tC ，傳送端透過傳送一
速率為 )(kRi 的週期性探測流 k , 若
)()( kRkR io  或是探測流的單向延遲
OWD 增加，便可得知 AkRi )( ，否則就
是 AkRi )( ，因此透過一序列不同速率的
探測流便可收斂到可用頻寬 A，採用此方
法的如 TOPP [10], SLoPS/Pathload [11], 及
PathChirp [13]等。
此外，由於無線網路環境的頻寬變化
劇烈，因此如何估測無線網路之可用頻寬
更顯得重要[17, 18]。在文獻[17]中，則是
比較了 TOPP, SLoPS 及 PathChirp 三種方
法在行動網路上估測可用頻寬的準確度與
效率，其結果發現 PathChirp 效能最佳。
而文獻[18]則是提出一個新的頻寬估測法
Probe-Gap，以適用於寬頻存取網路 (如
Cable Modem 及 802.11 等 ) 中有採用
Leakey-Bucket 速率調節機制、或採用非
FIFO 機制及存在多種不同速率的網路環
境。
最後，在文獻[19]中，作者採用 ICMP
ECHO 封包來探測瓶頸鏈路之頻寬，由於
ICMP ECHO 封包在抵達接收端後會回傳
到傳送端，利用回傳到傳送端的封包間隔
可估算出往返路徑的瓶頸鏈路之頻寬，但
並無法得知此瓶頸頻寬是發生在上傳或下
4同，N 個封包間之間隔則呈遞增或遞
減。因此，如果從傳送端到接收端會經
過 H 段鏈路，則必須送出 H 回合共 NH
個探測封包。
4. 傳送端收到回傳的探測封包後，便可根
據封包內的時戳來進行可用頻寬估
測，其評估方法將在下節詳細說明。
(一) 流體交通模型下探測封包間隔與可
用頻寬之數學關係
令 TTL = i 的回傳探測封包之各個
時戳分別定義如下：
0,iT ：傳送端發出該探測封包之時間
(Originate Timestamp，傳送端之本地
時間)，
1,iT ：第 i 個路由器收到該探測封包之時間
(Receive Timestamp，第 i 個路由器之
本地時間)，
2,iT ：第 i 個路由器回傳該探測封包之時間
(Transmit Timestamp，第 i 個路由器
之本地時間)，
3,iT ：傳送端收到回傳探測封包之時間(傳送
端之本地時間)，且此時戳不在探測
封包內。
為了去除時鐘同步的問題，我們可以
只計算相鄰探測封包間的間隔 (Gap or
Dispersion)來估算頻寬，令 TTL = i 的探測
封包列之第 k 個封包之時戳分別為 )(0,
k
iT 、
)(
1,
k
iT 、
)(
2,
k
iT 及
)(
3,
k
iT ，則任兩相鄰 TTL = i 之
封包從傳送端出發時之間隔 )( ,
in
i  為
)(
0,
)1(
0,
)(
,
k
i
k
i
in
i TT 

 ， (2)
而此兩封包到達第 i 個路由器時之間隔
)(
,
out
i  為
)(
1,
)1(
1,
)(
,
k
i
k
i
out
i TT 

 ， (3)
至於從第 i 個路由器回傳時之封包間隔
)(
,
in
i  及到達傳送端之間隔
)(
,
out
i  則分別為
)(
2,
)1(
2,
)(
,
k
i
k
i
in
i TT 

 ， (4)
)(
3,
)1(
3,
)(
,
k
i
k
i
out
i TT 

 ， (5)
接下來，我們推導封包間隔變化與鏈
路頻寬及可用頻寬之間的關係。然而在推
導封包間隔變化與鏈路之可用頻寬與容量
之 關 係 式 時 ， 我 們 假 設 背 景 交 通
(Cross-Traffic)流為連續的流體交通模型。
在此模型下，我們把背景交通流視為均勻
的連續位元流，就如同水流一般。因此，
若背景交通之流量為，則在相鄰兩探測
封包抵達時間之間隔為 t 的情況下，此兩
探測封包傳輸過程中會穿插傳送 t的背景
資料量。在此我們以估算下傳鏈路(Down
Link)的容量與可用頻寬為例，推導 )( ,
in
i  及
)(
,
out
i  與各瓶頸鏈路之容量 jC 、背景資料流
量 j與可用頻寬 jA 之關係，然而所得的結
果亦適用於上傳鏈路。
圖 3：相鄰探測封包間隔在傳輸鏈路上之
變化情形。
假設探測封包之長度為 L，則 TTL = i
的探測封包列之第 k 個封包與第(k+1)個封
包之間隔從第 i 個路由器回傳之過程中，
令其通過各鏈路之間隔分別表示為
)(
,
)(
,
in
i
in
i   、 )( ,1ini  、 )( ,2ini  、…、 )(,2in 、 )(,1 in
及 )( ,
)(
,0
out
i
in
  ，如圖 3 所示，其中 )(,inj  ，
ij0 ，為第 k 個探測封包與第(k+1)個探
測封包抵達第 j 個路由器之時間差，亦即
)(
,
)1(
,
)(
,
k
j
k
j
in
j tt 

  ， (6)
其中 )1( ,


k
jt 與
)k(
,jt 為探測封包抵達第 j個路由
器之時間 )1( ij ，因為此時間並沒有記
錄在探測封包內(TTL = i 的探測封包只記
錄抵達、離開傳送端及第 i 個路由器之時
間)，所以我們用小寫的 t 以與記錄在探測
封包內的時戳 T 做區別， )1( ,


k
jt 與
)(
,
k
jt 只會在
我們分析過程中用到，並不會在估算可用
頻寬時用到，而引進 )(,
in
j  、 )1( , kjt 與 )( ,kjt 只是
6之瓶頸鏈路可用頻寬為
}{min
1, jnmji
AA

 。 (20)
(a)流體背景資料流
(b) 叢集性背景資料封包
圖 4：不同背景交通流模型對探測封包間
隔的影響。
(二)叢集性封包交通模型之可用頻寬估測
在前面的流體交通模型中，背景資料
流就如同連續的水流般流進網路中，且會
在一抵達路由器時就馬上被傳送出去，因
此在網路中背景資料流可均勻地穿插在探
測封包間被傳送出去，如圖 4(a)所示。但
在實際的網路中，資料是以封包為單位，
只有當整個封包完整的抵達路由器時，該
封包才可以被傳送，加上封包的隨機叢集
性，此時就有可能發生網路傳送出去的某
些探測封包間沒有任何背景資料流封包以
及某些探測封包間夾雜大量背景資料流封
包的狀況，如圖 4(b)所示，在此種狀況下
相鄰兩探測封包間的間隔有可能變小，但
這在流體交通模型中是不可能發生的。因
此，若直接採用前面流體交通模型下的線
性迴歸分析法，將會導致很大的估測誤
差。要解決這樣的困境，我們可以改採用
分析數個相鄰探測封包間的間隔變化來讓
背景資料流能較均勻的穿插在所分析的兩
探測封包間，以提高線性迴歸分析法的準
確度。亦即我們可分析相鄰 w 個封包的間
隔變化，我們以 )(Δ )(, w
in
i  及 )(Δ
)(
, w
out
i  來表示
第 k個探測封包與第(k+w)個探測封包之間
的間隔，於是 )(Δ )(, w
in
i  與 )(Δ
)(
, w
out
i  之關係將
修正如下：
)(Δ w(out)i, )(Δ w
(in)
i,jj   ， (21)
其中的 j與前面(14)式所定義的相同，但
j則必須修改為
j
j C
wL ， (22)
透過在不同叢集性封包背景交通流的環境
中，選擇適當的 w 值，便可有效降低可用
頻寬估測的誤差。
四、數值結果
我們擬採用NS2 [27]軟體來進行相關
的網路模擬，我們的網路模擬架構如圖5
所示，並針對不同的背景資料型態，如
CBR、Poisson等，進行模擬並比較所估測
之結果的差異性。
圖 5：網路模擬架構圖之範例。
首先，我們假設上行各段鏈路容量分
別為 10、8、6、8、10 Mbps；下行各段鏈
路容量分別為 6、8、10、8、6 Mbps，背
景資料流則假設為固定位元速率 CBR。除
了上行鏈路 3L 及下行鏈路 5L 之背景資料
流量為 5 Mbps 外，其餘鏈路之背景資料流
量均設為 1 Mbps，因此實際瓶頸鏈路分別
為 53 LL、 。接著我們讓 Client 端(傳送端)
依序傳送每回合(TTL= i，i =1,2,3,4,5)各 30
個探測封包，並控制所傳送的探測封包速
率均大於可用頻寬(探測封包速率呈線性
遞增)。其次，我們先固定背景資料流的封
包大小(分別為 500、1000、1500 Bytes)，
8結果如圖 7 所示，其結果都是採用 w = 1
估算出來的。圖 7 結果顯示在 Poisson 背
景資料流下，其估測結果的準確度比背景
資料流為 CBR 時來的差，且所需傳送的探
測封包數遠大於背景資料流為 CBR 的環
境，這是因為 Poisson 背景交通流的封包
流具有很高的隨機叢集性(Bursty)，所以用
流體交通模型來進行估測會導致較大的誤
差。但無論如何，此估測結果誤差均保持
在 10%以內，其中可用頻寬的估測誤差更
是低於 6%。
表 1：含二段壅塞鏈路之估測結果。
(a)
下行鏈路單位:
(Mbps) L1 L2 L3 L4 L5
鏈路容量 6 8 10 8 6
#1 2 4 (9) 3 (5)
#2 (5) 4 4 (7) 2
i #3 2 (7) 4 (7) 2
(b)
單位: (Mbps) #1 #2 #3
實際值 10 6 8
估測值 9.930.19 6.010.04 7.900.06Ci
誤 差 0.71% 0.14% 1.20%
實際值 9 5 7
估測值 8.910.21 5.010.04 6.890.07i
誤 差 0.21% 0.22% 1.52%
實際值 1 1 1
估測值 1.020.02 1.000.01 1.010.01
第
一
條
壅
塞
鏈
路
Ai
誤 差 1.51% 0.22% 1.04%
實際值 6 8 8
估測值 6.230.08 7.950.12 7.940.20Ci
誤 差 3.83% 0.62% 0.75%
實際值 5 7 7
估測值 5.270.09 6.950.13 6.940.22i
誤 差 5.41% 0.73% 0.89%
實際值 1 1 1
估測值 0.960.01 1.000.01 1.000.02
第
二
條
壅
塞
鏈
路
Ai
誤 差 4.03% 0.19% 0.20%
最後，我們針對具有多段壅塞鏈路之
路徑進行各段壅塞鏈路可用頻寬進行估
測。各段上行鏈路之頻寬分別為 10、8、6、
8、10 Mbps；下行各段鏈路容量分別為 6、
8、10、8、6 Mbps，背景資料流則假設為
固定位元速率 CBR。在此，我們只模擬壅
塞鏈路發生在下行鏈路之狀況，故假設上
行鏈路背景資料流量均為 1 Mbps，而下行
鏈路之背景資料流量則分別如表 1(a)與 2(a)
所示，其中含有括號的數字代表該段鏈路
會發生壅塞。每回合會送出 30 個探測封
包，探測封包大小固定為 1500 Bytes，至
於背景資料流封包大小則設為 500 Bytes，
每個實驗均重複 20 次，所有數值結果為其
平均，另包含 95%之信賴區間，如表 1(b)、
2(b)所示，其中表 2(b)之數值所採用的 w
值為 2，其餘部分的 w 值為 1。由表 1(b)
與 2(b)所得到的結果可知本計劃所提出的
可用頻寬估測法能正確估測出所有壅塞鏈
路之可用頻寬。
表 2：含三段壅塞鏈路之估測結果。
(a)
下行鏈路單位:
(Mbps) L1 L2 L3 L4 L5
鏈路容量 6 8 10 8 6
#1 (5) 4 (9) 3 (5)i
#2 1 (6.5) (8) (7) 1
(b)
單位: (Mbps) #1 #2
實際值 6 8
估測值 6.00850.0367 7.86560.1073Ci
誤 差 0.142% 1.679%
實際值 5 6.5
估測值 5.01080.0412 6.33970.1215i
誤 差 0.215% 2.466%
實際值 1 1.5
估測值 0.99780.0061 1.52590.0146
第
一
條
壅
塞
鏈
路
Ai
誤 差 0.224% 1.728%
實際值 10 10
估測值 9.91490.2000 10.39690.1264Ci
誤 差 0.851% 3.969%
實際值 9 8
估測值 8.89900.2196 8.43280.1331i
誤 差 1.122% 5.410%
實際值 1 2
估測值 1.01590.0207 1.96410.0080
第
二
條
壅
塞
鏈
路
Ai
誤 差 1.590% 1.795%
實際值 6 8
估測值 6.08930.0671 8.10170.0818Ci
誤 差 1.489% 1.271%
實際值 5 7
估測值 5.09770.0732 7.13310.0981i
誤 差 1.955% 1.901%
實際值 1 1
估測值 0.99160.0084 0.96860.0177
第
三
條
壅
塞
鏈
路
Ai
誤 差 0.841% 3.142%
10
[15] D. Kiwior, J, Kingston, and A. Spratt,
“PathMon, a Methodology for 
Determining Available Bandwidth Over
an Unknown Network,” IEEE/Sarnoff
Symposium on Advances in Wired and
Wireless Communication, pp., April
26-27, 2004.
[16] M. Jain and C. Dovrolis, “Ten falacies 
and pitfalls onend-to-end available
bandwidth estimation,” ACM
SIGCOMM Conference on Internet
Measurement, pp. 272–277, Alfio
Lombardo, 2004.
[17] Castellanos, C.U., Villa, D.L., Teyeb,
O.M., Elling, J., Wigard, J.,
“Comparison of Available Bandwidth 
Estimation Techniques in
Packet-Switched Mobile Networks” 
IEEE 17th International Symposium on
Personal, Indoor and Mobile Radio
Communications(PIMRC2006), pp. 1-5,
Sept. 2006.
[18] K. Lakshminarayanan, V. N.
Padmanabhan, J. Padhye, “Bandwidth 
Estimation in Broadband Access
Network,” ACM IMC’04, pp. 314-321,
Taormina, Sicily, Italy, Oct.25-27,
2004.
[19] R. L. Carter and M. E. Crpvella,
“Measuring Botleneck Link Speed in 
Packet-Switched Networks,” 
Performance Evaluation, Vol. 27, No.
28, pp. 297-318, 1996.
[20] Pittsburgh Supercomputer Center,
About the PSC Treno Server, Available
at
http://www.psc.edu/networking/treno_i
nfo.html.
[21] S. Sargento and R. Valadas, “Capacity 
and Cross-Traffic Estimation of All
Links in a Path Using ICMP
Timestamps,” International Conference
on Networking, International
Conference on Systems and
International Conference on Mobile
Communications and Learning
Technologies, ICNICONSMCL’06,
[22] S. Y. Nam, S. Kim, J. Kim, and D. K.
Sung, “Probing-Based Estimation of
End-to-End Available Bandwidth,” 
IEEE Communications Letters, Vol. 8,
No. 6, pp. 400-402, June 2004.
[23] Yu-Chen Huang, Chun-Shien Ku, and
Hsiao-Kuang Wu, “JiterPath: Probing 
Noise Resilient One-Way Delay
Jitter-Based Available Bandwidth
Estimation,” IEEE Trans. on
Multimedia, Vol. 9, No. 4, pp. 798-812,
June 2007.
[24] K. Lai and M. Baker, “Measuring 
Bandwidth,” IEEE INFOCOM, pp.
235-245, Apr.1999.
[25] T. Moors, “Streaming Traceroute by 
Estimating Path Lengths,” IEEE
Workshop on IP Operations and
Management, pp.123 –128, 11-13 Oct.
2004.
[26] RFC 1305, Network Time Protocol
(Version 3) Specification,
Implementation and Analysis.
[27] 柯志亨，程榮祥，謝錫堃，黃文祥，
《計算機網路實驗---以 NS2 模擬工具
實作》，初版，台北，學貫行銷股份
有限公司發行，民國九十四年六月。
七、計劃成果自評
本計畫之成果符合預期，也利用 NS2
成功地模擬 Traceroute 之運作，並讓參與
的學生學習到數學分析與數值統計等相關
技巧。本計畫之初步成果將可進一步實際
應用在採用可調式視訊編碼技術(SVC)之
多媒體通訊網路中，而相關之測試與應用
則有待下一階段持續進行。另外，本計劃
之研究成果已發表在 2009 IEEE Sarnoff 國
際研討會中，在該研討會中，我們的論文
發表曾引發熱烈的討論，我們已將與會學
者所提出的相關問題，持續進行探討與改
進中，相信在很短時間內將可投稿至國際
期刊。
Fig. 1. An illustration for Traceroute.
networks adopting SVC.
The rest of this paper is organized as follows. In section II,
a two-way ABW probing mechanism is delineated. In Section
III, we develop the estimation methodology for ABW. Several
experimental examples will be demonstrated in Section IV.
Section V will present a complete ABW estimation algorithm.
And finally in Section VI, we make the concluding remarks.
II. THE TWO-WAY ABW PROBING MECHANISM
In this study, we combine the concepts of Traceroute and the
timestamps in an ICMP packet [13], [14] to develop a two-way
ABW estimation scheme. Traceroute which is implemented by
ICMP can trace all the intermediate nodes (routers) along the
transmission path. An ICMP packet with initial TTL = i will
only arrive at the i-th node and then return to the sender, as
shown in Fig. 1. In our proposal, three timestamps including
Originate, Receive and Transmit Timestamps are allocated in
an ICMP packet. The Originate Timestamp, Ti,0, is the local
time at which the sender transmits the ICMP packet with TTL
= i. The Receive Timestamp, Ti,1, denotes the local time at
which node i receives this ICMP packet. And the Transmit
Timestamp, Ti,2, indicates the local time at which node i
replies this ICMP packet. When this ICMP packet returns to
the sender at local time Ti,3, one can easily obtain the round-
trip delay between the sender and the i-th intermediate node
by calculating Ti,3 − Ti,0, for example.
Using the method similar to Traceroute, one can easily
estimate the ABW of both the uplink and downlink paths.
Subsequently, we elaborate on the proposed two-way ABW
probing mechanism as follows.
1) First, one has to estimate the path length (in hops) from
the sender to the receiver [15]. Assume that the path
length is H hops.
2) At the i-th round (i = 1, 2, · · · ,H), the sender sends
N ICMP probing packets (a probing packet train) with
TTL = i to the receiver. Notably, when all the probing
packets of the previous round have been sent, the new
probing packets of the next round can be transmitted
immediately.
3) At every round N probing packets with same TTL value
are sent. All probing packets are of the same size but
the gaps between successive packets should be strictly
increasing or decreasing for enhancing the estimation
accuracy. Since the path length is H and each round N
packets are sent, totally NH probing packets should be
sent in a whole probing process.
4) When the sender receives the returned probing packets,
the input and output gaps of any two consecutive probing
packets are computed according to their timestamps.
Finally, one can estimate the ABW by using the method
developed in the next section.
III. ESTIMATION METHOD FOR ABW
Consider a certain probing packet train with initial TTL =
i. Let the timestamps of the k-th packet of this probing train
be T (k)i,0 , T
(k)
i,1 , T
(k)
i,2 , and T
(k)
i,3 , respectively. Then the input
and output gaps between the k-th and the (k + 1)-st probing
packets in the uplink path, Δ(in)i,↑ and Δ
(out)
i,↑ , can be calculated
by
Δ(in)i,↑ = T
(k+1)
i,0 − T (k)i,0 , (1)
Δ(out)i,↑ = T
(k+1)
i,1 − T (k)i,1 . (2)
While in the downlink path, the input and output gaps become
Δ(in)i,↓ = T
(k+1)
i,2 − T (k)i,2 , (3)
Δ(out)i,↓ = T
(k+1)
i,3 − T (k)i,3 . (4)
Note that we are only interested in the packet dispersions
rather than the OWD (one-way delay) of probing packets so
the system clocks at all nodes need not be synchronized.
Let us now derive the relationship between the input gap and
the output gap of any two successive probing packets at node
i in terms of the link capacity Ci, the cross traffic rate λi, and
the probing packet size L. Without loss of generality, in the
following we only illustrate the ABW estimation method for
the downlink path. Of course, the method is also applicable to
the uplink path. Hereafter, we assume the cross traffic follows
the fluid traffic model which is frequently used in literature.
Under this assumption, the amount of cross traffic being served
within the gap of two consecutive probing packets will be λt,
if the gap between these two probing packets is t and the
constant cross traffic rate is λ. Based on this insight, if t(k)j,↓
is the arrival instant of the k-th probing packet at the j-th
node and δ(in)j,↓ indicates the input gap between the k-th and
the (k + 1)-st probing packets at node j, one can derive the
following results.
Case A: When L + λjδ(in)j,↓ ≤ Cjδ(in)j,↓ , i.e., L ≤ Ajδ(in)j,↓ ,
t
(k)
j−1,↓ = t
(k)
j,↓ +
L
Cj
+ τj , (5)
t
(k+1)
j−1,↓ = t
(k+1)
j,↓ +
L
Cj
+ τj , (6)
where Aj = Cj − λj is the ABW and τj denotes the
propagation delay of link j. By (5) and (6), we have
δ
(in)
j−1,↓ = t
(k+1)
j−1,↓ − t(k)j−1,↓ = t(k+1)j,↓ − t(k)j,↓ = δ(in)j,↓ . (7)
Case B: When L + λjδ(in)j,↓ > Cjδ
(in)
j,↓ , i.e., L > Ajδ
(in)
j,↓ ,
t
(k)
j−1,↓ = t
(k)
j,↓ + w
(k)
j,↓ +
L
Cj
+ τj , (8)
t
(k+1)
j−1,↓ = t
(k)
j,↓ + w
(k)
j,↓ +
2L + λjδ
(in)
j,↓
Cj
+ τj , (9)
Authorized licensed use limited to: Chang Gung University. Downloaded on June 26, 2009 at 06:03 from IEEE Xplore.  Restrictions apply.
TABLE I
CROSS-TRAFFIC RATES (λi) IN ALL LINKS FOR EACH EXPERIMENT.
Uplink Downlink
(Mbps) L1 L2 L3 L4 L5 L1 L2 L3 L4 L5
Ci 10 8 6 8 10 6 8 10 8 6
Exp. 1 2 2 (5) 3 4 2 4 4 3 (5.5)
Exp. 2 (9.5) 2 2 3 4 2 4 4 (7) 2
λi Exp. 3 2 (7) 2 3 4 2 (7.5) 4 3 2
Exp. 4 2 2 2 3 (9) 2 4 4 3 (5)
Exp. 5 2 2 2 (7.5) 4 (5.5) 4 4 3 2
Exp. 6 2 2 2 3 (9) 2 4 (9) 3 2
TABLE II
ESTIMATION RESULTS OF ABW (Ai) IN THE BOTTLENECK LINKS FOR
EACH EXPERIMENT.
Ai Uplink Downlink
(Mbps) Real Estimation Error Real Estimation Error
Exp. 1 1.0 0.991 0.9% 0.5 0.487 2.8%
Exp. 2 0.5 0.471 5.8% 1.0 1.016 1.6%
Exp. 3 1.0 1.027 2.6% 0.5 0.530 3.0%
Exp. 4 1.0 0.990 1.0% 1.0 0.980 2.0%
Exp. 5 0.5 0.491 1.6% 0.5 0.496 0.8%
Exp. 6 1.0 0.990 1.0% 1.0 1.004 0.4%
This will be presented later in Section V. The estimation errors
of ABW in the bottleneck links for each experiment are shown
in Table II. All the results demonstrate that the accuracy of
the proposed ABW estimation approach is excellent, since all
the estimation errors in Table II are less than 6%.
We next evaluate the performance of our estimation method
under the case of multiple tight links. The simulation parame-
ters remain unchanged as in previous experiments except that
cross-traffic rates are alternated. The cross-traffic rates of all
links are given in Table III. This time we only measure the
ABW of tight links in the downlink. As shown in Table III,
there exist exactly two tight links for every experiment. By
using (11), one can first calculate the link capacity and cross-
traffic rate for the first tight link, and then evaluate the link
capacity and cross-traffic rate for the second tight link by (12).
The estimation results of ABW for both tight links are shown
in Table IV. Although the the estimation error for the second
tight link will be a little greater than that of the first tight link,
all the errors are less than 6%. Therefore, we conclude that
the proposed bandwidth measurement scheme in this paper can
not only fulfill the two-way ABW estimation but also realize
the ABW inference for all tight links.
Let us now examine the effect of the number of probing
packets per round on the estimation error. The link capacities
of link 1 to link 5 in the uplink are {10, 16, 12, 16, 12}
Mbps and in the downlink are {12, 16, 10, 16, 12} Mbps.
All cross-traffic rates are set to be 0.5 Mbps except that the
cross-traffic rate for link 3 in the downlink is 4.5 Mbps. Link
3 in the downlink is still the only tight link in this example.
Under different cross-traffic patterns CBR, Poisson, and Pareto
which is a kind of ON-OFF source, the behavior of estimation
error versus the number of probing packets per round (N )
is illustrated in Fig. 4. Obviously, as the number of probing
packets increases, the estimation error becomes smaller and
TABLE III
CROSS-TRAFFIC RATES (λi) IN ALL LINKS FOR EACH EXPERIMENT.
Downlink
(Mbps) L1 L2 L3 L4 L5
Ci 6 8 10 8 6
Exp. 1 2 4 (9) 3 (5)
Exp. 2 (5) 4 4 (7) 2
λi Exp. 3 2 (7) (9) 3 2
Exp. 4 (5) 4 4 3 (5)
Exp. 5 2 (7) 4 (7) 2
Exp. 6 (5) 4 (9) 3 2
TABLE IV
ESTIMATION RESULTS OF ABW (Ai) FOR THE CASE OF MULTIPLE TIGHT
LINKS.
Ai 1st Tight Link 2nd Tight Link
(Mbps) Real Estimation Error Real Estimation Error
Exp. 1 1.0 0.980 2.0% 1.0 0.998 0.2%
Exp. 2 1.0 1.013 1.3% 1.0 0.952 4.8%
Exp. 3 1.0 0.998 0.2% 1.0 1.052 5.2%
Exp. 4 1.0 1.013 1.3% 1.0 0.962 3.8%
Exp. 5 1.0 0.998 0.2% 1.0 1.031 3.1%
Exp. 6 1.0 1.013 1.3% 1.0 0.959 4.1%
 0
 5
 10
 15
 20
 25
 20  40  60  80  100 120 140 160 180 200 220 240 260 280 300
Es
tim
at
io
n 
Er
ro
r o
f A
va
ila
bl
e 
Ba
nd
w
id
th
 (%
)
Number of Probing Packets
CBR
Pareto:(9,1)
Pareto:(7,3)
Poisson
Fig. 4. Effect of the number of probing packets on the estimation error of
ABW under different cross-traffic patterns.
can be less than 5% for all cross-traffic types at N = 300.
Besides, we can see from Fig. 4 that the accuracy is the best
under CBR cross-traffic (<5%), while it is the worst for Pareto
cross traffic with (burst time, idle time)=(7ms,3ms). Notably,
for Pareto larger ratio of burst time to idle time means that
it is closer to CBR. Finally, in Fig. 4 we observe that the
estimation error can be less than 12% for Pareto (9ms, 1ms)
and Poisson cross-traffic types even at N = 20.
Subsequently, we investigate the influence of packet sizes of
cross traffic and probing packets on the estimation error. The
link capacities of link 1 to link 5 in the uplink are replaced
by {100, 80, 60, 80, 100} Mbps. While the link capacities
of link 1 to link 5 in the downlink are {60, 80, 100, 80, 60}
Mbps. The cross traffic is assumed to be a Poisson process. All
cross-traffic rates are set to be 10 Mbps except that the cross-
traffic rate for link 3 in the downlink is 90 Mbps. Similarly,
Authorized licensed use limited to: Chang Gung University. Downloaded on June 26, 2009 at 06:03 from IEEE Xplore.  Restrictions apply.
procedure ABW (int H , N ; double R : initial probing rate)
{ bool Congested = false;
while (!Congested && R is not over concerned)
{ for (i=1; i≤H; i++) // H hops along the path
{ t = current time;
for (j=0; j<N ; j++) // N probing packets per round
{ t = t+L/(R+ jΔR); // probing rate R+ jΔR
Send the probing packet with TTL = i at time t;
}
Calculate Δ(in)i and Δ
(out)
i from returned packets;
Linear Regression (Δ(in)i , Δ(out)i , r); // the slope r
if (|1− r| > ε) // decision parameter ε
{ if (!Congested)
Estimate (Ci, λi) by using Eq. (11);
else Estimate (Ci, λi) by using Eq. of multiple
tight links similar to (12);
Congested = true;
}
}
if (!Congested)
R = R + (N + 1)ΔR/2; // increase R if not congested
}
}
Fig. 7. The Two-Way ABW Estimation Algorithm.
Mbps. (To tolerate more 10% of bandwidth variation,
for example.)
2) If congestion occurs, i.e., |1− r| > ε, the user gives up
his intention. Otherwise, he can subscribe this enhance-
ment layer of video stream immediately.
VI. CONCLUSIONS
This article introduces an ABW estimation scheme which
employs the concepts of Traceroute and ICMP timestamps.
The proposed methodology can infer the link capacity and
cross-traffic rate of each congested link along a transmis-
sion path, both in the uplink and downlink. Specifically, the
presented approach is a two-way ABW measurement tech-
nique which is never suggested in literature. Such a two-way
ABW estimation methodology is very suitable for multimedia
streaming networks adopting SVC. Numerical results demon-
strate that the performance of the proposed scheme can achieve
high accuracy when the packet size of cross traffic is small.
And for larger cross-traffic packets, the estimation error can be
reduced to less than 15% if the number of probing packets is
increased significantly. However, using more probing packets
will lengthen the estimation period. Thus, in order to improve
the performance of our ABW measurement scheme, we think
the packetized traffic queueing model (or bursty traffic model)
[16]–[19] for cross traffic should be considered in the near
future.
REFERENCES
[1] J. R. Ohm, “Advances in Scalable Video Coding,” Proceedings of the
IEEE, Vol. 93, No. 1, pp. 42-56, Jan. 2005.
[2] Chun-Su Park, Nam-Hyeong Kim, Sang-Hee Park, Goo-Rak Kwon, Sung-
Jea Ko, “Video Transmission Adopting Scalable Video Coding over Time-
varying Networks,” IEEE Trans. on Consumer Electronics, Vol. 52, No.
2, MAY 2006.
[3] V. Riberiro, M. Coates, R. Riedi, S. Sarvotham, B. Hendricks, and R.
Baraniuk, “Multifractal Cross-Traffic Estimation,” ITC Specialist Seminar
on IP Traffic Measurement, Modeling, and Management, pp. 15-1 15-10,
Sept. 2000.
[4] N. Hu, and P. Steenkiste, “Evaluation and Characterization of Available
Bandwidth Probing Techniques,” IEEE JSAC, Vol. 21, No. 6, pp. 879-894,
Aug. 2003.
[5] J. Strauss, D. Katabi, and F. Kaashoek, “A Measurement Study of
Available Bandwidth Estimation Tools,” ACM SIGCOMM Conference on
Internet Measurements, pp. 39-44, Florida, Oct. 2003.
[6] Minjian Zhang, Chong Luo, Jiang Li, “Estimation Available Bandwidth
Using Multiple Overloading Streams,” IEEE ICC’06, pp. 495-502, June
2006.
[7] C. Dovrolis, P. Ramanathan, and D. Moore, “Packet Dispersion Tech-
niques and a Capacity-Estimation Methodology,” IEEE/ACM Trans. Net-
working, Vol. 12, No. 6, pp.963-977, Dec. 2004.
[8] B. Melander, M. Bjorkman, and P. Gunningberg, “A New End-to-End
Probing and Analysis Method for Estimating Bandwidth Bottlenecks,”
IEEE GLOBECOM’00, pp.415-420, 2000.
[9] M. Jain and C. Dovrolis, “End-to-End Available Bandwidth: Measure-
ment Methodology, Dynamics, and Relation With TCP Throughput,”
IEEE/ACM Trans. Networking,Vol. 11, No. 4, pp. 537-549, Aug. 2003
[10] V. Ribeiro, R. Riedi, R. Baraniuk, J. Navratil, and L. Cottrell. “Pathchirp:
Efficient Available Bandwidth Estimation for Network Paths,” Passive and
Active Measurements Workshop, San Diego, CA, USA, April 2003.
[11] D. Kiwior, J, Kingston, and A. Spratt, “PathMon, a Methodology
for Determining Available Bandwidth Over an Unknown Network,”
IEEE/Sarnoff Symposium on Advances in Wired and Wireless Commu-
nication, pp. 27-30, April 26-27, 2004.
[12] M. Jain and C. Dovrolis, “End-to-End Estimation of the Available
Bandwidth Variation Range,” ACM SIGMETRICS’05, pp. 265-276, Banff,
Alberta, Canada, June 6-10, 2005.
[13] R. L. Carter and M. E. Crpvella, “Measuring Bottleneck Link Speed
in Packet-Switched Networks,” Performance Evaluation, Vol. 27, No. 28,
pp. 297-318, 1996.
[14] S. Sargento and R. Valadas, “Capacity and Cross-Traffic Estimation of
All Links in a Path Using ICMP Timestamps,” International Conference
on Networking, International Conference on Systems and International
Conference on Mobile Communications and Learning Technologies, IC-
NICONSMCL’06.
[15] T. Moors, “Streaming Traceroute by Estimating Path Lengths,” IEEE
Workshop on IP Operations and Management, pp.123 -128, 11-13 Oct.
2004.
[16] S. Y. Nam, S. Kim, J. Kim, and D. K. Sung, “Probing-Based Estimation
of End-to-End Available Bandwidth,” IEEE Communications Letters, Vol.
8, No. 6, pp. 400-402, June 2004.
[17] Yu-Chen Huang, Chun-Shien Ku, and Hsiao-Kuang Wu, “JitterPath:
Probing Noise Resilient One-Way Delay Jitter-Based Available Band-
width Estimation,” IEEE Trans. on Multimedia, Vol. 9, No. 4, pp. 798-
812, June 2007.
[18] X. Liu, K. Ravindran, and D. Loguinov, “A Queueing-Theoretic
Foundation of Available Bandwidth Estimation: Single-Hop Analysis,”
IEEE/ACM Trans. Networking, Vol. 15, No. 4, pp. 918-931, Aug. 2007.
[19] X. Liu, K. Ravindran, and D. Loguinov, “A Stochastic Foundation of
Available Bandwidth Estimation: Multi-Hop Analysis,” IEEE/ACM Trans.
Networking, Vol. 16, No. 1, pp. 130-143, Feb. 2008.
Authorized licensed use limited to: Chang Gung University. Downloaded on June 26, 2009 at 06:03 from IEEE Xplore.  Restrictions apply.
表 Y04
- Military Communications
* Disruption Tolerant Networks
* Trust, Security, and Privacy
* Power Management Issues
- Multimedia Applications & Networking
* Multimedia Communications
- Optical Communications & Networking
* WDM Systems
* Broadband Access Communication
Technologies
* Fiber-Wireless (FiWi)
* Radio over Fiber (RoF)
- Communications Theory
* Network Information Theory
* Signal Processing for Communications
* Modulations and Coding Techniques
* Transceiver Design
* Satellite Communication Systems
- Wireless Communications
* WLAN, WiMAX, 3G and 4G Systems
* Multiple Antenna Systems (Uplink and
Downlink MIMO/Beamforming)
* Radio Resource Management and
Interference Management
* Femto Network Deployment
* Self Configuring Networks
* Self Optimizing Networks
* Sensor, Mesh & Ad Hoc Networks
* Performance Analysis of Wireless Systems
* Ultra Wideband (UWB) Communications
* User and Network Security in Next
Generation Networks
我在台北時間 3/27 傍晚搭乘華航班機直飛紐約，經過 14 小時的飛行，順利在美東
時間 3/27日午夜住進Manhattan市中心的飯店，並利用週末兩天在Manhattan市區逛逛，
包括時代廣場、帝國大廈、Rockefeller Center及聯合國總部等等。接著在 3月 30日搭乘
NJT 火車到紐澤西州的 Princeton 參加此次的研討會，車程約一小時初頭。研討會的
Tutorial 在 3 月 30 日在 Princeton 大學舉行，Princeton 大學是一個歷史悠久且知名的學
府，每棟建築歷史悠久且非常有特色，是一個非常漂亮的大學。論文發表則是排在 3 月
31日及 4月 1日兩天，在 Princeton大學旁的 Nassau Inn舉行，本人在 3月 31日一早註
冊報到後，隨即舉行 Keynote Speech，講題為光網路(Optical Networks)的發展與未來，在
目前強調高速傳輸與節能減碳的環保意識下，相信光網路是未來必然的趨勢。Keynote
Speech結束後，接下來就是各個 Session的論文發表，我的論文發表時間在 3月 31日上
午 10:30至 12:30，我排在該 Session的第三位發表，每篇論文報告 20分鐘，五分鐘提問
與討論，我們這個 Session參與的人數較其他 Session為多，大家對我的報告也反應熱烈，
好幾個與會者舉手要發問，但受限於時間限制，主席只讓兩位提問討論後，即進行下一
個報告，而他們的問題對我論文的修改也很有貢獻，讓我也收穫良多。
第二天午餐時同時進行學生論文競賽的評選，並公佈得獎的前三名。接著在午餐後
邀請了 Columbia 大學的知名網路專家 Dr. Henning Schulzrinne 進行專題演講，講題是
Networks：Civil Engineering，談到未來十年二十年後，網路的標準應該怎麼進行，這種
網路法定工程對我們這些只 Focus 在網路技術上的人來說，是一個很有趣且值得省思的
課題。總計兩天論文發表共約一百篇左右，其中來自美國以外地區所佔的比率約為 58%，
其中來自台灣的論文計有五篇。整個研討會順利在 4月 1日傍晚結束。
表 Y04
包括了所有參加學生論文競賽的所有論文，可提供本校有需要的教職員生利用。
相關活動照片：
研討會註冊報到
研討會展示會場攤位
