 2
行政院國家科學委員會專題研究計畫成果報告 
 
流程工廠生產系統伴隨著學習效果下最大完工時間最小化之研究 
 
The study of minimizing the makespan on multiple-machine flowshop with learning 
consideration 
 
計畫編號:NSC 95-2221-E-035-099 
執行期限:2006 年 08 月 01 日至 2007 年 07 月 31 日 
主持人:吳進家  逢甲大學統計系 
計畫參與人員:鐘愉翔 徐鵬翔、劉明芳逢甲大學統計暨精算研究所 
 
一、中文摘要 
Pinedo (2002)在其書中指出；在很多製造業
和組合裝配廠中，常常發現到每個工作件的完成都
需要經過若干個處理的程序，又這些程序的完成又
都必須依照一定的順序來做，因而將考慮完成這些
工作件的機器；考慮成依序的方式來設立。而這種
方式的考量在排程的理論稱之為流程工廠(flow 
shop)，諸如印刷電路板，整合電路，電視機，影
印機等。由於在很多實際的生產情況之中大都是多
部機器的情況。但是，在傳統的多部機流程工廠排
程中，研究者忽略到工作人員會經由不斷重複的操
作相同或相似的動作，累積了經驗之後，後序的工
作將會駕輕就熟，而越作會越快，此一現象稱之為
學 習 效 果 (learning effect) 。 Heizer 和 
Render(1999)更於其書中曾指出當顧主(firms)和
員工(employees)重複地從事某工作時就會產生學
習效果，學習到如何使其工作更加有效率，亦即
使得工作的時間和成本的降低(頁 796)。而 Biskup 
(1999)更指出具有相同或相似性的工作件(job)如
果經由重複的操作是有助於工作的加工時間(job 
processing time)的縮短。然而相關學者在多機流
程工廠最大完工時間(makespan)的問題研究上，卻
將所有的工作的加工時間(job processing time)
設為固定的常數。很顯然的，此種假設與很多的實
際的生產情況並不吻合。因此，本計畫嘗試將學習
效果(learning effect)的概念應用在多部機流程
工廠排程之中，來找出最佳化的排序使得最大完工
時間達到最小化。在傳統的多部機流程工廠排程的
問題，不考慮具有學習效果的因素時，Rinnooy Kan 
(1976), Garey et al. (1976)已証明出此問題為
一個非常難解的問題(NP-hard)。很顯然的，本計
劃所題的問題也是一個非常難解的問題。因此，本
計畫將著眼於如何快速來找出最佳解(optimal 
solution) 以 及 最 佳 近 似 解 (near-optimal 
solution)兩個方向之研究。在最佳解方面；文獻
上將參考 Gilmore 和 Gomory (1964), Panwalker
和  Khan (1975), Baker (1974), Ignall 和 
Schrage (1965), 和 McMahon 和 Burton (1967), 
Dotts (1980)解決此一問題相關的刪除性質來提昇
分枝界限法(branch-and-bound algorithm)為主。
在最佳近似解方面；將參考一些好的近似法作為依
據，如 Campbell et al. (1970) 的 CDC heuristic、 
Nawaz et al.(1983)提出 NHE heuristic、而 1997
年 Moras et al. (1997)則提出 AMC ( Antithetic 
Monte Carlo method ) 、或者其他尚有所謂
local-search methods 包括退火法( Simulated 
annealing )如 Osman 和 Potts (1989), Ogbn 和 
Smith (1990) 這兩篇著作比較插入與置換鄰域
( neighborhoods ) 、塔布( tabu search)法，如
Widmer 和 Hertz (1989), Taillard (1990), 
Nowicki 和  Smutnicki (1996), Grabowski 和 
Wodecki (2004) 、 和 基 因 演 算 法 ( genetic 
algorithm ) 如 Reeves (1995), Toklu et al. 
(2004), Iyer 和 Saxena (2004)等等的方法。 
最後，將特別針對所推導出或發展的啟始演算
法加以模擬測試。在最佳解方面；將測試分支界限
法配合刪除的相關定理或下界值之下可解的工作
件數。在最佳近似解方面；將將測試近似演算法的
解和最佳解比較下的品質和效果。同時也將考慮到
改變不同的學習效果的情況下對於解題的品質和
解題的時間所帶來的影響。 
關鍵字：多機流程工廠、最大完工時間、學習效果。 
 
Abstract 
Pinedo (2002) pointed out that in many 
manufacturing and assembly facilities, a number of 
operations have to be done one every job. Often these 
operations have to be done on all jobs in the same 
order implying that the jobs have to follow the same 
route. The machines are assumed to be set up in series, 
and the environment is referred as a Flow shop (e.g. 
printed circuit boards, integrated circuits, TV sets, 
copiers). In particular, the makespan minimization is 
of considerable practical interest as its minimization is 
to a certain extent equivalent to the maximization of 
the utilization of the machines.  
However, in literature of the classical 
multiple-machine flowshop with the makesapn, most 
researchers assumed that job processing time is 
constant and fixed. In fact, they are not true in some 
situations. For instance, Heiser and Render (1999) and 
Russell and Taylor (2000) both claimed that in several 
industries have verified that unit costs decline as firms 
 4
領域則是近年來的事，Biskup (1999)的文章中也
指出尚未發現有人將 learning effect 引用在排程
領域中，而 Mosheiov (2001) 也提出若干這方面的
問題，他指出有些傳統方法依舊可用，有些却得付
出更大的努力，才可求出其解。隨後，Lee et 
al.(2003)等作者也針對學習效果在單機雙準則的
問題將總完成時間（total completion time）和最大
的遲緩(maximum tardiness)兩個目標合併考慮。
Lee 和 Wu (2004) 也 針 對 雙 機 流 程 工 廠
(two-machine flowshop)在伴隨有學習效果之下的
平均流程時間(mean flow time)最小化問題提出相
關的解決步驟和方法。Mosheiov 和 Sidney (2005)
也探討在具有相同到期日的情形下，延遲工作個數
(number of tardy jobs)最小化仍然具有多項式時
間解(polynomial time)。Wang 和 Xia (2005)也探
討若干個流程工廠的問題其目標函數則以最大完
工時間與平均流程時間，而且考慮到在不同形式的
學習曲線。Wu(2005)研究雙機流程工廠伴隨有學習
效果之下的最大完工時間(makespan)，分別提出真
正解與近似解。同時，Wu(2005)也探討單機伴隨有
學習效果之下的加權平均流程時間(weighted 
total completion time)最小化之問題。Wu et 
al.(2005)也將學習效果引用在有時間上考量的問
題上，探討一個雙機流程工廠以延遲時間為準則，
他們除了提出若干刪除法則之外，也以退火法求近
似解。另外，Chen et al.(2005)更將此一系類問
題推廣到雙機流程工廠以雙準則為考慮的目標，我
們分別對於所提出之刪除法則與下界值測試其貢
獻情形，也對於不同的學習水準進行分析。除此之
外，Wu et al.(2005)也討論學習效果在一個單一
機器最大延遲時間(maximum lateness)最小化之問
題，尋求最大延遲時間最小化提出二個演算法；第
一個傳統的演算法--根據 earliest due date (EDD) 
法則，加上相鄰成對搜尋法。第二個是利用模擬退
火法(SA)(simulated annealing )。另外，Lee et 
al.(2005)也在這一係類的問題中將機器的維修情
況考慮進來進行研究，探討一個單機同時兼具學習
效果與機器須維修的情形。另外，Wu(2004)探討單
機伴隨有學習效果之下的加權平均流程時間
(weighted total completion time)最小化之問
題，同時 Wu(2004)研究雙機流程工廠伴隨有學習效
果之下的最大完工時間(makesapn)最小化之問題
等等著作。 
經由於這些年來所穫取的諸多寶貴的經驗正好可
以進一步作為多機流程工廠的基礎，更加推動個人
往這方向來繼續探討的動力。個人乃特別針對多部
機流程工廠在伴隨有學習效果之下的平均流程時
間最小化問題提出相關的解決步驟和方法。 
三、研究結果與討論 
本計劃研究裡引用 NEH 傳統公認最佳解多機
makespan排程的問題，同時也修改來自解多機mean 
flowtime 的三個著名演算法(RZ, WY, FL)，同時配
合著列舉法，測試在不同的學習效果之下，與不同
的機器數下，來探討這些各演算法的表現行為。在
小工作量時 n=8 和 10，本計畫發現 FL 表現最佳、
NEH 與 WY 次之，且表現相防，最差者為 RZ(請參閱
附件 Table 1)。 
本研究也對於這6個演算法測試共在樣本數為
50，100，150 和 200 的工作數的表現，而機器數則
設定在 5，10，15 和 20。 
分別報告他們的相對誤差百分比和最大相對
誤差百分比，統計測試了 4800 個例子，結果發現
到這六個演算法中彼此互有優劣點，另人驚訝的是
Rajendran 和 Ziegler(1997)的演算法在小工作件
數表現強眼，而在大工作件數時卻有最大的平均相
對誤差比。結體看來 Framinan 和 Leisten(2003)
所提出的演算法表現突出，而且不會受到工作數或
機器數增加時或學習效果增強時的影響，表現非常
穩定。(請參閱附件 Table 2)                                                
四. 計劃成果自評 
本計畫引用學習效果(learning effect)的概
念在傳統的多機模型排程(mutliple-machine 
scheduling flowshop)之中，來找出一個最佳化的
排序使得最大完工時間(makespan)達到最小化。我
們應用列舉法配合應用傳統著名的四種演算法在
不同的學習效果下透過模擬將這些結果加以比較
分析。同時將結果撰寫成一篇文章(見附件)，也將
本篇文章投稿到相關的期刊。本計劃大致上與原計
劃是吻合. 
 
 
五、參考文獻 
1. Biskup D. (1999) Single-machine scheduling with learning 
considerations, European     Journal of Operational Research 
115, 173-178.  
2.  Chen P., Wu C.C. and Lee W.C. (2005) A bi-criteria 
two-machine flowshop scheduling problem with a learning 
effect. Journal of the Operation Research Society  (accepted) 
3.  Lee W.C. and Wu C.C. (2004) Minimizing total completion time 
in a two-machine flowshop with a learning effect, International 
Journal of Production Economics 88,85-93. 
4.  Lee W.C., Wu C.C. and Sung H.J. (2004) A bi-criterion 
single-machine scheduling problem with learning considerations, 
Acta Informatica 40, 303-315. 
5.  Mosheiov G. (2001) Scheduling problems with a learning effect, 
European Journal of Operational Research 132, 687-693. 
6.  Mosheiov G. and Sidney J.B. (2003) Scheduling with general 
job-dependent learning curves, European Journal of Operational 
Research 147, 665-670. 
7.  Mosheiov G. and Sidney J.B. (2005) Note on scheduling with 
general learning curves to minimize the number of tardy jobs, 
Journal of the Operational Research Society 56, 110-112. 
8.  Pinedo M. (2002) Scheduling: Theory, Algorithms, and Systems, 
Prentice Hall, Upper Saddle River, New Jersey. 
9.  Wang J.B. and Xia Z.Q. (2005) Flow-shop scheduling with a 
learning effect 56, 1325-1330. 
10. Wright T.P. (1936) Factors affecting the cost of airplanes, 
Journal of Aeronautical Science 3, 122-128. 
11. Wu C.C. (2005) A makespan study of  the two-machine 
flowshop scheduling problem            with a learning 
effect, Journal of  Statistics & Management Systems 8(1), 
13-25. 
12. Wu C.C. (2005) The development of a solution to the 
single-machine total weighted completion time problem with a 
learning effect, International Journal of Management. 
(accepted).  
13. Wu, C.C., Lee, W.C., and Wang, W.C. (2005) A two-machine 
flowshop maximum tardiness scheduling problem with a 
learning effect. The International Journal of Advanced 
Manufacturing Technology (accepted). 
 6
on this concept of learning, the processing times can be effected by 
the number of jobs being processed (or called as position-based 
learning). Literature further releases that it is relatively unexplored 
in the multiple-machine settings. Therefore, this study considers a 
permutation flowshop scheduling problem with a learning effect 
where the objective is to minimize the makespan. Four well-known 
heuristics are modified for the problem in this paper. The 
performances of the proposed algorithms are used to further 
compare with each other from the small and larger job-sizes, 
respectively 
 
Keywords: scheduling; flowshop; makespan; learning effect 
 
1. Introduction 
Recent empirical studies in several industries have 
demonstrated that unit costs decline as firms produce more of a 
product and gain knowledge or experience (Heizer and Render 1999, 
Russell and Taylor 2000). For instance, Biskup (1999) claimed that 
repeated processing of similar tasks improves the worker skills; 
workers are able to perform setup, to deal with machine operations 
or software, or to handle raw materials and components at a greater 
pace. This phenomenon is known as the “learning effect” in the 
literature. The impact of learning on productivity in manufacturing 
in the aircraft industry was first found by Wright (1936) and it was 
subsequently discovered in many industries in both manufacturing 
and service sectors (Yelle, 1979). 
Biskup (2007) further pointed out that as there is a significant 
involvement of humans in scheduling environments, the amount of 
learning activities is high, too. Hence it seems to be reasonable to 
consider learning in scheduling environments. Biskup (1999) first 
introduced a scheduling model with learning effects in which the 
actual processing time of a job is a decreasing function of its 
position in the schedule. He showed that the single-machine 
problems to minimize total deviations of job completion times from 
a common due date and to minimize the sum of job completion 
times are polynomially solvable. Later, many researchers paid more 
attention on the relatively you but very vivid area of scheduling with 
learning effects. More recently, Biskup (2007) clarified some of 
economic fundamentals of scheduling and learning and afterwards 
provided a review with respective to different learning effects. 
  However, the concept of learning process is relatively unexplored 
in flowshop environment. Lee and Wu (2004) utilized a 
branch-and-bound method for the total completion time 
minimization problem in the two-machine flowshop environment. 
Wang and Xia (2005) studied the flowshop problems when the 
learning effect is present. They provided the worst-case bound of 
the shortest processing time first (SPT) rule for the makespan and 
the total completion time problems. They then showed that two 
special cases remain polynomially solvable for the makespan and 
the total completion time problems. Chen et al. (2006) considered a 
bi-criteria two-machine flowshop scheduling problem with the goal 
to jointly minimize the sum of completion times and the maximum 
tardiness. In addition, Zhao et al. (2004) showed that the total 
completion time and the makespan two-machine flowshop problems 
with learning consideration can be solved optimally by sequencing 
the jobs according to the STP rule on machine 1 under assuming 
identical processing time for all jobs on machine 2. Furthermore, 
they developed efficient algorithms for the two uniform machines 
with the same speed assumption. In this paper, we study the 
makespan problem in the multiple-machine flowshop. The rest of 
the paper is organized as follows. In the next section we describe the 
formulation of our problem. In Section 3, four well-known heuristic 
algorithms are modified to solve this problem. In Section 4, a 
computational experiment is conducted to evaluate the performances 
of the heuristic algorithms when the learning is present. A 
conclusion is given in the last section. 
 
2. Problem description 
Machine scheduling is concerning with the allocation of limited 
resources to task with the objective to optimize certain objective 
function. The problem has applications in the areas of many 
industrial systems. In this paper, we pay our attention to the 
flowshop problem with learning consideration. The problem can be 
stated as follows: 
Given a set of n jobs, say N= {1, 2, …, n}, that have to be 
processed on a set of m machines, each job j consists of m 
nonpreemptible operations, which have to be processed on the m 
machines. Each machine is able to process only one job operations 
at a time. The operations of every job must be processed on the 
machine in the same order. The normal processing time of a given 
job is denoted by pij. The actual processing time pijr of job j is a 
function which depends on its position r in a schedule, i.e., 
nrjmirpp aijijr ...,,2,1,      ;...,,2,1      , ===
,                               
where 0≤a  is the learning effect. 
For a given schedule S, let Cij(S) denote the completion time of job j 
in machine i, while Ci[j](S) denote the completion time of a job 
scheduled in the jth position on machine i. The objective of this 
paper is to find a schedule that minimizes the makespan, a widely 
used performance measure in scheduling literature. That is, we want 
to find a schedule 
∗S  such that )()( ][][ SCSC nmnm ≤∗  
for any schedule S . 
 
3. Description of algorithms used in comparative study 
Since the classical m-machine makespan scheduling problem is 
NP-hard when 3≥m (Garey et al., 1976), therefore, the problem 
under study with learning consideration is also an NP-hard one. In 
this paper, we are interested in investigating the impact of learning 
effect for the problem. Due to search for a solution to the problem of 
finding an optimal sequence requires consuming more computation 
time and memory, we then will focus on the performances of some 
existed heuristics which are efficient and economical ways of 
getting a good solution to the problem.  
The first one is provided by Nawaz et al. (1983). Nawaz et al. 
(1983) proposed a heuristic algorithm that the jobs with higher total 
process time should be given higher priority than the jobs with less 
total process times. They indicated that their algorithm performs 
especially well on large flowshop problems in both the static and 
dynamic sequencing environments.  Liu and Ong (2002), Ruiz and 
Maroto (2005) also claimed that NEH algorithm appeared to be the 
best polynomial heuristic algorithm as compared to other existed 
polynomial algorithms for the m-machine makespan flowshop 
scheduling problem. Due to the founding, we apply the first 
algorithm for our problem. A brief description of NEH algorithm is 
given below. 
The procedure of NEH algorithm: 
Step 1. Order the jobs by decreasing sums of processing times on 
machines. Let S denote the resulting sequence and set k=1. 
Step 2. Set k=1, select the first job in S to create a partial sequence π . 
Step 3. Update k=k+1. Select the kth job from S and insert it in k 
possible positions in the current partial sequence π . 
Among k sequences, select the one with the minimum 
partial makespan as the current partial sequence π . 
Step 4. If nk = , then stop, else go to Step 3. 
 
The second one is provided by Rajendran and Ziegler (1997). The 
original goal of the algorithm was used to solve for the mean flow 
time minimization. We make mirror modification to solve our 
problem replacing the mean flow time by makesapn as follows. The 
algorithm first generates several job sequences by putting different 
weights on the processing times. It then chooses the sequence with 
minimum makespan as the seed sequence, and applies an 
improvement scheme to it. The algorithm is described as follows. 
The procedure of RZ heuristic: 
Step 1. Order the jobs by decreasing the weighted sum of 
processing times iT , where 
∑ = +−= mj iji pjmT 1 )1( . Choose the sequence 
with the minimum makespan as the seed sequence S. 
Step 2. Set k=1, choose the first job in S to create a partial sequence π . 
Step 3. Update k=k+1. Choose the kth job from S and insert it in k 
possible positions of π . Among k sequences, select the 
one with the minimum partial makespan as the current 
partial sequence π . 
Step 4. If nk = , then stop, else go to Step 3. 
 8
for the m-machine, n-job flow-shop sequencing problem. 
OMEGA: The International Journal of Management Science 11, 
91-95. 
22. Rajendran, C., Ziegler, H., 1997. An efficient heuristic for 
scheduling in a flowshop to minimize total weighted flowtime of 
jobs. European Journal of Operational Research 103, 129-138. 
23. Russell, R., Taylor, III.B.W., 2000. Operations management: 
multimedia version, 3rd edition. Prentice Hall: Upper Saddle 
River, NJ. 
24. Wang, J.B., Xia, Z.Q., 2005. Flow-shop scheduling with a 
learning effect. Journal of the Operational Research Society 56, 
1325-1330. 
25. Woo, D.S., Yim, H.S., 1998. A heuristic algorithm for mean 
flowtime objective in scheduling. Computers and Operations 
Research 25, 175-182. 
26. Wright, T.P., 1936. Factors affecting the cost of airplanes. 
Journal of Aeronautical Science 3, 122-128. 
27. Yelle, L.E., 1979. The learning curve: historical review and 
comprehensive survey. Decision Science 10, 302-328. 
28. Liu, S., Ong, H.L., 2002. A comparative study of algorithms for 
the flowshop scheduling problem. Asia-Pacific Journal of 
Research 19, 205-222. 
29. Ruiz, R., Maroto, C., 2005. A comprehensive review and 
evaluation of permutation flowshop heuristics. European Journal 
of Operational Research 165, 479-494. 
30. Garey, M.R., Johnson, D.S., Sethi, R., 1976. The complexity of 
flowshop and jobshop scheduling. Mathematics of Operations 
Research 1, 117-129. 
Zhao, C.L., Zhang, Q.L., Tang, H.Y., 2004. Machine scheduling 
problems with learning effects. Dynamics of Continuous, Discrete 
and Impulsive Systems, Series A: Mathematical Analysis 11, 
741-750. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 10
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Table 2. The performance of the proposed heuristic algorithms on larger job sizes 
   Relative percentage deviation 
   
NEH 
RZ WY FL 
n  m  α  mean max mean max mean max mean max 
50 5 70% 1.0246  1.0644  1.0718  1.1343  1.0209  1.0706  1.0008  1.0305  
  80% 1.0202  1.0495  1.0501  1.1361  1.0161  1.0527  1.0005  1.0204  
  90% 1.0161  1.0474  1.0491  1.1495  1.0118  1.0332  1.0009  1.0161  
 10 70% 1.0182  1.0663  1.0787  1.1237  1.0144  1.0599  1.0006  1.0141  
  80% 1.0249  1.0692  1.0789  1.1776  1.0175  1.0595  1.0005  1.0176  
  90% 1.0268  1.0755  1.0899  1.1595  1.0151  1.0493  1.0011  1.0175  
 15 70% 1.0160  1.0456  1.0753  1.1569  1.0101  1.0452  1.0012  1.0339  
  80% 1.0215  1.0743  1.0700  1.1130  1.0140  1.0566  1.0003  1.0126  
  90% 1.0272  1.0728  1.1036  1.1669  1.0150  1.0495  1.0009  1.0132  
 20 70% 1.0144  1.0485  1.0701  1.1196  1.0085  1.0482  1.0006  1.0210  
  80% 1.0186  1.0455  1.0730  1.1419  1.0124  1.0501  1.0004  1.0094  
  90% 1.0291  1.0604  1.1042  1.1753  1.0171  1.0509  1.0004  1.0202  
100 5 70% 1.0198  1.0440  1.0854  1.1552  1.0170  1.0599  1.0000  1.0028  
  80% 1.0158  1.0368  1.0483  1.0931  1.0134  1.0444  1.0003  1.0081  
  90% 1.0149  1.0406  1.0396  1.1167  1.0107  1.0323  1.0004  1.0120  
 10 70% 1.0190  1.0652  1.0915  1.1497  1.0150  1.0515  1.0002  1.0084  
  80% 1.0213  1.0686  1.0673  1.1533  1.0138  1.0605  1.0001  1.0039  
  90% 1.0215  1.0491  1.0750  1.1597  1.0125  1.0369  1.0002  1.0067  
 15 70% 1.0197  1.0650  1.0938  1.1469  1.0111  1.0571  1.0004  1.0161  
  80% 1.0210  1.0578  1.0703  1.1284  1.0112  1.0353  1.0002  1.0106  
  90% 1.0250  1.0518  1.0946  1.1532  1.0122  1.0352  1.0002  1.0065  
 20 70% 1.0182  1.0631  1.0899  1.1573  1.0103  1.0555  1.0007  1.0170  
  80% 1.0190  1.0535  1.0775  1.1433  1.0119  1.0386  1.0001  1.0046  
  90% 1.0248  1.0545  1.1013  1.1503  1.0128  1.0398  1.0001  1.0027  
150 5 70% 1.0175  1.0406  1.0932  1.1537  1.0166  1.0382  1.0001  1.0078  
  80% 1.0161  1.0383  1.0443  1.0997  1.0122  1.0326  1.0000  1.0011  
  90% 1.0122  1.0257  1.0288  1.0637  1.0092  1.0265  1.0000  1.0015  
 10 70% 1.0204  1.0477  1.1011  1.1650  1.0158  1.0632  1.0002  1.0134  
  80% 1.0199  1.0427  1.0642  1.1369  1.0132  1.0334  1.0001  1.0064  
  90% 1.0190  1.0393  1.0639  1.1054  1.0100  1.0302  1.0001  1.0037  
 15 70% 1.0219  1.0541  1.1005  1.1505  1.0120  1.0659  1.0002  1.0070  
  80% 1.0195  1.0486  1.0722  1.1212  1.0125  1.0310  1.0000  1.0005  
