 
II
摘要
武器彈藥發展的要求不外乎射程遠、精度高、殺傷力強等方面，在此原則之下，
近年來，武器彈藥系統發展趨勢為導引自動化和命中智能化方向發展，導引自動
化著重於彈道軌跡的修正，如精準導引迫砲彈（PGMM, Precision Guided Mortar
Munition），藉側向噴流方式調整彈道飛行軌跡；而命中智能化則為目標特性與
彈頭引爆作動方式，如空爆彈（ABM, Air Burst Munition）運用可程式化引信
（Programmable Fuse）設定彈丸於不同飛行時間下，進行同時引爆之終端殺傷效
力。另在增加射程方面，提升砲口初速（muzzle velocity）、改良發射藥性能
（propellant properties）與彈藥增加火箭助推（rocket assisted）皆為可行研究方
向，其中尤以彈藥增加火箭助推對彈丸飛行軌跡影響最大。無火箭助推之彈丸飛
行軌跡可視為一自由飛行彈道，然火箭助推彈則需考慮火箭助推時之主動段彈道
特性及對彈體飛行穩定性影響。本研究將以建構火箭助推彈六自由度飛行模式，
探討火箭助推彈之主、被動段彈道特性與彈體飛行穩定性及預估飛行軌跡落點與
射程。
關鍵詞: 火箭助推、自由飛行、六自由度、外彈道
IV
圖目錄
圖1.1 XM395 120 公釐精準導引迫砲彈...............................1
圖1.2 XM984 120 公釐火箭助推迫砲子母彈............................1
圖1.3 火箭助推迫砲彈..............................................3
圖2.1 壓縮性修正係................................................5
圖2.2 形狀修正係數................................................5
圖2.3 平板摩擦阻力係..............................................5
圖2.4 彈形頭部壓差阻力係數........................................7
圖2.5 錐形收縮尾部波阻係數........................................7
圖2.6 尾部不收縮時彈底壓强係數....................................8
圖2.7 在零攻角時，拋物線形尾部所引起的底部壓强係數增量............9
圖2.8 具有曲線形頭部旋成體的 nyC 1 值...............................10
圖2.9 彈體的黏性法向力...........................................11
圖2.10彈體頭部壓力中心的修正量...................................12
圖2.11彈翼相對厚度對形狀阻力影響的修正係數.......................14
圖2.12計算菱形翼型彈翼波阻 1 .................................15
圖2.13計算菱形翼型彈翼波阻 5 .................................15
圖2.14計算菱形翼型彈翼波阻  ................................15
圖2.15彈翼波阻輔助函數...........................................15
圖2.16 100bC 時，紊流邊界層二維翼純後緣底部壓强係數...........16
圖2.17 bC 函數的二維翼純後緣底部壓强係數........................17
圖2.18確定
 KpM 的圖線..........................................18
圖2.19確定
 KpM 的圖線..........................................18
圖2.20彈翼升力係數斜率 05.0 tg .................................19
圖2.21彈翼升力係數斜率............................................19
圖2.22彈翼升力係數斜率............................................19
圖2.23彈翼升力係數................................................20
圖2.24彈翼壓力中心幾何圖形........................................21
圖2.25彈翼壓力中心座標............................................22
VI
表目錄
表一 空用2.75火箭發動機之推力-時間變化與旋轉力矩-時間變化.........42
VIII
符號說明
作用力總和
彈體質量
彈體運動速度
彈體之加速度
作用於彈體上之力矩
彈體之角動量
彈體轉動角速度
作用於彈體座標系 x 方向之總氣動力分量總和
作用於彈體座標系 y 方向之總氣動力分量總和
作用於彈體座標系 z 方向之總氣動力分量總和
作用於彈體座標系 x 方向之力矩分量
作用於彈體座標系 y 方向之力矩分量
作用於彈體座標系 z 方向之力矩分量
u 彈體座標系內彈體飛行速度在 x 軸上之分量
彈體座標系內彈體飛行速度在 y 軸上之分量
彈體座標系內彈體飛行速度在 z 軸上之分量
彈體座標系角速度在 x 上之分量
彈體座標系角速度在 y 上之分量
彈體座標系角速度在 z 上之分量
彈體座標系角動量在 x 上之分量
彈體座標系角動量在 y 上之分量
彈體座標系角動量在 z 上之分量
I 彈體轉動慣量
， ， 沿地面座標系三軸的速度分量
， ， 地面座標系三軸與彈體座標系三軸之夾角
X彈體的黏性法向力係數     彈體攻角      彈體直桶部細長比 
彈體底部相對面積
黏性正向力 
繞圓柱體的阻力係數
軸向力
壓力中心
彈體頭部壓力中心至彈尖的距離
彈體船尾部壓力中心至彈尖的距離
彈體的黏性正向力壓力中心至彈尖的距離
俯仰力矩
2（aerodynamic characteristic）。在彈道分析方面，須將前述物性與空氣動力變化（含推力
變化），考量於火箭助推器燃燒作動時的主動段彈道與火箭助推器燃畢後的被動段彈道。
「迫砲彈藥增加火箭助推之彈道性能分析」之外彈道飛行軌跡研究，首先建立火箭助推
迫砲彈主動段與被動主動段六自由度飛行軌跡數學模型（6-DOF Model），以計算火箭助
推迫砲彈的飛行姿態參數與射距，再建立火箭助推器推力變化模式，以分析火箭助推迫
砲彈之彈道性能。
1.2 文獻回顧
本計劃研究之火箭助推迫砲彈為尾翼穩定彈體，其彈體形狀如圖1.3所示。尾翼穩定
彈於空氣動力特性理論設計時，原則上以軸對稱或平面對稱為主要設計考量，1957 年
Charles H. Murphy 就對稱性彈體的俯仰（pitching）與偏擺（yawing）運動進行研究，
並提出相關俯仰與偏擺力矩的預測解算方法[1]，1965 年AndersS. Platou 探討彈體飛
行時的馬格勒斯（Magnus）效應對俯仰與偏擺力矩的影響[2] ，1970 年Gary T. Chapman
and Donn B. Kirk 以實驗量測方式就彈體自由飛行數據進行分析研究，瞭解對稱性彈體
的俯仰與偏擺運動間的耦合（couple）關係並提出俯仰力矩與偏擺力矩的實驗預測估算
方法 [3] ，1971 年Charles H. Murphy 對輕微不稱性彈體之非線性運動進行研究[4] ，
1972 年G.W. Stone, E.L. Jr. Clark, 與G.E. Burt 就非稱性彈體所產生之阻尼力矩
（damping moment）效應進行研究[5] ，1973 年O. Walchner 與F.M. Sawyer 研究細長
型彈體的俯仰與偏擺運動，並推導其穩定特性[6]，1980 年Charles H. Murphy 就對稱
性彈體的動態不穩定運動特性進行研究[7]並於1988 年將相關於此類對稱性彈體之空氣
動力特性研究，不論是旋轉穩定彈體或尾翼穩定彈體，彙整於" Free Flight Motion of
Symmetric Missiles”[8]；此後有關對稱性彈體之空氣動力特性研究，則多見於相關計
算流
力文章[9~17]，1990 年M. Nusca, S. Chakravarthy, 與U. Goldberg,以計算流力方法
解析衝壓引擎彈底之流場結構以獲得其壓力分佈特性[9]，1994 年Walter Sturek 等人
應用計算流力方法求取旋轉穩定彈與尾翼穩定彈之空氣動力特性[10]，隨後Paul
Weinacht 與Walter Sturek 亦以相同方法求取尾翼穩定彈旋轉時之空氣動力特性
[11],2002 年Mary Graham 等人以數值方法探討超音速側向噴流於尾翼穩定彈體之氣動
力影響[12]，2006 年Joseph, K., Costello, M. 與Jubaraj, S.將計算流力計算之彈體
氣動力直接與剛體動力（RBD, rigid body dynamic）方程式耦合，以求解即時性的彈丸
飛行軌跡與氣動力特性[15]，2009 年Davis Bradford 等以嵌入遙測裝置與數位訊號處
理器，量測側向噴流精準導引迫砲彈之飛行姿態數據與側噴時彈體之側向加速度等資
料，以為側向噴流精準導引迫砲彈之氣動力特性、巡航、導引與飛控模式之研究討論
[17]。彈丸飛行軌跡數學模型的建立，其目的在於計算彈道飛行軌跡，而計算結果的準
確性與實用性取決於彈體之空氣動力特性的完備與彈丸飛行軌跡數學模型的解算方式；
最早有關自由拋射物飛行軌跡計算理論的書籍是伽力略於西元1564-1642 年寫成，其後
發展成外彈道學中的拋物線理論，適用於近射程、地球表面假設為平面、重力大小不變
與不考慮空氣阻力影響之彈丸飛行軌跡計算，至於不能忽視地表曲面及重力大小變化的
4第二章 尾翼穩定彈空氣動力計算
有關尾翼穩定彈設計，在其風洞實驗前模型受力的預估、穩定飛行的分析及彈道的
計算等，都需要先行計算尾翼穩定彈的空氣動力係數。在本章節中將會介紹尾翼穩定彈
的空氣動力係數計算，基本上係將尾翼彈分成彈體以及彈翼兩部分做計算，再將兩部分
計算的結果加在一起，就成為尾翼彈的空氣動力係數。
2.1 彈體空氣動力係數計算
一、零升阻力係數
彈體為旋成體，在零攻角時的阻力即為零升阻力，它是彈體表面上分布的法向力和軸向
力分量的合力。法向力分量的合力稱為壓差阻力，超音速時稱為波阻；軸向力分量的合
力稱為摩擦阻力。彈體零升阻力係數可表示為
xpxfx CCC 0 〈2-1〉
式中 xfC ：彈體摩擦阻力係數；
xpC ：彈體壓差阻力係數。
1. 彈體摩擦阻力係數
彈體摩擦阻力，係由彈體表面積與空氣黏滯性形成，而空氣黏滯(viscosity)於彈體
表面形成邊界層(Boundary layer)，邊界層分離(separation point)與流場之雷諾數有
關，故彈體之摩擦力係數可表示為
M
f
MMxfpxf S
S
CC 0)(  〈2-2〉
式中 0)( MxfpC ：不可壓縮流中平板的摩擦阻力係數；
M ：壓縮性修正系數；
 ：形狀修正係數 ；
fS ：彈體側的表面積；
MS ：彈體最大截面積。
圖 2.1 為 M 隨著 M 和 tx 的變化曲線；圖 2.2 為  隨著彈體係長比( B=彈體長度
65105Re 



 tx
工程計算中可把彈體頭部長度或引信長度作為 tx ，對高速彈體，常把邊界層全部視
為紊流。
2. 彈體壓差阻力係數
(1) 次音速情況
若不考慮黏性邊界層分離所引起壓力分布的改變，彈體的壓差阻力為零。因此，壓
差阻力的產生與邊界層分離有密切關係。工程計算上，把彈體側表面上產生的壓差阻力
與摩擦阻力合在一起計算，而底部阻力單獨計算，即
xbxfxpxf CACCC  〈2-3〉
式中 xbC ：彈體底部渦流阻力係數；
A ：修正係數。
3
029.0




M
b
xf
xb R
R
C
C 〈2-4〉
 222 101.01175.0865.1   MMA B  〈2-5〉
bR ：彈底半徑
MR ：彈體最大半徑
(2) 超音速情況
超音速的壓差阻力稱為波阻，可分為頭部波阻、尾部波阻與底部渦阻三部分，即
xbxtxnxp CCCC  〈2-6〉
式中 xnC ：彈頭形狀壓差阻力係數；
xtC ：尾部形狀收縮波阻係數。
圖 2.4 為蛋形(尖拱形)頭部的 xnC 隨著 M 和頭部長細比( n=彈頭長度/彈體直徑)
的變化曲線。
83. 底部渦流阻力係數
xbDxbxb CCC b  1)( 〈2-7〉
式中 1)( bDxbC ：彈體尾部無船尾角時的底部阻力係數；
xbC ：彈體尾部船尾角對底阻係數影響的增量。
    11   bb DbDxb pC 〈2-8〉
  1bDbp 為彈體尾部無船尾角時彈體底部壓强係數。圖 2.6 為  1bDbp 隨著 M 的
變化曲線。
圖 2.6尾部不收縮時彈底壓强係數
計算 xbC 有兩種情況：
(1) 對於跨音速流 4.18.0  M
 
2





D
D
pC bbxb 〈2-9〉
 bp 為彈體尾部有船尾角與無船尾角時底部壓强係數差，它的變化曲線如圖 2.7
所示。
10
直桶部細長比。於是
  nyny CC 11 〈2-12〉
圖 2.8 具有曲線形頭部旋成體的 nyC 1 值
(2) 彈體尾部法向力係數
按細長體理論，彈體尾部法向力係數
 bty SC  121  〈2-13〉
式中 bS ：彈體底部相對面積， Mbb SSS  (彈底/最大彈截面積)。
實際上，由於尾部邊界層變厚及氣流分離，在收縮的尾部上產生的法向力較小，只
有理論值的 15~20%，所以在近似計算中引入修正細數 2.0~15.0K ，若約定取
18.0K ，則
 bty SC  10063.01  〈2-14〉
(3) 彈體的黏性法向力係數
黏性氣流橫向分量  sin 流過彈體，如圖 2.9 所示，由於氣流分離而使彈體產生附
加法向力，即彈體的黏性法向力。 dx段彈體的黏性法向力表示為
RdxCdY xf 2sin2
1 22
1   
式中 xC ：繞圓柱體的阻力係數。
12
當彈丸穩定飛行時，攻角較小，可取 1cos  ； sin ，並且考慮到 01 xx CC  ，
所以







01
10
xyy
yxx
CCC
CCC
〈2-19〉
四、彈體壓力中心和俯仰力矩中心
通過彈體法向力對彈頂的力矩等於各法向力對彈頂的力矩，藉此計算出彈體的壓力
中心。
pffpttpnnp xYxYxYxY 1111 
即
1
111
y
pffypttypnny
p C
xCxCxC
x

 〈2-20〉
pnx 為彈體頭部壓力中心至彈體頂部的距離，按照細長體理論
M
n
npn S
W
Lx 
式中 nW 為頭部體積。但是，頭部並非很細長，且靠近頭部的圓柱部分也提供法向力，
所以彈體頭部中心有一修正量 pnx ，即
pn
M
n
npn xS
W
Lx  〈2-21〉
npn Lx 隨著 nM 12  及 nc  的變化曲線為圖 2.10。
圖 2.10 彈體頭部壓力中心的修正量
ptx 為彈體尾部壓力中心至彈體頂部的距離。因尾部提供的法向力量值不大，且尾部
14
式中 M ：壓縮性修正係數；
：考慮厚度影響的形狀修正係數；
 
0MxfpC ：不可壓縮流中平板的摩擦阻力係數，平板的面積等於彈翼面積，
平板的長度等於彈翼平均幾何弦長  2tkav bbb  。
與翼型相對厚度和轉捩點的相對位置 tx 有關。 隨著及 tx 的變化曲線為圖
2.11。 M 和  0MxfpC 使用圖 2.1、圖 2.3 計算，其中   avbRe 。在計算中 tx 可取為
0。
圖 2.11 彈翼相對厚度對形狀阻力影響的修正係數
2. 波阻係數
超音速時會有波阻，對於對稱翼型的彈翼，零升波阻即為厚度波阻
    110  KCC xBxB  〈2-27〉
式中  0xBC 為菱形彈翼的厚度波阻，它隨著彈翼弦比、根尖比、最大厚度 x 以
及彈翼最大相對厚度、來流馬赫數 M 的變化曲線為圖 2.12、圖 2.13、圖 2.14。其中
影響的參數為組合型式；K為非菱形翼型零升波阻係數與菱形翼型零升波阻係數之比，
為輔助函數，表示馬赫數線與最大厚度線的相關位置對波阻的影響。次音速最大厚度線
時，翼型形狀對厚度波阻影響很小；超音速最大厚度線時，翼型形狀對厚度波阻影響明
顯。實驗得到的輔助函數反映了這一因素。隨著  tgM  12 的變化曲線為圖
2.15。
16
3. 鈍後緣底部阻力係數
w
b
bxb S
S
pC 1cos 〈2-29〉
式中 bp ：彈翼鈍後緣底部壓强係數；
bS ：彈翼鈍後緣底部面積；
1：彈翼後緣後掠角。
M 由 1.0 到 4.0 時，彈翼鈍後緣底部壓强係數可按照下述方法計算
21 bbb ppp  〈2-30〉
式中 1bp ： 100bC 時，與 M 有關的底部壓强係數，可由圖 3.16 確定；
2bp ：與 bC 有關的底部壓强係數，可由圖 3.17 確定。
其中 bC 為翼型底部厚度；為在彈翼底部截面處的邊界層動量厚度。
層流時 5.05.05.0664.0 avb  〈2-31〉
紊流時 8.02.02.0037.0 avb

  〈2-32〉
圖 2.16 100bC 時，紊流邊界層二維翼純後緣底部壓强係數
18
圖 2.18 確定 KpM 的圖線 圖 2.19 確定 KpM 的圖線
二、彈翼的升力係數
小攻角下對稱翼型的彈翼升力係數可表示為





 y
y
y C
C
C 〈2-35〉
式中 yC ：彈翼的升力係數斜率。

yC 取決於彈翼的展弦比、根尖比以及組合參數 12 M 和 5.0tg ，
5.0 為彈翼二分之一弦線後掠角。另外，在跨音速區，組合參數 3 c 對彈翼升力係數斜
率有明顯影響。為了方便繪製圖線， yC 與各影響參數之間一般表示關係如下


   

3
5.0
2 ,,,1 tgMf
C y 〈2-36〉
式〈2-36〉的變化曲線為圖 2.20、圖 2.21、圖 2.22、圖 2.23。
20
圖 2.23 彈翼升力係數斜率 35.0 tg
三、彈翼的阻力係數
彈翼的升力不為零時，會產生一部分在零升力所沒有的阻力，它與升力同時存在，
稱為誘導阻力，其係數為 xiC 。彈翼阻力係數表示為
xixx CCC  0 〈2-37〉
1. 次音速情形

2
y
xi
C
C  〈2-38〉
2. 超音速情形
(1)超音速前緣或音速前緣( 11 0
2   tgMm )
yxi CC  〈2-39〉
(2)次音速前緣 ( 11 0
2   tgMm )
2
2
1 m
C
CC yyxi  
 〈2-40〉
圓頭翼型， 7.0 ；尖頭翼型， 4.0 。
四、彈翼的壓力中心(圖 2.24)
22
10~6 時  ApApAAp bxxxx  〈2-47〉
圖 2.25 彈翼壓力中心座標 05.0 tg
圖 2.26 彈翼壓力中心座標 15.0 tg
圖 2.27 彈翼壓力中心座標 25.0 tg
24
圖 2.29 翼體干擾因子 WK
21 , SS ：尾翼部彈體的投影面積，如圖 2.31 所示。次音速時， 01 S ；超音速時， 1S
由翼根的馬赫線決定
rb
MD
SS
S
4
12
21
1 

 〈2-51〉
圖 2.31 翼體影響區幾何圖形
2. 尾翼為米字型的尾翼彈
     
M
W
WyWByBWy S
S
CKCC 25.1 〈2-52〉
圖 2.30 翼體干擾因子 Wk
26
   
WyWBWy
CKC 25.1 〈2-61〉
(2)次音速彈翼前緣
      2
2
1 m
C
CC BWy
BWyBWxi


 〈2-62〉
其中 0
2 1 tgMm   ， 0為彈翼前緣後掠角。另外，圓頭翼型， 7.0 ；尖頭翼型，
4.0 。
四、尾翼彈的壓力中心 ( 圖 2.32 )
圖 2.32 尾翼彈壓力中心相關位置
尾翼彈的壓力中心可以視為尾翼彈的法向力在彈軸上的作用點，它至彈體頂點的距
離為 
BWp
x 。
尾翼彈的法向力是由單獨彈體的法向力和尾翼段的法向力組成的
  BWBBW YYY 111 
它們對於彈體頂端的力矩關係式為
        
BWpBWBpBBWpBW
xYxYxY  111
在小攻角的情形之下，近似用尾翼段的升力代替尾翼段的法向力；另外，尾翼段的壓力
中心取在近似單獨尾翼的壓力中心位置。因此，上式可改寫成
         BWB
WpBBWBpB
BWp YY
xxYxY
x
11
11



將上式等號右邊式子分子分母同除以 MSq ，
 
        
   
M
W
BWyBy
WpB
M
W
BWyBpBy
BWp
S
S
CC
xx
S
S
CxC
x



1
1
〈2-63〉
五、尾翼彈的俯仰力矩係數
28
第三章 六自由度運動
3.1 六自由度運動理論
六自由度的理論基礎一般皆以基本的動力學與空氣動力學飛行力學所構成，而這些基
礎的理論科學早在近百年前即已發展完成；但限於當時的計算能力而未能使其臻至完美境
界。是故，今日以現行的計算能力將六自由度理論的模擬與應用是件積極而重要的工作。
六自由理論應用的範圍相當廣泛，舉凡物體在空間中運動的情形皆可藉此理論來模擬描
述；例如：棒球投手所投變化球的曲線、彈丸在空中飛行時的彈尖曲線、太空飛行船或人
造衛星的飛行曲線以及飛彈攻擊時的可控制曲線等，這些曲線在實際運作時都必須精確的
預估出來，如何預估呢？六自由度程式就是最佳的模擬工具。
六自由度程式的發展並非意味著質點彈道程式或三自由度程式可以廢除，迄今質點
彈道程式或三自由度程式仍有許多地方運用著，譬如：在射表編製計算時所運用的就是
質點彈道程式。而三自由度程式則被運用於概念設計工作的早期發展，但若要探討較複
雜的彈道運動與要獲得較精確的彈丸數據資料，則必須使用六自由度程式方可達到。實
際上到目前為止，不論是質點彈道程式、三自由度程式或六自由度程式都有其優缺點，
只是六自由度程式中所做的假設較少方程式亦較完整，但它對氣動力的需求亦較多，所
以氣動力係數提供的能力往往決定六自由度程式計算結果的好壞，若氣動力係數無法完
整的提供給六自由度程式，則其計算結果反而比不上質點彈道程式或三自由度程式之計
算結果。
六自由度程式基本上以輸入彈丸物性、空氣動力係數，最後計算輸出彈丸飛行軌跡
特性資料。六自由度程式之基本設計理念係以計算彈丸飛行軌跡資料為主。舉凡任何飛
行物體只要提供足夠的物性與氣動力資料即可計算初期飛行軌跡資料，所以本研究在使
用上並無需作長短程、高低空、速度大小等特殊的限制；其計算結果的可性度完全取決
於輸入資料的精確與完整。
有關六自由度程式設計時所考慮的基本理念詳列如下：
1. 彈丸飛行時重心改變的飛行狀況：
在計算 BB 彈或火箭的飛行軌跡時，其重心位置將為一時間函數，故軌跡計
算時需考量該因素之影響。
2. 參考座標選取：
為配合與地面量測數據比較，需將參考座標取決於地面座標系或地心座標。
3. 為解析彈體所受氣動力狀況，將參考座標取決於彈體座標系或彈體旋轉座標
系。
4. 大氣中風速之影響。
5. 飛行環境資料：
地球大氣密度、黏性、溫度、壓力、音速等，係參考 Yang 及 ARDC 大氣模
式計算法則做成高度函數以為計算。
6. 飛行體只受地球引力影響因飛行體只在地球表面之大氣層內飛行故月球及太
陽系其他行星之影響省略不計
30
0pg LL 時，為靜態不穩定，需旋轉穩定
0pg LL 時，為中性穩定（neutral stable）
靜態不穩定的體形，需以彈體高速自旋運動以達彈體旋轉穩定，當彈體高速自旋時，將
產生馬格勒斯效應（Magnus effect）與彈體橫向偏移（Drift）現象。
圖 3.2 旋轉穩定彈之質心、壓心位置與氣動力矩作用
圖 3.3 尾翼穩定彈之質心、壓心位置與氣動力矩作用
3.3 六自由度方程式推導
依整個程式的設計目的而言，是為藉由一組運動方程式來瞭解整個飛行的運動狀
況。而這組方程式須考量到飛行體在空中所受到的各種作用力，如：空氣動力、重力、
推力、阻力與馬格勒斯力（Magnus force），然後依牛頓運動定律描繪出其作用合力與加
速度之間的關係。彈體的整個運動狀態可分為移動運動與轉動運動，在移動運動裡依牛
頓運動方程式可求得位置變化的情形，而在轉動運動裡則依尤拉方程式可求得其角度變
化的情形。
牛頓方程式
vmF 
 〈3-1〉
F

：作用力總和（對彈體重心）；
m ：彈丸質量；
v

：彈丸之加速度（對彈體重心）。
尤拉方程式
32
圖 3.4 地面座標與彈體座標系統
將方程式 ( 3-3 ) 與 ( 3-4 ) 式中的各項向量以座標之分量表示，可得
kZjYiXF

 〈3-5〉
X：作用於彈體座標系 x方向之總氣動力分量總和；
Y：作用於彈體座標系 y方向之總氣動力分量總和；
Z：作用於彈體座標系 z方向之總氣動力分量總和。
kNjMiLM

 〈3-6〉
L：作用於彈體座標系 x方向之力矩分量；
M：作用於彈體座標系 y方向之力矩分量；
N：作用於彈體座標系 z方向之力矩分量。
kwjviuV

 〈3-7〉
u：彈體座標系內彈丸飛行速度在 x軸上之分量；
v：彈體座標系內彈丸飛行速度在 y軸上之分量；
w：彈體座標系內彈丸飛行速度在 z軸上之分量。
krjqip
  〈3-8〉
軌跡 z
彈體座標
地面座標
Z
X
Y
x
y
34


























































r
q
p
III
III
III
r
q
p
III
III
III
H
H
H
zzyzxz
yzyyxy
xzxyxx
zzyzxz
yzyyxy
xzxyxx
z
y
x









〈3-16〉
因假設彈體為剛體（Rigid Body），故 0I


































r
q
p
III
III
III
H
H
H
zzyzxz
yzyyxy
xzxyxx
z
y
x






〈3-17〉
將式（3-15）、（3-17）代入式（3-14）式可得







































































r
q
p
III
III
III
pq
pr
qr
r
q
p
III
III
III
N
M
L
zzyzxz
yzyyxy
xzxyxx
zzyzxz
yzyyxy
xzxyxx
0
0
0



〈3-18〉
因彈體軸對稱體，故 xyI = yzI = zxI =0 且 yyI = zzI 將之代入上式可得
pIL xx 〈3-19〉
rpIIqIM zzxxyy )(   〈3-20〉
pqIIrIN xxyyzz )(   〈3-21〉
方程式（3-11）、（3-12）、（3-13）、（3-19）、（3- 20）、（3- 21）共計有六個方程式，
這就是六自由度程式的統御方程式（Governing Equation）。運用方程式求得彈體在彈體座
標系內之線性加速度u、 v、w及角加速度 p、 q、 r，再將所有之加速度積分，即可求
得彈體在受力後所產生之線性速度與角速度，即 u、v、w與 p、q、r。但此時所計算出來
之速度與角速度乃是在機體座標下所獲得的結果，若直接積分則所獲得的位移與角位移
亦即是對彈體座標而言。故須將上述計算的結果，再經過一座標轉換到地面座標系上，
如此所獲得的結果也就可以與地面觀測的結果相互比較。
 tancostansin rqp  〈3-22〉
 sincos rq  〈3-23〉
36
第四章 六自由度程式與模擬結果
前兩章節對六自由度理論與各項氣動力計算之介紹後，本章在探討隨機外彈道六自
由度程式模型的功能，及各項區塊之應用說明。利用程式軟體撰寫外彈道六自由度程式，
程式執行後，只需在介面上輸入彈體之物性資料與起始條件，程式會將輸入之物性資料
轉成幾何圖形，並將氣動力計算顯示與讀入計算軌跡中，最後將飛行特性資料存檔輸出
與彈道圖繪製。
4.1 Visual Basic 6 編譯環境
隨機外彈道六自由度模型係由 VB(Visual Basic) 軟體撰寫。VB 是一套以視覺化為
主的程式語言，在設計的過程中,先將程式中用到的物件佈置完成，然後設定物件屬性、
操作的方法及物件與物件間的關係，最後才撰寫各物件相對應的程式碼。VB 也繼承了
Basic 語法的簡單性，因此在撰寫程式時也較其它語言簡化許多，而 VB 的整合性開發環
境，如圖 4.1 所示，其中包含表單編輯器、程式編輯、除錯、專案總管、屬性編輯等功
能。整個程式撰寫完成後可直接由軟體來除錯，並可直接在軟體中按下執行紐做程式編
譯內容之動作。
圖 4.1 VB 整合性開發環境
4.2 六自由度程式視窗
本研究六自由度程式，模擬計算前要先輸入彈體之幾何形狀資料，以計算氣動力係
數，再輸入砲口初速、射擊角度等起始條件；完成以上輸入後程式即可執行模擬計算。
功能列表
工具列
表單設計及程式
撰寫區
專案視窗及
屬性視窗
工具箱
38
圖
4.2 表單設計圖
程式中物性資料與起始條件之變數含意，如下：
物性資料之變數含意：
in_diameter 彈體直徑
total_length 彈體全長
nose_length 彈弧段長
boattail_length 船尾段長
rotatingband_dia 彈帶直徑
memplat_dia 彈尖截徑
base_dia 彈底直徑
ogive_radiu 彈弧半徑
c_gravity_i 彈體質心
射擊諸元起始條件之變數含意：
FireRange 預估射程(m)
TimeStep 積分時距
AxMomInertia 軸向轉動慣量
視窗一
視窗二
視窗三
40
程式中計算彈道軌跡之各項變數含意說明，如下
diameter 彈體的直徑
S 彈體之橫截面積
mass 彈體的重量
g0 重力加速度
Ix_i x 軸轉動慣量
Iy_i y 軸轉動慣量
temperature 溫度，隨著高度不同而有所變化
density 密度
V_abs 彈體運動速度
sonic_speed 音速
mach 馬赫數，由 V_abs / sonic_speed 獲得
X_cor1 彈體飛行距離
Y_cor1 彈體飛行高度
Z_cor1 彈體偏移量
Time 彈體飛行時間
在彈道軌跡計算完成後，於輸出檔 baldata.txt 之飛行特性資料包括有飛行距離
(X_cor1)、飛行高度(Y_cor1)、偏移量(Z_cor1)及飛行時間(Time)，如圖 4.4 所示。
圖 4.4 彈體軌跡飛行特性資料
4.2.3 推力比輸入
迫砲彈火箭助推部份為固體火箭發動機設計，如圖 4.5，固體推進劑部份一般多採
42
(2).推力-時間變化
固體火箭發動機之推力-時間變化，一般採用地面推力試驗平台量測獲得，表一
為空用 2.75 火箭發動機之推力-時間變化與旋轉力矩-時間變化。
表一 空用 2.75 火箭發動機之推力-時間變化與旋轉力矩-時間變化
本程式設計，假設增加火箭助推之迫砲彈，出砲口時已具有一砲口初速，且火箭
發動機於砲口點燃，開始產生推力。採用 2.75 火箭發動機之推力-時間變化為基
準；設計一「推力比」參數作為火箭助推情形設定。當『推力比』輸入為 0，代
表迫砲彈無火箭助推，『推力比』輸入為 1時，代表迫砲彈有火箭助推，其火箭
助推時間為出砲口後 1.15 秒，推力值即如表一。換言之；迫砲彈自出砲口至飛
行時間 1.15 秒之彈道，火箭發動機持續產生推力，彈道主要受火箭發動機推力
影響，此時段稱為火箭助推迫砲彈主動彈道段；飛行時間 1.15 秒以後，火箭發
動機已燃畢，不再提供推力，彈道行為回歸原本彈道特性，此時段則稱為火箭助
推迫砲彈被動彈道段。
44
0 5 10 15 20 25 30
-100
0
100
200
300
400
500
600
700
800
900
飛行時間(秒)
彈
道
高
度
(公
尺
)
1號裝藥800米位
1號裝藥1100米位
1號裝藥1400米位
圖 4.8 #1 號裝藥飛行時間對彈道高度關係圖
0 1000 2000 3000 4000 5000 6000 7000 8000
-500
0
500
1000
1500
2000
2500
3000
3500
射距(公尺)
彈
道
高
度
(公
尺
)
4號裝藥800米位
4號裝藥1000米位
4號裝藥1200米位
圖 4.9 #4 號裝藥射距對彈道高度關係圖
46
0 10 20 30 40 50 60 70 80
-1000
0
1000
2000
3000
4000
5000
6000
飛行時間(秒)
彈
道
高
度
(公
尺
)
8號裝藥800米位
8號裝藥1000米位
8號裝藥12000米位
圖 4.12 #8 號裝藥，飛行時間對彈道高度關係圖
4.3.2 火箭助推模擬計算
利用已收集之空用 2.75 公厘火箭之推力-時間變化及推力比設定為 0，0.3 與 0.5
之條件下，模擬計算#2 號裝藥至#7 號裝藥，射角 800 米位至 1400 米位之火箭助推迫砲
彈彈道軌跡。圖 4.13 為推力-時間變化曲線與推力比關係，圖 4.14 為#2 號裝藥，砲口初
0 0.2 0.4 0.6 0.8 1 1.2 1.4
0
1000
2000
3000
4000
5000
6000
7000
8000
燃燒時間(秒)
推
力
(牛
頓
)
推力比=1
推力比=0.5
推力比=0.3
圖 4.13 推力-時間變化曲線與推力比關係圖
48
0 2000 4000 6000 8000 10000 12000 14000
-1000
0
1000
2000
3000
4000
5000
6000
射距(公尺)
彈
道
高
度
(公
尺
)
推力比=0
推力比=0.3
推力比=0.5
圖 4.16 #5 號裝藥，射角 1000 米位，射距對彈道高度關係圖
0 10 20 30 40 50 60 70 80
-1000
0
1000
2000
3000
4000
5000
6000
飛行時間(秒)
彈
道
高
度
(公
尺
)
推力比=0
推力比=0.3
推力比=0.5
圖 4.17 #5 號裝藥，射角 1000 米位，飛行時間對彈道高度關係圖
圖 4.18 為#7 號裝藥與#5 號裝藥之彈道比對圖，#7 號裝藥的砲口初速 390 米/秒，射
角 1200 米位。圖 4.19 為#7 號裝藥彈道圖。
50
第五章 結論
本計畫開發之「火箭助推迫砲彈之彈道分析飛行模擬程式」，已運用Visual Basic軟
體特性，將彈體物性與彈體幾何特性，整合成一友善人機介面，藉由Visual Basic視窗畫
面的輸入，對非熟稔彈道飛行原理之設計人員亦可容易使用此視窗畫面進行彈形設計與
射程估算。火箭助推部份亦整合於彈道射擊諸元參數輸入部份，藉由推力比參數的設定，
可方便估算出火箭助推對彈道射程的影響與火箭助推推力曲線特性掌握，以作為火箭助
推發動機性能規格釐定。火箭助推特性係採用空用2.75火箭推力曲線為參考基準，當設
計者獲取其它火箭助推特性曲線，亦可藉由替換附檔程式內之「圖資料」檔案夾下之
「f-t.txt」檔案，即可進行火箭推力曲線為參考基準替換。換言之，本程式的設計可運
用於：
1. 彈體初期幾何特性設計-彈體幾何特性設計可採用3-D CAD畫圖軟體，如
SolidWork、Solid-Edge 或 Pro-E 等，完成設計後可由3-D CAD 獲得彈體幾何資
料與物性資料，如彈體表面積、彈體重量、重心位置與轉動慣量等，將該等資
料經由本程式的視窗介面輸入後，即可進行該彈形氣動力係數與彈道估算。
2. 火箭助推性能規格釐定-依據戰術需求，由本程式的推力比估算火箭助推性能之
推力曲線，釐定火箭推力曲線規格，以為火箭發動機模組開發與測試基準。俟
火箭發動機模組開發完成後，藉由替換「f-t.txt」檔案，即可進行實際該種火
箭助推迫砲彈之彈道分析。
3. 實射驗證與射表估算-彈體實射飛行時之氣動力受飛行環境干擾，其氣動力與程
式計算的氣動力會有誤差，該誤差將導致彈體實際飛行時間與射距上的差距，
傳統上，該差距一般都以一Form Factor進行氣動力修正，本程式亦有Form Factor
參數設計，可作為實射驗證與射表估算運用。
本計劃研究成果可運用於國防工業有關傳統砲彈（無飛控行為）開發之研究，對我
國防自主能力提升應有一定的價值。未來進一步發展可考慮隨機模式，將彈體在射擊過
程中受到之砲口初速變化、砲口跳躍、砲口噴流及空氣動力改變等隨機因素影響，予以
數學模組化並與本計劃研究之六自由度數學模型整合，建構成一隨機外彈道六自由度數
學模型，以達國際間此方面研究水準，與設控彈道計算機之研究。
有關本研究完成之具體成果如下：
1. 建立火箭助推迫砲彈飛行軌跡數學解算模組。
2. 完成六自由飛行砲彈外彈道方程解算程式。
3. 建構完成火箭助推迫砲彈之彈道性能分析能量。
52
參考文獻
[1] Charles H. Murphy, Jr.,“The Prediction of Nonlinear Pitching and Yawing Motion of
Symmetric Missiles,” Journal of the Aeronautical Science, Vol. 24, No. 7, pp.473-479,
1957.
[2] Anders S. Platou,“Magnus Characteristics of Finned and Nonfinned Projectiles,”
AIAA Journal, Vol. 3, No. 1, pp.83-90, 1965.
[3] Gary T. Chapman and Donn B. Kirk, “A Method for Extracting Aerodynamic
Coefficients form Free-Flight Data,” AIAA Journal, Vol. 8, No. 4, pp.753-758,
1970.
[4] Charles H. Murphy, “Nonlinear Motion of a missile with Slight Configurational
Asymmetries,” Journal of Spacecraft and Rocket, Vol. 8, No. 3, pp.259-263, 1971.
[5] G.W. Stone, E.L. Jr. Clark, and G.E. Burt,“An Investigation of Nonsymmetric
Aerodynamic Damping Moments,” AIAA Paper 72-29, 1972.
[6] O. Walchner and F.M. Sawyer,“‘In-Plane’ and ‘Out-of-Plane’ Stability
Derivatives of Slender Cones at Mach 14,” Aerospace Research Laboratories,
Wright-Patterson Air Force Base, Ohio, Report. ARL 73-0090, July 1973.
[7] Charles H. Murphy, “Symmetric Missile Dynamic Instabilities,” Journal of
Guidance and Control, Vol. 4, No. 5, pp.464-471, 1980.
[8] Charles H. Murphy, “Free Flight Motion of Symmetric Missiles,” June 20-24,
1988.
[9]Nusca, M.; Chakravarthy, S.; Goldberg, U. , “Computational Fluid Dynamics
Capability for the Solid-Fuel Ramjet Projectile. ” Journal of Propulsion and Power,
Vol. 6, No. 3, pp.256-262, 1990.
[10]Sturek, W.; Nietubicz, C.; Sahu, J.; Weinacht, P. , “Applications of Computational
Fluid Dynamics to the Aerodynamics of Army Projectiles.” Journal of Spacecraft
and Rockets, Vol. 31, No. 2, pp.186-199, 1994.
[11]Weinacht, P.; Sturek, W. , “Computation of the Roll Characteristics of a Finned
Projectile. ”Journal of Spacecraft and Rockets, Vol. 33, No. 6, pp.769-775, 1996.
[12]Graham, M.; Weinacht, P.; Bennett, J. , “Numerical Investigation of Supersonic Jet
Interaction for Finned Bodies. ” Journal of Spacecraft and Rockets , Vol. 39, No. 3,
pp.376-383, 2002.
[13]DeSpirito, J.; Heavey, K. , “CFD Computation of Magnus Moment and
Roll-Damping Moment of a Spinning Projectile. ”, AIAA Atmospheric Flight
Mechanics Conference, AIAA-2004-4713, Providence, RI, 2004.
[14]Silton, S. , “Navier-Stokes Computations for a Spinning Projectile from Subsonic
to Supersonic Speeds. ” Journal of Spacecraft and Rockets, Vol. 42, No. 2,
pp.223-231, 2005.
[15] Joseph, K., Costello, M. and Jubaraj, S. , “ Generating an Aerodynamic Model
54
附錄- Visual Basic 程式
Form1 - 1
Public diameter, diameter1 As Single '彈體直徑
Public sidesurface As Single '彈體側表面積
Public total_length As Single '全彈長
Public nose_length As Single '彈鼻頭長
Public boattail_length As Single '彈船尾部長
Public cross_area, cross_area1 As Single '彈體最大截面積
Public total_ratio As Single '全彈細長比
Public ogive_ratio As Single '彈頭細長比
Public boattail_ratio As Single '船尾細長比
Public wing_tip, wing_root, wing_thick, wing_no As Single
Public ata, alta0, alta1 As Single
Public ata0, cxf1 As Single
Public cxf0, ata1 As Single
Public ratio, ratio1, ratio2, ratio3, rati4 As Single
Dim atam(18), renold_no(18), wing_renold_no(18), cxf_wing(18) As Single
Dim cxfp1(18) As Single
Public air_density, viscusity, sound_speed As Single
Dim cxf(12, 13), alta(8, 14), altam(2, 20) As Single
Dim ccxf(13), aalta(14), cxfp(18), aaltam As Single
Dim cxn(7, 19), ccxn(19), ft(3, 23), alta_delta(4, 7) As Single
Public cyl_length, thrustratio, FormFactor As Single
Public rotatingband_dia As Single
Public memplat_dia As Single
Public base_dia As Single
Public ogive_radiu As Single
Public c_gravity, c_gravity_i As Single
Public rtr_ratio
Dim in_Rx0, in_Ry0 As Single
Dim cmach(18), Bal_Coef(14, 18), cxfc(18) As Single
'cx0(18), cx2(18), cna(18), cma(18), cpn(18), cypa(18), cnpa(18), cnpa2(18), cnpa5(18), cpf1(18),
cpf5(18), cmq(18), c
lp(18), cnq(18) As Single
Dim xa1(17), xa2(17), xa3(17), xa4(17), xa5(17), xa6(17), xa7(17) As Single
Dim xa8(17), xa9(17), xa10(17), xa11(17), xa12(17), xa13(17), xa14(17), xa15(17) As Single
Dim xb1(17), xb2(17), xb3(17), xb4(17), xb5(17), xb6(17), xb7(17), xb8(17), xb9(17) As Single
Dim xc1(17), xc2(17), xc3(17), xc4(17), xc5(17), xc6(17), xc7(17) As Single
56
Picture1.Cls
Picture2.Cls
Picture1.Print "彈體直徑"; diameter
Picture1.Print "彈體側表面積"; sidesurface
Picture1.Print "全彈長"; total_length
Picture1.Print "彈鼻頭長"; nose_length
Picture1.Print "彈船尾部長"; boattail_length
Picture1.Print "全彈細長比"; total_ratio
Picture1.Print "彈頭細長比"; ogive_ratio
Picture1.Print "船尾細長比"; boattail_ratio
Picture1.Print "彈體最大截面積"; cross_area
cmach(0) = 0.01: cmach(1) = 0.01: cmach(2) = 0.6: cmach(3) = 0.8
cmach(4) = 0.9: cmach(5) = 0.95: cmach(6) = 1#: cmach(7) = 1.05
cmach(8) = 1.1: cmach(9) = 1.2: cmach(10) = 1.35: cmach(11) = 1.5
cmach(12) = 1.75: cmach(13) = 2#: cmach(14) = 2.5: cmach(15) = 3#
cmach(16) = 4#: cmach(17) = 5#: cmach(18) = 5#
xt_bar = ogive_ratio / total_ratio
air_density = 1.225
viscusity = 1.45 * 10 ^ -5
sound_speed = 340
'讀入圖12-1
Open "D:\迫彈砲\圖資料\12-1.txt" For Input As #1
For j = 0 To 13
For i = 0 To 7
Input #1, alta(i, j)
Next i
Next j
Close #1
'讀入圖12-2
Open "D:\迫彈砲\圖資料\12-2.txt" For Input As #2
For j = 0 To 19
For i = 0 To 1
Input #2, altam(i, j)
Next i
Next j
Close #2
'讀入圖12-3
Open "D:\迫彈砲\圖資料\12-3.txt" For Input As #3
58
Close #10
'推力資料處理
For i = 0 To 22
ft(2, i) = ft(2, i) / proj_weight
'Picture2.Print "(", ft(0, i); ")" & " "; ft(2, i)
Next i
'圖12-1資料處理
For i = 1 To 7
If alta(i, 0) < xt_bar Then
alta0 = alta(i, 0)
alta1 = alta(i - 1, 0)
Indx = i
indx1 = i - 1
End If
If xt_bar > alta(i, 0) Then Exit For
Next i
ratio = (xt_bar - alta(Indx, 0)) / (alta(indx1, 0) - alta(Indx, 0))
For i = 0 To 13
aalta(i) = ratio * (alta(indx1, i) - alta(Indx, i)) + alta(Indx, i)
Next i
'圖12-2資料處理
For i = 0 To 19
If altam(0, i) > total_ratio Then
altam0 = altam(0, i)
altam1 = altam(0, i - 1)
End If
If total_ratio < altam(0, i) Then Exit For
Next i
ratio1 = (total_ratio - altam(0, i - 1)) / (altam(0, i) - altam(0, i - 1))
aaltam = ratio1 * (altam(1, i) - altam(1, i - 1)) + altam(1, i - 1)
'圖12-3資料處理
For i = 1 To 11
If cxf(i, 0) < xt_bar Then
cxf0 = cxf(i, 0)
cxf1 = cxf(i + 1, 0)
Indx2 = i
indx3 = i + 1
End If
60
cxf0 = cxf(0, j)
cxf1 = cxf(0, j - 1)
A = (cmach(i) - alta(0, j - 1))
b = (alta0 - alta1)
ratio4 = (renold_no(i) - cxf(0, j - 1)) / (cxf0 - cxf1)
cccxf = ratio4 * (ccxf(j) - ccxf(j - 1)) + ccxf(j - 1)
End If
If cxf(0, j) > renold_no(i) Then Exit For
Next j
cxfc(i) = aaalta * cccxf * aaltam * (sidesurface / cross_area) / 1000
'Picture2.Print "(", i; ")" & " "; cxfc(i)
'壓差阻力計算
'次音速部份
If cmach(i) < 1 Then
A = 1.865 - 0.175 * total_ratio * (Sqr(1 - cmach(i) * cmach(i))) + 0.01 * total_ratio * total_ratio
* (1 - cmach(i)
* cmach(i))
cxfp(i) = A * cccxf / 1000 + (0.029 / Sqr(cccxf / 1000)) * (50.2 / 120) ^ 3
End If
'超音速部份
If cmach(i) >= 1 Then
For j = 1 To 18
If cxn(0, j) > cmach(i) Then
ratio5 = (cmach(i) - cxn(0, j - 1)) / (cxn(0, j) - cxn(0, j - 1))
cccxn = ratio5 * (ccxn(j) - ccxn(j - 1)) + ccxn(j - 1)
End If
Form1 - 5
If cxn(0, j) > cmach(i) Then Exit For
Next j
cxfp(i) = cxfc(i) + cccxn
'震波阻力計算
End If
Next
'尾翼部份
xt_bar_wing = 0
wing_root_av = ((wing_root + wing_tip) / 2) / 1000
wing_area = (wing_root + wing_tip) / 1000 * (34.6635 / 1000)
cross_area1 = 3.14 * (diameter1 / 1000) ^ 2
62
--------
-------
Dim mass, temp As Single
Dim uxk1, uxk2, uxk3, uxk4, uyk1, uyk2, uyk3, uyk4, uzk1, uzk2, uzk3, uzk4 As Single
Dim xtk1, xtk2, xtk3, xtk4, ytk1, ytk2, ytk3, ytk4, ztk1, ztk2, ztk3, ztk4 As Single
Dim hxk1, hxk2, hxk3, hxk4, hyk1, hyk2, hyk3, hyk4, hzk1, hzk2, hzk3, hzk4 As Single
Dim omegax, omegay, omegaz As Single
Dim y_shift, height As Single
Dim beta, gama As Single
Form1 - 6
Dim pi, GR, GR2 As Double
test.Text = "Trajectory Calculation"
pi = 4 * Atn(1)
r_latitude = Latitude * pi / 180
r_azimuth = FireDirection * pi / 180
C_Latitude = Cos(r_latitude)
S_Latitude = Sin(r_latitude)
C_Azimuth = Cos(r_azimuth)
S_Azimuth = Sin(r_azimuth)
GR = 6356766 ' radiu of earth
GR2 = GR * GR
omegax = 7.29 * 0.00001 * C_Latitude * C_Azimuth
omegay = 7.29 * 0.00001 * S_Latitude
omegaz = 7.29 * 0.00001 * C_Latitude * S_Azimuth
coef_flag = 1
y_shift = FireRange * 0.9
If coef_flag = False Then
test.ForeColor = RGB(255, 0, 0)
test.Text = "必須先計算氣動力係數"
Else
Call TrajPlotInit(y_shift)
'diameter = diameter * 0.001
S = 0.25 * 3.141592654 * diameter * diameter
mass = proj_weight
g0 = 9.80665
If AxMomInertia <= 0 Then
test.Text = "必須輸入正確的軸向轉動慣量"
Return
64
uy1 = uy0
uz1 = uz0
X_cor1 = X_cor0
Y_cor1 = Y_cor0
Z_cor1 = Z_cor0
hx1 = hx0
hy1 = hy0
hz1 = hz0
'SpinRate = omegaX1
V_abs = Sqr(ux1 * ux1 + uy1 * uy1 + uz1 * uz1)
height = Y_cor1
temperature = ftemperature(Y_cor1)
If temperature <= 0 Then
test.Text = "temp=" & temperature & " , " & GrnTemp & " , " & height
End If
density = fdensity(temperature, height)
sonic_speed = 20.047 * Sqr(temperature) 'use gama=1.4, R=287.0587
mach = V_abs / sonic_speed
qsm = 0.5 * density * S / mass
qsd = 0.5 * density * S * diameter
C_theta = Cos(theta)
C_anta = Cos(anta)
S_theta = Sin(theta)
S_anta = Sin(anta)
C_psi = Cos(psi)
S_psi = Sin(psi)
S_phi = Sin(phi)
C_phi = Cos(phi)
Cd0 = AeroCoef_Int(mach, 1) * FormFactor
'Cda2 = AeroCoef_Int(mach, 2)
'Cla = AeroCoef_Int(mach, 3)
' Cypa = AeroCoef_Int(mach, 6)
'Cmpa = AeroCoef_Int(mach, 7)
'Cma = AeroCoef_Int(mach, 4)
'Cmq = AeroCoef_Int(mach, 12)
'Clp = AeroCoef_Int(mach, 13)
'Clq = AeroCoef_Int(mach, 14)
'Cd0 = 0
66
hzk1 = TimeStep * fhz()
ux1 = ux0 + 0.5 * uxk1
uy1 = uy0 + 0.5 * uyk1
uz1 = uz0 + 0.5 * uzk1
'X_cor1 = X_cor0 + 0.5 * xtk1
'Y_cor1 = Y_cor0 + 0.5 * ytk1
'Z_cor1 = Z_cor0 + 0.5 * ztk1
hx1 = hx0 + 0.5 * hxk1
hy1 = hy0 + 0.5 * hyk1
hz1 = hz0 + 0.5 * hzk1
theta = Atn(uy1 / Sqr(ux1 * ux1 + uz1 * uz1))
anta = Atn(uz1 / ux1)
phi = Atn(hy1 / Sqr(hx1 * hx1 + hz1 * hz1))
psi = Atn(hz1 / hx1)
C_theta = Cos(theta)
C_anta = Cos(anta)
S_theta = Sin(theta)
S_anta = Sin(anta)
C_psi = Cos(psi)
S_psi = Sin(psi)
S_phi = Sin(phi)
C_phi = Cos(phi)
V_abs = Sqr(ux1 * ux1 + uy1 * uy1 + uz1 * uz1)
x1 = C_phi * C_psi
x2 = S_phi
x3 = C_phi * S_psi
hdx = hx1 * x1 + hy1 * x2 + hz1 * x3
temp = (ux1 * x1 + uy1 * x2 + uz1 * x3) / V_abs
alpha = Atn(-(temp + 0.00001) / (Sqr(-temp * temp + 1) + 0.00001)) + 2 * Atn(1)
'If alpha > 0.18 Then alpha = 0.18
'If alpha < -0.18 Then alpha = -0.18
C_alpha = Cos(alpha)
S_alpha = Sin(alpha)
height = Y_cor1
temperature = ftemperature(height)
density = fdensity(temperature, height)
sonic_speed = 20.047 * Sqr(temperature) 'use gama=1.4, R=287.0587
mach = V_abs / sonic_speed
68
S_theta = Sin(theta)
S_anta = Sin(anta)
C_psi = Cos(psi)
S_psi = Sin(psi)
S_phi = Sin(phi)
C_phi = Cos(phi)
V_abs = Sqr(ux1 * ux1 + uy1 * uy1 + uz1 * uz1)
x1 = C_phi * C_psi
x2 = S_phi
x3 = C_phi * S_psi
hdx = hx1 * x1 + hy1 * x2 + hz1 * x3
temp = (ux1 * x1 + uy1 * x2 + uz1 * x3) / V_abs
alpha = Atn(-(temp + 0.00001) / (Sqr(-temp * temp + 1) + 0.00001)) + 2 * Atn(1)
C_alpha = Cos(alpha)
S_alpha = Sin(alpha)
height = Y_cor1
temperature = ftemperature(height)
density = fdensity(temperature, height)
sonic_speed = 20.047 * Sqr(temperature) 'use gama=1.4, R=287.0587
mach = V_abs / sonic_speed
mach = V_abs / sonic_speed
qsm = 0.5 * density * S / mass
qsd = 0.5 * density * S * diameter
Cd0 = AeroCoef_Int(mach, 1) * FormFactor
Cda2 = AeroCoef_Int(mach, 2)
Cla = AeroCoef_Int(mach, 3)
Cypa = AeroCoef_Int(mach, 6)
Cmpa = AeroCoef_Int(mach, 7)
Cma = AeroCoef_Int(mach, 4)
Cmq = AeroCoef_Int(mach, 12)
Clp = AeroCoef_Int(mach, 13)
'Clq = AeroCoef_Int(mach, 14)
ftx = ft1 * Cos(theta) * Cos(anta)
fty = ft1 * Sin(theta)
uxk3 = TimeStep * fux(ftx)
uyk3 = TimeStep * fuy(fty)
uzk3 = TimeStep * fuz()
'xtk3 = TimeStep * fxt()
70
density = fdensity(temperature, height)
sonic_speed = 20.047 * Sqr(temperature) 'use gama=1.4, R=287.0587
mach = V_abs / sonic_speed
qsm = 0.5 * density * S / mass
qsd = 0.5 * density * S * diameter
Cd0 = AeroCoef_Int(mach, 1) * FormFactor
Cda2 = AeroCoef_Int(mach, 2)
Cla = AeroCoef_Int(mach, 3)
Cypa = AeroCoef_Int(mach, 6)
Cmpa = AeroCoef_Int(mach, 7)
Cma = AeroCoef_Int(mach, 4)
Cmq = AeroCoef_Int(mach, 12)
Clp = AeroCoef_Int(mach, 13)
'Clq = AeroCoef_Int(mach, 14)
ftx = ft1 * Cos(theta) * Cos(anta)
fty = ft1 * Sin(theta)
uxk4 = TimeStep * fux(ftx)
uyk4 = TimeStep * fuy(fty)
uzk4 = TimeStep * fuz()
'xtk4 = TimeStep * fxt()
'ytk4 = TimeStep * fyt()
'ztk4 = TimeStep * fzt()
hxk4 = TimeStep * fhx()
hyk4 = TimeStep * fhy()
hzk4 = TimeStep * fhz()
ux1 = ux0 + (uxk1 + 2 * uxk2 + 2 * uxk3 + uxk4) / 6
uy1 = uy0 + (uyk1 + 2 * uyk2 + 2 * uyk3 + uyk4) / 6
uz1 = uz0 + (uzk1 + 2 * uzk2 + 2 * uzk3 + uzk4) / 6
X_cor1 = X_cor0 + TimeStep * ux1
Y_cor1 = Y_cor0 + TimeStep * uy1
Z_cor1 = Z_cor0 + TimeStep * uz1
hx1 = hx0 + (hxk1 + 2 * hxk2 + 2 * hxk3 + hxk4) / 6
hy1 = hy0 + (hyk1 + 2 * hyk2 + 2 * hyk3 + hyk4) / 6
Form1 - 11
hz1 = hz0 + (hzk1 + 2 * hzk2 + 2 * hzk3 + hzk4) / 6
theta = Atn(uy1 / Sqr(ux1 * ux1 + uz1 * uz1))
anta = Atn(uz1 / ux1)
phi = Atn(hy1 / Sqr(hx1 * hx1 + hz1 * hz1))
72
cor1, "####")
'Print #7, Format(a_time, "####.###"), Format(V_abs, "####.###"), Format(ux0, "####.###"),
Format(uy0, "####.###"
), Format(X_cor1, "####.###"), Format(Y_cor1, "####.###")
Print #7, Format(a_time, "####.###"), Format(X_cor1, "####.###"), Format(Y_cor1, "####.###")
Loop Until Y_cor1 <= 0 Or X_cor1 >= FireRange Or X_cor1 < 0
'test.Text = "Range=" & Format(X_cor1, "######") & " Time=" & Format(a_time, "###.#") & " Drift="
& Format(Z_co
r1, "####")
End If
'cx0(18), cx2(18), cna(18), cma(18), cpn(18), cypa(18), cnpa(18), cnpa2(18), cnpa5(18), cpf1(18),
cpf5(18), cmq(18), c
lp(18), cnq(18) As Single
'test.Text = mach & ", " & Cd0 & ", " & qsm & ", " & Z_cor1
Close #7
End Sub
Private Function AeroCoef_Int(ByVal mach As Single, ByVal coef_index As Integer) As Single
Dim j, jj As Integer
For j = 2 To 17
If mach >= cmach(j - 1) And mach < cmach(j) Then jj = j - 1
Next
ratio6 = (mach - cmach(jj)) / (cmach(jj + 1) - cmach(jj))
AeroCoef_Int = ratio6 * (cxfp1(jj + 1) - cxfp1(jj)) + cxfp1(jj)
End Function
Private Sub Form_Load()
diameter1 = 120
total_length = 770
Form1 - 12
sidesurface = 883000
nose_length = 305
boattail_length = 22.8
FireRange = 100000
TimeStep = 0.01
AxMomInertia = 0.1539
TranMomInertia = 2.2133
proj_weight = 19.731
GunTwist = 20
GrnTemp = 20 + 273.15
74
Text24.Text = FormFactor
End Sub
Private Sub Text1_Change()
diameter1 = Val(Text1.Text)
cross_area = 3.14 * (Val(Text1.Text) / 2) ^ 2
End Sub
Private Sub Text2_Change()
sidesurface = Val(Text2.Text)
End Sub
Private Sub Text3_Change()
total_length = Val(Text3.Text)
total_ratio = Val(Text3.Text) / Val(Text1.Text)
End Sub
Private Sub Text4_Change()
nose_length = Val(Text4.Text)
ogive_ratio = Val(Text4.Text) / Val(Text1.Text)
End Sub
Private Sub Text5_Change()
boattail_length = Val(Text5.Text)
boattail_ratio = Val(Text5.Text) / Val(Text1.Text)
Form1 - 13
End Sub
Private Sub Text6_Change()
wing_root = Val(Text6.Text)
End Sub
Private Sub Text7_Change()
wing_tip = Val(Text7.Text)
End Sub
Private Sub Text8_Change()
wing_thick = Val(Text8.Text)
End Sub
Private Sub Text9_Change()
wing_sweep = Val(Text9.Text)
End Sub
Private Sub Text10_Change()
wing_no = Val(Text10.Text)
End Sub
Private Sub Text11_Change()
76
Form1 - 14
thrustratio = Val(Text23.Text)
End Sub
Private Sub Text24_Change()
FormFactor = Val(Text24.Text)
End Sub
Private Function fux(ByVal ftx As Single) As Single
' use sin(alphat) to replace alphat
fux = -qsm * V_abs * (Cd0 + Cda2 * S_alpha * S_alpha) * ux1 + ftx
fux = fux + qsm * Cla * V_abs * (V_abs * x1 - ux1)
fux = fux - qsm * diameter / 2 * Cypa * Ixy * hdx * (x2 * uz1 - x3 * uy1)
fux = fux + qsm * diameter / 2 * Clq * V_abs * (hy1 * x3 - hz1 * x2)
fux = fux - gx + Lamdax
'Return
End Function
Private Function fuy(ByVal fty As Single) As Single
fuy = -qsm * V_abs * (Cd0 + Cda2 * S_alpha * S_alpha) * uy1 + fty
fuy = fuy + qsm * Cla * V_abs * (V_abs * x2 - uy1)
fuy = fuy - qsm * diameter / 2 * Cypa * Ixy * hdx * (x3 * ux1 - x1 * uz1)
fuy = fuy + qsm * diameter / 2 * Clq * V_abs * (hz1 * x1 - hx1 * x3)
fuy = fuy - gy + Lamday
'Return
End Function
Private Function fuz() As Single
fuz = -qsm * (Cd0 + Cda2 * S_alpha * S_alpha) * V_abs * uz1
fuz = fuz + qsm * Cla * V_abs * (V_abs * x3 - uz1)
fuz = fuz - qsm * diameter / 2 * Cypa * Ixy * hdx * (x1 * uy1 - x2 * ux1)
fuz = fuz + qsm * diameter / 2 * Clq * V_abs * (hx1 * x2 - hy1 * x1)
fuz = fuz - gz + Lamdaz
'Return
End Function
Private Function fxt() As Single
fxt = ux1
End Function
Private Function fyt() As Single
fyt = uy1
End Function
Private Function fzt() As Single
78
End Function
Private Function fitadt() As Single
fitadt = omegaZ1
'Return
End Function
Private Sub TrajPlotInit(ByVal dy As Single)
Dim x_range, x_tic As Single
Dim i As Integer
Dim px, py As Single
Dim width2, height2, aspect As Single
Picture1.Cls
x_range = FireRange * 1000
Picture1.Scale (-FireRange * 0.1, FireRange + FireRange * 0.1)-(FireRange + FireRange * 0.1,
-FireRange * 0.1)
Picture1.DrawStyle = 0
x_tic = FireRange / 10
Picture1.Line (0, 0)-(FireRange, 0)
Picture1.Line (0, 0)-(0, 0.6 * FireRange)
Picture1.DrawStyle = 2
For i = 1 To 10
px = i * x_tic
Picture1.Line (px, 0)-(px, 0.6 * FireRange)
Next
For i = 1 To 6
py = i * x_tic
Picture1.Line (0, py)-(FireRange, py)
Next
Picture1.DrawStyle = 0
Picture1.Line (0, dy)-(FireRange, dy)
Picture1.Line (FireRange, dy - 0.1 * FireRange)-(FireRange, dy + 0.1 * FireRange)
Picture2.Cls
height2 = Picture2.height
width2 = Picture2.Width
aspect = width2 / height2
Picture2.Scale (-1.1 * aspect, 1.1)-(1.1 * aspect, -1.1)
Picture2.Line (-1, 0)-(1, 0)
Picture2.Line (0, -1)-(0, 1)
End Sub
80
'curDirect = "C:\Documents and Settings\chiang\My Documents\MyStudy\彈道學\projectile\Coefs"
curDirect = Dir1.Path
output_file_name = curDirect & "\" & strReturn & ".txt"
test.Text = output_file_name
Set ts = fso.OpenTextFile(output_file_name, 8, True, 0)
ts.writeline "**********************"
ts.writeline
ts.writeline "彈徑=" & " " & CStr(in_diameter) & "mm"
string1 = Format(total_length, "0.00")
string2 = Format(nose_length, "0.00")
ts.writeline "全彈長(cal.)= " & string1 & " 蛋弧段長(cal.)= " & string2
ts.writeline "船尾段長(cal.)= " & Format(boattail_length, "0.00") & " 蛋弧半徑(cal.)= " &
Format(ogive_radiu, "##
.###")
ts.writeline "彈帶直徑(cal.)= " & Format(rotatingband_dia, "0.00") & " 彈尖截徑(cal.)= " &
Format(menplat_dia, "0
.00")
ts.writeline "彈尾直徑(cal.)= " & Format(base_dia, "0.00") & " 重心到彈尖(cal.)= " &
Format(c_gravity_i, "0.00")
ts.writeline
ts.writeline
ts.writeline "Mach No. Cx0 Cx2 Cna Cma Cpn Cypa Cnpa Cmq
Clp"
ts.writeline
For i = 1 To 17
string1 = Format(cmach(i), "##0.00")
string2 = Format(cxfp1(i), "##0.000000")
'string3 = Format(Bal_Coef(2, i), "##0.0000")
'string4 = Format(Bal_Coef(3, i), "##0.0000")
'string5 = Format(Bal_Coef(4, i), "##0.0000")
'string6 = Format(Bal_Coef(5, i), "##0.0000")
'string7 = Format(Bal_Coef(6, i), "##0.0000")
'string8 = Format(Bal_Coef(7, i), "##0.0000")
'string9 = Format(Bal_Coef(12, i), "##0.0000")
'string10 = Format(Bal_Coef(13, i), "##0.0000")
'Do While Len(string1) < 12
'string1 = string1 + " "
'Loop
國科會補助計畫衍生研發成果推廣資料表
日期:2012/02/25
國科會補助計畫
計畫名稱: 迫砲彈藥增加火箭助推之彈道性能分析
計畫主持人: 王旭萍
計畫編號: 100-2623-E-164-001-D 學門領域: 兵器系統
無研發成果推廣資料
博士後研究員 0 0 100%  
專任助理 0 0 100%  
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
無 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
