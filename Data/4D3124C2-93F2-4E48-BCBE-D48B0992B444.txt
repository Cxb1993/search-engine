中英文摘要 
給定一個有 n 個節點(vertex)的樹狀圖 
T = (V, E)，使得樹狀圖上的每一個節點都有
一個價值與權重的數對(value-weight pair) 
(valv, wv)，其中價值(value) valv為一個實
數；權重(weight) wv為一個非負的整數，我
们定義樹狀圖T的密度為 ∑
∑
∈
∈
Vv v
Vv v
w
val
。樹狀圖
T的子樹 (subtree)為圖形T的一連通子圖
(connected subgraph)(V’, E’)，其中V’⊆V且E’ 
⊆E。我們定義在樹狀圖T之限重最大密度子
樹 的 問 題 (weight-constrained 
maximum-density subtree problem)：給定兩
個整數wmin及wmax，在樹狀圖T中找一棵最大
密度 (maximum-density) 的子樹 T’ = (V’, 
E’)，使得wmin ≤  ≤ w∑ ∈ 'Vv vw max。此最佳化
問題 (optimization problem)之決策性版本
(decision version)定義如下： 給定一棵有n
個節點的樹狀圖T，每個節點都有一組價值
與權重的數對 ( , ，兩個整數 跟
，還有一個目標密度d，是否存在一子
樹 使得其密度不小於d而且其重量介於
w
)v vval w minw
maxw
'T
min跟wmax之間( )。 maxmin ( ')w w T w≤ ≤
於本計劃中，我們嘗試證明限重最大密
度 子 樹 的 問 題 之 決 策 性 版 本 為
NP-complete，並嘗試設計虛擬多項式時間
演算法(pseudo polynomial-time algorithms)
在樹狀圖上求解以下三種問題： 
1. 限 重 最 大 密 度 路 徑 問 題 (the 
weight-constrained maximum-density 
path problem)：給定一n個節點的樹狀圖
T，且每個節點都有一組價值與權重的數
對，及最大與最小範圍的兩個整數wmin和
wmax，找出在這棵樹狀圖T上最大密度路
徑P，使得wmin ≤ w(P) ≤ wmax。 
2. 限 重 最 大 密 度 子 樹 問 題 (the 
weight-constrained maximum-density 
subtree problem)：給定一n個節點的樹
狀圖T，且每個節點都有一組價值與權重
的數對，及最大與最小範圍的兩個整數
wmin和wmax，找出在樹狀圖T上最大密度
子樹T’，使得wmin ≤ w(T’) ≤ wmax。 
3. 限 重 最 大 密 度 Steiner 樹 問 題 (the 
weight-constrained maximum-density 
Steiner tree problem)：給定一n個節點的
樹狀圖T，且每個節點都有一組價值與權
重的數對，及最大與最小範圍的兩個整
數wmin和wmax，以及一個端點子集合
S⊂V(T)，找出在樹狀圖T上最大密度子樹
T’，使得S ⊆V(T’)且wmin ≤ w(T’) ≤ wmax。 
 
關鍵詞：演算法設計及分析、限重最大密度
子 樹 、 樹 狀 圖 、 動 態 規 劃 (dynamic 
programming)、Steiner 樹、虛擬多項式時間
演算法。 
Abstract 
Given a tree T = (V, E) of n nodes such that 
each node v is associated with a value-weight 
pair (valv, wv), where value valv is a real 
number and weight wv is a non-negative 
integer, the density of T, denoted by d(T), is 
defined as ∑
∑
∈
∈
Vv v
Vv v
w
val
. The weight-sum of T, 
denoted by w(T), is ∑ ∈Vv vw . A subtree of T 
is a connected subgraph (V’, E’) of T, where 
V’ ⊆ V and E’ ⊆ E. Given two integers wmin 
and wmax, the weight-constrained 
maximum-density subtree problem on T is to 
find a maximum-density subtree T’ = (V’, E’) 
satisfying wmin ≤ ∑ ∈ 'Vv vw  ≤ wmax. The 
decision version of the weight-constrained 
maximum-density subtree problem is defined 
as follows: 
Given a tree T of n nodes associated with 
value-weight pairs, two integer bounds wmin 
and wmax, and a target density, determine 
個例子來看，給定一個DNA序列，而在這個
DNA序列當中，是否可以找到一個片段其長
度至少為L，而且此片段擁有最高的GC-ratio 
[2, 4, 13]？對於找出最大密度片段的問題，
Goldwasser, Kao, and Lu [3] 提供了一個時
間複雜度為O(n log(wmax – wmin +1))的演算
法。Chung 與 Lu [1] 利用一種前置計算
(pre-computing)用以避免論文[3]中較複雜耗
時的步驟，提出一線性時間O(n)的演算法。
有很多的相關研究是在特殊情況 (special 
case)下討論，例如，所有的wi都為 1 的情形，
這些研究可以參考[3, 4, 6, 7, 8, 11, 12]。 
最近幾年有許多與最大密度片段問題
相關之問題被提出討論：給定一樹狀圖，其
每一個邊(edge)都結合權重(weight)與長度
(length)，Wu, Chao, 與 Tang [15] 發展一個
O(n log2 n)時間的演算法來找出在樹狀圖上
的最大權重路徑(maximum-weight path)，而
其長度不會超過所給定的上限 (upper 
bound)。假使邊的長度侷限為[1, 2, … , O(n)]
範圍內的整數，則這個問題所需要的時間就
會降為O(n log n)，其中n為給定樹狀圖的總
點數。Lin, Kuo, 與Chao [9] 探討另一相關
問題：給定一有根樹狀圖(rooted tree)，其中
每一個邊e都結合權重w(e)，試找出限制長度
之 最 大 密 度 路 徑 (length-constrained 
maximum-density path)，其中路徑e1, e2, … , 
ek的密度定義為 k
ewk
i i
)(
1∑ = 。Lin, Kuo, 與
Chao [9]提出了一個時間複雜度為O(nL) 的
演算法來找出長度至少為L的最大密度路
徑。目前文獻中尚無限重最大密度子樹問題
的結果。 
(二) 研究目的 
本計劃中，我們嘗試證明限重最大密度
子樹的問題之決策版本為 NP-complete，並
嘗試設計虛擬多項式時間演算法 (pseudo 
polynomial-time algorithms)在樹狀圖上求解
以下三種問題： 
 
問題1. 限 重 最 大 密 度 路 徑 問 題 (the 
weight-constrained maximum-density path 
problem)：給定一n個節點的樹狀圖T，且每
個節點都有一組價值與權重的數對，及最大
與最小範圍的兩個整數wmin和wmax，找出在
這棵樹狀圖T上最大密度路徑P，使得wmin ≤ 
w(P) ≤ wmax。 
 
問題2. 限 重 最 大 密 度 子 樹 問 題 (the 
weight-constrained maximum-density 
subtree problem)：給定一n個節點的樹狀圖
T，且每個節點都有一組價值與權重的數
對，及最大與最小範圍的兩個整數wmin和
wmax，找出在樹狀圖T上最大密度子樹T’，
使得wmin ≤ w(T’) ≤ wmax。 
 
問題3. 限重最大密度Steiner樹問題 (the 
weight-constrained maximum-density 
Steiner tree problem)：給定一n個節點的樹
狀圖T，且每個節點都有一組價值與權重的
數對，及最大與最小範圍的兩個整數wmin和
wmax，以及一個端點子集合S⊂V(T)，找出在
樹狀圖T上最大密度子樹T’，使得S ⊆V(T’)
且wmin ≤ w(T’) ≤ wmax。 
 
(三) 研究方法、進行步驟及執行
進度 
3-1 研究方法 
於本計劃中，我們假設在樹狀圖T = (V, 
E)上的每一個節點v 都有一組價值與權重
(value-weight pair)的數對(valv, wv)，且價值
(value) valv為一實數，權重(weight) wv為一非
負整數。樹狀圖T的密度(density)記為d(T)，
其定義為 ∑
∑
∈
∈
Vv v
Vv v
w
val
。樹狀圖T的權重總和
 3
於一有根樹狀圖T中給一節點v，我們以
及 分別來表示由點v開始的向
下路徑最佳值以及次佳的值，且其權重為
i。我們著眼於使用由下而上(bottom-up)動態
規劃的方式來計算對於樹狀圖T中每個節點
v的 及 ，在此，i的範圍是 w
[ ]iDv1 [ ]iDv2
[ ]iDv1 [ ]iDv2 v, 
wv+1,…, wmax。定義max函式為找出向下路
徑中的最大值。若存在至少兩條向下路徑同
為最佳值，則定義函式 2nd-max也會得到最
佳的值；否則就會選擇次佳的值。若v為一
葉點 (leaf)，那麼在 i = wv 的情形時，
=val[ ]iDv1 v ，其他情形時則等於–∞。此外，
我們定義當 i介於 0 到wmax時， [ ]iDv2 等
於–∞。為了方便，本計劃中我們假設每個內
容若尚未被指定值時，則假定其值為–∞。 
設一內部節點v有m個兒子v1,v2,…,vm那
麼我們得到 
[ ] [ ] ⎪⎭
⎪⎬⎫⎪⎩
⎪⎨⎧ ≤≤
+−=
mj
valwiD
iD vvvjv 1
max
1
1     (Equation 1) 
及 
[ ] [ ] ⎪⎭
⎪⎬⎫⎪⎩
⎪⎨⎧ ≤≤
+−−=
mj
valwiD
ndiD vvvjv 1
max2
1
2  (Equation 2) 
對任一內部節點 v，我們以 來紀錄
該點對於 的貢獻者(contributor)，也就
是紀錄提供 值的 v 的小孩。譬如：
。相同的，若存在另一個不同於第一個貢獻
者的小孩節點提供值給 。我們以
來紀錄 的貢獻者。此外，當對應
的 貢 獻 者 並 不 存 在 時 ， 我 們 令
[ ]idv1
[ ]iDv1
[ ]iDv1
[ ] [ ] [ ] vvivkvkv valwiDiDvid +−== 11  if 
[ ]iDv2
[ ]idv2 [ ]iDv2
[ ] [ ]( ) ULL21 Nor =idid vv 。注意，當存在兩條
以上的向下路徑擁有同樣的最大值時，
[ ]idv1 與 [ ]idv2 中所記錄的節點將不會相同。 
Upward entries 的 計 算 和 downward 
entries的計算十分相似。令 表示從權
重為i的節點v開始的向上路徑的最大值。在
此的i範圍是 w
][iUv
v, wv+1,…, wmax。我們使用由
上而下動態規劃的方式來計算對於樹狀圖T
中每個節點 v的 ，最初，我們令][iUv
rrr wivaliU ==  if ][ , = –∞ if [ ]iUv
rwi ≠ 。 
令par(v)是節點v的父親，那麼我們得到 
[ ]
( )[ ]
( )[ ]
( )[ ]⎪⎪⎩
⎪⎪⎨
⎧
+−
+−
+−
=
vvvpar
vvvpar
vvvpar
v
valwiD
valwiD
valwiU
iU
2
 
1max  (Equation 3) 
對任意非樹根節點v，我們以 [ ]iuv 來記
錄 的貢獻者。並定義如下： ][iUv
[ ]
( )( )
( )[
( )[ ]⎪⎪⎩
⎪⎪⎨
⎧
−
−=
vvpar
vvparv
wid
wid
vparpar
iu
2
1 ]     (Equation 4) 
注意 [ ]iuv 可能為 par(v)的兒子或父親。 
我們發展之演算法MDP(T, r, wmin, wmax)
即是利用上述所介紹的式子，初步設計用來
計算得到限重最大密度路徑權重的演算法。 
藉由執行演算法 MDP 之後所得的資
訊，我們提出一演算法 RECONMDP，利用
[ ]iDv1 、 [ ]iDv2 、 [ ]idv1 、 、 以及[ ]idv2 ][iUv
 5
 
步驟10. 給定一有根樹狀圖，建構一限重最
大密度子樹。 
 
步驟11. 給定一樹狀圖中，求解限重最大密
度子樹問題。 
 
步驟12. 發 展 可 正 確 找 出 S 之 最 小
connecting set 的演算法 MCS。 
 
步驟13. 發展演算法可正確計算出限重最
大密度 Steiner 樹的密度。 
 
步驟14. 分析求解限重最大密度 Steiner 樹
演算法的時間複雜度。 
 
3-3 執行進度 
已完成步驟 1~14。 
(四) 結果與討論 
已完成之工作項目：
 7
1. 令T為一有根樹狀圖，證明此樹狀圖T
中的所有節點v，其downward entries 
、 、 及 可以在
O(w
[ ]iDv1 [ ]iDv2 [ ]idv1 [ ]idv2
maxn) 的時間內計算出來。 
2. 令T為一棵有根樹狀圖。證明在此樹狀
圖T中的所有節點v，其upward entry 的
及 可以在O(w][iUv [ ]iuv maxn) 的時間
內計算出來。 
3. 證明在一樹狀圖中，其限重最大密度路
徑的密度可以在O(wmaxn) 的時間內計
算出來。 
4. 證明在一棵樹狀圖中，其限重最大密度
路徑問題可以在O(wmaxn)的時間內求
解。 
5. 證 明 限 重 最 大 密 度 子 樹 問 題
(weight-constrained maximum-density 
subtree problem)的決策性版本(decision 
version)是 NP-complete。 
6. 假定 是有根樹狀圖 T 中的一棵限重
最大密度子樹，並且 是 的根。令
'T
'r 'T
' 1 2( ') { , ,..., }( ( '))T qchild r v v v child rT= ⊆
。證明對於每個根點為點 的有根樹狀
圖 ， 是其重量為 的最大
密度子樹,其中 。 
iv
ivT ' ivT ( ' )ivw T
1 i q≤ ≤
7. 假定 是有根樹狀圖 T 中的一棵限重
最大密度子樹，並且 是 的根。令
'T
'r 'T
' 1 2( ') { , ,..., }( ( '))T qchild r v v v child rT= ⊆
。證明對於
jvT T− 中， 是其以
點 為根且重量為 的最大
密度子樹，其中 。 
' '
jvT T−
'r ( ' ' )
jvw T T−
1 j q≤ ≤
8. 證明所有的 , ([ ]vB i [ ]vjC i [ ]vjc i )的內容
計算可以在 的時間內完
成，n為給定的樹狀圖 T的節點個數。 
2
max(O w n)
)
9. 證明在有根樹狀圖中，計算限重最大密
度子樹的密度可以在 的時
間內完成，n為給定的樹狀圖 T的節點
個數。 
2
max( )O w n
10. 證明在有根樹狀圖 T 中，可以在
的時間內找到其限重最大密度子樹。 
( )O n
11. 證明在樹狀圖中的限重最大密度子樹
問題可以在 的時間求解。 2max(O w n
12. 證明演算法 MCS 可以在 O(n)的時間
內，正確地找到 S 的最小 connecting 
set。 
 9
length-constrained heaviest path problem 
on a tree,” Information Processing 
Letters, 69:63-67, 1999. 
(五) 計畫成果自評 
本計畫的工作項目已全部執行完畢。 
附錄 
本計畫之研究成果已發表於(Journal version 
審稿中): 
1. Sun-Yuan Hsieh and Ting-Yu Chou, 
"Finding a Weight-Constrained 
Maximum-Density Subtree in a Tree," in 
Proceedings of 16th International 
Symposium on Algorithms and 
Computation (ISAAC), Sanya, Hainan, 
China, December 2005, Lecture Notes in 
Computer Science 3827, pp. 944-953. 
2. Sun-Yuan Hsieh and Chin-Sheng Cheng, 
“Finding a maximum-density path in a 
tree under the weight and length 
constraints,” Information Processing 
Letters, vol. 105, issue 5, pp. 202-205, 
February 2008. (SCI Expanded, EI) 
 
Author's personal copy
Information Processing Letters 105 (2008) 202–205
www.elsevier.com/locate/ipl
Finding a maximum-density path in a tree under the weight
and length constraints
Sun-Yuan Hsieh ∗, Chih-Sheng Cheng
Department of Computer Science and Information Engineering, National Cheng Kung University, No. 1,
University Road, Tainan 70101, Taiwan
Received 16 May 2007; accepted 31 August 2007
Available online 14 September 2007
Communicated by L. Boasson
Abstract
Let T = (V ,E) be a tree with n nodes such that each node v is associated with a value-weight pair (valv,wv), where the
value valv is a real number and the weight wv is a positive integer. The density of a path P = 〈v1, v2, . . . , vk〉 is defined as∑k
i=1 vali/
∑k
i=1 wi . The weight of P , denoted by w(P ), is
∑k
i=1 wi . Given a tree of n nodes, two integers wmin and wmax, and a
length lower bound L, we present a pseudo-polynomial O(wmaxnL)-time algorithm to find a maximum-density path P in T such
that wmin 6w(P )6wmax and the length of P is at least L.
© 2007 Elsevier B.V. All rights reserved.
Keywords: Algorithms; Design and analysis of algorithms; Trees; Paths; Subgraph optimization problems; Network design
1. Introduction
The computation of patterns in sequences is a fun-
damental problem in computational biology and many
other areas [16]. Let S = (s1, s2, . . . , sn) be a sequence
of n elements such that each element si is associated
with a value-weight pair (vali ,wi) for i = 1,2, . . . , n,
where the value vali is a real number and the weight
wi is a positive integer. A subsequence of a given
sequence is a sequence formed from the given se-
quence by deleting some of the elements without dis-
turbing the relative positions of the remaining elements.
A segment S[i, j ] is a contiguous subsequence of S
* Corresponding author.
E-mail addresses: hsiehsy@mail.ncku.edu.tw (S.-Y. Hsieh),
ason@algorithm.csie.ncku.edu.tw (C.-S. Cheng).
from position i to position j . The density of S[i, j ]
is
∑j
k=i valk/
∑j
k=i wk . Given two integers wmin and
wmax, the maximum-density segment problem is to find
a consecutive subsequence S[i, j ] of S such that the
density of S[i, j ] is maximum over all O(n(wmax −
wmin + 1)) segments satisfying wmin 6 ∑jk=i wk 6
wmax. This problem arises from the investigation of
non-uniformity of nucleotide composition within ge-
nomic sequences, which was first revealed through ther-
mal melting and gradient centrifugation experiments [7,
13]. In the most basic form of the maximum-density
segment problem, the sequence S corresponds to the
given DNA sequence, where ai = 1 if the correspond-
ing nucleotide in the DNA sequence is a G or C, and
ai = 0 otherwise. Segments of a DNA sequence that
are rich in nucleotides G and C are usually biologically
significant. Researchers observed that the compositional
0020-0190/$ – see front matter © 2007 Elsevier B.V. All rights reserved.
doi:10.1016/j.ipl.2007.08.031
Author's personal copy
204 S.-Y. Hsieh, C.-S. Cheng / Information Processing Letters 105 (2008) 202–205
By using a bottom–up traversal of T , we attempt to
compute D1v[i, j ] and D2v[i, j ] for wv 6 i 6 wmax and
1 6 j 6 L + 1. The function “max" returns the maxi-
mum value of the downward paths. Moreover, if there
exist two downward paths of the same maximum value,
then the function “2nd-max” returns the same value
with max; otherwise, it returns the second-best one.
If v is a leaf, then
D1v[i, j ] =
{
valv if i = wv and j = 1,
−∞ otherwise. (1)
Moreover, D2v[i, j ] = −∞.1
Suppose that the internal node v has m children
v1, v2, . . . , vm. Then,
D1v[i, j ] =
⎧⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎩
max{D1vk [i − wv, j − 1]
+ valv| 16 k 6m} if j 6 L,
max{D1vk [i − wv,L] + valv,
D1vk [i − wv,L + 1]+ valv | 16 k 6m} if j = L + 1,
(2)
and
D2v[i, j ] =
⎧⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎩
2nd- max{D2vk [i − wv, j − 1]+ valv| 16 k 6m} if j 6 L,
2nd- max{D2vk [i − wv,L] + valv,
D2vk [i − wv,L + 1]+ valv | 16 k 6m} if j = L + 1.
(3)
On the other hand, we use Uv[i, j ] to record the max-
imum value of those upward paths starting from node v
such that w(P ) = i and |P | = j for j 6 L. Moreover,
we use Uv[i,L + 1] to record the maximum value of
those upward paths starting from v such that w(P ) = i
and |P | > L. By using a top–down traversal of T , we
attempt to compute Uv[i, j ] for wv 6 i 6 wmax and
1 6 j 6 L + 1. For the root r of T , Ur [i, j ] = valr if
i = wr and j = 1, and Ur [i, j ] = −∞ otherwise.
Let par(v) be the parent of node v. In the case of
j 6 L, if D1par(v)[i − wv, j − 1] 	= D1v[i − wv −
wpar(v), j − 2] + valpar(v), then
Uv[i, j ] = max
{
Upar(v)[i − wv, j − 1] + valv,
D1par(v)[i − wv, j − 1] + valv
}
. (4)
Otherwise, if D1par(v)[i − wv, j − 1] = D1v[i − wv −
wpar(v), j − 2] + valpar(v), then
Uv[i, j ] = max
{
Upar(v)[i − wv, j − 1] + valv,
D2par(v)[i − wv, j − 1] + valv
}
. (5)
1 Throughout this paper, we assume the value of an entry equals
−∞ if no value assigned.
In the case of j = L + 1, if D1par(v)[i − wv,L] =
D1v[i − wv − wpar(v),L − 1] + valpar(v) or D1par(v)[i −
wv,L + 1] = max{D1v[i − wv − wpar(v),L],D1v[i −
wv − wpar(v),L + 1]} + valpar(v), then
Uv[i,L + 1] = max
{
Upar(v)[i − wv,L] + valv,
Upar(v)[i − wv,L + 1] + valv,
D2par(v)[i − wv,L] + valv,
D2par(v)[i − wv,L + 1] + valv
}
. (6)
Otherwise,
Uv[i,L + 1] = max
{
Upar(v)[i − wv,L] + valv,
Upar(v)[i − wv,L + 1] + valv,
D1par(v)[i − wv,L] + valv,
D1par(v)[i − wv,L + 1] + valv
}
. (7)
Our algorithm is first to use a bottom–up traversal of
T to compute D1v[i, j ] and D2v[i, j ] for wv 6 i 6 wmax
and 16 j 6 L+ 1. Then, by a top–down traversal of T ,
we can also compute Uv[i, j ] for wv 6 i 6 wmax and
16 j 6 L + 1. Note that, for the sake of backtracking,
some useful information also need to be maintained dur-
ing the traversal. Finally, we return the value
max
v∈V (T )
{
max
wmin6i6wmax
L6j6L+1
{
D1v[i, j ]
i
,
Uv[i, j ]
i
}}
that is the density of a maximum-density path under
both the weight and length constraints. The correctness
of the algorithm follows from Eqs. (1)–(7). We next an-
alyze the time complexity of the algorithm.
Lemma 1. The downward entries D1v and D2v for all
nodes v in T can be computed in O(wmaxnL) time.
Proof. If v is a leaf, then the corresponding entries can
be compute in O(1) time. Let v be an internal node with
m children. For a fixed length l, it takes O(wmaxm) time
to compute the desired value according to Eqs. (1)–(3).
Therefore, it takes O(wmaxmL) time to computed the
downward entries for v. By a bottom–up traversal of T ,
the downward entries for all internal nodes can be com-
puted in O(wmax|E(T )|L) = O(wmaxnL) time. 
Lemma 2. The upward entries Uv for all nodes v in T
can be computed in O(wmaxnL) time.
Proof. If v is a root, then the corresponding entries can
be compute in O(1) time. By Lemma 1, the downward
entries of D1v and D2v for all nodes v can be computed
 
 
行政院國科會補助專家學人出席國際學術會議報告     (格式) 
                                                                                    97 年 7 月 1 日  
報告人姓名 李佳衛 服務機構 及  職  稱 
國立成功大學 
資訊工程學系 
兼任助理 
時間會議地點 97 年 6 月 27 日~29 日
中國大連 
本會核定 
補助文號 
NSC 
95-2221-E-006-204-M
Y2 
會   議   名   稱 
(中文)  第十四屆計算及組合國際研討會 
(英文)  The 14th Annual International Computing and Combinatorics
Conference (COCOON’08) 
發表論文題目 
(中文)   
(英文)  Diagnosability of Two-Matching Composition Networks  
 
報告內容應包括下列各項: 
一、參加會議經過 
二、與會心得 
三、考察參觀活動(無是項活動者省略) 
四、建議 
五、攜回資料名稱及內容 
六、其他 
 
 
 
 
 
 
 
 
 1
口頭報告的時間；此外，也邀請了兩位國際知名學者來進行專題演講。
每一篇論文報告者都有二十五分鐘的時間來進行報告，而所有被接受
的論文，也都刊登於 Springer的Lecture Notes in Computer Science(LNCS 
5092)當中。 
會議的第一天，緊接在開場及致詞之後登場的是 Dr. Takao 
Nishizeki 的專題演講，其演講題目為「Partitioning Graphs of Supply and 
Demand: Generalization of Knapsack Problem」；接下來則是分為三個場
次，各有四篇論文的發表，主題分別為：「Network Optimization (I)」、
「Complexity」、「Computational Biology (I)」。而在下午的議程中，
分為兩個時段進行，每個時段亦都有三個場次，各有四篇論文同時進
行發表；下午六個場次的主題依序分別為：「Computational Biology 
(II)」、「Algorithms and Complexity」、「Algorithms and Data Structures」、
「Graph Algorithms and Bioinformatics」、「Wireless Networks」、
「Algorithmic Game and Cryptography」。 
第二天的行程是大連城市的觀光旅遊，主辦單位帶領與會者至大
連著名的旅遊聖地觀光；因為學生的報告被安排在第三天，所以學生
留在旅館繼續準備接下來的報告，而沒有參加這一個旅遊的行程。 
第三天早上首先登場的是 Dr. Der-Tsai Lee 的專題演講，其演講的
題目為「Optimal Randomized Algorithm for Density Selection Problem」；
接下來的議程分為三個場次，各有四篇論文進行發表，各場次的主題
分別為：「Network Optimization (II)」、「Computational Geometry」、
「Graph Theory and Algorithms」。下午的議程分為兩個時段，第一個
時段有兩個場次，各有四篇的論文發表，另一個時段則是有兩個場次，
各有五篇論文發表，場次的主題依序分別為：「Communication Networks 
and Optimization」、「Algorithms and Computability」、「Complexity and 
 3
    學生非常感謝國科會的補助，才能夠參加此次國際性會議，透過此
次參與國際學術會議的經驗，將對未來之研究有莫大之助益；因此像
這種大型的、且有代表性的國際會議應多鼓勵國內學者或研究生多多
參與，以提昇國際地位，並提高國內之研究水準。 
 
(五) 攜回資料名稱 
 
由 Springer-Verlag 所發行之研討會論文集 (Lecture Notes in 
Computer Science on Computational Science)一本： LNCS 5092 (indexed 
by SCI Expanded)。 
 
(六) 其他 
照片記錄：拍攝學生參加本次研討會發表論文時的照片。 
 
 5
Diagnosability of Two-Matching Composition Networks 479
the two given graphs, G1 and G2, with the same number of nodes by connect-
ing the nodes of G1 and G2 via two perfect matchings. We call G1 and G2 the
components of 2-MCN. Two well-known multiprocessor systems, such as folded
hypercubes and augmented cubes, belong to 2-MCNs. Then, we study the diag-
nosability of 2-MCNs. Our main result is the following: suppose that the number
of nodes in each component is at least t + 3 and both the order (which will be
deﬁned subsequently) and connectivity of each node in Gi is at least t, where
t ≥ 3. We prove that the diagnosability of 2-MCN constructed from G1 and G2
is t + 2 under the MM* model. In other words, the diagnosability of 2-MCNs
is increased by two as compared with those of the components. As a result, it
is possible to determine the diagnosability of many well-known and unknown,
but potentially useful, multiprocessor systems. By applying our result, we show
that the diagnosability of n-dimensional folded hypercubes and n-dimensional
augmented cubes are n + 1 and 2n − 1, respectively. The diagnosability of the
above multiprocessor systems, as far as we know, have not yet been resolved
until now.
The remainder of this paper is organized as follows: Section 2 introduces
some deﬁnitions and notations. In Section 3, we demonstrate the diagnosability
of 2-MCNs under the MM* model. In Section 4, we apply our result to folded
hypercubes and augmented cubes. Finally, Section 5 contains a discussion and
some concluding remarks.
2 Preliminaries
An undirected graph (graph for short) G = (V,E) is comprised of a node set V
and an edge set E, where V is a ﬁnite set and E is a subset of {(u, v)| (u, v) is
an unordered pair of V }. For an edge (u, v), we call u and v the end-nodes
of the edge. A subgraph of G = (V,E) is a graph (V ′, E′) such that V ′ ⊆ V
and E′ ⊆ E. Given U ⊆ V (G), the subgraph of G induced by U is deﬁned as
G[U ] = (U, {(u, v) ∈ E(G)| u, v ∈ U}), and let U¯ = V (G)−U . We also use V (G)
and E(G) to denote the node set and edge set of G, respectively. A multigraph
is like an undirected graph, but it can have multiple edges between its nodes
as well as self-loops. A multiprocessor system can be modelled as an undirected
graph G whose nodes represent processors and edges represent communication
links.
The node connectivity (connectivity for short) of a graph G, denoted by κ(G),
is the minimum size of a node set S such that G−S is disconnected or has only
one node. A graph G is t-connected if κ(G) ≥ t. A node cover of G is a subset
K ⊆ V (G) such that every edge of E(G) has at least one end node in K. The
node cover with the minimum cardinality is called a minimum node cover. Let V1
and V2 be two disjoint nonempty sets of V (G). The neighborhood set of V1 in V2 is
deﬁned as NG(V1, V2) = {v ∈ V2| ∃ a node u ∈ V1 such that (u, v) ∈ E(G)} and
NG(V1, V¯1) is reduced to NG(V1). Similarly, if u ∈ V (G) and V ′ ⊆ V (G) − {u},
then the neighborhood set of u in V ′ is deﬁned as NG(u, V ′) = {v ∈ V ′| (u, v) ∈
E(G)}. When V ′ = V (G) − u, NG(u, V ′) is reduced to NG(u). We also call
Diagnosability of Two-Matching Composition Networks 481
that the number of faults presented does not exceed t and the diagnosability of
G, denoted by d(G), refers to the maximum number of faulty nodes that can be
identiﬁed by the system. In other word, a system is t-diagnosable if and only if
each pair of distinct sets S1, S2 ⊆ V (G) with |S1|, |S2| ≤ t are distinguishable
and the diagnosability of G is max{t| G is t-diagnosable}.
Lemma 1. [18] For any S1, S2 ⊂ V (G) and S1 = S2, (S1, S2) is a distinguish-
able pair if and only if at least one of the following conditional is satisﬁed:
1. ∃ u,w ∈ V (G)−S1−S2 and ∃ v ∈ (S1−S2)
⋃
(S2−S1) such that (u, v)w ∈ L,
2. ∃ u, v ∈ S1 − S2 and ∃ w ∈ V (G) − S1 − S2 such that (u, v)w ∈ L, and
3. ∃ u, v ∈ S2 − S1 and ∃ w ∈ V (G) − S1 − S2 such that (u, v)w ∈ L.
Lemma 2. [18] A system G is t-diagnosable if and only if for each pair of sets
S1, S2 ⊂ V (G) such that S1 = S2 and |S1|, |S2| ≤ t, at least one of the conditions
of Lemma 1 is satisﬁed.
Lemma 3. Let G be a system with N nodes and S1, S2 ⊂ V (G) be two dis-
tinct sets with |S1|, |S2| ≤ t and |S1
⋂
S2| = p, where 0 ≤ p ≤ t − 1. If
|P (G,S1
⋃
S2)| > p, then (S1, S2) is a distinguishable pair.
Proof. Let M(V (G), L) be the comparison scheme of G. If |P (G,S1
⋃
S2)| > p,
then there must exist a node u ∈ P (G,S1
⋃
S2) such that u /∈ S1
⋂
S2. This
implies that u ∈ (S1 −S2)
⋃
(S2 −S1). By the deﬁnition of the probing set, there
exist two nodes v, w ∈ V (G) − (S1
⋃
S2) such that (u, v)w ∈ L, which satisﬁes
Condition 1 of Lemma 1. Therefore, (S1, S2) is a distinguishable pair. 
unionsq
Lemma 4. Let G = (V,E) be a connected graph. Suppose that each node in
G have an order of at least t, where t ≥ 0. If U ⊂ V with |U | ≤ t, then
P (G,U) = U .
Proof. Let u be a node in U . Since the order of u is at least t, the cardinality
of the minimum node cover in the comparison graph Gu = (Xu, Y u) is also at
least t. Clearly, U − {u} is not a node cover of Gu because |U − {u}| < t. This
implies that there exists an edge (w, v) in Y u such that w and v are both in U¯ .
Moreover, by the deﬁnition of the comparison graph, there exists a test (u, v)w
or (u,w)v. This implies that u ∈ P (G,U). Therefore, P (G,U) = U . 
unionsq
A matching in a graph G is a set of non-loop edges with no shared end-nodes.
The nodes incident to the edges of a matching M are saturated by M ; the others
are unsaturated. Two matchings are distinct if they have no common edge. A
perfect matching in a graph is a matching that saturates every node. The class
of Two-Matching Composition Networks is deﬁned as follows.
Suppose that G1 and G2 are two graphs with the same number of nodes. Let
PM be an arbitrary perfect matching between V (G1) and V (G2), i.e., PM is a
set of edges connecting V (G1) and V (G2) in a one-to-one fashion, and let PM2
be a set comprised of two arbitrary distinct perfect matchings between V (G1)
and V (G2). Then, the resulting graph constructed from G1 and G2 by connect-
ing V (G1) and V (G2) via PM2 is called a two-matching composition network,
Diagnosability of Two-Matching Composition Networks 483
Theorem 1. Let t ≥ 3 be a positive integer and let G1 and G2 be two graphs
with the same number of nodes N , where N ≥ t + 3. If each node in Gi has the
order at least t and κ(Gi) ≥ t for i = 1, 2, 2-MCN G(G1, G2;PM2) is (t + 2)-
diagnosable.
Proof. For convenience, let G = G(G1, G2;PM2). Let S1, S2 ⊂ V (G) be two
distinct sets with |S1|, |S2| ≤ t + 2 and let |S1
⋂
S2| = p, where 0 ≤ p ≤ t + 1.
Also, let SGi = V (Gi)
⋂
(S1
⋃
S2) for i = 1, 2 with |SG1 | = n1 and |SG2 | = n2.
Clearly, n1 + n2 = 2(t + 2) − p. Without loss of generality, we assume that
n1 ≤ n2. We have the following cases.
Case 1: n1 ≤ t and n2 ≤ t. By Lemma 4, P (G1, SG1) = SG1 and P (G2, SG2) =
SG2 . Then, |P (G,S1
⋃
S2)| ≥ |P (G1, SG1)|+ |P (G2, SG2)| = |SG1 |+ |SG2 | =
n1 + n2 = |S1
⋃
S2| > |S1
⋂
S2| = p. Therefore, by Lemma 3, (S1, S2) is a
distinguishable pair.
Case 2: n2 > t. We have the following scenarios.
Case 2.1: n1 < t.
Case 2.1.1: 0 ≤ p ≤ t or (p = t + 1 and n2 ≥ t + 2). By Lemma 4,
|P (G1, SG1)| = |SG1 | = n1. Moreover, since each node in SG2 is
connected to exactly two nodes in G1 (via PM2) and n2 > n1, SG2
contains a set R with |R| ≥ n2 − n1 such that each node in R is
connected to some node in V (G1) − SG1 . Let u ∈ R be an arbitrary
node and let w be a node in V (G1) − SG1 connected to u. Since
κ(G1) ≥ t and |SG1 | = n1 < t, G[V (G1) − SG1 ] is connected, which
implies that there is another node v ∈ V (G1)−SG1 connected to w.
Clearly, (u, v)w is a comparison. By combining the above arguments,
we have that |P (G,S1
⋃
S2)| ≥ |P (G1, SG1)| + (n2 − n1) = |SG1 | +
(n2 − n1) = n2 > t ≥ p. Therefore, by Lemma 3, (S1, S2) is a
distinguishable pair.
Case 2.1.2: p = t + 1 = n2. In this case, since n1 + n2 = 2(t + 2) − p,
n1 ≤ 2. Since n1 + n2 ≤ t + 3 and p = t + 1, there are at most two
nodes in (S1
⋃
S2)−(S1
⋂
S2), which leads to the following scenarios.
Case 2.1.2.1: |SG1 − (S1
⋂
S2)| ≥ 1. Let u be such a node in
SG1 −(S1
⋂
S2). Since n1 ≤ 2 and |NG1(u)| ≥ 3 because κ(G1) ≥
t ≥ 3, there exists a node w ∈ V (G1) − SG1 connected to u.
Moreover, because n1 ≤ 2 and κ(G1) ≥ t ≥ 3, G1[V (G1) −
SG1 ] is connected, which implies that there is another node v ∈
V (G1) − SG1 connected to w. Then, comparison (u, v)w satisﬁes
Condition 1 of Lemma 1. Therefore, (S1, S2) is a distinguishable
pair.
Case 2.1.2.2: |SG1 − (S1
⋂
S2)| = 0 and n1 = 2, which implies
that there are exactly two nodes in SG2 − (S1
⋂
S2). Let x and y
be two nodes in SG2 − (S1
⋂
S2). If x or y is connected to a node
in V (G1)−SG1 , then the result that (S1, S2) is a distinguishable
pair can be shown using a similar argument to that presented in
Case 2.1.2.1. Otherwise, x and y are connected to two nodes in
SG1 via PM2. Since n2 = |SG2 | = t + 1 and G2 is t-connected
Diagnosability of Two-Matching Composition Networks 485
this paper, we have established suﬃcient conditions that can be utilized to deter-
mine the diagnosability of 2-MCNs. Furthermore, using the established theorem,
we have successfully computed the diagnosability of folded hypercubes and aug-
mented cubes, which is previously unknown in the literature.
References
1. Araki, T., Shibata, Y.: Diagnosability of Butterﬂy Networks under the Comparison
Approach. IEICE Transactions on Fundamentals of Electronics Communications
and Computer Sciences E85-A(5), 1152–1160 (2002)
2. Araki, T., Shibata, Y.: (t, k)-Diagnosable System: a Generalization of the PMC
Models. IEEE Transactions on Computers 52(7), 971–975 (2003)
3. Armstrong, J.R., Gray, F.G.: Fault Diagnosis in a Boolean n Cube Array of Mul-
tiprocessors. IEEE Transactions on Computers 30(8), 587–590 (1981)
4. Chang, G.Y., Chang, G.J., Chen, G.H.: Diagnosabilities of Regular Networks. IEEE
Transactions on Parallel and Distributed Systems 16(4), 314–323 (2005)
5. Chang, G.Y., Chen, G.H., Chang, G.J.: (t, k)-Diagnosis for Matching Composition
Networks. IEEE Transactions on Computers 55(1), 88–92 (2006)
6. Chang, G.Y., Chen, G.H., Chang, G.J. (t, k)-Diagnosis for Matching Composition
Networks under the MM* Model. IEEE Transactions on Computers 56(1), 73–79
(2007)
7. Choudum, S.A., Sunitha, V.: Augmented Cubes. Networks 40(2), 71–84 (2002)
8. Chwa, K.Y., Hakimi, L.: On Fault Identiﬁcation in Diagnosable Systems. IEEE
Transactions on Computers 30(6), 414–422 (1981)
9. Das, A., Thulasiraman, K., Agarwal, V.K.: Diagnosis of t/(t+1)-Diagnosable Sys-
tems. SIAM Journal on Computing 23(5), 895–905 (1994)
10. EI-Amawy, A., Latiﬁ, S.: Properties and Performance of Folded Hypercubes. IEEE
Transactions on Parallel and Distributed Systems 2(1), 31–42 (1991)
11. Fan, J.: Diagnosability of the Mo¨bius Cubes. IEEE Transactions on Parallel and
Distributed Systems 9(9), 923–928 (1998)
12. Fan, J.: Diagnosability of Crossed Cubes under the Comparison Diagnosis Model.
IEEE Transactions on Parallel and Distributed Systems 13(7), 687–692 (2002)
13. Fan, J., Lin, X.: The t/k-Diagnosability of the BC Graphs. IEEE Transactions on
Computers 54(2), 176–184 (2005)
14. Kavianpour, A., Kim, K.H.: Diagnosability of Hypercubes under the Pessimistic
One-Step Diagnosis Strategy. IEEE Transactions on Computers 40(2), 232–237
(1991)
15. Lee, J.K., Butler, J.T.: A Characterization of t/s-Diagnosability and Sequential
t-Diagnosability in Designs. IEEE Transactions on Computers 39(10), 1298–1304
(1990)
16. Maeng, J., Malek, M.: A Comparison Connection Assignment for Self-diagnosis of
Multiprocessor Systems. In: Proceeding of the 11th International Symposium on
Fault-Tolerant Computing, pp. 173–175 (1981)
17. Preparata, F.P., Metze, G., Chien, R.T.: On the Connection Assignment Problem
of Diagnosable Systems. IEEE Transactions on Computers EC-16, 448–454 (1967)
18. Sengupta, A., Dahbura, A.: On Self-diagnosable Multiprocessor System: Diagnosis
by the Comparison Approach. IEEE Transactions on Computers 41(11), 1386–1396
(1992)
