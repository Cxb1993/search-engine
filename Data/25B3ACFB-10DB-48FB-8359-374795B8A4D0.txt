differences of spatial association rules before and after the database update.  However, if spatial 
association rule changes can be exploited, the discovery of significant changes can be provided more 
aids to decision makers. 
The idea behind mining the user’s perception is developed by using the fuzzy theory. In this paper, 
specific distance is turned into semantic terms, making the mined spatial association rules more 
comprehensible for the users. 
RELATED WORK 
Spatial Databases 
A spatial database stores various types for spatial data and non-spatial data and offers the capability 
of querying these data for access. It also provides spatial indexing and efficient algorithms for spatial 
join (Güting, 1994). There are many spatial relationships between spatial objects such as distance, 
direction and topology. They can be stated as follows. 
1. Topology 
Egenhofer (Egenhofer, 1991) proposed a 9-intersection model. This model contains eight topologies 
which are disjoint, meet, contains, overlap, equal, covers, covered-by and inside. 
2. Direction 
The relations “north of”, “west of”, and so on, of one spatial object to another can be easily obtained 
from x- and y- axes directions. Chang (Chang, 1991) used nine integers, 1, 2, 3, 4, 5, 6 , 7, 8 and 9, to 
denote the relative spatial relationships among objects.  Let the set of integers ranging from 1 to 9 
denote direction north, northwest, west, southwest, south, southeast, east, northeast, and at the same 
location, respectively. 
3. Distance 
The distance between two spatial objects can be measured by Euclidean distance. 
FP-Split Method 
FP-split method was proposed by Lee et al. (Lee et al., 2005). This method constructs FP-split tree 
by adopting the divide-and-conquer strategy by means of intersection and difference of itemsets.  
The construction of FP-split algorithm has three phases stated as follows. 
Phase 1: Scanning the database for generating equivalence class of each item  
Let ={iΨ 1, i2, …, in} , which is a set of all items in the transaction database D.  Let D={t1, t2,…, 
tm}.  The transaction record ti includes two parts.  The first part is the transaction identifier Tid, and 
the other is an associated itemsets I, where I⊂ Ψ .  The database is scanned the for generating the 
equivalence class of each item, where the equivalence class of item i be ECi={ Tid | Tid are the 
identifier of transaction ti}.  
Phase 2: Calculating support for filtering non-frequent items  
For generating frequent items, we have to calculate the support of each item.  Assume the support 
of item i is the amount of records that are in the ECi.  Then |ECi| is the support of equivalence class 
ECi.  The set of frequent items means that their supports are greater than the predefined minimum 
support.  After obtaining a set of frequent items, we sort these frequent items in descending order 
by their supports. 
Phase 3: Constructing FP-split tree using equivalence class of item 
FP-split tree employs tree structure to store the frequent items and to express the association among 
all frequent item.  The header table would be built before constructing FP-split tree.  Header table 
has two entries.  The first entry is to store the ordered frequent items, and the second entry is used 
to link the occurrence of the association item in the FP-split.  
There are five entries in one node of FP-split.  They are Content, List, Count, Link_sibling and 
Link_chlid.  The frequent item is to store in Content. ECi is stored in List. |ECi| is stored in Count.  
 2
K2, …,KM.  Three types of spatial relationships, including the distance, the direction and the 
topology between each pair of spatial objects, are also created.  Finally, all the identified spatial 
relationships are stored in the form of flat table.  If a recurrent spatial object is identified in one 
picture, the mark that stands for this spatial object will be underlined in order to be distinguished 
from other recurrent spatial objects under the same category. For example, there are n recurrent 
spatial objects in K1, and then these recurrent spatial objects will be marked as K11, K12, …,K1n. 
 
PHASE 2. Incremental Data Mining with Adjusted FSP-Split Tree 
Our research modifies the static mining method of FP-split (Lee, 2005) for incremental mining.  
FP-split is shown by Lee (Lee, 2005) to be efficient in exploiting frequent itemsets.  However, 
FP-split cannot exploit association rules in spatial databases.  Therefore, we enhance FP-split 
method to adapt to mining spatial databases.  Moreover, the proposed method is a data mining 
technique with incremental capability. 
The FP-split tree still serves as the basic structure, but the content stored in each node is changed 
into spatial pattern.  Therefore, the researcher renamed the FP-split tree with spatial pattern as 
Frequent Spatial Pattern split tree (FSP-split tree).  By adjusting the hierarchy order of nodes in 
FSP-split tree, as new data are added into the database, only these new data are scanned.  This 
avoids the need to scan the whole database again, saving time and cost as well.  
First, a scan is carried out over the spatial database to build Spatial Equivalence Class (SEC) of each 
spatial pattern. For example, we build SECi of spatial pattern i. The SECi contains a set of picture 
number(s) which the picture include the spatial pattern i.  
Before executing incremental data mining, the following information must be maintained. 
z The FSP-split tree built in last mining is marked as Tt. 
z Header Table that corresponds to Tt is marked as Ht. 
z SEC of non-frequent spatial patterns is marked as St. 
The purpose to keep these three items is to update them after the spatial database is altered. Hence 
the order of nodes on the FSP-split tree can be adjusted in accordance with the updated Ht+k. Without 
rebuilding the FSP-split tree, updated spatial association rules in the spatial database can be 
obtained. 
 
Incremental data mining includes three procedures described as follows. 
PROCEDURE 1. Adjust the hierarchical order of nodes on the FSP-split tree 
Two steps are required in the adjustment of FSP-split tree. 
Step (1). Remove non-frequent spatial pattern from FSP-split tree 
Remove nodes that are no longer non-frequent spatial pattern in the ordinary FSP-split tree.  If the 
removed node is x, the parent node of x is p[x], and child nodes of x are {c1[x], c2[x], …, cm[x]}. Then 
when x is removed, { c1[x], c2[x], …, cm[x]} become child nodes of p[x]. 
Step (2). Adjust the hierarchical order of nodes on the FSP-split tree 
New spatial data might alter the hierarchical order of frequent spatial pattern set.  Therefore it is 
necessary to adjust the order of nodes on the FSP-split tree in accordance with the updated frequent 
spatial pattern set.  While altering the order of two nodes on the FSP-split tree, considerations must 
be taken with the list field of both nodes.  Suppose node x appears in the lower hierarchy than its 
child (c1[x]) in the Header Table (Ht+k), there are four cases as follows. 
Case 1. If x and c1[x] have identical list contents and c1[x] has no child, then call SWAP (x, c1[x]) to 
alter the hierarchical order of both nodes (i.e., c1[x] becomes parent p[x] of x). 
Case 2. If x and c1[x] have identical list contents and c1[x] has child nodes {c1[c1[x]], c2[c1[x]], …, 
cm[c1[x]]}, then call SWAP (x, c1[x]) to exchange the hierarchical order of both nodes (i.e., c1[x] 
become parent p[x] of x and {c1[c1[x]], c2[c1[x]], …, cm[c1[x]]} become child nodes of x { c1[x], 
 4
1 1
1 1
1 2 0 0
0 0 0                   
min( , ) min( , )( ) ( )max( , ) max( , ) , ,
, ,
+ − + −⎧ × ×∑ ∑ ∑ ∑⎪⎪ × ≠= ⎨⎪⎪ = =⎩
iMi j jN N Mi j i j
ij ijp ij ijp
p pi j i j
ij ijij
ij ij
ij ij
N N M M
A X B Y
N N M M
if A and Bs Z Z
if A or B
≠
              (Ⅰ) 
Similarity measure is used to calculate the similarity between two rules.  When the value of 
similarity is 0, it means the two rules are not similar at all; when the value of similarity is 1, it means 
the two rules are identically similar. Hence the value of similarity is between 0 and 1. 
Given two spatial association rules and tir t kjr + , after calculating similarity measure between 
and by the formula (Ⅰ). Then we can know whether exists in the period of t+k. tir t kjr + tir
Maximum similarity can determine whether the spatial association rules mined in different periods 
of time are emerging pattern, added pattern, or perished pattern.  
Table 1. The content of symbols 
Symbols Definition 
ijs r r + Similarity measure, calculate the degree of similarity between and . ti jt k
ijδ  Difference measure, determine if andtir t kjr + are of unexpected patterns. 
tD  Spatial database at time t. 
t kD +  Over time k, spatial database at time t+k. 
tR  The set of spatial association rules at time t. 
t kR +  The set of spatial association rules at time t+k. 
t
ir  One of spatial association rules in , tR t tir R∈ . 
t k
jr +  One of spatial association rules in t kR + , t k t kjr R+ +∈ . 
iN  Number of spatial pattern in condition part of . tir
jN  Number of spatial pattern in condition part of t kjr + .  
iM  Number of spatial pattern in consequent part of . tir
jM  Number of spatial pattern in consequent part of t kjr + . 
ijA  
0, if the spatial object in the condition part of rule is different from the one of 
rule ;1, otherwise. 
t
ir
t k
jr +
ijB  
0, if the spatial object in the consequent part of rule is different from the one 
of rule ;1, otherwise. 
t
ir
t k
jr +
ijpX  
0, if the values of three spatial relationships in the condition part of rule is 
different from the one of rule
t
ir
t k
jr + , where { }11 2, ,..., ijp Z∈ ;1, otherwise. 
ijpY  
0, if the values of three spatial relationships in the consequent part of rule is 
different from the one of rule
t
ir
t k
jr + , where { }1ij1 2, ,...,p Z∈ ;1, otherwise.  
1
ijZ  Number of the spatial relationships in the condition part of and . ti jr r +t k
2
ijZ  Number of the spatial relationships in the consequent part of and . tir t kjr +
t
iS  Maximum similarity measure. 
 
The Maximum similarity measure formula is as follows,  ( )1 2max , ,...,=t t ti i iS s s tijs .                                              (Ⅱ) 
If the maximum similarity value of  is 1, it means the rule exists simultaneous in both t and t+k 
periods, indicating an emerging pattern.  If the value of  is between 0 and 1, it means the two 
spatial association rules are partly similar. If both maximum similarity and difference of spatial 
association rules are 0, it can be judged that the two spatial association rules are either added pattern 
or perished pattern. 
t
ir
t
iS
 
2. Difference Measure 
 6
