 
網路資源鏈結塑模使用 UML profile 之研究與實作 
 
Studing and implementing a UML profile for Web Resources Linking Modeling 
 
 
 
摘要 
XML 鏈結語言 (XML Linking Language，
簡稱 XLink)是描述網路資源間的鏈結關連
性，進而提供給網際網路上各式應用來參
考使用。就軟體工程的角度來看，發展一
個系統化的 XLink 塑模環境是很重要的，
但現存的XML 編輯器並無法提供XLink 概
念塑模的環境，這導致 XLink 的應用變得
無效率、高維護費與低再使用率。統一塑
模語言(Unified Modeling Language，簡
稱 UML) 是一般化目的的塑模語言被廣泛
使用在各類應用領域，但 UML 並無法提供
客製化元素給特定的應用領域，像說 XLink 
的鏈結模型。為了處理上述的問題，我們
發展一個 UML profile，稱為 XLinkUML 
proflie，能在模型驅動架構(Model Driven 
Architecture，簡稱 MDA)下提供 XLink 塑
模功能。  XLinkUML proflie 是採用
profile 方式來擴充 UML，使得 UML 能透
過概念化呈現出 XLink 的架構模式，這允
許 XLink 所描述的資源鏈結模型可使用軟
體工程的塑模方式來建立。 
 
關鍵詞：統一塑模語言、可擴展標示語言、
可擴展鏈結語言、模型驅動架構 
 
Abstract 
The XML Link Language (XLink) is a W3C 
recommendation for describing the 
relationships among Web resources. The 
XLink provides a linking framework, 
including link behavior model, extended link, 
linkbase and conceptual role, to facilitate 
linking metadata generations.  Considering 
XLink from a software engineering point of 
view, a visualized approach for XLink 
modeling is crucial. Current XML editors, 
however, can not provide a conceptual 
modelling for XLink. This leads to inefficient 
development processes and a low potential 
for reuse. The Unified Modeling Language 
(UML) is a general-purpose modeling 
language that may be used in a wide range of 
application domains. However, UML often 
lacks of elements to model and represent 
concrete concepts of specifics domains, such 
as XLink modeling. To address the above 
issues, this study presents a UML profile, 
called XLinkUML profile, for modeling 
XLink. The XLinkUML profile is an 
extension to UML using the profile 
mechanism for XLink modeling that provides 
the relevant structural properties of XLink to 
be represented at conceptual level. 
 
Keyword: XLink, XML, UML, MDA 
 
1. Introduction 
The masses of contents available on the 
World-Wide Web raise a challenging task 
over the effective use. The web is largely 
unstructured, together with pages authored 
by many people on a diverse range of topics, 
to make simple browsing too time consuming 
to be practical. The XML Link Language 
(XLink) [1], which is a W3C [2] 
recommendation for describing the 
relationships among Web resources, is a 
useful solution to this problem. XLink 
provides an extendable linking model to 
enhance the structure and quality of content 
in the WWW, hence increasing the value of 
linking information. Considering XLink from 
a software engineering point of view, a 
visualized approach for XLink modelling is 
crucial. Current XML editors can not provide 
a conceptual modelling for XLink. This leads 
to inefficient development processes and a 
low potential for reuse. In order to bring 
XLink modeling closer to wider practitioners' 
population, this study proposes usage of 
software engineering techniques, especially 
the Unified Modeling Language (UML) [3] 
since it is the most accepted software 
engineering standard. However, UML often 
lacks elements to model and represent 
concrete concepts of specifics domains, such 
․Uid denotes an unique identifier of 
resource owner; 
․AWR denotes a list of resource attributes. 
Resources are Web-accessible entities, such 
as Web pages, pictures, programs, devices, 
hosts, Web Services, etc. They are distributed 
in the Internet and identified by URI. 
 
Definition 2. (Extended Link) An extended 
link of XLink is a tuple EL=<La, Lo, Ra, In, 
Ou, Tp, Ar>, where:  
․La denotes a set of remote Web resources 
representing Locator in XLink. La⊂ WR. 
․Lo denotes a set of local Web resources 
representing Local Resource in XLink. Lo⊂ 
WR. 
․Ra denotes a role attribute that describes 
the meanings or abstract concepts of Web 
resources. 
․In denotes a set of arcs representing 
inbound in XLink.  
․Ou denotes a set of arcs representing 
outbound in XLink.  
․Tp denotes a set of arcs representing 
third-party in XLink.  
․Ar denotes an arcrole attribute that 
describes the meanings or abstract concepts 
of relationship between Web resources. 
 
Figure 1 shows the abstract concepts of 
XLink framework that represents the XLink 
metamodel. Information about how to 
traverse a pair of resources, including the 
direction of traversal and possibly application 
behavior information as well, is called an arc. 
Extended links provide full XLink functional 
features, such as inbound and third-party arcs, 
as well as links with an arbitrary number of 
participating resources. XLink classifies Web 
resources as Locators (i.e. remote resources) 
and Local Resources. Extended links can be 
expressed using directed graphs, in which the 
link participants are the nodes, and the arcs 
represent the directed edges. Consequently, 
the link structure can be fairly complex, and 
can include elements pointing to remote 
resources, containing local resources and 
specifying arc traversal rules. An arc with a 
local ending resource and a remote starting 
resource is said to be inbound. Conversely, 
an arc with a remote ending resource and a 
local starting resource is said to be outbound. 
If neither the starting resource nor the ending 
resource is local, then the arc is a third-party 
link. 
 
 
 
 
Figure 1. XLink framework 
 
Definition 3. (Simple Link) A simple link of 
XLink is a tuple EL=<La, Ra, Ou, Ar>. 
A simple link is a link with exactly two 
participating resources - a local starting 
resource and a remote ending resource. It is a 
restricted subset of an extended link with a 
slightly different syntax. An extended link 
offers full XLink functionality, whereas 
simple Links offer less functionality, have no 
internal structure, and only support outbound 
arcs. 
 
Definition 4. (linkbase) A linkbase LB∈X is 
a tuple LB=<ELs, ALB>, where 
․ELs denotes a set of extended links EL. 
․ALB denotes a list of linkbase attributes. 
XLink provides the definition of link 
repositories, called linkbase. linkbase is often 
used to make link management easier by 
gathering together a number of extended 
links. A linkbase is an XML document 
containing a set of inbound and third-party 
links. 
 
4. A UML profile for XLink 
The formal definitions of XLink 
framework are described in Section 3, which 
presented a UML profile, called XLinkUML 
profile, based on the XLink framework. The 
profile provides a standard means for 
<<simpleLink>> Artifact A simple link is a link with exactly two participating 
resources, including a local starting resource and a 
remote ending resource. 
<<extendedLink>> Artifact An Extended link offers full XLink functionality, such 
as inbound and third-party arcs, as well as links that 
have arbitrary numbers of participating resources. 
<<linkbase>> Artifact A linkbase is a XML document that is composed of 
extended links. 
<<hyperlink>> Artifact A hyperlink is a link that is intended primarily for 
presentation to a human user. 
Table 1. UML to XLink Mapping 
 
 Resource Architecture 
The resource architecture supports 
modelling of resource, local resource, remote 
resource and entity, as shown in Figure 3. 
The <<resource>> stereotype, which denotes 
the Resource in the XLink framework  
(refer to Definition 1), can be applied to all 
UML model classes, which are instances of 
the Class metaclass.   The Component 
metaclass is extended to support the 
<<entity>> stereotype, which is a persistent 
information component representing a 
physical concept. The persistent information 
is a remote resource participating in an 
extended link. <<localResource>> and 
<<locator>> are subclasses of <<resource>>. 
The former corresponds to the local resource 
of XLink, while the latter corresponds to the 
remote resource. <<inbound>>, 
<<outbound>> and <<thirdParty>> are 
instances of the AssociationClass metaclass 
described in the following section.  
The tags of the <<resource>> stereotype 
are presented as follows: 
1. The label tag is used to identify a 
resource. 
2. The title tag is used to describe the title of 
a resource. 
3. The role tag is used to indicate a 
characteristic of the resource. 
 
 
 
Figure 3. Resource modeling of XLink 
 
  
4.3 Link Architecture 
The link architecture supports modelling 
of XLink framework, as shown in Figure 5. 
An XML-based document is represented by 
the <<XMLDocument>> stereotype, which 
extends the Artifact metaclass. The linkbase, 
simple link, and extended link in the XLink 
framework are represented by the stereotypes 
<<linkbase>>, <<simpleLink>> and 
<<extendedLink>, respectively. The linkbase, 
extended link and simple link are all 
XML-based components that are related to 
XMLDocument class through the 
<<create>>, <<embed>> and <<embed>> 
associations, respectively. The simpleLink is 
a subclass of hyperlink. An extendedLink is 
composed of title, arc and resource. 
 
 
Figure 5. Extended Link modeling of XLink 
 
 
5. Using the XLinkUML Profile 
This section presents an example of 
XLink model using the proposed XLinkUML 
profile. The example is explained in detail, 
and helps the reader better understand the 
XLinkUML profile and how it can be 
adopted. The example in Figure 6 shows a 
student’s semester plan containing link 
relationship information about the resources 
“student”, “subject“ and “course”. Each 
semester plan is owned by a student. The 
student specifies the subjects in which is 
interested, and takes the courses that cover 
exactly his chosen subjects. 
The semesterPlan class represents a 
student’s semester plan, and is stereotyped 
with <<extendedLink>>, which associates an 
arbitrary number of resources. Each 
participating resource is restricted to just one 
student, and at least one subject and course. 
The student class and course class are both 
stereotyped with <<locator>>, which 
represents remote resources. The subject 
class is stereotyped with <<localResource>>, 
which represents a local resource in the 
extended link. The “take” association (with 
<<thirdParty>> stereotype) is from student 
class (with <<locator>> stereotype) to course 
class (also with <<locator>> stereotype). The 
“interest” association (with <<inbound>> 
2.0.  2008  [cited 10 July 2009]; 
Available from: 
http://www.omg.org/technology/docu
ments/formal/MOF_Core.htm. 
7. Inc., O.M.G.O. Meta-Object 
Facility (MOF).  2008  [cited 10 
July 2009]; Available from: 
http://www.omg.org/mof/. 
8. Inc., O.M.G.O. Common 
Warehouse Metamodel™ (CWM™) 
Specification, v1.1.  2003  [cited 10 
July 2009]; Available from: 
http://www.omg.org/technology/docu
ments/formal/cwm.htm.. 
9. Ricardo Soto De Giorgis, 
M.C.a.J., Towards a UML Profile for 
Modeling WAP Applications. 2005. 
5(4): p. 250-256. 
10. Lidia Fuentes, J.M.T., 
Antonio Vallecillo, Using UML 
Profiles for DocumentingWeb-Based 
Application Frameworks. Annals of 
Software Engineering, 2002. 13: p. 
249-264. 
11. Marcos López Sanz, 
C.J.A., Carlos E. Cuesta, Esperanza 
Marcos, UML Profile for the Platform 
Independent Modelling of 
Service-Oriented Architectures, in 
Software Architecture, First European 
Conference, F. Oquendo, Editor. 2007, 
Springer Aranjuez, Spain. p. 304-307. 
12. S. Fatemeh Alavizaedh, 
A.H.N., ReUML: a UML Profile for 
Modeling and Verification of Reactive 
Systems, in International Conference 
on Software Engineering 
Advances(2007, IEEE Computer 
Society. 
13. Mohd Syazwan Abdullah, 
I.B., Richard F. Paige, Chris Kimble, 
A UML Profile for Knowledge-Based 
Systems Modelling, in International 
Conference on Conceptual Modeling, 
K.-D.S. Christine Parent, Veda C. 
Storey, Bernhard Thalheim Editor. 
2007, Springer: Auckland, New 
Zealand. p. 438-453. 
14. César J. Acuña, E.M., 
Modeling Semantic Web Services: A 
Case Study, in Proceedings of the 6th 
International Conference on Web 
Engineering, N.C. David Wolber, 
Christopher H. Brooks, Athula Ginige, 
Editor. 2006, ACM: Palo Alto, 
California, USA. p. 32-39. 
15. Torsten Fink, M.K., Karl 
Pauls, An MDA approach to Access 
Control Specifications Using MOF 
and UML Profiles. Electronic Notes 
in Theoretical Computer Science, 
2006. 142: p. 161-179. 
16. Koch, N., 
Transformations Techniques in the 
Model-Driven Development Process 
of UWE, in Model-Driven Web 
Engineering. 2006: Palo Alto. 
17. TopicMaps.Org. XML 
Topic Maps (XTM) 1.0.  2001  
[cited 10 July 2009]; Available from: 
http://topicmaps.org/xtm/. 
18. Blankenhorn Kai, J.M., A 
UML Profile for GUI Layout. NODe 
2004, LNCS 3263, Springer-Verlag, 
Berlin Heidelberg 2004., 2004: p. 
110-121. 
19. N. Moreno, P.F., A. 
Vallecillo, WebML Modelling in UML. 
IET Software, 2007. 1(3): p. 67-80. 
20. StarUML- The Open 
Source for UML/MDA Platform.   
[cited 10 July 2009]; Available from: 
http://staruml.sourceforge.net/en/. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
