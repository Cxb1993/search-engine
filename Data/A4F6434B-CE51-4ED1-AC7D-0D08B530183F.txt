Toward a Ubiquitous Personalized Daily-Life Activity Recommendation
Service with Contextual Information: A Services Science Perspective
Abstract
In recent years Services Science has been an
emerging discipline that aims to promote service
innovation and increase service productivity by
aligning scientific, management, and engineering
perspectives. It emphasizes that service innovation
should be able to create value for both services
providers and consumers. To realize the core thinking
of services science, that is, high value and high
productivity, service design has to incorporate many
factors into its consideration. Based on the ideas of
this new research field, we develop a personalized
daily-life activity recommendation service that
includes information behavior, business value, and
technology architecture as our service design
considerations. Our service can be requested under a
ubiquitous environment and include users’ contextual 
information which is an important factor in
information behavior. With regard to IT architecture,
we use the service-oriented architecture (SOA) that
provides the flexibility and extensiveness of
technology as well as permit new innovative services
to be easily added.
.
1. Introduction
The development and application of Internet and
information technology grew rapidly during the past
few decades. In the meanwhile, the openness and
flexibility of IT capability are also growing quickly.
The role of information technology has been
transformed from a supporting position to a driving
one and will continue to progress to the production of
a new business model. This kind of progress provides
a lot of opportunities for various services to spring up.
Traditionally, most IT applications or services were
designed from the technology perspective, without
integrating other important viewpoints, such as human
behavior, business values, culture, and so on [20, 22].
Nowadays, globalization and a highly competitive
environment have pushed organizations to reconsider
their business values from different aspects and to
strive for service innovation in order to gain a new
competitive advantage. Many organizations have
transformed their perspectives, and now view IT as
services rather than as supporters. Take Software as a
Service (SaaS) for example, it is a software
application delivery model where companies provide
their software functions through networks [1].
Customers pay for using these functions rather than
owning them. Following this trend of innovation,
Services Science has emerged from the demand for
service innovation, and emphasizes the combination
of social science, business management, and technical
engineering concepts [6, 20, 22].
With the advent of the ubiquitous age, various
kinds of communication devices, as well as the related
application services, are developing with surprising
speed. IT architecture can be designed as an open
platform that can be accessed from any device,
anytime, and from anywhere. The IT capability also
now makes it possible to provide “personalized
services”and not remain limited to the classical“mass
services”[1, 18]. The aim of service is to deliver
service experience and consumer satisfaction that
require human involvement and are therefore highly
related to human feelings. Therefore, the economic
value of services is greatly dependent on human
factors [13]. According to the information behavior
theory, the context might influence the human
perception of information; that is, information seeking
behavior is affected by the human-in-context factor
[11]. In marketing, research on customer decision
making behavior has evinced a similar opinion that the
same customer may have different preferences or
make different decisions under different contexts [5,
14]. Consequently, the design of recommendation
service should incorporate the human-in-context
factor into its consideration. In this paper, we develop
a personalized recommendation service called Daily-
Life Activity Assistant (DLAA) from the services
science perspective. Our recommendation service
takes users’ contextual information and flexible
technology architecture into consideration and can be
requested under a ubiquitous environment. By using
the flexible concept hierarchy and dynamic clustering
method, we provide a dynamic recommendation
service highly related to the users’ information 
Proceedings of Hawaii International Conference on System Sciences (HICSS–41)
Hawaii, Jan 7-10, 2008
products/services design, business process,
organization structure, and so on.
2.3 Information Behavior
During the past decade, information science
communities have gradually paid greater attention to
information behavior when designing application
systems. Traditional application system designs are
usually system-centered and exclude the information
behavior factor. Until recently, more and more
applications have transformed into user-centered
approaches to match the users’behavior model. The
major conceptual developments in information
behavior have made a similar paradigm shift from
system-centered to user-centered, since the 1980s. The
increase of conceptual development and research in
information behavior can not be ignored. The
concepts developed by Dervin and Wilson are the
ones frequently discussed and in use [11].
Dervin proposed the sense-making approach in
1976; the central idea of sense-making is determining
“how people make sense of their world”. The core
elements of sense-making are: situation, gap/bridge,
and outcome. Situation defines the context in which
information needs arise; i.e., sense-making and sense-
unmaking by humans involve a constant journey
through time and space. Gap identifies the difference
between the contextual situation and the desired
situation. Outcome is the result of the person’s
experience of the world, i.e., the consequences of the
sense-making process. Bridge is the medium that
decreases the gap between situation and outcome. To
some extent, sense-making can be defined as the
process of creating situation awareness in situations of
uncertainty [11].
Wilson developed an information seeking behavior
model in 1981 that included the influence of an
individual’s physiological,cognitive and effective
needs. He then proposed an integrative model of
information need, information seeking behavior and
information use in 1994. This model also claims that
human’s information seeking behavior is also
influenced by the context of an information need
arising out of a situation related to the person’s 
environment, social roles and individual
characteristics. The context might affect human
perception of barriers to information seeking. Wilson
modified the model in 1999 and placed Elis’ list of
characteristics into his information seeking behavior
model [11].
From the information behavior aspects mentioned
above, we can find that the human perceptions of
information behavior are affected by the context
where they are situated [10, 11, 17]. This kind of
perception might influence users’satisfaction of
information service quality. In our ubiquitous
personalized daily-life activity recommendation
service, we take context as an important service
design factor.
2.4 Personalized Recommendation Service
Personalized recommendation service aims to
provide products, content, and services tailored to
individuals, satisfying their needs in a given context
based on knowledge of their preferences and behavior
[4]. The personalized services are usually realized by
the form of recommender systems. Recommender
systems appeared as an independent research field in
the mid-1990s [3]. They help users deal with
information overload by providing personalized
recommendations related to products, content, and
services, usually accomplished by the use of personal
profile information and item attributes. In the past
decade, most works focused on modifying algorithms
for greater effectiveness and correct recommendations
[2]. They used methods from disciplines such as
human-computer interaction, statistics, data mining,
machine learning, and information retrieval [3, 4].
Recommender systems can be classified into three
types according to how recommendations are made [3,
4]:
(1) Content-based Recommendation
It recommends items to users that are similar to
those they preferred previously. The analysis of
similarity is based on the items’ atributes.
(2) Collaborative Recommendation
It recommends items to users according to the
item ratings of other people who have
characteristics similar to their own. The analysis
of similarity is based on the users’ tastes and 
preferences.
(3) Hybrid Recommendation
It is a combination of content-based and
collaborative recommendations.
Traditionally, recommender systems usually
compute the similarity using two-dimensional user-
item information under an e-commerce environment.
They failed to take into consideration contextual
information which might affect decision making
behavior, such as time, location, companions, weather,
and so on. According to information behavior theory,
the context of information needs is an important factor
of information seeking behavior [10, 11, 17].
Including human-in-context information as one system
design factor is necessary for producing more accurate
recommendations.
Herlocker and Konstan successfully introduced
additional information in the traditional
recommendation methods [2]. They included task
information in recommender system design and
meanwhile, service brokers maintain the service
registry that acts as a service directory listing. Service
consumers can look up the services in the registry and
invoke the service by sending messages that meet the
service contract format.
SOA can construct loosely coupled relationships
for the interacting parties so that service providers can
independently create and control each component of
the IT environment. In our design, DLAA is a daily-
life activity recommendation service that can provide
service under a ubiquitous environment. It is an
assistant/agent of many possible kinds of services that
can be used any time and anywhere by any access
device. Any new innovative service for a ubiquitous
environment can be implemented as another
assistant/agent and integrated into our architecture to
provide services.
3.2 Multiple Dimensions and Concept
Hierarchy
In DLAA, we use the multidimensional model
proposed by Adomavicius and Tuzhilin to store the
information related to user, item, and context factors,
where each factor can be represented as a concept
hierarchy. Generally speaking, dimensions represent
the recommendation space in a recommender system.
Most classical recommender systems operate in the
two-dimensional ItemUser space and the rating
value of each user-item pair can be expressed as a
rating function: RatingsItemUserR ： . According
to the multidimensional recommendation model (MD
model), the recommendation space can not be limited
to only two dimensions. By extending the concept of
data warehousing and OLAP application in databases,
the multidimensional method provides us with the
ability to incorporate more factors into consideration
while making recommendations, such as time, location,
companions, and so on [2]. In DLAA, we use time,
location, weather, and companions as our contextual
information dimensions, and the recommendation
space is defined as:
CompanionWeatherLocationTimeActivityUserS 
In the MD model, a dimension
iD is the Cartesian
product of attributes and can be expressed as
ij2i1ii AAAD  ... . Each attribute ijA defines a set of
attribute values of one particular dimension. For
example, the User dimension is defined as:
User Name Age Gender IsMarried    . Similarly, the
Location dimension is defined as:
.Location Country City Place   The attributes
describing a dimension
iD sometimes is called a
profile, such as user profile, time profile, and location
profile. For each dimension, the attributes can be
represented as a concept hierarchy which consists of
several levels of concepts. The top-down view of a
concept hierarchy is organized from generalization to
specialization; i.e., the higher the layer, the more
generalized the layer. Take Time for example, its
concept hierarchy can be expressed as Figure 2.
Given dimensions:
nDDD ...,,, 21 , r a t ings a r e
t he r a t ing do ma in whic h re pre se nt s the se t
o f a l l po ss ib l e r a t ing va lue s unde r t he
r e c o mmend at ion spa c e
nDDD  ...21 . T he
ra t ing func t i on R i s d ef i ne d a s :
RatingsDDDR n  ...21： . Based on the
recommendation space:
CompanionWeatherLocationTimeActivityUser 
our rating prediction function R(u,a,t,l,w,c) specifies
how much user u likes activity a, accompanied by c at
location l and time t under weather w, where
, , , ,u User a Activity t Time l Location w Weather    
, and .c Companion The ratings are stored in a
multidimensional cube and the recommendation
problem is to select the maximum or top-N ratings of
R(u,a,t,l,w,c).
Figure 2. Time Concept Hierarchy
3.3 Reduction-Based Approach and Rating
Estimation
The computation of recommendations grows
exponentially with the number of dimensions. The
reduction-based approach can reduce the
multidimensional recommendation space to the
traditional two-dimensional recommendation space by
fixing the values of context dimensions, and improve
the scalability problem [2, 9]. Assume that
:DUser Activity TimeR U A T rating     is a three-dimensional
rating estimation function supporting time and D
contains the user-specified rating records (user,
activity, time, rating). It can be expressed as a two-
dimensional rating estimation function:
( , , ) ,u a t U A T    [ ]( , , )( , , ) ( , )D D Time t User Activity RatingUser Activity Time User ActivityR u a t R u a   ,
where D[Time=t](User, Activity, Rating) is a set of
database and then calculates the similarity of users by
activity type. The reason why we use activity type to
cluster users is to avoid the over-sparseness problem.
We assume that users of similar activity type are
somewhat similar, and estimate their similarity using
the function: ( , ) cos( , )sim A B A B A B A B    . Then, the
module produces a set of users similar to the present
user, based on the center-based neighborhood manner.
 Learning Module
This module acts as a feedback learning
mechanism. DLAA defines a rating threshold which is
3 and gradually modifies a user’s profile by excluding
the activity pattern that the user had given a rating
below the threshold.
 Rule-Based Filter Module
In DLAA, we propose a warm up mechanism to
avoid the cold-start problem. Via this mechanism, we
collect users’data related to their profile and ratings.
However, some users might provide unreasonable
ratings to DLAA, such as eating breakfast at night.
The rule-based filter module defines some rules to
avoid inaccurate recommendations caused by ‘dirty’
data. This module will exclude the activities that
should not be recommended in some specific context.
 Multi-Dim Recommendation Module
The recommendation module deals with the rating
estimation according to the similar users set derived
from the clustering module. If the number of users in
the set is greater than 3, the module finds “Common
rated activities”to re-compute the similarity of the
users set. Otherwise, the module uses original
similarity derived from the clustering module because
of data sparseness. Then, we calculate target user u
and similar user’s (u’) average rating of each type,
where
1
( ) 1 ( , )
xD
ss
r u x r u a  and 1( ) 1 ( , )xD ssr u x r u a   .
Finally, the recommendation module predicts the
target activity’s (a) rating by adopting users’
similarity as the weighting factor and excluding the
users’differences by normalizing the rating. The
rating function is defined as:
'
( , ) ( ) ( , ') [ ( ', ) ( ')]D D D D
u U
r u a r u y sim u u r u a r u    , where
'
1 ( , ')
u U
y sim u u  is the normalizing factor.
The rating estimation method mentioned above is
the default method we used in DLAA whereby the
recommendations are made according to the whole
data in our database. Based on the collective concept
of Web 2.0, DLAA provides another rating estimation
method that users can provide the constraint to include
only some parts of data in the database as their
recommendations base rather than the whole database.
In DLAA, users can construct their own peer groups
similar to the idea of web2.0 community. If users
choose the demography or peer group method when
searching for recommendation service in DLAA, they
can set up the demographic characteristics or pick the
peer group as the rule by which to filter the database.
Then, DLAA gets a new similar user set as its rating
estimation foundation. The Multi-Dim
Recommendation Module will use the same rating
function defined above to predict ratings and give
recommendations based on the limited data that the
user had selected. This kind of choice for users
provides some trustworthiness for our
recommendations to some extent. The concept of this
method is shown in Figure 5.
Figure 5. Peer group based rating estimation
4. Evaluation
The DLAA is a type of recommender system that
includes the multidimensional concept under a
ubiquitous environment. It can be evaluated using
methods employed by other recommender systems.
There are many types of accuracy metrics for
evaluating the quality of a recommender system. In
this paper, we use predictive accuracy metrics to
examine the prediction accuracy of recommendations
in DLAA. Predictive accuracy metrics are usually
used to evaluate the system by comparing the
recommender system’s predicted ratings against the
actual user ratings. Generally, Mean Absolute Error
(MAE) is a frequently used measure for calculating
the average absolute difference between a predicted
rating and the actual rating. In addition, Normalized
Mean Absolute Error (NMAE) represents the
normalization of MAE which can balance the range of
rating values, and can be used to compare the
prediction results from different datasets. According
to related research, the predictive accuracy of a
recommender system will be acceptable when the
results were evaluated by the rate of adoption and the
over-estimation/under-estimation Z-test of users’
ratings.
4.2 Results
The Minimum Neighborhood Size
Neighborhood size indicates a number of grouped
users and the size is used in the rating prediction to
make a collaborative recommendation. The setting of
the neighborhood size affects the accuracy of the
rating prediction and of the system performance. A
small neighborhood size will reduce the accuracy of
the prediction. However, a large neighborhood size
will lower the recommender system performance. We
conducted two phase minimum neighborhood size
experimental analyses using the pre-data from stage 1
and the experimental data from stage 3. Figure 8
shows the NMAE improved when neighborhood size
increased. The NMAE has no significant improvement
however when the neighborhood size is greater than
50. According to this finding, the neighborhood size
of DLAA was set at 50. We also found that the
NMAE of phase 2 greatly improved after including
experimental data from real participants.
Figure 8. Minimum neighborhood size
The Accumulated Number of Ratings
Many recommender systems have a cold-start
problem and it is reasonable to assume that the
NMAE will reduce as the accumulated number of
ratings increases. We analyzed the relationship
between the accumulated number of ratings and
NMAE. In stage 2 of our experiment, we got 222
ratings from 33 participants who completed the
experiment. Excluding the 6 unsatisfied
recommendations, we divided 216 ratings into four
parts. Figure 9 shows the NMAE decreases gradually
while the accumulated number of ratings increases. In
the meanwhile, we find that the NMAE improved by
2% with outlier data removed.
Figure 9. Accumulated number of ratings
The Rate of Adoption
In our experiment, participants rated
recommendations provided by DLAA on a 1-10 scale.
We divided the scale into three large groupings: 1-4
represents moderately acceptable, 5-7 represents
acceptable, and 8-10 represents satisfied. The rate of
adoption of our recommendations shows in Table 1.
The percentage of acceptable recommendations for
the DLAA is 92%.
Table 1. The rate of adoption of DLAA
Participant Ratings Numbers Percentages
Unsatisfied 6 3 %
Moderately Acceptable 12 5 %
Acceptable 72 32 %
Satisfied 132 60 %
User Satisfactions
A recommender system over-estimates the rating if
the predicted rating is higher than the real rating
provided by a user. Adversely, the recommender
system under-estimates the rating when the predicted
rating is lower than the real rating. Users will be
satisfied with the recommendations while the over-
estimation/under-estimation is not obviously
significant. We conducted a Z-test using a 0.05
significance level to examine if the over-
estimation/under-estimation was significant. The
result of Z-value=1.36559 shows our null hypothesis
can’t be rejected, which means there are no significant
differences between the predicted ratings and real
ratings.
5. Conclusion and Future Works
“Services Science is an emerging discipline that
focuses on fundamental science, models, theories and
applications to drive innovation, competition, and
quality of life through service(s)” [7]. SSME
advocates service innovation and high service
productivity to create organizational core competitive
advantages. It claims that service design should be
[17] Petigrew, K.E., Fidel, R., and Bruce, H. “Conceptual 
frameworks in information behavior,” Annual Review of
Informtion Science and Technology (ARIST) (35), 2001,
pp. 43-78.
[18] Rust, R., T., and Miu, C. “What Academic Research 
Tels Us about Service,” CACM (49:7), 2006, pp. 49-54.
[19] Sarwar, B., Karypis, G., Konstan, J., A., and Riedl, J.
“Application of Dimensionality Reduction in 
Recommender Systems—a Case Study,” in Proceedings
of the ACM WebKDD Workshop, 2000.
[20]Sheth, A., Verma, K., and Gomadam, K. “Semantics to 
Energize the Ful Services Spectrum,” Communications
of the ACM (49:7), 2006, pp. 55-61.
[21] Spohrer, J., and Maglio, P., P. “The Emergence of 
Service Science: Toward Systematic Service
Innovations to Accelerate Co-Creation of Value,” IBM 
Almaden Research Center.
[22] Spohrer, J., and Riecken, D. “Services Science:
Introduction,” C ACM (49:7), 2006, pp. 30-32.
