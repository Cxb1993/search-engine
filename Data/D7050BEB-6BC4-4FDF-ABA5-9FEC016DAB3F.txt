 1
The Paired Many-to-Many Pickup and Delivery Problem: 
An Application of Library Vehicle Routing 
 
 
1. Introduction 
This paper describes a variation of pickup and delivery problems (PDPs) (Parragh et al., 
2006), named the paired many-to-many pickup and delivery problem (PMPDP). Given 
‘paired’ demands between customer nodes, the PMPDP is to find a set of feasible 
vehicle routes starting from and ending at the depot such that the constructed objective 
function can be optimized subject to a set of constraints. This problem is called ‘paired 
many-to-many’ because commodities stored at each customer node are presorted and 
‘bundled’ into groups according to their destinations, i.e., paired demands, and the 
contents of each commodity bundle are intended to go to the same destination. In other 
words, each of the items in any particular commodity bundle must have the same origin 
and the same destination. Since each customer node could have ‘many’ paired 
commodity bundles and ‘many’ customer nodes to be considered simultaneously in the 
treated system, the type categorized as ‘paired many-to-many’ delivery operations 
emerges. 
The PMPDP have not been previously studied in the literature. Without 
considering the PMPDP problem, Berbeglia et al. (2010) classify PDPs into three 
different groups, i.e., many-to-many, one-to-many-to-one, and one-to-one problems. In 
many-to-many pickup and delivery problems (MPDPs), any node can serve as a source 
or as a destination for any commodity. An example of a MPDP is the Swapping 
Problem (Anily and Hassin, 1992). In this problem, every node may initially contain an 
object of a known type of commodity desired by another node as well as a desired type 
of commodity. The problem consists of constructing a route performing the pickups and 
deliveries of the objects in such a way that at the end of the route, every node possesses 
an object of the desired type of commodity. It is noted that the MPDPs described here 
are essentially associated with ‘unpaired’ commodities. 
The second group of problems, called one-to-many-to-one pickup and delivery 
problems (OMOPDPs), requires that commodities are initially available at the depot and 
are destined to the customer nodes. In addition, commodities available at the customers 
are destined to the depot. The third group of problems, called one-to-one pickup and 
delivery problems (OPDPs) requires that each commodity (which can be regarded as a 
request) has a given origin and a given destination. Problems of this type arise, for 
example, in courier operations and door-to-door services for the transportation of goods 
as well as in dial-a-ride problems for the transportation of people. An extensive review 
of recent models and algorithms for OPDPs can be seen in Cordeau et al. (2008). 
It is clear that the PMPDP is not included in the Parragh et al.’s classification of 
PDPs. The PMPDP differs from the MPDPs and OMOPDPs in many aspects. The most 
significant difference is that commodities treated in the PMPDP are paired, while 
commodities in the latter two groups are unpaired. It is also obvious that the PMPDP is 
more difficult than OPDPs. The special features associated with the PMPDP are twofold: 
(1) each customer node is both a supply customer and a demand customer, (2) at each 
customer node there is more than one paired ‘bundle’ of commodities. With this fact, 
the PMPDP is mathematically more challenging than OPDPs. It is also noted that, 
unlike OPDPs, the total requests in the PMPDP may not be completely fulfilled by 
visiting each customer node only once. In other words, in the PMPDP, in order to fulfill 
completely all the requests, each customer node needs to be visited more than once. 
Since, in a daily routing, all the customer nodes, except for the depot, can usually get 
 3
this system operate more efficiently, a good decision supporting system designed with 
an efficient algorithm is definitely needed, which is exactly the aim of this research. 
The remaining part of the paper is organized as follows. Section 2 will conduct a 
brief literature review. Section 3 proposes a solution algorithm for the LVRP. Section 4 
demonstrates our solution algorithm with the real data from San Francisco library 
system. The obtained result is compared with those of other methods available in the 
literature. Sensitivity analysis on the number of dispatched library vehicles is also 
conducted. Section 5 concludes the paper with a few remarks. 
2. Literature Review 
As previously mentioned, the PMPDP has not attracted much attention in the literature. 
The only application that can be found is the library system operations which, 
unfortunately, are mainly concerned with client’s satisfaction about library services 
(Dubberly, 1977; Huesmann and Downing, 1996; Wright, 2001; 2003; 2004; Hersey, 
2004; Ryder, 2004; 2005; Berry Iii, 2005; Cree and Mijung, 2005; Monroe, 2005; 
Stephens and Franklin, 2005; Agee and Naper, 2007). Only a few published articles are 
directly relevant to PMPDP or to LVRP in particular. To avoid going afar, the literature 
review conducted below will focus on the LVRP. 
A first LVRP article is by Min (1989) who studied the city library systems of 
Columbus and Franklin in the state of Ohio in the U.S.. A model is formulated as an 
extension of the well-known Traveling Salesman Problem (TSP) and a three-step 
solution algorithm, – which included clustering library branches, assigning vehicles to 
each cluster, and creating the route structure, – was proposed. With the help of 1985 
SAS® program for the cluster analysis and Little et al.’s (1963) algorithm for both 
symmetric and asymmetric TSPs, the case study of Columbus and Franklin city library 
systems indicates that substantial time/distance savings can be achieved by using the 
proposed model and solution procedure. However, this article did not really formulate 
the delivery operations corresponding to the contemporary public library systems and, 
hence, the obtained solutions may not meet the actual needs. 
Not aware of Min’s work, Apte and Mason (2006) conducted an in-depth 
research on the LVRP. They formulated two models according to two operational 
strategies, i.e., strategy 1 and strategy 2, proposed for the city library system of San 
Francisco. Strategy 1 presorts books and balances the work time of library vehicles, 
whereas strategy 2 employs the cross docking concept which differs from strategy 1 in 
two aspects: (1) a specific branch designated by the management serves as cross 
docking branch, and (2) outbound trips for all vehicles begin at the main library and end 
at the cross docking branch, while on the return trip each vehicle retraces its own route 
in the reverse direction to return finally to the main library at the end of the day. In 
general, strategy 1 cannot satisfy all O-D demands in one day. Unlike strategy 1, 
strategy 2 can satisfy book demands for all the clients in one day by traversing each 
library branch twice, i.e., one time before and the other after visiting the cross docking 
facility by the library vehicles. 
Given a fixed number of library vehicles, Apte and Mason (2006) solved the 
LVRP using the modified generalized assignment heuristic (Fisher and Jaikumar, 1981) 
in combination with Frontline System’s Premium Solver. While both strategies were 
advantageous over the manual method that is currently employed in San Francisco’s 
system, strategy 1 performed better than strategy 2 in terms of total travel distance and 
balanced workload of drivers, but was inferior to strategy 2 with respect to cost, cycle 
time and capacity utilization. Based on the obtained results, Apte and Mason (2006) 
recommended strategy 2 for real application. Note that the number of unsatisfied 
demands (i.e., the difference between known demands and actual satisfied demands) is 
 5
3.1 Construction of Initial Solution 
Three methods, i.e., sweeping method, nearest insertion method, farthest insertion 
method, are used to generate three initial solutions, respectively. The sweeping method 
has been used by the city library system of San Francisco and, therefore, it is also 
named status quo (SQ) method in this paper. The nearest insertion method and the 
farthest insertion method have commonly been used for generating initial solutions in 
vehicle routing problems. 
The general steps for generating initial solutions of the LVRP can be described 
as follows: 
Step 1: Use one of the three methods mentioned above to generate a sequence list for all 
nodes without considering the vehicle capacity and driver work time constraints. 
Step 2: Assign the library branches in the sequence list one by one to each library 
vehicle and check its feasibility. 
Step 3: If vehicle capacity and driver work time constraints are satisfied, go to Step 4; 
otherwise, revamp vehicle route structure by switching any sequence of deliveries and 
pickups as follows. 
Step 3.1: Change the order of library branches already in the vehicle route by 
employing the intra-route 1-1 exchange method. If the vehicle capacity and driver 
work time constraints can be satisfied by the resulting route, do the exchange and go 
to Step 4; otherwise, continue 
Step 3.1.1: Exchange the subject library branch with one of the library branches yet 
to be serviced in the sequence list. If the vehicle capacity and driver work time 
constraints can be satisfied by the resulting route, do the exchange; otherwise, 
delete the subject library branch from the route and re-insert it into the sequence 
list. 
Step 4: If there exists any library branch in the sequence list, go to Step 3. Otherwise, 
the generated route is regarded as an initial solution, stop. 
3.2 Improvement of Initial Solution 
The best initial solution generated in the first stage will be further improved in the 
second stage by the MBCO which is modified from the bee colony optimization (BCO). 
The BCO metaheuristic has been introduced fairly recently (Lučić and 
Teodorović, 2001, 2002, 2003a, b; Teodorović et al., 2006; Teodorović, 2008) as a new 
direction in the field of swarm intelligence. The main idea of the BCO is briefly 
reproduced here for the reader’s better understanding. The BCO method is inspired by 
the behaviour of natural bees in foraging to collect nectar or pollen. In the BCO 
metaheuristic, artificial bees are located in the hive at the beginning of the search 
process, and from thereon each bee makes a series of local moves, thus creating a partial 
solution. Bees incrementally add solution components to the current partial solution and 
communicate directly to generate feasible solution(s). The best discovered solution of 
such initial (first) iteration is saved, and the process of incremental construction of 
solutions by the bees continues through subsequent iterations. 
Thus, the BCO can be described as follows: 
Step 1: Initialization. Determine the maximum number of bees ‘B’ (each initial solution 
is denoted by a bee), the maximum number of iterations ‘I’, the number of stages ‘M’ at 
each iteration and other relevant parameters. Find the best solution among all initial 
solutions and denote this solution as the initial best solution x. 
Step 2: For i= 1…. I, repeat the following steps: 
Step 2.1: For j= 1…..M, perform forward pass and backward pass. 
Step 2.2: If the best solution xi obtained during the i-th iteration is better than the 
best-known solution x, update the best known solution (x:=xi). 
 7
Forward pass assumes a combination of individual exploration and collective 
past experiences to create various partial solutions. Each bee recursively selects an 
unserviced node (library branch) from the current partial solution. The total number of 
foraging bees during u-th stage in the z-th iteration equals: 
   Bb b zuhzuB 1 ),(),(  (2) 
where 
B(u,z): The total number of foraging bees during u-th stage in the z-th iteration; 
the initial value in the z-th iteration is zero, i.e., B(0,z)= 0. 
The BCO solves combinatorial optimization problems in stages (Figure 2). At 
each stage u, the probability of choosing node j by the b-th bee, located in node i 
(during stage u+1 and iteration z) equals: 
 










  






otherwise   ,0
,,),,(),,(,
),1(
),(
1
)1,max('
1
)1,max('
)'(
)'(
zubzuNjzugi
e
e
zup
bb
Nk
zn
zad
zn
zad
b
ij
zub
z
lzz ik
ik
z
lzz ij
ij
 (3) 
where 
a: input parameter. 
b: bee designation (b=1,2,…,B). 
dij: length of link (i,j). 
gb(u,z): last node that bee b visits at the end of stage u in iteration z. 
i, j: node designations (i,j=0,1,2,…,N). 
l: memory length which represents the maximum number of iterations that bee 
can recall about former bee assignments in the network. 
nik (z’): total number of bees that visited link (i,k) in z’-th iteration. 
Nb (u,z): set of unvisited nodes (library branches and the main library) for bee b 
at stage u in iteration z. 
 
The probability of link (i,j) being chosen is affected mainly by its link length as 
well as the number of bees that have previously visited it. The greater the distance 
between node i and node j, the lower the probability the k-th bee located in the node i 
will choose node j during stage u and iteration z. The influence of the distance is lower 
at the beginning of the search process. The greater the number of iterates z, the higher 
the influence of the distance. Also, working in the opposite direction, the greater the 
total number of bees that visited a certain link in the past, the higher the probability of 
choosing that link in the future. 
The probability that bee b will, at the beginning of stage u+1, use the same 
partial tour that is defined in stage u in iteration z equals: 
 
uz
zuLzuL
b
rzuwrb
ezup
)),((min),( ),(
),1(
  (4) 
Where Lb(u,z) denotes the length of partial route that is discovered by bee b in 
stage u in iteration z. If a bee has discovered the shortest partial route in stage u in 
iteration z, the bee will fly along the same partial route with probability equal to one, i.e., 
pb(u+1,z)=1. The longer the partial route that the bee has discovered, the smaller the 
probability that the bee will fly again along the same partial route. When a bee decides 
to abandon the food source, she will go to the dancing area and will follow another 
bee(s). Suppose the probability that the partial route ξ will be chosen by any bee is 
determined by the normalized value of the partial route length and the normalized value 
 9
Figure 5. First forward pass and the first backward pass for VRPs 
 
 
{Insert Figure 6 here} 
Figure 6. Second forward pass for VRPs 
 
4. Computational Experiments 
Computational experiments using the dataset from the San Francisco’s library system 
(Apte and Mason, 2006) are conducted in two parts. We first compare three solution 
approaches, i.e., our results (abbreviated as MBCO), the current San Francisco’s library 
system (or Status Quo) (abbreviated as SQ), as well as the Strategy 1 in Apte and 
Mason (2006) (abbreviated as AM), for the San Francisco’s library system. Sensitivity 
analysis on the number of dispatched library vehicles using the MBCO method is also 
conducted in Section 4.2. 
All the experiments were performed on a Microsoft Windows Vista personal 
computer equipped with Intel® Core™2 Duo T700@ 2.40GHz CPU, 4.00GB memory. 
4.1 San Francisco’s Library System 
San Francisco’s library system consists of one main library and 26 library branches. The 
associated raw data is taken from Apte and Mason (2006) for demonstration and 
comparison. 
4.2 Solutions Associated with Different Methods 
We assume that three library vehicles are available and the parameter settings in BCO 
are summarized in Table 2.  
 
{Insert Table 2 here} 
Table 2. Definition of parameters in BCO 
 
It is observed that the objective value obtained from the MBCO decreases from 
iteration to iteration. It took 50,000 iterations to lower objective value from an initial 
value of 623.51 to a final value of 594.56. The relationship of objective values versus 
number of iterations is drawn in Figure 7. 
 
{Insert Figure 7 here} 
Figure 7. Objective values versus iterations for MBCO method 
 
Three methods, i.e., SQ, AM and MBCO, are also compared for the San 
Francisco’s library system. Summarized results are shown in Table 3 and in Figure 8. 
For the reader’s reference, the route structure generated by the three methods is depicted 
in Appendix B. 
 
{Insert Table 3 here} 
Table 3. Comparisons of different solutions (with three library vehicles) 
 
In Table 3, the objective value and five performance indices (PIs) associated 
with the three methods are listed and compared as follows: 
(1) In terms of objective value, the MBCO method outperforms, followed by the 
SQ method. 
(2) In terms of the total travel time on road (PI-1), the MBCO and SQ methods 
perform similarly, while the AM method is much worse. 
(3) In terms of the deviation between individual and average work time of 
 11
being delivered to satisfy paired demands. This result is due to the fact that 
the loaded books are origin-destination specified. 
(5) In terms of the total work time of drivers (PI-4), more library vehicles result 
in lower value than fewer library vehicles. However, in terms of the average 
work time (PI-4’), the result is reversed due to fewer library branches to be 
serviced. 
(6) In terms of difference between the maximum and minimum work times 
among drivers (PI-5), four library vehicles result in the lowest value. Again 
no consistent tendency can be observed. 
While the four library vehicles perform in a superior manner in terms of 
performance indices PI-2 and PI-5, the three library vehicles dominate all the other 
performance indices. This result may well explain why Apte and Mason (2006) use 
three library vehicles. 
 
{Insert Figure 9 here} 
Figure 9. Radar chart of objective value and five performance indices 
for different library vehicles 
 
5. Conclusion and Suggestions 
In this study, the PMPDP is addressed as a new variation of PDPs and is elaborated 
upon using the LVRP example. The model formulation is presented in Appendix A. The 
proposed solution heuristic, called MBCO, is essentially modified from the original bee 
colony optimization method, which was originally intended for traveling salesman 
problems. By considering the possibility of returning to the ‘virtual depot’ from stage to 
stage during each iteration, the MBCO can also be applied to routing problems 
involving multiple vehicles. The raw data from San Francisco Library system are used 
for demonstration. Three approaches, i.e., the SQ, AM and MBCO, methods are 
compared in terms of objective value and five selected performance indices. Sensitivity 
analysis on different numbers of dispatched vehicles is also conducted. The 
experimental results are summarized as follows: 
(1) Among the three approaches compared, the MBCO method performs best in 
terms of the objective value, followed by the SQ and AM methods. 
(2) For the MBCO approach, by varying the number of dispatched library 
vehicles from three to six while fixing the maximum difference of the work 
times at 30 minutes, the case of using three library vehicles performs best. 
Dispatching more library vehicles does not necessarily result in higher 
satisfied demand because in this situation fewer library branches can be 
serviced and, hence, in general fewer paired demands are being satisfied by 
each library vehicle. 
Some issues need to be further explored and are subject to future research: 
(1) This research assumes that each library branch can be serviced once by the 
same vehicle. The assumption can be relaxed when necessary. For example, 
some library branches with very few interlibrary loans may be skipped from 
the library vehicle routes. Moreover, one library branch with extremely high 
demand may be serviced more than once by different library vehicles. 
(2) This research assumes that the vehicle speed along the route is constant. In 
reality, this is not always the case. The vehicle speed is subject to change due 
to various traffic conditions, road construction as well as incidents 
occurrences. In case the real time traffic information can be accommodated 
into the system, the solution quality can be enhanced. 
 13
Acknowledgment 
The authors would like to acknowledge Mr. Hsuan Wang for revising the earlier version of our 
computer codes. 
 15
demand of books, in terms of bins. 
si  : operating time needed at library i 
tij : travel time from library i to library j. 
W  : the limit of driver work hours per day. We assume it is 8 hours. 
4.  Variables 
ijd   : number of books actually delivered from library i to library j. 
Lik  : remaining capacity of library vehicle k after serving library i. 
pi  : number of books in bins being picked up at library i. 
qi  : number of books unloaded at library i. 
stik  : starting time to service library i by vehicle k. 
wk  : length of daily work time in minutes for the driver on vehicle k. 
xijk : 0-1 integer variable. 1, if vehicle k traverses from library i to 
library j; 0, otherwise. 
 17
 
Kkststw kskek  )0()0(  (A.20) 
 0,}1,0{ NijKkxijk   (A.21) 
The objective function in model (A.1) is essentially a weighted sum of three items: total 
travel time, the total deviations between vehicle travel time and average vehicle travel 
time for all vehicles, and unsatisfied demand of books in bins. The weights associated 
with these three items are, respectively, α, β and γ. Constraints (A.2) and (A.3) require 
that m library vehicles dispatch from and return to the main library. Constraints (A.4) 
and (A.5) split the physical depot into two virtual depots and require no inbound trips 
for ‘starting depot’ and no outbound trips for ‘ending depot.’ Constraints (A.6) and (A.7) 
together imply that each node will be visited exactly once. Constraint (A.8) requires that, 
if vehicle k enters node h, it must leave that node eventually. Constraint (A.9) requires 
that vehicle capacity limitation cannot be violated. Constraints (A.10) and (A.11) 
impose upper and lower limits of the time window for the depot. Constraint (A.12) sets 
the limit of work hours for all drivers. Constraint (A.13) sets the maximum difference 
between the highest work hours and the lowest work hours. Constraint (A.14) updates 
the remaining capacity of vehicle k after servicing node j. Constraint (A.15) defines the 
total supply from node i. Constraint (A.16) computes the amount of books actually 
being received at node j. Constraint (A.17) determines the demand actually being 
satisfied. Constraint (A.18) calculates the time to start servicing node j by vehicle k 
coming from node i. Constraint (A.19) states that if vehicle k doesn’t show up at node j 
then its starting time for service at that node is nil. Constraint (A.20) calculates the work 
hours for every vehicle. Constraint (A.21) defines ijkx  as 0-1 integer variables. 
 19
References 
Agee, J. and Naper, S., 2007. Off-site storage: an analysis. Collection Building, 26 (1), 
20-25. 
Anily, S. and Hassin, R., 1992, The swapping problem. Networks, 22, 419–433. 
Apte, U.M. and Mason, F.M., 2006. Analysis and improvement of delivery operations at the 
San Francisco public library. Journal of Operations Management, 24, 325–346. 
Attanasio, A., Cordeau, J.F., Ghiani, G., Laporte, G., 2004. Parallel Tabu search heuristics 
for the dynamic multi-vehicle Dial-A-Ride problem. Parallel Computing, Vol. 30, Issue 3, 
377–387. 
Berry Iii, J.N., 2005. The library Haines built. Library Journal, 130 (2), 38–41. 
Bodin, L., Golden, B., Assad, A., and Ball, M., 1983. Routing and scheduling of vehicles 
and crews. Computers and Operations Research, 10 (2), 63–211. 
Beasley, J.E., 1983. Route first-cluster second methods for vehicle routing. Omega, 11 (4), 
403–408. 
Berbeglia, G., Cordeau, J.F., and Laporte, G., 2010. Dynamic pickup and delivery problems. 
European Journal of Operational Research, 202 (1), 8–15. 
Bräysy, O., and Gendreau, M., 2005a. Vehicle routing problem with time windows, Part I: 
route construction and local search algorithms. Transportation Science, 39 (1), 104–118. 
Bräysy, O., and Gendreau, M., 2005b. Vehicle routing problem with time windows, Part II: 
metaheuristics. Transportation Science, 39 (1), 119–139. 
Chen, H.Y., 2009. Library vehicle routing problem, Master Thesis, National Central 
University, Chung-Li, Taiwan. (in Chinese) 
Cordeau, J.F. and Laporte, G., 2003. A Tabu search heuristic for the static multi-vehicle 
Dial-A-Ride problem. Transportation Research Part B, 37 (6), pp. 579–594. 
Cordeau, J.F., Laporte, G., and Ropke, S., 2008. Recent models and algorithms for 
one-to-one pickup and delivery problems. In B.L. Golden et al., eds. The Vehicle Routing 
Problems, Springer Science + Business Media, LLC. 
Cree, C.L., and Yoon M., 2005. Public library circulation decreases, expenditures rise. 
American Libraries, 36 (10), 57–58. 
Dubberly, R., 1977. Options to improve delivery. Library Journal, 102 (2), 170–171. 
Fu, L., 2002. Scheduling Dial-A-Ride paratransit under time-varying stochastic congestion. 
Transportation Research Part B, 36 (6), 485–506. 
Fu, L., 2003. Analytical model for paratransit capacity and quality-of-service analysis, 
Transportation Research Record, 1841, 81–89. 
Jorgensen, R.M., Larsen, J., and Bergvinsdottir, K.B., 2007. Solving the Dial-A-Ride 
problem using genetic algorithms. Journal of the Operational Research Society, Vol. 58, 
1321–1331. 
Hersey, D.P., 2004. The future of access services: should there be one? Journal of Access 
Services, 2 (4), 1–6. 
Huesmann, J., and Downing, D., 1996. Extending access and delivery (far) beyond the 
library walls. (cover story). Computers in Libraries, 16 (5), 28–31. 
Lee, Y.H., Jung, J.W. and Lee, K.M., 2006. Vehicle routing scheduling for cross-docking in 
the supply chain. Computers & Industrial Engineering, 51 (2), 247–256. 
Little, J.D.C., Murty, K.G., Sweeney, D.W., Karel, C., 1963. An Algorithm for the 
Traveling Salesman Problem. Operations Research, 11 (6), 972–989. 
Luo, Y. and Schonfeld, P., 2007. A rejected-reinsertion heuristic for the static dial-a-ride 
problem. Transportation Research Part B, 41 (7), 736–755. 
Lučić, P. and Teodorović, D., 2001. Bee System: modeling combinatorial optimization 
transportation engineering problems by swarm intelligence. In: Preprints of the TRISTAN 
IV Triennial Symposium on Transportation Analysis, Sao Miguel, Azores Islands, Portugal, 
441–445. 
Lučić, P. and Teodorović, D., 2002. Transportation modeling: an artificial life approach. In: 
 21
Table 1. Comparisons between two vehicle travelling directions 
Vehicle Travelling Direction Items Clockwise Counter-Clockwise 
Total Satisfied Demands 650 700 
Total Unsatisfied Demands 100 50 
Total Truckload 1100 950 
In-Vehicle Stock 100 50 
 23
Table 3. Comparisons of different solutions (with three library vehicles) 
Methods Item* status quo& Apte and Mason& MBCO# Total 
612.30 627.26 594.59 1831.96 Average 
objective value 33.42 (2) 34.24 (3) 32.42 (1) 100% 
146.7 168 149.90 463.7 PI-1 31.53 (1)§ 36.29 (3) 32.28 (2) 100% 
235.3 29.9 30.27 299.1 PI-2 78.6 (3) 10 (1) 10.24 (2) 100% 
3323 3422 3311.70 10044.8 PI-3 33.08 (2) 34.07 (3) 32.93 (1) 100% 
979.6 1004 982.91 2965.6 PI-4 33.04 (1) 33.85 (3) 33.13(2) 100% 
182.5 24 26.05 235 PI-5 77.66 (3) 10.21(1) 11.20 (2) 100% 
* Comparing results for average objective value and for five performance indices 
(PIs). PI-1: total travel time on road (min/day); PI-2: total deviation between 
individual and average work time of drivers (min); PI-3: number of unsatisfied 
books (books/day); PI-4: total driver work time (min/day); PI-4’: average driver 
work time; PI-5: difference between the maximum and minimum work times 
among drivers (min). 
& Those values are obtained by plugging the original solutions into MBCO’s 
objective function. The MBCO objective function is defined as 
Obj=α×PI-1+β×PI-2+γ×(2+2)×(PI-3/30), where α=1, β=0.1, γ=1. The reason for 
using MBCO objective function is that its functional form is more rationale than 
the others. 
# Performance indices are the average value calculated from ten computer runs. 
§ Numbers in the parenthesis denote the ranking of the three methods. 
 25
List of Figure Captions 
Figure 1. Library vehicle travelling directions 
Figure 2. First forward pass and the first backward pass (Teodorović, 2008) 
Figure 3. Second forward pass (Teodorović, 2008) 
Figure 4. Flow chart of MBCO for improving the initial solution 
Figure 5. First forward pass and the first backward pass for VRPs 
Figure 6. Second forward pass for VRPs 
Figure 7. Objective values versus iterations for MBCO method 
Figure 8. Objective value and five performance indices 
for SQ, AM and MBCO methods 
Figure 9. Radar chart of objective value and five performance indices 
for different library vehicles 
Figure 10: Route structure generated from (a) Status Quo method, (b) Apte and Mason 
method, and (c) our approach 
 27
S et B C O  P aram eters
B ees Leave
M ain  L ib ra ry  (H ive ) fo r
L ib ra ry  B ranches (F orag ing )?
Forw ard  P ass
Y es
B ackw ard  P ass
A ll L ib ra ry  B ranches 
S erv iced?
U pda te  the  N um ber o f B ees 
on  E ach  L ink  o f V eh ic le  
R outes
S topp ing  
C rite rion  S a tis fied ?
E nd
Y es
N o
N o
In itia l S o lu tions
2 -op t N ode  E xchange
Y es
 
Figure 4. Flow chart of MBCO for improving the initial solution 
 
 29
0%
20%
40%
60%
80%
100%
PI-1
PI-2
PI-3
PI-4
PI-5
Objective Value
SQ
AM
MBCO
Figure 8. Objective value and five performance indices 
for SQ, AM and MBCO methods 
 
0%
5%
10%
15%
20%
25%
30%
35%
PI-1
PI-2
PI-3
PI-4PI-4'
PI-5
Obj Value
3 Vehicles
4 Vehicles
5 Vehicles
6 Vehicles
 
Figure 9. Radar Chart of objective value and five performance indices 
for different library vehicles 
 1
TRAVEL TIME PREDICTION for SCHOOL BUS 
 
Huey-Kuo Chen 
Professor, Department of Civil Engineering, National Central University 
No. 300, Jhong Da Road, Jhong-Li City, Taoyuan 32001, Taiwan. 
Phone: 03-4227151 ext 34115, Email: ncutone@ncu.edu.tw 
Che-Jung Wu 
Master, National Central University 
 
ABSTRACT 
School bus is a convenient and efficient transportation mode. Useful travel time information 
can help commuters make good choice of departure time as well as other travel decisions. 
However, providing real time travel time information for an en route school bus is a difficult 
task as travel time information is uncertain due to external interferences. Hence no consistent 
tendency can be easily observed. In this research, we develop a novel approach that combines 
grey theory (for travel time prediction) and empirical decomposition method (for data analysis) 
to predict the arrival time at each stop along the school bus route. The experiments showed 
that our prediction approach employing real time data collected from geographic positioning 
system as well as historic data outperforms the approach involving only historic data. In 
addition, sensitivity analysis is performed for different number of stops used in the prediction 
process. 
Keywords: Travel Time, Hilbert-Huang Transform, Empirical Mode Decomposition, Grey 
Theory. 
 
99 年度專題研究計畫研究成果彙整表 
計畫主持人：陳惠國 計畫編號：99-2221-E-008-050- 
計畫名稱：固定起迄需求車輛途程問題之研究 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 1 0 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
 
