246 Int. J. Ad Hoc and Ubiquitous Computing, Vol. 7, No. 4, 2011 
Copyright © 2011 Inderscience Enterprises Ltd. 
Deployment of intrusion detection nodes to prevent 
wormhole attacks in Mobile Ad hoc Networks 
Ming-Yang Su 
Department of Computer Science and Information Engineering, 
Ming Chuan University, 
5 Teh Ming Road, Gwei Shan District, Taoyuan 333, Taiwan 
Fax: +886-3-3593874 
E-mail: minysu@mail.mcu.edu.tw 
Abstract: This study proposes an approach to deploy a node implementing Intrusion Detection 
System (IDS) in MANETs for detecting and isolating wormhole nodes, if they exist. All IDS 
nodes must be set in sniffing mode to execute a mechanism called Anti-Wormhole Mechanism 
(AWM). An IDS node will broadcast a block message to all nodes within its communication 
range when a neighbouring node’s suspicious value exceeds the threshold. This study uses ns2  
to evaluate the proposed IDS nodes, and the results show that these IDSs can rapidly and 
correctly block the wormhole nodes under the circumstances of low false positives. 
Keywords: MANETs; mobile ad hoc networks; wormhole attacks; IDS; intrusion detection 
system; AWM; anti-wormhole mechanism; ns2. 
Reference to this paper should be made as follows: Su, M-Y. (2011) ‘Deployment of intrusion 
detection nodes to prevent wormhole attacks in Mobile Ad hoc Networks’, Int. J. Ad Hoc and 
Ubiquitous Computing, Vol. 7, No. 4, pp.246–260. 
Biographical notes: Ming-Yang Su received his BS from the Department of Computer  
Science and Information Engineering of Tunghai University, Taiwan, in 1989, and received  
his MS and PhD from the same department of the National Central University  
and National Taiwan University in 1991 and 1997, respectively. He is an IEEE member, and 
currently an Associate Professor of the Department of Computer Science and Information 
Engineering at the Ming Chuan University, Taoyuan, Taiwan. His research interests include 
network security, intrusion detection/prevention, malware detection, mobile ad hoc network  
and wireless sensor networks. 
 
1 Introduction 
Data transmission is carried out by multi-hops between 
nodes in a wireless Mobile Ad Hoc Network (MANET) 
since there is no basic network equipment such as a  
router or access point. Each mobile node not only acts  
as an endpoint, but also plays a role for the router to build  
a route in data transmission. When the source node intends 
to transmit data to a destination node, intermediate nodes 
must be employed for message transmission. Therefore, 
determining how to dynamically and rapidly build a route 
from source to destination is one of the most important 
functions for MANETs. The existing routing protocols are 
mainly divided into proactive and reactive routing protocols. 
In the proactive routing protocols, nodes will proactively 
find the routes accessible to other nodes. Each node will 
periodically exchange routing messages to ensure that the 
information in the routing table is up-to-date and correct. 
For example, Destination-Sequenced Distance-Vector 
Routing (DSDV) (Perkins and Bhagwat, 1994) and 
Optimised Link State Routing (OLSR) (Clausen and 
Jacquet, 2003) are two proactive routing protocols. 
However, each node in a MANET is restricted by power 
and bandwidth, continuously sending routing messages by 
every node leads to network congestion and faster power 
consumption. On the other hand, only when two nodes 
intend to transmit data will the reactive routing protocol find 
and create a route, which is also called on-demand routing 
protocol, such as Ad hoc On-Demand Distance Vector 
routing (AODV) (Perkins et al., 2003) and Dynamic Source 
Routing (DSR) (Johnson et al., 2007). Generally, the Route 
Request (RREQ) message is broadcast by the source  
node and then flooded into the MANET to find and select  
one route to the destination. At present, AODV (Perkins  
et al., 2003) is discussed in most existing research papers. 
This paper is also addressed in an AODV-based MANET. 
MANETs are often applied to first aid communication 
of natural disasters, battlefield communication and business 
conferencing. Determining how to ensure the security of 
data transmission between two endpoints without a basic 
access point is an important issue. Therefore, a few routing 
protocols, with security attributes, have been recently 
proposed, such as Secure AODV (SAODV) (Zapata and 
Asokan, 2002), ARAN (Sanzgiri et al., 2002), Ariadne  
(Hu et al., 2002), SEAD (Hu et al., 2003) and SRP 
(Papadimitratos and Hass, 2002). However, many weak 
points of SRP and Ariadne were suggested in Buttyán and 
248 M-Y. Su  
The remainder of this paper is organised as follows: 
Section 2 reviews the related works on prevention of 
wormhole attacks in MANETs and the AODV routing 
protocol; Section 3 presents the function of AWM executed 
in IDS; Section 4 shows some results of ns2; Section 5 
presents the conclusions. 
2 Background 
This study deploys intrusion detection nodes to  
prevent wormhole attacks in MANETs on the basis of 
AODV routing protocol (Perkins et al., 2003). Therefore, 
Section 2.1 reviews related works on the prevention of 
wormhole attacks in MANETs, and Section 2.2 introduces 
the AODV protocol. 
2.1 Literature reviews 
The following is a briefing on related researches  
concerning the three different approaches in defending 
against wormhole attacks. The first is merely to modify the 
routing protocol to avoid wormhole nodes in path discovery, 
such as Song et al. (2005), Chiu and Lui (2006), Lee et al. 
(2008), Su and Boppana (2007), Naıt-Abdesselam et al. 
(2007), Phuong et al. (2007) and Su (2010). The second is to 
equip extra hardware for a node, like a positioning system, a 
time synchronisation mechanism, or a directed antenna, in 
addition to modifying the routing protocol. Some of them 
are Khalil et al. (2005, 2006), Wang and Wong (2007), Hu 
et al. (2006), Lazos et al. (2005) and Wang (2006). Finally, 
the third is to deploy some special nodes executing IDSs 
with or without hardware support, such as Azer et al. (2008) 
and Gorlatova et al. (2006). 
2.1.1 Merely modify the routing protocol (Song et al., 
2005; Chiu and Lui, 2006; Lee et al., 2008;  
Su and Boppana, 2007; Naıt-Abdesselam et al., 
2007; Phuong et al., 2007; Su, 2010) 
Song et al. (2005) proposed a routing protocol with a 
modified DSR (Johnson et al., 2007) to defend against 
wormhole attacks. At first, the originator node initiates a 
route discovery, and after receiving multiple paths, the 
destination node calculates the proportion of each link of 
these paths. Because wormhole nodes are characterised by 
their ability to easily grab the routing path, if the occurrence 
of one link exceeds the threshold, the two ends of this link 
may be wormhole nodes. The destination would first send a 
testing data packet to verify if this link is abnormal (dropped 
by wormhole nodes). If it is confirmed that the two ends  
of this link are executing wormhole attacks, the destination 
would send a warning message to the neighbours of the 
malicious nodes, telling them not to process any message 
from the malicious nodes from then on. Chiu and Lui  
(2006) proposed an AODV-based routing protocol called  
 
 
 
DelPHI, in which they added a ‘previous hop’ field and a 
‘timestamp’ field in the RREQ message. They also applied  
a multi-path concept to DelPHI and recorded the delay  
and hop count in transmitting DREQs and DREPs (similar 
to the RREQ and RREP in AODV) through the paths to the 
destination. In this way, the average time taken by each hop 
can be calculated. In case of a path subject to wormhole 
attacks, the delay would be obviously longer than normal 
routing (the authors assumed that the wormhole node has  
a heavy load, and therefore the processing of the message  
is slow). Hence, the data packet would be transmitted 
without passing those nodes, causing longer delays, and the 
wormhole nodes could be avoided. 
Lee et al. (2008) proposed a routing protocol where 
every node must broadcast Hello messages that can be 
transmitted over 2 hops, and each node must record the 
neighbour list of 1 hop and 2 hops, as well as the key list of 
their neighbours within 2 hops. When a message received 
by a node does not meet the correct Message Authentication 
Code (MAC), there may be a wormhole node. The purpose 
of maintaining a two-hops neighbour list by each node is to 
help the node recognise if the wormhole node is a hidden 
wormhole node or an exposed wormhole node (Lee et al., 
2008). Su and Boppana (2007) proposed a routing  
protocol to alleviate wormhole attacks. This protocol is a 
modification of the Ariadne (Hu et al., 2002) routing 
protocol, and can only defend against wormhole attacks  
in the case of an in-band channel (or packet-encapsulated 
channel). Its main method is to reduce the delay in 
transmitting RREQ and to calculate the average time in 
transmitting RREQ by normal nodes. In this way, a normal 
node can identify a nearby wormhole node that executes  
in-band wormhole attacks if the RREQ transmitting is 
particularly long. Naıt-Abdesselam et al. (2007) used a  
four-message exchange method in route discovery to defend 
against wormhole attacks based on the OLSR (Clausen  
and Jacquet, 2003) routing protocol. Believing that the 
wormhole nodes may process a larger number of packets, 
and may cause longer delays of packet than normal nodes, 
the authors mainly use Hello messages and ACK messages 
to confirm the delay. Through exchanging Hello messages, 
those nodes with an exceptionally long delay would be 
judged as wormhole nodes. 
The method proposed by Phuong et al. (2007) is called 
Transmission Time-based Mechanism (TTM), which is also 
based on AODV routing protocol. Their design principle  
is that if two nodes, subject to wormhole attacks, are misled 
to be neighbour nodes, the transmission time between  
the two nodes would be longer than normal neighbour 
nodes. Su (2010) proposed a protocol named WARP,  
which considers a link-disjoint multi-path during path 
discovery and provides more path selection to avoid 
malicious nodes, but eventually still uses one path to 
transmit data. On the basis of the characteristic that 
wormhole nodes can easily deprive them of the route from  
 
 
 
250 M-Y. Su  
Figure 2 Packet formats of all routing messages in AODV: (a) RREQ message format; (b) RREP message format;  
(c) RERR message format and (d) Hello message (see online version for colours) 
   
 (a) (b) (c) 
 
(d) 
 
Each node maintains a routing table and makes real-time 
and proper updating to the field content after receiving  
a routing message. The fields of the routing table are shown 
in Figure 3. When an originator needs to send data to a 
destination, if it is in the originator’s routing table, the path 
towards the destination is out of date or there is simply no 
path towards the destination, the originator would broadcast 
an RREQ to all nodes in the network. Each intermediate 
node receiving an RREQ would first judge whether it is the 
originator itself or such an RREQ is a repeated one. If so, 
this RREQ would be dropped. If not, the RREQ would be 
processed and broadcast again. 
Figure 3 Fields of the AODV routing table 
 
In processing the RREQ, an intermediate node first checks 
if a corresponding reverse route exists in its routing table.  
If not, the node would create an entry for the reverse route. 
The purpose of the reverse route is to let the intermediate 
node send an RREP back to the originator later. If there  
is already a reverse route, the intermediate node checks  
the content of this entry. If the destination sequence number 
in this entry is smaller than the originator sequence number 
in the RREQ (a larger number means newer information),  
or if the two sequence numbers are the same but the hop 
count recorded by the routing table is larger (smaller hop 
count means shorter path), the data in the entry would be 
replaced by data in the RREQ. Then, if this intermediate 
node has a path towards the destination, and the path is  
not expired, the intermediate node would send an RREP 
back to the originator by the reverse route. However, if the 
intermediate node does not have a (forward) route to the 
destination, it will broadcast the RREQ to keep searching 
for a path to the destination node. 
An example is shown in Figure 4(a), where s and  
d represent the source node and the destination node, 
respectively, the grey lines represent the tracing of the 
RREQ, and the black lines represent the reverse routes 
reserved in the routing tables of the intermediate nodes. 
Each node only needs to know the following node and does 
not need to know all nodes on the entire route. Taking node 
g for example, the following node back to s is node f.  
Node h would receive RREQs transmitted from e and g.  
In this case, it is assumed that the RREQ from e arrives  
first. Therefore, the RREQ from g that arrives later would 
be dropped immediately. Figure 4 only shows a portion of 
the fields in the routing table. 
When the destination node or some intermediate node 
that knows a path to the destination receives the RREQ,  
it would reply an RREP to the originator by unicast instead 
of broadcast, as shown in Figure 4(b). If an intermediate 
node receiving the RREP does not have a forward entry  
in its routing table, it would create a forward entry and  
store the data from the RREP. If there is a forward entry,  
the destination sequence number in this entry would be 
compared with that in the RREP. If the latter is larger,  
252 M-Y. Su  
passes through the tunnel nodes without increasing the  
hop count. After being received by the wormhole node  
at the other endpoint, it is converted back to a common 
RREQ/RREP. When an IDS detects a wormhole node 
within its transmission range, one block message, mainly 
containing the identity of the wormhole node, is broadcast 
to all nodes in the MANET. Precisely, a block message 
includes: the IDS node issued, the wormhole node detected 
and a timestamp. After being received by a regular node,  
the message can be added into the Block Table, as shown  
in Table 1. Table 1 keeps the information that malicious 
Node 1 was issued by IDS_A and Node 6 was issued  
by IDS_C; the timestamps are also recorded in the  
table. The block message transmitted by IDS will be 
authenticated by regular nodes before updating their  
Block Tables. Therefore, nodes other than the IDS node 
cannot broadcast a valid block message. 
Table 1 Block Table 
IDS Malicious node Timestamp 
IDS_A 1 2009/02/19 12:51 
IDS_C 6 2009/02/19 12:55 
MAODV, executed by a regular node, is basically identical 
to AODV, except that the intermediate node is not allowed 
to reply RREP. Besides, the differences are: 
• when a node receives a block message broadcast by an 
IDS, the malicious node in the block message should be 
added to the Block Table, i.e., in addition to the routing 
table, a Block Table is needed to record the malicious 
nodes 
• when a node receives an RREP forwarded by a 
malicious node residing in the Block Table, the RREP 
will be dropped immediately. 
The following paragraphs will explain the algorithm of 
AWM executed on IDS nodes. AWM maintains four tables: 
the RQ Table, RP Table, SN Table and Nr Table, as shown 
in Table 2. The RQ table records RREQs sniffed by an  
IDS node within its transmission range, for instance,  
the first row of Table 2(a) indicates that the RREQ of  
(source, destination, source_sequence) = (1, 6, 3001) has 
been broadcast by Nodes 2, 4 and 5, and their maximum 
hop count is 2. The RP Table records RREPs sniffed by  
an IDS node within its transmission range, for instance,  
the first row of Table 2(b) indicates that the RREP of 
(source, destination, destination_sequence) = (2, 5, 2101) 
has been forwarded by Nodes 3, 4 and 5, and the IDS 
expects to sniff the next node forwarding the RREP as Node 
1 that is stored in the field of ‘Expected node’. This implies 
that for the RREP, the latest forwarded node is Node 5 and 
is destined to Node 1. If Node 1 continues to be within the 
IDS’s transmission range and is not the end of the RREP  
(the source node of the path), and does not forward the 
RREP within a specific period, then the suspicious value  
of Node 1 will be added with 1 by the IDS. 
Table 2 RQ, RP, Nr and SN Tables 
(a) RQ Table 
Route 
Src Dest Src_seq 
Maximal 
hop 
count 
Broadcasting 
nodes 
Expiration 
time 
1 6 3001 2 2, 4, 5 02:41:12 
3 5 5012 4 1, 6 02:44:34 
 
(b) RP Table 
Route 
Src Dest Dest_seq 
Forwarding 
nodes 
Expected 
node 
Expiration 
time 
2 5 2101 3, 4, 5 1 05:21:10 
5 1 4006 1, 6 4 06:23:36 
 
(c) Nr Table 
Node ID Expiration time 
3 02:40:12 
4 02:42:34 
7 02:48:34 
 
(d) SN Table 
Node ID Suspicious value Status 
3 1 Inactive 
4 6 Active 
The Nr Table records Hello Messages sniffed by an IDS 
node within its transmission range, namely, it records the 
list of neighbouring nodes. As shown in Table 2(c), Nodes 
3, 4 and 7 exist within the range of transmission of the  
IDS node. The Suspicious Node (SN) table, as shown in 
Table 2(d), records the suspicious values of neighbouring 
nodes within the IDS’s transmission range. The suspicious 
value is an important basis for an IDS, determining whether  
a neighbouring node is a malicious node. At present, the 
suspicious value of Node 3 in Table 2(d) is 1. Assuming it is 
less than the threshold, the status is ‘inactive’; whereas  
the suspicious value of Node 4 is 6; assuming that it reaches 
the threshold, the status is ‘active’ and should be blocked. 
The AWM algorithm executed on all IDS nodes  
mainly includes four procedures: Procedures A, B, C  
and D. Procedure_A is for IDS sniffing an RREQ to update 
the RQ Table. Procedure_B is for IDS sniffing an RREP to 
update the RP Table and find the tunnel ingress wormhole 
node. Procedure_C is for IDS periodically checking the  
RP Table to find the tunnel egress wormhole node. Finally, 
Procedure_D is used to communicate between the IDSs, 
mainly to process the block message. The approaches for 
judging the tunnel ingress wormhole node and tunnel egress 
wormhole node are different. The former can be carried  
out immediately by checking the RQ Table when sniffing  
an RREP, whereas the latter can only be conducted by 
periodically checking the RP Table. 
As shown in Figure 5, the source and destination are  
S and D, respectively. It is assumed that X is a tunnel ingress 
254 M-Y. Su  
First, it checks to see if the node forwarding the RREP is a 
destination, if yes, it exits; if not, enquiries are made about 
the RQ Table by taking (Src, Dest, Src_seq) of the RREP  
as an index. There are three possible cases as follows: 
Case 1: If no corresponding entry exists in the RQ Table, 
this indicates that the node forwarding the RREQ is not 
within the transmission range of the IDS when broadcasting 
RREQ, so no judgement can be made and the procedure 
exits. 
Case 2: If a corresponding entry exists in the RQ Table  
and the field of ‘Broadcasting nodes’ contains the node 
forwarding this RREP, this indicates a reasonable RREP 
reply, and thus the procedure exits. 
Case 3: If a corresponding entry exists in the RQ Table and 
the field of ‘Broadcasting nodes’ does not contain the node 
forwarding this RREP, this indicates that it is an 
unreasonable RREP. The node forwarding the RREP is then 
used to enquire about the ‘Node ID’ column in the SN Table  
(see Table 2(d)). If there is no entry matched in the SN 
Table, a new entry is created and (the forwarding node, 1, 
‘inactive’) is filled in the entry. If there is one entry matched 
in the SN Table and the ‘Status’ field is active, a block 
message is broadcast (a known wormhole ingress node).  
If there is one entry matched in the SN Table and the 
‘Status’ field is inactive, the suspicious value is added  
with 1; then, it judges if the value reaches the threshold;  
if yes, the status is set as active and a block message  
is broadcast (a new wormhole ingress node). The algorithm 
of Procedure_B.2 is shown in Figure 8. 
Figure 8 Procedure B_2: Tunnel ingress wormhole 
determination while sniffing an RREP 
 
Procedure_C: IDS periodically checks the RP Table to find 
tunnel egress wormhole nodes. 
It scans the RP Table and does the following steps  
for each entry. First, it checks to see if the node of 
‘Expected node’ appears in the Nr Table. If not, it indicates 
that the ‘Expected node’ is not a neighbour of the IDS and 
thus stops examination of this entry and scans the next entry 
on the RP Table. Then, it checks to see if the ‘Expected 
node’ appears in the field of ‘Forwarding Nodes’ on the RP 
Table; if yes, it indicates that the RREP has been normally 
forwarded and thus stops examination of this entry and 
scans the next entry of the RP Table; if not, it further checks 
to see if the ‘Expected node’ appears in the field of ‘Node 
ID’ on the SN Table. If the SN Table has no corresponding 
entry, a new entry will be created on the SN Table and  
(the Expected node, 1 and ‘inactive’) are filled into the  
new entry. If the SN Table has a corresponding entry  
and the status is active, a block message is broadcast  
(a known tunnel egress node). If the SN Table has a 
corresponding entry and the status is inactive, then it 
increases the ‘Suspicious Value’ by one and determines if it 
exceeds the threshold; if yes, the status is changed to active 
and a block message is broadcast (a newly found tunnel 
egress node); if not, then it stops examination on this  
RP Table entry and scans the next entry on the RP table. 
The algorithm of Procedure_C is shown in Figure 9. 
Figure 9 Procedure_C: Periodically scanning RP Table to find 
tunnel egress nodes 
 
Procedure_D: Communication between IDSs. 
When an IDS finds that the suspicious value of a 
neighbouring node exceeds the threshold, a block message 
will be broadcast to inform common nodes so as to update 
their Block Tables (see Table 1). This part of Procedure_D 
is shown in Figure 10(a). Meanwhile, according to 
Assumption 1, neighbouring IDS(s) can also sniff this block 
message. When an IDS node monitors a block message 
being broadcast by a neighbouring IDS node, it will first 
check its own SN Table. If the SN Table has not recorded  
such a malicious node that has been released by the  
block message, a new entry is created and (node ID in block 
message, the threshold, ‘active’) is filled into the new entry; 
then, the block message continues to be broadcast. If the SN 
Table has recorded such a malicious node but the status is 
inactive (a new detected wormhole node), the suspicious 
256 M-Y. Su  
Figure 12 AWM flow diagrams: (a) while an IDS sniffs an RREQ, RREP, or a block message and (b) periodically checks the RP table 
(continued) 
 
(b) 
 
4 Experimental data and analysis 
In this study, ns2 (http://www.isi.edu/nsnam/ns/) is used to 
verify the performance of the proposed AWM mechanism  
that is executed by all IDS nodes. Fifty movable common 
(regular) nodes are randomly distributed in an area of 
2000 m × 2000 m, and MAODV is executed for normal 
routing. Two kinds of wormhole nodes are considered: 
• two wormhole nodes (a pair) are located diagonally in a 
500 m × 500 m area, as shown in Figure 13(a) 
• four wormhole nodes are located diagonally as shown 
in Figure 13(b), in which (W1, W2) are a pair and (W3, 
W4) are another pair. 
In Figure 13(a) and (b), T denotes a tunnel node.  
The wormhole nodes execute WAODV to conduct 
wormhole attacks, whereas tunnel nodes execute  
TAODV to assist wormhole nodes in rapidly forwarding 
encapsulated routing packets. Furthermore, some IDS nodes 
execute AWM to detect and broadcast block messages,  
if necessary. The threshold in AWM is set as 2, i.e., when  
RREP is processed abnormally twice by a common  
node and is detected, it is considered a wormhole node.  
All experimental parameters of ns2 in this study are listed  
in Table 3. All numerical data in this section refers to  
the average of three experiments with different random 
scenarios. 
In terms of total packet loss rate, Figure 14 first shows  
the comparison of the original AODV and the proposed 
MAODV, and the influence of wormhole attacks in the 
cases of one pair and two pairs. Different pause times  
will affect the packet loss rate, but on average, when no 
attack exists, the total packet loss rate of the original AODV 
is 10.98%, and that of MAODV provided for normal  
node routing in this study is 10.61%. When one pair  
of wormholes exists, the packet loss rate is increased to 
47.66%. If two pairs of wormholes exist, the packet loss rate 
will continue to increase to 54.11%. Figure 14 shows that 
wormhole nodes can successfully grab the routes and drop 
packets to conduct a high packet loss rate. 
Figure 13 Deployments of wormhole nodes in the simulations:  
(a) two (a pair) wormhole nodes and (b) four  
(two pairs) wormhole nodes 
 
(a) 
 
(b) 
258 M-Y. Su  
 
Average true positives and false positives are shown  
in Table 4, which presents 5 different combinations  
of the number of wormhole nodes and IDS nodes  
(the number of normal nodes is always maintained at 50). 
An experiment for each combination is conducted three 
times with a pause time of 0, 5, 10 and 15, separately,  
so all experimental results shown in the table are  
an average from 12 experiments. The case of 2 wormholes 
and 4 IDSs is used as an example. Since a local  
coverage that consists of 4 IDSs can only cover one 
wormhole node, the true positive is regarded as 100%  
if the covered wormhole node can be detected. In addition, 
there is a 0.5 occurrence of a false positive on average,  
i.e., the false positive rate is 1% since the number of  
normal nodes is 50. Table 5 shows the number of block 
messages forwarded by all IDS nodes as well as the 
proportion of the whole network traffic. In summary,  
it indicates that the deployed IDSs have no excessive 
overhead on the whole network traffic, but can successfully 
block wormhole nodes under high true positives and low 
false positives, so that the packet loss rate can be reduced 
effectively. 
Figure 16 Improvements of total packet loss rate by IDSs: (a) two wormholes (one pair) and (b) four wormholes (two pairs)  
(see online version for colours) 
 
(a) 
 
(b) 
Table 4 False positive and true positive in average of the proposed IDS 
  Number of wormholes covered by all IDSs 
Number of 
normal nodes 
False positive occurrences  
(or rate) in average 
True positive occurrences 
(or rate) in average 
90 IDSs 2 50 3.58 (or 7.16%) 1.84 (or 91.75%) 2 wormholes 
4 IDSs 1 50 0.5 (or 1%) 1 (or 100%) 
90 IDSs 4 50 3 (or 6%) 3.58 (or 89.5%) 
8 IDSs 2 50 0.83 (or 1.66%) 1.58 (or 79.2%) 
4 wormholes 
4 IDSs 1 50 0.67 (or 1.33%) 0.75 (or 75%) 
Table 5 Numbers of packets 
  No. of packets generated by 50 normal nodes No. of packets generated by IDSs Traffic overhead of IDSs 
0 wormhole 0 IDS 113,882 0 0 
90 IDSs 96,717 1195 1.22% 2 wormholes 
4 IDSs 110,255 125 0.11% 
90 IDSs 93,753 1603 1.68% 
8 IDSs 97,705 199 0.20% 
4 wormholes 
4 IDSs 99,747 100 0.10% 
260 M-Y. Su  
Naıt-Abdesselam, F., Bensaou, B. and Yoo, J. (2007)  
‘Detecting and avoiding wormhole attacks in optimized  
link state routing protocol’, Proceedings of the IEEE 
Conference on Wireless Communications and Networking, 
Hong Kong, China, pp.3117–3122. 
Papadimitratos, P. and Hass, Z.J. (2002) ‘Secure routing  
for mobile ad hoc networks’, Proceedings of the SCS 
Communication Networks and Distributed Systems Modeling 
and Simulation (CNDS), San Antonio, Texas, USA, January, 
pp.1–13. 
Perkins, C.E. and Bhagwat, P. (1994) ‘Highly Dynamic 
Destination-Sequenced Distance-vector Routing (DSDV) for 
mobile computers’, SIGCOMM, London, UK, pp.234–244. 
Perkins, C.E., Royer, E.M. and Das, S.R. (2003) Ad hoc  
On-Demand Distance Vector (AODV) Routing, IETF Internet 
Draft, RFC 3561, July. 
Phuong, T.V., Canh, N.T., Lee, Y-K., Lee, S. and Lee, H. (2007) 
‘Transmission time-based mechanism to detect wormhole 
attacks’, Proceedings of the IEEE Asia-Pacific Service 
Computing Conference, Tsukuba Science City, Japan, 
pp.172–178. 
Sanzgiri, K., Dahill, B., Levine, B.N., Shields, C. and  
Belding-Royer, E. (2002) ‘A secure routing protocol for ad 
hoc networks’, Proceedings of the 10th IEEE international 
Conference on Network Protocols (ICNP), November, Paris, 
France, pp.1–10. 
Sanzgiri, K., LaFlamme, D., Dahill, B., Levine, B.N., Shields, C. 
and Belding–Royer, E.M. (2005) ‘Authenticated routing for 
ad hoc networks’, IEEE Journal on Selected Areas in 
Communications, Vol. 23, No. 3, pp.598–610. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Song, N., Qian, L. and Li, X. (2007) ‘Detection of wormhole 
attacks in multi-path routed wireless ad hoc networks: a 
statistical analysis approach’, Journal of Network and 
Computer Applications, Vol. 30, No. 1, pp.308–330. 
Su, M-Y. (2010) ‘WARP: a wormhole avoidance protocol by 
anomaly detection in mobile ad hoc networks’, Computers 
and Security, Vol. 29, No. 2, pp.208–224. 
Su, X. and Boppana, R.V. (2007) ‘On mitigating in-band 
wormhole attacks in mobile ad hoc networks’, Proceedings  
of the IEEE International Conference on Communications, 
Glasgow, Scotland, pp.1136–1141. 
Wang, X. (2006) ‘Intrusion detection techniques in wireless ad hoc 
networks’, Proceedings of the IEEE International Computer 
Software and Applications Conference, Chicago, USA, 
pp.347–349. 
Wang, X. and Wong, J. (2007) ‘An end-to-end detection of 
wormhole attack in wireless ad-hoc networks’, Proceedings 
of the 31st Annual International Computer Software  
and Applications Conference (COMPSAC), Beijing, China, 
pp.39–48. 
Zapata, M.G. and Asokan, N. (2002) ‘Securing ad–hoc routing 
protocols’, Proceedings of the ACM Workshop on Wireless 
Security (WiSe), Atlanta, GA, September, Grand Hyatt, 
Singapore, pp.1–10. 
Website 
The Network Simulator – ns–2, http://www.isi.edu/nsnam/ns/ 
long distance, other normal nodes may mistakenly think that
there is only a distance of a one-hop count. The tunnel-like
channel can be realized by two methods (Khalil et al., 2005):
packets encapsulated channel and out-of-band channel, as
shown in Fig. 1(a) and (b), respectively.
Packets encapsulated channel is also called in-band
channel, where a malicious node puts a captured routing
message in a data packet payload, and uses normal nodes to
transmit the data packet to another malicious node. The
malicious node receiving the data packet draws the routing
message out of the packet payload and further broadcasts or
propagates it. In this way, the hop count is reduced to increase
the chance of grabbing a route, and as no field information is
changed, neither Secure AODV (SAODV) (Zapata and Asokan,
2002), which can protect routing messages, nor Authenticated
Routing for Ad hoc Networks (ARAN) (Sanzgiri et al., 2002),
which can authenticate each neighbor, have any way of
defending against attacks from a encapsulated channel. As
shown in Fig. 1(a), a path is built in advance between the two
malicious nodes,m1 andm2, and s is the source node and d is
the destination node. When s broadcasts a Route Request
(RREQ), it would be received by malicious node m1, and then
m1 encapsulates the RREQ into the payload of a data packet,
and transmits it using the pre-built path between m1 and m2.
After receiving the data packet, m2 would extract the original
RREQ and broadcast it till it reaches the destination node. As
the path passing through the malicious nodes saves 4 hop
counts on the surface and thus is shorter than the other two
paths, node dwould finally choose the path to respond a Route
Reply (RREP). In this way, the malicious nodes would deprive
the route of passing data packets. The method of an out-of-
band channel differs from encapsulating packet mainly in the
type of tunnel-like channel. A special channel may be
a connection by a wired network between the two malicious
nodes, or a private channel between the two ends using
a high-powered transmission to send signals over a long
distance, as shown in Fig. 1(b).
This paper proposes a secure routing protocol to defend
against wormhole attacks based on the Ad hoc On-demand
Distance Vector (AODV) routing protocol (Perkins et al., 2004),
which is named WARP (Wormhole-Avoidance Routing
Protocol). WARP considers link-disjoint multipaths during
path discovery in order to choose a safer path to avoid
wormhole nodes. Since wormhole nodes have great abilities
to grab the routes from the source nodes to the destination
nodes, after a certain time of executing wormhole attacks, the
wormhole nodes would be rejected by their neighboring
nodes, thereby preventing them from transmitting routing
messages, and hence, they are quarantined by the whole
MANET. Some normal nodes may be located at key positions
of connectivity within the network, and thus, may be quar-
antined due to considerable acquisition of routing paths;
however, they would not be in key positions for long as the
MANET topology is constantly changing. In addition, in the
design of WARP, when a node is quarantined by its neighbors,
and then has no abnormal behaviors for a certain period, it
would be recovered from the quarantine.
The remainder of this paper is organized as follows.
Section 2 provides a brief review on previous works against
wormhole attacks and the AODV routing protocol. Section 3
describes the details of the proposed routing algorithm –
WARP, in detection and defense against wormhole nodes.
Section 4 offers discussion on the properties of WARP. Section
5 is the outcome and analysis of ns2 simulation. Section 6
offers conclusions.
2. Related works
Since the proposed WARP is based on AODV, in addition to
reviewing previous research on defending wormhole attacks,
the AODV is also briefly described.
2.1. Previous researches
The methods proposed in literature to defend against worm-
hole attacks can be divided into three categories. The first is to
modify a well-known routing protocol, such as Ad hoc On-
demand Distance Vector (AODV) (Perkins et al., 2004) or
Dynamic Source Routing (DSR) (Johnson et al., 2004), to avoid
wormhole nodes during path discovery, such as (Song et al.,
2005; Chiu and Lui, 2006; Lee et al., 2008; Su and Boppana, 2007;
Fig. 1 – Two possible implementation methods of wormhole attacks.
c om p u t e r s & s e c u r i t y 2 9 ( 2 0 1 0 ) 2 0 8 – 2 2 4 209
which arrives later, would be immediately dropped. Fig. 4 only
shows a portion of the fields in the routing table.
When the destination node or some intermediate node,
which knows a route to the destination, receives the RREQ, it
would reply an RREP to the originator by unicast instead of
broadcast, as shown in Fig. 4(b). If the intermediate node
receiving the RREP does not have a forward entry in its routing
table, it would create a forward entry and store the data of the
RREP. If there is a forward entry, the destination sequence
number in this entry would be compared with that in the
RREP. If the latter is larger, the intermediate node would
update this entry by the RREP, and then send the RREP back to
the originator via the reverse route, which was previously
created upon receipt of the RREQ. In Fig. 4(b), the entries with
a white background are forward entries. Once the originator
receives an RREP, it can transmit data packets to the desti-
nation along the forward route.
In AODV, each mobile node would periodically send Hello
messages, thus, each node knows which nodes are its
neighboring nodes within one-hop. If one node has not
received any Hello message from a neighboring node within
a certain time, the node would send an RERR message to the
nodes that are recorded in the corresponding precursor list in
the routing table. The precursor list records a list of the
precursor nodes on the route that had used the disappeared
node. The nodes receiving an RERR would remove the
compromised route from their routing tables.
Though the AODV achieves a very good packet arrival rate,
it is definitely vulnerable to wormhole attacks. In the path
discovery stage, the malicious nodes could easily reduce the
hop count by in-band or out-of-band channels, and thus,
depriving a path for data transmission.
3. The proposed wormhole-avoidance
routing protocol
This paper proposes a routing protocol named WARP
(Wormhole-Avoidance Routing Protocol), which is based on
AODV and can efficiently quarantine wormhole nodes.
According to amulti-path routing algorithm,WARP takes link-
disjoint multiple paths into consideration during path
discovery; however, it eventually chooses only one path to
transmit data packets. Some preliminaries of the proposed
protocol are given in Section 3.1, and the details are formally
described in Section 3.2.
3.1. Preliminaries
The principle of WARP is to allow neighboring nodes of
a wormhole node to notice that the wormhole node has an
extreme capacity of competition in path discovery. In the pathFig. 3 – Fields of the AODV routing table.
Fig. 2 – Packet formats of all routing messages in AODV.
c om p u t e r s & s e c u r i t y 2 9 ( 2 0 1 0 ) 2 0 8 – 2 2 4 211
packets. A higher anomaly value means a higher possibility
of the node being a wormhole node.
- Hello message: Finally, WARP modified the functions of
a Hello message. In AODV protocol, if a node receives
a Hello message from a neighboring node, the neigh-
boring node would remain in its neighbor list. While in
the WARP protocol, if a node receives a Hello message and
does not find an entry of the neighbor node in its routing
table, it would create an entry with the destination IP
address being the neighbor node. Thus, the node can
calculate its neighbor’s anomaly value by accumulating
the RREPs that are transmitted by the neighbor node, and
accumulating the RREP_DECs as transmitting the RREP_
DEC to the neighbor node; in order to reflect the change of
the anomaly value of its neighbor, i.e., (number of
RREP_DEC)/(number of RREPþ 1). In another words, not
only routing messages, such as RREQ, RREP, or RERR affect
the routing table, the Hello messages can also cause
a node to maintain entries in the routing table for its
neighboring nodes, within one-hop. For an entry gener-
ated by a Hello message in the routing table, the two
fields, ‘‘destination IP address’’ and ‘‘the next hop’’, are
both stuffed up the neighboring node. Fig. 6 shows the
initial status of the nodes’ routing tables before any path
discovery occurring. Through the Hello messages, each
node maintains an entry in the routing table for one of its
neighbor nodes.
3.2. Details of the proposed WARP
In WARP, an intermediate node is prohibited to reply to the
RREQ with an RREP, and only the destination node can send
RREPs back to the originator because each node has the
responsibility tomonitor the anomaly values of its neighboring
nodes. If one intermediate node replies to the RREQ with an
RREP, none of the following nodes on the pathwould be able to
properly accumulate the anomaly value of its next neighboring
node along the route. Details ofWARP are described as follows,
including procedures for RREQ, RREP, and RREP_DEC.
3.2.1. Procedure for receiving an RREQ
Compared with AODV, in which a node uses a 2-tube (origi-
nator IP, broadcast ID) to determine whether an RREQ is
a duplicate, whereas, in WARP, a node uses a 3-tube, (origi-
nator IP, broadcast ID, first_hop). A duplicate RREQ is directly
dropped. The procedure for a node receiving an RREQ is shown
in Fig. 7. A node receiving an RREQ first judgeswhether it is the
destination node, if not, it is an intermediate node. For an
intermediate node, if the hop count in the RREQ is larger than
the hop count in the corresponding entry (having the same
originator IP) of the routing table, the RREQ is directly dropped;
otherwise, the node creates a new entry in the routing table
(multiple reverse entries, with the same originator IP but
different first_hops), copies the data of the RREQ into this
entry, and then drops the RREQ. For a destination node
Fig. 6 – Routing table entries created by Hello messages in WARP.
c om p u t e r s & s e c u r i t y 2 9 ( 2 0 1 0 ) 2 0 8 – 2 2 4 213
3.2.2. Procedure for receiving an RREP
In WARP, only the destination node can reply to RREQ with
an RREP. Regardless of the number of RREQs received, the
destination node will reply to them with RREPs, one by one,
unless the sequence number of an RREQ is smaller than the
existing sequence number in the routing table (i.e., the RREQ
is expired). In the design of link-disjoint multipaths, an
intermediate node, say i, may receive multiple RREPs, and
when it receives the first RREP from one of its neighboring
nodes, say k, it first adds 1 to the RREP count of the route
entry k (which was generated by the Hello message from the
neighbor node k; in this entry, dest_ip¼ k and next_hop¼ k),
and checks if the anomaly value of k is larger than the
threshold value. If yes, node i would drop this RREP, other-
wise it would create a forward entry to the destination
through node k. This forward entry is generated in node i due
to its neighboring node k transmitting an RREP; in this case,
entry dest_ip¼ d and next hop¼ k. Later, if the intermediate
node i receives from a different neighboring node, say h, an
RREP with the same destination IP & destination sequence,
node i would add 1 to the RREP count of entry h in the routing
table (generated by the Hello message of the neighbor node h;
in this entry, entry dest_ip¼ h and next_hop¼ h). If the
anomaly value of h recorded by node i does not exceed the
threshold value, and the hop count of the RREP from h is
smaller than the hop count on the existing forward entry
(through node k), the RREP information would be used to
update this current forward entry, i.e., update the two fields
of ‘‘next hop’’ and ‘‘hop count’’ in the routing table entry
(entry dest_ip¼ d and next hop¼ h). In other words, an
intermediate node would select only one neighboring node
from those nodes that forwarded RREPs, with a minimum
hop count and its anomaly value not exceeding the
threshold. Therefore, in the routing table of the intermediate
node, there would remain only one forward entry to the
destination node.
When receiving an RREP, the intermediate node i not only
processes the forward entry based on the above principle, but
also continues to forward the RREP along a reverse route. As
the routing table of node imay recordmultiple reverse entries
to the originator, it would choose one that has the minimum
hop count and the neighboring node’s anomaly value does not
exceed the threshold value, then forward the RREP and delete
other reverse entries to the originator (only one reverse entry
is reserved). The procedures used by intermediate nodes to
process forward and reverse entries, upon receiving an RREP,
are as shown in Fig. 9.
In the illustration of Fig. 10, s and d, respectively, represent
the source and the destination, and the yellow bold lines
represent the RREP forwarding traces. Since destination d has
received RREQs from nodes h, i, and k, it transmits an RREP to
node h, i, and k, separately. In the routing table of h, there are
two reverse entries to e and f, respectively. As the hop counts
of RREPs through e or f, and back to s are 3, if according to node
h’s records, the anomaly value of f is smaller than the anomaly
value of e, and not exceeding the threshold value, h would
forward the RREP to f instead of e, and delete the reverse entry
to e. Such an action is referred to as a ‘‘suppression’’. That is,
the RREP forwarded to node h is suppressed by h to the next
node e. Similarly, such selections of neighboring nodes and
deletions of reverse entries are performed at nodes f, i, and g,
as shown in Fig. 10.
When node f receives an RREP from nodes h and i, sepa-
rately, it would also compare the two hop counts in RREP and
check the anomaly values of h and i, according to f itself
routing entries. As the hop counts of RREPs going through h or
i to d are 2, assume the anomaly value of i is smaller than the
anomaly value of h, and does not exceed the threshold value,
node f would only accept the RREP forwarded by i, and create
a forward entry to d through i, and ‘‘drop’’ the RREP from h (In
practice, if the RREP from h arrives first, f would first create
a forward route to d through h, and then the content of this
forward route would be replaced by the content in the RREP
message from i). Similarly, such selection of RREP is per-
formed at the originator s in Fig. 10. It is noted that, by the
‘‘suppression’’ and ‘‘dropping’’ of RREPs, eventually, each
node involved in the path discovery can have one forward
entry at most to the destination and one reverse entry at most
to the originator, except for the destination nodes, which keep
multiple reverse entries.
Fig. 8 – Illustrations for RREQ processing in WARP.
c om p u t e r s & s e c u r i t y 2 9 ( 2 0 1 0 ) 2 0 8 – 2 2 4 215
reverse entries created through the receipt of RREQs. The
white entries are the forward entries, created through the
receipt of RREPs. For one route, the node next to the originator
can use the entry created by the Hello message as a reverse
entry; while the node prior to the destination can use the entry
created by the Hello message as a forward entry. Take node
b in Fig. 12 for an example, the entry with dest¼ s and next¼ s
(marked with a star) is an entry created by the Hello message,
but it can also be used as a reverse route entry to return to s. In
addition, for node i in the figure, the entry dest¼ d and
next¼ d (marked with a plus) is an entry created by the Hello
message, but it can also be used as the forward entry. After the
originator sends the RREP_DEC, then the data packets can
follow.
In the design of WARP, the Hello message and RERR have
special purposes. Every mobile node in the MANET periodi-
cally transmits a Hello message; therefore, a mobile node
receiving a Hello messages from its neighboring nodes can
periodically check the anomaly values of its neighboring
nodes. As the anomaly value of each node is zero at the
beginning stage, one node cannot judge the route acquisition
ability of its neighboring node, and therefore, wormhole nodes
are unavoidable within a certain time. However, when
a wormhole node constantly grabs the routes, its neighboring
nodes on these routes would accumulate the anomaly values
of the wormhole node, and when the values exceed the
threshold, its neighboring nodes will begin to deny passing
any routing messages to the wormhole node. Take Fig. 13 as
an example, node i is a neighbor of node m. When node i
transmits an RREP_DEC to m for the first time, the anomaly
value ofm is recorded in node i, as 1/2. When node i transmits
the second RREP_DEC tom, the anomaly value ofm recorded in
node i becomes 2/3. When node i transmits the third RREP_
DEC tom, the anomaly value of m recorded in node i becomes
3/4. For node i, the anomaly value of its neighbor node m is
gradually increasing, i.e., 1/2< 2/3< 3/4. The anomaly value is
forever smaller than 1, because only the node receiving an
RREP has a chance to receive an RREP_DEC, but not for sure.
For a node, its anomaly value recorded by its different
neighbors may be different.
As a node finds that the anomaly value of its neighboring
node is larger than or equal to the threshold value, the mobile
node would transmit a RERR to the nodes in the upstream,
telling those precursor nodes to renew path discoveries.
4. Properties of WARP protocol
The ability ofWARP to provide avoidance of wormhole attacks
is first illustrated, and then other merits are addressed in this
section. Fig. 14 shows the key concept of WARP. Initially, the
neighboring nodes of the twowormhole nodesw1 andw2, say
a and b, respectively, will regularly forward RREQs, RREPs, and
RREP_DECs to the two nodes, increasing the anomaly values of
w1 (or w2) in node a’s (or node b’s) routing table, as shown in
Fig. 14(a). Once the anomaly value of w1 saved in node a rea-
ches the threshold value, node a will begin to drop RREPs
transmitted from w1; similarly, as the anomaly value of w2
saved in node b reaches the threshold value, node bwill begin
to suppress or forbid all forwarding RREPs to w2, as shown in
Fig. 14(b). Since WARP searches multiple paths during path
discovery, another path, which does not pass through the two
wormhole nodes, would be selected, thus isolating the
attacked nodes. Extended simulation results by ns2 (The
Network Simulator) are offered in the next section.
In addition, other properties of WARP are summarized as
follows:
Fig. 11 – Processing for RREP_DEC message in WARP.
c om p u t e r s & s e c u r i t y 2 9 ( 2 0 1 0 ) 2 0 8 – 2 2 4 217
therefore, when the denominator becomes larger, the whole
anomaly value would become smaller. Such a design avoids
network disconnection caused by a long duration quarantine
of a normal node, which is probably located in a key position
of connectivity within the network, and grabs too many
routing routes. Moreover, the nodes in MANET are mobile,
and thus, the current key nodewouldnot continuously be the
key node.
 No additional hardware: There is no extra hardware, and no
need for mobile nodes to stay in a sniffing mode. By peri-
odical broadcasts of Hello messages, each mobile node is
activated to check the anomaly values of its neighboring
nodes. If it finds a neighboring node with too high an
anomaly value, it would transmit an RERR to nodes in the
upstream.
5. Experimental results and comparison
with other studies
This section will first show experimental results on the
performance of WARP, and then offer a comparison of WARP
with other related protocols.
5.1. Performance of WARP
This research used ns-2 (The Network Simulator) for simula-
tion. Three cases of two, four, and eight wormhole nodes were
considered in the experiments, as shown in Fig. 16(a)–(c),
respectively. In the figures, a wormhole node is blocked by
a square. The tunnel necessary for wormhole attacks was
simulated through several ‘tunnel nodes’, which executed
a special protocol. There are 3 tunnel nodes in Fig. 16(a), 4
tunnel nodes in Fig. 16(b) and 5 tunnel nodes in Fig. 16(c). After
receipt of an RREQ (or RREP), the wormhole nodes would
change it into a WRREQ (or WRREP), which is a format recog-
nized only by tunnel nodes, and can pass quickly between
tunnel nodes without increasing the hop count. After the
receipt of a WRREQ (or WRREP) at the other end(s), the
wormhole node(s) would change it back into an ordinary RREQ
(or RREP) format.
The parameters of the experiments are given, as follows.
Fifty normal mobile nodes were randomly distributed in
a 1500 m 750 m space, with a transmission range of 250 m,
Fig. 14 – An illustration of wormhole-avoidance in WARP.
Fig. 15 – Reducing anomaly value of node a in its
neighboring node i.
c om p u t e r s & s e c u r i t y 2 9 ( 2 0 1 0 ) 2 0 8 – 2 2 4 219
and a random movement speed of 0–5 m/s. Simulation time
was 500 s, and five types of the pause time of the nodes, 0 s,
25 s, 50 s, 75 s and 100 s, were considered separately. 20
mobile nodes were randomly chosen for data transmission,
each sending 5 kb UDP cbr (constant bit rate) per second, with
the size of each packet at 512 bytes. The anomaly threshold
valuewas set as 0.51, i.e., a node could only consecutively grab
the routes passing a certain neighboring node 2 times, and
then, it would be temporarily quarantined by this neighbor
node, at the third pass. For each type of pause time, ten
experiments were conducted to obtain an average value.
Experiment 1: Using the network topology of Fig. 16(a), i.e., 2
wormhole nodes and 3 tunnel nodes, Fig. 17 shows the packet
loss rates of AODV and WARP under no attacks and under
wormhole attacks. The packet loss rate of AODV under two
wormhole nodeswas approximately 26%,while the packet loss
rate ofWARPunder the same scenariowas approximately 19%,
reduced by 7%, i.e., WARP improved the packet loss rate of
AODV by approximately 27%. The solid lines denote the total
packet loss rate in theMANET, and the dashed lines denote the
exact packet loss rate dropped by the wormhole nodes.
Experiment 2: Using the network topology of Fig. 16(b), i.e., 4
wormhole attack nodes and 4 tunnel nodes. The packet loss
rate is shown in Fig. 18. The packet loss rate of AODV under 4
wormhole nodes was approximately 43%, while the packet
loss rate ofWARP under the same scenario was approximately
27%, reduced by 16%, i.e., WARP improved the packet loss rate
of AODV by approximately 37%.
Experiment 3: Using the network topology of Fig. 16(c), i.e., 8
wormhole attack nodes and 5 tunnel nodes. The packet loss
rate is shown in Fig. 19. The packet loss rate of AODV under 8
wormhole nodes was approximately 65%, while the packet
loss rate ofWARP under the same scenario was approximately
40%, reduced by 25%, i.e., WARP improved the packet loss rate
of AODV by approximately 39%. As shown in Fig. 19, almost all
lost packets were dropped by wormhole nodes both in AODV
andWARP. According to the results of Experiments 1, 2, and 3,
0
5
10
15
20
25
30
0 25 50 75 100
Pause time(s)
P
a
c
k
e
t
 
l
o
s
s
 
r
a
t
e
(
%
)
AODV(under attack, total loss)
AODV(under attack, dropped 
by wormhole nodes)
WARP(under attack, total loss)
WARP(under attack, dropped
by wormhole nodes)
Fig. 17 – Packet loss rates of Experiment 1.
0
5
10
15
20
25
30
35
40
45
50
Pause time(s)
P
a
c
k
e
t
 
l
o
s
s
 
r
a
t
e
(
%
)
AODV(under attack, total loss)
AODV(under attack, dropped by
wormmhole node)
WARP(under attack, total loss)
WARP(under attack, dropped by
wormmhole node)
0 25 50 75 100
Fig. 18 – Packet loss rate of Experiment 2.
0
10
20
30
40
50
60
70
80
Pause time(s)
P
a
c
k
e
t
 
l
o
s
s
 
r
a
t
e
(
%
)
AODV(under attack, total loss)
AODV(under attack, dropped by
wormmhole node)
WARP(under attack, total loss)
WARP(under attack, dropped by
wormmhole node)
0 25 50 75 100
Fig. 19 – Packet loss rate of Experiment 3.
20
25
30
35
40
45
50
Pause time(s)
P
a
c
k
e
t
 
l
o
s
s
 
r
a
t
e
(
%
)
AODV
WARP(threshold=0.35)
WARP(threshold=0.51)
WARP(threshold=0.68)
WARP(threshold=0.76)
WARP(threshold=0.81)
WARP(threshold=0.85)
0 25 50 75 100
Fig. 20 – Packet loss rates for different threshold values of
Experiment 4.
c om p u t e r s & s e c u r i t y 2 9 ( 2 0 1 0 ) 2 0 8 – 2 2 4 221
6. Conclusions
This paper proposes a routing protocol called WARP (Worm-
hole-Avoidance Routing Protocol), which is based on AODV, to
defend against wormhole attacks in MANETs. During the
stage of path discovery,WARP considersmultiple link-disjoint
paths in order to avoid possible wormhole nodes, but in the
end, still uses only one path to transmit data packets. Based
on the characteristic that wormhole nodes can grabmost data
transmission paths in a MANET, WARP enables the neighbors
of a wormhole node to discover that it has abnormal route
acquisitions. Then, the malicious node would be gradually
isolated by its normal neighboring nodes, and finally, become
quarantined by the whole network. Though a normal node
may be located at a key position of connectivity within
a network, and may be quarantined due to considerable
acquisition of routes, it would not be quarantined for long, as
all nodes in MANETs are supposed to be constantlymoving. In
addition, in the design of WARP, if one node is quarantined by
its neighbors, and does not show any abnormal behaviors
successively for a certain time, it would be recovered from the
quarantine by its neighbors. According to the experimental
results of ns2, compared to original AODV in the case of two,
four, and eight wormhole nodes, WARP can improve the
packet loss rate by 27%, 37%, and 39%, respectively. Under
attacks by more wormhole nodes, the advantages of WARP
become more outstanding. Compared to other related works,
the proposed protocol has more merits; the most important
merit is that it achieves degradation in packet loss rates
without any additional hardware support.
Acknowledgments
This work was partially supported by the National Science
Council with contracts NSC 97-2221-E-130-014 and 98-2221-E-
130-007.
r e f e r e n c e s
Marianne A. Azer, Sherif M. El-Kassas, Abdel Wahab F, Magdy S.
El-Soundani. Intrusion detection for wormhole attacks in ad
hoc networks a survey and a proposed decentralized scheme.
In the proceedings of the IEEE international conference on
availability, reliability and security; 2008. pp. 636–41.
Hon Sun Chiu, King-Shan Lui. DelPHI: wormhole detection
mechanism for ad hoc wireless networks. In the proceedings
of the 1st international symposium on wireless pervasive
computing; 2006.
Clausen T, Jacquet P. Optimized link state routing protocol (OLSR).
3626. IETF RFC; October 2003.
Gorlatova MA, Peter C. Mason, Maoyu Wang, Louise Lamont,
Ramiro Liscano. Detecting wormhole attacks in mobile ad hoc
networks through protocol breaking and packet timing
analysis. In the proceedings of the IEEE conference on military
communications; 2006.
Hu YC, Perrig A, Davic B. Johnson. Ariadne: a secure on-demand
routing protocol for ad hoc networks. In the proceedings of the
ACM conference on mobile computing and networking
(Mobicom); 2002. pp. 12–23.
Hu Yih-Chnu, Perrig Adrian, Jonhson David B. Wormhole attacks
in wireless networks. IEEE Journal on Selected Areas in
Communication 2006;24(2):370–80.
Johnson DB, Maltz DA, Hu YC. The dynamic source routing
protocol for mobile ad-hoc network (DSR), IETF internet draft
(work in progress); July 2004.
Issa Khalil, Saurabh Bagchi, Ness B. Shroff. LITEWORP:
a Lightweight countermeasure for the wormhole attack in
multihop wireless networks. In the proceedings of the 2005
international conference on dependable systems and
networks (DSN’05); 2005.
Issa Khalil, Saurabh Bagchi, and Ness B. Shroff. MOBIWORP:
mitigation of the wormhole attack in mobile multihop
wireless networks. In the IEEE securecomm and workshops;
2006. pp. 1–12
Lazos L, Poovendran R, Meadows C, Syverson P, Chang LW.
Preventing wormhole attacks on wireless ad hoc networks:
a graph theoretic approach. In the proceedings of the IEEE
conference on wireless communications and networking;
2005, vol. 2. pp. 1193–9.
Gunhee Lee, Dong-kyoo Kim, Jungtaek Seo, An approach to
mitigate wormhole attack in wireless ad hoc networks. In the
proceedings of the international conference on information
security and assurance; 2008. pp. 220–5.
Mahesh K. Marina and Samir R. Das. On-demand multipath
distance vector routing in ad hoc networks. In the proceedings
of the IEEE international conference on network protocols
(ICNP); 2001. pp. 14–23.
Farid Naıt-Abdesselam, Brahim Bensaou, Jinkyu Yoo. Detecting
and avoiding wormhole attacks in optimized link state routing
protocol. In the proceedings of the IEEE conference on wireless
communications and networking; 2007. pp. 3117–22.
Perkins CE, Royer EM, Das SR. Ad hoc on-demand distance vector
(AODV) routing, IETF internet draft. MANET Working Group;
Jan 2004.
Tran Van Phuong, Ngo Trong Canh, Young-Koo Lee, Sungyoung
Lee, and Heejo Lee. Transmission time-based mechanism to
detect wormhole attacks. In the proceedings of the IEEE Asia-
Pacific service computing conference; 2007. pp. 172–8
Kimaya Sanzgiri, Bridget Dahill, Brain Neil Levine, Clay Shields,
Elizabeth Belding-Royer. A Secure routing protocol for ad hoc
networks. In the proceedings of the 10th IEEE international
conference on network protocols (ICNP); November 2002.
Ning Song, Lijun Qian, and Xiangfang Li. Wormhole attacks
detection in wireless ad hoc networks: a statistical analysis
approach. In the proceedings of the 19th IEEE international
parallel and distributed processing symposium (IPDPS’05); 2005.
Xu Su and Rajendra V. Boppana. On mitigating in-band wormhole
attacks in mobile ad hoc networks. In the proceedings of the
IEEE international conference on communications; 2007. pp.
1136–41.
The Network Simulator – ns-2, http://www.isi.edu/nsnam/ns/.
Xia Wang, Intrusion detection techniques in wireless ad hoc
networks. In the proceedings of the IEEE international
computer software and applications conference; 2006.
Xia Wang and Johnny Wong, An end-to-end detection of
wormhole attack in wireless ad-hoc networks. In the
proceedings of the 31st annual international computer
software and applications conference (COMPSAC); 2007.
Zapata, MG, Asokan N. Securing ad-hoc routing protocols. In the
proceedings of the ACMworkshop on wireless Security (WiSe);
Sept 2002.
Ming-Yang Su received his B.S. degree from the Department of
Computer Science and Information Engineering of Tunghai
University, Taiwan in 1989, and received his M.S. and Ph.D.
c om p u t e r s & s e c u r i t y 2 9 ( 2 0 1 0 ) 2 0 8 – 2 2 4 223
國際性學術會議心得報告                                  
100  年 1  月 25 日 
報告人姓名 蘇民揚 服務機構及職稱 銘傳大學資訊工程學系教授 
     時間 
會議 
     地點 
100.1.18 ~ 100.1.20 
Tokyo, Japan 
會議 
名稱 
 (中文) 電子-商務，管理，社群，教育與技術國際研討會 
 (英文) The International Conference on e-Commerce, e-Administrator, 
e-Society, e-Education, and e-Technology (e-CASE & e-Tech 2011) 
發表 
論文 
題目 
 (中文) 防禦行動隨意網路上蟲洞攻擊之研究 
 (英文) Defending Against Wormhole Attacks in Mobile Ad Hoc Networks  
會議上順利發表論文一篇，也聆聽多場演講，對個人知識與體驗，受益良多. 
一、參加會議經過 
1.16 抵達日本成田機場。 
1.17 拜訪友人。 
1.18 開幕典禮，聆聽多場演講並完成報到程序。 
• Prioritization of Consumer Psychographics in Online Buying Behaviour: Impact of 
Motivation, Personality and Trust 
• Evaluate the critical success factors for ERP system using FUZZY TOPSIS method: 
A study of Taiwan information technology industry 
• The Factors Influencing on the Repurchase Intentions in the Online Group Buying 
Environment 
• An Analysis of the Relationship among the Technology Acceptance, IPTV Quality and 
Reuse Intention 
1.19 上午前往會議現場，除了發表自己的論文外，也聆聽多場報告，題目分別是: 
• A Secure and Fair Group Buying Protocol for Mobile Purchasing 
• Impact of Mobile Access to the Internet on Sales Completion Time in e-Commerce 
• E-commerce Resources Provisioning Using a Mathematical Method 
• Study of Consumer Switching Behavior Towards Mobile Shopping 
• Brand Variety as the Source of e-retailers' Power over Supplier Concentration 
• The Relationship Among Corporate Identities, Knowledge Management and Corporate 
Performance 
1.19 下午前往會議現場，聆聽多場報告，題目分別是: 
• RFID Service Platform for Campus Secure Applications 
• The Scale Development of Brand Experience for 3C Products in Taiwan 
• The Factors Influencing on the Repurchase Intentions in the Online Group Buying 
Environment 
• The Impact of Website Quality and Website Brand on Customer Purchase Intention: Trust 
and Perceived Risk as a Mediator 
• Web Services Security Monitoring Tool 
1.20 早上前往機場,中午搭機返國 
 
寄件者:  etech2011@gmail.com 
寄件日期:  2010 年 10 月 1 日星期五  上午  9:23 
收件者:  minysu@mail.mcu.edu.tw 
主旨:  e‐CASE & e‐Tech 2011‐‐‐ Acceptance Notification and Invitation Letter (5102) 
 
Acceptance Notification and Invitation Letter 
 
2011 International Conference on e‐Commerce, e‐Administration, e‐Society, e‐Education,   
and e‐Technology    (e‐CASE & e‐Tech 2011) Toshi Center Hotel, Tokyo, Japan January   
18‐20, 2011 
 
Paper Number: 5102 
Paper Title: Defending Against Wormhole Attacks in Mobile Ad Hoc Networks 
Author: Ming‐Yang Su 
 
Dear Ming‐Yang Su, 
 
It is our pleasure to inform you that your paper has passed the review process and been   
accepted by the e‐CASE & e‐Tech 2011.    The Program Committee would like to invite   
you to attend the e‐CASE & e‐Tech 2011 in Tokyo. 
 
We kindly ask you to prepare and upload your final version of paper together with your   
registration before the deadline of November 10, 2010. For a paper or abstract to be   
included in the conference proceedings, at least one author must register and pay the   
registration fees before the deadline. You can find all information at the conference   
website. 
http://www.e‐case.org/2011 
 
If you have any questions, please do not hesitate to contact Conference Coordinator Dr.   
Chien‐Kuo Li at eCASE2011@gmail.com 
 
Once again, thank you very much for your contribution. We hope to welcome you at the   
Toshi Center Hotel in January, 2011. 
 
Yours sincerely, 
 
Chien‐Kuo Li, Ph.D. 
Coordinator of e‐CASE & e‐Tech 2011 
Figure 1 Two possible implementation methods of wormhole attacks 
 
At present, the methods proposed in the literature to defend against wormhole attacks can be mainly 
divided into three categories. The first is only to modify the routing protocol to strengthen the safety 
in path selection [4][5]. The second is to use extra hardware apart from modifying the routing 
protocol [1][6][7], for instance, to use a positioning system, a time synchronization mechanism or a 
directed antenna for detection and defending. Finally the third is to implement an intrusion detection 
system with or without hardware support [8][9].  
This paper proposes a secure routing protocol to defend against wormhole attacks based on AODV 
routing protocol [10], which is named AWAODV (Anti-Wormhole AODV). AWAODV modifies the 
single path selection mechanism in AODV, and considers link-disjoint multi-path in path discovery so 
as to choose a safer path through a routing mechanism to avoid wormhole nodes. Moreover, in 
AWAODV, due to the great ability of wormhole nodes to deprive the route from the source node to 
the destination node, after a certain time of executing wormhole attacks, the malicious nodes would 
be rejected by its neighbor nodes to transmit route control packets, and would consequently be 
quarantined by the whole MANET network. The remainder of this paper is organized as follows. 
Section 2 describes in detail the proposed routing algorithm, i.e., AWAODV in detecting and 
defending against wormhole attacks. Section 3 is the outcomes and analysis of ns2 simulation. 
Section 4 is the conclusion.  
 
2. THE PROPOSED AWAODV PROTOCOL 
This paper proposes a routing protocol named AWAODV (Anti-Wormhole AODV), which is based 
on AODV [10] and can effectively quarantine wormhole nodes. Based on the multi-path routing 
algorithm, AWAODV considers link-disjoint multi-path during path discovery and provides more 
path selection to avoid malicious nodes. However, AWAODV would still create only one path in the 
end to transmit the data packet. The principle of AWAODV is to let the neighbor nodes of a 
wormhole node discover that the wormhole node has exceptional path attraction. Then the wormhole 
node would gradually be isolated by its normal neighbor nodes, and finally be quarantined by the 
network. Compared with AODV, AWAODV has the following four main differences in message type, 
message format, and routing table maintenance. 
Firstly, the RREQ in AWAODV has an additional “first_hop” field comparing with the RREQ of 
AODV, as shown in Figure 2(a). This field records the IP address of the first node receiving the 
RREQ after it is transmitted from the originator. This concept comes from the method of AOMDV 
[11] in finding link-disjoint multi-path. The intermediate nodes would not receive the RREQs passing 
the same first_hop. Meanwhile, multiple link-disjoint paths can be discovered. However, AWAODV 
is different from AOMDV [11]. AOMDV really discovers multiple link-disjoint paths, i.e., the routing 
table of the intermediate nodes can maintain multiple entries toward the same destination node, while 
AWAODV only considers as many link-disjoint paths as possible during path discovery to avoid 
wormhole nodes, but finally would create only one path, i.e., the routing table of the intermediate 
nodes only maintain one entry toward the destination node.  
Secondly, compared with AODV, AWAODV has one more routing message type called RREP_DEC 
(Route Reply Decision) message. RREP_DEC has the same fields of RREP, and is differentiated only 
with a different code assigned to the type field. In AWAODV, based on the multi-path algorithm, 
when the originator receives multiple RREPs, it would choose a neighbor node with its anomaly 
value within the threshold value and with minimum hop count among all the neighbors transmitting 
the RREPs to create a forward route toward the destination and send out the RREP_DEC. The 
intermediate nodes would forward the RREP_DEC along the forward route, till the RREP_DEC 
reaches the destination. An intermediate node receiving the RREP_DEC is a node that deprives the 
route. Hence, the main function of the RREP_DEC is to enable the intermediate nodes to increase the 
anomaly value of the neighbor node (next hop to destination) on the forward route. That is to say, one 
node having received more RREP_DEC means it deprives routes for more times, and its anomaly 
value is higher comparing to its neighbor nodes. In AWAODV, the anomaly value is defined as 
(number of RREP_DEC) / (number of RREP + 1), representing the probability of a node among 
multiple nodes on the link-disjoint routes that send RREPs back to the originator to be finally chosen 
by the originator for transmitting the data packet. Higher anomaly value means higher possibility of 
the node being a wormhole node.  
Thirdly, as shown in Figure 2(b), the routing table of AWAODV has added “first_hop” to meet the 
is because each node would calculate the anomaly values of its neighbor nodes, and if one 
intermediate node replies the RREP, all the next intermediate nodes on the path toward the 
destination would be unable to calculate the anomaly value properly. Hence, to let the RREP go 
through each node on the path, only the destination can reply RREP.  
2. In order to discover as many link-disjoint routes as possible to avoid wormhole nodes, comparing 
to AODV which uses a 2-tube, (originator IP, broadcast ID) to judge if the RREQ is the same, 
AWAODV uses a 3-tube, (originator IP, broadcast ID, first_hop) to judge if the RREQ is the same. 
Duplicate RREQs would be dropped directly. The node receiving the RREQ would firstly judge if it 
is the destination node. If not, it is an intermediate node. For an intermediate node, it must process 
RREQs with identical originator IP and broadcast ID, but different first_hop as follows: if the hop 
count of the RREQ is larger than the hop count in the corresponding entry of the routing table 
(having the same originator IP), the RREQ shall be dropped directly; otherwise, the node shall create 
a new entry in the routing table (multiple reverse route, with the same originator IP but different 
first_hop), put the RREQ data into this entry, and then drop the RREQ. On the other hand, for the 
destination node it shall check if the originator sequence number in the RREQ is smaller than the 
sequence number of any entry in the routing table with the same destination IP. If yes, the RREQ 
would be dropped; otherwise, the destination would reply each RREQ received, in spite of the values 
in its hop count or first_hop fields, and send an RREP back to the originator along the reverse route in 
the form of unicast. 
See Figure 4 for example, in which s and d respectively represent the source and the destination, the 
gray lines represent the RREQ broadcasting traces, the letters in the blue boxes represent the 
first_hop of the RREQ, and the red numbers at the arrowheads represent the sequences of the RREQ 
arrivals. After a, b and c receive the RREQ, as the hop count in the RREQ is 1, they know that they 
are neighbor nodes of the originator, and therefore would put their own IP addresses into the first_hop 
field of the RREQ, and broadcast it further to next nodes after adding 1 to the hop count. Node f first 
receives an RREQ from node b, creates a reverse route (hop count = 2), and continue to broadcast it 
after adding 1 to the hop count. Then f receives an RREQ from node a, this RREQ has the same 
originator IP and broadcast ID as the previous RREQ, but different first_hop, f would still process 
this RREQ. As the hop count is smaller than or equal to the hop count (i.e., 2) in the entry of the 
routing table, it would create another reverse route to node a and then drop the RREQ. In sequence, 
node h receives an RREQ from e, f, and I, separately. It first receives an RREQ from e, creates a 
reverse route, and continues to broadcast it after adding 1 to the hop count. Then, it receives an 
RREQ from f, as the RREQ has the same originator IP & broadcast ID but different first_hop, and the 
hop count of the RREQ is not larger than (i.e.,<=) the hop count (i.e., 3) in the routing table, h would 
create a new reverse route and then drop the RREQ. At last, it receives an RREQ from i, though the 
first_hop is the same, the hop count (i.e., 4) is larger than the hop count (i.e., 3) in the current 
corresponding entries (created due to the previous two RREQs from e and f), node h would directly 
drop the RREQ without creating a reverse route.  
 
s
a
c
b
d
e
g
f
h
i
j
a
a
b
c
c
b
b
k
a
b
c
c
c
c
c
a
flooding RREQs
d
source node
destination node
x first_hop ID in RREQ
the rth arrival RREQ to node n
1
2
1
2
1
1
1
2
2
2
3
3
n
r
 
Figure 4 Illustrations for RREQ processing in AWAODV 
 
3. In AWAODV, only the destination can reply the RREP. No matter how many RREQs are received, 
the destination shall reply the RREPs one by one unless the sequence number is smaller than the 
 
Figure 6 RREP_DEC forwarding and routing table updating in AWAODV 
 
 
Figure 6 shows an example. Firstly, s firstly discovers the neighbor node on the forward route to d, 
i.e., node b, add 1 to the RREP_DEC count in the entry with the destination being b, and then 
transmit the RREP_DEC to b. After receiving the RREP_DEC from s, b would confirm if the 
originator sequence number of the packet is smaller than the destination sequence number in the entry 
in the routing table with its destination being s. If yes, it would drop the RREP_DEC; otherwise, b 
would add 1 to the RREP_DEC count of the next hop (node f) on the forward route in the routing 
table, and transmit the RREP_DEC to f. The following nodes would do likewise. When the 
destination node d receives the RREP_DEC, it can drop the packet without any processing.  
Figure 6 has also indicated the routing table entries of the nodes. The yellow (or light gray in black 
and white print) entries represent entries created through receiving hello messages from neighbor 
nodes at the beginning of network deployment. The heavy gray entries represent entries of the reverse 
route created through receiving the RREQ. The white entries represent entries of the forward route 
created through receiving the RREP. 
  
3. EXPERIMENTAL RESULTS 
This research used ns-2 [12] for simulation. Two wormhole nodes were considered, in the 
experiments, as shown in Figure 7. In the figure, wormhole nodes are marked by squares. The tunnel 
necessary for wormhole attacks was simulated through several so called tunnel nodes executing a 
special protocol. There are 3 tunnel nodes in Figure 7. After receiving an RREQ/RREP, the wormhole 
nodes would change it into WRREQ/WRREP, a format that can only be recognized by tunnel nodes, 
which can pass quickly between the tunnel nodes without increase of the hop count. After receiving the 
WRREQ/WRREP, the wormhole node(s) on the other end(s) would change it back into the ordinary 
RREP/RREQ format. 
  
 
 
AWAODV can effectively avoid wormhole attack nodes or successfully reduce packet loss rate 
during the routing process through modifying the AODV routing protocol under no support of extra 
hardware. Above Section 1 mentioned related works at present in relation to detection or (and) 
prevention of wormhole attacks, which can be divided into three categories: (1) merely modifying the 
routing protocol [4][5], (2) modifying the routing protocol and using extra hardware [1][6][7], and (3) 
deploying intrusion detection node with or without hardware support [8][9]. Table 1 is a comparison 
of assumptions and accomplishments between the AWAODV proposed in this paper and other related 
works. Unlike [1][6] [7][8][9] which need extra hardware facility to reduce threat from wormhole 
attacks, [4] does not need extra hardware facility, but still need a loose time synchronization 
mechanism. The methods proposed by [5][8] can only defend against in-band wormhole attacks, but 
cannot defend against out-of-band wormhole attacks. The AWAODV proposed in this paper can 
defend against threats from both of the above wormhole attacks.  
 
 
4. CONCLUSIONS 
This paper proposed a routing algorithm called AWAODV (Anti-Wormhole AODV) for MANETs to 
defend against wormhole attacks. During path discovery, AWAODV considers multiple link-disjoint 
paths, so as to avoid possible wormhole nodes, but in the end still use only one path to transmit the 
data. According to the experimental results of ns2, in the case of two wormhole nodes, AWAODV can 
improve the packet loss rate by 27%, comparing to AODV. Compared to other related works, the 
proposed protocol has more merits; the important one is that it achieves the degradation in packet loss 
rate while the MANET is wormhole attacked, without any hardware support.  
 
 
ACKNOWLEDGMENTS 
This work was supported in part by the National Science Council, project no.: NSC 
96-2221-E-130-009 and 97-2221-E-130-014. 
 
REFERENCES 
 
[1] Issa Khalil, Saurabh Bagchi, and Ness B.Shroff, “LITEWORP: A Lightweight Countermeasure 
for the Wormhole Attack in Multihop Wireless Networks,” In the Proceedings of the 2005 
International Conference on Dependable Systems and Networks (DSN’05), 2005. 
[2] M.Zapata and N. Asokan, “Securing Ad-hoc Routing Protocols,” in the Proceedings of the ACM 
Workshop on Wireless Security (WiSe), Sept. 2002. 
[3] Kimaya Sanzgiri, Bridget Dahill, Brain Neil Levine, Clay Shields, and Elizabeth Belding-Royer. 
“A Secure Routing Protocol for Ad hoc Networks,” in the Proceedings of the 10th IEEE international 
Conference on Network Protocols (ICNP), November 2002. 
[4] Gunhee Lee, Dong-kyoo Kim, and Jungtaek Seo, “An Approach to Mitigate Wormhole Attack in 
Wireless Ad Hoc Networks,” in the Proceedings of the International Conference on Information 
Security and Assurance, pp. 220-225, 2008. 
[5] Xu Su and Rajendra V. Boppana, “On Mitigating In-band Wormhole Attacks in Mobile Ad hoc 
國科會補助計畫衍生研發成果推廣資料表
日期:2011/09/30
國科會補助計畫
計畫名稱: 行動隨意無線網路上防禦蟲洞攻擊之研究
計畫主持人: 蘇民揚
計畫編號: 99-2628-E-130-003- 學門領域: 資訊安全
無研發成果推廣資料
Su, ’WARP: A 
Wormhole-Avoidance 
Routing Protocol by 
Anomaly Detection in 
Mobile Ad Hoc 
Networks, ’
Computers &amp ；
Security, Vol. 29, 
No. 2, pp. March 
208-224, 2010. 
研究報告/技術報告 0 0 0%  
研討會論文 3 3 100% 1.Ming-Yang Su, ’
Defending against 
Wormhole Attacks in 
Mobile Ad Hoc 
Networks, ’ 2011 
International 
Conference on 
e-Commerce, 
e-Administration, 
e-Society, 
e-Education, and 
e-Technology (e-CASE 
&amp； e-Tech 2011), 
Tokyo, Japan, 2011.
2.Ming-Yang Su and 
Kun-Lin 
Chiang, ’Prevention 
of Wormhole Attacks 
in Mobile Ad Hoc 
Networks by Intrusion 
Detection Nodes,’ 
International 
C f
