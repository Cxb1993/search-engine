 2
中文摘要 
隨著低功率微機電與無線通訊等技術的進步，許多學術機構和企業都積極在
開發各式各樣的感測器或無線節點，因應用目的或開發單位不同，其大小、外觀
和附加的功能也有殊異。由具無線通訊和基本運算能力的節點所組成的網路可統
稱為MANET (mobile ad hoc networks)，其本身就是前瞻的研發議題。因為這類網
路天生的特性，如動態的網路拓樸、非常有限的系統資源等等，為其發展帶來很
多挑戰。因此本計劃對於可靠度與穩定度的議題進行深入探索，並提出從理論面
到實作面的解決方案。我們相信經由發展這方面的關鍵技術，可有效解決未來更
廣泛應用無線隨意感測網路時的障礙。 
在新一代的網路架構中，不但會存在獨立的 MANET 環境，也會出現與不斷
演化的大型網路(如 Internet 或 3G/4G網路)相連結的MANET 網路。在這應用下，
使用者經由手持裝置可以隨時隨地接收或分享資訊串流。由於這類網路會大大增
加維護系統可靠度與穩定度的困難度。基本上，資料備份可以有效建構具有容錯
能力的分散式應用系統。其基本原理是在不同節點上同時擁有數份資料複本，如
果原先負責服務的節點有錯誤發生，則改由其他有資料複本的節點接手。此外，
群組成員的加入維護或是訊息廣播等功能，都與系統的穩定性和可擴充性密切相
關，在實際應用層面的考量上，由於分散式計算環境潛在的不同步性，使得我們
無法精確的預估不同裝置間通訊延遲、時脈偏移與執行時間的上限。眾多的研究
指出，與資訊可靠性相關的問題，將變得極複雜和困難。為了本計劃更具有實用
價值，我們將致力於研究在分散式環境下錯誤偵測服務以及群組成員協定等基礎
問題的解決之道。 
近年來，不同規模的企業、組織與政府機構都高度依賴資訊化作業以維持其
日常業務運作。然而，享受資訊科技便利、網際網路應用蓬勃發展的同時，所有
企業也面臨了多元化安全威脅、攻擊損害不斷擴大等負面事件的影響，使得資安
相關議題持續發酵。 
本子計畫發展出治本的 Web 應用程式資安防護機制，利用 Web 應用程式之
程式碼檢測工具，以靜態分析技術解析原始碼中的程式弱點，及早發現 Web 應
用程式的資安漏洞，包括 XSS 與 SQL Injection 等嚴重資安問題，而開發人員亦
可利用此工具知悉漏洞如何發生，以及如何撰寫安全程式碼，避免日後可能的資
安風險與損失。 
本計畫以高可靠無線網路暨安全訊息通訊之研究為主軸，我們仔細觀察並
擬定三項子題目，做為研究主題：(1)  在移動無線網路環境下動態基礎結構之可
靠度；(2)  評估並解決隱私暨安全管理；(3)  實際可行之Web應用軟體安全性驗
證。 
 
關鍵字：無線隨意網路、錯誤偵測、系統可靠度、隨機分散式演算法、垃圾郵件、
Web 應用程式安全、程式碼漏洞、資訊安全 
 4
目錄 
壹、報告內容...................................... 5 
一、研究動機及目的 ...............................5 
二、研究方法 .....................................7 
三、研究成果 ....................................17 
四、結果與討論 ..................................22 
 
貳、參考文獻 .....................................25 
 
參、計畫成果自評................................. 31 
 
肆、可供推廣研發成果資料表....................... 33 
 
  
 
 
 
 
 
 
 
 6
我們是台灣第一家全心經營應用程式安全防護的軟體發展廠商，在發展技術
之初，我們訪談了國內外數十家客戶，以充分了解其問題與需求。此外，我們也
同時針對市場中現有資安解決方案進行全面調查與研究，結果發現了一個驚人的
事實：即使資安防護技術持續在演進，仍舊不敵攻擊手法的詭譎多變。目前資安
廠商提供的產品與技術僅著重於網路層的防護，防護對象包括主機、作業系統、
網路協定，卻忽略了近年資安攻擊已提升至應用層攻擊，攻擊對象改變為一般軟
體、Web 應用程式的問題，因此各家企業的安全大門洞開、安全漏洞百出。 
在了解現階段企業與政府機構在資安防護方面所面臨的困境與遭遇的難
處，我們認為有必要協助其發展具有自主與治本的 Web 應用程式資安防護能力，
而無需被動地在遭逢資安事件後才發現其程式弱點。軟體廠商可利用 Web 應用
程式之程式碼檢測工具及早發現 Web 應用程式的資安漏洞，而開發人員亦可利
用此工具知悉漏洞如何發生，以及如何撰寫安全程式碼，避免日後可能的資安風
險與損失，此種治本解決方案遠比治標的作法更為省時、省力、省錢！ 
由國外知名的軟體工程中心（Center for Software Engineering）提出的軟體開
發成本模型（圖 1）來看，如果企業越早發現軟體臭蟲與弱點，所花費的修補成
本就越低，每一個臭蟲的開發（或修補）成本可以相差二十倍之譜（5 美元與 100
美元之差異）。 
 
圖 1 不同階段的軟體修改成本 
 
我們充分體認應用層防護的重要性，因此提出一項前所未見的「Web 應用
軟體源碼弱點自動檢測技術」創新安全防護架構，其目標並非取代市場中現有的
硬體式安全產品，而是更進一步在事前將所有安全威脅擋在門外，使得駭客與不
肖份仔無法為所欲為。 
 8
的，主要鑑於垃圾郵件已變成每日生活的一部份，為解決此迫切議題，我們檢
視既有的防堵垃圾郵件之解決方案，同時並探討為何既有的方案並不能有效解
決當前的垃圾信件問題。我們發現，大部分的垃圾郵件對於方法拆解(munging)
及過濾(filtering)都可以規避，而對列表(listing)及修正(shaping)則容易誤判，挑戰
(challenging)則不夠方便，身份轉換(identity‐hopping)則目前尚未普遍。因此，我
們提出的作法具有一定的實用價值。 
最後，在第三個子題─實際可行之 Web 應用軟體安全性驗證方面，我們所發
展出的解析器為「結合樹擴張與樹剪枝之高效能解析器」。此技術已申請專利，
創新性是能利用樹擴張來同時確保程式碼的完整性與有效性，再利用樹剪枝簡化
不必要的節點，重組結構樹以達成本最佳化。採用上述的創新作法能讓解析器的
執行速度大幅提昇，以達到對效能的要求。 
 
2.1. 分散式隨機容錯演算法 
由於無線網路容易受到周遭環境的干擾，資料傳輸經常會有中斷的情形發
生，另外各無線節點若是沒有持續的電力支援，能源消耗對整個系統的存活時間
及執行效率造成影響 [89]。考慮電力支援的因素，在設計容錯演算法時，必須盡
量避免大範圍的傳輸及運算，因在本研究中，我們主要採用分散式演算法，將各
節點所需要消耗的計算能力與其他資源降低，延長整體網路的壽命。利用隨機行
走(random walk) [90]的個性，一方面可以避免不必要的資料流量，提昇網路擴充
性 [90]，另一方面，隨機的特性可以有效地適應網路變動性，使整體的容錯能力
更進一步的提昇。 
目前關於隨機行走在同儕網路上的研究相當多，不過大多數研究都是針對於
傳統的有線網路架構，無法應用於無線環境。在文獻 [91][92]中所提出的問題及
概念與我們相當類似，其中 [91]利用隨意行走來解決同儕應用在無線網路下的資
料搜尋及傳輸問題，而 [92]則是將該問題進一步的利用布朗運動(Brownian 
motion)模型來分析；由於單純的隨機行走容易受限於某一個特定區域，造成過
多記憶體及能源消耗，為了避免這個問題，在本研究中，採用「不重複行走」
(self-avoiding walk) 的方式。不重複行走主要的概念在於執行過程中，會自動避
免去行走重複的路徑，以減少不必要的記憶體及能源消耗，使得容錯系統具有更
好的執行效能。 
 
2.1.1. 隨機程序之證明技巧 
馬可夫鏈為一具有無記憶(memoryless)特性的隨機程序，其收斂時間(mixing 
time)代表馬可夫鏈進入一個穩定分佈(stationary distribution)所需要的時間，以隨
機演算法的角度，mixing time即代表演算法使系統進入穩定狀態(legitimate 
configuration set L)的所需時間(請參見文獻 [93]，ε-absorption time)。傳統上，
coupling這個證明技巧經常拿來推導馬可夫鏈在有限狀態空間(以Ω表示)中的收
 10
 
圖 2  SRSO 示意圖 
 
圖 3 為SRSO修復機制的虛擬程式碼，toi表示偵測時間的設定值，cp(rwi)表
示目前隨機行走的偵測節點，ftw(cp(rwi))則代表拓樸比重，用來決定鄰節點選擇
的方式。基本上，每次行走有的ci機率停留在原地不動，而有(1 − ci)的機率會依
照ftw選定一個鄰節點來行走；為了保持不重複行走的特性，在這裡我們使用了
popping的動作(如 圖 4 所示)，當選擇cp(rwi)到一個已經走過的節點，會將自己
彈出，退回到上一個節點重新行走。此外，為了避免過多的能量消耗，隨機行走
的最大上限步數設定為L。 
 
 
圖 3  SRSO 之虛擬程式碼 
 
系統的執行效能可藉由一些虛擬架構(例如 dominating set)或是最佳化(例如
重複物件搜尋等)來獲得提昇，然而，為了配合各種不同的應用，在這裡我們並
 12
 
圖 5 全球電子商務市場規模 
 
而 WEB 2.0 潮流的崛起，更進一步將傳統個人電腦或是大型企業或政府部
門內部的傳統應用軟體推向 Web 化，以便與外部用戶進行更廣泛的連結與資訊
交換工作，使得 Web 一舉成為 Internet 上最熱門的應用。 
我們看到自從 Tim O'Reilly 提出「Web 2.0」這個名詞後，近兩年來「Web 2.0」
的概念已在全球產業持續蔓延中，這項網站新模式儼然成為一場新網路革命。目
前擁有「Web 2.0」模式與技術的網站，也被視為未來最具成長力與爆發力的網
路新勢力。 
從以前 Web 1.0 的「瀏覽網頁為主、作業系統即平台」演化至 Web 2.0 的「應
用服務為主、網路即平台」、「Software as a Service（SaaS）」正足以代表這個新
的應用模式，網站經營模式也朝向以使用者為中心的趨勢發展。因此未來將出現
許多以「服務」為導向的 Web 2.0 網站，將網路建構為開放的使用平台，建立純
粹提供「服務」而非買賣套裝軟體的經營法則，並與使用者產生更多的互動性與
社群概念，讓網站的服務朝多元化發展。如果能夠加入創新的商業模式與應用服
務，相信這將是未來網路公司邁向 Web 2.0 的時代最為關鍵的核心競爭力。 
2.2.2. 掌握安全威脅演化脈絡：病毒Æ蠕蟲Æ弱點攻擊ÆWeb 應用程式攻擊 
早期，電腦系統的主要資安威脅來自電腦病毒（virus）的感染，其破壞範圍
較為有限，而隨著 Internet 的風行，區域網路式大型主機逐漸式微，進而帶來了
可透過網路自行繁殖與散播的蠕蟲（worm）。 
稍後，駭客攻擊手法更加精進，因而發展出可癱瘓網路系統正常運作的技
術，如阻斷服務攻擊（Denial of Service，DoS）。近年來，有許多攻擊是以入侵
軟硬體漏洞為手段，以達到任意竊取機敏性資料（國家機密或個人隱私）或濫用
 14
進入企業內部；Web Services 採用的傳輸協定為 XML/SOAP 和 HTTP，惡意程式
碼或蠕蟲等可藉由此通道穿過防火牆。在此情況下，用戶端的安全防護機制已不
足以阻擋入侵行為的發生。 
許多關於網路安全的研究報告（包括 Gartner、Forrester 以及 IDC）指出：
Web 應用程式攻擊已成為主流網路攻擊，主要安全漏洞或威脅之增加亦歸咎於
Web 應用程式之弱點。最知名的應用層攻擊案例子是 2005 年七月號轟動一時的
美國信用卡代理公司 CardSystems 遭駭客入侵，導致 2,200 萬張 VISA 卡、1,390
萬張萬事達（Master）卡，以及美國運通（American Express）卡和 Discover 卡
等逾 4,000 萬筆信用卡帳戶資料外洩的事件。當時，駭客就是利用一種普遍的
Web 應用程式之漏洞—SQL Injection，入侵 CardSystems 資料庫，導致這家年營
業額超過 2,000 萬美元之公司，不但立刻被 VISA、Mastercard、American Express
等重要客戶解約，更面臨鉅額之賠償以及美國政府之告訴 [13]，最終被
PayByTouch 購併。 
我們在彙整與分析過去所發生的資安事件（1999 年至 2006 年第二季）時發
現，與 Web 應用程式相關的資安事件發生頻率日益升高。許多專業資安入口網
站，包括 SecurityFocus [2]、Common Vulnerability and Exposures（CVE）[3]，以
及 Web 應用程式安全協會（Web Application Security Consortium; WASC）[4]，所
公佈的調查數據顯示，Web 應用程式攻擊次數已由最早 1999 年的 eBay 
“EBayla＂ cross-site scripting（XSS）單一弱點事件[1]，於 2005 年迅速暴增達
59 倍之譜（見圖 7）。知名企業如 Google、雅虎（Yahoo!）與微軟（Microsoft）
素以高水準之軟體工程品質著稱，然而其應用程式近來也經常被發現存在有大量
資安漏洞，例如 Google Gmail 在 2006 年[5]、2005 年[6]與 2004 年[7]出現的
cross-site scripting（XSS）弱點、Yahoo Mail 在 2006 年[8]與 2005 年[9]的 XSS 弱
點、Microsoft Hotmail 在 2006 年[10]與 2005 年[11]的 XSS 弱點，以及 Microsoft 
Passport 在 2001 年[12]的 XSS 弱點。 
1
5 6 4
9
17
59
34
0
10
20
30
40
50
60
Incidents
(/year)
1999 2000 2001 2002 2003 2004 2005 2006(2Q)
Year
Web Application Security Incidents
 
圖 7  Web 應用程式資安事件 (1999-2006) 
由此可見，Web 應用程式之資安防護將繼病毒、蠕蟲，以及網路入侵等問題
 16
表 1  一般防火牆與應用層防火牆之比較 
問題/發生時間 解決方案 主要攻
擊層 
攻擊來源比
例 
主要廠商 
駭客來自惡意 IP
位址 
1999 – 2001 
清單式防火牆 (封
包比對) 網路層 
駭客傳送惡意封包 
2000 - 2002 
傳輸層防火牆 (封
包過濾) 
網路層 
駭客傳送惡意字串 
2000 - 2002 
應用層防火牆、入
侵偵測系統、入侵
防禦系統 (封包重
組) 
網路層 
Cisco、Juniper、Check 
Point、Netscreen、
SonicWall、Watch 
Guard、Radware、
ISS、Intrusion.com、
Okena Entercept 
駭客傳送惡意檔案 
2000 - 2002 
閘道器防毒/防火
牆 (特徵比對) 系統層 
30％的攻擊
來源 
Symantec、Trend 
Micro、McAfee、
Kaspersky、F-Secure 
駭客傳送惡意參數
與指令 
2001 -  
Web應用程式防護 
(程式碼分析) 應用層 
70％的攻擊
來源 
我們的解決方案 
 
 18
訊息傳送是能量消耗的主因，我們必須考慮到通訊的成本。令Elb表示成功傳送
一個封包所需要傳送次數，而Plb則表示傳送單一封包成功的機率(Plb的相關討論
可參見文獻 [97])，由於E[Elb] ≤ ∑i=1~∞iPlb(1 − Plb)i−1 = Plb−1，我們可以推得在不重
複行走機制中，維持通訊所需要的資訊量為O(L / Plb)。除了記憶體消耗以及通訊
成本的考量，還需要考慮演算法收斂時間，我們利用path-coupling的方法，來求
得演算法收斂時間的上限值。因為與三期研究的演算法類似，由於推導過程相當
繁複，在這裡只列出推導後的結論 1：SRSO演算法的收斂時間小於ln(2nε−1) / (1 − 
β)，其中ε為常數，且 0 < β < 1。 
 
3.1.2. 模擬結果 
為了確實瞭解系統參數L’ (平均路徑長度)、平均收斂時間t’與系統規模n的關
係，我們模擬n個節點在 1×1 單位大小的方形區域中，執行不重複行走的情形，
依照文獻 [99]的證明，若要維持d-connectivity的圖形的，節點的傳輸半徑必須符
合以下不等式rn ≥ √((logn + (2d − 1)loglogn + ξ) / πn)，為了避免關節點的存在，
不失一般性，我們設定d = 2, ξ = 0。另外，圖中的實驗結果為 1,000,000 次不重
複行走的平均值。事實上，任何一種隨意行走都會收到網路拓樸的影響，首先我
們比較不同拓樸下對系統的參數的影響，如 圖所示，當d值越大時，系統參數L’
可以設定的越低，收斂時間也越短，然而，當d = 1 時，調和時間卻出現波動情
形，這是由於連結度(degree)過低時，隨意行走會被限制在某一個範圍內，造成
調和時間的不穩定。為了避免這個問題，我們實驗了三種拓樸比重的機制：隨機
制(random)、加權制(weighted)以及平衡制(balanced)。選擇鄰節點時，隨機制任
意選擇，每個節點被選到的機率都相等；加權制則是依照鄰居被選過次數的不
同，而有比重關係，基本上，被選過越多次的鄰居節點再次被選到的機率越低；
而平衡制則與加權制類似，但次數最少的鄰居一定會被選到，這麼作可以盡量使
得隨意行走的區域擴大，減少重複選擇的節點。如 圖 7 所示，加權制跟平衡制
的情形下，收斂時間都比隨機制要短上許多，不過由於加權制目的在於擴大搜尋
範圍，所以會有較大的L’值。我們最後做的模擬是關於同時發出κ個不重複行走
時，L’及收斂時間的改變情形。如 圖 8 所示，L’的大小以及收斂時間會隨著發
出不重複行走的個數增加而呈現指數降低的趨勢，也就是說L’ ∝ ed’/κ、t’ ∝ ed”/κ，
其中d’及d”為常數；結合之前的討論，可推得當κ個行走同時執行時，維持通訊
所需資訊量與κ ed’/κ成正比。 
 
 
                                                      
1 若想瞭解完整的分析過程及 coupling rule，可參見文獻[98]。 
 20
3.2. 網頁腳本語言解析器 
早期的軟體驗證為人所詬病的是執行效能始終無法提升，解析器的速度扮演
關鍵的角色。由於程式語言的語法解析與諸多變數狀態，會消耗大量的運算成本
與記憶體資源，如何有效降低解析成本攸關解析器的執行速度。 
新的解決方案需具備客制化的原型解析器( parser)，嵌入器（includer）以及
轉換器（transformer）。這種實作能讓解析器的執行精準度與速度大幅提昇，以
達到客戶對效能的要求。 
開發人員普遍不具備撰寫安全程式碼的能力，他們極仰賴檢測工具來發現並
解決資安漏洞。如果檢測工具所呈現的資安漏洞是不明確的，那麼開發人員不僅
無法進行修補，甚至連瞭解為什麼會是個資安漏洞都是令人頭疼的事情 
從 5W1H（WHAT：何種漏洞、WHY：為何會出錯、WHEN：何時會發生、
WHERE：出錯的位置、WHO：何人撰寫，以及 HOW：如何修補）方式來建構
檢測報告之完整資訊。 
另外，在漏洞修補建議方面，因為大部分的開發人員普遍不具備撰寫安全程
式碼的能力，弱點追蹤與漏洞修補指引能協助其撰寫修補程式，追蹤函數彼此之
間的交互參照關係，以釐清弱點之始末。 
3.3. 語法暨設定弱點分析器 
目前現有資安廠商（如 FoundStone）普遍提供人工方式來檢視程式碼的安全
性，但人工檢測無法確保仔細涵蓋弱點資料庫的每一筆安全規則，其漏報率與誤
報率偏高；而字串比對為主、正規表示法的檢測工具雖漏報率大幅降低，但其反
效果是驚人的誤報率，造成使用者無法將資源集中在最迫切需要處理的資安漏
洞，反而因大量的錯誤警訊而忽略嚴重的程式弱點。 
在這方面，我們採取軟體工程領域中軟體驗證的作法，以自動靜態分析
(automated static analysis)技術，不影響程式之執行，於編譯期（compile-time）計
算出程式在執行時（runtime）所有可能的狀態。在過去此部分的實作常受限於
狀態擴張（state explosion）之問題而無法有效驗證較大之程式碼。為避免此障礙，
我們在分析 Web 應用程式之程式碼之前，首先將 Web 應用程式之弱點正規化
（formalize）為安全資料流（secure information flow）之問題。我們先解析出程
式碼中危險的進入點，並標示所有惡意函示庫，這種作法讓我們將複雜的 Web
程式碼資安漏洞正規成一種自動狀態機，即 Latice 模型。正規化之後，我們將
1986 年 Strome 與 Yemini 所提之技術（當時用於驗證軟體之可靠性）加以改良，
配合我們研究的語法暨設定弱點資料庫，發展出可利用靜態之分析來減少動態分
析之需求；換言之，利用靜態分析，我們準確地標出程式中需要動態分析之部分
（也就是可能有弱點之部分），在程式尚未執行時，我們就能識別這些脆弱點需
要特別處理，否則可輕易遭受外部惡意使用者的攻擊，譬如插入惡意腳本字串，
含 XSS 跨站腳本攻擊或 SQL 資料飲碼攻擊。 
 22
• HTML 用於建立 Web 表單並確認應用程式其他部分使用的欄位。 
• JavaScript 程式碼是執行 Ajax 應用程式的核心程式碼，幫助改進與伺服
器應用程式的通訊。 
• DHTML（Dynamic HTML）用於動態地更新表單。我們將使用 DIV、SPAN
和其他動態 HTML 元素來標記 HTML。 
• 文件物件模型 DOM 用於（透過 JavaScript 程式碼)處理 HTML 結構和 
(某些情況下）伺服器返回的 XML。  
 
 
4. 結果與討論 
在第一個子題部分，由於相關技術的進步和實際應用上的需求，無線隨意
感測網路在可預見的未來將有非常快速的發展。而可靠度與可擴充性的問題在
這類應用的研究上是非常關鍵的，若能掌握這方面的技術，就能在領域占有一
席重要的地位。事實上，由過往發展網際網路等系統的經驗可知，完善的關鍵
技術是建構高韌性與高穩定性應用系統不可或缺的核心。因為這領域的快速成
長，很多重要的關鍵技術都還處於探索的初期，不夠成熟和完備，或是受限於
目前的工程技術水準而難以預塑未來樣貌，因此更有進行這方面工作的必要。
另外參與人員將可獲得與容錯機制設計相關的背景知識，擁有實作分散隨機式
演算法和理論推導的經驗，並可學習如何使用適當的模擬工具和實驗平台來驗
證成果。 
在第二個子題部分，為達到有效遏阻及防堵，本計畫以多面向之防垃圾信
機制，包括(1)列表合法寄件者；(2)將郵件貼上標籤以及(3)挑戰可能的垃圾郵件
寄送者。我們提出的防垃圾信代理人(SRMA)與既有的郵件轉送代理程式(MTA)
拋棄式郵件位址(DEA)合作。此多面向整合的解決方案可以有效將垃圾郵件寄送
者阻擋在系統之外。 
在第三個子題部分，根據 CERT/CC 提供的統計數據，2005 年所揭露的資安
軟體弱點總量，已從 2000 年的 1,090 筆，成長至 5,990 筆。此數據佐證大部分軟
體設計者欠缺足夠資訊安全與程式安全之訓練，但又必須承擔 Web 網站快速發
展與頻繁改變之需求，造成目前 Web 網站與 Web 應用程式之資安漏洞百出，弱
點暴露無遺，讓駭客有可乘之機。然而，從現有資安防護解決方案的發展趨勢可
以發現，資安部署在實務上是與駭客攻擊手法有所落差。網路層資安防護（封包
過濾、埠號過濾）已過時，無法阻擋應用層攻擊，更何況有更多中小企業的 Web
應用軟體係自行開發，資安廠商根本無法為其量身訂作任何的攻擊特徵。也因
此，即使人人都建置各種形式的軟硬體防火牆與防毒軟體，資安事件的發生率仍
居高不下。 
 24
等待修補程式或者資安廠商更新攻擊特徵資料庫，軟體開發廠商無法瞭解那個軟
體造成那個漏洞，而又是那個程式的哪一行造成這個漏洞，是以喪失資安自主與
根治資安問題（治本）的能力。長年累月下來，我們發現客戶一般都已經習以為
常的接受測透測試、弱點稽核、購置防火牆、採用入侵偵測系統等資安防護方案，
而消極於採用治本解決問題的技術。也因此，即使諷刺的是「Web 應用程式的開
發廠商找不到資安漏洞，多半是駭客發現的。」，但由於現有資安廠商在過去從
來不如此教育使用者，用戶一般以為 Web 應用程式的資安問題都是駭客的手法
千變萬化，道高一尺魔高一丈，殊不知企業的軟體品質才是現有 Web 攻擊事件
頻傳的主要原因。我們因此在設計使用者介面的課題上，必須花費相當大的資源
去思考如何降低使用者的進入門檻與學習障礙，除了必須顧及開發人員對於進階
設定的需求，又必須同時結合一般使用者普遍對資安專業知識不熟悉的困境，而
必須提供其簡易使用的操作流程與使用者經驗。 
在這方面的努力，我們發現使用者多半沒有能力修補。但有別於作業系統或
商業應用軟體，用戶可以等待廠商定期地更新軟體修補程式，上網企業所使用的
Web 應用程式多半為自行開發（開發人力有限）或外包（維護時效較差），則漏
洞修補套件的開發時程可能會延長至數倍或更久。主要原因是一般企業在當初的
軟體開發生命週期（Software Development Life Cycle，SDLC）即沒有考慮軟體
安全這個面向，軟體人員不熟悉如何撰寫安全程式碼，也普遍缺乏撰寫安全軟體
的能力。是以，我們的檢測平台結合其開發環境的版本系統(譬如 SVN 或 CVE)，
讓開發團隊在撰寫程式碼的階段就能馬上知道是否存在資安漏洞，而非等到都整
合完畢出貨時才發現問題，屆時的修正成本就會較大，問題的關連性也較複雜。 
其次，我們設計簡易的操作介面，讓一般用戶直接上傳壓縮檔即可，然後即
可立即進行檢測，數分鐘後就可閱覽檢測報告，所有複雜的設定都以預設值進
行，避免繁複的使用者經驗降低一般使用者的使用意願。 
總的來說，在這個計畫中我們研發了高實用性的 Web 應用程式安全解決方
案，除了可以與其他子計畫結合，應用於提高網際網路服務之安全性外，我們相
信這裡所提出的技術與概念，還可以更進一步地套用在其他資訊安全服務的相關
應用中。 
 
 26
[20] J. Wu and H. Li, “A Dominating Set Based Routing Scheme in Ad Hoc Wireless 
Networks,” Proc. Third Int’l Workshop Discrete Algorithms and Methods for Mobile 
Computing and Comm. (DIALM), pp. 7-14, Aug. 1999. 
[21] L. Yin and G. Cao, “Supporting cooperative caching in ad hoc networks,” IEEE 
INFOCOM 2004, March 2004. 
[22] E. Cohen, S. Shenker, “Replication strategies in unstructured peer-to-peer networks,” 
Proceedings of ACM SIGCOMM, August 19-23, 2002, Pittsburgh, Pennsylvania, USA. 
[23] Q. Lv , P. Cao , E. Cohen , K. Li , S. Shenker, “Search and replication in unstructured 
peer-to-peer networks,” Proceedings of the 16th international conference on 
Supercomputing, June 22-26, 2002, New York, New York, USA. 
[24] I. Stoica, R. Morris, D. Karger, M. F. Kaashoek, and H. Balakrishnan, “Chord: A 
scalable peer-to-peer lookup service for internet applications,” ACM SIGCOMM, San 
Diego, CA, Aug. 2001. 
[25] Q. Zhang, F. Yang, W. Zhu, and Y.-Q. Zhang, "A construction of locality-aware overlay 
network: mOverlay and its performance," IEEE Journal on Selected Areas in 
Communications (JSAC), 22(1):18-28, January 2004. 
[26] S. Mukhopadhyay, D. Panigrahi and S. Dey, “Data aware, low cost error correction for 
wireless sensor networks,” Proceedings WCNC 2004, Atlanta, 21-25 March 2004. 
[27] R. Albert, H. Jeong, and A. Barabasi, "Error and attack tolerance of complex networks," 
Nature, vol. 406, pp. 378-382, 2000. 
[28] K.P. Birman et al., “Bimodal Multicast,” ACM Transactions on Computer Systems, vol. 
17, no. 2, 1999, pp. 41-88. 
[29] P.T. Eugster et al., “Lightweight Probabilistic Broadcast,” ACM Transactions on 
Computer Systems, vol. 21, no. 4, 2003, pp. 341-374. 
[30] G. Norman, “Analysing randomized distributed algorithms,” Validation of Stochastic 
Systems: A Guide to Current Research, LNCS 2925, August 2004. 
[31] 'EBayla' Bug Strikes eBay, 
http://wired-vig.wired.com/news/technology/0,1282,19207,00.html 
[32] SecurityFocus, http://www.securityfocus.com/ 
[33] Common Vulnerability and Exposures (CVE), http://cve.mitre.org/ 
[34] Web Application Security Consortium (WASC), http://www.webappsec.org/ 
[35] Bugtraq: Re: google xss, http://seclists.org/lists/bugtraq/2006/Apr/0213.html 
[36] Gmail Bug Exposes E-mails to Hackers, 
http://www.betanews.com/article/Gmail_Bug_Exposes_Emails_to_Hackers/1105561408 
[37] Gmail accounts 'wide open to exploit', 
http://www.theregister.co.uk/2004/10/29/gmail_vuln/ 
[38] Yahoo! Mail XSS Vulnerability, http://applesoup.googlepages.com/yahoo_mail_xss.txt 
[39] Yahoo mail Cross Site Scripting, http://www.morx.org/yahoo-XSS.txt 
[40] Microsoft MSN Hotmail : Cross-Site Scripting Vulnerability, 
http://seclists.org/lists/bugtraq/2006/Mar/0509.html 
[41] MSN flaw put Hotmail accounts at risk, 
http://news.com.com/MSN+flaw+put+Hotmail+accounts+at+risk/2100-1002_3-573444
8.html 
 28
[55] Goguen, J. A., Meseguer, J. "Security Policies and Security Models." In Proceedings of 
the IEEE Symposium on Security and Privacy, pages 11-20, Oakland, California, Apr 
1982. 
[56] Hallem, S., Chelf, B., Xie, Y., Engler, D. "A System and Language for Building 
System-Specific, Static Analyses." In Proceedings of the ACM SIGPLAN 2002 
Conference on Programming Language Design and Implementation, pages 69-82, Berlin, 
Germany, 2002. 
[57] Higgins, M., Ahmad, D., Arnold, C. L., Dunphy, B., Prosser, M., and Weafer, V., 
“Symantec Internet Security Threat Report—Attack Trends for Q3 and Q4 2002,” 
Symantec, Feb 2003. 
[58] Holzmann, G. J. "The Logic of Bugs." In Proceedings of the 10th ACM SIGSOFT 
Symposium on Foundations of Software Engineering, pages 81-87, Charleston, South 
Carolina, 2002. 
[59] Huang, Y. W., Huang, S. K., Lin, T. P., Tsai, C. H. “Web Application Security 
Assessment by Fault Injection and Behavior Monitoring.” In Proceedings of the Twelfth 
International World Wide Web Conference, 148-159, Budapest, Hungary, May 21-25, 
2003. 
[60] Huang, Y. W., Yu, F., Hang, C., Tsai, C. H., Lee, D. T., Kuo, S. Y. “Securing Web 
Application Code by Static Analysis and Runtime Protection.” In Proceedings of the 
Thirteenth International World Wide Web Conference (WWW2004), pages 40-52, New 
York, May 17-22, 2004. 
[61] Huang, Y. W., Yu, F., Hang, C., Tsai, C. H., Lee, D. T., Kuo, S. Y. “Verifying Web 
Applications Using Bounded Model Checking.” In Proceedings of the 2004 
International Conference on Dependable Systems and Networks (DSN2004), pages 
199-208, Florence, Italy, Jun 28-Jul 1, 2004. 
[62] Hughes, F. "PHP: Most Popular Server-Side Web Scripting Technology." LWN.net. 
http://lwn.net/Articles/1433/ 
[63] Kavado, Inc. “InterDo Version 3.0.” Kavado Whitepaper, 2003. 
[64] Krishnamurthy, A. “Hotmail, Yahoo in the run to rectify filter flaw.” TechTree.com, 
March 24, 2004.  Available at 
http://www.techtree.com/techtree/jsp/showstory.jsp?storyid=5038 
[65] Meier, J.D., Mackman, A., Vasireddy, S. Dunner, M., Escamilla, R., Murukan, A. 
"Inproving Web Application Security—Threats and Countermeasures." Microsoft 
Corporation, 2003. 
[66] Microsoft. “Scriptlet Security.” Getting Started with Scriptlets, MSDN Library, 1997 
http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dnindhtm/html/instantd
htmlscriptlets.asp 
 30
[84] Visa U.S.A. "Cardholder Information Security Program (CISP) Security Audit 
Procedures and Reporting as of 8/8/2003." Version 2.2, 2003. 
[85] Volpano, D., Smith, G., Irvine, C. “A Sound Type System For Secure Flow Analysis." 
Journal of Computer Security, 4(3):167-187, 1996. 
[86] Park, J. S., Sandhu, R. "Role-Based Access Control on the Web." ACM Transactions on 
Information and System Security 4(1):37-71, 2001. 
[87] Pottier, F., Simonet, V. "Information Flow Inference for ML." ACM Transactions on 
Programming Languages and Systems, 25(1):117-158, 2003. 
[88] Sabelfeld, A., Myers, A. C. “Language-Based Information-Flow Security.” IEEE Journal 
on Selected Areas in Communications, 21(1):5-19, 2003. 
[89] K. Sohrabi, J. Gao, V. Ailawadhi, and G. J. Pottie, “Protocols for 
self-organization of a wireless sensor network,” IEEE Personal Commun., 7(5): 
16-27, October 2000. 
[90] S.-J. Yang, “Exploring complex networks by walking on them,” Physical review 
E 71, 016107. 
[91] David Braginsky and Deborah Estrin, “Rumor Routing Algorithm For Sensor 
Networks,” WSNA, September 2002. 
[92] S. Shakkottai, “Asymptotic of Query Strategies over a Sensor Network,” IEEE 
INFOCOM, pp. 557-566, 2004. 
[93] L. Fribourg, S. Messika, and C. Picaronny, “Coupling and self-stabilization,” 
Distrib. Comput., 18, (3): 221-232, 2006. 
[94] R. Bubley and M. Dyer, “Path-coupling: a technique for proving rapid mixing in 
Markov chains,” Proc. IEEE FOCS, pp. 223-231, 1997. 
[95] K. Kothapalli, C. Scheideler, M. Onus, and A. W. Richa, “Constant density 
spanners for wireless ad hoc networks,” Proc. ACM SPAA, pp. 116-125, 2005. 
[96] M. Bawa, H. Garcia-Molina, A. Gionis, and R. Motwani, “The price of validity 
in dynamic networks,” Proc. ACM SIGMOD, pp. 515-526, Paris, France, June 
2004. 
[97] X. Zhang, N. F. Maxemchuk, “A generalized energy consumption analysis in 
multihop wireless networks,” Proc. IEEE WCNC, pp. 1476-1481, 2004. 
[98] Hong-Zu Chou, Szu-Chi Wang, Ing-Yi Chen, and Sy-Yen Kuo, “Randomized 
and Distributed Methods for Reliable Peer-to-Peer Data Communications in 
Wireless Ad Hoc Networks,” to appear in IET Communications 
[99] P.-J. Wan and C.-W. Yi, “Asymptotic critical transmission radius and critical 
neighbor number for k-connectivity in wireless ad hoc networks,” Proc. ACM 
MobiHoc, pp. 1-8, 2004. 
 
 
 
 32
Networks with  Imperfect Vertices,"  IEEE  Trans.  on Reliability, Vol.  56, No.  2,  pp. 
288‐300, June 2007.  
(12) C. Y. Huang, S. Y. Kuo, and M. R. Lyu, “Measurement and Assessment of 
Testing-Effort Dependent Software Reliability Growth Models,” IEEE Trans. on Reliability, 
Vol. 56, No. 2, pp. 198-211, June 2007 
(13) S. C. Wang, H. Z. Chou, D. S. L. Wei, and S. Y. Kuo, "Fundamental Performance 
Limits of Data Replication for Peer-to-Peer Applications in Wireless Ad-hoc Networks," 
IEEE Journal of Selected Areas in Communications (J-SAC), Vol. 25, No. 1, January 2007, 
pp. 211-221. 
(14) S.  C.  Wang,  D.  S.  L.  Wei,  and  S.  Y.  Kuo,  “A  SPT‐Based  Topology  Control 
Algorithm for Wireless Ad Hoc Networks,” Computer Communications, special issue 
on  IPv6:the  Next  Generation  Internet  Protocol,  Vol.  29.  issue  16,  Oct  2006, 
pp.3092‐3103. 
(15) M.  W.  Wu  and  S.  Y.  Kuo,  "Examining  Web‐based  Spyware  Invasion  with 
Stateful Behavior Monitoring,"  Proceedings  of  the  2007  Pacific Rim  International 
Symposium on Dependable Computing (PRDC'07), Dec. 2007, Melbourne, Australia 
(16) H. Z. Chou, S. C. Wang and S. Y. Kuo, "Randomized Distributed Algorithm for 
Peer‐to‐Peer Data Replication  in Wireless Ad Hoc Networks,"  Proceedings  of  the 
2007  Pacific  Rim  International  Symposium  on Dependable  Computing  (PRDC'07), 
Dec. 2007, Melbourne, Australia 
(17) S.  Y. Dai  and  S.  Y.  Kuo,  "MAPMon: A Host‐Based Malware Detection  Tool," 
Proceedings  of  the  2007  Pacific  Rim  International  Symposium  on  Dependable 
Computing (PRDC'07), Dec. 2007, Melbourne, Australia 
(18) C. M. Yu, C. S. Lu, and S. Y. Kuo, "Habitual Behavior‐Based Opportunistic Data 
Forwarding  in Wildlife Tracking," Proceedings of 4th IEEE International Symposium 
on Wireless Communication Systems (ISWCS'07), Oct. 2007, Trondheim, Norway 
(19) H. Z. Chou, S. C. Wang, and S. Y. Kuo, "Randomized Distributed Algorithm for 
Peer‐to‐Peer Data Replication  in Wireless Ad Hoc Networks,"  Proceedings  of  the 
2007  International Conference on Dependable Systems and Networks  (DSN‐2007), 
June 2007, Edinburgh, UK. 
(20) C. M. Yu, C. C. Li, C. S. Lu, D. T. Lee and S. Y. Kuo, "Attack Probability Based 
Deterministic Key Predistribution Mechanism for Non-Uniform Sensor Deployment," 
Proceedings of the Fourth Workshop on Wireless Ad hoc and Sensor Networks 
(WWASN2007), June 2007, Toronto, ON, Canada. 
