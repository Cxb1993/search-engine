中文摘要 
關鍵詞：二元圖檔，完整性保護，浮水印，細線化，黑(白)模板 
 
    我國已於民國91年正式通過電子簽章法，這不但讓電子簽章技術(含數位簽章技術)有
了法源上的依據，更使得電子簽章的技術及其應用在社會上更受到大家的重視。電子簽章
的應用層面非常的廣泛，舉凡電子貨幣、電子銀行、電子投票、電子公文、軟體保護及多
媒體內容的保護等等，都會運用到簽章的技術。在各種應用當中，例如：電子貨幣、電子
投票…等，往往都需要大量的簽章以及驗證的動作來保障貨幣與選票的合法性。應用系統
的需求除了安全性之外，效能也是影響服務品質的重要關鍵，因此快速且安全的整批式驗
證系統，將成為未來世界各國爭相研究的重點項目。有鑒於目前存在的許多整批式驗證系
統中，對於實際的應用上，或有安全性的隱憂；或有效率不足的問題。因此，我們計畫發
展一個可以快速且安全對大量訊息簽章作整批式驗證的系統，來滿足未來國家電子化的需
求。 
    大部分資料已經數位化並且傳輸透過網際網路，而保護這些資料的完整性已成為非常
重要的。在這篇論文裡，我們提出一個新的方法利用其元件的模板去認證二元文件的完整
性。我們計算出一份文件的黑色的模板和白色的模板，擷取其不變特徵值，再配合雜湊函
式等密碼學技術，產生加密的嵌入圖檔資料，將其嵌入至原始圖檔之中。實驗結果顯示透
過使用我們提出的方法能證實數位化的資料的完整性， 對於任何小的改變皆可容易被發
現。 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 2
報告內容 
前言 
隨著資訊時代的來臨，幾乎是戶戶都有一至二台電腦，『秀才不出門，能知天下事』這
句話應用在現在的"資訊時代"感覺上十分貼切，因為我們能從網路上獲知我們所想知道的
各種資訊。 
    網際網路(Internet)是由美國五角大廈國防先進研究所計劃局(PDARPA)於一九六九年
研發，透過網際網路的發展，各種多媒體快速的傳播，雖然使得人們的生活越來越便利，
但是拷貝、複製的過於容易性卻產生了新的問題，智慧財產權的保護嚴然已經變成國際性
的重要議題之一。 
在過去那段印刷術不發達的時代，人們對於重要文獻總是細心謄寫且小心保管，印刷
術是一個革命性的發明，也讓教育開始變的普及化；在過去，大家對於著作權尚未有覺得
它很重要的概念，網路發達的現在，數位媒體容易被複製，隨著知識的提升，大家對於保
護智慧財產安全也越趨有要加以保護的想法。 
在紙張上撰寫的資料，由於製造紙的過程的不同，其實已具備了獨特性，無論我們用何種
方式去書寫，皆無法重製一份完全相同的文件，所以才會廣泛使用在有價證券上，並且使
有價證券得以通行；透過檢查紙張本身，可以察覺這份文件是否有被竄改，反觀現在流通
的數位媒體，在此方面似乎就處於弱勢。 
數位媒體容易被竄改或複製，在科技發達的現今，數位媒體越來越被廣泛使用，而智
慧財產的保護就越顯重要。現在的密碼學雖然不斷地進步，各種資料可透過密碼系統來保
護，若是明文資料被取得(如影像、音樂檔案、圖片...等)，密碼學也將無法提供保護。 
相較於密碼學，浮水印(Watermarking)及資訊隱藏(Data Hiding)之類的技術，可以將資
訊隱藏於掩護媒(Significant Information)透過嵌入處理(Embedding)及萃取處理(Extracting)
來產生偽裝媒體(Stego-media)以利於取回重要資訊，而用來證明掩護媒體的智慧財產權或
其完整性。 
 
研究目的 
本計畫主要目的在於研究並探討現存浮水印及資料隱藏的文件，並分析比較現有方案
之效能與安全性，進而改良現有方案的弱點，提出一種具有高安全性與高效能的演算法。
對於二元文件的完整性及文件認證方面，Huijuan Yang and Alex C. Kot 所提出的方法雖然
能夠達成文件認證及完整性的確認，但卻有嚴重的弱點，而我們所提出的方法，正可以避
開此缺點，完成文件認證及完整性的確認。 
 
文獻探討 
在Huijuan Yang and Alex C. Kot 所提出的方法中，最重要步驟為翻轉屬性的判定
(Flippability Decision) 
1. 翻轉屬性的判定(Flippability Decision) 
 4
(3) 將 以雜湊函式處理，並產生雜湊碼，1Y 1( )oH Hash Y= 。 
(4) 將 用擁有者或發行者的私有金錀來加密，如用RSA私有金錀來產生文件內
容的簽章，
oH
( , )s k o sW E H K= 。 
(5) 利用互斥運算或是串接方式，將 sW 和掛載式浮水印 結合來產生證明者的浮
水印，W W 。 
pW
||r s pW=
(6) 依藉區塊的奇偶性，嵌入W 在擁有可嵌入屬性的區塊中。 r
4. 驗證流程步驟 
(1) 一開始的三個步驟，就是去尋找到符合標準的可嵌入屬性的位置，由此來產
生中介圖形 並以此產生此測試圖檔的雜湊碼 。 '1Y wH
(2) 基於可嵌入屬性區塊的奇偶性，來取出嵌入的浮水印，將它切開成兩個部份:
內容的簽章 'sW 和掛載式浮水印W 。 'p
(3) 利用公開金錀 pK ，如使用RSA的公開金錀來解密 'sW ，以得到原始圖檔的雜
湊， 。 '( , )o k s pH D W K=
(4) 比較W 和W 及 和'p p wH 'oH ，如果 'oH 和 相符且W 相同於W ，則文件的完整
性和可信度將能得到保證。 
wH
'
p p
研究方法 
     此節將介紹我們提議的方法，先取出圖形文字的樣板，再計算出可嵌入區域；再將資
料嵌入，最後提到驗證的過程。以下將細說明每個流程： 
1. 取骨架流程 
取樣板的方法採用[5]提出的方法，以下將逐步細說： 
       首先介紹X(p)及B(p) 
     X(p)為一像元連結的物件數，以p1、p2、p3…p8的順序計算由0變成1的總次數作為連    
    結數 
    ( 1 = 物件像素；0 = 背景像素) 
p1 p2 p3
p8 p p4
p7 p6 p5 
0 1 0
0 p 1
1 0 1 
圖二 圖三 
     B(p)為像素p其周邊非零個數，可寫成：B(p)= + + +…+ . 1p 2p 3p 8p
    Zhang-Suen細線演算法為一個平行方式的演算法；意味著新產生的值是依藉著先前的
數值。這個方式是很快速且簡單，流程中有兩個迭代，影像中若有像元符合下述每ㄧ條件
才刪除: 
 6
     E6. 將保護的文件分割成區塊，然後計算區塊的奇/偶性然後選擇最佳的嵌入位置。  
     E7. 將加密後的資料IE 嵌入到最佳的嵌入區塊。 
     E8. 輸出嵌入浮水印後的文件圖檔。 
 
3. 驗証流程 
    : 取出的浮水印 PW ′
    : 雜湊碼 HI ′
    : 私密金鑰 SK
    : 解密方程式 ()kD
    : 解碼後的資料 EI ′
   輸入：簽入浮水印後的文件圖檔、認證者的私密金鑰 
   輸出：浮水印 
     V1. 利用 Zhang-Suen 細線演算法求出黑色及白色樣板。 
     V2. 將取出的黑白樣板分別組合成一個個別樣板。 
     V3. 從合成的樣板中利用one-way雜湊函式產生雜湊碼 HI ′ 。 
     V4. 將保護的文件分割成區塊，然後計算區塊的嵌入位置。 
     V5. 取出嵌入的資料。 
     V6. 將V5取出的資料利用符合的私密金鑰去解密而得到 EI ′ 。 
     V7. 對解碼後的資料 及產生的雜湊碼EI ′ HI ′ 執行互斥運算(exclusive-OR)產生浮水印  
         。  PW ′
 
實驗結果 
  在實驗環境上，我們作業系統使用 Windows XP，以及 JBuilderX IDE, Java Advanced 
Imaging package (JAI) library，語言為 JAVA jdk 1.6.0，攻擊的工具為 PhotoShop 8.0。 
以下將介紹我們的實驗結果： 
首先對為一張二元的文字圖檔(圖六)，經過細線化後產生黑、白色樣板(圖七)，再嵌入浮水
印圖檔(圖八)，最後產生嵌入後的圖檔(圖九)。 
    攻擊實驗上，我們把最後生成的圖檔(圖九)經過竄改，在圖檔上多加ㄧ個黑色像素(圖
十)，如此在取出認證時就會產生無意義的圖檔(圖十一)，而無法取出正確的浮水印圖檔(圖
八)。另外影像圖片上我們也拿Lena先轉成二元圖檔來實驗，方法相同，實驗結果也能有效
的抵擋攻擊者的攻擊。 
 
圖六. 二元文字圖檔 
 
 8
    因為Zhang-Suen細線演算法為平行運算，因此它能夠快速處理運算。對於提出的方法
上，能有效將二元文件圖檔樣板化，且不失去完整樣板，因而能有效提升嵌入容量，且能
減少樣板運算時間。但是若文字圖形較細時，取出的樣板將會受到影響，另外Zhang-Suen
方法中方法中涉及子迭代，所以在消耗時間上仍有加強的空間，建議可以以邏輯式表示且
合併ㄧ式，如此將會更為快速。 
 
參考文獻 
 
[1] Haiping Lu, A. C. Kot, Jun Cheng, “Secure Data Hiding in Binary Document Images for 
Authentication,” Proceedings of the 2003 International Symposium on Circuits and Systems, 
Vol. 3, May 2003, Bangkok, Thailand, pp.806-809. 
[2] Huijuan Yang and Alex C. Kot, “Date Hiding for Text Document Image Authentication by 
Connectivity- Preserving,” Proceedings of the IEEE International Conference on Acoustics, 
Speech, and Signal Processing, Vol. 2, March 18-23, 2005, Philadelphia, PA, USA, 
pp.505-508. 
[3] M. Wu, E. Tang and B. Liu, “Data Hiding in Digital Binary Image,” IEEE International 
Conference on Multimedia and Expo. 2000, pp. 393-396. 
[4] P. W. Wong, N. D. Memon, “Secret and Public Key Image Watermarking Schemes for Image 
Authentication and Ownership Verification,” IEEE Transactions on Image Processing, Vol. 
10, No. 10, Oct. 2001, pp.1593-1601. 
[5] T.Y.Zhang, C.Y.Suen, “A Fast Parallel Algorithm for Thinning Digital Patterns,” 
Communication of the ACM March 1984, pp.236-239. 
 
附錄 
該計畫已有論文發表 
論文名稱：Binary Document Images Authentication by Thinning Digital Patterns 
研討會名稱：The Third International Conference on Intelligent Information Hiding and   
            Multimedia Signal Processing, Kaohsiung, Taiwan, 
時間：Nov. 26-28, 2007 
 
 
 
 
 10
 3. The Proposed Method 
 
In the section, we introduce the proposed binary 
document authentication scheme by thinning the 
digital patterns. We compute the digital patterns of a 
host document image using thinning technique, and 
select the locations which could be used to 
embedding, then embed the data. The processed 
result could protect the integrity of the host document. 
To embedding and extracting the watermark 
information, we use the method proposed by Lu, Kot, 
and Cheng’s method [1]. 
 
3.1. Pattern Extraction 
 
We use Zhang-Suen thinning algorithm [5] to 
compute the black pattern and the white pattern of a 
document. At first, we define the two functions X(p) 
and B(p) for a block, e.g., of size 3×3. In this block, 
shown in Figure 1, the central point p has eight 
neighbors. X(p) is the number of value changes, from 
0 to 1, in the order of p1, p2 , p3,…, p8 . Note that 1 
indicates an object pixel and 0 is the background 
pixel. 
p1 p2 p3 
p8 p p4 
p7 p6 p5  
0 1 0
0 p 1
1 0 1
 
Figure 1 Figure 2 
 
And B(p) is the number of nonzero neighbors to p, 
that is: 
B(p)= 1p + 2p + 3p +…+ 8p . 
As in Figure 2, we have that X(p)=3 and B(p)=4. 
The Zhang-Suen (ZS, for short) thinning algorithm [5] 
is parallel, the new value only depends on the value 
of the previous one iteration. It is fast and simple for 
implementation. A pixel p in the 3×3 block could be 
deleted using the following two alternating iterations: 
In the first iteration: 
1. X(p) =1 
2. 2 <= B(p) <= 6 
3. 2p * 4p * 6p =0 
4. 4p * 6p * 8p =0 
In the second iteration: 
1. X(p) =1 
2. 2 <= B(p) <= 6 
3. 2p * 4p * 8p =0 
4. 2p * 6p * 8p =0  
  In the block, pixels satisfying these conditions 
would be deleted, that is, we set p=0. 
In this paper, we apply the ZS thinning algorithm 
to compute both of the black and the white patterns. 
The pseudo-code is as follows. 
 
 
 
 
    
3.2. Embedding Process 
 
In this section, we describe the embedding process 
of our proposed scheme. We define some 
parameters: 
pW : Payload watermark 
PK : Verifier’s public key 
()kE : Encrypt function 
EI : Encrypted data 
HI : Hash code 
The embedding step is described as follows. 
Input: Host document, watermark, and verifier’s 
public key. 
Output: The stego document (watermarked 
document). 
E1. Compute the black and the white patterns of the 
host document, by using the ZS algorithm. 
E2. Combine the black and the white patterns to 
form a single pattern. 
E3. Generate the hash code IH of the single pattern 
using a one-way hash function. 
E4. Conduct an exclusive-OR operation on the hash 
code and the watermark. 
E5. Encrypt the result of the E4 using the verifier’s 
public key to obtain the result IE, where 
)( HPKE IWEI P ⊕= . 
E6. Divide the host document into blocks, and then 
calculate the odd/even value and choose the best 
embedding locations.     
E7. Embed the information IE in the best embedding 
blocks. 
E8. Output the stego document. 
Note that here we define the odd/even value for a 
block. If the number of black pixel is odd, then we 
embed 1. If the number of black pixel is even, then 
we embed 0. All-black or all-white blocks would not 
be used, because changing a pixel in such a block is 
visually detectable. 
 As an example, Figure 3 indicates an odd block 
and 1 is embedded. If we want to embed 0, we need 
to change the pixel P from white to black.                        
Besides, a pixel which is selected as an 
embedding location should not change the black or 
the white patterns. As an example, pixel A in Figure 
4 should be filtered out in the embedding process. 
The reason is that if pixel A is changed from black to 
white, then the X(p)=2 and the black patterns would 
be altered. So pixel A should not be selected as an 
embedding location. As for pixel B, the change of 
pixel B from black to white will not change the black 
If p=1 && (2<=B(p)<=6) && X(p)=1 
if(
2p =0|| 4p =0|| 6p =0)&&( 4p =0|| 6p =0|| 8p =0) 
       then set p=0 
else 
 if(
2p =0|| 4p =0|| 8p =0)&&( 2p =0|| 6p =0|| 8p =0) 
    then set p=0
  
Figure 11. The extracted watermark from Figure 10. 
  
 
 
Figure 12. The word "1999" is changed to "1991". 
 
 
Figure 13. The extracted watermark from Figure 12. 
 
 
Figure 14.The "keyed/Unkeyed SHA" is cropped. 
 
 
Figure 15. The extracted watermark from Figure 14. 
 
 
Figure 16. The host image. 
 
 
Figure 17. The stego image. 
 
        
Figure 18. Host image (Left). Eyes are changed (Right). 
 
Figure 19. The extracted watermark from Figure 18. 
 
5. Conclusion 
 
 In this paper, we propose a novel method which 
can protect the integrity for binary documents. By 
extracting the black and the white patterns and using 
watermark technique, a document can be protected 
effectively. From the experiments, we can see that 
our proposed scheme is promising for binary 
documents. Even a little change made to a document 
could be detected visually from the extracted 
watermark. 
Since the Zhang-Suen thinning algorithm is 
parallel, it can be implemented fast. Therefore, our 
proposed scheme is efficient. Further, the block size 
affects the capacity of embedding information in 
implementation. If the block size is large, the amount 
of the black and the white patterns would be less. On 
the contrary, if the block size is too small, we would 
have large amount of patterns. We should have 
proper amount of patterns such that not to lose the 
important patterns and to have enough capacity for 
the embedding information. 
 
Acknowledgement 
This work was supported in part by Taiwan 
Information Security Center (TWISC), National 
Science Council under the grants NSC-95-2218-E- 
001-001, NSC-95-2218-E-011-015 and NSC95- 
2221-E-029-020-MY3. 
 
References 
 
[1] Haiping Lu, A. C. Kot, Jun Cheng, “Secure Data 
Hiding in Binary Document Images for Authentication,” 
Proceedings of the 2003 International Symposium on 
Circuits and Systems, Vol. 3, May 2003, Bangkok, 
Thailand, pp.806-809. 
[2] Huijuan Yang and Alex C. Kot, “Date Hiding for Text 
Document Image Authentication by Connectivity- 
Preserving,” Proceedings of the IEEE International 
Conference on Acoustics, Speech, and Signal Processing, 
Vol. 2, March 18-23, 2005, Philadelphia, PA, USA, 
pp.505-508. 
[3] M. Wu, E. Tang and B. Liu, “Data Hiding in Digital 
Binary Image,” IEEE International Conference on 
Multimedia and Expo. 2000, pp. 393-396. 
[4] P. W. Wong, N. D. Memon, “Secret and Public Key 
Image Watermarking Schemes for Image Authentication 
and Ownership Verification,” IEEE Transactions on Image 
Processing, Vol. 10, No. 10, Oct. 2001, pp.1593-1601. 
[5] T.Y.Zhang, C.Y.Suen, “A Fast Parallel Algorithm for 
Thinning Digital Patterns,“ Communications of the ACM 
March 1984, pp.236-239. 
