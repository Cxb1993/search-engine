I 
 
中文摘要 
近年來，由於無線測網路技術的進步，各種應用也相繼於無線環境中實現；然而，
對於大規模社區照護的應用，無線網路仍有許多問題需要解決。本研究計畫的重心分三
階段執行。第一階段的主題是網路的拓樸控制，以節省能源為設計目標，延長感測網路
的存活時間。第二階段的主題是則是研究容錯能力的自我組織機制，透過研發出的分散
式隨機演算法，使無線感測網路在相當的程度上具備自我組織的能力，一方面可以簡化
網路管理，提高其強固性和復原性，另一方面，這將使它能在處於動態的狀況下還能維
持資源分配和網路運作的效率。第三階段則針對無線隨意網路中的同儕通訊模式，提昇
資料可讀性，我們提出了資料複製演算法並透過機率分析推導其收斂時間，該演算法能
適時的針對網路拓樸的改變而做出相對反應，並可以在有限的記憶體消耗下，提昇資料
的可讀性。我們相信這篇報告所提出的觀念與技術，可以與其他子計畫結合，並且助於
設計無線網路中同儕通訊的相關應用。 
 
關鍵字：無線感測網路、同儕通訊、拓樸控制、系統容錯、 資料複製 
 
III 
 
目    錄 
中文摘要.................................................................................................................................... I 
ABSTRACT .............................................................................................................................. II 
目    錄.................................................................................................................................. III 
圖 目 錄.................................................................................................................................. IV 
表 目 錄.................................................................................................................................. IV 
1.  研究計畫之動機與目的.................................................................................................... 1 
2.  研究方法............................................................................................................................ 2 
2.1.  節能拓樸控制演算法................................................................................................ 2 
2.2.  分散式隨機容錯演算法............................................................................................ 4 
2.3.  分散式隨機資料複製演算法.................................................................................... 5 
2.3.1.  系統模型............................................................................................................ 5 
2.3.2.  隨機程序之證明技巧........................................................................................ 6 
3.  研究成果............................................................................................................................ 6 
3.1.  節能拓樸控制演算法................................................................................................ 6 
3.2.  分散式隨機容錯演算法............................................................................................ 7 
3.2.1.  演算法穩定性及收斂時間分析........................................................................ 9 
3.2.2.  模擬結果............................................................................................................ 9 
3.3.  分散式隨機資料複製演算法.................................................................................. 11 
3.3.1.  系統穩定性...................................................................................................... 12 
3.3.2.  演算法收斂時間分析...................................................................................... 13 
3.3.3.  模擬結果.......................................................................................................... 16 
4.  結論.................................................................................................................................. 18 
參考文獻.................................................................................................................................. 19 
可供推廣之研發成果資料表 I .............................................................................................. 22 
可供推廣之研發成果資料表 II ............................................................................................. 23 
可供推廣之研發成果資料表 III............................................................................................ 24 
 
1 
 
                                                      
1. 研究計畫之動機與目的 
近年來隨著感測器和無線通訊等相關技術的進步，如何將眾多配備無線通訊介面的
感測器散佈在特定空間中進行特定的任務，成為相當熱門的研究主題。上述這種由感測
器為節點、無線通訊為連線所組成的網路廣泛地被稱為無線感測網路。無線感測網路的
相關研究相當的熱門，應用的層面也很廣泛，尤其適合於開發社區醫療照護之類的系
統。目前有各式各樣的應用系統和解決方案被提出，雖然對於不同的任務有時需要設計
不同的系統架構，但很多關鍵技術對於大部份的應用而言都具有通用性。 
無線感測網路為一具有自我組織與自我校調能力之網路架構，感測網路通常具有一
個資料中心負責資料的處理與散佈，而感測網路下之感測器則負責資料的蒐集，感測器
可將蒐集之資料直接地送回資料中心，這種通訊架構亦稱單次跳躍網路(single-hop 
wireless network)，然而受限於無線訊號的傳輸距離，這類架構的網路已漸漸不被採用。
近年來，一種稱為多重跳躍網路(multi-hop wireless network)的通訊架構被提出，在這類
的通訊架構下，感測器可以藉由其它感測器做為中繼點(intermediate node)，透過協調合
作的方式，間接地將資料傳遞至資料中心，如此不但可以擴大無線網路的涵蓋範圍，亦
可以增加無線網路之傳輸能力。 
有研究指出無線節點之點的干擾為限制網路產能與消耗能源的重要因素[1][2]，藉
由適當傳輸距離調整，減少鄰近節點數量，可以有效的降低節點之間的干擾問題，這種
技術又稱為無線網路拓撲控制(topology control)，因此在第一期的研究中，為了解決無
線環境中通訊的干擾問題，我們著重於研究一套無線網路拓撲控制方法，在維持網路連
通性(connectivity)的狀況下，儘可能的降低節點之傳輸功率以達到節省能源的目的。 
針對應用層面，由於無線感測網路不需要任何預先建立的基礎設施(infrastructure)，
網路佈建具有良好的適應性，可以配合各種特殊環境的需求，例如戰場監視(battlefield 
surveillance)、災難復原 (disaster recovery)以及緊急救護 (emergency rescue)等應用
([3][4][5])。近年來，在無線網路的環境中，基於同儕通訊(peer-to-peer communication)
基礎所建立的應用逐漸受到重視；在傳統的有線網路中，同儕應用程式(peer-to-peer 
application)採用覆蓋(overlay)的架構，但由於無線感測網路環境具高變動性以及節點電
力限制的特性，上層的覆蓋並無法即時反應下層無線網路變化，如此除了造成增加拓樸
控制的困難度外，系統的可靠度(dependability)1也會受到影響[6]。原則上，在同儕應用
程式上加上容錯的能力可以有效改善資料的可用性(availability)，雖然目前有需多針對
系統可用性的研究，但大多沒有討論到關於AODV及DSR等區域性修復方法[3]。在第二
期的研究中，本計畫著重於設計一個應用層的容錯機制，修復同儕資料傳輸過程中的路
徑錯誤問題，以提昇資料的可用性。 
考慮社區照護系統中，經常使用同儕通訊作為資料分享的通訊模型，在這種通訊模
型中，應用程式的可用性往往因為網路拓樸的切割而造成資料無法存取，降低資料的可
1 可靠度(dependability)包含可用性(availability)、可讀性(accessibility)、可靠性(reliability)等。 
動態預測傳輸功率的衰減，它也是較接近實際環境的訊號衰減模型，但為了簡化我
們的研究方法，我們並不考慮這類的模型於先期的研究計劃當中。 
藉由對無線訊號衰減的觀察，Rodoplu等人在文獻[1]提出一套中繼轉播區域(relay 
region)的概念，這份研究指出間接的使用中繼節點傳輸比直接傳輸有更低的能源消耗，
而中繼轉播區域則代表若是傳送節點欲與此此區域中的節點進行通訊，則可透過中繼節
點，其中繼轉播區域的示意圖如圖 1。 
 
圖 1  Relay Region 示意圖 
 
中繼轉播區域會有一個邊界，若是在一個節點旁邊存在許多中繼節點，則會產生多
個中繼轉播區域，則這些區域的邊界則會形成一塊封閉區間如圖 2。這也表示若傳送節
點欲與區間外的節點通訊，皆可間接透過中繼節點，於是傳送節點之涵蓋範圍只需要覆
蓋中繼轉播區域所形成的封閉區間即可。 
 
圖 2  Enclosure 示意圖 
 
基於上述的概念，Li Li 人在文獻等 [2]提出一套網路拓撲控制演算法，稱為 small 
minimum-energy communication network (SECN)。此演算法目的在於消除一些沒有必要
的鄰近節點並嘗試把無線節點之傳輸半徑降到最低而不失網路之連通性，使用其拓撲控
制方法之例子展示於下列圖 3，其分別表示尚未做網路撲拓控制與使用SECN拓撲控制
演算法之網路，而圖 4則指出當網路的密度增加時，使用拓撲控制方法可以有效的降低
整體網路節點的平均傳輸半徑。 
3 
 
5 
 
。 
2.3. 分散式隨機資料複製演算法 
我們提出了一個分散式隨機資料複製演算法。演算法的設計概念是希望每一個節點
都能根據現有狀態，各自做出複製的決定，藉以達成整體系統的穩定性；另一方面，因
為演算法具有隨機的特性，本篇報告中使用了 Path Coupling 來推導系統進入穩定狀態
所需的時間，就我們所知，目前還沒有相關研究使用這項證明技巧來推導同儕資料複製
系統的收斂特性，因此我們相信這份報告中所提出的概念及技術應該可以對於實際的應
用有所助益。 
近年來，針對無線隨意網路中同儕應用，已經有許多資料搜尋與複製的研究被提
出；文獻[12]的作者提出降低整體通訊成本的演算法；在文獻[13]中，Nuggehalli等人針
對資料複製的能源消耗問題，提出了POACH演算法；在文獻[14]中，作者則針對無線節
點的移動來分析資料複製對於系統效能的影響；對於網頁快取(web caching)的問題，文
獻[15]提出由同儕節點存取資料的概念；在文獻[16]中，Yin以及Gao分析了訊問延遲
(query delay)以及資料可讀性平衡的議題，他們也在文獻[17]中提出了一個混合式資料複
製演算法，藉由同時儲存資料路徑與資料內容來提昇資料可讀性；文獻[18][19]中，作
者除了提出網路環境切割下的資料配置技術，還特別針對資料更新的問題研發相對應的
方法；Friedman等人在文獻[20]中提出資料快取的技術，改善資料存取的服務品質以及
降低網路通訊成本。 
 
2.3.1. 系統模型 
無線網路的傳輸模型本身就具有廣播的特性，也就是說，當節點傳出一個訊息，在
其傳輸半徑內的所有節點皆可收到該訊息。假設系統遵循 relaxed asynchronous 
model [21]，意即程序處理速度、訊息傳遞時間延遲以及同步時間的差異上限都可以估
算，因此我們可以假設一次成功的訊息廣播可以在常數時間tb內完成。另外，雖然完全
同步無法達成，但是相對同步可以藉由其他的措施來達成，例如GPS信號；因此我們做
出與文獻[22]類似的假設：所有的節點都能達成回合同步(round synchronization)，一個
回合代表可讓節點執行數個傳送或判斷動作的時間長度
考慮無線隨意網路中有 n 個節點以及 m 個資料物件，這裡假設所有物件(object)的
大小皆相同且 m = O(n)；每個節點 u 有Φ(u)的記憶體空間來儲存這些物件，因此可以當
作一個整數值Φ(u)。資料模型中，每個節點 u 儲存兩種資料—原生物件 INNATE(u)以及
複製物件 REP(u)。當節點 u 需要於物件 o 時，則發出詢問 q(u, o) ∈ Q 來搜尋該物件，
若節點 v 回應其具有物件 o，則 q(u, o)稱為一個可解析(resolved)的詢問。假設存在一個
解析集合 R，使得所有 q(u, o) ∈ Q 都可解析且節點 u 與節點 v 的距離(hop distance)d(u, v) 
≤ k，則稱詢問集合 Q 為 k-coverable ，R 為 k-covering 解析集合。 
在真實的環境中，物件的內容可能隨時間改變而有所不同，因此如何維持原生物件
與複製物件的一致性便相當重要，然而為了將問題簡化，我們並不考慮物件更新的問題
(相關研究主題可參見文獻[23])，有救是說所有物件在演算法的執行過程中都不會有內
 200
 400
 600
 800
 1000
 1200
 1400
 1600
 1800
 2000
 0  20  40  60  80  100  120  140  160
To
ta
l E
ne
rg
y
Elapsed Time
Elapsed Time v.s Total Energy
"with_control_eng.dat"
"without_control_eng.dat"
 
圖 5  拓撲控制減緩能源的消耗率 
 20
 25
 30
 35
 40
 45
 0  20  40  60  80  100  120  140  160
N
um
be
r o
f T
ot
al
 L
iv
e 
N
od
es
Elasped Time v.s. Live Number
"with_control_live.dat"
Elapsed Time
"without_control_live.dat"
 
圖 6  拓撲控制延長網路的生命週期 
 
由實驗結果可以觀察到，做網路拓撲控制可以有效的節省能量與提升生命週期，而
有相關文獻指出[30][31]，能量消耗並非只是傳送與接收端會耗損能量，在干擾區域之
內的節點接受到不必要的封包而丟棄之，亦會產生能量的消耗，於是利用拓撲控制減少
傳輸半徑，相對的也減少因受干擾而丟棄封包而產生的不必要能量消耗，達到較佳的能
源使用效率。 
 
3.2. 分散式隨機容錯演算法 
本研究所提出的修復方法稱為Single-Repair Single-Object (SRSO)， 如圖 7所示，
在同儕環境中，當節點u向節點v要求所需物件時，回傳過程中可能會發生錯誤，導致物
件無法回傳給u，此時我們就必須啟動修復機制；錯誤偵測主要依賴倒數計時的機制，
雖然網路環境中無法實現完全同步，但我們仍然可以合理的假設系統中存在某種的同步
機制(如同文獻[22]的假設)。當回傳時間超過某一個預設值時(通常與u，v的距離成比)，
初始節點u與發現錯誤節點r會同時啟動修復機制，個別執行不重複行走的程序，並且紀
錄走過的路徑，當兩個程序交叉或碰撞時，新的繞送路徑就建立完成，此時物件可以從
經由節點r與節點u之間所建立的新路徑傳送。 
7 
 
9 
 
                                                      
系統的執行效能可藉由一些虛擬架構(例如 dominating set)或是最佳化(例如重複物
件搜尋等)來獲得提昇，然而，為了配合各種不同的應用，在這裡我們並不假設系統有
使用任何最佳化的機制。在下一個章節中，將會討論系統參數間的關係以及實驗結果，
驗證 SRSO 的可用性。 
 
3.2.1. 演算法穩定性及收斂時間分析 
為了簡化分析，我們首先考慮SRSO不使用popping的情形，如此便可以利用傳統的
隨機行走來分析SRSO記憶體消耗的情形。假設系統中有n個節點，在文獻[32]中分析出
k個布朗運動間不交叉的機率會隨著時間函數(t-5/8)k/2 降低。另外，由於記憶體消耗只會
跟走過的相異節點數有關，假設走過的步數為n，可以推得記憶體消耗規模為θ(n / 
logn)。考慮SRSO的情形，L的設定只需要能夠紀錄走過的相異的節點數即可，當相異
節點數為O(n / logn)時，兩條不重複行走的路徑不交叉的機率為 1/O(n5/8)，當n足夠大時，
機率則降到 0，換句話說，發生錯誤的路徑一定可以藉由SRSO方式修復。 
當L = O(n / logn)時，不重複行走的記憶體消耗規模為O(n / logn)，由於網路訊息傳
送是能量消耗的主因，我們必須考慮到通訊的成本。令Elb表示成功傳送一個封包所需
要傳送次數，而Plb則表示傳送單一封包成功的機率(Plb的相關討論可參見文獻[33])，由
於E[Elb] ≤ ∑i=1~∞iPlb(1 − Plb)i−1 = Plb−1，我們可以推得在不重複行走機制中，維持通訊所
需要的資訊量為O(L / Plb)。 
除了記憶體消耗以及通訊成本的考量，還需要考慮演算法收斂時間，我們利用
path-coupling的方法，來求得演算法收斂時間的上限值。因為與三期研究的演算法類似，
在這裡只列出推導後的結論3：SRSO演算法的收斂時間小於ln(2nε−1) / (1 − β)，其中ε為
常數，且 0 < β < 1。 
 
3.2.2. 模擬結果 
為了確實瞭解系統參數L’ (平均路徑長度)、平均收斂時間t’與系統規模n的關係，我
們模擬n個節點在 1×1 單位大小的方形區域中，執行不重複行走的情形，依照文獻[35]的
證明，若要維持d-connectivity的圖形的，節點的傳輸半徑必須符合以下不等式rn ≥ √((logn 
+ (2d − 1)loglogn + ξ) / πn)，為了避免關節點的存在，不失一般性，我們設定d = 2, ξ = 0。
另外，圖中的實驗結果為 1,000,000 次不重複行走的平均值。事實上，任何一種隨意行
走都會收到網路拓樸的影響，首先我們比較不同拓樸下對系統的參數的影響，如圖 10所
示，當d值越大時，系統參數L’可以設定的越低，收斂時間也越短，然而，當d = 1 時，
調和時間卻出現波動情形，這是由於連結度(degree)過低時，隨意行走會被限制在某一
個範圍內，造成調和時間的不穩定。為了避免這個問題，我們實驗了三種拓樸比重的機
制：隨機制(random)、加權制(weighted)以及平衡制(balanced)。選擇鄰節點時，隨機制
3 若想瞭解完整的分析過程及 coupling rule，可參見文獻[34]。 
 
圖 12  在 2-connectivity 網路上執行以三種拓樸比重機制執行多組 SRSO 情形 (n = 3000, κ = 2, 4, …, 20) 
(a) 平均路徑長度  (b)平均收斂時間 
 
3.3. 分散式隨機資料複製演算法 
演算法設計的主要目的是確保所有的詢問都能達成k-coverable的目標，也就是說對
於m種物件物件，節點u都能從節點集合Nk(u) = {v ∈ V: d(u, v) ≤ k }中取得。由於集中式
或是階層式的資料複製演算法並無法處理大規模的應用，另一方面，同一區域的節點可
能欠缺類似的資料物件，若是採用決定型(deterministic)演算法讓節點複製其最需要的物
件，可能會造成同一區域存在過多的複本，降低記憶體空間的使用效率。為了克服這些
問題，使系統具有擴充性與增強記憶體空間的使用效率，我們使用隨機且分散式的演算
法來判斷資料複製的動作，演算法的虛擬程式碼(pseudo-code)如下圖 13所示，各節點
在每回合開始時循序執行，判斷是否需要複製物件到自己的記憶體中。 
 
圖 13  資料複製演算法之虛擬程式碼 
11 
 
要建立一個有效率的資料複製演算法，除了需要兼顧擴充性與記憶體使用效率外，
13 
 
系統
能有效的縮短單一回合的時
間，
進入穩定狀態所需的時間也是重要的考量。為了增加演算法的收斂速度，可以在加
入兩種輔助的技巧：(i)浮動參數α，(ii)管線執行(pipelined execution)。因為參數α代表自
我循環(self-loop)的機率，以浮動的方式調整參數α可以平衡記憶體使用效率與收斂時
間，舉例來說，開始時由於有充足的記憶體空間，而將α設定為 1，隨著剩餘記憶體空
間的降低而逐漸縮小α的值可以加速收斂時間，卻不會造成過多的記憶體消耗。另一方
面，本質上鄰近的節點的記憶體具有共用的特性，也就是說，對於任何節點 u，其記憶
體空間 c 所需大小取決物件數與鄰近節點數，c = ⎡m / minu∈V|Nk(u)|⎤，考慮極端範例，網
路拓樸為 n 個節點排成一直線，此時|Nk(u)| ≥ k+1，我們可以推得 c ≤ ⎡m / k+1⎤時，系統
有很大的機率可進入穩定狀態。因為|Nk(u)|與網路拓樸有關且不易推導，真實的環境中，
|Nk(u)|更是遠大於 k + 1，我們將在下面的章節中，以模擬驗證 n、c、k 的關係，模擬結
果證明實際所需要的記憶體空間大小，遠小於⎡m / k+1⎤。 
我們使用回合數來作為執行時間的判斷單位，所以若
對縮短系統的收斂時間也有幫助。考慮一個簡單的環境，物件傳送皆透過最短路徑
且不需要重傳，令TR表示一個回合的時間，TIE與TF分別表示訊息傳送與索引氾濫所需
時間，TRD則表示物件複製或丟棄所需最大時間，觀察TRD ≥ TIE+TF的情形，可以發現訊
息交換與索引氾濫可以不用在前一回合的物件複製完成前開始執行，如圖 15所示，由
於t3 時所要複製的物件一定會傳回來，在t1 時即可預先更新距離向量的狀態，這樣節點u
可以在t2 就開始執行下一回合的訊息交換動作，這種狀況中，TR與TRD的長度相同。 
 
圖 15  管線執行示意圖 
3.3.2. 演算法收斂時間分析 
考慮上述資料複製演算法，系統狀態的變化只跟目前的狀態有關，因此演算法滿足
以將整個系統看成一個馬可夫鏈的運作，狀態集合為Ω。
接下
憶體中，oj = 0 則代表節點 i 沒有物件 j 的複本。我
們可以發現
表示，在Ω中的每一個狀態為(s1, s2, …, sn)，其中 si ∈{0, 1, …, C}。若收斂時間
無記憶(memoryless)特性，可
來我們利用 path coupling 推導演算法的收斂時間，或是說系統何時會進入穩定狀態
集合(legitimate configuration set L)中；根據演算法的定義，L 包含了所有可以使得詢問
集合變成 k-coverable 的設定，L 同時也代表馬可夫鏈進入穩定分佈的機率。在下面的分
析中，我們假設記憶體空間足夠讓系統進入穩定狀態，另外，為了維持馬可夫鏈的非週
期性(aperiodicity)， α設定為 1/2。 
每個節點 i 的狀態可以表示為集合 si = {o1, o2, …, om}，其中 oj∈{0, 1}, 1 ≤ i ≤ n, 1 ≤ j 
≤ m，oj = 1 代表物件 j 被存在 i 的記
 ，集合 si 中出現 1 的次數絕對不會超過記憶體大小 c，所以每個節點的可
能狀態有 C 種，C < 2m。若是將 si編碼為整數，則整體系統狀態空間Ω可以用 si的組合
表 1  Coupling 說明 (情形 1：yt = xt \ {op}) 
 
 
表 2  Coupling 說明 (情形 2：yt\ {oq}= xt \ {op}，op ≠ oq，省略 cx = 0 及 cy = 0 的部份) 
 
對於情形 1，只有一種狀況可讓ϕ(xt+1, yt+1) = 0，推得 E[ϕ(xt+1, yt+1)] = β1·ϕ(xt, yt)，其中β1
表示為 
β1 = 1 − Pr{cx = 1}·Pr{dropx = op, mx = c}                                   (3) 
同樣的，對於情形 2，有四種狀況可讓ϕ(xt+1, yt+1) = 0，推得 E[ϕ(xt+1, yt+1)] = β2·ϕ(xt, yt)，
其中β2 表示為 
β2 = 1 − Pr{cx = 1}·(2Pr{dropx = op, mx = c}+2 Pr{repx = oq, mx < c })            (4) 
結合等式(3)及(4)可以得到 
β ≤ (1 − Pr{cx = 1}·Pr{dropx = op, mx = c}) 
= 1 − (1/2)·Pr{dropx = op | mx = c}·Pr{mx = c} 
      = 1 − (1/2c)·Pr{mx = c} 
≤ 1− (1/2⎡m/k+1⎤)·Pr{mx = c} 
E[ϕ(xt+1, yt+1)] ≤ (1− (1/2⎡m/k+1⎤)·Pr{mx = c})·ϕ(xt, yt) 
由於所有(Xt, Yt) ∈ S，δ(X, Y) = ∑i=1~nϕ(xit, yit) = ϕ(xt, yt)，另外，當 t ≥ c 時，Pr{mx = c}≈1/2
因此我們可以推得下列結果： 
E[δ (Xt+1, Yt+1)] ≤ (1− 1/4⎡m/k+1⎤)·δ (Xt, Yt)                                 □ 
由定理 1 並配合文獻[37]，我們可以直接推得定理 2 
定理 2  分散式隨機資料複製演算法收斂時間上限為 4⎡m/k+1⎤ ln(2cnε−1)。 
15 
 
原則上，在大規模的網路中，當k值增加，收斂速度會隨之增加，每個節點的記憶
體的消耗量也會降低，因此在下面的模擬中，我們測試收斂時間與記憶體消耗在不同k
值設定下的狀況，如圖 18所示，當k值增加，執行時間與記憶體消耗量都隨之降低，這
個實驗可以用來評估真實應用中，設定的k值與收斂時間的關係。此外，k = 5，n = 2000
時，平均記憶體消耗量只有 34，也證明了演算法並不會消耗過多的記憶體使用量。 
最後，我們以不同的觀點驗證演算法的效率，圖 19為一次演算法執行過程中，平
均無法解析的比率變化狀態(n = 100，k = 3，c = 10)，可以發現平均無法解析的詢問比
率以非常快的速度降低，在 20 回合時即降低到 1%左右。這個實驗可以驗證演算法可以
有效的提昇資料的可讀性，另外，因為通訊成本會隨著回合數的增加而成長，由這個實
驗我們也可判斷是否需要因為 1%的可讀性而浪費 70 回合的通訊成本。 
 
圖 18  收斂時間與平均記憶體消耗在不同 k 值下的情形 (n = 2000, c = 120) 
 
圖 19  收平均無法解析比率的變化情形(n = 100, k = 3, c = 10) 
 
17 
 
19 
 
參考文獻 
[1] V. Rodoplu and T. H. Meng, “Minimum energy mobile wireless networks,” IEEE J. Sel. 
Areas Comm. (J-SAC), 17(8): 1333-1344, 1999. 
[2] Li Li; Halpern and J.Y, “A Minimum-Energy Path-Preserving Topology-Control 
Algorithm,” IEEE Trans. Wirel. Commun., 3(3): 910-921, 2004. 
[3] A. C. Valera, W. K. G. Seah, and S. V. Rao, “Improving protocol robustness in ad hoc 
networks through cooperative packet caching and shortest multipath routing,” IEEE 
Trans. Mobile Comput., 4(5): 443-457, 2005. 
[4] R. Ramanathan, “Challenges: a radically new architecture for next generation mobile ad 
hoc networks,” Proc. ACM MobiCom, pp. 132-139, 2005. 
[5] A. Deshpande, C. Guestrin, and S. R. Madden, “Model-driven data acquisition in sensor 
networks,” Proc. Int. Conf. Very Large Databases (VLDB), Toronto, Canada, 2004. 
[6] D. P. Agrawal, M. Lu, T. C. Keener, M. Done, and V. Kimar, “Exploiting the Use of 
Wireless Sensor Networks for Environmental Monitoring,” EM Magazine, pp. 27-33, 
August 2004. 
[7] Theodore S. Rappaport, “Wireless Communications: principles & practice,” publish by 
Prentice Hall, 2002. 
[8] K. Sohrabi, J. Gao, V. Ailawadhi, and G. J. Pottie, “Protocols for self-organization of a 
wireless sensor network,” IEEE Personal Commun., 7(5): 16-27, October 2000. 
[9] S.-J. Yang, “Exploring complex networks by walking on them,” Physical review E 71, 
016107. 
[10] David Braginsky and Deborah Estrin, “Rumor Routing Algorithm For Sensor 
Networks,” WSNA, September 2002. 
[11] S. Shakkottai, “Asymptotic of Query Strategies over a Sensor Network,” IEEE 
INFOCOM, pp. 557-566, 2004. 
[12] J. Zheng, Y. Wang, X. Lu, and K. Yang, “A dynamic adaptive replica allocation 
algorithm in mobile ad hoc networks,” Proc. IEEE PerCom, pp. 65-69, 2004. 
[13] P. Nuggehalli, V. Srinivasan, and C.-F. Chiasserini, “Energyefficient caching strategies 
in ad hoc wireless networks,” Proc. ACM MobiHoc, June 2003. 
[14] J. L. Huang and M. S. Chen, “On the effect of group mobility to data replication in ad 
hoc networks,” IEEE Trans. Mobile Comput., 5(5): 492-507, 2006. 
[15] F. Sailhan and V. Issarny, “Cooperative caching in ad hoc networks,” Proc. Int. conf. 
Mobile Data Management (MDM), pp. 13-28, 2003. 
[16] L. Yin and G. Cao, “Balancing the tradeoffs between data accessibility and query delay 
in ad hoc networks,” Proc. IEEE SRDS, pp. 289-298, October 2004. 
[17] L. Yin and G. Cao, “Supporting cooperative caching in ad hoc networks,” IEEE Trans. 
Mobile Comput., 5(1): 77-89, 2006. 
[18] T. Hara, “Replica allocation methods in ad hoc networks with data update,” 
ACM/Baltzer Mobile Netw. Appl. (MONET), 8(4):343-354, 2003. 
[19] T. Hara and S. K. Madria, “Data replication for improving data accessibility in ad hoc 
21 
 
2000. (available at http://cs.washington.edu/homes/venkat/pubs/papers.html) 
[37] D. Randall, “Mixing,” Proc. IEEE FOCS, 2003. 
[38] G. Norman, “Analysing randomized distributed algorithms,” Validation of Stochastic 
Systems: A Guide to Current Research, LNCS 2925, August 2004. 
23 
 
可供推廣之研發成果資料表 II 
□ 可申請專利  ■ 可技術移轉                                   日期：95年5月21日 
國科會補助計畫 
計畫名稱：無線感測網路之關鍵技術及在社區照護之應用 
計畫主持人：郭斯彥         
計畫編號：NSC 994-2213-E-002-041  學門領域：資訊一 
技術/創作名稱 無線網路下環境下之高可靠性點對點資料通訊應用 
發明人/創作人 台大電機系 
技術說明 
中文： 
Peer-to-Peer 在無線感測網路下的應用通常不具有容錯的機制，由
於無線感測網路的變動性及能源消耗問題，一旦節點或是連結發生
錯誤，系統的可用性就會大大降低，為了解決這個問題，本研究計
畫設計出一套分散、隨機且節省能量消耗之容錯演算法，以大幅增
加 Peer-to-Peer 的系統效能及可用性。 
英文： 
Peer-to-peer applications in wireless sensor ad hoc networks are 
usually executed without fault-tolerant mechanism. However, system 
performance and availability are apt to suffer from the characteristics 
of wireless ad hoc network, such as high dynamics, node/link failures. 
In this report, we propose a distributed randomized and energy-
efficient algorithm that can efficiently repair P2P routing failures. As a 
consequence, performance and data availability of P2P applications in 
a wireless environment can be enhanced. 
可利用之產業 
及 
可開發之產品 
可利用於緊急救援系統、軍事監控系統。 
技術特點 在有限能量消耗下，可修復資料傳輸因不明原因而無法傳送至目的地的問題，有效提昇 P2P 應用程式在無線感測網路環境的可用性。
推廣及運用的價值 
在無線感測網路的環境下，Peer-to-Peer 應用程式(如醫療系統)往往
因為不穩定的網路狀態及電力支援的問題，使得其效能及可用性受
到限制。因此，如果能在該環境的下應用容錯機制，提昇系統的可
靠度，會使得 Peer-to-Peer 在無線感測網路下的應用更有發展性。
 
※ 1.每項研發成果請填寫一式二份，一份隨成果報告送繳本會，一份送 貴單
位研發成果推廣單位（如技術移轉中心）。 
※ 2.本項研發成果若尚未申請專利，請勿揭露可申請專利之主要內容。 
※ 3.本表若不敷使用，請自行影印使用。 
