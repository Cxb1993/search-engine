 2 
 
行政院國家科學委員會專題研究計畫期末報告 
 
智慧型運算技術應用於臉部表情辨識之研究 
Facial Expression Recognition Based on Intelligent Computer Technology 
計畫編號：NSC 96-2221-E-194-046-MY3 
執行期限：96 年 8 月 1 日至 99 年 7 月 31 日 
主持人：游寶達  國立中正大學 資訊工程學系 
e-mail:csipty@cs.ccu.edu.tw, http://neuralpc5.cs.ccu.edu.tw 
中文摘要 (關鍵字：人臉偵測、支撐向量機、粒子群演算法、臉部表情辦識) 
 
在本計畫中，首先我們提出了一個基於動態門檻函數的人臉偵測方法，其能快速且有效
的取得影像中臉部像素之合理區域，並應用 Moghaddam 貝氏機率定位出人臉的中心點位置與
其臉部區域大小。然後，我們在本計畫中也提出了一個能從臉部影像中選出特徵點(角點)的
臉部特徵擷取的方法，以有效為後續表情辨識提供重要的線索。在本計畫中，我們針對表情
辨識的關鍵技術－智慧型分類器－進行深入研究，此一關鍵技術將依據所擷取的特徵值，在
特徵空間中進行人臉表情的分類。相較於傳統的分類器，此基於支撐向量機器與粒子群最佳
化演算法的智慧型分類器，其特點有 1)自動將支撐向量機的參數最佳化；2)可進行特徵值篩
選。此一分類器可說是同時具有 PSO 快速收斂與支撐向量機的精確分類能力。 
Abstract (Keywords: Face detection, support vector machine, particle swarm optimization, facial 
expression recognition) 
In this project, first, we propose a face detection approach using a dynamic threshold function 
to improve Moghaddam’s Bayesian approach in YCbCr color space. The dynamic threshold 
function is defined based on Log-Sigmoid function with the number of the skin-color pixels to get 
the optimal face region in each image and then Moghaddam’s Bayesian approach is used for face 
detection in the optimal face region. The detection results show that our proposed method is more 
quickly and accurately to detect human’s face in contrast to the pure Moghaddam’s Bayesian 
method. After face detection, facial feature extraction scheme reveals interest pixels (or corners) 
from detected face region before performing the recognition of facial expressions. These interest 
points provide vital clues in expression recognition. Therefore, a novel machine learning method is 
proposed in this project to classify facial expression in the feature space. Based on the support 
vector machine and a modified version of particle swarm optimization, the PSO-SVM classifier has 
the capabilities to automatically 1) tune the parameters of support vector machines and 2) perform 
feature selection. In other words, the SVM classifier is optimized by using particle swarm 
optimization (PSO) takes advantage of the minimum structure risk of SVM and the quickly globally 
optimizing ability of PSO. 
 4 
2. Face Detection Algorithm 
In face detection, the optimal face region is first extracted by using three consecutive filtering 
processes on the bitmap obtained from skin-color analysis of an original image with different 
thresholds determined by a dynamic threshold function, the Moghaddam’s Bayesian face detection 
approach is then used to detect face. 
2.1 A Skin Color Classification in YCbCr Color Space 
About YCbCr color space [2], it has been defined in response to increasing demands for digital 
algorithms in handling video information, and has since become a widely used model in a digital 
video. The luminance component Y  has an excursion of 219 and an offset of +16. And the 
chrominance components Cb  and Cr  have excursions of +112 and offset of +128, producing a 
range from 16 to 240 inclusively. However, in YCbCr color space, the Bayes decision rule for 
minimum cost [3] can be used to classify sample I  into skin color class ( 1ω  or 1) and non-skin 
color class ( 2ω  or 0). The Bayes decision rule for minimum cost is expressed as 
 ( ) ( ) TIpIp >21 || ωω  ⇒  1ω∈X  (1) 
 ( ) ( ) TIpIp <21 || ωω  ⇒  2ω∈X  (2) 
and  
 ( ) TsCsip i=1|ω   Ii∈  (3) 
 ( ) TnCnip i=2|ω   Ii∈  (4) 
where T  is a threshold refers to [1]. iCs  represents the number of skin color at position of Cb  
and Cr , and Ts  is the total number of skin color from all samples in the color space. 
Correspondingly, iCn  represents the number of non-skin color at position of Cb  and Cr , and 
Tn  is the total number of non-skin color from all samples in the color space. 
In addition to classify skin-color by this Bayesian approach, there were equations already 
defined the bounding planes in many researches in YCbCr color space [8-9]. So, it is also a 
convenient for researchers to skin-color classify without consuming most of time in training 
skin-color map. 
 6 
The second mask, 5.0)2( =LS , is used to erosion the protruding regions to become a similar 
oval-shaped as skin color of face shape. Then, the map will be exacted to frame the importance of 
face central position and remove all lump noise as skin color of background by the third mask (Fig. 
2 (b)): 
 ( ) 5.055.110)/exp1
14.0)3(
21
+⎥⎦
⎤⎢⎣
⎡
−××−+×= QQLS
 , 9.0)3(5.0 ≤< LS  . (9) 
After generating the bitmap of optimal central position, we can use Moghaddam’s Bayesian 
analysis to detect the maximum likelihood ),( jiS  of human’s face more effectively and accurately 
by a simple mask ( NM ×  pixels). The sample test is in Fig. 1 and the successful proof of 
experiment results will be presented in Section 4. The concrete algorithm is described as follows: 
 
Optimal Face Detection Algorithm 
Step 1: Set 1=k ; 
 ( ) ( )tzb kk τ= ; 
Step 2: if ( NMQ ×≥ ) 
2=k ; 
do 
   ( ) ( )tzb kk τ= ; 
Step 3:    3=k ; 
  while ( NMQ ×≥ ) 
end if 
Step 4: ( ) ( ) ( ) ⎥⎦
⎤⎢⎣
⎡ ∈⎟⎠
⎞⎜⎝
⎛ ++++= 12,2|,:,, ω
njmibnmnjmiXfjiS k ; 
 8 
3. Face Expression Recognition 
For simplicity, let us consider a linear separable binary classification problem and assume that 
the training set consists of N vectors ),,2,1( Nix di K=ℜ∈  from the d-dimensional feature space 
X. Each vector xi is associated with a target }{ 1,1 +−∈iy . The linear SVM classification approach 
consists of looking for a separation between the two classes in feature space X by means of an 
optimal hyperplane that maximizes the separating margin. However, commonly used data are often 
linearly nonseparable; therefore, in the nonlinear case, the two classes are first mapped with a 
kernel method into a higher dimensional feature space, i.e., )'()( ' ddX d >ℜ∈Φ .  
 
Fig. 3:  Linear Separable case 
 
iξ
 
Fig. 4: Linear non-separable case 
 
Then the decision rule is determined based on the function sign[f(x)], where f(x) represents the 
discriminant function associated with the hyperplane in the transformed high dimensional space 
)(XΦ  and is defined as  
 optopt bxwxf +Φ= )()( . (11) 
The optimal hyperplane defined by the weight vector 'doptw ℜ∈ and the bias 'doptb ℜ∈  is 
the one that minimizes a cost function that expresses a combination of two criteria: margin 
 10 
 
Fig. 5: Kernel mapping 
3.1 Particle Swarm Optimization 
PSO is an optimization technique introduced recently by Kennedy and Eberhart, inspired by 
the social behavior of bird flocking and fish schooling. Similar to other evolutionary computation 
algorithms, PSO is a population-based search method that exploits the concept of social sharing of 
information. Each individual (particle) of a given population (swarm) can benefit from the previous 
experiences of all other individuals in the same population. 
Food Global Best 
Solution 
Past Best 
Solution
 
Fig. 6: Particle Swarm Optimization 
During the iterative search process in the d-dimensional solution space, each particle (i.e., 
candidate solution) will adjust its moving velocity and position according to its own moving 
experience as well as those of the other companion particles in the swarm. 
Let us consider a swarm of size M. Each particle ),,2,1( NiPi K=  in the swarm is 
characterized by: 1) its current position di tp ℜ∈)( , which refers to a candidate solution of the 
optimization problem at iteration T; 2) its velocity di tv ℜ∈)(  and 3) the best position 
d
bi tp ℜ∈)( identified during its past trajectory. Let dg tp ℜ∈)(  be the best global position found 
over all trajectories traveled by the particles of the swarm. Position optimality is measured by one 
or more fitness functions defined in relation to the considered optimization problem. 
During the search process, the particles move according to the following equations: 
 
))()()((
))()()(()()1(
22
11
tptptr
tptptrtwvtv
ig
ibiii
−+
−+=+
δ
δ
 (20) 
and 
 12 
The nonlinear SVM classifier based on the Gaussian kernel generally achieves good 
performances; therefore, in the following, we describe the proposed classification system with 
Gaussian kernel. We note that the same reasoning holds for any kind of kernel that satisfies the 
Mercer’s condition. 
The position 2)( +ℜ∈ di tp  of each particle iP  from the swarm is viewed as a vector 
encoding: 1) a candidate subset f of features among the fdg available input features and 2) the value 
of the two SVM classifier parameters, which are the regularization and the kernel parameters C and 
γ , respectively. Since the first part of the position vector implements a feature selection task, each 
component (coordinate) of this part will assume either a ”0” (feature discarded) or a ”1” (feature 
selected) value. The conversion from real to binary values is made by a simple thresholding 
operation at the 0.5 value. 
Let f(i) be the fitness function value associated with the ith particle iP . The choice of the 
fitness function is important because PSO evaluates the goodness of each candidate solution pi 
according to the fitness function for designing our SVM classification system. For SVM classifiers, 
different measures of this error bound have been derived, such as the radius-margin bound and the 
simple SV count. In this paper, the simple SV count is employed as a fitness criterion in the PSO 
optimization framework because of its simplicity and effectiveness. 
Step 1 Swarm initialization value 
Step 1.1 Generate randomly an initial swarm of size M. 
Step 1.2 Set the velocity vectors associated with the M particles to zero. 
Step 1.3 For each position of the particle from the swarm, train an SVM classifier and compute the 
corresponding fitness function value (i.e., the SV measure). 
Step 1.4 Set the best position of each particle with its initial position, i.e., 
Step 2 Search process 
Step 2.1 Detect the best global position pg in the swarm exhibiting the minimal value of the 
considered fitness function over all explored trajectories. 
Step 2.2 Update the speed of each particle. 
Step 2.3 Update the position of each particle. If a particle goes beyond the predefined boundaries of 
the search space, truncate the updating by setting the position of the particle at the space 
boundary and reverse its search direction (i.e., multiply its speed vector by -1). This will 
stop the particles from further attempting to go out of the allowed search space. 
Step 2.4 For each candidate particle , train an SVM classifier and compute the corresponding 
fitness function . 
Step 2.5 Update the best position of each particle if its current position has a smaller fitness 
function. 
Step 3 Check convergence 
Step 3.1 If the maximum number of iterations is not yet reached, return to Step 2. 
 14 
Table 2: The twenty front facial images in IIS face database 
1. 2. 3. 4. 5.
6. 7. 8. 9. 10.
11. 12. 13. 14. 15.
16. 17. 18. 19. 20.
21. 22. 23. 24. 25.
26. 27. 28. 29. 30.
31. 32. 33. 34. 35.
36. 37 . 38.
 
Table 1: The performance of Bayesian face detection under different situations 
O riginal image
skin-c olore d image with 
dilation a nd erosion
skin-colored image with 
threshold filters
error 69 23 0
ac curac y 61.12 % 86.71 % 100 %
 
(a)
(1) (2) (3)
(1) (2) (3)(1) (2) (3)
(b) (c)  
Fig. 9: (a) A sample image and it’s skin-color classified: (1) is a testing image with a lot of 
lump noise outside of the face as skin-color background, (2) is the skin-color classified image, 
and (3) is the bitmap; (b) Image by dilating and eroding from (a): (1) is the result of colour 
image, (2) is the bitmap, and (3) is the result of face detection with the bitmap by a Bayesian 
method; (c) Image by executing a threshold method: (1) is the result of colour image, (2) is 
the bitmap, and (3) is the result of face detection with the bitmap by a Bayesian method.  
 16 
(a)
(b)
(1) (2) (3) (4) (5) (6) (7) (8)
(1) (2) (3) (4) (5) (6) (7) (8)
(c)
(1) (2) (3) (4) (5) (6) (7) (8)
(d)
(1) (2) (3) (4) (5) (6) (7) (8)
(f)
(1) (2) (3) (4) (5) (6) (7) (8)
(e)
(1) (2) (3) (4) (5) (6) (7) (8)
 
Fig. 11: Make chipped and lump noise by wearing the clothes with a little skin color and gesturing 
near the face: (a) original images; (b) processed by skin-color classified method; (c) bitmap of (b); 
(d) images from (c) processed by the threshold method; (e) bitmap of (d); (f) face detection by the 
Bayesian method with bitmap (c). 
 18 
6. Conclusion 
In this project, a dynamic threshold function for improving the performance of the 
Moghaddam’s Bayesian face detection approach in YCbCr color space is proposed. The dynamic 
threshold function is defined based on Log-Sigmoid function with the number of the skin-color 
pixels in each image. After three consecutively filtered processes the bitmap with different 
thresholds determined by the dynamic threshold function, the optimal face region is extracted. Then 
Moghaddam’s Bayesian approach is used for face detection in the optimal face region.  
In order to get enough information to differentiate pixels inside or outside of the face, the filter 
size in our proposed method is selected as NMR ×=  to correspond to the range of the mask used 
by the Moghaddam’s Bayesian face detection approach. By eroding and dilating after skin-color 
classification, it is a general method to reduce noise in a skin-color of bitmap. But when running up 
against big and a little big noise, the erosion or dilation can’t effectively remove noise at a time and 
then the noise will be dilated again. Hence, it isn’t a good method to reduce many redundant areas 
such as a little large missing inside of the face (as cause of the lighting in nose and forehead areas) 
and large noise (as skin-color background) outside of the facial location. By a dynamic threshold 
function based on Log-Sigmoid function with the number of the skin-color pixels in each image 
after skin-color classification the noise is well eliminated. Then the optimal face region would be 
extracted and it provided a small of reliable face area for Moghaddam’s Bayesian face detection. 
Moreover, the accuracy will also be promoted up to 100% in our experience, showed as Table 1. 
A novel machine learning method is proposed in this project to classify facial expression in the 
feature space. Based on the support vector machine and a modified version of particle swarm 
optimization, the PSO-SVM classifier has the capabilities to automatically 1) tune the parameters of 
support vector machines and 2) perform feature selection. In other words, the SVM classifier is 
optimized by using particle swarm optimization (PSO) takes advantage of the minimum structure 
risk of SVM and the quickly globally optimizing ability of PSO. 
6. Reference 
[1] M. J. Zhang and W. Gao, “An Adaptive Skin Color Detection Algorithm with Confusing 
Backgrounds Elimination,” IEEE International Conference, Image Processing, vol. 2, pp. 
390-393, 2005. 
[2] C. F. Juang, H. S. Perng, and S. K. Chen, “Skin Color Segmentation by Histogram-Based 
Neural Fuzzy Network,” IEEE International Joint Conference, Neural Networks, vol. 5, pp. 
3058-3062, 2005. 
[3] M. Harville, H. Baker, N. Bhatti, and S. Susstrunk, “Consistent Image-Based Measurement and 
Classification of Skin Color,” IEEE International Conference, Image Processing, vol. 2, pp. 
374-377, 2005. 
[4] D. Chai and A. Bouzerdoum, “A Bayesian Approach to Skin Color Classification in YCbCr 
Color Space,” IEEE Proceedings, TENCON 2000, vol. 2, pp. 421-424, 2000. 
[5] S. K. Singh, D. S. Chauhan, M. Vatsa, R. Singh, “A Robust Skin Color Based Face Detection 
Algorithm,” Tamkang Journal, Science and Engineering, vol. 6, no. 4, pp. 227-234, 2003. 
[6] D. Chai and K. N. Ngan, “Locating Facial Region of A Head-and-Shoulders Color Image,” in 
Third IEEE International Conference, Automatic Face and Gesture Recognition, Nara, Japan, 
pp. 124-129, 1998. 
[7] E.M. Saad, M.M. Hadhoud, M.I. Moawad, M. El-Halawany, and A.M. Abbas , “Detection of 
Faces in A Color Natural Scene Using Skin Color Classification and Template Matching,” 
Radio Science Conference, Proceedings of the Twenty-Second National, pp. 301-308, 2005. 
[8] D. Chai and K. N. Ngan, “Face Segmentation Using Skin-color Map in Videophone 
 20 
[30] V. Vapnik, Statistical Learning Theory. New York: Wiley, 1998. 
96年度專題研究計畫研究成果彙整表 
計畫主持人：游寶達 計畫編號：96-2221-E-194-046-MY3 
計畫名稱：智慧型運算技術應用於臉部表情辨識之研究 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 2 2 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 6 6 100%  
博士生 3 3 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
 
