many real life applications. 
英文關鍵詞： parallel-machine scheduling； rate-modifying 
activity； deteriorating maintenance； activity； 
total completion time； total machine load； 
makespan； algorithm 
 
1 
行政院國家科學委員會專題研究計畫成果報告 
具有維修作業之平行機台排程問題研究 
A study on the parallel-machine scheduling problems with 
maintenance activities 
 
一、中文摘要 
    本計畫探討具有維修作業(maintenance activities)之平行機台排程問題(identical/unrelated 
parallel-machine scheduling)。一般探討的排程問題常假設機台的維修作業是預先排定且其維修
時間是固定的。在本計畫中，我們將放寬預先安排維修作業的假設，考量改採選擇性的機台
維修作業(或人員教育訓練動)下，探討整體生產活動在經過機台維修或人員訓練後(固定的時
間下)，對於尚未處理的工作其加工時間將會有所改變(rate-modifying activities)的假設，求解
相關工作排程問題。另一方面，我們也進一步考慮當操作人員在對機台做維修作業時，實際
維修所需的時間會隨著維修的開始時間而有所增加(deteriorating maintenance activities)。故在
本計畫中我們探討上述所討論的 rate-modifying activities(維修時間固定 )與deteriorating 
maintenance activities(維修時間線性增加)之維修模式，分別考慮相同平行機台(identical 
parallel-machine)與非等效平行機台(unrelated parallel-machine)之生產模式在績效衡量指標
為：全部完工時間總和(total completion time)、全部機台負荷時間總和(total machine load)與全
部機台之最大完工時間(makespan)等目標下，提出相關理論性質，據此設計演算法，並應用
至業界。 
 
關鍵字：平行機台排程；rate-modifying activity; deteriorating maintenance activity；全部完工時
間總和；全部機台負荷時間總和；全部機台之最大完工時間；演算法。 
 
Abstract 
    This study investigates some parallel-machine (identical/unrelated) scheduling problems with 
rate-modifying activities or deteriorating maintenance activities. The rate-modifying activity is an 
activity that occupies the machine for a given duration (a fixed maintenance time) and changes the 
production rate of the machine. Each machine has at most one maintenance activity which is 
allowed throughout the planning horizon. Several recent papers stressed that the maintenance time 
is assumed to be deteriorating (deteriorating maintenance activities). That is, the length of 
maintenance activity increases linearly with its starting time. The objectives are to minimize the 
total completion time, the total machine load and the makespan. In this study, some scheduling 
3 
總和、最大延遲時間，與提早完成、延後完成及到期日等時間之加權懲罰成本總和等工作目
標。 
 
2. 計畫目的 
故在本計畫中我們探討上述所討論的 rate-modifying activities(維修時間固定 )與
deteriorating maintenance activities(維修時間線性增加)之維修模式，分別考慮相同平行機台
(identical parallel-machine)與非等效平行機台(unrelated parallel-machine)之生產排程模式在績
效衡量指標為：全部完工時間總和(total completion time)、全部機台負荷時間總和(total machine 
load)與全部機台之最大完工時間(makespan)等目標下，提出相關理論性質，據此設計演算法，
並應用至業界。 
為方便討論，我們定義相關符號與縮寫： 
identical parallel-machine縮寫為 Pm；  
unrelated parallel-machine縮寫為 Rm； 
rate-modifying activity 縮寫為 rm； 
deteriorating maintenance activity縮寫為 DMA； 
ija 為工作 iJ 在機台 jM 維修作業前之加工時間； 
ijb 為工作 iJ 在機台 jM 維修作業後之加工時間； 
j j j jTMA T tδ= + 為在機台 jM 之線性退化維修時間，其中 0jT > 為機台 jM 之基本維修時間，
0jδ ≥ 為機台 jM 之退化率， jt 為機台 jM 維修的開始時間； 
iC 為工作 iJ 在之完成時間； 
jCmax為機台 jM 在之完工時間； 
max max1,...,
max { }j
j m
C C
=
= 為全部機台之最大完工時間； 
iC∑ 為全部完工時間總和； 
max
jC∑ 為全部機台負荷時間總和。 
利用 Graham et al. [10] 提出三欄位排程問題表示法，在本研究中，我們將要探討的相關
排程問題如下： 
∑ iii CrmbaPm /,,/ ；     ∑ jii CrmbaPm max/,,/ ；    max/ , , /i iPm a b rm C ； 
5 
本研究成果完全依照計畫規劃進行，且達到預期目標。本研究成果在學術上之著作目前已發
表四篇文章如下： 
 T.C.E. Cheng, Chou-Jung Hsu and Dar-Li Yang (2011). Unrelated parallel-machine 
scheduling with deteriorating maintenance activities. Computers and Industrial Engineering 
60, 602-605. 
 Chou-Jung Hsu, T.C.E. Cheng  and Dar-Li Yang (2011). Unrelated parallel-machine 
scheduling with rate-modifying activities to minimize the total completion time. Information 
Sciences 181, 4799-4803. 
 Suh-Jenq Yang, Chou-Jung Hsu and Dar-Li Yang (2012). Note on "Unrelated 
parallel-machine scheduling with deteriorating maintenance activities". Computers and 
Industrial Engineering 62, 1141-1143. 
 Dar-Li Yang, T.C.E. Cheng, Suh-Jenq Yang and Chou-Jung Hsu (2012). Unrelated 
parallel-machine scheduling with aging effects and multi-maintenance activities. Computers 
and Operations Research 39, 1458-1464. 
    在實務上應用方面：計畫所提出之平行機台排程模式，相信其研究成果將可供實務業界
之決策參考，尤其在考慮rate-modifying activities 與deteriorating maintenance activities 排程模
式效應方面會更顯重要。 
    在研究人員訓練方面：經由文獻的搜集、研讀，將方法分類、整理，可使參與研究人員
對工作排程問題、組合優化理論有更深入的瞭解，加強計算方法設計與分析之能力。 
 
四、參考文獻 
[1] M. Pinedo (1995).  Scheduling: Theory, Algorithms and Systems, Prentice Hall, Englewood 
Cliffs, NJ. 
[2] C. Y. Lee and V. J. Leon (2001). Machine scheduling with a rate-modifying activity. 
European Journal of Operational Research, 129, 119-128. 
[3] C. Y. Lee and C. S. Lin (2001). Single-machine scheduling with maintenance and repair 
rate-modifying activities. European Journal of Operational Research 135, 493–513. 
[4] G. Mosheiov and D. Oron (2006). Due-date assignment and maintenance activity scheduling 
problem. Mathematical and Computer Modelling 44, 1053-1057. 
Unrelated parallel-machine scheduling with deteriorating maintenance activities
T.C.E. Cheng a, Chou-Jung Hsu b, Dar-Li Yang c,⇑
aDepartment of Logistics and Maritime Studies, The Hong Kong Polytechnic University, Hung Hom, Kowloon, Hong Kong
bDepartment of Industrial Engineering and Management, Nan Kai University of Technology, Nan-Tou 542, Taiwan
cDepartment of Information Management, National Formosa University, Yun-Lin 632, Taiwan
a r t i c l e i n f o
Article history:
Received 15 May 2010
Received in revised form 10 September 2010
Accepted 31 December 2010
Available online 8 January 2011
Keywords:
Scheduling
Deteriorating maintenance activity
Assignment problem
Total completion time
Total machine load
a b s t r a c t
We study the problem of unrelated parallel-machine scheduling with deteriorating maintenance activi-
ties. Each machine has at most one maintenance activity, which can be performed at any time throughout
the planning horizon. The length of the maintenance activity increases linearly with its starting time. The
objective is to minimize the total completion time or the total machine load. We show that both versions
of the problem can be optimally solved in polynomial time.
 2011 Elsevier Ltd. All rights reserved.
1. Introduction
Production scheduling and preventive maintenance planning are
fundamental operational problems in the manufacturing industry.
The simultaneous consideration of these two problems has received
increasing attention from the scheduling research community and
the corresponding scheduling problem is commonly known as
‘‘machine scheduling with availability constraints’’. Most of the
studies on this problem assume that the maintenance time is con-
stant and known in advance. However, some studies assume that
the maintenance time is constant while the starting time of the
maintenance activity is a decision variable, which can take place
within a known time interval. On the other hand, Lee and Leon
(2001) consider single-machine scheduling with a rate-modifying
activity. The rate-modifying activity is optional, which, if performed,
changes the production rate of the machine. For more information,
the reader may refer to the surveys on this subject by Schmidt
(2000), Ma, Chu, and Zuo (2010) and Lee (2004).
It is noted that all of the above studies assume that the length of
the maintenance activity is a constant regardless of the machine
conditions. However, in real production, the length of the mainte-
nance activity performed on a machine may depend on the state
(e.g., running time) of the machine. For example, in the timber
industry, log band mills are one of the main machines in a sawmill.
Generally, the saw of a log band mill is maintained by an auto band
saw sharpener to sustain the sharpness of its teeth. Speciﬁcally, the
earlier a log band mill undergoes the teeth sharpening mainte-
nance activity, the less blunt are its teeth, so the less time is needed
to sharpen them. The motivation for this study stems from a saw-
mill that cuts various sizes and shapes of wood. Each log band mill
is operated by a skilled worker. Typically, several log band mills are
simultaneously available and a job (log) can be processed by any
one of them. The conditions of the log band mills and workers
are different. Therefore, the jobs have different processing times
depending on the log band mills selected to process them.
Kubzin and Strusevich (2005) study a two-machine ﬂow shop
scheduling problem with no-wait in process to minimize the
makespan with a maintenance period on one of the machines. They
assume that the length of the maintenance activity depends on its
starting time and provide a polynomial time approximation
scheme for the problem. Kubzin and Strusevich (2006) consider
the two-machine open shop and ﬂow shop scheduling problems
to minimize the makespan. They assume that each machine has
to be maintained exactly once during the planning horizon and
the length of each of maintenance activity depends on its starting
time. They show that the open shop problem is polynomially solv-
able and the ﬂow shop problem NP-hard, for which they present a
fully polynomial approximation scheme and a fast 3/2-approxima-
tion algorithm. Mosheiov and Sidney (2010) study a single-
machine scheduling problem with an option to perform a deterio-
rating maintenance activity. The objectives are to minimize the
makespan, total completion time, maximum lateness, number of
tardy jobs, and total earliness, tardiness, and due-date cost. They
introduce polynomial time solutions for all these problems. Yang
and Yang (2010) consider a single-machine scheduling problem
0360-8352/$ - see front matter  2011 Elsevier Ltd. All rights reserved.
doi:10.1016/j.cie.2010.12.017
⇑ Corresponding author. Fax: +886 5 6327291.
E-mail address: dlyang@nfu.edu.tw (D.-L. Yang).
Computers & Industrial Engineering 60 (2011) 602–605
Contents lists available at ScienceDirect
Computers & Industrial Engineering
journal homepage: www.elsevier .com/ locate/caie
Constraints (2), (4), and (6) make sure that each position
(s 6 lj, j = 1, . . . ,m) on eachmachine is taken by one job. Constraints
(3), (5), and (7) make sure that each position (sP lj + 1, j = 1, . . . ,m)
on each machine is taken by at most one job. Constraint (8) makes
sure that each job is scheduled exactly once. Constraint (9) ensures
that on every machine the unassigned positions must precede all
the assigned positions, so that yijs = 1 if and only if Ji is indeed in po-
sition sth to the last job on Mj. Let wijs be the weight of Ji if it is
scheduled in position sth to the last job on Mj. Then,
wij1 = bij, wij2 = 2bij, . . . , wijlj ¼ ljbij; wijðljþ1Þ ¼ ðlj þ 1þ djljÞaij; . . ., and
wijn ¼ ðnþ djljÞaij. Since bij 6 aij, wij1 6 wij2 6    6 wijlj 6 wijðljþ1Þ
6    6 wijn for all i = 1, 2, . . . , n and j = 1, 2, . . . ,m, constraint (9)
can be removed from the model without affecting the value of opti-
mal solution for the problem. We thus can re-formulate the prob-
lem as the following Assignment Problem (AP), which can be
solved in O(mn3) time (see, e.g., Brucker, 2001):
Minimize
Xn
i¼1
Xm
j¼1
Xlj
s¼1
sbijyijs þ
Xn
s¼ljþ1
ðsþ djljÞaijyijs
2
4
3
5
subject to
Xn
i¼1
yi1s ¼ 1; s¼ 1;2; . . . ; l1
Xn
i¼1
yi1s 6 1; s¼ l1 þ1; l1þ2; . . . ;n
Xn
i¼1
yi2s ¼ 1; s¼ 1;2; . . . ; l2
Xn
i¼1
yi2s 6 1; s¼ l2 þ1; l2þ2; . . . ;n
Xn
i¼1
yims ¼ 1; s¼ 1;2; . . . ; lm
Xn
i¼1
yims 6 1; s¼ lm þ1; lm þ2; . . . ;n
Xm
j¼1
Xn
s¼1
yijs ¼ 1; i¼ 1;2; . . . ;n
yijs 2 f0;1g; i¼ 1;2; . . . ;n; j¼ 1;2; . . . ;m; s¼ 1;2; . . . ;n
Next, we consider the question of how many DMA position-
allocation vectors (l1, l2, . . . , lm) exist. Since n jobs are to be as-
signed to m unrelated parallel machines, 0 6 l1 + l2 +    + lm 6 n.
By Proposition 1, the number of nonnegative integer solutions to
l1 + l2 +    + lm 6 n is C(m + n, n) and it is bounded from above by
ð2nÞm
m! . Thus we conclude that the following theorem holds.
Theorem 1. The Rmjpijr ; TMAj ¼ Tj þ djtjj
P
Ci problem can be
solved in O(nm+3) time, i.e., the problem is polynomially solvable
because m is a constant.
3.2. Minimizing the total machine load
The total machine load is the sum of the makesapn on each ma-
chine. Similar to the analysis of the Rmjpijr ; TMAj ¼ Tj þ djtjj
P
Ci
problem presented in the previous sub-section, we express the to-
tal machine load as follows:
X
Cjmaxðl1; l2; . . . ; lmÞ ¼
Xn
i¼1
Xm
j¼1
Xlj
s¼1
bijxijs þ
Xn
s¼ljþ1
ð1þ djÞaijxijs
2
4
3
5þmTj
If the position (lj) of the DMA of each machine is known in ad-
vance, then the last term on the RHS of (11) is a constant. Minimiz-
ing
P
Cjmaxðl1; l2; . . . ; lmÞ is equivalent to minimizing
Pn
i¼1
Pm
j¼1Plj
s¼1bijxijs þ
Pn
s¼ljþ1ð1þ djÞaijxijs
h i
. The problem can be formulated
as the following n  nm CAAP, where we wish to assign the n jobs
to nm positions on each machine, leaving a total of nm  n posi-
tions unassigned:
Minimize
Xn
i¼1
Xm
j¼1
Xlj
s¼1
bijxijs þ
Xn
s¼ljþ1
ð1þ djÞaijxijs
2
4
3
5
subject to
Xn
i¼1
yi1s ¼ 1; s ¼ 1;2; . . . ; l1 ð12Þ
Xn
i¼1
yi1s 6 1; s ¼ l1 þ 1; l1 þ 2; . . . ;n ð13Þ
Xn
i¼1
yi2s ¼ 1; s ¼ 1;2; . . . ; l2 ð14Þ
Xn
i¼1
yi2s 6 1; s ¼ l2 þ 1; l2 þ 2; . . . ;n ð15Þ
Xn
i¼1
yims ¼ 1; s ¼ 1;2; . . . ; lm ð16Þ
Xn
i¼1
yims 6 1; s ¼ lm þ 1; lm þ 2; . . . ;n ð17Þ
Xm
j¼1
Xn
s¼1
yijs ¼ 1; i ¼ 1;2; . . . ;n ð18Þ
Xn
i¼1
yij1 P
Xn
i¼1
yij2 P   P
Xn
i¼1
yijn; j ¼ 1;2; . . . ;m ð19Þ
yijs 2 f0;1g; i ¼ 1;2; . . . ;n; j ¼ 1;2; . . . ;m;
s ¼ 1;2; . . . ;n ð20Þ
Constraints (12), (14), and (16) make sure that each position
(s 6 lj, j = 1, . . . ,m) on each machine is taken by one job. Con-
straints (13), (15), and (17) make sure that each position
(sP lj + 1, j = 1, . . . ,m) on each machine is taken by at most one
job. Constraint (18) makes sure that each job is scheduled exactly
once. Constraint (19) ensures that on each machine, the unas-
signed positions must precede all the assigned positions, so that
yijs = 1 if and only if Ji is indeed in position sth to the last job on
Mj. Let wijs be the weight of Ji that is scheduled in position sth to
the last job on Mj. Then, wij1 = bij, wij2 = bij, . . . , wijlj ¼ bij; wijðljþ1Þ ¼ð1þ djÞaij; . . ., and wijn ¼ ð1þ djÞaij. Since bij 6 aij, wij1 6 wij2 6    6
wijlj 6 wijðljþ1Þ 6    6 wijn for all i = 1, 2, . . . , n and j = 1, 2, . . . ,m,
constraint (19) can be removed from the model without affecting
the value of optimal solution for the problem. We thus can
re-formulate the problem as the following AP.
Minimize
Xn
i¼1
Xm
j¼1
Xlj
s¼1
bijyijs þ
Xn
s¼ljþ1
ð1þ djÞaijyijs
2
4
3
5
Subject to
Xn
i¼1
yi1s ¼ 1; s¼ 1;2; . . . ; l1
Xn
i¼1
yi1s 6 1; s¼ l1þ1; l1þ2; . . . ;n
Xn
i¼1
yi2s ¼ 1; s¼ 1;2; . . . ; l2
Xn
i¼1
yi2s 6 1; s¼ l2þ1; l2þ2; . . . ;n
Xn
i¼1
yims ¼ 1; s¼ 1;2; . . . ; lm
Xn
i¼1
yims 6 1; s¼ lm þ1; lm þ2; . . . ;n
Xm
j¼1
Xn
s¼1
yijs ¼ 1; i¼ 1;2; . . . ;n
yijs 2 f0;1g; i¼ 1;2; . . . ;n; j¼ 1;2; . . . ;m; s¼ 1;2; . . . ;n
604 T.C.E. Cheng et al. / Computers & Industrial Engineering 60 (2011) 602–605
Unrelated parallel-machine scheduling with rate-modifying activities
to minimize the total completion time
Chou-Jung Hsu a, T.C.E. Cheng b, Dar-Li Yang c,⇑
aDepartment of Industrial Engineering and Management, Nan Kai University of Technology, Nan-Tou 542, Taiwan
bDepartment of Logistics and Maritime Studies, The Hong Kong Polytechnic University, Hung Hom, Kowloon, Hong Kong
cDepartment of Information Management, National Formosa University, Yun-Lin 632, Taiwan
a r t i c l e i n f o
Article history:
Received 7 February 2010
Received in revised form 23 May 2011
Accepted 5 June 2011
Available online 12 June 2011
Keywords:
Scheduling
Rate-modifying activity
Unrelated parallel machines
Total completion time
a b s t r a c t
Zhao et al. (2009) [24] study the m identical parallel-machine scheduling problem with
rate-modifying activities to minimize the total completion time. They show that the prob-
lem can be solved in O(n2m+3) time. In this study we extend the scheduling environment to
the unrelated parallel-machine setting and present a more efﬁcient algorithm to solve the
extended problem. For the cases where the rate-modifying rate is (i) larger than 0 and not
larger than 1, and (ii) larger than 0, we show that the problem can be solved in O(nm+3) and
O(n2m+2) time, respectively.
 2011 Elsevier Inc. All rights reserved.
1. Introduction
Production scheduling and preventive maintenance planning are common but signiﬁcant problems in the manufacturing
industry. Such a problem is commonly known as machine scheduling with availability constraints. Schmidt [21] and Ma et al.
[14] provide comprehensive surveys on this topic. In the context of machine availability, Lee and Leon [8] introduce a class of
scheduling problems in which a rate-modifying activity may be performed. The rate-modifying activity is an activity that
occupies the machine for a given duration and changes the production rate of the machine. No job can be processed while
the rate-modifying activity is being performed. Hence the decisions under consideration are whether and when to schedule
the rate-modifying activity, and how to sequence the jobs in order to minimize some scheduling performance measures. Lee
and Lin [9] assume that the processing time is deterministic while machine breakdown is a random process that follows a
certain probability distribution function. They study the rate-modifying maintenance problem with objective functions such
as the expected makespan, expected total completion time, and expected maximum lateness. Mosheiov and Sidney [16] con-
sider scheduling problems with rate modiﬁcation to minimize the makespan with precedence relations, makespan with
learning effects, and number of tardy jobs. They provide a polynomial time solution for each of the three problems. Mosheiov
and Oron [17] study maintenance activity scheduling and due-date assignment simultaneously. The objective is to minimize
the total earliness, tardiness, and due-date cost. They provide a polynomial time algorithm to solve the problem with the
modifying rate dj > 0. Gordon and Tarasevich [4] study the same problem introduced by Mosheiov and Oron [17]; for the case
where 0 < dj 6 1, they present some properties to reduce the running time of the algorithm for solving the problem. Lodree Jr.
and Geiger [13] study a single-processor, sequence-independent scheduling problem with position-dependent processing
times to minimize the makespan. They show that under certain conditions, the optimal policy is to schedule the
0020-0255/$ - see front matter  2011 Elsevier Inc. All rights reserved.
doi:10.1016/j.ins.2011.06.010
⇑ Corresponding author. Tel.: +886 5 6315746; fax: +886 5 6327291.
E-mail address: dlyang@nfu.edu.tw (D.-L. Yang).
Information Sciences 181 (2011) 4799–4803
Contents lists available at ScienceDirect
Information Sciences
journal homepage: www.elsevier .com/locate / ins
Lemma 1 (Enumerating n-combinations with unlimited repetitions). The number of nonnegative integer solutions to
x1 + x2 +    + xm = n is
Cðnþm 1;mÞ ¼ ðnþm 1Þ!
m!ðn 1Þ! :
Proof. See Mott et al. [19]. h
Lemma 2. The number C(n + m,m) is bounded from above by ð2nÞ
m
m! .
Proof
Cðnþm;mÞ ¼ ðnþmÞ!
m!n!
¼ ðnþmÞðnþm 1Þ . . . ðnþ 1Þ
m!
6 ð2nÞ
m
m!
: 
Lemma 3. If m < n, the order O(mn3 + mn2 log(nm)) is bounded from above by O(mn3).
Proof. O(mn3 +mn2 log(nm)) = O(mn3 +mn2(logn + logm)) 6 O(mn3 +mn2(2logn)) = O(mn3), if m < n. h
Let (l1, l2, . . . , lm) and Ci(l1, l2, . . . , lm) denote the rate-modifying activity position vector and the completion time of Ji that is
processed on one of them unrelated parallel machines based on (l1, l2, . . . , lm). Deﬁne yijs = 1 if Ji is in the position sth to the last
job processed on Mj and yijs = 0 otherwise. Then, we can express the total completion time as follows:
X
Ciðl1; l2; . . . ; lmÞ ¼
Xn
i¼1
Xm
j¼1
Xlj
s¼1
sdijpijyijs þ
Xn
s¼ljþ1
spijyijs
2
4
3
5þXm
j¼1
ljtj: ð1Þ
If the position lj of the rate-modifying activity of each machine is known in advance, then the last item of (1) is a constant.
Minimizing
P
Ciðl1; l2; . . . ; lmÞ is equivalent to minimizing
Pn
i¼1
Pm
j¼1
Plj
s¼1sdijpijyijs þ
Pn
s¼ljþ1spijyijs
h i
.
Similar to Li [12], we can formulate the problem as the following n  nm constrained asymmetric assignment problem,
whereby we would like to assign the n jobs to the nm positions on each machine, leaving a total of nm  n positions
unassigned:
Minimize
Xn
i¼1
Xm
j¼1
Xlj
s¼1
sdijpijyijs þ
Xn
s¼ljþ1
spijyijs
2
4
3
5
Subject to
Xn
i¼1
yi1s ¼ 1; s ¼ 1;2; . . . ; l1; ð2Þ
Xn
i¼1
yi1s 6 1; s ¼ l1 þ 1; l1 þ 2; . . . ;n; ð3Þ
Xn
i¼1
yi2s ¼ 1; s ¼ 1;2; . . . ; l2; ð4Þ
Xn
i¼1
yi2s 6 1; s ¼ l2 þ 1; l2 þ 2; . . . ;n; ð5Þ
. . .Xn
i¼1
yims ¼ 1; s ¼ 1;2; . . . ; lm; ð6Þ
Xn
i¼1
yims 6 1; s ¼ lm þ 1; lm þ 2; . . . ;n; ð7Þ
Xm
j¼1
Xn
s¼1
yijs ¼ 1; i ¼ 1;2; . . . ; n; ð8Þ
Xn
i¼1
yij1 P
Xn
i¼1
yij2 P   P
Xn
i¼1
yijn; j ¼ 1;2; . . . ;m; ð9Þ
yijs 2 f0;1g; i ¼ 1;2; . . . ;n; j ¼ 1;2; . . . ;m; s ¼ 1;2; . . . ;n: ð10Þ
C.-J. Hsu et al. / Information Sciences 181 (2011) 4799–4803 4801
References
[1] D. Biskup, A state-of-the-art review on scheduling with learning effects, European Journal of Operational Research 188 (2008) 315–329.
[2] T.C.E. Cheng, C.-C. Wu, W.-C. Lee, Some scheduling problems with sum-of-processing-times-based and job-position-based learning effects, Information
Sciences 178 (2008) 2476–2487.
[3] T.C.E. Cheng, P.-J. Lai, C.-C. Wu, W.-C. Lee, Single-machine scheduling with sum-of-logarithm-processing-times-based learning considerations,
Information Sciences 179 (2009) 3127–3135.
[4] V.S. Gordon, A.A. Tarasevich, A note: common due date assignment for a single machine scheduling with the rate-modifying activity, Computers &
Operations Research 36 (2009) 325–328.
[5] J.N.D. Gupta, S.K. Gupta, Single facility scheduling with nonlinear processing times, Computers & Industrial Engineering 14 (1988) 387–393.
[6] A.S. Kunnathur, S.K. Gupta, Minimizing the makespan with late start penalties added to processing times in a single facility scheduling problem,
European Journal of Operational Research 47 (1990) 56–64.
[7] W.H. Kuo, D.L. Yang, Note on ‘‘single-machine and ﬂowshop scheduling with a general learning effect model’’ and ‘‘some single-machine and m-
machine ﬂowshop scheduling problems with learning considerations’’, Information Sciences 180 (2010) 3814–3816.
[8] C.Y. Lee, V.J. Leon, Machine scheduling with a rate-modifying activity, European Journal of Operational Research 129 (2001) 119–128.
[9] C.Y. Lee, C.S. Lin, Single-machine scheduling with maintenance and repair rate-modifying activities, European Journal of Operational Research 135
(2001) 493–513.
[10] W.C. Lee, P.J. Lai, Scheduling problems with general effects of deterioration and learning, Information Sciences 181 (2011) 1164–1170.
[11] W.C. Lee, C.C. Wu, Some single-machine and m-machine ﬂowshop scheduling problems with learning considerations, Information Sciences 179 (2009)
3885–3892.
[12] C.L. Li, Viewpoints: a note on unrelated parallel machine scheduling with time-dependent processing times, Journal of Operational Research Society 59
(2008) 1696–1697.
[13] E.J. Lodree Jr., C.D. Geiger, A note on the optimal sequence position for a rate-modifying activity under simple linear deterioration, European Journal of
Operational Research 201 (2010) 644–648.
[14] Y. Ma, C.B. Chu, C.R. Zuo, A survey of scheduling with deterministic machine availability constraints, Computers & Industrial Engineering 58 (2010)
199–211.
[15] G. Mosheiov, K-shaped policies for schedule deteriorating jobs, Journal of the Operational Research Society 47 (1996) 1184–1191.
[16] G. Mosheiov, J.B. Sidney, New results on sequencing with rate modiﬁcation, INFOR 41 (2004) 155–163.
[17] G. Mosheiov, D. Oron, Due-date assignment and maintenance activity scheduling problem, Mathematical and Computer Modelling 44 (2006) 1053–
1057.
[18] G. Mosheiov, A. Sarig, Scheduling a maintenance activity and due-window assignment on a single machine, Computers & Operations Research 36
(2009) 2541–2545.
[19] J.L. Mott, A. Kandel, T.P. Baker, Discrete Mathematics for Computer Scientists & Mathematicians, Prentice-Hall, New Jersey, 1986.
[20] M. Pinedo, Scheduling: Theory, Algorithms, and Systems, Prentice-Hall, New Jersey, 2002.
[21] G. Schmidt, Scheduling with limited machine availability, European Journal of Operational Research 121 (2000) 1–15.
[22] Y.Q. Yin, D.H. Xu, K.B. Sun, H.X. Li, Some scheduling problems with general position-dependent and time-dependent learning effects, Information
Sciences 179 (2009) 2416–2425.
[23] Y.Q. Yin, D.H. Xu, X.K. Huang, Notes on ‘‘some single-machine scheduling problems with general position-dependent and time-dependent learning
effects’’, Information Sciences 181 (2011) 2209–2217.
[24] C.L. Zhao, H.Y. Tang, C.D. Cheng, Two-parallel machines scheduling with rate-modifying activities to minimize total completion time, European Journal
of Operational Research 198 (2009) 354–357.
[25] C.L. Zhao, H.Y. Tang, A note to due-window assignment and single machine scheduling with deteriorating jobs and a rate-modifying activity,
Computers & Operations Research (2010), doi:10.1016/j.cor.2010.04.006.
C.-J. Hsu et al. / Information Sciences 181 (2011) 4799–4803 4803
3. Minimization of the total completion time
Cheng et al. (2011) indicated that the Rm|pijr, TMAj = Tj + djtj|
P
Ci
problem can be solved in O(nm+3) time if aij P bij. In this note, we
show that the Rm|pijr, TMAj = Tj + djtj|
P
Ci problem can be solved
in O(nm+3) time no matter what aij P bij or aij < bij.
First, the following two lemmas are useful for solving the
problem.
Lemma 1 ((Mott, Kandel, & Baker, 1986)). The number of nonnegative
integer solutions tox1 + x2 +    + xm = n isCðnþm 1;m 1Þ ¼ ðnþm1Þ!ðm1Þ!n! .
Lemma 2 ((Cheng et al., 2011)). The number C(n +m,m) is bounded
from above by ð2nÞ
m
m! .
Next, we denote that the maintenance activity is in position lj
ð0 6 lj 6 njÞ on machine Mj if it is scheduled immediately before
the job scheduled in position ljth to the last job on machine Mj.
That is, if lj = nj, it means that we perform the maintenance activity
before we process any job on machine Mj; if lj = 0, it implies that
there is no maintenance activity scheduled on machine Mj. Then
the actual processing time of job Ji if it is scheduled in the position
hth to the last job on machine Mj is deﬁned by:
pijh ¼
bij; j ¼ 1;2; . . . ;m; i ¼ 1;2; . . . ; nj; h 6 lj;
aij; j ¼ 1;2; . . . ;m; i ¼ 1;2; . . . ; nj; h > lj:

ð2Þ
Let (l1, l2, . . . , lm) and Ci(l1, l2, . . . , lm) respectively denote the mainte-
nance activity position vector and the completion time of job Ji that
is processed on one of the m unrelated parallel machines based on
(l1, l2, . . . , lm). Thus, we see that
X
Ciðl1; l2; . . . ; lmÞ¼
Xm
j¼1
Xlj
h¼1
hb½hj þ
Xnj
h¼ljþ1
ðhþdjljÞa½hj
0
@
1
AþXm
j¼1
ljTj: ð3Þ
Clearly, we can ignore the last term on the right hand of (3) (i.e.,Pm
j¼1ljTjÞ because it represents a constant in the objective function.
Then, we have the following theorem:
Theorem 1. The Rm|pijr, TMAj = Tj + djtj|
P
Ci problem can be solved in
O(nm+3) time no matter what aij P bij or aij < bij.
Proof. We deﬁne yijs = 1 if job Jj is in the sth position to the last job
processed on machineMj and yijs = 0 otherwise. Then, (3) can be re-
written as follows:
Minimize
Xn
i¼1
Xm
j¼1
Xn
s¼1
wijsyijs: ð4Þ
Subject to
Xn
i¼1
yijs ¼ 1; j ¼ 1;2; . . . ;m; s ¼ 1;2; . . . ; lj; ð5Þ
Xn
i¼1
yijs 6 1; j ¼ 1;2; . . . ;m; s ¼ lj þ 1; lj þ 2; . . . ;n; ð6Þ
Xm
j¼1
Xn
s¼1
yijs ¼ 1; i ¼ 1;2; . . . ;n; ð7Þ
Xn
i¼1
yij1 P
Xn
i¼1
yij2 P   P
Xn
i¼1
yijn; j ¼ 1;2; . . . ;m; ð8Þ
yijs 2 f0;1g; i ¼ 1;2; . . .n; j ¼ 1;2; . . . ;m; s ¼ 1;2; . . . ;n:
ð9Þ
where
wijs ¼
sbij; j ¼ 1;2; . . . ;m; i ¼ 1;2; . . . ;n; s 6 lj;
ðsþ djljÞaij; j ¼ 1;2; . . . ;m; i ¼ 1;2; . . . ;n; s > lj:

ð10Þ
Constraint (5)makes sure that eachposition ðs 6 lj; j ¼ 1;2; . . . ;mÞ on
eachmachine is taken by one job. Constraint (6)makes sure that each
position ðsP lj þ 1; j ¼ 1;2; . . . ;mÞ on each machine is taken by at
most one job. Constraint (7)makes sure that each job is scheduled ex-
actly once. Constraint (8) ensures that on every machine, the unas-
signed positions must precede all the assigned positions, so that
yijs = 1 if and only if job Ji is in fact the sth to the last job onmachineMj.
From (10), we know that wij1 6 wij2 6    6 wijlj and
wijðljþ1Þ 6 wijðljþ2Þ 6   6 wijn and thus
Pn
i¼1yij1 P
Pn
i¼1yij2 P   
P
Pn
i¼1yijlj and
Pn
i¼1yijðljþ1Þ P
Pn
i¼1yijðljþ2Þ P   P
Pn
i¼1yijn, respec-
tively. In addition, from Constraints (5) and (6), we obtain thatPn
i¼1yijlj ð¼ 1ÞP
Pn
i¼1yijðljþ1Þð6 1Þ for j = 1, 2, . . . ,m. Hence, the
inequality
Pn
i¼1yij1 P
Pn
i¼1yij2 P   P
Pn
i¼1yijn holds, for
j = 1, 2, . . . ,m. Thus, Constraint (8) can be removed from the
formulation without affecting the optimal solution of the problem.
Consequently, the Rm|pijr, TMAj = Tj + djtj|
P
Ci problem can be re-
formulated as the following assignment problem and thus can be
solved in O(mn3) time (see, e.g., Brucker, 2001).
Minimize
Xn
i¼1
Xm
j¼1
Xn
s¼1
wijsyijs;
Subject to ð5Þ; ð6Þ; ð7Þ; and ð9Þ:
Furthermore, since there are n jobs to be assigned to m unre-
lated parallel machines, we have that 0 6 l1 þ l2 þ . . . þ lm 6 n.
Let lmþ1 ¼ n ðl1 þ l2 þ . . . þ lmÞP 0. This implies that
l1 + l2 +    + lm+1 = n. By Lemma 1, the number of nonnegative inte-
ger solutions to l1 + l2 +    + lm+1 = n is C(n +m,m). By Lemma 2, the
number C(n +m,m) is bounded from above by ð2nÞm=m!. Thus, the
Rm|pijr, TMAj = Tj + djtj|
P
Ci problem can be solved in O(nm+3) time
no matter what aij P bij or aij < bij. h
4. Minimization of the total machine load
In Cheng et al. (2011), they pointed out that the
Rmjpijr ; TMAj ¼ Tj þ djtjj
P
Cjmax problem can be solved in
O(nm+3) time if aij P bij. In this note, we prove that the
Rmjpijr ; TMAj ¼ Tj þ djtjj
P
Cjmax problem remains polynomially
solvable in O(nm+3) time no matter what aij P bij or aij < bij.
Let Cjmaxðl1; l2; . . . ; lmÞ denote the makespan of machine Mj based
on maintenance activity position vector (l1, l2, . . . , lm). Performing a
similar analysis of Rm|pijr, TMAj = Tj + djtj|
P
Ci, we have that
.X
Cjmaxðl1; l2; . . . ; lmÞ¼
Xm
j¼1
Xlj
h¼1
b½hj þ
Xnj
h¼ljþ1
ð1þdjljÞa½hj
0
@
1
AþXm
j¼1
Tj: ð11Þ
Again, we can ignore the last term on the right hand of (11) (i.e.,Pm
j¼1TjÞ because it represents a constant in the objective function.
Theorem 2. The Rmjpijr; TMAj ¼ Tj þ djtjj
P
Cjmax problem can be
solved in O(nm+3) time no matter what aij P bij or aij < bij.
Proof. We deﬁne yijs = 1 if job Jj is in the sth position to the last job
processed on machine Mj and yijs = 0 otherwise. Then, (11) can be
re-written as follows:
Minimize
Xn
i¼1
Xm
j¼1
Xn
s¼1
wijsyijs: ð12Þ
Subject to
Xn
i¼1
yijs ¼ 1; j ¼ 1;2; . . . ;m; s ¼ 1;2; . . . ; lj; ð13Þ
Xn
i¼1
yijs 6 1; j ¼ 1;2; . . . ;m; s ¼ lj þ 1; lj þ 2; . . . ; n; ð14Þ
Xm
j¼1
Xn
s¼1
yijs ¼ 1; i ¼ 1;2; . . . ; n; ð15Þ
Xn
i¼1
yij1 P
Xn
i¼1
yij2 P . . .P
Xn
i¼1
yijn; j ¼ 1;2; . . . ;m; ð16Þ
yijs 2 f0;1g; i ¼ 1;2; . . . ; n; j ¼ 1;2; . . . ;m; s ¼ 1;2; . . . ;n; ð17Þ
1142 S.-J. Yang et al. / Computers & Industrial Engineering 62 (2012) 1141–1143
This article appeared in a journal published by Elsevier. The attached
copy is furnished to the author for internal non-commercial research
and education use, including for instruction at the authors institution
and sharing with colleagues.
Other uses, including reproduction and distribution, or selling or
licensing copies, or posting to personal, institutional or third party
websites are prohibited.
In most cases authors are permitted to post their version of the
article (e.g. in Word or Tex form) to their personal website or
institutional repository. Authors requiring further information
regarding Elsevier’s archiving and manuscript policies are
encouraged to visit:
http://www.elsevier.com/copyright
Author's personal copy
recently. Kuo and Yang [14] study single-machine scheduling
problems with a cyclic process of aging effects and multi-main-
tenance activities. They investigate the problem with job-indepen-
dent and position-dependent aging effects to minimize the
makespan and provide a polynomial time algorithm to solve the
problem. Zhao and Tang [27] extend the study of Kuo and Yang [14]
to the case with a job-dependent aging effect. They show that the
problem can be optimally solved in polynomial time. Yang et al. [21]
study a due-window assignment scheduling problem on a single-
machine with simultaneous consideration of job-dependent aging
effects and maintenance. The aim is to ﬁnd jointly the optimal
maintenance position, the optimal due-window position, and the
optimal job sequence to minimize a total cost function. They prove
that the problem is polynomially solvable. Yang and Yang [22]
explore single-machine scheduling problems with the aging or
deteriorating effect under a deteriorating maintenance activity
consideration. They develop polynomial time algorithms for all the
problems studied. Yang and Yang [23] study single-machine sche-
duling with simultaneous consideration of job-dependent aging
effects, multi-maintenance activities, and variable maintenance
durations to minimize the makespan. They show that all the studied
problems are polynomially solvable. Yang and Yang [24] further
consider single-machine scheduling with aging or deteriorating
effects and deteriorating maintenance activities simultaneously to
minimize the total completion time. They show that the problem
remains polynomially solvable if an upper bound on the mainte-
nance frequency is given.
In this study we consider scheduling with aging effects and
multi-maintenance activities simultaneously on parallel machines.
The motivation for this study stems from the metal or wood
cutting process that cuts products to various sizes and shapes in
a parallel-machine setting. Due to wearing of the cutting tool, the
actual processing time of a product on a machine increases with
respect to the number of products already processed on the
machine. The time required for processing a product depends on
the quality of the cutting tool. Therefore, under normal circum-
stances, the cutting tool is replaced by a new one or is maintained
after it has processed some products to improve its production
efﬁciency. We assume that each machine may be subject to several
maintenance activities over the scheduling horizon and the dura-
tion of each maintenance activity on a machine is a constant. The
objective is to ﬁnd jointly the optimal maintenance frequencies,
the optimal positions of the maintenance activities, and the
optimal job sequences to minimize the total machine load. The
total machine load, which is the sum of the largest completion
times of the machines, is a relevant performance measure for
scheduling problems with the learning or deteriorating effect.
Several recent papers have studied scheduling problems to mini-
mize the total machine load (see, e.g., Moshieov [18], Jeng and Lin
[10], Kuo and Yang [13], Ji and Cheng [11, 12], and Yang et al. [25]).
We show that the problem under study is polynomially solvable
when the maintenance frequencies on the machines are given.
The remainder of this paper is organized as follows. In the next
section we formulate the problem. In Section 3 we present several
important preliminary results for the single-machine case. We
provide polynomial time solutions for variants of the problem in
Section 4. We discuss some special cases of the problem and
present their solutions in Section 5. In Section 6, we give a
numerical example for solving the problem. We conclude the paper
and suggest some topics for future research in the last section.
2. Problem formulation
We formulate the problem under study as follows: there are n
independent jobs J¼{J1, J2,y, Jn} to be processed on m unrelated
parallel machines (Mh, h¼1, 2,y,m). All the jobs are simulta-
neously available at time zero and job preemption is not allowed.
A machine can process at most one job at a time and cannot stand
idle until the last job assigned to it is ﬁnished. To counteract the
aging effects on machines, maintenance activities may be per-
formed on the machines to sustain their production efﬁciency.
We assume that each machine may be subject to several main-
tenance activities over the scheduling horizon and the duration of
each maintenance activity on machine Mh is a constant th, h¼1,
2,y,m. We further assume that a maintenance activity can be
scheduled on a machine immediately after it has completed the
processing of any job. The machine reverts to its initial condition
after the maintenance activity and the aging effects start anew.
Note that for each machine the time 0 can be considered as the
completion time of a maintenance activity.
Moreover, we assume that each machine must process at least
one job and mon. Then, 0rkhr(nm), h¼1, 2,y,m, where kh
denotes the maintenance frequency on machine Mh. Note that kh
(h¼1, 2,y,m) is a decision variable. If machine Mh is subject to
kh times of maintenance, then there are (khþ1) groups of jobs in
the job sequence on machine Mh. For a given schedule, the total
machine load is given by
Pm
h ¼ 1 C
h
max, where C
h
max denotes the
makespan on machine Mh.
We examine two models of aging effects in this study. The ﬁrst
model concerns job-dependent aging effects whereby if job Jj is
scheduled in the rth position after a maintenance activity on
machine Mh, its actual processing time pjrh is deﬁned by
pjrh ¼ pjhrajh , h¼ 1, 2, . . .,m, j¼ 1, 2, . . .,n and 1rrrn, ð1Þ
where pjh and ajh40 are the normal processing time and the
aging factor of job Jj scheduled on machine Mh, respectively.
The second model concerns linear position-dependent aging
effects whereby if job Jj is scheduled in the rth position after a
maintenance activity on machine Mh, its actual processing time
pjrh is deﬁned by
pjrh ¼ pjhþbjhr, h¼ 1, 2, . . .,m, j¼ 1, 2, . . .,n, and 1rrrn, ð2Þ
where pjh and bjh40 are the normal processing time and the
aging factor of job Jj scheduled on machine Mh, respectively.
Since the objective is to minimize the total machine load, we
have to determine jointly the optimal maintenance frequencies,
the optimal positions of the maintenance activities, and the
optimal job sequences to minimize the sum of the largest
completion times of all the machines. Adopting the three-ﬁeld
notation in Kuo and Yang [14], we denote our problem as
Rm=pjrh,markh=
P
Chmax, where ma in the second ﬁeld represents
the maintenance activity.
3. Preliminary analysis
In this section we present some important lemmas for an
optimal schedule for the problem under study.
Lemma 1. (Enumerating n-combinations with unlimited repeti-
tions). The number of non-negative integer solutions to x1þx2þ?þ
xm¼n is C(mþn1, n)¼(mþn1)!/n!(m1)!.
Proof. See Mott et al. [19]. &
Lemma 2. The number C(n, nm) is bounded from above by nm/m!.
Proof.
Cðn,nmÞ ¼ n!ðnmÞ!m! ¼
n ðn1Þ  ðn2Þ      ðnmþ1Þ
m!
r n
m
m!
: &
Lemma 3. If mon, then Oðmn3þn2m logðnmÞÞ is bounded from
above by O(mn3).
D.-L. Yang et al. / Computers & Operations Research 39 (2012) 1458–1464 1459
Author's personal copy
is scheduled in any position (r, g, h) in which 2rr. Constrain (7)
ensures that on each machine the assigned positions must
precede all the unassigned positions.
Let wjrh be the weight of Jj if it is the rth job following a
maintenance activity on machine Mh. Then, we have wjrh ¼ pjhrajh
for the job-dependent aging model and wjrh¼pjhþbjhr for the
position-dependent aging model and wj1hrwj2hr?rwjughh,
j¼1, 2,y, n and h¼1, 2, ...,m. As a result, we can drop constrain
(7) from the model without affecting the optimal solution of the
problem. In addition, we may ignore the time required for
maintenance, as it represents a constant in the objective function.
Hence, the problem can be formulated as the following nnm
constrained asymmetric assignment problem, i.e., we seek to assign
n jobs to nm positions, with n positions on each machine, leaving
a total of nm–n positions unassigned
Minimize
Xm
h ¼ 1
Xn
j ¼ 1
Xkh
g ¼ 0
Xugh
r ¼ 1
pjrhxjrgh,
subject to ð4Þ, ð5Þ, ð6Þ and ð8Þ: ð9Þ
Therefore the assignment problem can be solved in
Oðmn3þn2m logðnmÞÞ time (see, e.g., Li [16]). By Lemma 3,
Oðmn3þn2m logðnmÞÞ is bounded from the above by O(mn3) if
mon. Moreover, since there are n jobs to be assigned to m
unrelated parallel machines and each machine must process at
least one job, we have 0rk1þk2þ?þkmrnm. Let kmþ1¼
(nm)(k1þk2þ?þkm)Z0. This implies that k1þk2þ?þ
kmþkmþ1¼nm. By Lemma 1, the number of non-negative
integer solutions to k1þk2þ?þkmrnm is C(n, nm). By
Lemma 2, the number C(n, nm) is bounded from above by
nm/m!. Thus both problems Rm=pjrh ¼ pjhrajh ,markh=
P
Chmax and
Rm=pjrh ¼ pjhþbjhr,markh=
P
Chmax can be optimally solved in
O(nmþ3) time. &
Remark 1. As for a general position-based aging model, if it
sufﬁces to apply the group balance principle to determine the
optimal numbers of jobs in the groups on a machine when the
machine is maintained k times in the schedule, then, based on
the above analysis, Theorem 1 is still valid for the general
position-based aging model.
5. Special cases
In this section we investigate some special cases of the problem
considered above and show that they can be optimally solved by
some lower order algorithms. We assume that there are n indepen-
dent jobs to be processed on m identical parallel machines. Each
machine must process at least one job and may be subject to several
maintenance activities over the scheduling horizon. The duration of
each maintenance activity is a constant t0.
5.1. Pm=pjrh ¼ pjra, markh=
P
Chmax
This is the case where n independent jobs are processed on m
identical parallel machines. The actual processing time of job Jj is
given by pjrh¼pjra if it is scheduled in the rth position on a
machine, where a40 is a common aging factor of the jobs.
Theorem 2. Pm=pjrh ¼ pjra,markh=
P
Chmax can be optimally
solved in Oðnmþ1 lognÞ time.
Proof. Let J[r]h denote the rth job following a maintenance
activity on machine Mh and p[r]h is its normal processing time.
For a given maintenance frequency kh on machine Mh, if we
assume that all of the jobs are assigned to machine Mh, then we
can use Lemma 5 to obtain the optimal positions of the main-
tenance activities and the number of jobs in each group in the
scheduling sequence on machine Mh, i.e., ugh ¼ ðdn=ðkhþ1ÞeÞ1 or
ugh ¼ dn=ðkhþ1Þe. Then the total machine load is given by
Xm
h ¼ 1
Chmax ¼
Xm
h ¼ 1
Xkh
g ¼ 1
t0þ
Xm
h ¼ 1
Xkh
g ¼ 0
Xugh
r ¼ 1
p½rhr
a: ð10Þ
Clearly, the term
Pm
h ¼ 1
Pkh
kh
t0 in (10) is a constant. Let wrh¼ra,
h¼1, 2,y,m and r¼1, 2,y, ugh. Then (10) can be viewed as the
scalar product of the vectors wrh and p[r]h. Therefore, by Lemma 4,
we ﬁrst sort all the jobs in non-increasing order of their normal
processing times (pj). Then we assign the job with the largest
normal processing time to the position with the smallest value of
wrh, the job with the second largest normal processing time to the
position with the second smallest value of wrh, and so on. The
time complexity of a sorting algorithm is O(n log n) and 0rk1þ
k2þ?þkmrnm is bounded from above by nm/m!. Therefore,
Pm=pjrh ¼ pjra,markh=
P
Chmax can be solved in O(n
mþ1 log n)
time. &
5.2. Pm=pjrh ¼ pjþbjr, markh=
P
Chmax
This is the case where n independent jobs are processed on m
identical parallel machines. The actual processing time of job Jj is
given by pjrh¼pjþbjr if it is scheduled in the rth position on a
machine, where pj and bj are the normal processing time and the
aging ratio of job Jj, respectively.
Performing a similar analysis of Pm=pjrh ¼ pjra, markh=P
Chmax, we have the following theorem.
Theorem 3. Pm=pjrh ¼ pjþbjr, markh=
P
Chmax can be optimally
solved in O(nmþ1 log n) time.
Proof. The proof is similar to that of Theorem 2. &
6. Numerical example
We present a numerical example in which we apply the
theoretical results derived above to solve an instance of
Rm=pjrh ¼ pjhrajh , markh=
P
Chmax. The example is to schedule
15 jobs on two identical parallel machines with job-dependent
aging effects to minimize the total machine load. The set of job
Table 1
Job parameters for numerical example.
J1 J2 J3 J4 J5 J6 J7 J8 J9 J10 J11 J12 J13 J14 J15
pj 8 16 7 3 14 5 12 4 17 9 15 11 6 13 10
aj 0.3 0.25 0.2 0.3 0.15 0.2 0.15 0.3 0.05 0.1 0.15 0.08 0.25 0.12 0.1
D.-L. Yang et al. / Computers & Operations Research 39 (2012) 1458–1464 1461
Author's personal copy
parameters for the numerical example is presented in Table 1. The
duration of each maintenance activity is t0¼2.0. For given the
maintenance frequency on each machine, we solve the corre-
sponding assignment problem using LINGO version 11.0 on a
personal computer with a 2.40 GHz Intel Core 2 Quad CPU and
2GB RAM under Windows XP. The running time for solving the
corresponding assignment problem is less than one second (note
that the running time is the total time used to generate and solve
the model by LINGO).
We deﬁne Gih as the ith group of job sequence on machine Mh.
Table 2 shows the optimal job sequences and the total machine
loads for all the possible maintenance frequencies. From Table 2,
we see that the global optimal schedules are obtained when (k1,
k2)¼(4, 0), job sequences G11¼(J5, J6, J9), G21¼(J7, J15, J12), G31¼
(J1, J3, J10), G41¼(J13, J8), and G51¼(J11, J14) are on machineM1, and
G12¼(J2, J4) on machine M2; or (k1, k2)¼(3, 1), job sequences
G11¼(J7, J6, J9), G21¼(J1, J15, J12), G31¼(J13, J3, J10), and G41¼(J5, J14)
are on machine M1, and G12¼(J2, J4) and G22¼(J11, J8) on machine
M2; or (k1, k2)¼(2, 2), job sequences G11¼(J7, J6, J9), G21¼(J1, J15,
J12), and G31¼(J11, J8) are on machine M1, and G12¼(J2, J4),
G22¼(J13, J3, J10), and G32¼(J5, J14) on machine M2. The minimum
total machine load is 166.263.
7. Conclusions
In this paper we study scheduling with aging effects and multi-
maintenance activities simultaneously on parallel machines. We
examine two types of aging effects in this study. We consider that
each machine may be subject to kh times (0rkhrnm, h¼
1, 2,y,m) of maintenance activities over the scheduling horizon.
We apply the group balance principle to determine the optimal
positions of the maintenance activities and the number of jobs in
each group in the scheduling sequence on each machine. The
objective is to ﬁnd jointly the optimal maintenance frequencies,
the optimal positions of the maintenance activities, and the
optimal job sequences to minimize the total machine load. We
show that all the versions of the problem under study remain
polynomially solvable when the maintenance frequency kh on
machine Mh (h¼1, 2,y,m) is given. The proposed algorithm is
still valid for a general position-based aging model if Lemma 5
holds. Further research may investigate problems concerning a
general aging model or variable maintenance durations, in other
shop environments, and involving other performance measures.
Acknowledgments
We thank the Editor-in-Chief and two anonymous reviewers for
their helpful comments and suggestions on an earlier version of the
paper. This research was supported in part by the National Science
Council of Taiwan, Republic of China, under Grant numbers NSC
99-2221-E-150-034-MY2 and NSC 100–2221-E-252-002-MY2.
References
[1] Bachman A, Janiak A. Scheduling jobs with position-dependent processing
times. Journal of the Operational Research Society 2004;55:257–64.
[2] Biskup D. A state-of-the-art review on scheduling with learning effects.
European Journal of Operational Research 2008;188:315–29.
[3] Gawiejnowicz S. Time-dependent scheduling. New York: Springer-Verlag
Inc.; 2008.
[4] Hardy GH, Littlewood JE, Polya G. Inequalities. London: Cambridge University
Press; 1967.
[5] Janiak A, Bachman A. Minimizing maximum lateness under linear deteriora-
tion. European Journal of Operational Research 2000;126:557–66.
[6] Janiak A, Krysiak T, Pappis CP. Parallel processor scheduling problems with
exponential models of job values. In: Janiak A, editor. Scheduling in computer
and manufacturing systems. Poland: Warszawa: WKL; 2006. p. 115–34.
(5
,
5
)
G
1
1
¼
(J
3
,
J 9
),
G
2
1
¼
(J
1
,
J 1
2
),
G
3
1
¼
(J
1
4
),
G
4
1
¼
(J
8
),
G
5
1
¼
(J
7
),
G
6
1
¼
(J
1
1
),
G
1
2
¼
(J
2
),
G
2
2
¼
(J
1
5
,
J 1
0
),
G
3
2
¼
(J
6
),
G
4
2
¼
(J
1
3
),
G
5
2
¼
(J
4
),
G
6
2
¼
(J
5
)
1
7
1
.8
7
3
(6
,
5
)
G
1
1
¼
(J
4
,
J 9
),
G
2
1
¼
(J
1
5
),
G
3
1
¼
(J
5
),
G
4
1
¼
(J
8
),
G
5
1
¼
(J
1
3
),
G
6
1
¼
(J
3
),
G
7
1
¼
(J
6
),
G
1
2
¼
(J
2
,
J 1
2
),
G
2
2
¼
(J
7
),
G
3
2
¼
(J
1
),
G
4
2
¼
(J
1
1
),
G
5
2
¼
(J
1
4
),
G
6
2
¼
(J
1
0
)
1
7
3
.2
2
7
(7
,
5
)
G
1
1
¼
(J
3
,
J 9
),
G
2
1
¼
(J
1
4
),
G
3
1
¼
(J
1
2
),
G
4
1
¼
(J
4
),
G
5
1
¼
(J
1
0
),
G
6
1
¼
(J
6
),
G
7
1
¼
(J
1
),
G
8
1
¼
(J
8
),
G
1
2
¼
(J
2
),
G
2
2
¼
(J
1
5
),
G
3
2
¼
(J
1
3
),
G
4
2
¼
(J
1
1
),
G
5
2
¼
(J
5
),
G
6
2
¼
(J
7
)
1
7
4
.6
0
0
(8
,
5
)
G
1
1
¼
(J
3
),
G
2
1
¼
(J
7
),
G
3
1
¼
(J
1
5
),
G
4
1
¼
(J
6
),
G
5
1
¼
(J
8
),
G
6
1
¼
(J
4
),
G
7
1
¼
(J
1
4
),
G
8
1
¼
(J
1
),
G
9
1
¼
(J
1
0
),
G
1
2
¼
(J
2
),
G
2
2
¼
(J
1
3
),
G
3
2
¼
(J
5
),
G
4
2
¼
(J
1
2
),
G
5
2
¼
(J
9
),
G
6
2
¼
(J
1
1
)
1
7
6
.0
0
0
(6
,
6
)
G
1
1
¼
(J
3
,
J 9
),
G
2
1
¼
(J
1
4
),
G
3
1
¼
(J
1
2
),
G
4
1
¼
(J
1
3
),
G
5
1
¼
(J
1
1
),
G
6
1
¼
(J
5
),
G
7
1
¼
(J
7
),
G
1
2
¼
(J
2
),
G
2
2
¼
(J
1
5
),
G
3
2
¼
(J
4
),
G
4
2
¼
(J
1
0
),
G
5
2
¼
(J
6
),
G
6
2
¼
(J
1
),
G
7
2
¼
(J
8
)
1
7
4
.6
0
0
(7
,
6
)
G
1
1
¼
(J
3
),
G
2
1
¼
(J
7
),
G
3
1
¼
(J
1
5
),
G
4
1
¼
(J
5
),
G
5
1
¼
(J
1
2
),
G
6
1
¼
(J
9
),
G
7
1
¼
(J
1
),
G
8
1
¼
(J
1
0
),
G
1
2
¼
(J
2
),
G
2
2
¼
(J
1
3
),
G
3
2
¼
(J
6
),
G
4
2
¼
(J
8
),
G
5
2
¼
(J
4
),
G
6
2
¼
(J
1
4
),
G
7
2
¼
(J
1
1
)
1
7
6
.0
0
0
(k
1
,
k
2
):
m
a
in
te
n
a
n
ce
fr
e
q
u
e
n
ci
e
s
o
n
m
a
ch
in
e
M
1
a
n
d
M
2
.
a
T
h
e
m
in
im
u
m
to
ta
l
m
a
ch
in
e
lo
a
d
.
D.-L. Yang et al. / Computers & Operations Research 39 (2012) 1458–1464 1463
國科會補助計畫衍生研發成果推廣資料表
日期:2012/10/30
國科會補助計畫
計畫名稱: 具有維修作業之平行機台排程問題研究
計畫主持人: 楊達立
計畫編號: 99-2221-E-150-034-MY2 學門領域: 作業研究
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
無 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
