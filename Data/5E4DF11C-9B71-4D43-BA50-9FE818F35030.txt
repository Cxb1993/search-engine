中文摘要
本研究製作出一套既符合 SCORM 規範且具有註記功能的教材播放系統，命名為
Power RTE。符合 SCORM 規範的 ADL Sample RTE 只有記載學習者的學習結果(前、
後測的分數)與學習路徑，本身並沒有記錄註記資訊的機制。實際上，學習歷程的型
態並不僅只有測驗的分數與瀏覽課程的路徑，此外尚有學習者針對學習物件內容所做
的註解、螢光筆畫記、重點整理…等註記；故可說是學習歷程的型態之一。基於上述
的理由，本研究採用系統再造工程的模式，改善 ADL Sample RTE，使其能提供儲存
學習者註記資訊的功能。軟體再造工程分三階段進行：「靜態分析」可以瞭解系統的
整體架構；「動態分析」則是藉由網頁間的互動行為得知原始碼的啟動機制。經由靜
態與動態的分析後，註記功能的增加便在「系統重建」階段中進行；最後，則是針對
新系統的功能性來做評估。本研究主要成果為 Power RTE，具有註記功能又符合
SCORM 規範的數位學習平台。利用 Power RTE 註記的資訊可以與其他 RTE 使用者
分享；亦即，含有註記資訊的學習物件，仍然可以在其他符合 SCORM 規範的學習平
台使用。
關鍵詞：數位學習、SCORM、開放源碼、註記、軟體再造
Abstract
This study develops a learning system with annotation capability, called Power RTE, from
ADL Sample Run-time Environment 1.3.3 (RTE), an open-source learning system based
on SCORM specification. The SCORM specification just keeps track of each learner’s 
grades and browsing sequencing. In particular, simple sequencing specification is
mentioned in SCORM 2004. However, learning progress should contain not only grades
and course sequencing but also learning annotation. In order to introduce the annotation
functionality, this study adopted program understanding methods to reconstruct ADL
Sample RTE. Static analysis is performed to produce the overall module hierarchy and
identify modules to be modified. Then dynamic analysis is performed to realize the
behavior of the dynamic web pages in Java Script and Java language. Finally, new UI
elements and annotation module are integrated with the ADL Sample RTE.The result of
this study is a SCORM-compliant learning system with annotation capability. That is, the
annotated course also can be passed through SCORM validation. Moreover, the annotation
contents can be shared no matter inside or outside of Power RTE.
Keywords: e-Learning, SCORM, open source, annotation, software reengineering
1. Introduction
As e-Learning technology matures and its application flourishes, more and more digital
educational materials are produced. However, courseware is not the only factor for successful
e-Learning implementation. Learning systems also play an important role in leading to the
success of e-learning. In the past, the contents of teaching materials were authored by teachers to
cover the need of all learners. But once the content is on line, it is fixed and seldom changed. The
Koivunen., 2001). Annotea treats annotation as additional information of the original documents,
and stores annotations on several annotation servers. Annotea achieves annotation sharing and
reuse through open RDF. When a user wants to annotate some texts in the document, he simply
marks these texts and presses the associated key, and the annotation information is then stored in
RDF format.
3. RTE Reengineering
After evaluating the complexity, interactivity, and functionality of the ADL Sample RTE, we
adopted a reengineering process to construct Power RTE. The two major steps of reverse
engineering process are as follows:
(a) Static analysis: During this phase, the system is analyzed using some tools to discover
its structure such as module relationships.
(b)Dynamic analysis: In this step, two slices would be executed. One is to examine the
runtime behavior of the system such as the interaction between server and client. The other is
to find out what source code is triggered to execute.
The Reconstruction phase is the most complex one of the four phases. The main tasks of this
phase are to design, develop, and deploy the evolved system. At last, a new system will be
produced in this step. After reconstruction, the reengineered system is evaluated to determine
whether it conforms to requirement or not.
Good tools are prerequisite to the successful execution of a reengineering work. Tools used in
this study are Macromedia Dreamweaver and Borland J++ Builder (BJB). Dreamweaver is useful
in static analysis and reconstructing application interface in the last phase. BJB supplies code
structure window that is very powerful in tracing source code. BJB is mainly applied for dynamic
analysis and modifying the program code.
Any SCORM materials contain a XML file, named‘imsmanifest.xml’. It describes the general
information of the material such as the internal structure, course names, and so on. In the process
of course browsing, RTE system would parse this file to present the course structure and all
course units.
After reverse engineering ADL Sample RTE to determine the modules that are to be modified, the
next step is to introduce the annotation functionality to the original RTE code. The presentation of
course content in RTE is still in HTML format, and since most annotation functionalities such as
highlighting and underlining are in fact realized by general HTML editors. Again, an open source
HTML editor solution is sought and a tool called HtmlArea is chosen to be integrated into RTE to
realize the annotation functionality. HtmlArea is implemented in Java Scripts and can be loaded
into any browsers easily.
As indicated by the result of dynamic analysis, the command buttons available in browsing
course content are defined in LMSFrame.jsp. Therfore, a button for invoking annotation
functionality is added in LMSFrame.jsp and the proceduce invoked is defined in a file, anno.jsp.
The procedure in anno.jsp finds the source file of the course content, load the file into
annoContent area, and invoke the HtmlArea to provide the annotation functionality. From the
previous analysis, the path of the course content is set by the module sequencingEngine.jsp, and
we can access the name of the path through the method of the session object:
object path = session.getAttribute("pagePath")
Chong, N. S. and Sakauchi, M., 2001 “Creating and sharing Web notes via a standard browser.” 
SIGCUE Outlook 27, 3, pp. 4-15.
Fogli, D., Fresta, G., and Mussio, P. 2004. “On electronic annotation and its implementation.” In 
Proceedings of the Working Conference on Advanced Visual interfaces, ACM Press, New York,
NY, pp. 98-102.
Kahan and M.-R. Koivunen., 2001 Annotea: an open rdf infrastructure for shared web annotations.
In The tenth international World Wide Web Conference on World Wide Web, Hong Kong.
Kim, S., Slater, M., and Whitehead, E. J., 2004. WebDAV-based hypertext annotation and trail
system. In Proceedings of the Fifteenth ACM Conference on Hypertext and Hypermedia
(Santa Cruz, CA, USA, August 09 - 13, 2004). ACM Press, New York, NY, 87-88.
Mor, E. and Minguillón, J., 2004. E-learning personalization based on itineraries and long-term
navigational behavior. In Proceedings of the 13th international World Wide Web Conference
on Alternate Track Papers &Amp; Posters (New York, NY, USA, May 19 - 21, 2004), ACM
Press, New York, NY, 264-265.
Ramachandran, S., Kashi, R., 2003 "An Architecture for Ink Annotations on Web Documents,"
icdar, p. 256, Seventh International Conference on Document Analysis and Recognition
(ICDAR'03) - Volume 1.
Yang, S. J., Du, V. M., Shao, N. W., and Chen, I., 2004. Applying Personalized Annotation
Mechanism to E-Documentation. In Proceedings of the E-Commerce Technology For
Dynamic E-Business, IEEE international Conference on (Cec-East'04) - Volume 00
(September 13 - 15, 2004). IEEE Computer Society, Washington, DC, 142-145.
An example of annotations in PowerRTE
計畫成果自評
本研究目的在於以系統重建的方式，將註記功能嵌入至 ADL Sample RTE 中。為達成研
究之目的，本研究設計一套建置流程：「靜態分析動態分析功能建置系統評估」。在
此流程上，完成了 Power RTE 的建置工作。茲分述如下：
壹、註記功能
本研究在註記功能的機制上，主要是提供螢光筆、更改字體大小、顏色，以及插
入小圖示的註記模式。在註記功能上，主要是利用 HtmlArea 實作之，並利用 JSP 回存
課程網頁與註記資訊。
貳、分享機制
本研究在分享機制上，主要是將課程包裹由使用者更改課程名稱，並且重新包裝
出席國際學術會議心得報告
計畫編號 95-2221-E-017-012-
計畫名稱 符合 SCORM 規範教材之開放源碼線上學習與個人註記系統
出國人員姓名
服務機關及職稱
葉道明 高雄師範大學資訊教育研究所副教授
會議時間地點 Phuket, Thailand, 2-4 April, 2007
會議名稱 Advances in Computer Science and Technology 2007
發表論文題目 Assessing the Traffic Ranking of Websites with Artificial Neural Network
一、參加會議經過
The purpose of ACST 2007 is to bring together international researchers and practitioners working
at the cutting edge of several sub-areas of computer science and engineering, as well as related
areas such as scientific computing, computational biology and medicine, and bioinformatics, in
order to promote the growth of interdisciplinary computer science and technology research. In
addition to fostering research collaboration, this conference aims to enhance technology transfer to
industry. ACST 2007 is sponsored by the International Association of Science and Technology for
Development (IASTED), with the assistance of the:
 Technical Committee on Artificial Intelligence
 Technical Committee on Computer Graphics
 Technical Committee on Databases
 Technical Committee on Parallel & Distributed Computing & Systems
 Technical Committee on Software Engineering
議程：
Track - Architecture and VLSI Design
559-042 Alternative Dataflow Model
C.S.M. Mueller (South Africa)
559-043 Design and Simulation for Three SEU Immune Latches in a 0.18µm CMOS Commercial Process
Y. Li, S. Yue, Y. Zhao, and G. Liang (PRC)
559-047 MOOSS2: A CPU with Support for HLL Memory Structures
R. Ballner and P. Tvrdik (Czech Republic)
559-063 Architecting Security: A Secure Implementation of Hardware Buffer-Overflow Protection
K. Piromsopa (Thailand) and R.J. Enbody (USA)
559-099 Equivalence Checking in C-based System-Level Design by Sequentializing Concurrent Behaviors
T. Sakunkonchak, T. Matsumoto, H. Saito, S. Komatsu, and M. Fujita (Japan)
559-112 Write-Aware Buffer Cache Management Scheme for Nonvolatile RAM
K.H. Lee, I.H. Doh, J. Choi, D. Lee, and S.H. Noh (Korea)
559-177 Redesign the 4:2 Compressor for Partial Product Reduction
R. Hussin, A.Y.Md. Shakaff, N. Idris, Z. Sauli, R.C. Ismail, and A. Kamarudin (Malaysia)
559-195 Design of a Two-Level Hot Path Detector for Path-based Loop Optimizations
T. Baba, T. Masuho, K. Ootsu, and T. Yokota (Japan)
559-231 Formal Equivalence Checking for Loop Optimization in C Programs without Unrolling
T. Matsumoto, K. Seto, and M. Fujita (Japan)
Track - Web Technologies
559-011 Using Advanced Transaction and Workflow Models in Composing Web Services
J. Puustjärvi (Finland)
559-039 Visual Pivot-Table Components for Web Application Development
559-027 QoS-based Scheduling of Workflow Applications on Grids
L.M. Khanli and M. Analoui (Iran)
559-077 ACO based Optimized Scheduling Algorithm for Computational Grids
B. Singh and S. Bawa (India)
559-086 Parallel Computations in Mixed Formats
W. Pogribny and M. Drechny (Poland)
559-141 A Hot Path based Thread Partitioning Technique for Thread Pipelining Model
K. Ootsu, T. Kobayashi, H. Ogawa, T. Yokota, and T. Baba (Japan)
559-202 Parallel On-Chip Ciphers Development for the Third Generation Mobile Telecommunication System
I.W. Damaj (Oman)
559-243 A Search Method for Reducing Local Cost in Distributed Constraint Optimization Problem
M. Noto, D. Hashimoto, and M. Matsuda (Japan)
Track - Interdisciplinary Applications
559-031 Calculation of Document Similarity using Cellular Structured Space Template
P. Kanongchaiyos (Thailand)
559-035 Evolving Parameters of Multi-Scale Radial Basis Function Kernels for Support Vector Machines
T. Phienthrakul and B. Kijsirikul (Thailand)
559-040 Automatic Exudates Detection from Diabetic Retinopathy Retinal Image using Fuzzy C-Means and
Morphological Methods
A. Sopharak and B. Uyyanonvara (Thailand)
559-041 Measuring Knowledge Assets in Companies using Computational Intelligence
F. Bodendorf and M. Schertler (Germany)
559-059 Knowledge Representation using Multilevel Hierarchical Model in Intelligent Tutoring System
M. Siddappa and A.S. Manjunath (India)
559-102 Applying Query Expansion to a Bilingual Search Engine
R. Theva-aksorn and N. Facundes (Thailand)
559-122 The Implementation of CUVoiceBrowser, A Voice Web Navigation Tool for the Disabled Thais
P. Punyabukkana, J. Chirathivat, C. Chanma, J. Maekwongtrakarn, and A. Suchato (Thailand)
559-174 Automatic Rule-based Expert System for English to Thai Transcription
C. Snae and P. Pongcharoen (Thailand)
559-194 Abnormalities and Fraud Electric Meter Detection using Hybrid Support Vector Machine & Genetic Algorithm
K.S. Yap, I.Z. Abidin, A.R. Ahmad, Z.F. Hussien, H.L. Pok, F.I. Ismail, and A.M. Mohamad (Malaysia)
559-204 An Ontology-based Case Matching Technique
T. Tanawong and S. Chittayasothorn (Thailand)
559-222 Fast Background Subtraction for Real Time Monitoring
K. Sundaraj and V. Retnasamy (Malaysia)
559-229 Feature Extraction and Classification for Bilingual Script (Gurmukhi and Roman)
R. Dhir (India)
559-800 Optimizing Weights in Combining Classifiers in Natural Language Learning
S.-B. Park and H. Yoon (Korea)
559-802 Soft Tissue Simulation in Craniofacial Surgery using Finite Element Models
U.H. Obaidellah, N. Selvanathan, M. Sankupellay, and Z.H.A. Hasan (Malaysia)
Track - Algorithms
559-050 An Efficient Non-Probabilistic Search Algorithm for the NQueens Problem
J.-C. Chen (PRC)
559-068 Dynamic Dictionary Matching using Inverted Lists
C. Khancome and V. Boonjing (Thailand)
559-073 Compressing Serialized Java Objects: A Comparative Analysis of Six Compression Methods
G. Samara, A. El-Halabi, and J. Kawash (UAE)
559-108Axiomatising a Linear Higher Order π-Calculus
Z. Cao (PRC)
559-126 Multiple Pheromone Deposition in Ant-based Clustering as an Ant Foraging Concept
W. Ngenkaew, S. Ono, and S. Nakayama (Japan)
559-149 Multi-Point Queries in Large Spatial Databases
H.K. Ng and H.W. Leong (Singapore)
559-178 Efficient Image Transmission using Transform-based Compression Techniques
A. Alasaad, H. Behairy, and M. Khorsheed (Saudi Arabia)
559-809 Hybridizing Adaptive and Non-Adaptive Mutation for Cooperative Exploration of Complex Multimodal Search
Space
J. Teo and N.R. Mohamad (Malaysia)
Track - Software Engineering
559-101 Improving Risk Management Practices for IT Projects
T.W. Kwan and H.K.N. Leung (PRC)
559-125 XMLTemplate: Framework that Minimizes the Number of Software Components
L. Ab Rahim, S.M. Taib, and A.R. Shazi (Malaysia)
559-127 An Ontology-based Taxonomy of Bad Code Smells
Y.-P. Cheng and J.-R. Liao (Taiwan)
559-132 Applying the Responsibility-Driven Approach in the Domain Framework Development
D.L. Belmonte, S.N. Matos, L. Scandelari, and C.T. Fernandes (Brazil)
559-173 Efficient Development of Highly Reusable Distributed Systems using the TCAO
S. Singh, S.Z. Xu, and H. Kaur (New Zealand)
559-180 Seamless Traceability without Compromise
P. Mason and A. Tianvorakoon (Thailand)
559-190 Compiler Algorithm Language (CAL): An Interpreter and Compiler
A. Bhatele, S. Satyarth, and S.K. Aggarwal (India)
559-191 Object Oriented Knowledge Representation Framework for Requirements Engineering
Assessing the Traffic Ranking of Websites with Artificial Neural Network
Dow-Ming Yeh, Cheng-Chung Li, Shu-Lan Chu
Graduate Institute of Information and Computer Education Institute
National Kaohsiung Normal University, 116 Hou-Ping 1st Road, Kaohsiung, 802
Taiwan, ROC
dmyeh@nknu.edu.tw
ABSTRACT
The website evaluation is an essential work in the time when the popularity and the ubiquity of the World Wide Web
demonstrate its role in our everyday lives. In the past, researchers evaluated the websites by manpower and heuristic
rules. In this study, we propose to assess the traffic ranking of web sites based on certain quantifiable criteria and the
application of Artificial Neural Network (ANN). We use ANN to learn the rules of popular websites and compare the
results with actualities. Then we infer the possible reasons of popularity from the learning results and re-evaluate the
previous evaluation criteria. We hope that this research could present the current development of website evaluation,
offer insights to website designers and web masters.
KEY WORDS
Web technology, Website evaluation, Artificial Neural Network, usability, Web metrics
1. Introduction
Due to the flourishing development of the World Wide Web (WWW), the dissemination of technology and tools
for website construction, and the easy access to web spaces, the quantity of websites increases at an astonishing speed.
Based on the investigation data of Netcraft (http://www.netcraft.com) on websites, the global number of websites
increased 35% from 2003 to 2004, and exceeded 56,923,737 in December 2004. The demand for website construction
is huge, and the pool of qualified designers is comparatively small and thus fails to meet this demand. As a result,
qualities of many websites suffer from insufficient resources and amateurish work. An important means to assure
quality of a website is through website assessment [1]. Therefore, How to evaluate the quality of a web site, therefore,
has become an important issue.
A web site should be evaluated according to both content and design. Collins points out that the first priority is the
reliability in sources of content for a website [2]. However, content alone cannot guarantee a good website. Jones
emphasized that an instructional website with proper materials cannot guarantee to facilitate learning [3] [4]. Users
may easily get lost in the website when they are not supported with sufficient navigational mechanism or they may get
frustrated without certain instructional functionalities such as feedback. The engineering design of a web site should be
evaluated in four aspects, usability, functionality, reliability, and efficiency [5]. A good website should also provide its
browsers with pleasant experience, which means that aesthetic and affective aspects also contribute to the quality of a
 Functionality includes search and navigational mechanisms. A well-designed navigational toolset helps users
identify and locate information [9].
 Reliability addresses the correctness of the link and the errors incurred by different configurations such as different
browsers. The validity of a Web site’s links will affect its effectiveness and efficiency in retrieving information [9].
A website should also indicate the software requirements for browsing the site [6].
 Efficiency includes factors that might affect the download speed of web pages and the accessibility of information
on a page [9]. Other name of this attribute is speed.
Maintainability, availability, universal accessibility, security and time-to-market are also considered important
aspects by some researchers [10]. Ivory and Hearst evaluate web pages with 11 measures covering both the content
and the design aspects [7]. These measures may be divided into three major groups, page elements, page formatting,
and overall characteristics. The page elements include word count, link count, graphics count, and body text percentage.
The formatting measures are emphasized text percentage, text alignment count, text area count, color count and font
count. Finally, the overall characteristics measure the page size and the percentage that the size of graphics takes in the
entire page size.
3. Experimental Design
The dependent variable is the average number of web site visits per day collected by HotRank (www.hotrank.com.tw)
during a three month span in the early 2005 as the dependent variable. Hotrank offers to its registered sites three basic
services: web site counter; traffic analysis of site visitors; and ranking and searching services. The ranking is based on
the average visits within a day, a week, a month, a season, or a year.
Visiting data makes sense only when comparing similar sites. Access frequencies of web sites in different
categories may vary a great deal. In some specific cases, the average number of visits may not reflect the true quality of
a website, especially when a website is associated with a particular organization instead of a general audience.
Considering these factors, our analysis compares the sites in the same category in Hotrank and sites associated with
specific organizations are eliminated from the data set.
The selected independent variables of these sites are then computed by some software agents. The data analysis
starts with the correlation analysis between variables. Variables passing the test form the input layer of the ANN to
initiate the learning process. After that we apply the ANN to forecast the traffic ranking of websites outside the
training data. The Artificial Neural Network is applied in many areas with much success over the traditional regression
methods. The capability of ANN to model non-linear relationships between independent variables and dependent
variables may be a solution to circumvent the synthetic definition of non-linear input variables as in [8]. From 1992 to
1998, there were more than seventy percent of ANN models that apply back-propagation neural network to analyze data
[11]. Since back-propagation neural network is one of the supervised learning network models with high accuracy in
learning, it is adopted in our research to build an assessing model of traffic rank.
A back-propagation neural network consists of at least three layers, the input layer, the hidden layer and the output
layer. The hidden layer could include single or multiple layers, but there is no specific rule to determine the number of
neurons in these layers.  Usualy the best number was determined by the system’s characteristics directly or by 
try-and-error. Zhang et al. pointed out that most researchers used single hidden layer to present the non-liner
relationship of model, and had verified that back-propagation neural network with single hidden layer could result in
sufficient accuracy [13]. Hence, single hidden layer is adopted in this research. Although ANN was extensively
4. Data Analysis
The source data of this research comes from the game category and the academic and literature category of HotRank.
The sampling is conducted on the websites shown in the rank of the first season of 2005. Websites with very few or
zero visitors in the monthly rank are excluded to yield 93 websites in Academies and Literatures category and 85
websites in Games category. To construct the ANN model, 72 websites from Academies and Literatures category and 65
sites from Game category are selected as training samples.
The ANN type adopted in this research is the back-propagation neuron network. It can be trained by samples in
the problem domain by continuously adjusting the weights on the neurons in ANN until it converges to the training data.
The number of independent variables listed in Section 3 is still too large to build an ANN model effectively. To reduce
the number of variables, correlations analysis of variables is applied to determine their correlations with the dependent
variable.
To find the best combination of input variable for the ANN, different numbers of variables, from three to ten, are
selected from the sorted lists, and the combination with the best accuracy rate is selected as the final list of input
variables for the ANN. Because the number of neurons in hidden layer also influences the accuracy rate of an ANN,
we set the number of neurons to be eight as suggested in most literature while varying the numbers of input variable.
For the academic and literature category, the best combination of input variables, with an error rate of 0.3594,
consists of seven variables and is composed of the average number of links, the average number of fonts, the maximum
number of characters for title, the average size of picture, the latest update time, the maximum number of links and the
average number of characters for title. For the game category, ten input variables produce the best result with an error
rate of 0.3589. The combination includes PageRank value score, the average size of pictures, the maximum number of
fonts, the average number of description of pictures, the average number of emphasized words, the maximum number
of emphasized words, the maximum number of description of pictures, the latest update time, the average number of
fonts and the average number of pictures.
There is no permanent rule for setting ANN parameters. In fact, it may be impractical to find a general rule
because the application of ANN varies in a wide spectrum. We attempt to find a better combination of parameters by
experimenting with different settings and selecting the one with the smallest error rate. The appropriate number of
neurons in hidden layer is related to the numbers of input and output variables. Therefore, different numbers of
neurons in hidden layer are tested, ranging from half the sum of the numbers of input and output variables to double the
sum of the two numbers. In this way, the number of hidden layer neuron is determined to be fourteen for the academic
and literature category with an error rate of 0.3176, and ten for the game category with an error rate of 0.2273. The
settings of ANN are showed in Table 1.
The trained ANN models in Table 1 resulted from the training data of 50 sites randomly selected for each category.
The rest of websites are then used to examine the forecasting accuracy of the ANN model. The average accuracies are
0.755 and 0.730, respectively. The result shows that the ANN model can be applied to forecast the traffic rank with a
reasonable good accuracy.
Table 1. ANN Settings
category
academic
and
literature
game
must contain many graphics and pictures to attract visitors. Website designers should consider displaying more
impressive images from games or set on-line photo albums for sharing among users.
Text contents, however, are not neglected in the game category either since there exist factors related to
emphasized words and fonts. Using emphasized words to indicate key points of an article is essential to help customers
quickly identify desired information without browsing through the entire content. Many information in game sites, such
as secret skills and strategies, need to be emphasized to attract the attention of game players and help them locate the
needed information promptly. The number of fonts should result from the fact that many games are based on foreign
languages displayed with various fonts.
PageRank score data is offered by Keyword Performance Co. Keyword Performance Co. asserts that its
deductive method is the same as the Google’s method. That means its scores represent certain degrees of authority.
Hence when website constructors want to know the popularity of their own websites, they could go to their website and
run the PageRank value to obtain a reference score.
3. Conclusion And Suggestions
Website evaluation is an essential work in the time of Web prevalence. However, the evaluation is often subjective and
absorbs considerable efforts. This study presents an effort to construct an objective assessment model that can be
applied almost automatically. The quality of websites is represented by the traffic rank in a category of Hotrank. Fifteen
independent variables that can be computable are defined from survey the literature. We develop an agent program to
collect research data from websites in two categories of Hotrank. Based on these data, two ANN models are trained
and constructed after some correlation analysis. The models are than applied to other websites to forecast the traffic
ranking and the results are comparable to a previous model that requires considerable resources to convert quality
attributes to quantity values manually. The ANN models can not only reveal quality levels of a website but also
indicate some design pitfalls for web masters and managements.
Some important quality attributes, such as richness of content, are not included in this model and more research
may be worthwhile to cover these attributes with appropriate metrics. Some quality attributes may be difficult to map to
numerical values. To surmount such problem, other techniques may be combined with the model, for example,
combining fuzzy logic with ANN or ANN models with evolution strategy..
Acknowledgements
This work was partially supported by the National Science Council, Taiwan, R.O.C., under Grant NSC
94-2213-E-017-007.
References
[1] Skov, A., Internet quality. Database Magazine, 21(4), 1998, 38-40.
