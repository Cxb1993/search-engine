Computing)實驗環境。透過網路強大的傳輸能力，雲端計算
的整合也為嵌入式裝置注入一種新的運算模式，為此總計畫
提出一套計算量卸載參照設計，並結合子計畫一及子計畫二
的研究成果，以嵌入式裝置耗能及效能的觀點來對嵌入式裝
置的計算量卸載效能進行評估。整個計畫的分工架構是以嵌
入式系統的概念將其分成不同層級進行規劃，並為各階層提
供不同的 Benchmarking、Profiling 及 Optimization 方案來
服務嵌入式產業的廠商。對於測試方案的推廣，在國際方面
EBL 會和嵌入式自由軟體聯盟(Open Embedded Software 
Foundation, OESF)的會員工業技術研究院(ITRI)共同合作，
針對 Android 裝置制定測試方法及開發測試套件。另外在國
內推廣方面，EBL 也和台灣嵌入式產業聯盟(Taiwan 
Embedded Industry Alliance , TEIA)合作，建立 Testing 
SIG，負責收集業界的各種測試需求，讓 EBL 可以提供更多符
合業界的測試方案來協助嵌入式產業提升競爭力。結合 NBL
的成功經驗，EBL 也會以三種模式進行推廣，包含委託測試
服務、公開測試活動以及年度 road show。預計第一年結束
時，完成測試工具規格訂定、架構設計以及實驗結果；第二
年結束時完成測試工具第一個版本開發並交由 NBL 應用，同
時也將開放原始碼供下載；第三年結束時將測試工具產品
化、客製化，協助廠商將工具移轉到其內部使用。 
 
中文關鍵詞： 嵌入式系統、測試評比、效能剖析、系統最佳化 
英 文 摘 要 ：  
英文關鍵詞：  
 
2 
 
為 各 階 層 提 供 不 同 的 Benchmarking 、
Profiling及Optimization方案來服務嵌入式
產業的廠商。對於測試方案的推廣，在國際
方面EBL會和嵌入式自由軟體聯盟(Open 
Embedded Software Foundation, OESF)的會
員工業技術研究院(ITRI)共同合作，針對
Android裝置制定測試方法及開發測試套
件。另外在國內推廣方面，EBL也和台灣嵌
入式產業聯盟 (Taiwan Embedded Industry 
Alliance , TEIA)合作，建立Testing SIG，負
責收集業界的各種測試需求，讓EBL可以提
供更多符合業界的測試方案來協助嵌入式
產業提升競爭力。結合NBL的成功經驗，
EBL也會以三種模式進行推廣，包含委託測
試服務、公開測試活動以及年度road show。
預計第一年結束時，完成測試工具規格訂
定、架構設計以及實驗結果；第二年結束時
完成測試工具第一個版本開發並交由NBL
應用，同時也將開放原始碼供下載；第三年
結束時將測試工具產品化、客製化，協助廠
商將工具移轉到其內部使用。 
 
關鍵詞：嵌入式系統、測試評比、效能剖析、
系統最佳化 
[2] 緣由與目的 
過去交大研究團隊和交大網路測試中心
(Network Benchmarking Lab, NBL)共同合
作，在國科會嵌入式網路通訊裝置評比技術
與工具之研發的計畫中擬定了一系列的工
具及測試項目，並將其整合成EBL Test Suite 
v1.0 來對嵌入式裝置進行效能的評比。透過
黑箱測試的方法可以幫助消費者或開發商
依據效能來選擇適合的產品或元件，而灰箱
及白箱測試可以幫助開發者找出問題的跡
象。然而對開發者而言，嵌入式裝置的效能
問題單從裝置及系統整體的面向來看是很
難精準發現問題發生的原因，原因在於嵌入
式裝置涉及許多上游應用程式開發商、中游
系統整合商至下游 IC Design 廠商的軟硬體
結合，小到硬體 IC 元件效能不好或軟體
Library及 Framwork設計不佳都會導致產品
本身系統效能變差。因此在排除問題的可能
範圍就必須要對嵌入式系統拆解，提供各種
階層(從最上層的應用程式，到中間層的應
用程式框架、函式庫及底層的系統核心)的
垂直整合測試方法及工具來對產品的各個
軟硬體的效能進行評比(Benchmarking)，在
對效能差異較大的元件及軟體用剖析
(Profiling)的方式來分析數據，加速開發者
找 出 影 響 產 品 效 能 的 根 本 原 因 (Root 
Cause)，進一步提出最佳化(Optimization)方
案來解決問題，接著重覆進行測試評比及剖
析來檢視解決方案的可行性。透過一系列循
環測試流程，幫助開發商用更系統化的方式
將系統瓶頸逐一改善，正如圖 1 所示。 
 
圖 1: 系統化測試方案 
 
 從業界需求面來看，目前當紅的嵌入式
系統莫過 Google 推出的 Android 作業系統
開放平台，從 2007 年底問市以來，短短 3
年已經出了多達 90 款 Android 手機(尚不包
含 None Phone 的 Andriod Product)，很明顯
的已經有越來越多業者都加入 Android 裝置
的開發。然而目前 Google 只有提供相容性
測試套件(Android Compatibility Test Suite, 
CTS)來驗證 Android 應用程式和 Android 裝
置間的相容性，並無其它任何標準的測試工
具及項目來協助廠商來完整的測試 Android
軟體及硬體的效能及穩定度，這對開發
Android 裝置廠商來說無疑增加許多測試成
本，再加上 Google 平圴每半年都會更新
4 
 
 
[4] 研究成果與討論 
程序層級上耗電預估參數與公式的校正 
 搭載電池的移動式裝置經常受到能源
上嚴格的限制。程序階級上的耗能分析工具
可以找出系統中最耗能源的程序，並且可以
仔細地分析出個別硬體元件的耗能情形。利
用這樣的工具，軟體開發工程師可以分析與
微調各程序的電能消耗，藉此來提高電池的
使用時間。不過這種耗能分析工具經常綁定
特定的硬體，所以需要為各個硬體平台來做
耗能分析工具的校正。此外，對於新加入的
硬體元件也需為其創造新的耗能預估公
式。本研究提出一個兩階段式的方法來校正
6 
 
 
圖 ５. 能量表及耗電量測公式的建構流程圖 
Estimation Evaluation 的階段，會將這些 可
能有誤差的公式與能量表相比較(Evaluate 
estimation result)，找出有錯誤的公式 
(Discover faulty formula)進行修正，並進入 
New Formula Creation 階段。在 Identify 
energy predictor variables 時，我們會找出誤
差公式中，哪些元件耗電或變數的值在 能
量表中為已確定且正確的，利用這些已確定
的值，對其它有問題的部份盡可能 進行修
正。接著，在建出線性公式(Form linear 
formula)中，將一個裝置 T 耗電量 測公式
以下列型式表示： 
kk
T fcfccE +++= L110.ˆ  
kf 表示元件 k 的耗電， kc 表該裝置在
公式中的權重。我們用 nI 表示多一組元件
耗電的集合，而多組 的集合用 F 來表示。
相對於這些 nI 的總能量消耗可以寫成
( )TnTTTT EEE K21=E ，對應的係數
( )Tkccc K10=C 。於是，可將能量公式
寫成向量的格式： 
FCE =T  
 
F 的實際行態為： 
⎟⎟
⎟⎟
⎟
⎠
⎞
⎜⎜
⎜⎜
⎜
⎝
⎛
=
⎟⎟
⎟⎟
⎟
⎠
⎞
⎜⎜
⎜⎜
⎜
⎝
⎛
=
knn
k
k
n ff
ff
ff
,1,
,21,2
,11,1
2
1
1
1
1
L
MOMM
L
L
M
I
I
I
F
 
 
於是對於一個裝置 T 的耗電估算 apx
TE 可
寫成： 
),...(ˆ),,...( 11 mestmtotalapx
T TTETTTEE −=
),...(ˆ 1 mest TTE 為 m 個硬體元件的耗電總合，
),,,( 1 TTTE mtotal L ，表示加入一個元件 T 後
的耗電總合。多個元件 T 的耗電估算可寫
向量的形式: 
( )TnapxTapxTapxTapxT EEE ,2,1, L=E  
執行迴歸分析，可得到新的係數 C: 
[ ] apxTTT EFFFC 1−=  
 由於計算所得之耗電皆與硬體相
關，故在最後步驟”Attribute energy 
proportionally”會計算出的結果來對軟體的
耗能進行修正。得到新的耗電測量公式後，
會再次與與能量表中的公式比較，若仍有誤
差，則不 斷執行上述迴歸分析修正，直到
全部公式皆正確為止。 
 
耗電分割： 
 耗電分割希望能使用元件或程式
的已知耗電，去分析出無法單獨測得耗電值
的元 件或程式的耗電量。圖６與圖７為一
8 
 
擎具有高度可重組性以及使用上的簡便
性。而虛擬磁碟部分則以一個一般的磁碟出
現在主機中，並且直接接收來自於主機的讀
寫動作，就好像是一個真正的磁碟一般。此
虛擬磁碟與模擬引擎之間透過作業系統內
部的事件機制互動，計算並模擬讀寫延遲，
使得該虛擬平台的效能就像一個真正的固
態硬碟一樣。這個虛擬平台不但能夠幫助固
態硬碟設計者快速地定下韌硬體的組態，縮
短開發測試時間，亦提供研究者一個絕佳的
互動式環境，藉以開發主機端與儲存裝置的
協同式效能最佳化方法。 
 
 在最新平台 Android 系統上進行開發
上，也因為該平台框架的複雜度很高，因此
在技術上的確需要很多突破的地方。首先，
因為傳統的系統分析工具無法解決 Dalvik
虛擬機器所造成的中間障礙，而使得
Oprofile 工具無法詳細了解應用程式在執行
過程中的確實的效能瓶頸，因此，我們在
Android 系統之 Dalvik 虛擬機器中插入我們
設計的模組進行事件監控，為了完成此功能
我們必須徹底瞭解 DVM 程式碼的設計，本
計畫突破了 Dalvik 虛擬機器的設計，並且
利用跨階層的傳遞方式把資料送下核心層
處理，如此一來既能降低分析過程中所造成
的負擔，二來也能徹底洞悉應用程式之執行
路徑以及效能瓶頸。 
 
固態硬碟即時模擬環境 
本研究針對多通道快閃記憶體進行研究，並
提出一套管理方案，包含了一個寫入緩衝區
的設計以及兩套通道管理策略。這套方案同
時具有通用性，可在 Hybrid mapping 以及
Page-level mapping 這兩種類型的快閃記憶
體上。 
 最後，本研究在實驗中獲得了兩倍於
baseline algorithm 的寫入速率(單位：IO/s)，
並在真實環境中的 SSD 上實作且展示本研
究的可行性。 
 另外，我們還改良了快閃記憶體的內部
結構。雖然 SSD 透過一些機制將快閃記憶
體模擬成連續的 sectors，但是存取每個
sector 所花的時間並不一致，原因出於快閃
記憶體的內部管理機制，宥於許多快閃記憶
體的物理限制，將花上許多時間處理。 
 因此，我們可以根據此資訊安排寫入資
料的方式，來降低 SSD 的快閃記憶體額外
花費在管理上的時間。 
 Write buffer 對快閃記憶體來說，不僅可
以降低寫入快閃記憶體的資料量，也可以產
生大量且連續的資料寫入，這對底層的
Flash Translation Layer 很有幫助。 
 因此本研究提出一種新設計的緩衝
區，包含了一項替換策略以及一項寫回策
略，並在最後實驗證明，本研究提出的緩衝
區以高達兩成的比例勝過既有的設計。 
 
跨階層系統執行歷程追蹤與效能分析 
本研究提出了一個專為 Android 應用程式進
行效能分析的分析工具，命名為 Vertical 
Profiler & Tracer。Android 應用程式框架的
設計屬於多層次的堆疊架構，因此上層 
Android 應用程式在執行的時候牽涉到使
用者層級、核心層級、與硬體架構，然而執
行過程如果有效能上的問題時卻無法立即
斷定屬於那個層級出現問題。因此透過本計
畫所提出的 Vertical Profiler & Tracer 便可以
找出 Android 應用程式在執行過程中的區域
之詳細資訊，並且以低成本的方式對這些資
訊加以整理，如此一來設計者便可以利用此
工具徹底洞悉 Android 應用程式之詳細執行
過程與性能瓶頸。 
要完成上述的任務並非簡單的事情，其中值
的重視的研究議題包含以下幾點： 
Android 程式的執行需依賴 Dalvik Virtual 
Machine，這個全新的領域目前尚未有太多
學術論文研究討論，要如何將此黑箱完全瞭
解並且在不影響系統執行效能的狀況下設
計出好的剖析架構與此 DVM 結合運作是一
個重要的挑戰。 
由於傳統的剖析工具大都侷限在單一層
10 
 
http://www.caida. 
org/tools/measurement/coralreef. Accessed 
August 2004. 
[9] Jing Cong , Bernd E. Wolfinger, A unified 
load generator based on formal load 
specification and load transformation, 
Proceedings of the 1st international 
conference on Performance evaluation 
methodolgies and tools, October 11-13, 
2006, Pisa, Italy 
[10] Joel Sommers , Vinod Yegneswaran ,      
Paul Barford, A framework for malicious 
workload generation, Proceedings of the 
4th ACM SIGCOMM conference on 
Internet measurement, October 25-27, 
2004, Taormina, Sicily, Italy 
[11] Michele C. Weigle , Prashanth Adurthi ,   
Félix Hernández-Campos , Kevin Jeffay , 
F. Donelson Smith, Tmix: a tool for 
generating realistic TCP application 
workloads in ns-2, ACM SIGCOMM 
Computer Communication Review, v.36 
n.3, July 2006 
[12] Endace measurement systems. 
http://www.endace.com/. Accessed 
August 2004. 
[13] SSFnet network simulator. 
http://www.ssfnet.org. Accessed August 
2004. 
[14] UCB/LBNL/VINT Network Simulator - 
ns (version 2). 
http://www.isi.edu/nsnam/ns. Accessed 
August 2004. 
[15] Kashi Venkatesh Vishwanath , Amin 
Vahdat, Realistic and responsive network 
traffic generation, ACM SIGCOMM 
Computer Communication Review, v.36 
n.4, October 2006 
[16] Network Emulation Testbed. 
http://www.emulab.net. 
[17] Spirent, http://www.spirentcom.com/. 
[18] IXIA, http://www.ixiacom.com/ 
[19] Network Benchmarking Lab, 
http://www.nbl.org.tw/. 
[20] Toshihiro Kobayashi and Tetsuo 
Yamabe ，  “Linux DSP Gateway 
Specification ， ” v3.3.1 ，  Nokia 
Corporation， 2006. 
[21] “OMAP5912 Applications Processor 
Data Manual， ” Texas Instruments， 
March 2004. 
[22] “DSP/BIOS LINK ， USER GUIDE” 
Texas Instruments， March 2007. 
[23] “A. Sinha and A.Chandrakasan， 
“JouleTrack – A Web Based Tool for 
Software Energy Profiling，” Proc. 38th 
Design Automation Conference， “June 
2001 
[24] ”Energy Estimator/Analyzer for 
Embedded Dual Core Processor” ，
Chun-Hao Hsu， 2006” Measuring 
System Performance on the 
TMS320DM644x Platform” Texas 
Instruments， March 2007. 
[25] Chuanxiong Guo and Shaoren Zheng , 
“Analysis and Evaluation of the TCP/IP 
Protocol Stack of Linux”, International 
Conference on Communication 
Technology Proceedings, vol 1, pp. 
444 –453, Aug. 2000. 
[26] Wikipedia – “GNU”, Available from: 
http://en.wikipedia.org/wiki/GNU 
[27] Ying-Dar Lin, and Ping-Tsai Tsai, “Trace 
[28] Linux TCP/IP kernel – Using remote 
debugging”, Available from: 
http://speed.cis.nctu.edu.tw/~ydlin/miscpu
b/remote_debug.pdf 
[29] Peter Jay Salzman, Michael Burian, and 
Ori Pomerantz, “The Linux Kernel 
Module Programming Guide”, Dec. 2005. 
12 
 
BSD File System, Proceedings of the 
Tenth Symposium on Operating Systems 
Principles, Orcas Island WA, December 
1985, pp. 15-24. 
[52] Atsuo Kawaguchi et al., “A 
Flash-Memory Based File System”, in 
USENIX Technical Conference, 1995 
[53] Linux MTD Project, “Journaling Flash 
File System (JFFS), Journaling Flash File 
System 2 (JFFS2), and Journaling Flash 
File System 2 (JFFS3).” 
[54] Bray, T, ”The Bonnie home page.”, 
[55] http://www.textuality.com/bonnie, 1996. 
[56] Katcher, J., “PostMark: A New Filesystem 
[57] Benchmark. Tech. Rep. TR3022, Network 
[58] Appliance.”,www.netapp.com/techlibrary/
3022.html ,1997 
[59] William D. Norcott., Don Capps, “Iozone 
[60] Filesystem Benchmark”, 
http://www.iozone.org/docs/IOzone_msw
ord_98.pdf 
[61] N. Joukov, A. Traeger, CP Wright, Zadok, 
[62] “Benchmarking File System 
Benchmarks”, 
[63] ETechnical Report FSL-05-04b, CS 
partment Stony Brook University, 2005. 
[64] John H. Howard, Michael L. Kazar, Sherri 
G. Menees, David A. Nichols, M. 
Satyanarayanan, Robert N. Sidebotham, 
and Michael J. West., “Scale and 
performance in a distributed file system.”, 
ACM Transactions on Computer Systems, 
6(1):51–81, February 1988. 
[65] AIM Technology, ”AIM Multiuser 
Benchmark - Suite VII Version 1.1. “, 
[66] http://sourceforge.net/projects/aimbench , 
2001 
[67] Nathan Edel, Deepa Tuteja, Ethan L. 
Miller, and Scott A. Brandt, "MRAMFS: 
A Compressing File System for 
Non-Volatile RAM" ,IEEE/ACM 
International Symposium on Modeling, 
Analysis, and Simulation of Computer and 
Telecommunication Systems (MASCOTS 
2004) 
[68] R. Bryant, R. Forester, and J. Hawkes. 
"Filesystem Performance and Scalability 
in Linux 2.4.17." , In FREENIX '02, 
Monterey, CA, June 2002. 
[69] Sun, “File System Performance: The 
Solaris OS, UFS, Linux ext3, and 
ReiserFS”, White paper August 2004. 
[70] http://sun.com/software/whitepapers/solari
s10/fs_performance.pdf 
[71] R. Bryant, R. Forester, and J. Hawkes. 
"Filesystem Performance and Scalability 
in Linux 2.4.17." , In FREENIX '02, 
Monterey, CA, June 2002. 
[72] Iometer Project. “Iometer” ,OPEN 
SOURCE DEVELOPMENT LAB. 2004. 
www.iometer.org/. 
[73] A. Kawaguchi, S. Nishioka, and H. 
Motoda,“A Flash Memory based File 
System,” Proceedings of the USENIX 
Technical Conference, 1995. 
[74] F. Douglis, R. Caceres, F. Kaashoek, K. Li, 
B. Marsh, and J.A. Tauber, “Storage 
Alternatives for Mobile Computers,” 
Proceedings of the USENIX Operating 
System Design and Implementation,1994. 
[75] Veritest. “NetBench.” , 
www.veritest.com/benchmarks/netbench/ , 
2002 
[76] A. Tridgell, “dbench-3.03 README.” 
http://samba.org/ftp/tridge/dbench/READ ME, 
1999. 
[77] Rosenblum M, Ousterhout J. “The Design 
and Implementation of a Log-Structured 
File System.”, Proceedings of the 13th 
ACM Symposium on Operating Systems 
Principles, October 1991. 
[78] Mazieres, D. et al. , "Separating Key 
國科會補助計畫衍生研發成果推廣資料表
日期:2012/03/06
國科會補助計畫
計畫名稱: 總計畫：嵌入式系統測試實驗室: 軟體、軔體與硬體之評比、剖析與最佳化
(1/2)
計畫主持人: 林盈達
計畫編號: 100-2219-E-009-020- 學門領域: 嵌入式軟體(網通國家型)
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
測試技術開發  
EBL 計畫衍生技術於國際嵌入式系統會議週 Android 系統設計競賽獲得冠軍 
 
國際合作 
與國際組織 OESF、資策會及工研院合作，共同擬定及設計標準化測試項目及測
試工具 
 
同時，分別與台灣微軟及建興電子促成產學合作 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
