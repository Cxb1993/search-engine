1. 計畫緣由與目的 
Genetic algorithms (GAs) have shown their 
effectiveness in dealing with search and opti-
mization problems. The essence of GAs is si-
mulating natural evolution, such as selection, 
crossover, and mutation to find the 
near-optimal solutions [7]. Crossover in GAs is 
ordinarily performed with two parents, by 
analogy with sexual reproduction in nature. 
However, it is not necessary to limit the num-
ber of parents in GAs. Multi-parent crossover 
allows more than two parents participating in 
the crossover operation. In terms of the number 
of parents, multi-parent crossover can be 
viewed as a generalization of traditional 
2-parent crossover. 
Several multi-parent crossover operators 
have been proposed [2, 3, 10]. In general, the 
increase of parents brings about a more com-
prehensive survey for determining the 
offspring genes and leads to a stronger ten-
dency towards exploitation or exploration or 
both [2, 12, 13]. An effective GA, nevertheless, 
requires a balance of these two driving forces: 
Strong exploitation leads to a rapid conver-
gence but may suffer from premature conver-
gence, while strong exploration helps to search 
more regions but pays the cost of efficiency. 
Designing effective strategies to control the 
power intensified by the increase of parents is 
therefore a key issue in improving the perfor-
mance of multi-parent crossover. 
This project aims to propose generalization 
of multi-parent crossover and to address the 
above issues. The crossover to be investigated 
is uniform crossover [11] and occur-
rence-based scanning crossover (OB-Scan) [4] 
for two reasons: First, uniform crossover is the 
most widely used crossover in the GA commu-
nity. Second, OB-Scan generalizes uniform 
crossover with multiple parents and is shown 
to be able to enhance uniform crossover [3, 12, 
13]. In this project, we propose a novel design 
to generalize OB-Scan by considering the bias 
in its operation. Through control over the bias 
in the majority criterion, the resultant genera-
lization of OB-Scan can increase the flexibility 
in guiding the search in consideration of bal-
ance between exploitation and exploration. 
Moreover, in the light of the difficulty of de-
termining parameters, we develop two adaptive 
strategies in addition to fixed strategy for set-
ting the bias. A series of experiments is con-
ducted to validate the effectiveness of the pro-
posed approaches. 
2. 文獻探討 
Multi-parent crossover breaks through the 
convention of using two parents in crossover. 
The debut of multi-parent crossover in evolu-
tionary computation was as global recombina-
tion in evolutionary strategies (ES) [1, 10]. 
Global recombination determines each 
offspring gene according to the whole popula-
tion rather than only two parents. Such a global 
form allows an offspring to inherit from more 
than two parents. 
For genetic algorithms (GAs), several mul-
ti-parent crossovers have been proposed. Eiben 
et al. proposed scanning crossover [4] and di-
agonal crossover [5, 6], which generalize uni-
form crossover [11] and one-point crossover 
[7], respectively. Depending on the heuristics 
applied to it, scanning crossover has three var-
iations: uniform scanning crossover (U-Scan), 
occurrence based scanning crossover 
(OB-Scan), and fitness based scanning cros-
sover (FB-Scan). Experimental results show 
that both scanning crossover and diagonal 
crossover can achieve better performance than 
their 2-parent versions in several test functions. 
Mühlenbein et al. [9, 18] introduced the con-
cept of global recombination into GAs as gene 
pool recombination (GPR). Rather than from 
two parents, GPR samples the genes for cros-
sover from the gene pool, which consists of 
several pre-selected parents. The studies indi-
cate that GPR and its variants are easier to 
analyze and these methods can converge faster 
than 2-parent recombination. Tsutsui and Jain 
[16] proposed multi-cut crossover (MX) and 
Definition 2 (OB-Scan): Given 𝑛  parents 
𝑐 1, … , 𝑐 𝑛 ∈ 𝐶 , OB-Scan reproduces an 
offspring 𝑐 ′ =  𝑐1
′ , … , 𝑐𝑙
′  by, for 𝑘 = 1, … , 𝑙, 
𝑐𝑘
′ =
 
 
 0         
1
𝑛
 𝑐𝑖 ,𝑘
𝑛
𝑖=1
<
1
2
1         
1
𝑛
 𝑐𝑖 ,𝑘
𝑛
𝑖=1
>
1
2
𝑐𝑟 ,𝑘      𝑜𝑡ℎ𝑒𝑟𝑤𝑖𝑠𝑒,    
  
where 𝑐𝑖,𝑘  denotes the gene of parent 𝑐 𝑖  at 
locus 𝑘 , and 𝑟 ∈ {1, … , 𝑛}  is generated at 
random. 
Noteworthily, 2-parent OB-Scan equals uni-
form crossover—one of the most common 
2-parent crossover. That is to say, OB-Scan 
generalizes uniform crossover in terms of par-
ent number. The way that OB-Scan decides 
offspring genes is a ‘simple majority’ voting in 
essence; specifically, an allele gets elected if 
more than half of the total parents hold it. The 
theoretical analysis [12, 13] indicates that in-
creasing the number of parents in OB-Scan 
leads to a higher probability for the major al-
leles in the population to exist in every 
offspring, which will cause the population to 
concentrate on a certain region and thus lose 
the diversity rapidly. This situation is so-called 
premature convergence, a result of unbalanced 
exploitation and exploration. In other words, 
OB-Scan using more than two parents suffers 
from premature convergence because it exces-
sively intensifies exploitation but lessens ex-
ploration. 
In this project we adopt ‘supermajority’ in 
place of simple majority to deal with the issues 
in OB-Scan. The supermajority threshold 𝜃 
represents the required level for the candidates 
to be elected. In the supermajority voting sys-
tem, the winner requires a higher level 
(𝜃 > 0.5) of support than in simple majority 
voting system. The proposed crossover is 
therefore called biased occurrence-based 
scanning crossover (bOB) in that the threshold 
for supermajority biases the requirement for 
alleles 0 and 1 to be selected. The formal defi-
nition of bOB is given as follows. 
Definition 3 (bOB): Given 𝑛  parents 
𝑐 1, … , 𝑐 𝑛 ∈ 𝐶  and the threshold 0 ≤ 𝜃𝑘 ≤ 1, 
bOB reproduces an offspring 𝑐 ′ =  𝑐1
′ , … , 𝑐𝑙
′  
by, for 𝑘 = 1, … , 𝑙, 
𝑐𝑘
′ =
 
 
 0         
1
𝑛
 𝑐𝑖 ,𝑘
𝑛
𝑖=1
< 𝜃𝑘
1         
1
𝑛
 𝑐𝑖 ,𝑘
𝑛
𝑖=1
> 𝜃𝑘
𝑐𝑟 ,𝑘      𝑜𝑡ℎ𝑒𝑟𝑤𝑖𝑠𝑒,    
  
where 𝑐𝑖,𝑘  denotes the gene of parent 𝑐 𝑖  at 
locus 𝑘 , and 𝑟 ∈ {1, … , 𝑛}  is generated at 
random. 
Remark 1: Uniform crossover and OB-Scan 
are special cases of bOB: n-parent OB-Scan 
corresponds to n-parent bOB with 𝜃𝑘 = 0.5 
for all 𝑘 ∈ {1, … , 𝑙}, while uniform crossover 
corresponds to 2-parent OB-Scan. 
By definition, bOB is a general form of uni-
form crossover and OB-Scan. The additional 
parameter, 𝜃𝑘 , plays an important role on the 
decision criterion of bOB for offspring genes. 
Restated, the value of 𝜃𝑘  biases bOB in favor 
of allele 0 or 1 at offspring locus k: The case 
𝜃𝑘 > 0.5 gives rise to a supermajoritarian re-
quirement for allele 1 to be elected, which en-
courages bOB to choose 0 as the offspring 
gene. Conversely, the case 𝜃𝑘 < 0.5  brings 
about a supermajority for allele 0 so that bOB 
tends to chooses allele 1. 
In view of the above effects, we develop 
two adaptive strategies to control the parameter. 
The strategies are based on the allele frequency 
(or gene frequency), which represents the rela-
tive frequency of an allele in the population for 
a locus.  
Definition 4 (Allele Frequency): Let 
𝐶𝑘
(𝛼)
= {𝑐 ∈ 𝐶|𝑐𝑘 = 𝛼} be the subset in which 
the chromosomes possess allele 𝛼 at locus 𝑘. 
The allele frequency is defined by 
𝑝𝑘
(𝛼)
=
|𝐶𝑘 𝛼 |
|𝐶|
, 
where | ⋅ | denotes the set cardinality. 
For simplicity, we refer to the allele frequency 
𝑝𝑘
(1)
 as 𝑝𝑘  and refer to 𝑝𝑘
(0)
 as (1 − 𝑝𝑘) 
 The test functions include the extended De 
Jong's first function (F1e), De Jong’s second 
function (F2e), Noise function (NOI) the Ra-
strigin function (RAS), the Griewangk function 
(GRI), the Ackley function (ACK), and the 
Langmann function (LAN). Table 1 describes 
these test functions and their related parame-
ters. Note that the problem is to find the global 
minimum of these test functions. Due to simi-
larity in the experimental results, this report 
only discusses the performance on F2e, RAS, 
SCH, and GRI. The setting of GAs for the ex-
periments is summarized in Table 2. Each ex-
periment includes 100 independent runs. 
4.1 Solution Quality 
Figure 2 compares the solution quality for 
OB-Scan, bOB(p), and bOB(1-p) using differ-
ent number of parents. The experimental re-
Table 2 Parameters of GAs  
Representation Bit string 
GA model Generational GA 
Population size 100 
Parent selection 2-tournament 
Crossover 
OB-Scan,  
bOB(p),  
bOB(1-p) 
Number of parents 2,...,10 
Crossover rate 𝑝𝑐  1 
Mutation Bit-flip 
Mutation rate 𝑝𝑚  1/L 
Survivor selection 𝜇 + 𝜆 
Termination 500 generations 
Number of runs 100 runs/experiment 
 
  
(a) F2e (b) RAS 
  
(c) SCH (d) GRI 
Fig. 2. Mean and standard error of the best fitness for GAs using OB-Scan, bOB(p), and bOB(1-p) with 
different number 𝑛 of parents on F2e, RAS, and GRI functions 
 
significance, nevertheless, does not get greater 
absolutely with the increase of parents: In all 
the three test functions, even though the 
p-values decreases as the number of parents 
increases from 2 to 6, the tendency of p-values 
becomes inconclusive for bOB(p) using more 
than 6 parents. 
4.2 Convergence Speed 
In terms of convergence speed, we first look 
into the influence of the number of parents on 
the convergence of GAs using OB-Scan, 
bOB(p), and bOB(1-p), respectively. Due to 
the similarity of results on different problems, 
we present here the results on the F2e function 
only. Figure 3 demonstrates that the increase of 
parents has different effects on the conver-
gence speed of GAs using these crossovers. In 
OB-Scan, increasing parents gains faster con-
vergence in the very beginning, retards the 
convergence soon, and leads to a worse solu-
tion quality in the end. Such situation is a 
common symptom of premature convergence, 
caused by over-intensified exploitation. The 
bOB(1-p) further aggravates this problem and 
consequently has even worse solution quality, 
compared to OB-Scan and bOB(p). However, 
bOB(p) can benefit from the increase of par-
ents: Figure 3(c) shows that both convergence 
speed and solution quality improve with the 
number of parents, ranging from 2 to 10. The 
preferable results confirm the merit of using 
more parents in the proposed bOB(p). 
 
  
(a) OB-Scan (b) bOB(1-p) 
 
(c) bOB(p) 
Fig. 3. Convergence of GAs using OB-Scan, bOB(p), and bOB(1-p) with different number of parents on 
the F2e function (Note the different y-scales) 
 
