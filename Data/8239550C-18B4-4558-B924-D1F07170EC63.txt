 2
I. INTRODUCTION 
The probabilistic model building genetic algorithms are among the best genetic and 
evolutionary algorithms currently available. However, as studies in the literature 
indicated, algorithms belonging to this class usually require larger populations compared 
to the traditional genetic algorithms. Moreover, according to the properties of genetic 
algorithms, in the first few generations, the individuals contained in the population are all 
virtually random. In this case, the algorithm is almost identical to the random search. In 
order to alleviate this situation and therefore to enhance the performance, we would like 
to develop an initialization scheme in this work. 
 In fact, modifying the initialization procedure or seeding the initial population is not 
new at all and has been broadly investigated in the early stage of the development of 
genetic and evolutionary algorithms. As reported by the existing publications, using 
exiting solutions in the initial population can offer the following interesting benefits: (1) 
avoiding “reinventing the wheel” and preventing waste of computational efforts; (2) 
directing the search into certain search space regions of interests; (3) better performance 
by mixing heuristic initialization and evolutionary search (Eiben & Smith, 2003). A 
number of different ways for this purpose have been proposed by researchers in this field, 
include seeding, which uses known good solutions in the initial population, selective 
initialization, which holds N k-way tournaments to form the initial population, 
conducting a local search for each member of the initial population, and using a starting 
individual with mass mutation to fill up the initial population. 
This research project employs a prefix local searcher for initializing the population 
in order to improve the performance of the probabilistic model building genetic 
algorithms. Based on the properties of the probabilistic model building process, the prefix 
local searcher should be able to provide a population that is more appropriate for building 
probabilistic models. With a properly initialized population, the efficiency of the 
probabilistic model building genetic algorithms should be improved not only in the early 
stage but also during the whole evolutionary process. In particular, we use the extended 
compact genetic algorithm(Harik, 1999) as our study subject in this project. The 
developed initialization scheme should not be only applicable to the extended compact 
genetic algorithm but also applicable to other algorithms or techniques belonging to the 
class of probabilistic model building genetic algorithms. 
The major steps to conduct this research project include (1) select the local searcher 
to incorporate, (2) determine the way to conduct local search, (3) study the ratio of the 
starting points and generated points, and (4) understand the effect of the scheme on the 
probabilistic model building process. The scheme proposed and developed in this project 
can be considered as an efficiency enhancement technique, which speeds up the 
underlying genetic and evolutionary algorithm, as well as a tool for us to better 
understand the probabilistic model building process in both theory and practice. 
 
II. BACKGROUND 
Genetic algorithms (GAs) are powerful stochastic, population-based search and 
optimization techniques loosely modeled after the paradigms of evolution (Goldberg, 
1989; Holland, 1973). They guide the search through the solution space by using natural 
selection and genetic operators, such as crossover, mutation, and the like. Genetic 
 4
combining optimizers with mutual information trees method (COMIT) (Baluja 
& Davies, 1997), the bivariate marginal distribution algorithm (BMDA) 
(Pelikan & Muhlenbein, 1999), the IDEA framework (Bosman & Thierens, 
2001), the Bayesian optimization algorithm (BOA) (Pelikan, Goldberg, & 
Cantu-Paz, 2000), the factorized distribution algorithm (FDA) (Muhlenbein & 
Mahnig, 1999), and the extended compact genetic algorithm (Harik, 1999).  
 
III. EXTENDED COMPACT GENETIC ALGORITHM 
The extended compact genetic algorithm partitions the genes or variables into 
linkage groups, which can be considered as building blocks, and tries to find good 
probability distributions with the help of these linkage groups. The judging criterion for 
discriminating superior probability distributions from inferior ones is developed based on 
the principle of the minimum description length (MDL) (Rissanen, 1978, 1989). The 
probabilistic models used in the extended compact genetic algorithm is a class of 
probabilistic models known as marginal product models (MPMs), which are formed as a 
product of marginal distributions on a partition of the genes for variables, i.e., a linkage 
group. For a typical generation, the extended compact genetic algorithm selects the better 
individuals with the specified selection scheme, constructs the marginal product models 
with the individuals of the current population as well as the guidance given by the 
principle of the minimum description length, and then gets samples from the constructed 
probabilistic model as individuals of the population in next generation. 
As pointed out by the studies in the literature, in order to acquire good enough 
probabilistic models for probabilistic model building genetic algorithms, such as the 
extended compact genetic algorithm, the population size grows at least proportionally in 
terms of the problem size (Pelikan, 2002). According to the properties of genetic 
algorithms, the individuals in these large populations in the first few generations are very 
close to totally random ones. As a consequence, in the early stage of the evolutionary 
computational process, the probabilistic model building genetic algorithms are not quite 
different from the random search. In order to avoid waste of time on the random search in 
the early stage and therefore speed up the whole run duration, the initial populations 
which may be more appropriate for building probabilistic models should be utilized in the 
probabilistic model building genetic algorithms, such as the extended compact genetic 
algorithm in this project. 
 
IV. EXPERIMENTS 
i. Prefix Local Search 
Although many different initialization techniques have been introduced to the 
genetic and evolutionary algorithms, the proposed initialization scheme in this study 
is distinguishably different from those previously described in the literature in that a 
local searcher is incorporated in the initialization phase and more importantly, the 
path in the search space walked through by the local searching points are kept to 
help the probabilistic model building process. 
To realize the novel initialization scheme is to select an appropriate local 
search method by which the search points generated along the local search process 
 6
V. RESULTS 
For each parameters setting (see Table 1), we performed 50 runs and each run has 
250,000 evaluations. We get best fitness averaging 50 runs and compare with original 
ECGA. Figure (a)-(r) show the result of each generation in the different population size 
with different mutation rate. We can see that sometimes our approach is better than 
original ECGA, but usually isn’t. When population size is large enough, the results 
between our approach and original ECGA are similar. For all results of our approach, the 
result in 4 steps for local search is always better than others. Besides, we get the final 
fitness in Figure (a)-(r) to show the variation of the fitness in different population 
size.(see Figure 1-3) 
(a) 160_0.05
40
41
42
43
44
160 960 1760 2560 3360 4160 4960 5760
evaluations
fitness
org_ECGA
40X4
20X8
10X16
(b) 160_0.1
40
40.5
41
41.5
42
42.5
43
43.5
160 960 1760 2560 3360 4160 4960 5760
evaluations
fitness
org_ECGA
40x4
20x8
10x16
 
(c) 160_0.2
40
40.5
41
41.5
42
42.5
43
43.5
44
160 960 1760 2560 3360 4160 4960 5760
evaluations
fitness
org_ECGA
40X4
20X8
10X16
(d) 256_0.05
40
41
42
43
44
45
256 1536 2816 4096 5376 6656 7936 9216
evaluations
fitness
org_ECGA
64X4
32X8
16X16
 
(e) 256_0.1
40
41
42
43
44
45
256 1536 2816 4096 5376 6656 7936 9216
evaluations
fitness
org_ECGA
64X4
32X8
16X16
(f) 256_0.2
40
41
42
43
44
45
46
256 1536 2816 4096 5376 6656 7936 9216
evaluations
fitness
org_ECGA
64X4
32X8
16X16
 
 8
(o) 960_0.2
47
48
49
50
51
960 5760 10560 15360 20160 24960 29760 34560
evaluations
fitness
org_ECGA
240X4
120X8
60X16
(p) 1904_0.05
45
46
47
48
49
50
1904 11424 20944 30464 39984 49504 59024 68544
evaluations
fitness
org_ECGA
476X4
238X8
119X16
(q) 1904_0.1
45
46
47
48
49
50
51
1904 11424 20944 30464 39984 49504 59024 68544
evaluations
futness
org_ECGA
476X4
238X8
119X16
( r ) 1904_0.2
45
46
47
48
49
50
1904 11424 20944 30464 39984 49504 59024 68544
evaluations
fitness
org_ECGA
476X4
238X8
119X16
 
(1)  mutation rate = 0.05
40
41
42
43
44
45
46
47
48
49
50
51
160 256 384 576 960 1904
population size
fitness
org_ECGA
4  steps
8  steps
16 steps
(2)  mutation rate = 0.1
40
41
42
43
44
45
46
47
48
49
50
51
160 256 384 576 960 1904
population size
fitness
org_ECGA
4  steps
8  steps
16 steps
 
( 3)  mutation rate = 0.2
40
41
42
43
44
45
46
47
48
49
50
51
160 256 384 576 960 1904
population size
fitness
org_ECGA
4  steps
8  steps
16 steps
 
 
VI. CONCLUSIONS  
We attempted to design an approach to enhance the efficiency and performance of 
the extended compact genetic algorithm by using a prefix local searcher to assist to 
generate the initial population and therefore to help the probabilistic model building 
process utilized by the extended compact genetic algorithm. However, the experimental 
