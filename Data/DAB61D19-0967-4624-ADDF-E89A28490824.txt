2行政院國家科學委員會專題研究計畫
行政院國家科學委員會專題研究計畫
成果
成果
報告
報告
計劃名稱
計劃名稱
:
:
建構一個與儲存體不相依的多邊型網格化簡系統
建構一個與儲存體不相依的多邊型網格化簡系統
Construction of a Storage Independent Polygonal Mesh Simplification System
計畫編號：NSC 95 - 2218 - E - 167 - 001
執行期限：95 年 11 月 1 日至 96 年 07 月 31 日
主持人：陳宏光
執行機構及單位名稱：國立勤益科技大學電子工程學系
計劃參與人員：曾錫鴻、陳永鴻、郭齡筑
一、中文摘要
一、中文摘要
在此計畫中，我們發展了一套可達成儲存體不相依的多邊形網格化簡系統。藉著將此系統劃
分為演算與資料管理兩層，並將資料存取抽象化，現存的內核式化簡演算可自動拓展成外核式操
作以處理巨量多邊形的高解析度物件，而傳統的外核式化簡演算亦可藉由記憶體管理層的快取緩
衝來提高外部存取的效能。此外，透過此一系統可進行兩段甚至多段式的演算耦合。為驗證此一
系統的有效性，我們實作了一個傳統內核式的遞迴式邊縮減的演算法，與一知名的外核式操作的
演算法，並實作此兩種類型的演算法在此平台上的耦合。由實驗證實，我們系統成功的達成了限
定記憶需求為常數，與記憶體不相依的化簡演算設計，自動切換內核式或外核式操作，及有效地
加速外核式操作等研究目標。
關鍵詞
關鍵詞
：多邊形網格化簡、外核式、內核式
Abstract
Abstract
In this project, we have developed a novel storage independent polygonal mesh simplification system,
denoted as SIPMSS, which is divided into two layers: the algorithm layer and the data management layer.
With the abstraction of the data accesses, we could port most existing simplification algorithms, including in-
core and out-of-core algorithms, to this new system. Despite that we could extend the current in-core
algorithms to deal with large mesh by automatically switch into cached out-of-core operation, traditional out-
of-core algorithms could increase their runtime efficiency by the cache buffers controlled by the data
management layer. Furthermore, we could make use of the new system to provide two-stage integration of
two or more different types of algorithms. To prove the effectiveness of the new system, we have
implemented two types of polygonal mesh simplification algorithms, and a two-stage integration of the two
algorithms. According to our experimental results, the new system has constant main memory cost,
automatically switches between in-core and out-of-core operations, and significantly improves the external
memory access efficiency with software caches.
Keywords
Keywords
: polygonal mesh simplification, in-core, out-of-core
二、緣由與目的
二、緣由與目的
作為三維物件的表面表示法則(surface representation)之ㄧ，多邊形網格(polygonal mesh) 是一個由
三維空間裡的點(vertex)與多邊型面(polygonal face)所形成的集合。由於多數繪圖軟硬體支援/僅支援此
一表示法則，而且自模型取得(model acquisition)與重建(reconstruction)所得的最初格式，至應用軟體送
至著色硬體管線之最終格式，均為多邊形網格，其已成為三維物件表面表示法(surface representation)
之主流[1]。然而，此表示法亦有其潛在的限制。
於三維互動式應用裡，使用者所注重的除了應用程式的內容外，場景的真實度與應用程式的互動
性，常常是決定此一應用成功與否的主要因素之一。為提高場景的真實度，往往必須提高場景裡模型
的精細程度，卻加大了每場景必須處理的多邊形面數(polygon count)，進而造成了著色系統額外的負
擔，降低了系統著色的速率及應用程式的互動性。因此，為維持一定的著色速率，場景著色之真實性
往往為著色系統之處理能力限制。為克服此一限制，吾人可經由優化之多邊形化簡系統取得各物件之
最佳表示形式，或者可藉由動態調整物件解析度的方式來對著色硬體的資源做最佳的運用[2-3]。前者
4 
 
 
 
進行化簡演算 
需求 ≤ 可用記憶體大
小 
記憶體需求評估 
初始資料需求 
起始化 
外核操作模式 內核操作模式 
完成現階段化簡 
判斷是否達成目標 
新的資料需求 
需求 ＞ 可用記憶體大
小 
輸出最終成果 
是 
否 
資料管理層 
演算層 
圖二、系統流程
圖二、系統流程
由於我們將系統區分成資料管理與演算兩層。其中資料管理層負責管理實體儲存空間之配置及存
取，提供抽象化資料存取及管理指令，提供內核及外核兩種操作模式，與估測演算層的記憶體需求，
並依據現有的記憶體做資料存取模式的自動調整。資料管理層則提供給演算層包含模式偵測及設定，
儲存體配置與刪除，與資料存取等三大類指令。
資料管理層根據演算層所提供之資料表估計主記憶體的需求，如需求小於或等於可用記憶體大小
時，將自動設定資料操作模式為內核式操作。此時，所有的資料結構均配置於系統的主記憶體區塊。
資料之存取則轉向為主記憶體區塊的存取。反之，如需求大於可用記憶體大小時，資料操作模式則切
換為外核式操作，並將所有的資料結構轉存至相對的磁碟檔案，並沿用我們之前所提的快取式外核操
作的作法。此時，資料之存取將先由快取區尋找，唯當資料不在快取區內時，方自外部記憶體提取。
系統的內核與快取式外核操作如下圖所示。
 快取式外核操作模式 內核操作模式 
演算層 
資料管理層 
抽象化資料
存取指令 
系統記憶體 
資料儲存區  
系統記憶體
存取 
磁碟系統 
磁碟存取 
系統記憶體 
資料快取區塊 
  
演算層 
資料管理層 
(快取管理) 
 
抽象化資料
存取指令 
 
快取記憶體
存取 資料儲存檔 
圖三、內核與快取式外核操作
圖三、內核與快取式外核操作
為驗證此一系統的有效性，我們將實作三種不同類型的演算於此系統上：第一種類型為傳統內核
式最知名的遞迴式邊縮減的演算，我們將移植我們先前所提出的一個線性時間的演算法[23]至此系統，
以下將稱之為 Algorithm
Algorithm
I
I
；第二種類型為傳統的外核式操作的演算，這裡我們所移植的是一個為
Lindstrom 等人所提出的知名的均格篩式演算法[25]，以下將稱之為 Algorithm
Algorithm
II
II
；第三種類型的演算
源自於 Garland[39]，為第一種與第二種類型演算的緊密耦合，以下將稱之為Algorithm
Algorithm
Two-stage
Two-stage
。
6會(HCII 2007)，並將進一步收錄於 SCI 收錄的期刊 Lecture Notes in Computer Science 內
[40] 。
5. 綜合評估：本研究在國科會給予足夠之經費下，已順利完成並得以及時發表於國際知名
的學術研討會與期刊 [40]。因此自評為佳。
六、參考文獻
六、參考文獻
[1] A. Watt, 3D Computer Graphics, 3rd Ed., Addison-Wesley, Reading, MA, 2000.
[2] J. H. Clark, “Hierarchical geometric models for visible surface algorithms,” Communications of the ACM, Vol. 19, No. 10, pp.
547-554, 1976.
[3] D. Lubke, et al., Level-of-Detail for 3D Graphics, Morgan Kaufman, San Francisco, CA, USA, 2003.
[4] M. J. Ackerman, “The visible human project,” in Proceedings of IEEE, Vol. 86, pp. 504-511, 1998.
[5] M. Levoy et al., “The Digital Michelangelo Project: 3D scanning of large statues,” in Proceedings of the SIGGRAPH ‘00, pp.
131-144, 2000.
[6] J. Trimble and M. Levoy, “Stanford Digital Forma Urbis Romae Project,” http://formaurbis.stanford.edu/docs/FURproject.html,
2002.
[7] O. Deussen et al., “Realistic modeling and rendering of plant ecosystems,” in Proceedings of the 25th annual conference on
Computer graphics and interactive techniques, ACM Press, New York, NY, USA, pp. 275-286, 1998.
[8] M. R. Mine, J. Shochet, and R. Hughston, “Building a massively multiplayer game for the million: Disney's Toontown Online,”
ACM Computers in Entertainment, Vol. 1, No. 1, Article 06, 2003.
[9] T. A. Funkhouser and C. H. Sequin, “Adaptive display algorithm for interactive frame rates during visualization of complex
virtual environments,” in Proceedings of the SIGGRAPH ‘93, pp. 247-254, 1993.
[10] H. Hoppe et al., “Mesh optimization,” in Proceedings of the SIGGRAPH ‘93, Vol. 27, pp. 19-26, 1993.
[11] H. Hoppe, “Progressive meshes,” in Proceedings of the SIGGRAPH ‘96, Vol. 30, pp. 99-108, 1996.
[12] M. Garland and P.S. Heckbert, “Surface simplification using quadric error metrics,” in Proceedings of the SIGGRAPH ‘96,
Vol. 30, pp. 209-216, 1996.
[13] P. Lindstrom and Greg Turk, “Evaluation of memoryless simplification,” IEEE Transactions on Visualization and Computer
Graphics, Vol. 5, No. 2, pp. 98-115, 1999.
[14] L. Kobbelt, S. Campagna, and H. P. Seidel, “A general framework for mesh decimation,” in Proceedings of the Graphics
Interface ‘98, pp.43-50, 1998.
[15] W. J. Schroeder, J. A. Zarge, and W. E. Lorensen, “Decimation of triangle meshes,” in Proceedings of the SIGGRAPH ‘92, Vol.
26, pp. 65-70, 1992.
[16] J. Rossignac and P. Borrel, “Multi-resolution 3D approximation for rendering complex scenes,” in Proceedings of the Geometric
Modeling in Computer Graphics ‘93, pp. 455-465, 1993.
[17] K. L. Low and T. S. Tan, “Model simplification using vertex clustering,” in Proceedings of the Symposium on Interactive 3D
Graphics ‘97, pp. 75-82, 1997.
[18] A. D. Kalvin, and R. H. Taylor, “Superfaces: Polygonal Mesh Simplification with Bounded Error,” IEEE Computer Graphics
and Applications, Vol. 16, No. 3, pp. 64-77, 1996.
[19] R. Ronfard and J. Rossignac, “Full-range approximation of triangulated polyhedra,” in Proceedings of the Eurographics ‘96, Vol.
15, No. 3, pp. 67-76, 1996.
[20] S. Campagna, L. Kobbelt, and H. P. Seidel, “Efficient decimation of complex meshes,” Technical Report, Computer Graphics
Group, University of Erlangen-Nürnberg, Germany, 1998.
[21] J. Wu and L. Kobbelt, "Fast mesh decimation by multiple-choice techniques," in Proceedings of the International Fall Workshop
on Vision, Modeling, and Visualization ‘02, pp. 241-248, 2002.
[22] D. Brodsky and B. Watson, “Model simplification through refinement,” in Proceedings of the Graphics Interface ‘00, pp. 221-
228, 2000.
[23] Hung-Kuang Chen, Chin-Shyurng Fahn, Jeffrey J.P. Tsai, Rong-Ming Chen, Ming-Bo Lin, “A Linear Time Algorithm for High
Quality Mesh Simplification,” in Proc. of IEEE 6th International Symposium on Multimedia Software Engineering, Miami,
USA, pp. 169-176, Dec 2004, http://doi.ieeecomputersociety.org/10.1109/MMSE.2004.12.
[24] Hung-Kuang Chen, Chin-Shyurng Fahn, Jeffrey J. P. Tsai, Rong-Ming Chen, Ming-Bo Lin, “Generating high-quality discrete
LOD meshes for 3D computer games in linear time,” Multimedia Systems, Volume 11, Issue 5, Jun 2006, Pages 480 - 494, DOI
10.1007/s00530-006-0017-1, URL http://dx.doi.org/10.1007/s00530-006-0017-1.
[25] P. Lindstrom, “Out-of-core simplification of large polygonal models,” in Proceedings of the SIGGRAPH ‘00, Vol. 34, pp. 259-
270, 2000.
[26] P. Lindstrom and C. T. Silva, “A memory insensitive technique for large model simplification,” in Proceedings of the IEEE
Visualization ‘01, pp. 121-126, 2001.
