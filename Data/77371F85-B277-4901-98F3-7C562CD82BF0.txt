2行政院國家科學委員會專題研究計畫成果報告
研究有效的演化樹平行演算法
Designing Efficient Parallel Algorithms for the Evolutionary Tree
計畫編號： NSC 94-2213-E-275-006
執行期限： 94 年 8 月 1 日至 95 年 7 月 31 日
主 持 人：蔡鴻仁 執行機構及單位名稱：嶺東科技大學資訊科技系
中文摘要
結合生物學和資訊技術的優點，生物資
訊在近幾年受到研究者極大注意。基於計算
機之強大計算威力，許多研究者積極投入生
物計算的研究領域。
在本計畫中，我們感興趣於在共用記憶
體模型和具有可重置光學廣播匯流排陣列處
理機上，設計有效的平行演算法來解出演化
樹問題。假設所給予的 n 個物種可以被表示為
n × n 大小的距離距陣，我們首先在共用記憶
體模型上，使用 O(n2 / log 2 n)處理器，設計
一 O(log2 n)時間的最佳化平行演算法來解具
有具有固定樹根的演化樹問題。然後，在可
重置光學廣播匯流排陣列處理機上，兩個
O(log n)和 O(1)時間，使用 n3 和 n4 處理器的
快速平行演算法也同時被推論。
關鍵詞：生物資訊、生物計算、演化樹、
最小生成樹、平行演算法、共用記憶體模型、
具有可重置光學廣播匯流排陣列處理機。
Abstract
By integrating the advantages both of
biology and information technology, the
bioinformatics have received a great deal of
attention by researchers during the past few
years. Based on the computation power of
computer, many researchers have animatedly
investigated the field of bioinformatics by
information technology.
In this project, based on the architectures
of parallel random access machine (PRAM)
and the array with reconfigurable optical buses
(AROB), we are interested in designing
efficient parallel algorithms for the problem of
the rooted evolutionary tree. Assume the given
n species is represented by an n × n distance
matrix. On the CREW PRAM model, We first
design an O(log2 n) time optimal parallel
algorithm for this problem using O(n2 / log 2 n)
processors. Then, two O(log n) and O(1) time
fast parallel algorithms are also derived on the
AROB model using n3 and n4 processors,
respectively.
Keywords: Bioinformatics, Biology
Computation, Evolutionary Tree, Minimal
Spanning Tree, Parallel algorithms, PRAM,
Arrays with Reconfigurable Optical Buses.
4PRAM using O(n/log n) processors or on a 1-D
AROB using n processors.

Lemma 2 [8, 9, 20] Given n integer or
normalized real numbers, the prefix maximum
(minimum) of these N numbers can be found in
O(log n) and O(1) time either on an CREW
PRAM using O(n/log n) processors or on a 1-D
AROB using n1+1/c processors for a constant c
and c1.

Lemma 3 [8, 9, 11-12] Given n integer or
normalized real numbers, the prefix sum of
these N numbers can be computed in O(log n)
and O(1) time either on an CREW PRAM using
O(n/log n) processors or on a 1-D AROB using
n1+1/c processors for a constant c and c1.

Lemma 4 [8] Given a graph G with n vertices,
the minimum spanning tree of G can be solved
in O(log2 n) on a CREW PRAM using
O( n2/log2 n) processors.

Lemma 5 [19] Given a graph G with n vertices,
the minimum spanning tree of G can be solved
in O(1) time on a 4-D AROB of using n4
processors.

Lemma 6 [20] Given a graph G with n vertices,
the minimum spanning tree of G can be solved
in O(log n) time on a 3-D AROB using n3
processors.

4 Parallel Algorithms
Let d(si, sj) be the distance matrix
constructed from a set S of n species s1, s2, …,
sn. Farach et al. [3] gave an optimal O(n2) time
algorithm to construct a minimax rooted
evolution tree. The main idea of the proposed
algorithm can be outlined in the following four
steps. First, find the longest distanced d(si, sj)
between species si and sj, and then build a
minimal spanning tree T of S. Let e be the
longest edge in the path linked si and sj in the
minimal spanning tree T. Second, break the
edge e such that two sets of species Si and Sj are
obtained which Si contains si and Sj contains sj.
Third, recursively apply last two steps to
construct subtrees Ti and Tj for sets Si and Sj.
Finally, determine a rooted tree labeled by r
with Ti and Tj as subtrees. Let hi (h j) be the
distance from the root r to the root of Ti(Tj),
then set dt(si, sr) = dt(sr, sj) = d(si, sj)/2.
Based on the algorithm proposed by
Farach et al [3], this problem can be
implemented in CREW PRAM models. The
main idea of the developed algorithm is listed
in the following. The interested readers can
refer to the literature [17] for detail. This leads
to the following theorem.
Algorithm PRMETA
Input: A Distance Matrix d(si, sj) of a Set S of
n Species s1, s2,…, sn.
Output: A Minimax Rooted Evolution Tree
dt(si, sj) for S .
Step 1: Find the minimal spanning tree T from
S.
Step 2: Determine all the longest distances ek (1
≦k <n) correspondingly to T.
Step 3: Distinguish all subtrees Tk (1≦k <n)
simultaneously.
Step 4: Determine and adjust the distance dt(si,
sj) between all subtrees to their
corresponding roots.
Theorem 1 Given a distance matrix of size n ×
n with n species, the rooted minimax
revolutionary tree can be constructed in O(log2
n) on a CREW PRAM using O(n2 / log2 n)
processors.

By increasing the number of processors
and the pipelined ability and reconfigurability
of the optical buses, this problem can be also
computed in AROB models. The interested
readers can refer to the literature [17] for detail.
Hence, this leads to the following corollaries.
Corollary 1 Given a distance matrix of size n ×
n with n species, the minimax rooted
revolutionary tree can be also constructed in
O(log n) time on a 3-D AROB using n3
processors.
