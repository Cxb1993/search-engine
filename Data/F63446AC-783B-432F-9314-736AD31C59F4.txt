 2 
???????????????????
????????????????????
????????????????????
???????????????????
????????????????????
????????????????????
????????????????????
????????????????????
????????????????????
??????????????????
?regular structures????????????
???????????data streams????
???task kernels????????????
????????????????????
????????????????????
????????????????????
???????????????????
???????????????????
??????????? stream computing 
architecture???????? 
??????????????????
????????????????????
????????????????? ALU?
????????????????????
????????????????????
?????? [1]????????????
???????????????????
?????IBM/Toshiba/Sony Cell processor ?
???? [2]?Sun Niagara ????? [3]?
RMI XLR732 ????? [4]?IBM/Microsoft 
Xbox 360 CPU ????? [5]???????
??????????[6]????Cisco ??
???????????????? 192 ?
Tensilica Xtensa ?????????????
???????????????????
????????????????????
????????????????????
????????????????????
???????????????????
????????????????????
????????????????????
???? 
?????? 
?????????????????
????????????????????
???????????????????
??? n ???????? 1 Â£ n Â£ 4???
????????????????????
???????????????????
????????????????????
???? no operation (NOP)???????
????????????????????
????????????????????
????????????????????
????????????????????
????????????????????
???????????? NOP ????
????????????????????
? n = 4 ???????????????
????????????????????
????????????? loop unrolling
????????????????????
????????????????????
????????????????????
????????????????? 
?????????????????
???????????????????
????????????list schedule???
????????????????????
????????????????????
????????????????????
?????????? data dependency???
??? Directed Acyclic Graph???????
????????????????????
?? 
 4 
Â·  RN?Remain nodes? 
?? CN ? FN ????????????
?? RN? 
?????? cycles ?????????
????????????????????
?????????????????? CN
????????????????????
? RN ????? CN ????????
cycle???????? FN ???? 
3.4 ?????????? 
????????????????
????????????????????
????????????????????
????????????????????
????????????????????
??????? NOP ??????????
????????????????????
????? n????? n = 4??????
? 3?? n = 3?????? 2???????
???????????????????
?? FIS?Fixed Interval Schedule??????
?? NOP ?????? 
 
Mad r2, r0, c9.w, r2
NOP
NOP
NOP
NOP
Dp4 oPos.y, r3,r2
Mad r2, r0, c9.w, r2
Mad r2, r0, c9.w, r2
Mad r2, r0, c9.w, r2
Mad r2, r0, c9.w, r2
NOP
Dp4 oPos.y, r3,r2
Dp4 oPos.y, r3,r2
Dp4 oPos.y, r3,r2
Dp4 oPos.y, r3,r2
 
??? ?????????? 
 
??????????????????
???????????? stal ??????
(A, B, C ????????? 1, 2, 3)????
????????????????????
??????????????????? 3
? stall?????????????????
? stall???????????? NOP ??
??????????????????
????????????????????
????????????????????
????????????????????
? stall ??????? stall ???????
????????? 
??????????????????
????????????????????
????????????????????
????????????????????
???????? 
0
1
4
2
3
5
6
7
8
9
10
11
12
0
3
6
9
12
0
4
2
6
8
10
12
stall (NOP)instruction
A B C  
???FIS ???? 
 
??????? 
??? n = 1????? TBCF ????
????????????????????
??? NOP ??????? 3 ???????
? ? ? ? ? ? ? (*) ? ? ? ? ? name 
dependence ?????????? name 
dependence ????????????TBCF
???????????? 
???????????? 
                                                             
???? NSC 96?2221?E?110?037 
???? ?????????(NoC)????????????????????
??????(NoC)?????????????????? 
?????? 
??????? 
??? 
???????????????? 
?????? 2007 ? 10 ? 17 ?? 19 ????????? 
???? 2007 IEEE Workshop on Signal Processing Systems (SiPS 2007) 
?????? Area-Efficient Signed Fixed-Width Multipliers with Low-Error Compensation 
Circuit 
 
???????? 
SiPS 2007 ???? Keynote Speech???? Professor Magdy A. Bayoumi (University 
of Louisiana at Lafaye tte)?Professor Liang-Gee Chen (National Taiwan University)???
Professor Lajos Hanzo (University of Southampton) ???? ?Wireless Sensors Networks 
& DSP: Marriage Made in Heaven???Toward 3D-Video: Challenge and Solution????
?Wireless Multimedia Communications: A Tele-Presence Paradigm for Anyone, Anywhere, 
Anytime - or the Dawn of the "World Wide Wait" ??????SiPS 2007 ?????????
??? Wireless Communications?MIMO Systems?Channel Coding and Multimedia Signal 
Processing?Network and Communication?DSP Architectures?Channel and Source Coding?
Communication Systems: Architectures and Networks?Multimedia Signal Processing & 
Analysis?Multimedia Coding and Transmission?Design Methods and Modeling?DSP Design 
Methodology and NoC Design?Architecture for H.264/AVC and Scalable Video?Machine 
Vision, Speech and Audio Coding?Machine Vision and Intelligence?Multidimensional Signal 
Processing & Multimedia Analysis?Visual Coders: Algorithms and Architectures ?????
???????? 
 
?????? 
???? SiPS 2007 ???????Area-Efficient Signed Fixed-Width Multipliers with 
Low-Error Compensation Circuit???? DSP Architectures ?????????????
??????????????????????????????????????
??????????????????????????????????????
?? 
 
width multipliers can not be adapted to most of multimedia 
and DSP applications due to their signed multiplication 
operations. 
In this paper, the error compensation circuit with lower 
hardware complexity and high-accuracy performance for 
array-based and tree-based signed fixed-width multipliers is 
developed. The proposed circuit can be easily constructed 
with simple logic gates and achieve the better error 
performance in terms of the maximum absolute error, mean 
error and mean-square error with respect to previous 
published circuit. 
The remainder of this paper is organized as follows. In 
section II, the algorithm and parallel multiplier structure are 
reviewed. Section III describes the detailed derivation of 
the error compensation function and the corresponding 
error compensation circuit. Experimental results are shown 
in Section IV. Finally, a concluding remark is given in 
Section V. 
 
 
II. FUNDAMENTALS OF BAUGH-WOOLEY 
MULTIPLIER 
 
In the following discussion, it is assumed that a signed n-bit 
multiplication A = an1 an2â€¦a0 is multiplied by a signed n-
bit multiplier B = bn1 bn2â€¦b0 to generate a signed 2n-bit 
output product P = p2n1 p2n2â€¦p0. The twoâ€™s complement 
representations for A and B are expressed as 
 
Â¦Â¦ 
 



 

   
2
0
1
1
2
0
1
1 2222      
n
i
i
i
n
n
n
i
i
i
n
n bbBaaA     (1) 
 
The difficulty of twoâ€™s complement multiplication lies in 
processing the sign bits of multiplicand and multiplier. An 
efficient method to resolve this problem is provided by 
well-known Baugh-Wooley algorithm [1]. The principle for 
an n u n twoâ€™s complement multiplication is indicated in 
(2).
   22111112 22    u nnnnnn babaBAP
   Â¦Â¦ Â¦
 

 

 



 
2
0
2
0
2
0
1
11
1
11 222    
n
i
n
j
n
i
ni
inin
ji
ji
n
nn abbababa  (2) 
 
Two's complement multiplication is often realized utilizing 
a variation of the Baugh-Wooley algorithm called the 
Complemented Partial Product Word Correction. The 6u6 
tabular form of bit-level modified Baugh-Wooley 
multiplication is depicted in Fig. 1. The multiplication 
matrix and the output product can be expressed by the sum 
of three segments: most significant part (MSP), 
compensation vector (CV), and least significant part (LSP). 
 
 
a5 a4 a3 a2 a1 a0
b5 b4 b3 b2 b1 b0u
a0 b0a1 b0a2 b0a3 b0a4 b0a5 b0
a0 b1a1 b1a2 b1a3 b1a4 b1a5 b1
a0 b2a1 b2a2 b2a3 b2a4 b2a5 b2
a0 b3a1 b3a2 b3a3 b3a4 b3a5 b3
a0 b4a1 b4a2 b4a3 b4a4 b4a5 b4
a0 b5a1 b5a2 b5a3 b5a4 b5a5 b5
P0P1P2P3P4P5P6P7P8P9P10
11
P11
MSP                     CV                   LSP  
Fig. 1.  The 6u6 modified Baugh-Wooley multiplication
 
Most of the previous proposed fixed-width multipliers 
eliminate the partial products of LSP, and add approximate 
error compensation values generated from the partial 
products of CV to the carry inputs of MSP to degrade the 
truncation error. Let Sum(A;B) denote the sum of CV and 
LSP partial products, and f(CV) indicate the error 
compensation function which generates approximate carries 
to compensate the truncation error. The output product of 
the fixed-width multiplier, denoted as Pt, with error 
compensation function f(CV) can be calculated as 
 
)CV();( fBASumPPt                         (3) 
 
The truncation error P  Pt can be obtained by rearranging 
(3) as 
  
  )(;
)(,, ;,,
CV
CV0101
fBASum
fbbaaSumPP nnt
 
      (4) 
 
To estimate the accuracy of the fixed-width multiplier, the 
error performance evaluated in terms of maximum absolute 
error (Hmax), mean error (Hm) and mean-square error (Hms) are 
expressed as follow 
 ^ ` ^ `
 ^ ` ntms
n
tm
n
tmax
PP
PPPP
22 2Ave
2Ave2Max   ,  ,
 
  
H
HH
    (5) 
 
where Max{} and Ave{} represent the maximum and 
average operators, respectively. Obviously, the error 
performance of fixed-width multipliers significantly 
depends on the choice of the error compensation function 
f(CV). In next Section III, we will elaborate the correlation 
between the partial products of CV and Sum(A;B) and then 
design the error compensation functions and the 
corresponding error compensation circuit. 
 
158
According to (11) and (15), it is evident that the value Hm 
and Hms can be minimized when fm(CVe) and fms(CVe) are 
chosen as closer as possible to Savg(CVe). Moreover, 
Savg(CVe) and f(CV) should be normalized and rounded to n 
bits, thus the functions fm(CVe) and fms (CVe) are given as 
 
roundeee ])([)()( 2CVCVCV
n
avgmsm Sff        (16) 
 
B.    Proposed Error Compensation Circuit 
 
In this subsection, the correlation between each value 
CVe and error compensation function is further explored in 
order to derive a simple error compensation circuit with 
higher accuracy. For clarifying the following contention, 
we first define a generalized index Tindex for CVe as 
    
   
    001112
2
21
1
10
01122110indexeindex
22
22
È™CVÈ™ ,,,,
uu
uu 
 






baba
baba
babababa
nn
n
n
n
n
nnnn


(17) 
 
where Tindex ranges between 0 and 2n  1. For example, 
Tindex(CVe) represents the 42th index when CVe = (1, 0, 1, 0, 
1, 0) and n = 6. 
Next, taking the 6u6 fixed-width multiplier as example, 
let us consider the value Savg(CVe) 2n (denoted as Vavg) and 
error compensation function fm given in (16) for all possible 
indices Tindex. By performing exhaustive simulation, a part 
of Tindex(CVe), Vavg and fm(CVe) for exhibiting their 
correlation are shown in Table I. 
 
Table I. Values of Vavg and fm(CVe) for different Tindex(CVe) 
 
Tindex(CVe) Vavg fm(CVe) 
0 0.446 0 
1 0.832 1 
2 1.231 1 
4 1.210 1 
8 1.210 1 
12 2.085 2 
16 1.231 1 
18 2.043 2 
30 4.016 4 
32 0.832 1 
33 1.224 1 
45 2.696 3 
51 2.571 3 
 
As can been seen from Table I, when all partial 
products of CVe are zero, a small value (i.e., 0.446) is 
generated from LSP and thus results that fm(CVe) = 0. 
When the partial product 05ba  is 1, the compensation 
vector CVe becomes (0, 0, 0, 0, 0, 1) (i.e., Tindex(CVe) = 1) 
and Vavg is added up to 0.832. Therefore, 05ba  = 1 
contributes about 0.386 to Vavg and leads fm(CVe) to 1. 
Similarly, when Tindex(CVe) = 2, 4, 8, 16 and 32, a4b1, a3b2, 
a2b3, a1b4 and 50ba  contribute about 0.785, 0.764, 0.764, 
0.785 and 0.386 to Vavg, respectively. Obviously, the 
influence of partial products 05ba  and 50ba  on the value 
Vavg is much smaller than that of the other partial products 
a4b1, a3b2, a2b3 and a1b4. This phenomenon can also been 
observed when Tindex(CVe) = 12, 18 and 33. Both Tindex(CVe) 
= 12 and 18 result that fm(CVe) = 2, but fm(CVe) = 1 when 
Tindex(CVe) = 33. Based on the scrutinies above, we can 
conclude that partial products a4b1, a3b2, a2b3 and a1b4 can 
individually contribute 1 to fm(CVe) when they are 1, but 
05ba  and 50ba  contribute 1 to fm(CVe) when both or one 
of them are 1. This conclusion is also correct when 
Tindex(CVe) = 30, 45 and 51 in Table I. 
Taking the concepts of inner partial products (a4b1, 
a3b2, a2b3 and a1b4) with greater affection on fm(CVe) into 
consideration, a near-optimal error compensation function 
mf
~
 and msf
~  is obtained by performing exhaustive search 
and shown in (18), where | denotes the OR operation. The 
corresponding framework of the proposed error 
compensation circuit which only generates n1 error 
compensation carries is depicted in Fig. 2. As shown in Fig. 
2, these error compensation carries c0, }, cn-2 can be 
directly added along with the carry inputs of MSP to 
minimize the truncation error of fixed-width multipliers. In 
addition, the proposed circuit only needs one OR gate and 
leads to less hardware complexity of fixed-width 
multipliers. 
 
)|( 1001
21322312
~~



Â˜Â˜Â˜  
nn
nnnnmsm
baba
babababaff
(18) 
 
 
c0
an-1b0 a0bn-1 an-2b1 a1bn-2}}
c1 cn-2
 
Fig. 2 Proposed error compensation circuit 
 
 
C.    Error Performance Comparison 
 
To compare the error performance of proposed error 
compensation circuit with that of previous published circuit 
[12], the probability of different error compensation circuits 
160
