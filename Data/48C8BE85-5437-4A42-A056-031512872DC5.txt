一、中文摘要 
 
本年度之計畫執行重點經由第二年比較分析出最快速的 RS 解碼法，再與
平方剩餘碼結合實現於 DSP 單晶片中，同時搭配於 CSI 及 MPEG-4 編碼器
來測試，以提升原視訊編碼器網路傳送之穩定度。由於 DSP 可引入 C 程式碼
實現，選擇 DSP 實現可縮短開發所耗時間，並具有可隨時修正的特性而且支
援Galois Field 運算，所以非常適合用於實現新型快速 RS 碼與平方剩餘碼之解
碼器。根據實驗結果，搭配快速 RS-QRC 編碼法，可有效降低資料傳輸錯誤
率，進而提升 CSI-MPEG4 視訊編碼器的穩定度。這個結合訊源編碼與通道編
碼的方法，可以整合到數位訊號處理器中，提升編碼器整體的效率，讓訊號處
理的速度提高，訊號品質更為理想。 
 
關鍵字 ： 快速立方樣條插值補償法, CSI, IPP, MPEG-4, DSP 
 II
 IV
目錄 
 
 
一、中文摘要 ..................................................................................... II 
二、英文摘要 ....................................................................................III 
三、前言 ......................................................................................... - 1 - 
四、研究目的 ................................................................................. - 3 - 
五、文獻探討 ................................................................................. - 4 - 
六、研究方法 ................................................................................. - 6 - 
七、結果與討論 ............................................................................. - 9 - 
八、參考文獻 ............................................................................... - 17 - 
九、計畫成果自評 ....................................................................... - 19 - 
來測試，以提升原視訊編碼器網路傳送之穩定度。由於 DSP 可引入 C 程式碼
實現，選擇 DSP 實現可縮短開發所耗時間，並具有可隨時修正的特性而且支
援Galois Field 運算，所以非常適合用於實現新型快速 RS 碼與平方剩餘碼之解
碼器。根據實驗結果，搭配快速 RS-QRC 編碼法，可有效降低資料傳輸錯誤
率，進而提升 CSI-MPEG4 視訊編碼器的穩定度。這個結合訊源編碼與通道編
碼的方法，可以整合到數位訊號處理器中，提升編碼器整體的效率，讓訊號處
理的速度提高，訊號品質更為理想。 
 
 
圖一：TMS320DM642之系統方塊圖 
 - 2 -
五、文獻探討 
 
本計畫主要提出新式里德所羅門 (RS) 解碼法與平方剩餘 (QR) 碼結合，
實現解碼通訊系統: DVB-T 標準規格錯誤更正的 (204, 188, ) shortened RS 
碼。由於 RS 碼[1-7]可糾正非二元錯誤，且具有良好的糾錯能力，本身應用的
範圍很廣，包含了 DVB、DVD、 CD 、衛星通訊、資料儲存及傳送、展頻通
訊，和通訊系統等有關訊號錯誤控制部分，表一簡單列出通訊用糾錯編碼規
格。而現行  RS 解碼有兩種方式 : 一為硬判決解碼法  (Hard Decision 
Decoding) ，主要用代數特性進行解碼；另一種則是軟判決解碼法  (Soft 
Decision Decoding) ，原理是藉由解調所收到的資訊，計算每個位元或符號的可
靠度，並依其機率大小進行解碼。 
8=t
 
表一：各種通訊用糾錯編碼規格說明 
標準種類 編碼位元率 主要應用範圍 
CD-ROM (28,24, 2=t ), (32, 28, 2=t ) 聲音 
DVD (208, 192, 8=t ), (185, 175, 5=t ) MPEG-2 
DVB-T,  (204, 188, 8=t ) 高畫質電視(HDTV)
DVB-S (204, 188, 8=t ) 衛星通訊 
 
然而現行硬判決解碼的缺失就是無法利用通道上的資訊，所以目前搭配方
式主要是使用 RS碼與捲積碼[8]來提高可靠度，其中根據捲積碼編碼方式不為
區組碼 (Block Code) ，則容易造成一連串的錯誤因而使用內眺法才能解決這個
問題，然而使用內跳法會增加記憶體使用造成解碼時的負擔卻也是個不得不選
擇。相較之下，平方剩餘碼是區塊碼[9-15]，有著優良的糾錯能力和捲積碼的優
點卻無使用內跳法的缺點，因此平方剩餘碼取代捲積碼與 RS 碼之連結使用是
本計畫使用之一部份。本計畫將新提出 RS 碼之解碼方法與平方平方剩餘碼解
碼連結成一個高糾錯能力之解碼器，使連結碼能提昇高畫質的數位視訊信號訊
號傳送的可靠度。並將之結合目前已經具有影像處理技術[16-19]而成為一個新
的架構 (如圖二)，以達成即時解碼效果。 
 
 - 4 -
六、研究方法 
 
本計畫主要使用硬判決解碼法進行解碼，並使用WB algorithm、Gao 
algorithm 與 Euclidean algorithm 取出別演算法之優點修改之，可快速求取的
errata polynomial，進而得到message polynomial。由於這些演算法之前並沒有文
獻分析，那個演算法在使用軔體撰寫其執行的效能是最好的，所以本計劃主要
使用本小組最新的研究成果新的離散傅立葉轉換演算法加入其中演算法，並比
較這些演算法最適用於DSP實現的高速運算的RS碼解碼器，並減少DSP CUP 運
算所耗損時間。最後，再針對此演算法對於短的RS碼而言，比較分析找出一個
最快解RS 碼的方法。 
第一年的研究重點是加入快速傅立葉演算法併入 Euclidean 演算法與 Gao 
演算法的解碼優勢發展出新程序的 RS 解碼演算法，發展軟體程式配件及完成
解碼器模擬測試。第二年將 Welch 演算法使用概念修改其演算法與第一年完成
的演算法進行比較。最後得到一個最快速的演算法可用於 DSP 上之入新程序 
RS 解碼演算法，提升原解碼器之解碼速率，實現新程序的 RS 快速解碼演算
法。第三年為使用新的 RS 碼與平方剩餘碼之連結碼用於 DSP 單晶片實現，
同時搭配 CSI 及 MPEG-4 編碼器來測試其提升原視訊編碼器之網路傳送之穩
定度。 
本年度重點著重在製作RS 碼與平方剩餘碼設計模擬器程式  (Simulator 
Program) 包括GUI介面各運算單元，以及提供一個測試平台並驗證演算法之正
確性。首先透過第二年研究成果使用「軟硬體聯合設計 (Co-design) 方法」進行
軟體資料之測試和結果數據之比對，經由電腦輔助下進行冗長的大量資料和測
試工作，準確掌握正確性，主要人力可專心於程式建構及各模組設計連結縮短
研發的時間。在設計的過程式，使用電腦化之設計輔助工具，透過利用CCS工
具設計演算法發展平台，可以減少程式設計之週期，同時使用XDS560 JTAG 
PCI EMULATION KIT協助程式開發時能及時除錯，以減少設計開發的錯誤。 
本研究案採用德儀的DM642為測試平台，此發展平台的優點在於韌體發
展，模擬和測試全部由電腦整合，可加快DSP韌體發展並提供一個即時測試環
境，並可整合模擬器，軔體Emulator的整合的工作。運用此平台模組化重整演算
法，實現新 RS 碼的建構，以減少程式碼的執行量，提升運算速度。如此可以
 - 6 -
 
圖四：最佳化程式碼開發流程圖 
 
 
圖五：指令Pipeline處理方法 
 - 8 -
壓縮比也顯著提升9.1%。在增加I及P框數的情況下，表七中當量化值Quant等於
10時，影像品質只是略小0.18dB、壓縮時間只增加2.8%的情況下，壓縮比也顯
著提升6.4%。這些實驗結果顯示了 CSI 內嵌的架構的可行性。而將這訊源編碼
架構搭配新式里德所羅門 (RS) 解碼法與平方剩餘 (QR) 碼結合之通道編碼，
並實現在 DSP 上，可有效提升編碼系統的效率。 
 
 
 - 10 -
表三：使用CSI 內嵌的  MPEG-4 Codec 與標準彩色視訊檔  Foreman(352x288, 400 
frames)在I:P=1:9(I frame與P frame的比值)的條件下，測試在不同量化值下的壓縮品質
(含YUV)、壓縮率及壓縮時間。 
 
Quant PSNR_Y (CSI, I:P=1:9) 
PSNR_U 
(CSI, I:P=1:9) 
PSNR_V 
(CSI, I:P=1:9)
平均位元率 
(bits / frame) 
編碼時間
(ms) 
1 46.19 48.35 49.55 29034 3435 
2 41.44 45.37 47.02 14212 2750 
3 38.81 43.65 45.31 8850 2515 
4 37.17 42.53 44.09 6485 2576 
5 35.87 41.65 43.08 4890 2354 
6 34.90 41.01 42.32 3957 2343 
7 34.08 40.41 41.61 3310 2265 
8 33.49 40.03 41.17 2897 2202 
9 32.84 39.59 40.65 2483 2312 
10 32.36 39.24 40.28 2223 2252 
11 31.92 38.95 39.94 2000 2140 
12 31.54 38.68 39.61 1846 2048 
13 31.18 38.41 39.22 1698 2081 
14 30.88 38.21 38.97 1588 2124 
15 30.59 38.03 38.78 1497 2105 
16 30.35 37.85 38.57 1425 2171 
17 30.09 37.63 38.23 1347 2138 
18 29.87 37.45 38.01 1289 2123 
19 29.66 37.35 37.88 1250 2123 
20 29.48 37.21 37.70 1204 2048 
21 29.30 37.10 37.54 1166 2066 
22 29.14 36.97 37.46 1144 2106 
23 28.98 36.78 37.30 1126 1985 
24 28.85 36.69 37.18 1099 1920 
25 28.70 36.52 36.96 1076 2047 
26 28.57 36.47 36.85 1061 2032 
27 28.43 36.35 36.68 1062 2015 
28 28.32 36.25 36.53 1036 1968 
29 28.18 36.12 36.33 1046 2076 
30 28.06 36.02 36.27 1035 1972 
31 27.96 35.91 36.13 1016 2043 
 
 - 12 -
表五：使用 CSI 內嵌的 MPEG-4 Codec 與標準彩色視訊檔 Foreman(352x288, 400 
frames)在I:P=1:14(I frame與P frame的比值)的條件下，測試在不同量化值下的壓縮品質
(含YUV)、壓縮率及壓縮時間。 
 
Quant PSNR_Y (CSI, I:P=1:14) 
PSNR_U 
(CSI, I:P=1:14)
PSNR_V 
(CSI, I:P=1:14)
平均位元率 
(bits / frame) 
編碼時間
(ms) 
1 46.06 48.25 49.45 28825 3326 
2 41.32 45.29 46.94 13879 2702 
3 38.69 43.59 45.25 8508 2578 
4 37.08 42.48 44.04 6183 2439 
5 35.78 41.59 43.02 4622 2331 
6 34.82 40.95 42.28 3721 2295 
7 34.01 40.34 41.55 3081 2298 
8 33.43 39.97 41.12 2699 2172 
9 32.79 39.54 40.60 2300 2233 
10 32.31 39.17 40.23 2050 2155 
11 31.87 38.88 39.88 1842 2093 
12 31.51 38.60 39.56 1694 2077 
13 31.15 38.34 39.18 1562 2097 
14 30.85 38.16 38.93 1457 2030 
15 30.56 37.96 38.72 1370 2077 
16 30.34 37.78 38.51 1304 1951 
17 30.07 37.57 38.18 1231 2219 
18 29.86 37.40 37.97 1183 2155 
19 29.65 37.29 37.84 1146 1857 
20 29.48 37.13 37.66 1100 2027 
21 29.29 37.01 37.46 1069 2016 
22 29.14 36.91 37.40 1048 2111 
23 28.98 36.72 37.25 1033 2029 
24 28.86 36.62 37.14 1006 2014 
25 28.71 36.45 36.94 986 1906 
26 28.58 36.40 36.80 973 1997 
27 28.45 36.30 36.66 973 2015 
28 28.34 36.18 36.50 950 1969 
29 28.2 36.06 36.29 959 1926 
30 28.09 36.01 36.24 952 2063 
31 27.99 35.88 36.09 936 1954 
 
 - 14 -
表七：比較標準與 CSI 內嵌的 MPEG-4 Codec在I:P=1:14 的條件下，測試不同量化值
下的壓縮品質、壓縮率及壓縮時間。 
PSNR_Y 
(CSI, I:P=1:14) 
平均位元率 
(bits / frame) 
編碼時間 
(ms) Quant 
STD CSI 差 STD CSI 差(%) STD CSI 差(%)
1 45.87 46.06 0.19 30102 28825 -4.3 3172 3326 4.8
2 41.19 41.32 0.13 14571 13879 -4.8 2376 2702 13.7
3 38.63 38.69 0.06 8982 8508 -5.3 2482 2578 3.8
4 37.05 37.08 0.03 6523 6183 -5.3 2359 2439 3.3
5 35.80 35.78 -0.02 4895 4622 -5.6 2250 2331 3.6
6 34.87 34.82 -0.05 3946 3721 -5.8 2080 2295 10.3
7 34.10 34.01 -0.09 3275 3081 -6.0 1998 2298 15.0
8 33.53 33.43 -0.10 2862 2699 -5.7 2095 2172 3.6
9 32.95 32.79 -0.16 2449 2300 -6.1 1876 2233 19.0
10 32.49 32.31 -0.18 2188 2050 -6.4 2095 2155 2.8
11 32.09 31.87 -0.22 1965 1842 -6.3 1848 2093 13.2
12 31.74 31.51 -0.23 1805 1694 -6.2 1923 2077 8.0
13 31.42 31.15 -0.27 1668 1562 -6.4 1814 2097 15.6
14 31.13 30.85 -0.28 1561 1457 -6.7 1830 2030 10.9
15 30.88 30.56 -0.32 1463 1370 -6.4 1952 2077 6.4
16 30.64 30.34 -0.30 1385 1304 -5.9 1967 1951 -0.9
17 30.42 30.07 -0.35 1315 1231 -6.4 1844 2219 20.3
18 30.23 29.86 -0.37 1258 1183 -6.0 1967 2155 9.5
19 30.04 29.65 -0.39 1221 1146 -6.2 1875 1857 -1.0
20 29.87 29.48 -0.39 1169 1100 -6.0 1843 2027 9.9
21 29.71 29.29 -0.42 1134 1069 -5.8 1781 2016 13.1
22 29.57 29.14 -0.43 1112 1048 -5.8 1942 2111 8.7
23 29.41 28.98 -0.43 1091 1033 -5.4 1893 2029 7.1
24 29.28 28.86 -0.42 1066 1006 -5.7 1827 2014 10.2
25 29.16 28.71 -0.45 1036 986 -4.9 1889 1906 0.8
26 29.03 28.58 -0.45 1019 973 -4.6 1969 1997 1.4
27 28.89 28.45 -0.44 1020 973 -4.7 1779 2015 13.2
28 28.79 28.34 -0.45 994 950 -4.5 1891 1969 4.1
29 28.66 28.2 -0.46 1001 959 -4.2 1968 1926 -2.2
30 28.58 28.09 -0.49 988 952 -3.7 1875 2063 10.0
31 28.48 27.99 -0.49 973 936 -3.9 1831 1954 6.7
 
 - 16 -
[16] T.K. Truong, L.J. Wang, I.S. Reed, and W.S. Hsieh, “Image Data Compression Using 
Cubic Convolution Spline Interpolation,” IEEE Trans. Image Processing, vol. 9, no. 11, 
pp. 1988 – 1995, Nov. 2000. 
[17] L.J. Wang, W.S. Hsieh, T.K. Truong, I.S. Reed, and T.C. Cheng, “A fast efficient 
computation of cubic-spline interpolation in image codec,” IEEE Trans. Signal 
Processing, vol. 49, no. 6, pp. 1189-1197, Jun. 2001. 
[18] R.G. Keys, “Cubic Convolution Interpolation for Digital Image Processing,” IEEE 
Trans. Acoustic, Speech, Signal Processing, vol. ASSP-29, no.6, Dec. 1981. 
[19] H.S. Hou, and H.C. Andrews, “Cubic Splines for Image Interpolation and Digital 
Filtering,” IEEE Trans. Acoustic, Speech, Signal Processing, vol. ASSP-26, no.6, Dec. 
1978. 
[20] X. Ma and X.M. Wang, “On the Minimal Interpolation Problem and Decoding RS 
Codes,” IEEE Trans. Information Theory, vol. 46, no. 4, pp.1573-1580, Jul. 2000 
[21] T. K. Truong, P. D. Chen, L. J. Wang, I. S. Reed, and Y. Chang, “Fast, prime factor, 
discrete Fourier transform algorithms over  for )2( mGF ,108 ≤≤ m ” Information 
Sciences, vol. 176, no. Issue 1, pp. 1-26, Jan. 2006. 
[22] C.M. Rader, Discrete Fourier transform when the number of data samples is prime, 
Proc. IEEE, 56 (6) (1968) 1107-1108. 
[23] J. H. Jeng and T. K. Truong, “On decoding of both errors and erasures of a 
Reed-Solomon code using an inverse-free Berlekamp-Massey algorithm,” IEEE Trans. 
Communications, vol. 47, no. 10, pp. 1488-1494, Oct. 1999. 
 - 18 -
