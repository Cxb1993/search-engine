 中文摘要 
 
關鍵字: DNA晶片、雙聚類、高頻項目集探勘 
 
DNA 晶片的主要功能是讓生物科技人員能夠一次觀察大量基因在不同實驗環境下的表現行
為。由於 DNA 晶片具備快速、方便、經濟、省時等特性，因此目前世界各國莫不投入大量
的經費進行研發。DNA晶片的雙聚類(bicluster)基因表現分析問題是根據 DNA晶片的實驗結
果進行分析，以判斷是否有一些基因在一些相同的實驗環境下，表現出相類似的行為。DNA
晶片的雙聚類問題可以應用在病原體基因檢測、基因表現比較、基因序列分析及新藥開發等
領域。  
 
由於 DNA 晶片一次可以提供大量的基因表現資料，相對的 DNA 晶片的雙聚類(bicluster)基
因表現分析的演算法也要能夠快速處理大量的資料，然而目前相關的演算法多是以統計或是
搜尋為基礎，需要反覆的讀取基因表現資料，如果資料的量很大，這些演算法的效率將大受
影響。此外目前的演算法都是針對特定的應用，很難整合成一個統合的演算法來解決所有的
應用問題，本計劃的目的就在克服以上這些困難。 
 
在資料探勘領域中，高頻項目集探勘的目的是從大型資料庫中，探勘出多數交易的共同子集
合，高頻項目集探勘的最大優點是可以考量資料項目間複雜的關連性，也可以有效率的處理
大型資料庫，高頻項目集目前已經成功應用在零售業管理與電子商務等方面。目前市面上已
有許多便宜且成熟的高頻項目集探勘軟體可以使用，如微軟公司已經將高頻項目集探勘軟體
納入其資料庫軟體 SQL-Server中。 
 
近年來，在生物資訊領域，已有學者指出 DNA 晶片的若干雙聚類問題可以轉換為圖形理論
中雙全子集(biclique)問題，來進行求解。而在資料探勘領域，則有學者提出雙全子集問題可
以轉換為高頻項目集探勘問題，來進行求解。綜合以上所述，我們可以合理推論，透過適當
問題轉換，高頻項目集探勘技術可以用來解決 DNA晶片的雙聚類問題。 
 
在文獻中有學者將雙聚類問題分成四個類型，經過我們研究發現，此四個類型都可以透過上
述問題轉換方式，來利用高頻項目集探勘軟體加以解決。 
 
本計劃的主要目的是應用高頻項目集探勘技術來求解 DNA 晶片的雙聚類問題。我們的方法
是利用問題轉換技術，將 DNA 晶片的雙聚類問題轉換為高頻項目集探勘問題，以快速有效
的解決所有的 DNA 晶片的雙聚類問題，這樣的作法有系統製作成本較低、可以處理大量晶
片資料、較高系統整合性與可攜性等優點。我們將上述方法，應用在乳癌腫瘤資料與葡萄酒
資料的分析上，實驗結果顯示，我們的方法不但容易製作，所探勘出的雙聚類數目與判斷腫
瘤良性、葡萄酒資料的效能都比現有文獻上的方法優異。 
 
Abstract 
 
Keywords: DNA chip, biclustering, frequent itmeset mining 
 
DNA chips allow engineers to inspect the behavior of a large number of genes according to a large 
 納入其資料庫軟體 SQL-Server中。 
 
近年來，在生物資訊領域，已有學者指出 DNA 晶片的若干雙聚類問題可以轉換為圖形理論
中雙全子集(biclique)問題，來進行求解。而在資料探勘領域，則有學者提出雙全子集問題可
以轉換為高頻項目集探勘問題，來進行求解。綜合以上所述，我們可以合理推論，透過適當
問題轉換，高頻項目集探勘技術可以用來解決 DNA晶片的雙聚類問題。 
 
在文獻中有學者將雙聚類問題分成四個類型，經過我們研究發現，此四個類型都可以透過上
述問題轉換方式，來利用高頻項目集探勘軟體加以解決。 
 
二、研究目的 
 
本計劃的主要目的是應用高頻項目集探勘技術來求解 DNA 晶片的雙聚類問題。我們的方法
是利用問題轉換技術，將 DNA 晶片的雙聚類問題轉換為高頻項目集探勘問題，以快速有效
的解決所有的 DNA 晶片的雙聚類問題，這樣的作法有系統製作成本較低、可以處理大量晶
片資料、較高系統整合性與可攜性等優點。我們將上述方法，應用在乳癌腫瘤資料與葡萄酒
資料的分析上，實驗結果顯示，我們的方法不但容易製作，所探勘出的雙聚類數目與判斷腫
瘤良性、葡萄酒資料的效能都比現有文獻上的方法優異。 
 
三、文獻探討 
1. DNA晶片的雙聚類問題的介紹及國內外相關研究 
 
參考Madeira [2]的定義，我們通常將 DNA 晶片中的基因表現資料以資料矩陣的型態呈現，
同時以列代表基因類別，以行代表檢驗條件類別。如表 1所示，即為一 DNA晶片基因表現
資料的範例。 
表 1: 基因表現資料矩陣 A 
檢驗條件 1 檢驗條件 2 …. 檢驗條件 m 
基因 1 a11 a12 …. a1m 
基因 2 a21 a22 …. a2m 
…. …. …. ….  
基因 n an1 …. …. anm 
 
以下我們以 A 來表示一個基因表現資料矩陣，假設 A 是一個 n×m的矩陣，我們定義每個
矩陣元素為 aij，aij代表基因 i在實驗條件 j的一個表現數值。 
 
我們以 (X, Y) 來表示一個雙聚類，其中 X 是列的子集合(亦即是基因的集合) ，Y 是行的子
集合(亦即是實驗條件的集合) ， 
 
所謂的雙聚類問題是給定一個基因表現資料矩陣 A，我們嘗試找出 A中滿足特定條件的一個
雙聚類，至於是滿足怎樣的條件，則視實際 DNA 晶片的應用而定。 
 
Madeira [2]整理文獻中所有可能雙聚類型態，並依照其所限制的滿足條件加以區分，將雙聚
 目前文獻中有的解決上述雙聚類的方法多是以統計或是搜尋為基礎，這些方法需要反覆的讀
取基因表現資料，由於 DNA晶片一次可以提供大量的基因表現資料，資料的量很大將使得
這些演算法的效率將大受影響。 
 
舉例而言，Hartigan[3]、Tibshirani et al. [4]均提出以變異數為基礎的演算法來解決第一類的共
同值的雙聚類問題，他們定義一個子矩陣的變異數，然後使用不同的演算法讓子矩陣的變異
數變小，這些方法有個缺點就是每一次要計算子矩陣的變異數就需要讀取基因資料一次，當
基因資料量很大時。 
 
同時，Segal et al. [5]以貝式定理為基礎來解決第二類的共同行值或共同列值的雙聚類問題，
Sheng et al. [6]以機率模型為基礎來解決第三類的同連貫值的雙聚類問題，Park et. al [7] 以圖
形搜尋結合機率模型的方式來解決第四類的共同發展趨勢的雙聚類問題。 
 
此外目前的演算法都是針對特定的應用，很難整合成一個統合的演算法來解決所有的應用問
題，本計劃的目的就在克服以上這些困難。 
 
2. 高頻項目集探勘技術介紹及國內外相關研究 
 
高頻項目集探勘問題是最早是由 Agrawal [8]首先提出的，其目的是從大型資料庫中，探勘出
多數交易的共同子集合，高頻項目集探勘的優點在於它可以顯示多個項目之間的關聯性，並
且可以處理大型的資料庫，高頻項目集並已經成功應用在零售業管理、醫藥應用與電子商務
等方面。舉例來說，在零售業的領域中，高頻項目集顯示出顧客經常一起購買的產品，藉由
對高頻項目產品的鼓勵銷售，或是將高頻項目產品置放在鄰近的位置，我們將能夠提高銷售
的績效。 
 
根據 Agrawal [8] 所提出的高頻項目集定義，我們假設 I = {項目 1,項目 2, …, 項目 m} 為一
資料項目所成的集合。假設 X 為 I 的一個子集合，則我們稱 X 是一個項目集。我們定義每
一筆交易都是 I 的一個子集合，我們定義一個交易資料庫是一些交易所成的集合。 
 
以下表 2是一個交易資料庫的範例。在這個範例中，I = {項目 1,項目 2,項目 3,項目 4}，這個
資料庫包含有 4筆交易，分別是交易 1、交易 2、交易 3與交易 4。在這個範例中，交易 1包
含有項目 1、項目 2與項目 3等 3個資料項目。 
 
表 2: 交易資料庫的範例 
 交易內容 
交易 1 {項目 1, 項目 2, 項目 3} 
交易 2 {項目 1, 項目 2, 項目 3, 項目 4}
交易 3 {項目 1, 項目 2, 項目 3} 
交易 4 {項目 1} 
 
 
如果一筆交易包含一個項目集 X，則我們說此筆交易支持 X。我們定義 X 的支持度為交易資
 表 4: 交易資料庫的二維矩陣表示範例 
 項目 1 項目 2 項目 3 項目 4 
交易 1 1 1 1 0 
交易 2 1 1 1 1 
交易 3 1 1 1 0 
交易 4 1 0 0 0 
 
由以上的表 3與表 4可以看出，若把表 3中的基因取代為交易、把檢驗條件取代為項目，則
表 3與表 4完全相同。同時，我們可以看出下列定理的正確性。 
 
定理一: 假設 X 為基因的子集合、Y為檢驗條件的子集合，我們將基因表現資料矩陣的基因
用交易取代、檢驗條件用項目取代，則完成取代後，Y 成為一個項目集，X成為一些交易的
集合，同時，(X, Y) 在原先基因表現資料矩陣是一個共同值的雙聚類若且唯若在轉換後的二
維矩陣中 X中集合的交易均支持 Y。 
 
本計劃將對定理一提供嚴格的證明，在此為了說明定理一的正確性，我們以上述的表 3與表
4為例，假設在表 1 中 X = {基因 1, 基因 2, 基因 3}且 Y={檢驗條件 1, 檢驗條件 2, 檢驗條
件 3}，我們可以看出(X, Y) 在表 1 中是一個共同值的雙聚類，在轉換後的二維矩陣中(亦即
是表 2)，X = {交易 1, 交易 2, 交易 3}且 Y={項目 1, 項目 2, 項目 3}，我們可以看出 X中集
合的交易均支持 Y。 
 
根據定理一，我們可以推導出下列的方法架構來解決共同值的雙聚類問題。 
Step 1. 將基因表現資料矩陣的基因用交易取代、檢驗條件用項目取代，以產生一個交易資料
庫。  
Step 2. 使用高頻項目集探勘軟體探勘交易資料庫，以取得所有的高頻項目集。 
Step 3. 對每一個探勘出的項目集(假設為 Y)，掃描資料庫以取得所有支持 Y 的交易集，假設 
X 中的交易均支持 Y，則輸出(X,Y)是一個共同值的雙聚類。 
 
2. 共同行值或列值的雙聚類問題的轉換方法: 
 
對於共同行值或列值的雙聚類問題而言，我們目前的作法是將此類問題先轉換為共同值的雙
聚類問題，再用前述 1.的方法解決。 
 
以下我們以一個範例說明我們的轉換方法。假設我們給定一個以下的基因表現資料矩陣，如
表 3所示，而且我們要尋找共同行值的雙聚類，則我們把表 5轉換成如表 6的基因表現資料
矩陣。 
表 5: 基因表現資料矩陣範例 
 檢驗條件 1 檢驗條件 2 檢驗條件 3 
基因 1 1 1 2 
基因 2 2 2 1 
基因 3 1 2 1 
 
  
表 8:  新的基因表現資料矩陣(等差共同連續值雙聚類) 
 檢驗 1-2 檢驗 1-3 檢驗 1-4 檢驗 2-3 檢驗 2-4 檢驗 3-4 
基因 1 -1 -3 -4 -2 -3 -1 
基因 2 -1 0 -4 1 -3 -4 
基因 3 2 2 1 0 -1 -1 
基因 4 -1 1 -4 2 -3 -5 
 
我們可以看出在表 7中({基因 1, 基因 2, 基因 4}, {檢驗條件 1, 檢驗條件 2, 檢驗條件 4})
是一個共同連續值的雙聚類，而在表 8中，({基因 1, 基因 2, 基因 4}, {檢驗 1-2, 檢驗 1-4, 檢
驗 2-4})是一個共同列值的雙聚類(篩選後如表 9所示)；。 
 
表 9:  等差共同連續值雙聚類 
 檢驗條件 1 檢驗條件 2 檢驗條件 4 
基因 1 1 2 5 
基因 2 2 3 6 
基因 4 4 5 8 
 
因此，我們可以推導出下列方法的步驟來解決共同連續值的雙聚類問題，轉換步驟如下
所示。 
Step 1. 將檢驗條件兩兩相減，創造新的基因資料表。 
Step 2. 找出新的基因資料表中，共同列值的雙聚類，則其為共同連續值雙聚類。 
 
4. 共同發展趨勢值的雙聚類問題的轉換方法 
共同發展趨勢值的雙聚類乃是在找矩陣中，具有相同的發展趨勢值的雙聚類，這類問題
的矩陣元素並不侷限於數值，因此亦有可能會有符號的元素出現。在下面，我們透過一個基
因表現資料矩陣，如表 10所示，我們要由表 10尋找共同發展趨勢值的雙聚類問題，在此仍
然要透過轉換的方式來求解。 
 
表 10:  基因表現資料矩陣-符號(共同發展趨勢值雙聚類) 
 檢驗條件 1 檢驗條件 2 檢驗條件 3 檢驗條件 4 
基因 1 ↑ ↑ ↓ ↓ 
基因 2 ↑ ↑ ↓ ↑ 
基因 3 ↓ ↓ ↑ ↓ 
基因 4 ↑ ↑ ↑ ↑ 
 
轉換的方法乃是將原始資料矩陣(表 10)中的元素先轉換成數字型式，若將表 10中的符號
  
以下我們將分別說明我們的乳癌樣本資料庫與我們的研究成果。 
 
 在真實的實際資料上，本研究將比對過去的文獻，與過去文獻作比較，在相同的資料庫
下，使用我們的方法以及過去文獻的方法作個比較。 
 
1  酒精樣本資料 
我們使用的資料庫是由 Forina, M. 所收集提供的資料(http://archive.ics.uci.edu/ml/)，這
個資料庫的實驗乃是義大利三個不同品種的葡萄酒，其在同一區域的化學反應數據結果。主
要是分析在相同地點所生產葡萄酒資料，分析其十三個成份。這個資料庫有 178筆實驗數據
(第一類葡萄酒含 59筆，第二類葡萄酒含 71筆，第三類葡萄酒含 48筆)，每筆實驗有 13個
檢驗成份，這 13個成份包括 
(1) 酒精 (Alcohol) 
(2) 蘋果酸 (Malic acid) 
(3) 粉煤灰 (Ash) 
(4) Alcalinity灰 (Alcalinity of ash) 
(5) 鎂 (Magnesium) 
(6) 總酚 (Total phenols) 
(7) 黃酮 (Flavanoids) 
(8) Nonflavanold酚類 (Nonflavanoid phenols) 
(9) Proanthocyanins 
(10) 顏色強度 (Color intensity) 
(11) 色澤 (Hue) 
(12) OD280/ OD315攤薄葡萄酒 (OD280/ OD315 of diluted wines) 
(13) 脯氨酸 (Proline) 
 
以下是葡萄酒樣本資料庫： 
 
圖 5:  葡萄酒樣本資料庫 
 
 取得串者乳部腫瘤細胞的特性。此資料庫總共包含有 699 筆資料(即 699 個乳癌腫瘤樣本)，
良性腫瘤有 457筆，惡性腫瘤含 241筆。但因為其中有 16筆資料資訊不充足，因此本研究將
此 16筆資料去除，進行剩下的 683筆資料研究，在篩選後，良性腫瘤含有 443筆，惡性腫瘤
有 240筆。 
 每一個乳癌樣本都包含有九個檢驗條件，這九個檢驗條件包括 
(1) 腫瘤厚度 (Clump Thickness) 
(2) 細胞大小一致性 (Uniformity of Cell Size) 
(3) 細胞形狀一致性 (Uniformity of Cell Shape) 
(4) 邊緣黏滯性 (Marginal Adhesion) 
(5) 單一上皮細胞大小 (Single Epithelial Cell Size) 
(6) 原子核裸露程度 (Bare Nuclei) 
(7) 染色體溫和程度 (Bland Chromatin) 
(8) 細胞核正常程度 (Normal Nucleoli) 
(9) 細胞核的有絲分裂程度 (Mitose) 
 
每一個檢驗條件都有一個 1到 10的檢驗數值，其中 1表示正常，而 10表示不正常。每
一個乳癌腫瘤樣本並經由醫師以切片手術(biopsy)檢定或經由長期觀察來判定此乳癌腫瘤樣
本為良性或惡性。 
 
以下是乳癌樣本資料庫(圖 7)： 
 
圖 7:  乳癌樣本資料庫 
在乳癌的樣本資料庫裡(圖 7)，第一行是受試者編號，第二到第十行是九個檢驗條件表現
值，第十行則是判定良性或惡性腫瘤(2表示良性，4表示惡性)。 
 
 參考文獻 
1. “生物晶片是台灣生物科技的明星產業” , http://www.ncku.edu.tw/~cbst/biochip.htm. 
2. Madeira, S. C., Oliveira, A. L. (2004). Biclustering algorithms for biological data analysis: a 
survey, IEEE/ACM Transactions on Computational Biology and Bioinformatics;1(1);24 - 45. 
3. Hartigan, J.A. (1972) Direct Clustering of a Data Matrix. J. Am. Statistical Assoc. 
(JASA);67(337), 123-129.  
4. Tibshirani, R., Hastie, T., Eisen, M., Ross, D. Botstein, D., Brown, P. (1999). Clustering 
Methods for the Analysis of DNA Microarray Data. technical report, Dept. of Health 
Research and Policy, Dept. of Genetics, and Dept. of Biochemestry, Stanford Univ.. 
5. Segal, E., Taskar, B., Gasch, A., Friedman, N., Koller, D. (2001). Rich Probabilistic Models 
for Gene Expression. Bioinformatics;17;243-S252. 
6. Sheng, Q., Moreau, Y. De Moor, B. (2003). Biclustering Microarray Data by Gibbs Sampling. 
Bioinformatics;19;196-205. 
7. Park, G., Szpankowski. (2005). Analysis of Biclusters with Applications to gene Expression 
Data. Proceedings of Conference on Analysis of Algorithms, 267-274. 
8. Agrawal, R., Srikant, R. (1994). Fast algorithms for mining association rules. In: Proceedings 
of the 20th International Conference on Very Large Data Bases, Santiago, Chile. p. 487-499. 
9. Park, J.S., Chen, M.S., Yu, P.S. (1997). Using a hash-based method with transaction trimming 
for mining association rules. IEEE Transactions on Knowledge and Data 
Engineering;9(5):813-825. 
10. Savasere, A., Omiecinski, E., Navathe, S. (1995). An efficient algorithm for mining 
association rules in large databases. In: Proceedings of the 21st International Conference on 
Very Large Data Bases, Zurich, Switzerland. p. 432-443. 
11. Burdick, D., Calimlim, M., Gehrke, J. (2001). MAFIA: a maximal frequent itemset 
algorithm for transactional databases. In: Proceedings of the 17th International Conference 
on Data Engineering, Heidelberg, Germany. p. 443-452. 
12. Agarwal, R.C., Aggarwal, C.C., Parsad, V.V.V. (2001). A tree projection algorithm for 
generation of frequent itemsets. Journal of Parallel and Distributed Computing;61(3):350-71. 
13. Gouda, K., Zaki, M.J. (2000). Efficiently mining maximal frequent itemsets. In: 
Proceedings of IEEE International Conference on Data Mining, San Jose, USA. p. 163-70. 
14. Zou, Q., Chu, W.W., Lu, B. (2002). SmartMiner: a depth first algorithm guided by tail 
information for mining maximal frequent itemsets. In: Proceedings of IEEE International 
Conference on Data Mining, Maebashi City, Japan. p. 570-77. 
15. Software for Associations Discovery Home Page. 
http://www.kdnuggets.com/software/associations.html. 
16. Rice, M. D., Siff, M. (2003). Clusters, Concepts, and Pseudometrics. Electronic Notes 
in Theoretical Computer Science;40;1-4. 
17. Abdullah, A., and Hussain, A. (2006), A new biclustering technique based on crossing 
minimization, Neurocomputing, Volume 69, Issues 16-18, pp. 1882-1896.  
18. Lonardi, S. Szpankowski, W. and Yang, Q. (2006). Finding biclusters by random 
projections, Theoretical Computer Science, Volume 368, Issue 3, pp. 217-230. 
 可供推廣之研發成果資料表 
■ 可申請專利  □ 可技術移轉                                      日期：98年 7 月 31 日 
國科會補助計畫 
計畫名稱：應用高頻項目集探勘技術在 DNA晶片基因表現分析之
研究(II) 
計畫主持人： 吳建文        
計畫編號：NSC 97-2221-E-027-070  學門領域：工業工程與管理
技術/創作名稱 應用高頻項目集探勘技術在 DNA晶片基因表現分析之研究 
發明人/創作人 吳建文 
中文： 
本計劃的主要目的是應用高頻項目集探勘技術來求解 DNA晶片的
雙聚類問題。我們的方法是利用問題轉換技術，將 DNA晶片的雙
聚類問題轉換為高頻項目集探勘問題，以快速有效的解決所有的
DNA 晶片的雙聚類問題，這樣的作法有系統製作成本較低、可以
處理大量晶片資料、較高系統整合性與可攜性等優點。我們將上述
方法，應用在乳癌腫瘤資料與葡萄酒資料的分析上，實驗結果顯
示，我們的方法不但容易製作，所探勘出的雙聚類數目與判斷腫瘤
良性、葡萄酒資料的效能都比現有文獻上的方法優異。 技術說明 
英文： 
In this project, we present the use of frequent itemset mining 
techniques to solve the biclustering problems. We introduce problem 
transformation techniques to apply existing frequent itemset mining 
software to solve the biclustering problems. Experiments on a real 
breast cancer database and a wine database have been performed. The 
results show that our approach offers better performance than any 
current research works. 
可利用之產業 
及 
可開發之產品 
1. 生物科技產業 
2. 資訊管理相關產業 
技術特點 
1. 高頻項目集探勘的實務應用 
2. 生物 DNA 晶片資料分析的工具，本研究作法有系統製作成本
較低、可以處理大量晶片資料、較高系統整合性與可攜性等優
點。 
附件二 
 A STUDY ON BICLUSTERING FOR GENE EXPRESSION 
ANALYSIS 
 
Chienwen Wu and Shuyi Li 
 
Graduate Institute of Information and Logistics Management 
National Taipei University of Technology 
E-mail: xcwwu@ntut.edu.tw  
 
(Appear in 2009 International Conference on Knowledge-Based Economy and Global 
Management, Tainan, TAIWAN, 22-23 October , 2009) 
 
Abstract. In this paper, we consider the problem of discovering the biclusters with constant rows or columns. Given a 
data matrix, a bicluster is a subset of rows that exhibit similar behavior across a subset of columns, and vice versa. In 
the literature, a large number of clustering approaches have been proposed for biclustering problems. In this paper, we 
present an approach that discovers the biclusters by frequent itemset mining using Microsoft SQL Server. The results 
show that our technique demonstrates very good performance. 
 
Keywords: Biclustering, Frequent itemset mining, bioinformatics. 
 
1 INTRODUCTION 
DNA chips are important tools for inspecting the behavior of a large number of genes at the same time. Recently, 
DNA chips have received much attention[1]. More than 500 million DNA chips have been produced and used in the 
market every year. DNA chips allow engineers to analyze the behavior of genes in no time. This leads to great 
achievements in understanding and studying the behaviors of genes. 
A critical problem for gene expression analysis for DNA chips is the biclustering problem[2]. The biclustering 
problem focuses on the selection of a subset of genes and a subset of experiments such that the selected genes show 
similar behavior in the selected experiments. Biclusters from DNA data set are useful in many bioinformatics and 
biomedical applications. 
A distinguished feature of DNA chips is that it can provide large amount of gene expression data for analysis. 
Thus, solution algorithms for the biclustering problems should be able to handle large amount of data. Current 
algorithms for biclustering were originated from either statistics or search techniques. These algorithms need to 
frequently scan the gene expression data. The algorithms suffer in poor efficiency when the gene expression data is 
huge. Moreover, current algorithms were designed for specific applications of the gene expression data. It is impossible 
to generalize these algorithms in order for solving other gene expression data analysis problems. This research is 
proposed mainly to tackle these problems. 
Frequent itemset mining is an important research field in the area of data mining. Frequent itemset mining is 
aimed to discover common subsets of items from a huge database. The advantages of frequent itemset mining include 
that it can discover complicated associations among items and it can efficiently handle a large database. In the market, a 
lot of fine frequent itemset mining software has been proposed and well tested. As an example, recently, Microsoft 
incorporation has incorporated frequent itesmet mining software in its Microsoft SQL Server. 
Park et al.[3] have shown that some biclustering problem in DNA data analysis can be transformed into the biclique 
problem. Jermain[4] discovered that some biclique problem can be transformed into the frequent itemset mining 
  
1.0 2.0 3.0 4.0
1.0 2.0 3.0 4.0
1.0 2.0 3.0 4.0
1.0 2.0 3.0 4.0
(B) 
Figure 1:  (A) biclusters with constant values on rows (B) biclusters with constant values on columns 
 
We represent each instance of the biclustering problem as < G, C, A>. 
Current algorithms for biclustering were originated from either statistics or search techniques. These algorithms 
need to frequently scan the gene expression data. The algorithms suffer in poor efficiency when the gene expression 
data is huge. Moreover, current algorithms were designed for specific applications of the gene expression data. It is 
impossible to generalize these algorithms in order for solving other gene expression data analysis problems. This 
research is proposed mainly to tackle these problems. 
 
3 THE FREQUENT ITEMSET MINING PROBLEM 
Frequent itemset mining is the process of discovering subsets of items that frequently appear together in a 
transaction database. It was initially proposed by Agrawal[5]. Frequent itemset mining has the advantage of considering 
associations among items and being able to handle large databases. Frequent itemset mining has been successfully 
applied in retailing management, medical industry and electronic commerce. 
Based on Agrawal[5], a formal formulation of frequent itemset mining is described as follows. We let I = {i1, i2, …, 
im} be a set of items. If X is a subset of I, we say that X is an itemset. A transaction is a subset of I. A transaction 
database is a set of transactions. 
Table 2 gives an example of a database. In this example, I = {i1, i2, i3} and the database has six transactions, 
namely t1, t2, t3, t4, t5, and t6. The transaction t1 contains two items i1 and i2. 
Table 2: The transaction database 
transaction Itemset 
t1     {i1, i2} 
t2     {i3} 
t3     {i3} 
t4     {i1, i2} 
t5     {i1} 
t6     {i2, i3} 
We say that this transaction supports X if a transaction contains an itemset X. The support of X is defined as the 
number of transactions that support X.  
In Table 2, assume that X = {i1, i2}. We can see that the transactions t1 and t4 both support X. Thus the support of X 
is 2.  
Assume that min_sup is the minimum support set by the data mining user. The goal of frequent itemset mining is 
to discover all the itemsets whose support is at least min_sup. Such itemsets are called frequent itemsets. In Table 2, 
assuming that min_sup = 2, we can see that {i1, i2} is a frequent itemset.  
 Table 5: The transaction database representation 
 i1  i2  i3  
t1 1 1 0 
t2 0 0 1 
t3  0 0 1 
t4  1 1 0 
t5  1 0 0 
t6 0 1 1 
 
We can see from Table 3 that ({gene 1, gene 2}, {condition 1, condition 2}) is a bicluster with constant rows. In 
Table 5, {condition 1, condition 2} is a frequent itemset supported by transactions  {(gene 1, 1)} and {(gene 2, 2)}. 
 
Based on the above discussions, our approach is formally described as follows. Suppose that we are given a 
biclustering problem instance <G, C, A>.  
 
Step 4. Construct a new biclustering problem instance <G×V, C, B>, where, for all g ∈ G, v ∈ V, and c ∈ C, B((g, v), 
c) = 1 if A(g, v) = c and B((g, v), c) = 0 otherwise.  
Step 5. Construct a transaction database by replacing (g, v) in (G×V) by transactions and c in C by items in the given 
gene expression data matrix.  
Step 6. Apply frequent itemset mining on the transaction database to obtain all the frequent itemsets. 
Step 7. For every discovered itemset Y, scan the transaction database to find its supporting transactions, denoted by X. 
Output (X, Y) as a bicluster with constant rows or columns. 
5 EXPERIMENTAL RESULTS 
In this section, we compare the performance of our approach with existing approach. We used the wine database 
provided by Forina, M. et al. (http://archive.ics.uci.edu/ml/) for performance comparison. The database 
contains results about a chemical analysis of wines grown in the same region in Italy but derived from three different 
cultivars. The analysis determined the quantities of 13 constituents found in each of the three types of wines. The wine 
database contains 13 attributes and 178 expressional data. The 13 attributes are listed as follows. 
(1) Alcohol 
(2) Malic acid 
(3) Ash 
(4) Alcalinity of ash 
(5) Magnesium 
(6) Total phenols 
(7) Flavanoids 
(8) Nonflavanoid phenols 
(9) Proanthocyanins 
(10) Color intensity 
(11) Hue 
(12) OD280/ OD315 of diluted wines 
 Table 6: Performance comparison 
 Our approach 
(Frequent 
itemset mining)
Abdullah et al.’s 
approach[7] 
(Cross 
minimization) 
The size of the 
discovered 
maximum bicluster 
260 240 
The number of 
columns in the 
discovered 
maximum bicluster 
52 24 
The number of rows 
in the discovered 
maximum bicluster 
5 10 
From the results, in comparison with Abdullah et al.’s approach, we see that our approach is able to discover 
biclusters of larger size. 
 
6 CONCLUSIONS 
In this paper we have introduced an approach based on frequent itemsets mining to discover the biclusters with 
constant rows or columns. The results show that our appraoch demonstrates very good performance. 
 
REFERENCES 
[1] Microarray:  Microarray techniques Home Page. http://www.hc.mmh.org.tw/div_int/path/path0502.html. 
[2] Madeira, S. C. and Oliveira, A. L., 2004. Biclustering algorithms for biological data analysis: a survey, IEEE/ACM 
Transactions on Computational Biology and Bioinformatics;1(1);24 - 45. 
[3] Park, G., Szpankowski, 2005. Analysis of Biclusters with Applications to gene Expression Data. Proceedings of 
Conference on Analysis of Algorithms, 267-274. 
[4] Jermaine, C., 2005. Finding the Most Interesting Correlations in a Database: How Hard Can it Be?. INFORM. 
SYST. 30 (2005): 21-46. 
[5] Agrawal, R. and Srikant, R., 1994. Fast algorithms for mining association rules. In: Proceedings of the 20th 
International Conference on Very Large Data Bases, Santiago, Chile. p. 487-499. 
[6] SAD: Software for Associations Discovery Home Page. 
http://www.kdnuggets.com/software/associations.html. 
[7] Abdullah, A. and Hussain, A., 2007. “Using biclustering for automatic attribute selection to enhance global 
visualization,” Springer Verlag Lecture Notes in Computer Science, 4370, pp. 35-47. 
[8] Forina, M. et al., http://archive.ics.uci.edu/ml/. 
 
 specific applications of the gene expression data. It is difficult to integrate these algorithms in order 
for solving all the problems in gene expression data analysis. The focus of this research is to 
overcome these problems. 
In the data mining field, frequent itemset mining is aimed to discover common subsets of items 
from a huge database. The advantages of frequent itemset mining lie in that it can discover 
complicated associations among items and it can efficiently handle a large database. Many 
sophisticated software for frequent itemset mining are ready in the market. For example, recently, 
Microsoft incorporation has included frequent itesmet mining software in its Microsoft SQL Server. 
In the bioinformatics field, Park et al. (2005) pointed out that some biclustering problem in 
DNA gene expression data analysis can be transformed into the biclique problem. In the data 
mining field, Jermain (2005) found that some biclique problem can be transformed into the frequent 
itemset mining problem. Therefore, with proper problem transformation, we can convert the some 
biclustering problem into the frequent itemset mining problem. 
In the literature, Madeira (2004) classifies the biclustering problems into four different types. 
We found that the first type, which is to discover biclusters with constant values, can be solved by 
using the problem transformation technique mentioned above. 
In this paper, we propose employing the problem transformation techniques to covert the 
constant biclusters problem into the frequent itemset mining problem, which can then be solved by 
existing frequent itemset mining software. The proposed approach has the advantages of low 
implementation cost, high integration flexibility, and is capable of handling large amount of DNA 
data. 
 
 
2. THE CONSTANT BICLUSTER PROBLEM 
 
The gene expression data are usually represented as a matrix, as shown in Table 1. Here, each row 
corresponds to a gene and each column an experiment condition. 
 
 
Table 1: gene expression data matrix A 
 condition 1 condition 2 …. condition m 
gene 1 a11 a12 …. a1m 
gene 2 a21 a22 …. a2m 
…. …. …. ….  
gene n an1 …. …. anm 
 
 
We use A to represent a gene expression data matrix. Assume that A is an n×m matrix. Each 
element of A is represented by aij, which is the expression value of gene i under the experiment 
 four transactions, namely t1, t2, t3, and t4. The transaction t1 contains three items, i1, i2, and i3. 
 
 
Table 2: The transaction database 
 transaction Itemset 
t1           {i1, i2, i3} 
t2           {i1, i2, i3, i4} 
t3           {i1, i2, i3} 
t4           {i1} 
 
 
If a transaction contains an itemset X, we say that this transaction supports X. We define the 
support of X as the number of transactions that support X.  
In Table 2, assume that X = {i1, i2, i3}. We can see that the transactions t1, t2, and t3 all support 
X. Thus the support of X is 3.  
Assume that min_sup is the minimum support set by the data mining user. The goal of 
frequent itemset mining is to discover all the itemsets whose support is at least min_sup. Such 
itemsets are called frequent itemsets. In Table 2, assuming that min_sup = 3, we can see that {i1, i2, 
i3} is a frequent itemset.  
In the literature, many efficient frequent itemset mining algorithms have been proposed. 
Among these algorithm, the Apriori algorithm (Agrawal, 1994) used a breadth first search approach 
to search all possible itemsets and used Apriori principle to prune the search space. The Apriori 
principle states that if an itemset is not frequent, then all its supersets will not be frequent. The 
Apriori algorithm (Agrawal, 1994) has been reported to be effective in search space pruning for 
frequent itemset mining.  
In the market, many successful software for frequent itemset mining are ready to use. 
Interested readers may refer to (SAD) for a list of the software. 
 
 
3. THE APPROACH 
 
In this section, we introduce how to use problem transformation technique to convert the constant 
bicluster problem into the frequent itemset mining problem.  
Consider the gene expression data matrix in Table 3. 
 
 
 
 
 
 
 Microarray:  Microarray techniques Home Page. 
http://www.hc.mmh.org.tw/div_int/path/path0502.html. 
Agrawal, R., Srikant, R. (1994). Fast algorithms for mining association rules. In: Proceedings of the 
20th International Conference on Very Large Data Bases, Santiago, Chile. p. 487-499. 
Jermaine, C.: Finding the Most Interesting Correlations in a Database: How Hard Can it Be?. 
INFORM. SYST. 30 (2005): 21-46. 
Madeira, S. C., Oliveira, A. L. (2004). Biclustering algorithms for biological data analysis: a survey, 
IEEE/ACM Transactions on Computational Biology and Bioinformatics;1(1);24 - 45. 
Park, G., Szpankowski. (2005). Analysis of Biclusters with Applications to gene Expression Data. 
Proceedings of Conference on Analysis of Algorithms, 267-274. 
SAD: Software for Associations Discovery Home Page. 
http://www.kdnuggets.com/software/associations.html. 
 
 USING DATA MINING TECHNIQUES TO DISCOVER CONSTANT 
BICLUSTERS  
 
Chienwen Wu 
 
Department of Industrial Engineering and Management 
National Taipei University of Technology 
No. 1, Sec. 3, Chung-Shiao E. Rd.  
Taipei, Taiwan 10643 R.O.C. 
xcwwu@ntut.edu.tw 
 
Abstract: The focus of this study is to apply frequent itemset mining techniques to solve the the problem of discovering 
constant biclusters. We propose employing the problem transformation techniques to covert the constant bicluster problem 
into the frequent itemset mining problem, which can then be solved by existing frequent itemset mining software. The 
proposed approach has the advantages of low implementation cost, high integration flexibility, and is capable of handling 
large amount of DNA data. 
 
 
1. INTRODUCTION 
 
DNA chips (Microarray) have been considered the most important products in bioindustry in recent years. Every year, more 
than 500 million DNA chips have been produced and used in the market. Therefore, related research for DNA chips has 
received very high recognition.  
DNA chips allow engineers to inspect the behavior of a large number of genes at the same time. By using DNA chips, 
we can obtain the behavioral expression data of large number of genes on a large number of different experiments. Such 
behavioral expression data, when properly analyzed, can help us understand and study the behaviors of genes. 
One of the important research problems for DNA chips gene expression analysis is the biclustering problem (Madeira, 
2004). The biclustering problem in DNA chips considers the selection of a subset of genes and a subset of experiments such 
that the selected genes show similar behavior in the selected experiments. Discovering biclusters from DNA data set is 
extremely important in many bioinformatics and biomedical applications. 
Because DNA chips can provide large amount of gene expression data, solution algorithms for the biclustering problems 
should be capable of handling large amount of data. However, most algorithms for biclustering were based on statistics or 
search techniques, which need to repeatedly access the gene expression data. If the amount of the gene expression data is huge, 
the performance of these algorithms will be seriously degraded. In addition, existing algorithms were based on specific 
applications of the gene expression data. It is difficult to integrate these algorithms in order for solving all the problems in 
gene expression data analysis. The focus of this research is to overcome these problems. 
In the data mining field, frequent itemset mining is aimed to discover common subsets of items from a huge database. 
The advantages of frequent itemset mining lie in that it can discover complicated associations among items and it can 
efficiently handle a large database. Many sophisticated software for frequent itemset mining are ready in the market. For 
example, recently, Microsoft incorporation has included frequent itesmet mining software in its Microsoft SQL Server. 
In the bioinformatics field, Park et al. (2005) pointed out that some biclustering problem in DNA gene expression data 
analysis can be transformed into the biclique problem. In the data mining field, Jermain (2005) found that some biclique 
problem can be transformed into the frequent itemset mining problem. Therefore, with proper problem transformation, we 
can convert the some biclustering problem into the frequent itemset mining problem. 
In the literature, Madeira (2004) classifies the biclustering problems into four different types. We found that the first 
type, which is to discover biclusters with constant values, can be solved by using the problem transformation technique 
mentioned above. 
In this paper, we propose employing the problem transformation techniques to covert the constant biclusters problem 
into the frequent itemset mining problem, which can then be solved by existing frequent itemset mining software. The 
proposed approach has the advantages of low implementation cost, high integration flexibility, and is capable of handling 
large amount of DNA data. 
 
 
2. THE CONSTANT BICLUSTER PROBLEM 
 Table 2: The transaction database 
 transaction Itemset 
t1           {i1, i2, i3} 
t2           {i1, i2, i3, i4} 
t3           {i1, i2, i3} 
t4           {i1} 
 
 
If a transaction contains an itemset X, we say that this transaction supports X. We define the support of X as the number 
of transactions that support X.  
In Table 2, assume that X = {i1, i2, i3}. We can see that the transactions t1, t2, and t3 all support X. Thus the support of X 
is 3.  
Assume that min_sup is the minimum support set by the data mining user. The goal of frequent itemset mining is to 
discover all the itemsets whose support is at least min_sup. Such itemsets are called frequent itemsets. In Table 2, assuming 
that min_sup = 3, we can see that {i1, i2, i3} is a frequent itemset.  
In the literature, many efficient frequent itemset mining algorithms have been proposed. Among these algorithm, the 
Apriori algorithm (Agrawal, 1994) used a breadth first search approach to search all possible itemsets and used Apriori 
principle to prune the search space. The Apriori principle states that if an itemset is not frequent, then all its supersets will not 
be frequent. The Apriori algorithm (Agrawal, 1994) has been reported to be effective in search space pruning for frequent 
itemset mining.  
In the market, many successful software for frequent itemset mining are ready to use. Interested readers may refer to 
(SAD) for a list of the software. 
 
 
3. THE APPROACH 
 
In this section, we introduce how to use problem transformation technique to convert the constant bicluster problem into the 
frequent itemset mining problem.  
Consider the gene expression data matrix in Table 3. 
 
 
Table 3: gene expression data matrix  
 condition 1 condition 2 condition 3 condition 4 
gene 1 1 1 1 0 
gene 2 1 1 1 1 
gene 3 1 1 1 0 
gene 4 1 0 0 0 
 
 
We represent the transaction database in Table 2 by a binary matrix, as shown in Table 4. 
 
 
Table 4: The binary matrix representation of the database in Table 2 
 i1 i2 i3 i4 
t1 1 1 1 0 
t2 1 1 1 1 
t3 1 1 1 0 
t4 1 0 0 0 
 
 
We can see that, by replacing gene by transactions and conditions by items, Table 3 and Table 4 are the same.   
Consider the following useful theorem. 
 
