1 
摘要 
由於視訊監視系統的普及，分析監視內容的應用也越來越普遍。本計劃主
要目的在針對固定式監視系統開發一套以動作歷史資訊 (MHI)技術為基礎且不
受動作速度影響的人類行為識別系統，本系統主要內容包括：行為特徵資料庫
設計以及與不受動作速度影響之人類行為識別方法開發等部份。計劃執行完畢
已完成一基本人類行為特徵資料庫的開發工作以及一與動作速度無關之人類
行為識別方法。  
 
關鍵字：監視器 ,  行為識別 ,  動作歷史資訊  
 
Abstract 
Due to the popularity of the surveillance systems, the requirement of analyzing video 
streams obtained from surveillance systems becomes more and more popular. The major 
purpose of this project is to develop a motion-history-information (MHI) based and motion 
speed independent human behaviors identification system for fixed surveillance systems. The 
major task of this project is to design the database for storing behavior features and to develop 
an effective method for recognizing human behaviors without influenced by motion speed. In 
the end of this project, we have completed the development of the database for storing behavior 
features and a motion speed independent human behaviors identification method. 
 
Keywords: surveillance systems, behavior identification, motion history information 
3 
4.研究方法 
圖一所示為一個動作歷史影像的例子，一個動作歷史影像是一張灰階影像，內含物件
在一段時間內的行為歷程。影像中最上層的部份是最近取得的物件遮罩，往下則依序為離
目前時間點較遠的物件遮罩。其中，最上層的物件遮罩以白色表示，離目前時間點愈遠的
物件遮罩以愈暗的顏色表示。 
 
圖一：一個動作歷史影像的例子 
動作歷史影像內只會保留最近一段時間範圍內的物件遮罩。假設目前時間點為 tc，時
間點 ti所取得的物件遮罩為 Mti。若一動作歷史影像內保留之物件遮罩的數目為 d，則該動
作歷史影像內將包含 Mtc-d+1, Mtc-d+2, ..., Mtc等 d 個物件遮罩。其中，Ｍtc位於最上層，物件
遮罩 Mtc-d+1位於最下層。物件遮罩 Mti在動作歷史影像內的顏色值 Cti如下： 
)1(
255)( +×+−= ddttC citi  (1) 
4.1 人類基本行為特徵選取 
一個動作歷史影像內含一個行為由開始到結束之間所有物件遮罩的集合，因此動作歷
史影像可供作為行為的樣版(template)識別行為的種類。使用動作歷史影像進行行為識別，
可事先取得所要識別之行為的動作歷史影像，然後由動作歷史影像中取出可用的行為特
徵，再使用這些特徵作為行為識別的依據。 
要判斷視訊中是否出現所要識別的行為，可產生目前畫面中物件的動作歷史影像，取
出其特徵，再使用該特徵進行行為識別。常用的動作歷史影像行為特徵有以下幾種： 
1.直接使用動作歷史影像作為特徵。 
2.使用動作歷史影像中像素的坡度角度直方圖作為特徵。 
3.使用整張影像的坡度角度作為特徵。 
4.將影像分成多個區域，並使用各區域的坡度角度作為特徵。 
以上幾種方法中，第一種方法易受物件運動速度與物件形狀影響，第二種方法內含太
多無用特徵，且需要較多計算量。基於行為識別準確度與運算速度考量，本計劃採用 9 個
區域坡度角度作為行為特徵。圖二所示為將動作歷史影像切割成 9 個區域的分割方式。 
1 2 3 
4 5 6 
7 8 9 
圖二：動作歷史影像區域分割方式 
5 
有效設定 THdiff的值。為此，本計劃僅設定一個較小的 THdiff值(1%)，用以去除差異性小的
畫面，目的在確保物件確實有動作。由於以上作法無法有效解決運動速度的影響，因此針
對一未知行為的物件，除了使用以上方法去除差異小的畫面外，我們也產生多個內含不同
物件遮罩張數的動作歷史影像。如此，不管動作速度為何，皆可找到一組合適的動作歷史
影像來描述目前的動作。為避免部份行為因前面動作雷同而產生誤判動作，行為識別順序
應由內含較多張物件遮罩的動作歷史影像開始識別。 
4.3 人類基本行為特徵資料庫 
人類基本行為特徵資料庫用來儲存基本行為的行為特徵，由於人員或拍攝角度的不同
進行相同的行為會產生不同的行為特徵，因此，針對每種基本行為，我們在資料庫中儲存
多組行為特徵。為了加快行為特徵的比對速度以及取出多組相同行為的代表特徵，針對每
種行為的多個行為特徵，我們使用分群方法[22-25]，將距離相近之相同行為的行為特徵當
成同一個群組，然後再為每個群組產生一個代表特徵及群組半徑並儲存在資料庫中。 
一個群組的代表特徵為該群組內所有行為特徵的平均值，群組半徑則為該群組內所有
行為特徵中距離代表特徵最遠的距離。此處所使用的距離是 Euclidean 距離，令 B1= 
[ 11θ , 12θ , 13θ , 14θ , 15θ , 16θ , 17θ , 19θ ]與 B2=[ 21θ , 22θ , 23θ , 24θ , 25θ , 26θ , 27θ , 29θ ]分別是兩個行為特徵，則行
為特徵 B1 與 B2 的距離計算公式如下： 
( ) ∑
=
−=
9
1
221
21 )(,
i
iiBBD θθ  (7) 
同一種行為的所有行為特徵一開始會被放在同一個群組中，群組半徑若超過一給定的
臨界值 THdist（該臨界值同時也被使用在下一節的行為識別方法中）則該群組會被拆成兩
半，本計劃的作法是使用 Direct Search Binary Splitting (DSBS)[26]方法，將群組分成兩半，
如果分群後的群組半徑仍然大於給定的臨界值 THdist，則重覆分群直到群組半徑小於臨界值
為止。此外，不同行為的群組範圍不能重疊，下圖所示即為兩個群組範圍重疊的例子。如
果有發生群組範圍重疊的情況，必須將較大的群組分群，直到所有不同行為的群組都沒有
發生重疊的情況為止。 
Group 1
Behavior k
Group 2
Behavior l
代表特徵1 代表特徵2
半徑1 半徑2
 
圖三：群組範圍重疊示意圖 
4.4 人類基本行為識別方法 
要判斷視訊中是否出現資料庫中定義的人類行為，首先必須產生視訊物件的動作歷史
影像。為了減輕動作速度的影響，我們除了去除差異小的畫面外，也產生Ｍ份內含不同物
件遮罩張數的動作歷史影像，令可用的物件遮罩張數集合為｛ 1δ , 2δ ,..., Mδ ｝，其中
1δ > 2δ >...> Mδ 。假設Δ為輸入視訊中可用的畫面張數，其初始值為 0，若Δ≥ iδ ，表示內含 iδ
張物件遮罩的動作歷史影像內容搜集完成，可拿來跟資料庫中的行為代表特徵進行比對工
作。行為特徵比對方式為計算行為特徵之間的距離（相異程度），距離計算公式如公式(7)
所示。當距離小於臨界值 THdist時，則認為視訊中出現該行為。由於我們使用多個δ，因此，
7 
本實驗設定 THdist=30，使用所拍攝的畫面產生 11 組代表特徵，所產生之基本行為的行
為種類以及其代表特徵詳列如下： 
表一：資料庫中的 11 組代表特徵 
行為 區域 0 區域 1 區域 2 區域 3 區域 4 區域 5 區域 6 區域 7 區域 8
起立 157 150 56 44 120 138 133 68 75 
起立 250 197 60 119 140 89 102 142 126 
起立 201 158 47 108 101 155 70 72 144 
起立 230 149 43 113 165 114 81 101 173 
起立 223 167 44 106 62 48 171 107 117 
坐下 231 117 27 198 84 62 77 104 193 
坐下 292 167 35 191 102 105 58 109 149 
坐下 229 152 48 142 132 81 86 169 174 
跌倒 221 132 26 149 81 27 79 137 85 
跌倒 206 78 23 165 76 44 145 158 117 
跌倒 212 82 38 156 52 41 133 80 141 
為了測試行為辨識效果以及動作速度對行為識別的影響，我們拍攝一段內含多種行為
以及不同動作速度的測試視訊，畫面尺寸為 704×480，測試視訊內含 150 張畫面。本實驗
使用的物件遮罩張數集合為｛ 1δ =40, 2δ =36, 3δ =32, 4δ =28, 5δ =24, 6δ =20, 7δ =16, 
8δ =12｝。 
實驗結果顯示，測試影片中的動作都可以被有效的識別出來，下表列出所識別出來之
行為的發生時間點(以畫面張數表示)、行為種類、以及識別出行為時所使用之動作歷史影像
的 δ(物件遮罩張數)。 
表二：行為識別結果 
畫面編號 識別到的行為 識別出行為時所使用的 δ 
16 坐下 16 
31 起立 16 
43 坐下 20 
54 起立 16 
72 跌倒 20 
101 起立 40 
112 跌倒 24 
132 起立 20 
如表二所示，我們可以看到有些行為使用較大的 δ 即可成功識別，有些行為則需使用
較小的 δ，且由於識別方式是由較大的 δ 先比對，若是動作速度不適合較大的 δ，則表示動
作速度大於所使用的 δ，如此動作歷史影像會包含過多動作，而無法有效識別視訊中的動
作，圖六所示為第 54 張畫面時，使用 δ=40 時所產生的動作歷史影像，由圖六可見，內含
太多動作時，無法有效識別出動作。 
9 
參考文獻 
[1] 廖怡欽、陳易顯、黃崇仁、與賴榮滄, “針對視訊串流之多層式背景估測方法,” The Second 
conference on Digital Content Management and Applications, Tainan, Taiwan, June 2007.  
[2] Yi-Ching Liaw, Bo-Shuan Chiu, Jim Z. C. Lai, and Patrick Huang, “A fast approach of 
object segmentation for video sequence,” The Ninth IASTED International Conference on 
Signal and Image Processing, Honolulu, USA, August 2007. (EI) 
[3] 黃崇仁, 李政旻, 廖怡欽, 與賴榮滄, “視訊物件分割方法,” 中華民國專利, 2006/12 申
請. 
[4] Yi-Ching Liaw, "Improvement of the Fast Exact Pairwise-Nearest-Neighbor Algorithm," 
Pattern Recognition, Vol. 42, No. 5, May 2009, pp.867-870. (SCI; EI)  
[5] Jim Z.C. Lai, Yi-Ching Liaw*, and Julie Liu, "Improvement of the k-means clustering 
filtering algorithm," Pattern Recognition, Vol. 41, No. 12, December 2008, pp. 3677-3681. 
(SCI; EI) (2007 Impact Factor:2.015, Ranking 23/210) 
[6] Weiming Hu, Tieniu Tan, Liang Wang, and Steve Maybank, "A survey on visual surveillance 
of object motion and behaviors," IEEE Transactions on Systems, Man, and Cybernetics – 
Part C, Vol. 34, No. 3, pp. 334-352, August 2004. 
[7] A. F. Bobick and A. D. Wilson, "A state-based technique for the summarization and 
recognition of gesture," International Conference on Computer Vision, Cambridge, 
pp.382-388, June 1995. 
[8] Ashok Veeraraghavan, Amit K. Roy-Chowdhury, and Rama Chellappa, "Matching Shape 
Sequences in Video with Applications in Human Movement Analysis," IEEE Transactions 
on Pattern Analysis and Machine Intelligence, Vol. 27, No. 12, pp. 1896-1909, December 
2005. 
[9] 林金泉, 人類跌倒之行為分析與偵測, 國立中央大學碩士論文, 2004. 
[10] K. Rohr, "Towards model-based recognition of human movements in image sequences," 
CVGIP: Image Understanding, Vol. 59 No.1, pp.94-115, 1994. 
[11] Shanon X. Ju, Michael J. Black, and Yaser Yacoob, "Cardboard people: a parameterized 
model of articulated image motion," IEEE International Conference on Automatic Face and 
Gesture Recognition, Vermont, USA, pp. 38-44, October 1996. 
[12] Y. Guo, G. Xu, and S. Tsuji, "Understanding human motion patterns," International 
Conference on Pattern Recognition, Jerusalem, Israel, pp.325-329, October 1994.  
[13] A. F. Bobick and J. W. Davis, "The recognition of human movement using temporal 
templates," IEEE Transactions on Pattern Analysis and Machine Intelligence, Vol. 23, No. 3, 
pp.257-267, March 2001. 
[14] G. R. Bradski and J. Davis, "Motion segmentation and pose recognition with motion history 
gradients," Machine Vision and Applications, Vol. 13, No. 3, pp 174-184, July 2002. 
[15] 陳福泰, 以移動歷史影像為基礎之人類行為辨識, 中華大學碩士論文, 2005. 
[16] R. Rosales and S. Sclaroff, "3D trajectory recovery for tracking multiple objects and 
trajectoryguided recognition of actions," IEEE Conference on Computer Vision and Pattern 
Recognition, Colorado, USA, June 1999, pp.117-123. 
[17] J. W. Davis, "Hierarchical motion history images for recognizing human motion," IEEE 
Workshop on Detection and Recognition of Events in Video, BC, Canada, pp.39-46, 2001. 
11 
計畫成果自評 
 原計畫相符程度與達成預期目標情況 
本計劃本年度預計完成工作項目如下： 
1.人類基本行為特徵選取方法； 
2.動作歷史影像組成畫面自動調整方法設計與實作； 
3.人類基本行為特徵資料庫建構方法開發； 
4.人類基本行為識別方法開發。 
計劃執行完畢，已完成以上項目。 
 研究成果之學術或應用價值 
學術價值：本計劃已開發完成一些快速行為特徵分群方法，成果已發表於國際期刊[1,2]
及國際學術研討會[3]；另外，我們也開發完成一與動作速度無關的人類基
本行為識別方法，研究成果正準備投稿國際期刊或國際學術研討會。 
應用價值：本計劃所開發出來的快速行為特徵分群方法與人類基本行為識別方法，可
應用到監視器監控應用相關產業，分析影像內容，研究成果也可供申請專
利，用以保護國內相關產業，迴避相關專利。 
 影像處理人才培育 
本計劃執行人員，主要包括四位碩士班學生以及多位大學部學生，碩士班學生主要
負責實作本計劃所需的方法設計、程式撰寫、以及進行實驗，對其實作能力的提昇與實
驗方法的熟悉有很大的幫助。大學部學生則幫忙拍攝影片，分割物件，以及協助撰寫程
式等，參與人員對計劃與實驗的進行方式有更深入的了解，對程式實作能力也都能有效
提昇。 
 參考資料 
[1] Jim Z. C. Lai, Tsung-Jen Huang, and Yi-Ching Liaw, "A fast k-means clustering 
algorithm using cluster center displacement," Pattern Recognition, Vol. 42, No. 11, 
November 2009, pp.2551-2556. (SCI, EI) 
[2] Jim Z. C. Lai and Yi-Ching Liaw*, "A Novel encoding algorithm for vector quantization 
using transformed codebook," Pattern Recognition, Vol. 42, No. 11, November 2009, 
pp.3065-3070. (SCI, EI)  
[3] Yi-Ching Liaw*, Jun-Feng Lin, Shen-Chuan Tai, and Jim Z. C. Lai, "Fast exact 
pairwise-nearest-neighbor algorithm using groups and clusters rejection criteria," The 
Eleventh IASTED International Conference on Signal and Image Processing, Honolulu, 
USA, August 17-19, 2009. 
 
 出席國際學術會議心得報告 
                                                             
計畫編號 NSC 97-2221-E-343-006 
計畫名稱 適用於監視系統之人類行為識別方法開發 
出國人員姓名 
服務機關及職稱 
廖怡欽 
南華大學副教授 
會議時間地點 民國 98 年 8 月 17 日至民國 98 年 8 月 19 日 
會議名稱 第 11 屆 IASTED 訊號與影像處理會議(Signal and Image Processing 2009) 
發表論文題目 Fast Exact Pairwise-Nearest-Neighbor Algorithm Using Groups and Clusters Rejection Criteria 
 
一、參加會議經過 
此次出國主要目的是到美國檀香山參加 Signal and Image Processing 2009 會議
(http://www.actapress.com)發表論文(附件一)，本人報告時間為民國 98 年 8 月 18 日
下午 1:30。此會議由國際科學與科技開發協會(IASTED)舉辦，會議文章接受率大約 4成，
會議文章也經常被 EI 收錄，是一個很好的會議；會議地點在檀香山喜來登威基基飯店，
開會地點氣候風景皆宜人，可有效調節開會氣氛及舒緩報告人的緊張心情。 
會議 8 月 17 日(一)開始，本人搭乘華航班機 8/16（日）早上大約 6 點半到，對開
會地點週遭環境及會議室的分佈先做個了解，第二次參加這個會議，開會地點週遭環境
跟兩年前差不多，這兩年台灣夏天溫度提高不少，夏威宜的氣候則變化不大，均溫仍維
持在 25 度左右。 
會議第一天(8 月 17 日)早上 8:20 報到，人明顯較上次少，可能是受到經濟不景氣
的影響，今年投稿期限延了很多次，由 3 月底延到 5 月，論文數仍明顯減少，較兩年前
參加該會議時，論文數量減少了差不多一倍，不過論文接受率則維持差不多大約 4 成，
顯示舉辦單位並沒有因為投稿論文數下降而降低篩選標準。，報到完成，拿到一個背包，
內含一份會議議程及論文光碟，報到完成後，進 Niihou 廳聽大會主席介紹會議發展現況
與未來展望，隨後聽取 Fuzzy 大師 Prof. Lotfi A. Zadeh 介紹他們最近所提出來的一個
叫做 FLu 的理論，有別於傳統只接受精準輸入資料的 Fuzzy 理論，FLu 理論是一種建構
在可接受非精準輸入資料的 Fuzzy 系統。 
會議第二天(8 月 18 日)，我的論文安排在下午 1:30 報告，早上時間準備下午的報
告，1:10 到達會場，原會場應有 8人報告，實際上場報告的則只有我、會議主席、與兩
個來自德國的報告者。由於報告人數減少，每個人可以有更多的時間可以跟與會人員討
論，所以整場會議結束時間並沒有提前結束，報告過程順利，報告完成，獲得了一張證
書，證明我確實有出席會議及上台報告。會議主席很年輕是新加坡的華人，目前在馬來
西亞任教，會後交換彼此資料，希望後續能有跨國合作的機會。 
 
 
FAST EXACT PAIRWISE-NEAREST-NEIGHBOR ALGORITHM USING 
GROUPS AND CLUSTERS REJECTION CRITERIA 
 
Yi-Ching Liaw1, Jun-Feng Lin2, Shen-Chuan Tai2, Jim Z. C. Lai3 
 
1Nanhua University, Chiayi, Taiwan 622, R. O. C. 
2National Cheng-Kung University, Tainan , 701, R. O. C. 
3National Taiwan Ocean University, Keelung, Taiwan 202, R. O. C. 
 
ycliaw@mail.nhu.edu.tw, jflin@mail.nhu.edu.tw, sctai@mail.ncku.edu.tw, zclai@mail.ntou.edu.tw 
 
 
ABSTRACT 
Pairwise-nearest-neighbor (PNN) is an effective method 
of data clustering, which can usually generate good 
clustering results, but with high computational complexity. 
In this paper, a new method is presented to reduce the 
computational complexity of the PNN algorithm through 
dividing clusters into groups of clusters and using 
projections of clusters on differential vectors of group 
pairs to reject impossible groups and clusters in the 
nearest neighbor finding process of a cluster. 
Experimental results show that the proposed algorithm 
can effectively reduce the computing time and number of 
distance calculations of the PNN algorithm for data sets 
from real images. It is noted that the proposed method 
generates the same clustering results as those produced 
using the PNN algorithm. 
 
KEY WORDS 
Pairwise-Nearest-Neighbor, Clustering, Fast algorithm, 
and Projection. 
 
1.  Introduction 
 
Data clustering is a technique to classify data points into 
several clusters. To classify data points into clusters is not 
an easy task and usually requires a large amount of 
computations. There are many heuristic methods [1-3] 
available to categorize data points into clusters. Among 
these available approaches, the pairwise-nearest-neighbor 
(PNN) algorithm [3] can usually generate better clustering 
results [4] than other methods. For a data set of N data 
points, the computational complexity of the PNN 
algorithm is O(N3). It is impractical for a large data set.  
 
To reduce the complexity of the PNN algorithm, Fränti et 
al. [5] presented a fast exact PNN algorithm (referred to 
as FPNN). The FPNN algorithm has a computational 
complexity of O(τN2), where τ is about 5 to 12 [5] for 
most cases. Comparing to the PNN method, FPNN can 
effectively reduce the computational complexity of PNN 
and generate the same results as those generated using  
the PNN algorithm. 
 
However, the computational complexity of FPNN is still 
too high and can be further reduced. In our observation, 
we found that the FPNN algorithm spends much 
computing time on finding nearest neighbors for clusters. 
In this paper, we will present a new method to speed up 
the nearest neighbor finding process of FPNN.  
 
This paper is organized as follows. Section II reviews the 
PNN and the FPNN algorithms. Section III introduces the 
algorithm developed in this paper. Experimental results 
are given in Section IV and concluding remarks are 
presented in Section V. 
 
2. Background 
 
2.1. PNN algorithm 
 
Given a set of N data points, the pairwise nearest neighbor 
(PNN) algorithm [3] is used to cluster data points into M 
clusters through a series of merging processes. In the 
beginning, the number of clusters is set to N and each 
cluster contains only one data point. The merging process 
of PNN includes two steps: finding the nearest pair of 
clusters from all clusters and merging this nearest pair 
into a new cluster. After a merging process, the number of 
clusters will be decreased by one. The merging process is 
repeated until the number of clusters is equal to M. 
 
To find the nearest pair of clusters, the distances for all 
pairs of clusters should be calculated. Let Ra and Rb be 
two clusters, Ca be the center of Ra, and Cb be the center 
of Rb. Let na and nb be the numbers of data points in Ra 
and Rb, respectively. The distance between clusters Ra and 
Rb is defined as follows. 
 
( )ba
ba
ba
ba CCdnn
nnD ,, +=
 (1) 
 
where d(Ca,Cb) is the squared Euclidean distance between 
Ca and Cb. Let X=[x1, x2, ..., xd]t and Y=[y1, y2, ..., yd]t. The 
squared Euclidean distance d(X, Y) is defined as  
 
cluster. From the observation on 32 real images, the 
average probability for the local nearest neighbor of a 
cluster is also the global nearest neighbor of the cluster is 
about 68%. Once the local nearest neighbor Rl of cluster 
Rq is found, the distance between clusters Rl and Rq is 
used in the successive global nearest neighbor finding 
phase to reject impossible groups and clusters. 
 
In the global nearest neighbor finding phase, each cluster 
in groups other than the group contains the query cluster 
Rq should be checked to see if it is the nearest neighbor of 
cluster Rq. The global nearest neighbor Rg of cluster Rq is 
determined by 
 ( ){ }LiSGRGRDg Gilissqs ≠∈∪∈=  and , ,:minarg ,  (9) 
 
The global nearest neighbor finding phase is very time 
consuming. To speed up this phase, differential vectors 
between group pairs and projections of every cluster on 
differential vectors of group pairs are pre-calculated and 
stored. Let vi,j be the differential vector between groups Gi 
and Gj. The differential vector vi,j is defined as follows. 
 ( )
ji
ji
GG
GG
ji
CC
CC
v −
−=,  (10) 
 
where 
iG
C and 
jG
C are the centroids of groups Gi and Gj, 
respectively. The projection of a cluster Rs on vector vi,j 
can be calculated using the following equation. 
 
jis
s
ji vCp ,, ⋅= . (11) 
 
Let dmin be the distance between the query cluster Rq and 
its candidate nearest neighbor. In the beginning of the 
global nearest neighbor finding phase, dmin is set to the 
distance between cluster Rq and its local nearest neighbor 
Rl. Once dmin is given, every group Gi ∈SG other than 
group GL could be checked using the following inequality. 
 
( ) min2,, 1, dnnpp q qI Liq iL Li >+×+  (12) 
 { }issLisLi GRpI ∈= :minarg ,,  (13) 
 
Where Ii,L is the index of the cluster with minimum 
projection on vector vi,L in group Gi and LiI Lip ,,  is the 
minimum projection of clusters in group Gi on vector vi,L. 
Let Pi,L= LiI Lip ,,  for a group Gi ∈SG and Gi ≠ GL. Where Pi,L 
and Ii,L should also be pre-calculated and stored.  
In the case that inequality (12) is satisfied, we know that 
every cluster in group Gi is impossible to be the nearest 
neighbor of cluster Rq and group Gi can be rejected. That 
is the distance calculations between cluster Rq and clusters 
in group Gi can be saved. If a group Gi cannot be rejected 
by inequality (12), clusters in group Gi can be further 
rejected using inequality (14). 
 
( ) min2,, dnn nnpp sq sqs Liq iL >+
××+  (14) 
 
where sLip ,  is the projection of a cluster Rs∈Gi on vector 
vi,L.  
 
Once a cluster Rs cannot be rejected through using 
inequalities (12) and (14), the distance between cluster Rs 
and cluster Rq must be computed using equation (1) and 
dmin should be updated using the distance between cluster 
Rq and its updated nearest neighbor. 
 
During the finding process of nearest neighbors for all 
clusters, the nearest pair of clusters Ra and Rb can also be 
determined. In the merging process, clusters Ra and Rb are 
merged into cluster Rab and the cluster Rb should be 
deleted.  
 
The merging process may cause that the nearest group of 
cluster Rab differs from that of cluster Ra. Therefore, after 
a merging process of the nearest pair of clusters, cluster 
Rab must be relocated. That is, we must find a nearest 
group for cluster Rab and then move cluster Rab to its 
nearest group. Moreover, the deletion of cluster Rb and 
the migration of cluster Rab may induce the change of 
group centroids. To avoid relocating all clusters into 
groups, we do not update the centroids of groups after a 
merging process. However, after a merging process, the 
projections of cluster Rab on differential vectors between 
the group containing the cluster Rab and other groups must 
be calculated and the minimum projections for the groups 
of cluster Ra, Rb, and Rab should also be updated. To speed 
up the updating process of the minimum projections, in 
the case of IL,i is not equal to the index of Ra or Rb and 
cluster Rab still stay in group GL, the updating process of 
the minimum projection for clusters in group GL on vector 
vL,i for each group Gi∈SG and Gi≠GL could be simplified 
by computing only the projection of cluster Rab on vector 
vL,i. If the projection of cluster Rab on vector vL,i is less 
than the value of PL,i, set PL,i equal to the projection of 
cluster Rab on vL,i and set IL,i equal to the index of cluster 
Rab. 
 
The above proposed algorithm is applied on FPNN 
algorithm [5] to speed up the nearest neighbor finding 
process for a cluster whose items in tables NN and ND are 
going to be updated. Beside the above inequalities, one 
additional inequality can also be used to help eliminate 
impossible clusters in the updating process of NN and ND. 
Since ND[s] is the nearest distance between cluster Rs to 
its nearest neighbor, if ND[s] ≥ dmin, cluster Rs is 
impossible to be the nearest neighbor of cluster Rq and the 
cluster Rs can be rejected. This inequality comes from that 
the distance between a cluster and its nearest neighbor 
