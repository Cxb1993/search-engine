 1
行政院國家科學委員會專題研究計畫成果報告 
間接式驗證秘密通訊協定之研究 
The Study of Indirect-authentication Secret Communication Protocols 
計畫編號：NSC － 95 － 2218 － E － 025 － 001 
執行期限：95 年 9 月 1 日至 96 年 10 月 31 日 
主持人：張雅芬  (國立台中技術學院資工系) 
計畫參與人員：蔡濠全，黎冠銘，張凱傑 
 
Abstract 
So for, many 3PEKE protocols have been 
proposed to improve computation and round 
efficiencies. However, these protocols cannot 
provide both efficiencies at the same time, and 
some violate the original concept of key 
exchange. In 2006, Lu and Cao proposed an 
improvement (LC-3PEKE) and claimed that 
LC-3PEKE could meet all requirements. 
Unfortunately, LC-3PEKE suffers from 
undetectable on-line password guessing attacks. 
This paper will show the security flaw of 
LC-3PEKE and propose a secure 3PEKE 
protocol meeting all requirements of key 
exchange and 3PEKE protocols with only five 
rounds. 
Keywords: password, key exchange, 3PEKE, 
password guessing attack 
中文摘要 
在本研究中，我們分析了目前較具代表性的
「間接式驗證秘密通訊協定」之安全性，我們
歸納出此類協定需擁有下列的特性:(1)傳遞驗
證訊息回合數少，(2)計算量小，(3)使用者與系
統間只需共享易於記憶的通行碼及(4)僅有通
訊雙方知道回合金鑰。接著，我們利用三成員
金鑰交換協定來提出改良的「間接式驗證秘密
通訊協定」，來整理出最有效率的驗證訊息傳
遞順序，藉此提出符合上述需求的協定。此改
良的協定將可提供一個最佳的間接式驗證秘
密通訊協定 
 
關鍵字：通行碼, 金鑰交換, 3 成員金鑰交換, 通行
碼猜測攻擊 
 
1. Introduction 
To make the communication content secure, a 
shared secret key is needed for fast encryption 
and decryption. In1992, Bellovin and Merritt 
proposed an encrypted key exchange (EKE) 
family of key exchange protocols [1]. In these 
protocols, a user is allowed to use an 
easy-to-remember password without being 
threatened by dictionary attacks [9]. For example, 
a secret password is previously shared by two 
parties A and B who want to communicate with 
each other. When A and B obtain a common 
session key, authentication is achieved. 
In 1995, Steiner et al. proposed a 3PEKE 
protocol (STW-3PEKE) based on EKE protocols 
[11]. In STW-3PEKE, each user shares an 
easy-to-remember password with the trusted 
server S. S acts as a coordinator between two 
communication parties to complete mutual 
authentication. Ding and Horster divided 
password guessing attacks into three classes: (1) 
detectable on-line password guessing attacks, (2) 
undetectable on-line password guessing attacks, 
and (3) off-line password guessing attacks [4]. 
Ding and Horster also demonstrated that 
STW-3PEKE suffers from undetectable on-line 
password guessing attacks [4]. Among the three 
classes, off-line password guessing attacks are 
the most critical ones. 
Later, Lin et al. showed that STW-3PEKE is 
vulnerable to undetectable on-line password 
guessing attacks and off-line password guessing 
attacks and proposed a 3PEKE protocol 
(LSH-3PEKE) [6]. In LSH-3PEKE, the trusted 
server holds a permanent and publicly-known 
server’s public key to resist both the password 
guessing attacks which STW-3PEKE suffers 
from. Unfortunately, applying the server’s public 
key places a burden on users because they have 
to verify the server’s public key in advance, and 
the certificate infrastructure is needed. As a result, 
Lin et al. proposed a new 3PEKE protocol 
(LSSH-3PEKE) [7]. LSSH-3PEKE can withstand 
both of the attacks without using the server’s 
public key. Lin et al. mentioned that 
LSSH-3PEKE overcomes the deficiencies of 
traditional three-party key distribution services, 
such as Kerberos [10] and KryptoKnight [8], 
which suffer from dictionary attacks with weak 
passwords and do not provide forward security. 
 3
2SN )) to A. 
Step 4: Upon getting the message, A first 
decrypts )N(3E
1A SP  with PA to get 
1SN  and computes KAS 
= pmodgpmodN A1SA
1
RRR
S =  and 
KAB = pmodN ARB  = 
pmodg BARR . First of all, A uses KAS 
to compute ,ID(f AKAS )N,ID AB  
and checks if the computation result is 
equal to the received one. If it does not 
hold, A regards S illegal and terminates 
the protocol; otherwise, A regards S 
legal. Second, A uses KAB to compute 
)N,ID,ID(f ABAKAB  and checks 
whether the computation result is equal 
to the received one or not. If it does not 
hold, A regards B illegal and terminates 
the protocol; otherwise, A regards B 
legal. After authenticating S and B, A 
sends (IDA, IDB, NB, 
)N,ID,ID(f
1AS SBAK , 
,ID,ID(f BAKBS )N 2S , 
)N,ID,ID(f BBAKAB ) to S. 
Step 5: Upon getting A’s reply, S computes KBS 
= pmodN 2SRB  = pmodg
B2S RR . 
First of all, S uses KAS to compute 
)N,ID,ID(f
1AS SBAK  and checks if 
the computation result is equal to the 
received one. If it does not hold, S 
regards A illegal and terminates the 
protocol; otherwise, S regards A legal. 
Second, S uses KBS to compute  
,ID,ID(f BAKBS )N 2S  and checks 
whether the computation result is equal 
to the received one or not. If it does not 
hold, S regards B illegal and terminates 
the protocol; otherwise, S regards B 
legal. After authenticating A and B, S 
sends (IDA, )N,ID,ID(f BBAKAB , 
(f
BSK ,ID,ID BA NB)) to B. After 
getting the reply form S, B uses KBS to 
compute )N,ID,ID(f BBAKBS  and 
checks if the computation result is equal 
to the received one. If it does not hold, B 
determines that S is not legal and 
terminates the protocol; otherwise, B 
determines that S is legal. Second, S 
uses KAB to compute 
,ID,ID(f BAKAB )NB  and checks 
whether the computation result is equal 
to the received one or not. If it does not 
hold, B determines that A is illegal and 
terminates the protocol; otherwise, B 
determines that A is legal. Note that if 
S/B cannot get the authentication 
messages from A/S for several times 
within a period, S/B will determine that 
someone is mounting password guessing 
attacks. 
Finally, communication parties A and B share 
the session key KAB. 
 
S BA
)N,ID,ID(f
),N(3E),N(3E,N,ID:2Step
ABAK
SPSPAA
AS
2B1A
)N,ID,ID(f
),N,ID,ID(f),N,ID,ID(f),N(3E,N,ID:3Step
2BS
ABAS1A
SBAK
ABAKABAKSPBB
)N,ID,ID(f
),N,ID,ID(f
),N,ID,ID(f,N,ID,ID:4Step
BBAK
SBAK
SBAKBBA
AB
2BS
1AS
ABA N,ID,ID:1Step
)N,ID,ID(f
),N,ID,ID(f,ID:5Step
BBAK
BBAKA
BS
AB
 
 
FIGURE 1. CC-3PEKE 
 
3. Security and Efficiency Analyses 
In this section, four properties that 
CC-3PEKE achieves the requirements listed in 
the above section are shown to demonstrate that 
CC-3PEKE is not only secure but also efficient. 
Resistance to Replay Attack 
Property 1: CC-3PEKE provides mutual 
authentication 
S is a trusted server. In Step 2, S sends (IDA, 
NA, ),N(3E
1A SP ),N(3E 2B SP  
,ID,ID(f BAKAS NA)) to B. Only the legal user 
B can retrieve 
2SN  to compute KBS = 
pmodN B
2
R
S  = pmodg B2S
RR  and 
)N,ID,ID(f
2BS SBAK
to have himself 
authenticated by S in Step 3 such that S can 
authenticate B by verifying 
 5
 
TABLE 1. Performance of LSH-3PEKE, LSSH-3PEKE and LHL-3PEKE 
LSH-3PEKE LSSH-3PEKE LHL-3PEKE  
A B S A B S A B S 
Modular exponential 2(7) 2(7) 0(6) 3 3 4 3 3 4 
Public key en/decryption 1/0 1/0 0/2 0 0 0 0 0 0 
Symmetric en(de)cryption 2 2 2 1 1 2 1 1 2 
PRF operation 0 0 0 4 4 4 4 4 4 
Hash operation 1 1 0 2 2 0 2 2 0 
Random number 2 3 0 1 1 2 1 1 2 
Rounds 5 7 6 
 
TABLE 2. Performance of LC-3PEKE and CC-3PEKE 
LC-3PEKE CC-3PEKE  
A B S A B S 
Modular exponential 4 
(3)
4 
(3)
6 
(4)
3 3 4 
Public key en/decryption 0 0 0 0 0 0 
Symmetric en(de)cryption 0 0 0 1 1 2 
PRF operation 0 0 0 4 4 4 
Hash operation 4 4 2 1 2 3 
Random number 1 1 1 1 1 2 
Rounds 5 5 
 
Property 3: CC-3PEKE provides both round 
and computation efficiencies  
The comparisons between the previous works, 
LSH-3PEKE, LSSH -3PEKE, LHL-3PEKE, 
LC-3PEKE and the proposed protocol 
CC-3PEKE are shown in Tables 1 and 2. In 
Tables 1 and 2, “Modular exponential” denotes 
the number of needed modular exponential 
operations in the corresponding scheme, “Public 
key en/decryption” denotes the number of needed 
public key encryption/decryption operations in 
the corresponding scheme, “Symmetric 
en(de)cryption” denotes the total number of 
needed symmetric decryption and encryption 
operations in the corresponding scheme, “PRF 
operation” denotes the number of needed 
pseudo-random function operations in the 
corresponding scheme, “Hash operation” denotes 
the number of needed Hash function operations 
in the corresponding scheme, “Random number” 
denotes the number of random numbers used in 
the corresponding scheme, and “Rounds” denotes 
the number of data transmission. As mentioned in 
[3] and [10], the well-known provable 
nonmalleable encryption scheme needs 5/3 
exponentiations per en/decryption. A needs 2(7) 
modular exponential operations in LSH-3PEKE 
as shown in Table 1 because one public key 
encryption operation is involved, and so do B and 
S. If pmodM AP  and pmodN BP  are 
pre-computed in LC-3PEKE, the numbers of 
modular exponential operations with and without 
pre-computations are shown by a (b) in Table 2, 
where a is without pre-computation and b is with 
pre-computation. According to Tables 1 and 2, 
the computation load of CC-3PEKE is the 
lightest among the secure ones, and the number 
of needed rounds is also the smallest. Thus, 
CC-3PEKE possesses the advantages of 
LSH-3PEKE and LHL-3PEKE, both round and 
computation efficiencies. 
 
Schemes
Operations
Schemes
Operations
