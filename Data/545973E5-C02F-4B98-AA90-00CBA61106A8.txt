 
目錄
1 計畫的緣由與目的 1
2 研究方法與成果 1
2.1 MINIMUM NODE-WEIGHTED STEINER TREE . . . . . . . . . . . 2
2.2 STBCGCA . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2
2.3 Correctness of STBCGCA . . . . . . . . . . . . . . . . . . . . . . . 3
2.4 Performance Guarantee . . . . . . . . . . . . . . . . . . . . . . . . . 6
3 結論與討論 8
4 參考文獻 8
5 計畫成果自評 8
6 附錄 9
II
2.1 MINIMUM NODE-WEIGHTED STEINER TREE
Klein and Ravi propose an algorithm with approximation ratio 2 lnT to construct a
node-weighted Steiner tree [2], where T is the number of terminal nodes. The algorithm
maintains a set of disjoint trees containing all terminal nodes and iteratively merges the
trees until only one tree exists. Initially, each terminal node is in a tree by itself. In each
iteration, at least two trees are merged into one by the following two steps. Firstly, the
node that has the minimum quotient cost is selected. The quotient cost of a node is the
minimum ratio of the sum of the weight of the node and the distances to at least two
trees to the number of trees, where the distance to a tree denotes the minimum sum of
weights of nodes and edges in the path, excluding its endpoints, to the tree. Secondly,
the shortest paths, the paths having the minimum distances, between the node and the
trees selected in the ﬁrst step are used to merge the selected trees into one.
2.2 STBCGCA
In MINIMUM NODE-WEIGHTED STEINER TREE, the terminal node must be in the
established node-weighted Stenier tree. Because the critical grid must be fully covered in
CRITICAL-SQUARE-GRID COVERAGE, our idea is to construct an auxiliary graph
G, use an existing algorithm to establish a node-weighted Stenier tree ST in G, and
deploy sensors based on ST . In the construction of G, each square grid is denoted by
a non-terminal node, each critical square grid is denoted by a terminal node, there is a
link between two non-terminal nodes if two sensors on the square grids denoted by the
two non-terminal nodes can communicate with each other, and there is a link between
a terminal node and a non-terminal node if the sensor on the square grid denoted by
the non-terminal node can fully cover the square grid denoted by the terminal node.
STBCGCA deploys sensors on all square grids denoted by non-terminal nodes in the
established node-weighted Stenier tree. To obtain the minimum size set of non-terminal
nodes, each non-terminal node is assigned weight 1 and each terminal node is assigned
weight 0. To guarantee the connectivity of the constructed wireless sensor network, each
terminal node must be a leaf of the established node-weighted Stenier tree. For this
purpose, because in G the hop distance between two non-terminal nodes that have a
common terminal neighbor is no more than 4 RsRt , as described in Lemma 1, each
edge between two non-terminal nodes is assigned weight 0 and each edge between a
terminal node and a non-terminal node is assigned weight 4 RsRt + 1. Given Field,
Critical, Rs, and Rt, STBCGCA constructs a set of grid points for sensor deployment,
DEP , by the following three steps:
1) Construction of Graph G(V,E) and Terminal Set Term: Let V1
be the set of nodes vx,y for all grid points (x, y) in Field, and let V2 be the set of nodes
ti,j for all grid points (i, j) located on critical grids in Critical. Then, V = V1 ∪ V2.
Let E1 be the set of edges (vx,y, vz,w) for all grid points (x, y) and (z, w) with a
2
 1,3 1v 1,1 1v  1,2 1v
 0
 9
 0
 9  9  9  9  9  9  9  9  9  9
 0  0  0  0
 0  0  0  0  0  0
 0  0  0  0
 0  0  0  0
 1,1 0t  2,3 0t  3,2 0t
 2,1 1v  2,2 1v  2,3 1v  3,1 1v  3,2 1v  3,3 1v
(a)
 0
 9
 0
 9  9  9  9  9  9  9  9  9  9
 0  0  0  0
 0  0  0  0  0  0
 0  0  0  0
 0  0  0  0
 1,1 0t  2,3 0t  3,2 0t
 1,1 1v  1,2 1v  1,3 1v  2,1 1v  2,2 1v  2,3 1v  3,1 1v  3,2 1v  3,3 1v
(b)
Figure 2: Example of MINIMUM NODE-WEIGHTED STEINER TREE. (a) A graph G
with nodes and edges assigned nonnegative weights, shown in parentheses, where t1,1, t2,3,
and t3,2 are terminal nodes. (b) A node-weighted Steiner tree ST (VST , EST ), where VST =
{v1,1, v2,2, t1,1, t2,3, t3,2} and EST = {(v1,1, t1,1), (v1,1, v2,2), (v2,2, t2,3), (v2,2, t3,2)}, shown in
red.
Lemma 1. If two sensors deployed on grid points (x, y) and (z, w) each
fully cover the grid on which grid point (i, j) is located, the distance
between nodes vx,y and vz,w in G, dist(vx,y, vz,w), is no more than 4 RsRt .
Proof. Let S1 and S2 be two sensors deployed on grid points (x, y) and
(z, w), respectively. It is easy to verify that the number of sensors deployed
on grid points required to connect S1 and S2 is no more than  |x−z|Rt  +
|y−w|Rt . Since S1 and S2 each fully cover the grid on which grid point
(i, j) is located, the Euclidean distance between S1 and S2 is no more than
2Rs. Therefore, the number of sensors deployed on grid points required to
connect S1 and S2 is no more than 2 2RsRt . It implies that there exists a
path, containing no more than 2 2RsRt  internal nodes, between vx,y and
vz,w in the subgraph of G induced by V1. Therefore, dist(vx,y, vz,w), the
sum of the weights of internal nodes and edges in the shortest path between
vx,y and vz,w in G, is no more than 4 RsRt .
Lemma 2. Each terminal node is a leaf in the node-weighted Steiner tree
ST established by STBCGCA.
Proof. Assume that there exists one terminal node ti,j and two non-terminal
nodes vx,y and vz,w such that edges (ti,j, vx,y) and (ti,j, vz,w) are in ST . Let
the tree containing ti,j merge with vx,y and vz,w in iterations a and b,
respectively, in step Establishment of Node-Weighted Steiner Tree ST .
There are three cases: c1) a < b; c2) a > b; and c3) a = b. We
only adhere to the proof of c3 and omit the proofs of c1 and c2 due to
4
as shown in Fig. 3d. By Lemma 1, dist(vx,y, vz,w) < 4 RsRt  + 1. For
c3.1, the path, denoted by P ′3.1−2, that begins at va, arrives at vz,w along
the shortest path between va and vz,w, and stops at vx,y along the shortest
path between vz,w and vx,y, shown in Fig. 3b, is shorter than P3.1−2. It
is a contradiction. Similarly, for c3.2, the path, denoted by P ′3.2−2, that
begins at va, arrives at vx,y along the shortest path between va and vx,y,
and stops at vz,w along the shortest path between vx,y and vz,w, shown in
Fig. 3c, is shorter than P3.2−2, constituting another contradiction. For
c3.3, dist(vp,q, vx,y) < 4 RsRt  + 1 and dist(vp,q, vz,w) < 4
Rs
Rt 
 + 1 by
Lemma 1, the path, denoted by P ′3.3−1, that begins at va, arrives at vp,q
along the shortest path between va and vp,q, and stops at vx,y along the
shortest path between vp,q and vx,y, shown in Fig. 3d, is shorter than
P3.3−1, and the path, denoted by P ′3.3−2, that begins at va, arrives at vp,q
along the shortest path between va and vp,q, and stops at vz,w along the
shortest path between vp,q and vz,w, shown in Fig. 3d, is shorter than
P3.3−2. It is a contradiction.
Theorem 1. Sensors deployed on the grid points in DEP fully cover all
critical grids and form a connected wireless sensor network.
Proof. By Lemma 2, each terminal node is a leaf in ST . It implies that
sensors deployed on the grid points in DEP are connected, and thus form
a connected wireless sensor network. We must show that sensors deployed
on the grid points in DEP fully cover all critical grids. Consider the
critical grid on which grid point (i, j) is located. There is a terminal node
ti,j in G. Since ti,j is in node-weighted Steiner tree ST established by
STBCGCA, edge (vx,y, ti,j) is in ST for some non-terminal node vx,y. It
implies that grid point (x, y) is in DEP . It also implies that (vx,y, ti,j) is
in G, and thus the sensor deployed on grid point (x, y) fully covers the
critical grid on which grid point (i, j) is located.
2.4 Performance Guarantee
Theorem 2 proves the performance guarantee for STBCGCA using the following lemmas:
Lemma 3. The sum of the weights of nodes and edges in the node-
weighted Steiner tree ST established by STBCGCA, w(ST ), is (4 RsRt +
1)|V2|+ |DEP |.
Proof. Since each terminal node is a leaf in ST by Lemma 2, |V2| edges
in ST are in E2. In addition, the DEP formed by STBCGCA is a set
of non-terminal nodes in ST . Since each non-terminal node is assigned
weight 1, w(ST ) = (4 RsRt + 1)|V2|+ |DEP |.
6
3 結論與討論
In this project, CRITICAL-SQUARE-GRID COVERAGE was shown to be NP-Complete
in [1]. In addition, we proposed an approximation algorithm, STBCGCA, in [3] for
CRITICAL-SQUARE-GRID COVERAGE. STBCGCA constructs an auxiliary graphG,
uses Klein and Ravi’s approximation algorithm [2] to establish a node-weighted Stenier
tree ST in G, and selects a set of grid points based on ST so that sensors deployed
on the selected grid points form a connected wireless sensor network and fully cover all
critical grids. In [3], to evaluate the performance of STBCGCA, we proposed another
three algorithms, C-RNP, MSC-RNP, and MSC-MNWST, and investigated the numbers
of sensors deployed by STBCGCA, C-RNP, MSC-RNP, and MSC-MNWST. C-RNP,
MSC-RNP, and MSC-MNWST are all two-phase algorithms that deploy sensors to fully
cover all critical grids in phase one and deploy sensors to establish the connectivity
between sensors in phase two. Simulations show that STBCGCA deploys fewer sensors
than C-RNP, MSC-RNP, and MSC-MNWST, in most cases.
4 參考文獻
[1] W. C. Ke, B. H. Liu, and M. J. Tsai, “The critical-square-grid coverage problem in
wireless sensor networks is NP-complete,” Computer Networks, vol. 55, no. 9, pp.
2209–2220, 2011.
[2] P. N. Klein and R. Ravi, “A nearly best-possible approximation algorithm for node-
weighted steiner trees,” J. Algorithms, vol. 19, no. 1, pp. 104–115, Jul. 1995.
[3] W. C. Ke, B. H. Liu, and M. J. Tsai, “Eﬃcient algorithm for constructing minimum
size wireless sensor networks to fully cover critical square grids,” IEEE Transactions
on Wireless Communications, vol. 10, no. 4, pp. 1154–1164, 2011.
5 計畫成果自評
在此計劃中，我們分析了使用最少感測器佈置在一個被分割成正方形格子的
感測區域並能形成一個連通且覆蓋所有關鍵區域的感測網路的問題困難度，
並將此結果發表在Computer Networks國際期刊上[1]， 另外，本研究團隊提出了
一接近演算法來解決此問題，並將其成果發表在IEEE Transactions on Wireless
Communications國際期刊上[3]。在此計劃的相關研究中，有另外三篇相關成果分
別發表在國際/國內會議上，詳細資料請參酌附錄，整體而言，本研究計畫之學
術價值已被國內外學者所認可、接受及肯定。
8
附錄一
10
KE et al.: EFFICIENT ALGORITHM FOR CONSTRUCTING MINIMUM SIZE WIRELESS SENSOR NETWORKS TO FULLY COVER CRITICAL SQUARE GRIDS 1155
methods consider the components in the sensor field (sensors,
obstacles, and preferential fields) as sources of virtual forces
and deploy sensors so that virtual forces in the field are
balanced [24]–[26]. In addition, it is shown that if sensors
are deployed based on the pattern of the equilateral triangle,
the area covered by sensors is maximized [27].
In many applications, sensors are required to monitor
specific targets or given points in a sensor field. CCANS
determines a connected dominating set in a dense wireless
sensor network such that the coverage probabilities of the
given points each are larger than a given parameter [28].
MC-MIP partitions sensors into mutually exclusive sets and
activates sensors in sets alternately to monitor given points
[29]. In addition, Greedy-MSC improves on MC-MIP by
prolonging the network lifetime with sensors that are allowed
to participate in multiple sets [30].
In many applications, critical and common areas must be
adequately distinguished; it is more practical and efficient to
monitor critical areas than common areas. For example, in
a wilderness ecological observation network, the “hot spots,”
such as nests of animals may be assigned to critical areas.
Because infinite points exist in the critical area, the method
of covering given points cannot be used directly in these
applications. This introduces the problem of deploying the
minimum sensors on grid points to construct a connected wire-
less sensor network able to fully cover critical square grids,
termed CRITICAL-SQUARE-GRID COVERAGE. So far,
CRITICAL-SQUARE-GRID COVERAGE has been shown to
be NP-Complete [31]. However, to the best of our knowledge,
no efficient algorithms for CRITICAL-SQUARE-GRID COV-
ERAGE exist to date, thereby providing motivation for this
paper. The remainder of this paper is organized as follows.
An approximation algorithm for CRITICAL-SQUARE-GRID
COVERAGE, termed STBCGCA, is introduced in Section
II, and analyzed in Section III. In Section IV, the problem
of deploying heterogeneous sensors with minimum cost on
grid points to construct a connected wireless sensor network
able to fully cover critical square grids, termed CRITICAL-
SQUARE-GRID COVERAGE-H, is introduced and an exten-
sion of STBCGCA, termed STBCGCA-H, is proposed for
CRITICAL-SQUARE-GRID COVERAGE-H. We evaluate, by
simulations, the performance of STBCGCA and STBCGCA-
H in Section V. Finally, we conclude this paper in Section
VI.
II. STEINER-TREE-BASED CRITICAL GRID COVERING
ALGORITHM (STBCGCA)
We first illustrate MINIMUM NODE-WEIGHTED
STEINER TREE [32], an NP-Complete problem, and
introduce Klein and Ravi’s algorithm for MINIMUM NODE-
WEIGHTED STEINER TREE [33], where Klein and Ravi’s
algorithm is used to design STBCGCA. Subsequently, we
describe CRITICAL-SQUARE-GRID COVERAGE [31].
Finally, we present STBCGCA, which is used to select the
grid points for sensor deployment.
A. MINIMUM NODE-WEIGHTED STEINER TREE
The problem is illustrated as follows:
INSTANCE: A graph 𝐺 with nodes and edges assigned by
nonnegative weights and a set of terminal nodes in 𝐺.
QUESTION: Find a tree 𝑆𝑇 in 𝐺 such that each terminal
node is in 𝑆𝑇 , and the sum of the weights of nodes and edges
in 𝑆𝑇 is minimum.
Klein and Ravi propose an algorithm with approximation
ratio 2 ln𝑇 to construct a node-weighted Steiner tree [33],
where 𝑇 is the number of terminal nodes. The algorithm
maintains a set of disjoint trees containing all terminal nodes
and iteratively merges the trees until only one tree exists.
Initially, each terminal node is in a tree by itself. In each
iteration, at least two trees are merged into one by the
following two steps. Firstly, the node that has the minimum
quotient cost is selected. The quotient cost of a node is the
minimum ratio of the sum of the weight of the node and the
distances to at least two trees to the number of trees, where
the distance to a tree denotes the minimum sum of weights
of nodes and edges in the path, excluding its endpoints, to
the tree. Secondly, the shortest paths, the paths having the
minimum distances, between the node and the trees selected in
the first step are used to merge the selected trees into one. Take
Fig. 1a, for example. In graph 𝐺, each of terminal nodes 𝑡1,1,
𝑡2,3, and 𝑡3,2 is assigned weight 0; each non-terminal node is
assigned weight 1; each edge between two non-terminal nodes
is assigned weight 0; and each of the other edges is assigned
weight 9. Klein and Ravi’s algorithm initially constructs three
one-node trees 𝑇1, 𝑇2, and 𝑇3 containing nodes 𝑡1,1, 𝑡2,3, and
𝑡3,2, respectively. In iteration one, each node first computes its
quotient cost. Take node 𝑣2,2, for example. The distances from
𝑣2,2 to 𝑇1, 𝑇2, and 𝑇3 are 10, 9, and 9, respectively. Because
𝑣2,2 has weight 1, the quotient cost of 𝑣2,2 is 1+9+92 = 9.5,
which is the ratio of the sum of the weight of 𝑣2,2 and the
distances to 𝑇2 and 𝑇3 to the number of trees, due to the
selection of 𝑇2 and 𝑇3. Similarly, the distances from 𝑡1,1 to
𝑇1, 𝑇2, and 𝑇3 are 0, 20, and 20, respectively. Because 𝑡1,1
has weight 0, the quotient cost of 𝑡1,1 is 0+0+202 = 10. It
is easy to verify that 𝑣2,2 has the minimum quotient cost.
Therefore, 𝑇2 and 𝑇3 are merged into one, denoted by 𝑇2+3,
using the shortest path between 𝑣2,2 and 𝑇2 and the shortest
path between 𝑣2,2 and 𝑇3. In iteration two, the distances from
𝑣1,1 to 𝑇1 and 𝑇2+3 are 9 and 0, respectively, and it is easy to
verify that 𝑣1,1 has the minimum quotient cost. Therefore, 𝑇1
and 𝑇2+3 are merged into one using the shortest path between
𝑣1,1 and 𝑇1 and the shortest path between 𝑣1,1 and 𝑇2+3. Fig.
1b shows a node-weighted Steiner tree constructed by Klein
and Ravi’s algorithm.
B. CRITICAL-SQUARE-GRID COVERAGE
The unit disk graph model [34], in which a sensor can
send messages to another sensor if the transmission range
𝑅𝑡 reaches that sensor, is used as the communication model.
The binary sensor model [13], [19], [35] is also employed.
In the binary sensor model, the probability of detecting an
event by a sensor is 1 if the event is within the sensing
range 𝑅𝑠; otherwise, the probability of detecting the event
is 0. A sensor field, denoted by 𝐹𝑖𝑒𝑙𝑑, is divided into grids
of squares having length ℓ. A sensor is deployed on a grid
point located on the center of a grid. A grid is a critical one
KE et al.: EFFICIENT ALGORITHM FOR CONSTRUCTING MINIMUM SIZE WIRELESS SENSOR NETWORKS TO FULLY COVER CRITICAL SQUARE GRIDS 1157
 1,3 1v 1,1 1v  1,2 1v
 0
 9
 0
 9  9  9  9  9  9  9  9  9  9
 0  0  0  0
 0  0  0  0  0  0
 0  0  0  0
 0  0  0  0
 1,1 0t  2,3 0t  3,2 0t
 2,1 1v  2,2 1v  2,3 1v  3,1 1v  3,2 1v  3,3 1v
(a)
 0
 9
 0
 9  9  9  9  9  9  9  9  9  9
 0  0  0  0
 0  0  0  0  0  0
 0  0  0  0
 0  0  0  0
 1,1 0t  2,3 0t  3,2 0t
 1,1 1v  1,2 1v  1,3 1v  2,1 1v  2,2 1v  2,3 1v  3,1 1v  3,2 1v  3,3 1v
(b)
Fig. 1. Example of MINIMUM NODE-WEIGHTED STEINER TREE. (a) A graph 𝐺 with nodes and edges assigned nonnegative weights, shown in
parentheses, where 𝑡1,1, 𝑡2,3, and 𝑡3,2 are terminal nodes. (b) A node-weighted Steiner tree 𝑆𝑇 (𝑉𝑆𝑇 , 𝐸𝑆𝑇 ), where 𝑉𝑆𝑇 = {𝑣1,1, 𝑣2,2, 𝑡1,1, 𝑡2,3, 𝑡3,2}
and 𝐸𝑆𝑇 = {(𝑣1,1, 𝑡1,1), (𝑣1,1, 𝑣2,2), (𝑣2,2, 𝑡2,3), (𝑣2,2, 𝑡3,2)}, shown in red.
𝑡𝑖,𝑗 merge with 𝑣𝑥,𝑦 and 𝑣𝑧,𝑤 in iterations 𝑎 and 𝑏, respectively,
in step Establishment of Node-Weighted Steiner Tree 𝑆𝑇 .
There are three cases: c1) 𝑎 < 𝑏; c2) 𝑎 > 𝑏; and c3) 𝑎 = 𝑏.
We only adhere to the proof of c3 and omit the proofs of c1
and c2 due to their similarities. Let 𝑣𝑎 be the node having
the minimum quotient cost in iteration 𝑎. We first show that
𝑣𝑎 ∕= 𝑡𝑖,𝑗 . Assume that 𝑡𝑖,𝑗 has the minimum quotient cost in
iteration 𝑎. Let 𝑣 ∕= 𝑡𝑖,𝑗 be a node in 𝐺, and let the shortest
path between 𝑡𝑖,𝑗 and 𝑣, denoted by 𝑃3−1, begin at 𝑡𝑖,𝑗 , follow
(𝑡𝑖,𝑗 , 𝑣𝑧,𝑤), and stop at 𝑣 along edges in 𝐺, as shown in
Fig. 3a. Since 𝑑𝑖𝑠𝑡(𝑣𝑥,𝑦, 𝑣𝑧,𝑤) is smaller than the weight of
(𝑡𝑖,𝑗 , 𝑣𝑧,𝑤) by at least 1 by Lemma 1, the path, denoted by
𝑃 ′3−1, that begins at 𝑣𝑥,𝑦, arrives at 𝑣𝑧,𝑤 along the shortest path
between 𝑣𝑥,𝑦 and 𝑣𝑧,𝑤, and stops at 𝑣 along the shortest path
between 𝑣𝑧,𝑤 and 𝑣, shown in Fig. 3a, is shorter than 𝑃3−1 by
at least 1. This implies that the quotient cost of 𝑣𝑥,𝑦 is smaller
than that of 𝑡𝑖,𝑗 , constituting a contradiction. Therefore, there
are three cases such that (𝑡𝑖,𝑗 , 𝑣𝑥,𝑦) and (𝑡𝑖,𝑗 , 𝑣𝑧,𝑤) are inserted
into 𝑆𝑇 in iteration 𝑎: c3.1) the shortest path between 𝑣𝑎 and
𝑡𝑖,𝑗 , denoted by 𝑃3.1−1, begins at 𝑣𝑎, arrives at 𝑣𝑧,𝑤 along
edges in 𝐺, follows (𝑣𝑧,𝑤 , 𝑡𝑖,𝑗), and stops at 𝑡𝑖,𝑗 , and the
shortest path between 𝑣𝑎 and 𝑣𝑥,𝑦, denoted by 𝑃3.1−2, begins
at 𝑣𝑎, arrives at 𝑣𝑧,𝑤 along edges in 𝐺, follows (𝑣𝑧,𝑤, 𝑡𝑖,𝑗) and
(𝑡𝑖,𝑗 , 𝑣𝑥,𝑦), and stops at 𝑣𝑥,𝑦, as shown in Fig. 3b; c3.2) the
shortest path between 𝑣𝑎 and 𝑡𝑖,𝑗 , denoted by 𝑃3.2−1, begins
at 𝑣𝑎, arrives at 𝑣𝑥,𝑦 along edges in 𝐺, follows (𝑣𝑥,𝑦, 𝑡𝑖,𝑗),
and stops at 𝑡𝑖,𝑗 , and the shortest path between 𝑣𝑎 and 𝑣𝑧,𝑤,
denoted by 𝑃3.2−2, begins at 𝑣𝑎, arrives at 𝑣𝑥,𝑦 along edges
in 𝐺, follows (𝑣𝑥,𝑦, 𝑡𝑖,𝑗) and (𝑡𝑖,𝑗 , 𝑣𝑧,𝑤), and stops at 𝑣𝑧,𝑤, as
shown in Fig. 3c; and c3.3) the shortest path between 𝑣𝑎 and
𝑣𝑥,𝑦 , denoted by 𝑃3.3−1, begins at 𝑣𝑎, arrives at 𝑣𝑝,𝑞 along
edges in 𝐺, follows (𝑣𝑝,𝑞, 𝑡𝑖,𝑗) and (𝑡𝑖,𝑗 , 𝑣𝑥,𝑦), and stops at
𝑣𝑥,𝑦 , and the shortest path between 𝑣𝑎 and 𝑣𝑧,𝑤, denoted by
𝑃3.3−2, begins at 𝑣𝑎, arrives at 𝑣𝑝,𝑞 along edges in 𝐺, follows
(𝑣𝑝,𝑞, 𝑡𝑖,𝑗) and (𝑡𝑖,𝑗 , 𝑣𝑧,𝑤), and stops at 𝑣𝑧,𝑤, as shown in Fig.
3d. By Lemma 1, 𝑑𝑖𝑠𝑡(𝑣𝑥,𝑦, 𝑣𝑧,𝑤) < 4⌈ 𝑅𝑠⌊𝑅𝑡ℓ ⌋ℓ⌉+ 1. For c3.1,
the path, denoted by 𝑃 ′3.1−2, that begins at 𝑣𝑎, arrives at 𝑣𝑧,𝑤
along the shortest path between 𝑣𝑎 and 𝑣𝑧,𝑤, and stops at 𝑣𝑥,𝑦
along the shortest path between 𝑣𝑧,𝑤 and 𝑣𝑥,𝑦 , shown in Fig.
3b, is shorter than 𝑃3.1−2. It is a contradiction. Similarly, for
c3.2, the path, denoted by 𝑃 ′3.2−2, that begins at 𝑣𝑎, arrives
at 𝑣𝑥,𝑦 along the shortest path between 𝑣𝑎 and 𝑣𝑥,𝑦 , and
stops at 𝑣𝑧,𝑤 along the shortest path between 𝑣𝑥,𝑦 and 𝑣𝑧,𝑤,
shown in Fig. 3c, is shorter than 𝑃3.2−2, constituting another
contradiction. For c3.3, 𝑑𝑖𝑠𝑡(𝑣𝑝,𝑞, 𝑣𝑥,𝑦) < 4⌈ 𝑅𝑠⌊𝑅𝑡ℓ ⌋ℓ ⌉ + 1 and
𝑑𝑖𝑠𝑡(𝑣𝑝,𝑞, 𝑣𝑧,𝑤) < 4⌈ 𝑅𝑠⌊𝑅𝑡ℓ ⌋ℓ⌉ + 1 by Lemma 1, the path,
denoted by 𝑃 ′3.3−1, that begins at 𝑣𝑎, arrives at 𝑣𝑝,𝑞 along
the shortest path between 𝑣𝑎 and 𝑣𝑝,𝑞 , and stops at 𝑣𝑥,𝑦 along
the shortest path between 𝑣𝑝,𝑞 and 𝑣𝑥,𝑦 , shown in Fig. 3d,
is shorter than 𝑃3.3−1, and the path, denoted by 𝑃 ′3.3−2, that
begins at 𝑣𝑎, arrives at 𝑣𝑝,𝑞 along the shortest path between
𝑣𝑎 and 𝑣𝑝,𝑞 , and stops at 𝑣𝑧,𝑤 along the shortest path between
𝑣𝑝,𝑞 and 𝑣𝑧,𝑤, shown in Fig. 3d, is shorter than 𝑃3.3−2. It is
a contradiction.
Theorem 1: Sensors deployed on the grid points in 𝐷𝐸𝑃
fully cover all critical grids and form a connected wireless
sensor network.
Proof: By Lemma 2, each terminal node is a leaf in 𝑆𝑇 .
It implies that sensors deployed on the grid points in 𝐷𝐸𝑃
are connected, and thus form a connected wireless sensor
network. We must show that sensors deployed on the grid
points in 𝐷𝐸𝑃 fully cover all critical grids. Consider the
critical grid on which grid point (𝑖, 𝑗) is located. There is a
terminal node 𝑡𝑖,𝑗 in 𝐺. Since 𝑡𝑖,𝑗 is in node-weighted Steiner
tree 𝑆𝑇 established by STBCGCA, edge (𝑣𝑥,𝑦, 𝑡𝑖,𝑗) is in 𝑆𝑇
for some non-terminal node 𝑣𝑥,𝑦 . It implies that grid point
(𝑥, 𝑦) is in 𝐷𝐸𝑃 . It also implies that (𝑣𝑥,𝑦, 𝑡𝑖,𝑗) is in 𝐺, and
thus the sensor deployed on grid point (𝑥, 𝑦) fully covers the
critical grid on which grid point (𝑖, 𝑗) is located.
B. Performance Guarantee
Theorem 2 proves the performance guarantee for
STBCGCA using the following lemmas:
Lemma 3: The sum of the weights of nodes and edges in
the node-weighted Steiner tree 𝑆𝑇 established by STBCGCA,
𝑤(𝑆𝑇 ), is (4⌈ 𝑅𝑠⌊𝑅𝑡ℓ ⌋ℓ⌉+ 1)∣𝑉2∣+ ∣𝐷𝐸𝑃 ∣.
Proof: Since each terminal node is a leaf in 𝑆𝑇 by
Lemma 2, ∣𝑉2∣ edges in 𝑆𝑇 are in 𝐸2. In addition, the
𝐷𝐸𝑃 formed by STBCGCA is a set of non-terminal nodes
KE et al.: EFFICIENT ALGORITHM FOR CONSTRUCTING MINIMUM SIZE WIRELESS SENSOR NETWORKS TO FULLY COVER CRITICAL SQUARE GRIDS 1159
Thus, 𝑤(𝑆𝑇𝑂𝑃𝑇 ) = (4⌈ 𝑅𝑠⌊𝑅𝑡ℓ ⌋ℓ⌉+ 1)∣𝑉2∣+ ∣𝐷𝐸𝑃𝑆𝑇𝑂𝑃𝑇 ∣ =
(4⌈ 𝑅𝑠⌊𝑅𝑡ℓ ⌋ℓ ⌉+ 1)∣𝑉2∣+ ∣𝐷𝐸𝑃𝑂𝑃𝑇 ∣.
Theorem 2: The performance ratio of STBCGCA is
bounded in 𝑂(𝛼
3
𝛽 ln 𝑔
′), where 𝛼 = 𝑅𝑠ℓ , 𝛽 =
𝑅𝑡
ℓ , and 𝑔
′
denotes the number of critical grids.
Proof: By Theorem 1.1 of [33], 𝑤(𝑆𝑇 )𝑤(𝑆𝑇𝑂𝑃𝑇 ) ≤ 2 ln ∣𝑉2∣.
In addition, 𝑤(𝑆𝑇 ) = (4⌈ 𝑅𝑠⌊𝑅𝑡ℓ ⌋ℓ ⌉ + 1)∣𝑉2∣ + ∣𝐷𝐸𝑃 ∣
by Lemma 3, and 𝑤(𝑆𝑇𝑂𝑃𝑇 ) = (4⌈ 𝑅𝑠⌊𝑅𝑡ℓ ⌋ℓ ⌉ + 1)∣𝑉2∣ +∣𝐷𝐸𝑃𝑂𝑃𝑇 ∣ by Lemma 4. It is easy to verify that
∣𝐷𝐸𝑃 ∣
∣𝐷𝐸𝑃𝑂𝑃𝑇 ∣ ≤
(4⌈ 𝑅𝑠
⌊𝑅𝑡
ℓ
⌋ℓ
⌉+1)∣𝑉2∣(2 ln ∣𝑉2∣−1)
∣𝐷𝐸𝑃𝑂𝑃𝑇 ∣ + 2 ln ∣𝑉2∣.
Because ∣𝐷𝐸𝑃𝑂𝑃𝑇 ∣ ≥ ∣𝑉2∣ℓ
2
2𝜋𝑅𝑠2
, we have ∣𝐷𝐸𝑃 ∣∣𝐷𝐸𝑃𝑂𝑃𝑇 ∣ ≤
(4⌈ 𝑅𝑠
⌊𝑅𝑡
ℓ
⌋ℓ
⌉+1)∣𝑉2∣(2 ln ∣𝑉2∣−1)
∣𝑉2∣ℓ2 (2𝜋𝑅𝑠
2) + 2 ln ∣𝑉2∣ =
𝑂( 𝑅𝑠
3
𝑅𝑡ℓ2
ln ∣𝑉2∣) = 𝑂(𝛼3𝛽 ln ∣𝑉2∣). It is noted that ∣𝑉2∣ = 𝑔′.
IV. HETEROGENEOUS DEPLOYMENT
We first introduce CRITICAL-SQUARE-GRID
COVERAGE-H. Subsequently, we describe STBCGCA-
H. Finally, we analyze STBCGCA-H.
A. CRITICAL-SQUARE-GRID COVERAGE-H
In CRITICAL-SQUARE-GRID COVERAGE-H, 𝑛 types of
sensors are used to construct a connected wireless sensor
network, where type 𝑚 (1 ≤ 𝑚 ≤ 𝑛) sensor has the trans-
mission range 𝑅𝑚𝑡 , the sensing range 𝑅
𝑚
𝑠 , and the cost 𝐶
𝑚.
CRITICAL-SQUARE-GRID COVERAGE-H is illustrated as
follows:
INSTANCE: 𝑛, 𝑅𝑚𝑠 , 𝑅
𝑚
𝑡 , and 𝐶
𝑚 for 1 ≤ 𝑚 ≤ 𝑛, 𝐹𝑖𝑒𝑙𝑑,
and 𝐶𝑟𝑖𝑡𝑖𝑐𝑎𝑙.
QUESTION: Find a connected wireless sensor network 𝑊
constructed by deploying sensors with minimum cost on the
grid points in 𝐹𝑖𝑒𝑙𝑑 such that 𝑊 fully covers all critical grids
in 𝐶𝑟𝑖𝑡𝑖𝑐𝑎𝑙.
B. STBCGCA-H
Given 𝐹𝑖𝑒𝑙𝑑, 𝐶𝑟𝑖𝑡𝑖𝑐𝑎𝑙, and 𝑛 types of sensors with 𝑅𝑚𝑠 ,
𝑅𝑚𝑡 , and 𝐶
𝑚 for 1 ≤ 𝑚 ≤ 𝑛, STBCGCA-H constructs a
set of grid points with sensor types for sensor deployment,
𝐷𝐸𝑃𝐻 , by the following three steps:
1) Construction of Graph 𝐺𝐻(𝑉𝐻 , 𝐸𝐻) and Terminal
Set 𝑇𝑒𝑟𝑚𝐻: Let 𝑉1 be the set of nodes 𝑣𝑚𝑥,𝑦 for all grid points
(𝑥, 𝑦) in 𝐹𝑖𝑒𝑙𝑑 and all sensor types 𝑚 (1 ≤ 𝑚 ≤ 𝑛), and let
𝑉2 be the set of nodes 𝑡𝑖,𝑗 for all grid points (𝑖, 𝑗) located on
critical grids in 𝐶𝑟𝑖𝑡𝑖𝑐𝑎𝑙. Then, 𝑉𝐻 = 𝑉1 ∪𝑉2. Let 𝐸1 be the
set of edges (𝑣𝑚1𝑥,𝑦 , 𝑣
𝑚2
𝑧,𝑤) for all grid points (𝑥, 𝑦) and (𝑧, 𝑤)
with a distance not greater than both of 𝑅𝑚1𝑡 and 𝑅
𝑚2
𝑡 , and
let 𝐸2 be the set of edges (𝑣𝑚𝑥,𝑦, 𝑡𝑖,𝑗) for all grid points (𝑥, 𝑦)
and (𝑖, 𝑗), such that the type 𝑚 sensor deployed on grid point
(𝑥, 𝑦) fully covers the critical grid on which grid point (𝑖, 𝑗)
is located. Then, 𝐸𝐻 = 𝐸1 ∪ 𝐸2. Each node 𝑣𝑚𝑥,𝑦 in 𝑉1 is
assigned weight 𝐶𝑚, each node in 𝑉2 is assigned weight 0,
each edge in 𝐸1 is assigned weight 0, and each edge in 𝐸2 is
assigned weight 4⌈ 𝑅𝑚𝑎𝑥𝑠
⌊𝑅
𝑚𝑖𝑛
𝑡
ℓ ⌋ℓ
⌉𝐶𝑚𝑎𝑥 + 1, where 𝑅𝑚𝑎𝑥𝑠 , 𝑅𝑚𝑖𝑛𝑡 ,
and 𝐶𝑚𝑎𝑥 denote the maximum value of 𝑅𝑚𝑠 , the minimum
value of 𝑅𝑚𝑡 , and the maximum value of 𝐶
𝑚 for 1 ≤ 𝑚 ≤ 𝑛,
respectively. 𝑇𝑒𝑟𝑚𝐻 is set to 𝑉2.
2) Establishment of Node-Weighted Steiner Tree 𝑆𝑇𝐻:
Based on 𝐺𝐻 and 𝑇𝑒𝑟𝑚𝐻 , Klein and Ravi’s algorithm [33]
is used to establish 𝑆𝑇𝐻 .
3) Formation of Set 𝐷𝐸𝑃𝐻 : 𝐷𝐸𝑃𝐻 contains grid point
(𝑥, 𝑦) designated to deploy a type 𝑚 sensor if 𝑣𝑚𝑥,𝑦 is in 𝑆𝑇𝐻 .
Take Fig. 2a, for example. Given two types of sensors: type
1 sensor has 𝑅1𝑠 =
√
10
2 ℓ, 𝑅
1
𝑡 =
√
2ℓ, and 𝐶1 = 3, and
type 2 sensor has 𝑅2𝑠 =
1√
2
ℓ, 𝑅2𝑡 = ℓ, and 𝐶
2 = 1. Firstly,
𝑣11,1 and 𝑣
2
1,1 are in 𝑉1 because grid point (1, 1) is in 𝐹𝑖𝑒𝑙𝑑;
and 𝑣11,1 and 𝑣
2
1,1 are assigned weights 3 and 1, respectively,
because 𝐶1 = 3 and 𝐶2 = 1. 𝑡1,1 is in 𝑉2 and assigned weight
0 because grid point (1, 1) is located on a critical grid in
𝐶𝑟𝑖𝑡𝑖𝑐𝑎𝑙; (𝑣11,1, 𝑣
2
2,1) is in 𝐸1 and assigned weight 0 because
the distance between grid points (1, 1) and (2, 1) is not greater
than both of 𝑅1𝑡 and 𝑅
2
𝑡 ; and (𝑣
1
2,2, 𝑡2,3) is in 𝐸2 and assigned
weight 4⌈ 𝑅𝑚𝑎𝑥𝑠
⌊𝑅
𝑚𝑖𝑛
𝑡
ℓ ⌋ℓ
⌉𝐶𝑚𝑎𝑥 +1 = 25 because the type 1 sensor
deployed on grid point (2, 2) fully covers the critical grid on
which grid point (2, 3) is located. The constructed graph 𝐺𝐻
is shown in Fig. 4a. Secondly, a node-weighted steiner tree
𝑆𝑇𝐻 is established, as shown in Fig. 4b. Finally, 𝐷𝐸𝑃𝐻 =
{(1, 1)2, (2, 1)2, (2, 2)1} because 𝑣21,1, 𝑣22,1, and 𝑣12,2 are in
𝑆𝑇𝐻 , where (𝑥, 𝑦)𝑚 denotes the grid point (𝑥, 𝑦) designated
to deploy a type 𝑚 sensor.
C. Analysis of STBCGCA-H
The proofs of Theorem 3 and Theorem 4 are similar to those
of Theorem 1 and Theorem 2, respectively, and are omitted
due to the page limit.
Theorem 3: Sensors deployed on the grid points in 𝐷𝐸𝑃𝐻
fully cover all critical grids and construct a connected wireless
sensor network.
Theorem 4: The performance ratio of STBCGCA-H is
bounded in 𝑂(𝛼
3
𝛽 𝐶
𝑚𝑎𝑥 ln 𝑔′), where 𝛼 = 𝑅
𝑚𝑎𝑥
𝑠
ℓ , 𝛽 =
𝑅𝑚𝑖𝑛𝑡
ℓ ,
and 𝑔′ denotes the number of critical grids.
V. PERFORMANCE STUDIES
Let 𝑔′ denote the total number of critical grids in the
sensor field, and let 𝑃𝑟𝑜𝑏𝑔 , called the group probability,
denote the probability of choosing critical grids among the
nearby grids of the existing critical grids. Critical grids were
iteratively generated until 𝑔′ critical grids existed in the sensor
field, as follows. Initially, one of the grids in the sensor
field was randomly selected and set to be a critical grid. In
each iteration, one of the non-critical grids was set to be a
critical grid, called the newly generated critical grid; the newly
generated critical grid was randomly selected from all non-
critical grids if the number generated by a random number
generator was larger than or equal to the group probabil-
ity 𝑃𝑟𝑜𝑏𝑔; otherwise, the newly generated critical grid was
randomly selected from the non-critical grids, each of which
shares a boundary with at least one existing critical grid. To
evaluate the performance of STBCGCA, we proposed another
three algorithms, C-RNP, MSC-RNP, and MSC-MNWST, to
construct a connected wireless sensor network fully covering
KE et al.: EFFICIENT ALGORITHM FOR CONSTRUCTING MINIMUM SIZE WIRELESS SENSOR NETWORKS TO FULLY COVER CRITICAL SQUARE GRIDS 1161
Fig. 5. Average numbers of sensors deployed by C-RNP, MSC-RNP, MSC-
MNWST, and STBCGCA in sensor fields divided into 50×50 grids of squares
with length ℓ and having 50 to 150 critical grids, where the sensing range 𝑅𝑠
is 5√
2
ℓ, the transmission range 𝑅𝑡 is 5ℓ, and the group probability 𝑃𝑟𝑜𝑏𝑔 is
0.
STBCGCA, C-RNP deploys more sensors because there is
a sensor deployed on each grid point located on a critical
grid. MSC-MNWST deploys fewer sensors than MSC-RNP
because Klein and Ravi’s algorithm deploys fewer sensors
to establish the connectivity between sensors than Lloyd and
Xue’s algorithm deploys. In C-RNP, MSC-RNP, and MSC-
MNWST, sensors are deployed to fully cover all critical
grids in phase one without considering how to establish the
connectivity between sensors. Since the locations of sensors
deployed in phase one significantly affects how many sensors
are deployed in phase two, C-RNP, MSC-RNP, and MSC-
MNWST deploy more sensors than STBCGCA. In addition,
the more critical grids, the larger the difference between the
numbers of sensors deployed by C-RNP and MSC-RNP. This
is because more critical grids are fully covered by a sensor
if more critical grids exist in the sensor field. Also, the more
critical grids, the larger the difference between the numbers
of sensors deployed by MSC-RNP and MSC-MNWST. This
stems from the observation that more connections between
sensors deployed in phase one are established in phase two in
sensor fields having more critical grids. There is negligible
change in the difference between the numbers of sensors
deployed by MSC-MNWST and STBCGCA as the number
of critical grids increases.
2) Sensing Range: As can be seen in Fig. 6, the larger
the sensing range, the lower the average numbers of sensors
deployed by MSC-RNP, MSC-MNWST, and STBCGCA. This
stems from the observation that fewer sensors are deployed to
fully cover all critical grids if the sensing range is larger. By
contrast, the number of sensors deployed by C-RNP remains
unchanged as the sensing range increases. This is because C-
RNP deploys sensors on all grid points located on critical
grids. The numbers of sensors deployed by C-RNP, MSC-RNP,
MSC-MNWST, and STBCGCA are the largest, the second
largest, the third largest, and the smallest, respectively, if the
sensing range is 3√
2
ℓ, 5√
2
ℓ, 7√
2
ℓ, or 9√
2
ℓ. If the sensing range
is 1√
2
ℓ, C-RNP, MSC-RNP, MSC-MNWST, and STBCGCA
each deploy sensors on all grid points located on critical grids.
Since C-RNP and MSC-RNP deploy the same number of
sensors to establish the connectivity between sensors by Lloyd
Fig. 6. Average numbers of sensors, with sensing range 𝑅𝑠 ranging
from 1√
2
ℓ to 9√
2
ℓ, deployed by C-RNP, MSC-RNP, MSC-MNWST, and
STBCGCA in the sensor fields divided into 50 × 50 grids of squares with
length ℓ, where the transmission range 𝑅𝑡 is 5ℓ, the group probability 𝑃𝑟𝑜𝑏𝑔
is 0, and the number of critical grids is 100.
A 3A 5A 7A 9A
Fig. 7. Average numbers of sensors, with transmission range 𝑅𝑡 ranging from
ℓ to 9ℓ, deployed by C-RNP, MSC-RNP, MSC-MNWST, and STBCGCA in
the sensor fields divided into 50× 50 grids of squares with length ℓ, where
the sensing range 𝑅𝑠 is 5√
2
ℓ, the group probability 𝑃𝑟𝑜𝑏𝑔 is 0, and the
number of critical grids is 100.
and Xue’s algorithm, the numbers of sensors deployed by C-
RNP and MSC-RNP are the same if the sensing range is 1√
2
ℓ.
In addition, compared with MSC-MNWST, STBCGCA de-
ploys more sensors having sensing range 1√
2
ℓ. This is because
by using Klein and Ravi’s algorithm in the establishment of
the connectivity between sensors, STBCGCA deploys more
sensors than MSC-MNWST.
3) Transmission Range: As can be seen in Fig. 7, the
larger the transmission range is, the lower the average numbers
of sensors deployed by C-RNP, MSC-RNP, MSC-MNWST,
and STBCGCA. This conclusion stems from the observation
that fewer sensors are deployed to establish the connectivity
between sensors if the transmission range is larger. The larger
the transmission range, the smaller the difference between
the numbers of sensors deployed by MSC-MNWST and
STBCGCA. This is because the locations of sensors deployed
in phase one has less impact on the number of sensors
deployed in phase two in MSC-MNWST as the transmission
range increases.
4) Distribution of Critical Grids: As can be seen in Fig.
8, the higher group probability is, the lower the average
KE et al.: EFFICIENT ALGORITHM FOR CONSTRUCTING MINIMUM SIZE WIRELESS SENSOR NETWORKS TO FULLY COVER CRITICAL SQUARE GRIDS 1163
Fig. 10. Average costs of sensors deployed by STBCGCA-H and the
average lower bounds of the optimal solutions to CRITICAL-SQUARE-GRID
COVERAGE-H evaluated by LP-CSGC-H in sensor fields divided into 10×10
grids of squares with length ℓ and having 2 to 6 critical grids, where 𝑘 denotes
the number of the types of the sensors, and the types of sensors (𝑅𝑠, 𝑅𝑡, 𝑐𝑜𝑠𝑡)
are ( 1√
2
ℓ, ℓ, 150) as 𝑘 = 1, ( 1√
2
ℓ, ℓ, 150) and ( 3√
2
ℓ, 3ℓ, 300) as 𝑘 = 2, and
( 1√
2
ℓ, ℓ, 150), ( 1√
2
ℓ, 3ℓ, 200), ( 3√
2
ℓ, ℓ, 250), and ( 3√
2
ℓ, 3ℓ, 300) as 𝑘 = 4.
lower bound of the optimal solution to CRITICAL-SQUARE-
GRID COVERAGE-H evaluated by LP-CSGC-H, which is
reasonable.
VI. CONCLUSION
In this paper, we proposed an approximation algorithm,
STBCGCA, for CRITICAL-SQUARE-GRID COVERAGE.
STBCGCA constructs an auxiliary graph 𝐺, uses Klein and
Ravi’s approximation algorithm [33] to establish a node-
weighted Stenier tree 𝑆𝑇 in 𝐺, and selects a set of grid
points based on 𝑆𝑇 so that sensors deployed on the selected
grid points form a connected wireless sensor network and
fully cover all critical grids. To evaluate the performance of
STBCGCA, we proposed another three algorithms, C-RNP,
MSC-RNP, and MSC-MNWST, and investigated the numbers
of sensors deployed by STBCGCA, C-RNP, MSC-RNP, and
MSC-MNWST. C-RNP, MSC-RNP, and MSC-MNWST are
all two-phase algorithms that deploy sensors to fully cover
all critical grids in phase one and deploy sensors to establish
the connectivity between sensors in phase two. Simulations
show that STBCGCA deploys fewer sensors than C-RNP,
MSC-RNP, and MSC-MNWST, in most cases. In addition,
STBCGCA-H, an extension of STBCGCA, is proposed to
form a connected wireless heterogenous sensor network.
In STBCGCA and STBCGCA-H, we employ disk sensing
and communication models. To employ a non-disk sensing
or communication model, such as the two-ray ground prop-
agation model [40], the log-normal shadowing model [41],
or the quasi unit disk graph model [42], the largest stable
sensing and transmission ranges of a sensor are used as the
sensing and transmission ranges of the sensor in STBCGCA
and STBCGCA-H, respectively. For example, if STBCGCA or
STBCGCA-H is used to deploy sensors adopted in [40] and
[41], then the transmission range of the sensor is set to 100
m and 20 m, respectively. This stems from their simulation
results that show two sensors adopted in [40] and [41] can
reach each other if their distance is not greater than 100 m
and 20 m, respectively. In the quasi unit disk graph model,
given 𝑝, 𝑟, and 𝑅, a sensor can detect an event with probability
1, 0, and 𝑝, if the distance between the sensor and the event
is not greater than 𝑟, greater than 𝑅, and within the interval
(𝑟, 𝑅], respectively. Therefore, if sensors employ the quasi unit
disk graph model as the sensing model, then 𝑟 is used as the
sensing range of the sensor as STBCGCA or STBCGCA-H is
used to deploy the sensors.
REFERENCES
[1] P. Ray and P. Varshney, “Estimation of spatially distributed processes
in wireless sensor networks with random packet loss," IEEE Trans.
Wireless Commun., vol. 8, no. 6, pp. 3162-3171, June 2009.
[2] K. K. Rachuri and C. Murthy, “Energy efficient and scalable search in
dense wireless sensor networks," IEEE Trans. Comput., vol. 58, no. 6,
pp. 812-826, June 2009.
[3] M. J. Tsai, H. Y. Yang, B. H. Liu, and W. Q. Huang, “Virtual-coordinate-
based delivery-guaranteed routing protocol in wireless sensor networks,"
IEEE/ACM Trans. Networking, vol. 17, no. 4, pp. 1228-1241, Aug. 2009.
[4] A. O. Fapojuwo and A. Cano-Tinoco, “Energy consumption and mes-
sage delay analysis of QoS enhanced base station controlled dynamic
clustering protocol for wireless sensor networks," IEEE Trans. Wireless
Commun., vol. 8, no. 10, pp. 5366-5374, Oct. 2009.
[5] T. R. Park, K. J. Park, and M. J. Lee, “Design and analysis of asyn-
chronous wakeup for wireless sensor networks," IEEE Trans. Wireless
Commun., vol. 8, no. 11, pp. 5530-5541, Nov. 2009.
[6] Z. Merhi, M. Elgamel, and M. Bayoumi, “A lightweight collaborative
fault tolerant target localization system for wireless sensor networks,"
IEEE Trans. Mobile Comput., vol. 8, no. 12, pp. 1690-1704, Dec. 2009.
[7] V. Chvatal, “A combinatorial theorem in plane geometry," J. Combina-
torial Theory Ser. B, vol. 18, pp. 39-41, 1975.
[8] J. O’Rourke, Art Gallery Theorems and Algorithms. Oxford University
Press, 1987.
[9] F. Hoffmann, M. Kaufmann, and K. Kriegel, “The art gallery theorem
for polygons with holes," in Proc. IEEE FOCS, 1991.
[10] J. B. M. Melissen and P. C. Schuur, “Covering a rectangle with six and
seven circles," Discrete Applied Math., vol. 99, no. 1, pp. 149-156, Feb.
2000.
[11] K. J. Nurmela, “Conjecturally optimal coverings of an equilateral
triangle with up to 36 equal circles," Experimental Math., vol. 9, no. 2,
pp. 241-250, 2000.
[12] K. J. Nurmela and P. R. J. Ostergard, “Covering a square with up to 30
equal circles," HUT-TCS-A62, Tech. Rep., 2000.
[13] S. Slijepcevic and M. Potkonjak, “Power efficient organization of
wireless sensor networks," in Proc. IEEE ICC, 2001.
[14] H. Zhang and J. C. Hou, “Maintaining sensing coverage and connectivity
in large sensor networks," J. Ad Hoc Sensor Wireless Netw., vol. 1, no. 1,
pp. 89-123, Jan. 2005.
[15] Z. Zhou, S. Das, and H. Gupta, “Connected k-coverage problem in
sensor networks," in Proc. ICCCN, 2004.
[16] C. F. Huang, Y. C. Tseng, and H. L. Wu, “Distributed protocols for
ensuring both coverage and connectivity of a wireless sensor network,"
ACM Trans. Sensor Netw., vol. 3, no. 1, p. 5, Mar. 2007.
[17] C. Y. Chang, C. T. Chang, Y. C. Chen, and H. R. Chang, “Obstacle-
resistant deployment algorithms for wireless sensor networks," IEEE
Trans. Veh. Technol., vol. 58, no. 6, pp. 2925-2941, July 2009.
[18] X. Han, X. Cao, E. L. Lloyd, and C. C. Shen, “Deploying directional
sensor networks with guaranteed connectivity and coverage," in Proc.
IEEE SECON, 2008.
[19] K. Chakrabarty, S. S. Iyengar, H. Qi, and E. Cho, “Grid coverage for
surveillance and target location in distributed sensor networks," IEEE
Trans. Comput., vol. 51, no. 12, pp. 1448-1453, Dec. 2002.
[20] X. Xu, S. Sahni, and N. Rao, “Minimum-cost sensor coverage of planar
regions," in Proc. FUSION, 2008.
[21] F. Y. S. Lin and P. L. Chiu, “A simulated annealing algorithm for energy-
efficient sensor network design," in Proc. ICST WiOpt, 2005.
[22] X. Bai, S. Kumar, Z. Yun, D. Xuan, and T. H. Lai, “Deploying wireless
sensors to achieve both coverage and connectivity," in Proc. ACM
MobiHoc, 2006.
[23] A. Howard, M. J. Matari’c, and G. S. Sukhatme, “An incremental self-
deployment algorithm for mobile sensor networks," Autonomous Robots,
vol. 13, no. 2, pp. 113-126, Sep. 2002.
[24] N. Heo and P. K. Varshney, “An intelligent deployment and clustering
algorithm for a distributed mobile sensor network," in Proc. IEEE SMC,
2003.
附錄二
11
in order to prolong the network lifetime. A centralized
method is proposed to partition sensors into mutually
exclusive sets such that sensors in each set fully cover
the entire sensor ﬁeld [13]. OGDC is a distributed algo-
rithm used to activate a subset of sensors to fully cover
the entire sensor ﬁeld at one time [14]. In order to ensure
that each point in a sensor ﬁeld is covered by at least k sen-
sors, a subset of sensors are selected for ensuring k-cover-
age of a wireless sensor network [15]. In addition, a
method has been proposed to select a subset of senors
for the construction of a wireless sensor network with
k-coverage and k0-connectivity [16], where a k0-connected
wireless sensor network is disconnected only if at least k0
sensor failures exist.
Many sensor-deployment algorithms attempt to fully
cover a sensor ﬁeld, while minimizing the number of sen-
sors deployed, or a certain ‘cost function’. A method has
been proposed to deploy sensors to provide full coverage
on a sensor ﬁeld with obstacles [17]. Methods of deploying
directional sensor networks have been proposed to fully
cover a sensor ﬁeld [18]. Given heterogeneous sensors,
sensor deployment algorithms achieve full coverage [19]
or k-coverage [20] on a sensor ﬁeld using near-minimum
cost of sensors. A simulated annealing algorithm deploys
k mutually exclusive sets of sensors such that sensors in
each set fully cover the entire sensor ﬁeld in an attempt
to prolong the network lifetime [21]. In addition, an opti-
mal regular pattern is proposed to deploy sensors for the
construction of a wireless sensor network that is 2-con-
nected and provides full coverage on the sensor ﬁeld [22].
Sometimes, however, the sensor ﬁeld is large, or the
availablebudget cannotprovideenoughsensors to fully cov-
er the entire ﬁeld. Given a certain number of sensors, many
sensor deployment algorithms attempt to maximize the
area covered by sensors in a sensor ﬁeld. An incremental
deployment algorithm uses the data gathered from previ-
ously-deployed sensors to deploy subsequent sensors [23].
Some methods consider the components in the sensor ﬁeld
(sensors, obstacles, and preferential ﬁelds) as sources of vir-
tual forces and deploy sensors so that virtual forces in the
ﬁeld are balanced [24–26]. In addition, it is shown that if
sensors are deployed based on the pattern of the equilateral
triangle, the area covered by sensors is maximized [27].
In many applications, sensors are required to monitor
speciﬁc targets or given points in a sensor ﬁled. CCANS
determines a connected dominating set in a dense wireless
sensor network such that the coverage probabilities of the
given points each are larger than a given parameter [28].
MC-MIP partitions sensors into mutually exclusive sets
and activates sensors in sets alternately to monitor given
points [29]. In addition, Greedy-MSC improves on MC-
MIP by prolonging the network lifetime with sensors that
are allowed to participate in multiple sets [30].
In many applications, the area in which the network is
deployed needs to be adequately distinguished as ‘critical
areas’, and ‘common areas’. For example, in a wilderness
ecological observation network, critical areas are the ‘hot
spots’, such as nests of animals, and common areas are
the ecological observation area, excluding the critical areas.
It is more practical and efﬁcient to monitor critical areas
rather than common areas. The problem of constructing a
wireless sensor network to fully cover critical grid cells of
equilateral triangles by deploying the minimum number
of sensors on grid points is shown to be NP-Complete
[31]. Since a sensor ﬁeld is usually divided into square grid
cells [19,32–35], we show that the problem of deploying
theminimumnumber of sensors on grid points to construct
a wireless sensor network fully covering critical square grid
cells, termed critical-square-grid coverage, is NP-Complete
in this paper. The remainder of this paper is organized as
follows. Related research is presented in Section 2. The
NP-Completeness of critical-square-grid coverage is shown
in Section 3. Finally, we conclude this paper with a discus-
sion of future research in Section 4.
2. Preliminaries
Critical-square-grid coverage, exact cover by 3-sets [36],
and rectilinear Steiner tree [37] are illustrated.
2.1. Critical-square-grid coverage
The unit disk graph model [38], in which a sensor can
send messages to another sensor if the transmission range
Rt reaches that sensor, is used as the communicationmodel.
The binary sensor model [13,19,39] is also employed. In the
binary sensor model, the probability of detecting an event
by a sensor is 1 if the event is within the sensing range Rs;
otherwise, the probability of detecting the event is 0. A sen-
sor ﬁeld, denoted by Field, is divided into square grid cells
having length ‘. A sensor is deployed on a grid point located
on the center of a grid cell. A grid cell is a critical one if the
grid cell has to be fully covered, and Critical denotes the set
of critical grid cells. We assume that Rs P 1ﬃﬃ2p ‘ and RtP ‘ so
that a sensor deployed on a grid point can fully cover at
least one grid cell and can communicate with sensors de-
ployed on neighboring grid cells, where neighboring grid
cells are deﬁned as grid cells sharing a common boundary.
Critical-square-grid coverage is illustrated as follows:
INSTANCE: Rs, Rt, Field, Critical, and a positive integer k.
QUESTION: Does there exist a wireless sensor network
W constructed by deploying no more than k sensors on
the grid points in Field such that W fully covers all critical
grid cells in Critical?
Take Fig. 1(a), for example, where Rs ¼
ﬃﬃﬃﬃ
10
p
2 ‘, Rt ¼
ﬃﬃﬃ
2
p
‘,
Field is the sensor ﬁeld, and Critical contains 3 grid cells
on which grid points (1,1), (2,3), and (3,2) are located. It
is easy to verify that the wireless sensor network formed
by two connected sensors deployed on grid points (1,1)
and (2,2), shown in Fig. 1, fully covers all critical grid cells.
2.2. Exact cover by 3-sets
The problem is illustrated as follows:
INSTANCE: A set X with jXj = 3n and a collection C of 3-
element subsets of X.
QUESTION: Does C contain an exact cover for X, i.e., does
a subset C0 # C exist such that every element of X is con-
tained in exactly one member of C0?
Take X = {1,2,3,4,5,6} and C = {C1,C2,C3}, where
C1 = {1,2,3}, C2 = {1,3,6}, and C3 = {4,5,6}, for example. C
2210 W.-C. Ke et al. / Computer Networks 55 (2011) 2209–2220
sections, each having 3 or 5 components, as shown in
Fig. 3. Lemma 2 shows 3 (6) sensors are required to
connect 3 (5) components in an upper or lower section.
Lemma 1. Suppose that j‘ 6 Rt <
ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
j2 þ 1
q
‘ for some integer
jP 2. Let the number of connections be the decreased number
of components. Then, the following truths hold for a junction
unit:
(1) At least 2 sensors are required to make 1 connection
between 2 components.
(2) At least 4 sensors are required to make 2 connec-
tions between 3 components.
(3) 5 sensors are required to make 3 connections
between 4 components.
Proof. The following can be veriﬁed easily: component J1
requires at least 2, 3, and 2 sensors to connect with compo-
nents J2, J3, and J4, respectively; J2 requires at least 2 and 3
sensors to connect with J3 and J4, respectively; and J3
requires at least 2 sensors to connect with J4. Therefore,
(1) holds. For (2), by symmetry, we only show the number
of sensors required to connect J1, J2, and J3 is more than 3.
Assume that J1, J2, and J3 can be connected by 3 sensors S1,
S2, and S3. Then, S1, S2, and S3 must be deployed on grid
points separated by the distance of bRtc on a horizontal line
through J1 and J3, because the distance between J1 and J3 is
4bRtc; and, J2 must connect with either S1, S2, or S3. How-
ever, this connection is impossible because the distance
between J2 and either S1, S2, or S3 is greater than bRtc. This
completes the proof of (2). Truth (3) clearly holds because
Fig. 3. The crossover unit having p and r components in the upper and lower sections, respectively. (a) p = 5 and r = 5. (b) p = 5 and r = 3. (c) p = 3 and r = 5.
(d) p = 3 and r = 3.
2212 W.-C. Ke et al. / Computer Networks 55 (2011) 2209–2220
by type a1 or a2 conﬁguration. If 3 components are in the
upper or lower section of a crossover unit, the conﬁgura-
tions of connections are of types b0, b1, and b2 if 0, 1, and
2 connections are made between 3 components, respec-
tively. If 5 components are in the upper or lower section
of a crossover unit, the conﬁgurations of connections are
of types c0, c1, c2, c3, and c4 if 0, 1, 2, 3, and 4 connections
are made between 5 components, respectively. Lemma 2
shows that the connections per sensor are 0, 23, 0, and
2
3 if
the crossover unit has its components connected by type
b0, b2, c0, and c4 conﬁgurations in the upper or lower sec-
tion, respectively, and shows that the connections per sen-
sor are at most 12,
1
2,
1
2, and
3
5 if the crossover unit has its
components connected by type b1, c1, c2, and c3 conﬁgura-
tions in the upper or lower section, respectively.
Lemma 3. Suppose that j‘ 6 Rt <
ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
j2 þ 1
q
‘ for some integer
jP 2. If the crossover unit has its components connected by a
type b2 or type c4 conﬁguration in the upper (lower) section,
the connection per sensor in the lower (upper) section is less
than 35.
Proof. Only the crossover unit having 5 components in the
both upper and lower sections, as shown in Fig. 3(a), is
considered. A similar argument can be applied for the
other crossover units. Let the crossover unit have its com-
ponents connected by a type c4 conﬁguration in the upper
section. By Lemma 2, the connection per sensor in the
lower section is less than 35 if the crossover unit has its
components connected by a type c0, c1, or c2 conﬁguration
in the lower section. In addition, no new connections
between components X1 and X2 can be made in the lower
section because X1 and X2 are located in both the upper
and lower sections of the crossover unit, which are
connected after the crossover unit has its components
connected by a c4 type conﬁguration in the upper section.
If the crossover unit has its components connected by a
type c4 conﬁguration in the lower section, the connection
per sensor is 12, because only 3 new connections are made
between 5 components using 6 sensors. If the crossover
unit has components X1, X2, X6, X7, components X1, X2, X6,
X8, or components X1, X2, X7, X8 connected by a type c3 con-
ﬁguration, the connection per sensor is at most 25, because
only 2 new connections are made between 4 components
using at least 5 sensors. If the crossover unit has compo-
nents X1, X6, X7, X8 or components X2, X6, X7, X8 connected
by a type c3 conﬁguration, 6 sensors are required to make 3
connections between 4 components, because 6 sensors are
required to connect X6, X7, and X8, as shown below. Assume
that X6, X7, and X8 can be connected by 5 sensors S1, S2, S3,
S4, and S5. Clearly, S1, S2, S3, S4, and S5 must be deployed on
grid points separated by the distance of bRtc on a horizontal
line through the top grid cells of X6 and X8; otherwise, X6
and X8 are not connected. However, the distance between
X7 and eitherS1, S2, S3, S4, or S5 is greater than bRtc. It con-
stitutes a contradiction and completes the proof. h
3.2. Polynomial-time reduction
The instance of exact cover by 3-sets consists of
X = {1,2, . . . ,3n} and C = {C1,C2, . . . ,Ct}, where
St
i¼1Ci ¼ X.
The instance of critical-square-grid coverage is constructed
as follows. Let the plane be the sensor ﬁeld. The sensor
ﬁeld is divided into square grid cells having length ‘. The
critical grid cells and the values of Rs, Rt, and k are assigned
in a four phase process as follows:
(1) Construction of Set Structures: A set structure SETi is
constructed in the sensor ﬁeld for each Ci =
{ai,bi,ci} 2 C. The set structure SETi consists of a junc-
tion unit and 3 element structures having ai, bi, and
ci crossover units connected together. The crossover
unit not below (above) any crossover unit in an ele-
ment structure is called the top (bottom) crossover
unit. Except for the upper (lower) section of the
top (bottom) crossover unit having 3 components,
the other upper or lower sections of the crossover
units each have 5 components.
(2) Construction of Link and Base Units: The link unit in
level i (1 6 i 6 3n + 1) with ki + 1 components con-
sisting of grid cells is constructed in the sensor ﬁeld
to connect ki crossover units in level i and all top
crossover units in level i  1, in which the crossover
unit in level i denotes the crossover unit above i  1
crossover units in an element structure. Subse-
quently, the base unit, consisting of grid cells, is con-
structed having one prong by which to connect with
the link unit in level 1 and additional t prongs to
connect with t set structures, where prongs are sep-
arated by the distance 35bRtc + ‘, as shown in Fig. 5.
(3) Assignment of Critical grid cells: All grid cells in the
junction, crossover, link, and base units are assigned
to critical grid cells.
(4) Assignment of the Rs, Rt, and k values: Rs and Rt are set
such that ‘ﬃﬃ
2
p 6 Rs < ‘ and j‘ 6 Rt <
ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
j2 þ 1
q
‘ for some
integer jP 2. k is assigned to 9t + 6(q  3t) + 5n + g0,
where q denotes the number of crossover units, g0
denotes the number of critical grid cells, t = jCj, and
n ¼ jXj3 .
Fig. 5. The base unit.
2214 W.-C. Ke et al. / Computer Networks 55 (2011) 2209–2220
Deﬁnition 3. Node u in G(W) is said to be in level i if the
subnetwork u has sensors deployed on the grid points in
the link unit in level i; node u is said to be between levels
i  1 and i if node u is not in level i and the subnetwork u
has sensors deployed on the grid points in components in
the lower section of the crossover unit in level i.
Lemma 5. The number of nodes in G(W) is 4q  6t + 3n + 1.
Proof. The following can be veriﬁed easily: if ki crossover
units exist in level i, ki + 1 nodes in G(W) exist in level i;
if ki crossover units exist in level i (i– 1), 3ki nodes in
G(W) exist between levels i  1 and i; and, 3t nodes in
G(W) exist between levels 0 and 1. Because there are
3n + 1 levels and q crossover units (3t of q crossover units
are in level 1), jGðWÞj ¼P3nþ1i¼1 ðki þ 1Þ þ
P3nþ1
i¼2 ð3kiÞ þ 3t ¼
4q 6t þ 3nþ 1. h
Deﬁnition 4. A junction unit is said to be in a ﬁlled conﬁg-
uration if its components are connected by a type a3
conﬁguration, and it is said to be in an emptied conﬁgura-
tion if its components are connected by a type a0
conﬁguration.
Deﬁnition 5. A crossover unit is said to be in a ﬁlled-emp-
tied conﬁguration if its components are connected by a
type b2 or c4 conﬁguration in the upper section and a type
b0 or c0 conﬁguration in the lower section, and it is said to
be in an emptied-ﬁlled conﬁguration if its components are
connected by a type b0 or c0 conﬁguration in the upper sec-
tion and a type b2 or c4 conﬁguration in the lower section.
Lemma 6. If the instance of exact cover by 3-sets is solvable,
the instance of critical-square-grid coverage is solvable.
Proof. Suppose that C0 # C is an exact cover for X. We
show that a wireless sensor network, W, can be con-
structed for the instance of critical-square-grid coverage
using C0. Firstly, g0 sensors are deployed on all critical grid
cells. Secondly, if Ci 2 C0, then sensors are deployed such
that the junction unit in the set structure SETi is in a ﬁlled
conﬁguration, and the crossover unit in the set structure
SETi is in a ﬁlled-emptied conﬁguration. If Ci R C0, then sen-
sors are deployed such that the junction unit in the set
structure SETi is in an emptied conﬁguration, and the cross-
over unit in the set structure SETi is in an emptied-ﬁlled
conﬁguration. Because ‘ﬃﬃ
2
p 6 Rs < ‘, all critical grid cells
are covered by g0 sensors in W. The number of supplemen-
tary sensors in W is 9t + 6(q  3t) + 5n because each of
exactly 3t crossover units has its components connected
by a type b2 conﬁguration in the upper or lower section,
each of exactly q  3t crossover units has its components
connected by a type c4 conﬁguration in the upper or lower
section, and each of exactly n junction units has its compo-
nents connected by a type a3 conﬁguration. Thus, the num-
ber of sensors in W is 9t + 6(q  3t) + 5n + g0. We only need
to show W is connected. It sufﬁces to show G(W) is con-
nected. First note that the node between levels i  1 and
i is connected with at least one node in level i  1 or in
level i. Secondly, components X1 and X2 in each crossover
unit are connected because each of the crossover units is
in either a ﬁlled-emptied or emptied-ﬁlled conﬁguration,
implying that all nodes in the same level in G(W) are con-
nected. Finally, because C0 is an exact cover for X, in each
level exactly one top crossover unit is in an ﬁlled-emptied
conﬁguration, implying that the nodes in two consecutive
levels are connected. Therefore, G(W) is connected. This
completes the proof. h
Next, an exact cover is shown to exist for X if a wireless sen-
sor networkW exists for the instance of critical-square-grid
coverage in the following lemmas. The proof of Lemma 7 is
omitted due to its similarity with the proof of Lemma 3.
Lemma 7. Suppose that j‘ 6 Rt <
ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
j2 þ 1
q
‘ for some integer
jP 2. If the above (below) crossover unit in level i + 1 (level
i  1) has its components connected by a c4 conﬁguration in
the lower (upper) section, the connection per sensor in the
upper (lower) section of the crossover unit in level i is less
than 35.
Lemma 8. The following truths hold for the wireless sen-
sor network W, a solution for the instance of critical-
square-grid coverage:
(1) The crossover units in a set structure are either all in
ﬁlled-emptied conﬁgurations or all in emptied-ﬁlled
conﬁgurations.
(2) n junction units are in ﬁlled conﬁgurations, and t  n
junction units are in emptied conﬁgurations.
(3) G(W) is a tree.
Proof. In W, g0 sensors are deployed on the critical grid
cells because ‘ﬃﬃ
2
p 6 Rs < ‘. Therefore, there are 9t +
6(q  3t) + 5n supplementary sensors in W. There are two
claims: c1) at least 4q  6t + 3n connections are made
between the nodes in G(W), and c2) at most 4q  6t + 3n
connections can be made between the nodes in G(W),
which happens only when (1) and (2) hold. G(W) is con-
nected because W is a solution for the instance of critical-
square-grid coverage. Therefore, claim c1 holds, since
G(W) has 4q6t + 3n + 1 nodes by Lemma 5. For claim c2,
the conditions under which the maximum number of con-
nections can be made using 9t + 6(q  3t) + 5n supplemen-
tary sensors are identiﬁed. According to Lemmas 1, 2, 3,
and 7, the number of connections per sensor is at most 23,
which happens only when the crossover units in a set
structure are either all in ﬁlled-emptied conﬁgurations or
all in emptied-ﬁlled conﬁgurations. This deployment
generates 3t  2 + (q  3t)  4 connections using 3t  3 +
(q  3t)  6 supplementary sensors. According to Lemmas
1, 2, 3, and 7, the remaining 5n supplementary sensors
can generate at most 3n connections, which happens
only when n junction units are in ﬁlled conﬁgurations.
Therefore, at most 4q  6t + 3n connections can be gener-
ated between the nodes in G(W) using 9t + 6  (q  3t) + 5n
supplementary sensors, which happens only when (1) and
(2) hold. Claims c1 and c2 imply that exactly 4q  6t + 3n
connections are generated between the nodes in G(W). This
completes the proof. h
2216 W.-C. Ke et al. / Computer Networks 55 (2011) 2209–2220
exist in a level. Because G(W) is a tree by Lemma 8, the
proof is completed. h
Lemma 11. If the instance of critical-square-grid coverage is
solvable, the instance of exact cover by 3-sets is solvable.
Proof. Assume that a wireless sensor network W is a
solution for the instance of critical-square-grid coverage.
We show that an exact cover for X can be induced using
W. Let C0 include Ci if the junction unit in the set structure
SETi is in a ﬁlled conﬁguration in W. It sufﬁces to show C0
is an exact cover for X. According to Lemma 8, jC0j = n,
which implies that the number of the top crossover units
in all set structures SETi, such that Ci 2 C0, is 3n. The 3n top
crossover units in all set structures SETi, such that Ci 2 C0,
are in ﬁlled-emptied conﬁgurations according to Lemma 9
and are in different levels according to Lemma 10. It
implies that C0 is an exact cover for X. This completes
the proof. h
Theorem 1. Critical-square-grid coverage is NP-Complete if
the sensor ﬁeld is divided into square grid cells having length
‘ with ‘ﬃﬃ
2
p 6 Rs < ‘ and j‘ 6 Rt <
ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
j2 þ 1
q
‘ for some integer
jP 2.
Proof. It can be veriﬁed easily that critical-square-grid cov-
erage belongs to the NP class. Because exact cover by 3-sets
is a known NP-Complete problem, the proof is completed
according to Lemmas 4, 6, and 11. h
Fig. A.2. The crossover unit having p and r components in the upper and lower sections, respectively, where a ¼ bRt
‘
c‘ and b ¼ b
ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
R2t a2
p
‘
c‘. (a) p = 5 and r = 5.
(b) p = 5 and r = 3. (c) p = 3 and r = 5. (d) p = 3 and r = 3.
2218 W.-C. Ke et al. / Computer Networks 55 (2011) 2209–2220
[17] C.Y. Chang, C.T. Chang, Y.C. Chen, H.R. Chang, Obstacle-resistant
deployment algorithms for wireless sensor networks, IEEE Trans.
Veh. Technol. 58 (6) (2009) 2925–2941.
[18] X. Han, X. Cao, E.L. Lloyd, C.C. Shen, Deploying directional sensor
networks with guaranteed connectivity and coverage, in:
Proceedings of IEEE SECON, California, USA, 2008.
[19] K. Chakrabarty, S.S. Iyengar, H. Qi, E. Cho, Grid coverage for
surveillance and target location in distributed sensor networks,
IEEE Trans. Comput. 51 (12) (2002) 1448–1453.
[20] X. Xu, S. Sahni, N. Rao, Minimum-cost sensor coverage of planar
regions, in: Proceedings of FUSION, Cologne, Germany, 2008.
[21] F.Y.S. Lin, P.L. Chiu, A simulated annealing algorithm for energy-
efﬁcient sensor network design, in: Proceedings of ICST WiOpt,
Trentino, Italy, 2005.
[22] X. Bai, S. Kumar, Z. Yun, D. Xuan, T.H. Lai, Deploying wireless sensors
to achieve both coverage and connectivity, in: Procedings of ACM
MobiHoc, Florence, Italy, 2006.
[23] A. Howard, M.J. Mataric, G.S. Sukhatme, An incremental self-
deployment algorithm for mobile sensor networks, Auton. Robots
13 (2) (2002) 113–126.
[24] N. Heo, P.K. Varshney, An intelligent deployment and clustering
algorithm for a distributed mobile sensor network, in: Proceedings
of IEEE SMC, Washington, D.C., 2003.
[25] A. Howard, M.J. Mataric, G.S. Sukhatme, Mobile sensor network
deployment using potential ﬁelds: A distributed, scalable solution to
the area coverage problem, in: Proceedings of DARS, Fukuoka, Japan,
2002.
[26] Y. Zhou, K. Chakrabarty, Sensor deployment and target localization
in distributed sensor networks, ACM Trans. Embedded Comput. Syst.
3 (1) (2004) 61–91.
[27] M. Ma, Y. Yang, Adaptive triangular deployment algorithm for
unattended mobile sensor networks, IEEE Trans. Comput. 56 (7)
(2007) 946–958.
[28] Y. Zou, K. Chakrabarty, A distributed coverage- and connectivity-
centric technique for selecting active nodes in wireless sensor
networks, IEEE Trans. Comput. 54 (8) (2005) 978–991.
[29] M. Cardei, D.Z. Du, Improving wireless sensor network lifetime
through power aware organization, ACM/Springer J. Wireless
Networks 11 (3) (2005) 333–340.
[30] M. Cardei, M.T. Thai, Y. Li, W. Wu, Energy-efﬁcient target coverage in
wireless sensor networks, in: Proceedings of IEEE INFOCOM, Miami,
FL, 2005.
[31] W.C. Ke, B.H. Liu, M.J. Tsai, Constructing a wireless sensor network to
fully cover critical grids by deploying minimum sensors on grid
points is NP-Complete, IEEE Trans. Comput. 56 (5) (2007) 710–715.
[32] H. Chen, H. Wu, N.-F. Tzeng, Grid-based approach for working node
selection in wireless sensor networks, in: IEEE ICC, 2004, pp. 3673–
3678.
[33] S.S. Dhillon, K. Chakrabarty, S.S. Iyengar, Sensor placement for grid
coverage under imprecise detections, in: IEEE FUSION, 2002, pp.
1581–1587.
[34] X. Shen, J. Chen, Y. Sun, Grid scan: a simple and effective approach
for coverage problem in wireless sensor networks, in: IEEE ICC, 2006,
pp. 3480–3484.
[35] G. Song, W. Zhuang, A. Song, Self-deployment of mobile sensor
networks in complex indoor environments, in: IEEE WCICA, 2006,
pp. 4543–4546.
[36] R.M. Karp, Complexity of Computer Communications, Plenum, 1972.
[37] M.R. Garey, R.L. Graham, D.S. Johnson, Some NP-Complete geometric
problems, in: ACM STOC, 1976, pp. 10–22.
[38] B.N. Clark, C.J. Colbourn, D.S. Johnson, Unit disk graphs, Discrete
Math. 86 (1–3) (1990) 165–177.
[39] N. Heo, P.K. Varshney, Energy-efﬁcient deployment of intelligent
mobile sensor networks, IEEE Trans. Systems, Man, Cybernet. -Part
A: Syst. Humans 35 (2005) 78–92.
Wei-Chieh Ke received the BSc and PhD
degrees in computer science from National
Tsing Hua University in 2003 and 2011,
respectively. His research interests include
NP-Hardness, mobile computing, distributed
computing, mobile ad-hoc networks, and
wireless sensor networks.
Bing-Hong Liu received the BSc and PhD
degrees in computer science from National
Tsing Hua University in 2001 and 2008,
respectively. In 2009, he joined the Depart-
ment of Electronic Engineering at National
Kaohsiung University of Applied Sciences,
where he is currently an assistant professor.
His research interests include mobile com-
puting, distributed computing, mobile ad hoc
networks, and wireless sensor networks. He is
a member of the IEEE.
Ming-Jer Tsai received the PhD degree in
electrical engineering from National Taiwan
University in 1997. Since then, he has been
with the Computer and Communication Lab-
oratory, Industrial Technology Research
Institute. He joined Department of Computer
Science and Institute of Communications
Engineering at National Tsing Hua University
in 2003 and 2009, respectively, where he is
currently an associate professor. His research
interests include distributed systems and
mobile computing. He is a member of the IEEE.
2220 W.-C. Ke et al. / Computer Networks 55 (2011) 2209–2220
An Improved Method of Constructing a Data Aggregation Tree in Wireless Sensor
Networks
Bing-Hong Liu∗, Ying-Hong Jhuang∗, Li-Ping Tung † and Jyun-Yu Jhang∗
∗Department of Electronic Engineering
National Kaohsiung University of Applied Sciences
415, Chien Kung Rd., Kaohsiung 80778, Taiwan
Email: bhliu@kuas.edu.tw, f7829190@gmail.com, 1099305151@kuas.edu.tw
†Intelligent Information and Communications Research Center
National Chiao Tung University, Taiwan
Email: lptung@nctu.edu.tw
Abstract—With the rapid application development for wire-
less sensor networks, effective information collection methods
are becoming increasingly emphasized. The effectiveness of
data aggregation is mainly determined by the routing structure
while tree is an important structure for data aggregation. Many
researchers have studied the problem of how to construct a
routing tree in a wireless sensor network with relay nodes so
that the total transmission and reception energy cost consumed
by all sensors is minimized, the so-called Minimum Energy-
Cost Aggregation Tree with Relay Nodes problem. In this
paper, we propose an improved method to reconstruct a routing
tree so that the total energy cost can be reduced. Using
simulation, we demonstrate that a shortest path routing tree
applied with our proposed Reconstruction algorithm could
have lower total energy cost than the original one.
Keywords-wireless sensor network; data aggregation; routing
tree; algorithm
I. INTRODUCTION
Recently, many applications of wireless sensor networks
are developed, such as environmental monitoring, battleﬁeld
surveillance, seismic monitoring, and so on. The most im-
portant function in these applications is to collect and report
information to a speciﬁc node, called sink hereafter, for
further analysis and monitoring. The information collection
in wireless sensor networks is therefore important and its
related research receives a great attention. In this paper,
we undertake the development of data collection in wireless
sensor networks.
Cluster is a well-known structure for data collec-
tion/aggregation. Each of cluster heads is responsible to
collect data from sensors in the corresponding cluster. The
data collected in the cluster head is then sent to the sink.
In [1], Gionis et al. propose an algorithm to optimize and
solve the clustering aggregation problem in large data sets.
In [2], Kamimura et al. propose a clustering algorithm of
decreasing the loading of cluster head to prolong the lifetime
of the sensor networks. In [3], Dhanaraj and Murthy propose
an optimal placement of cluster-heads (OPC) algorithm to
ﬁnd the optimum number of cluster heads to be deployed
for balancing the lifetime of the cluster heads and achieving
the maximum network lifetime.
Tree is an important structure for data aggregation. Every
node is responsible to forward the generated or collected data
to its parent node in the tree. In [4], Lee and Wong propose
an overlay tree structure to facilitate data aggregation. In
addition, the tree structure is self-healed when sensors are no
longer functional or links are broken. In [5], Lee and Wong
propose an energy aware spanning tree algorithm to improve
the lifetime of the sensor networks. In [6], an approximation
algorithm is proposed to prolong the network lifetime by
constructing a spanning tree.
Compression is a useful method for data aggregation
in order to reduce the energy consumption of transmitting
data. In [7], Pattem et al. propose a measure of data com-
pression by spatial correlations to quantify the compressed
information and get near optimal performance of static
clustering. In [8], Chen et al. propose a nonthreshold-based
node level algorithm for data compression to decrease the
energy consumption and maximize the network lifetime.
In [9], Kimura and Latiﬁ survey and discuss a number of
compression schemes for wireless sensor networks.
In [10], Kuo and Tsai present two new problems, termed
MECAT (Minimum Energy-Cost Aggregation Tree) and
MECAT RN (Minimum Energy-Cost Aggregation Tree with
Relay Nodes), that are shown to be NP-complete. In addi-
tion, approximation algorithms of constructing routing trees
are proposed in [10] to minimize the total energy cost of
data transmission in wireless sensor networks. Instead of
constructing a new routing tree to minimize the energy
cost in MECAT RN problem; in this paper, we propose an
algorithm to reconstruct an existing routing tree to reduce the
total energy cost. The remainder of this paper is organized as
follows. In Section II, we introduces the network model and
MECAT RN problem in [10]. In Section III, we present our
proposed Reconstruction algorithm. Section IV demonstrates
a computer simulation to evaluate the performance. We then
summarize our conclusions in Section V.
2012 Sixth International Conference on Genetic and Evolutionary Computing
978-0-7695-4763-3/12 $26.00 © 2012 IEEE
DOI 10.1109/ICGEC.2012.53
3484
Ţţ ť
Ŧ ŧ
Ť
ĩıĪ
ĩıĪ
ĩıĪ
ĩĲĪĩĲĪ
ĩĵĪ
(a)
Ţ
ţ ť
Ŧ ŧ
Ť
ĩıĪ
ĩıĪ
ĩıĪ
ĩĲĪĩĲĪ
ĩĵĪ
(b)
Ţ
ţ ť
Ŧ ŧ
Ť
ĩıĪ
ĩıĪ
ĩıĪ
ĩĲĪĩĲĪ
ĩĵĪ
(c)
Ţ
ţ ť
Ŧ ŧ
Ť
ĩıĪ
ĩıĪ
ĩıĪ
ĩĲĪĩĲĪ
ĩĵĪ
(d)
烉ŭŪůŬ 烉ŵųŦŦġŦťŨŦŪ 烉ůŰťŦġŪ
Figure 1. The change in the tree topology. (b), (c), and (d) show the routing trees T1, T2, and T3, respectively, in the wireless sensor network represented
by a connected weighted graph G shown in (a), where node a is sink. T1 is a shortest path tree. T2 is constructed after a e, b-pair executes a reduction
process on T1. T3 is constructed after a f, e-pair executes a reduction process on T2. The size of the data generated from each node is shown in parentheses.
Algorithm 1 Reconstruction (G, T )
1: Let h be the maximum depth of T
2: while h = 0 do
3: Let U be the set of nodes u for all u ∈ VT and
u.depth = h, where u.depth denotes the depth of u in
T
4: for all u ∈ U do
5: for all (u, v) ∈ EG − ET do
6: Evaluate profit(u, v)
7: if profit(u, v) > 0 then
8: edge (u, v) is added to T and edge
(u, u.parentT ) is deleted from T
9: end if
10: end for
11: end for
12: h ← h− 1
13: end while
maximum data size. The transmission range of nodes was
a circle of radius 20. Because shortest-path-tree is a well-
known tree and has good performance for data aggregation
[10], we constructed a routing tree, termed the reduced-
shortest-path-tree, by applying Reconstruction algorithm to
the shortest-path-tree. Then we compared the reduced-
shortest-path-tree with the shortest-path-tree in terms of total
energy cost. In our simulation results, data were obtained by
averaging the data from 100 experiments.
Fig. 2 shows the comparison of the total energy costs
between the reduced-shortest-path-tree and the shortest-path-
tree under a different value of the aggregation ratio (α),
where the relay-node ratio (γ) is 50% and the maximum data
size (β) is three. As we expected, the reduced-shortest-path-
tree has lower energy cost than the shortest-path-tree since
The Reconstruction algorithm reduces the energy cost of
the shortest-path-tree. In addition, the higher the aggregation
ratio, the lower total energy cost the reduced-shortest-path-
tree (or, the shortest-path-tree) has. This is because more
data are aggregated into one packet, which consumes less
energy cost to report all the data to sink.
Fig. 3 shows the comparison of the total energy costs
between the reduced-shortest-path-tree and the shortest-path-
tree under a different value of the relay-node ratio (γ), where
the aggregation ratio (α) is 20 and the maximum data size
(β) is three. It is clear that the reduced-shortest-path-tree has
better performance than the shortest-path-tree, as observed
in Fig. 2. In addition, the higher the relay-node ratio, the
lower total energy cost the reduced-shortest-path-tree (or,
35046
附錄四
13
W is the sink node, X is the node with the maximum hop 
distance from W, Y is the node with the maximum hop 
distance from X, Z is the node in Sx=y±1 with the maximum 
hop distance from W, and Z′ is the node in Sx=y±1 with the 
maximum hop distance from Z, where Sx=y±1 denotes the set 
of nodes whose hop distances from X and Y each differ by 
one. In the second phase, the equator, consisting of the 
shortest path from Y to X, is established. For each node u in 
the equator, a meridian consisting of the shortest path from u 
to Z and the shortest path from u to Z′ is established. In 
addition, each node in the equator is assigned the longitude 
coordinate to the hop distance from X, and the latitude and 
ripple coordinates are assigned to 0 and 0, respectively. Each 
node in the meridian established by u is assigned the 
longitude coordinate to the longitude coordinate of u, the 
ripple coordinate to 0, and the latitude coordinate to the hop 
distance from u, if the node is in the meridian between u and 
Z, and the negative value of the hop distance from u, if the 
node is in the meridian between u and Z′. In the third phase, 
each node, u, not in the meridian is assigned the longitude 
and latitude coordinates to the longitude and latitude 
coordinates of the node in the meridian from which u has the 
minimum hop distance, and the ripple coordinate to the 
minimum hop distance from that node. In the fourth phase, 
each node, u, with the longitude coordinate, i, is assigned the 
up (or down) coordinate to the minimum hop distance in the 
sub-network induced by the nodes having the longitude 
coordinate, i, from a node that has a neighbor having the 
longitude coordinate, i + 1 (or i − 1). 
In ABVCap routing, the packet is first routed to a virtual 
node whose longitude coordinate equals the longitude 
coordinate of the destination using longitude routing. The 
packet is then routed to a virtual node whose longitude and 
latitude coordinates equal the longitude and latitude 
coordinates of the destination, respectively, using latitude 
routing. Finally, the packet is routed to the destination 
through proactive routing. If a node u contains no virtual 
node whose longitude coordinate equals the longitude 
coordinate of the destination d, u routes a packet using 
longitude routing; otherwise, if u contains no virtual node 
whose longitude and latitude coordinates equal the longitude 
and latitude coordinates of d, respectively, u routes a packet 
using latitude routing. Otherwise, u routes a packet using 
proactive routing. In longitude routing, u forwards the packet 
to the virtual node with the minimum |v.lo − d.lo| among all 
virtual nodes v contained in the neighbors of u, or, in case of 
a tie, the virtual node v with the smallest number v.up (or 
v.dn) if v.lo < d.lo (or v.lo > d.lo). In latitude routing, u 
forwards the packet to the virtual node with the same 
longitude coordinate as the destination and with the 
minimum |v.la − d.la| among all virtual nodes v contained in 
the neighbors of u, or, in case of a tie, the virtual node with 
the smallest ripple coordinate. In proactive routing, u 
forwards the packet to the next hop in the local routing table 
containing the routing information for virtual nodes having 
the same longitude and latitude coordinates. 
 
An example of the assignment of the virtual coordinates 
using ABVCap is presented in Fig. 1. In the first phase, node 
1 is sink W. Node 2 assigns the w coordinate to 2 because the 
hop distance from node 1 to node 2 is 2. Node 16 is selected 
to be anchor X since node 16 has the maximum hop distance 
to W, or in case of parity, it has the maximum ID value. In a 
similar manner nodes 15, 14 and 13 are respectively selected 
as anchors Y, Z and Z′. In the second phase, node 15 
establishes the equator that consists of the shortest path from 
node 15, through nodes 1, 6, and 2, to node 16.  The 
longitude, latitude, and ripple coordinates of node 6 are 
assigned to 2, 0, and 0, respectively, because the hop 
distance from node 6 to node 16 is 2. Node 6 that is in the 
equator establishes a meridian that consists of the shortest 
path from node 6 to node 14 and the shortest path from node 
6 to node 13. The longitude, latitude, and ripple coordinates 
of node 8 that is in the meridian from node 6 to node 14 are 
assigned to 2, 1, 0, respectively, because the longitude 
coordinate of node 6 is 2 and the hop distance from node 6 to 
node 8 is 1. The longitude, latitude, and ripple coordinates of 
node 12 that is in the meridian from node 6 to node 13 are 
assigned to 2, -1, 0, respectively, because the longitude 
coordinate of node 6 is 2 and the negative value of the hop 
distance from node 6 to node 12 is -1. In the third phase, the 
longitude, latitude, and ripple coordinates of node 9 are 
assigned to 2, 1, and 1, respectively, because node 8 that is in 
the meridian has the minimum hop distance from node 9 and 
the hop distnace from node 8 to node 9 is 1. In the fourth 
phase, the virtual node contained in node 1 assigns the up 
coordinate to 0 because it has a neighbor 15 having longitude 
coordinate larger by 1. Note that the set of all virtual nodes 
of node 10 is {(3, 1, 0, 0, 0), (4, 1, 0, 0, 0)} after this phase 
because two meridians are established, respectively, from 
nodes 1 and 15, through node 10, to node 14.  
 
Figure 1.  An example of ABVCap. 
Another example considers the packet routed through 
ABVCap routing from node 2 to node 9 in Fig. 1. Firstly, 
node 2 proceeds with longitude routing, because it contains 
no virtual node having the same longitude coordinate with 
that of the destination. The packet is forwarded to node 6, 
26
in the directions of east-north, west-north, west-south, and 
east-south, respectively. The four virtual lines,  Axis_Ⅰ, 
Axis_Ⅱ, Axis_Ⅲ, and Axis_Ⅳ, can be considered as the 
guides to aggregate and lead the sensed data to the sink for 
quadrantsⅠ, Ⅱ, Ⅲ, and Ⅳ, respectively.  In the inter-cell 
routing scheme, a cell head u is responsible to use ABVCap 
routing to route the sensed data to the next cell head toward 
the nodes in the virtual line of the corresponding quadrant if 
u is not in the virtual line; otherwise, u is responsible to use 
ABVCap routing to route the sensed data to the next cell 
head toward the sink. An example is illustrated as below. Let 
the virtual coordinate of a cell head u in GFESR be (I, 1, 5).  
Because the virtual coordinate (I, 1, 5) is not in any virtual 
line, u will route the sensed data to the next cell head toward 
the virtual line. So u will use ABVCap routing to route the 
data to the cell head having virtual coordinate (I, 2, 4) in 
GFESR whose virtual coordinate used in ABVCap can be 
calculated according to Equations 1 and 2. The cell head 
having virtual coordinate (I, 2, 4) in GFESR then sends the 
data to the cell head having virtual coordinate (I, 3, 3) in 
GFESR. Because the cell head having virtual coordinate (I, 3, 
3) in GFESR is in a virtual line, the cell head then sends the 
data to the next cell head having virtual coordinate (I, 2, 2) 
toward the sink. The data then be sent from the cell head 
having virtual coordinate (I, 2, 2), through the cell head 
having virtual coordinate (I, 1, 1), to the sink. 
IV. CONCLUSION AND FUTURE WORK 
In this paper, a GPS-free event-to-sink routing scheme 
for data aggregation in wireless sensor networks (GFESR) is 
proposed. In GFESR, the events in the same cell are 
aggregated by intra-cell routing scheme and the events in 
different cells are aggregated by inter-cell routing scheme. 
Future research will include research into guaranteeing 
packet delivery for data aggregation in wireless sensor 
networks. Additional research includes the study of data 
aggregation in mobile sensor networks. 
 
 
Figure 3. An overview of inter-cell routing scheme 
ACKNOWLEDGMENT 
This work was supported by the National Science 
Council under the Grant NSC 100-2221-E-151-039.  
REFERENCES 
[1] I. F. Akyildiz, W. Su, Y. Sankarasubramaniam and E. Cayirci, “A 
Survey on Sensor Networks” IEEE Communications Magazine, vol. 
40, no. 8, pp. 102-114, 2002. 
[2] Y. Yang, M. I. Fonoage and M.Cardei “Improving network lifetime 
with mobile wireless sensor ” ACM Computer Communications, vol. 
33, no. 4, pp. 409-419, 2010.  
[3] X. Tang and J. Xu “Optimizing lifetime for continuous data 
aggregation with precision guarantees in wireless sensor networks” 
IEEE/ACM Transactions on Networking, vol. 16 no. 4, pp. 904-917, 
2008.  
[4] K. Kalpakis, K. Dasgupta and P. Namjoshi “Efficient algorithms for 
maximum lifetime data gathering and aggregation in wireless sensor 
networks” Computer Networks, vol. 42, no. 6, pp. 697-716, 2003. 
[5] A. Mohanoor, S. Radhakrishnan and T. Hughes “Vector Based 
Adaptive Sampling in Wireless Sensor Networks” in Proc. IEEE 
CCNC 2010, pp. 1-2, 2010. 
[6] N. Sun, N. B. Su and S. H. Lee “A Lifetime Extended Routing 
Protocol Based on Data Threshold in Wireless Sensor Networks” in 
Proc. IEEE CIT 2010, pp. 743-748, 2010.  
[7] S. Fauji and K. Kalpakis “A gossip-based energy efficient protocol 
for robust in-network aggregation in wireless sensor networks” in 
Proc. IEEE PERCOM Workshops,  pp. 116-171, 2011. 
[8] A. A. Abbasi and M. Younis, “A Survey on Clustering Algorithms 
for Wireless Sensor Networks” ACM Computer Communications, vol. 
30, no. 14-15, pp. 2826-2841, 2007. 
[9] Z. Zheng, Z. Wu and H. Lin, “An Event-Driven Clustering Routing 
Algorithm for Wireless Sensor Networks,” in Proc. IEEE/RSJ IROS 
2004, pp. 1802-1806, 2004. 
[10] S. Bandyopadhyay and E.J. Coyle “An energy efficient hierarchical 
clustering algorithm for wireless sensor networks” in Proc. IEEE 
INFOCOM 2003, pp. 1713-1723, 2003.  
[11] O. B. Akan and I. F. Akyildiz “Event-to-sink reliable transport in 
wireless sensor networks” IEEE/ACM Transactions on Networking, 
vol. 13, no. 5, 2005. 
[12] E.B. Hamida and G. Chelius “Strategies for data dissemination to 
mobile sinks in wireless sensor networks” IEEE Wireless 
Communications, vol. 15, no. 6, pp. 31-37, 2008. 
[13] A. Bereketli and O. B. Akan, “Event-to-Sink Directed Clustering in 
Wireless Sensor Networks,” in Proc. IEEE WCNC 2009, pp. 1-6 ,  
2009. 
[14] M. J. Tsai, H. Y. Yang, B. H. Liu and W. Q. Huang, “Virtual-
Coordinate-Based Delivery-Guaranteed Routing Protocol in Wireless 
Sensor Networks” IEEE/ACM Transactions on Networking, vol. 17, no. 
4, pp. 1228–1241, 2009. 
[15] Y. Wu, Z. Mao, S. Fahmy and N. B. shroff, “Constructing Maximum-
Lifetime Data-Gathering Forests in Sensor Networks” IEEE/ACM 
Transactions On Networking, vol. 18, no. 5 pp. 1571-1584, 2010. 
[16] H. O. Tan, I. Korpeoglu and I. Stojmenovic, “Computing Localized 
Power-Efficient Data Aggregation Trees for Sensor Networks,” IEEE 
Transactions on Parallel and Distributed Systems, vol. 22, no. 3, pp. 
489-500, 2011. 
 
28
應用於具障礙物移動感測網路之利益點覆蓋方式 
 
王維聖     莊英宏         蘇國文        張峻瑜         劉炳宏 
國立高雄應用科技大學電子工程系 
bhliu@cc.kuas.edu.tw 
 
摘要 
利益點(points of interest)覆蓋為移動感測網路
中典型的覆蓋問題，其中如何建立移動感測網路以
覆蓋動態利益點並最大化利益點覆蓋品質為近年
來一個相當重要之議題。然而現實生活中因受到地
形地物影響而導致有障礙物存在，但之前研究無法
對具有障礙物之移動感測網路提供適當佈署方
式，因此本論文提出的方法以提供具障礙物移動感
測網路利益點覆蓋並最大化覆蓋質量為目的。當障
礙物為已知的情況下，我們利用矩形包覆障礙物，
並計算選擇一條最短路徑繞過障礙物;當障礙物為
未知的情況下，利用感測器感應功能偵測障礙物之
存在，並沿著障礙物邊緣依序佈署感測器。 
關鍵詞：移動感測網路、覆蓋、佈署、利益點、
障礙物。 
Abstract 
 The coverage of the points of interest (PoI) is a 
typical coverage problem in mobile sensor networks. 
How to construct a mobile sensor network to cover 
dynamic PoI and to maximize the quality of the 
coverage of PoI is a quite important issue. In real life, 
many obstacles exist in mobile sensor networks due 
to the influence of the terrain and ground object. 
However, the previous research is hard to deploy 
mobile sensors to cover dynamic PoI in the networks 
with obstacles. In this paper, a method of deploying 
mobile sensors to cover PoI and maximizing the 
quality of the coverage of PoI is presented. If the 
information of obstacle is known, a fitted rectangle is 
used to cover the obstacle. A shortest path that is able 
to lead the mobile sensors to detour around the 
obstacle is then calculated and obtained by the 
rectangle. If the information of obstacle is unknown, 
the mobile sensors use sensing ability to detect 
obstacles and are deployed along the boundary of 
obstacles. 
Keywords: Mobile sensor networks, Coverage, 
Deployment, Points of interest, Obstacles. 
1. 前言 
在無線感測網路 (wireless sensor networks) 
[1]，感測器可以偵測環境或目標的改變與收集周
遭的資訊，並將接收到的資訊處理，以單一跳躍
(single-hop) [2] 或多重跳躍(multi-hop) [3] 的無線
傳輸方式轉送給收集中心 (sink)或基站 (base 
station)。感測器有許多應用，例如:環境監測、火
災探測、入侵檢測、醫療保全等等。當感測器具有
移動能力 [4] [5] [6]，其所能展現的功能更為強
大，移動的無線感測網路一般可分為兩種，一種為
網路中所有感測節點都可移動，但是這些節點只能
有限的移動以保持網路的穩定；另一種則是大多數
的感測節點仍是靜止的，只有部分節點是可移動
的，在這種網路中靜止的節點負責數據的傳遞，而
移動的節點則負責收集資訊並傳送到基站 (base 
station)。感測節點可以佈署在許多人類不容易到達
或是較危險的環境中取得周圍的資訊，因此覆蓋問
題是基礎且重要的議題。 
完全覆蓋 [7] 為覆蓋問題的其中一種，其定
義為給定一個區域，且區域內所有的感測器必須可
監控該區域內所有的子區域，也就是感測節點必須
能覆蓋整個區域。Ke 等人 [8] 感測網路規劃成關
鍵區域以及非關鍵區域，他們提出方法來覆蓋所有
關鍵區域並讓整個無線感測網路維持連通狀態。柵
欄覆蓋 [9] 主要在於監測入侵者的資訊，以大量
的感測節點將一個特定區域覆蓋使之成為一屏
障，且所有可能穿越此區域的入侵者都最少會被一
個感測器所偵測，並將此資訊傳給監測方。Chen
等人 [10] 提出一 LBCP 協議，能以區域柵欄覆蓋
達到接近完全柵欄覆蓋的效果，且以此減少感測器
數量藉此達到提高網路壽命。He 和 Shi [11] 提出
一分散式的演算法，可以找到最大數量的不相交的
柵欄覆蓋，且此算法適用於任何規模且具有較低的
複雜度。但上述研究皆適用於靜態的無線感測網
路，且其方法無法直接應用於移動感測網路上。 
掃描覆蓋 [12] 則是在一感測網路中會有一
個或多個移動節點來回監測目標區域，所以此覆蓋
方法適用於移動感測網路。Chu 等人 [13] 將整個
網路分為多個子區域，且以少量的移動節點以巡邏
方式掃描所有區域，並以巡邏點演算法將每個子區
域所設置的移動感測器以相近的時間同時巡邏。
Li 等人 [14] 研究移動感測網路的掃描覆蓋，他們
證明尋找每次掃描的時間內需要最少的感測器數
量是 NP-hard 問題，並提出一演算法以找到較少數
量的感測器佈署方式。Du 等人 [15] 針對掃描覆
蓋問題提出方法以分別降低路徑距離及移動感測
器使用量，然而以上之研究皆需掃描的 PoI 點或區
域為固定不變。 
在考量 PoI 點可隨時間地點而變動的前提之
下，Erdelj 等人 [16] 提出移動感測網路利益點覆
蓋之問題及解法，此方法能在基站與利益點之間的
路徑上佈署少量的感測器數量，並保持彼此之間的
連通性，以增加利益點的覆蓋品質。然而現實生活 
  
 
 
 
 
 
 
 
 
 
 
 
 在本研究中，感測節點最初是集中在基站附
近，且基站和利益點是預先假設的固定點，另外，
假設障礙物的位置為已知或完全未知，則我們研究
問題中將分別對已知及未知障礙物分別處理。 
3.2 方法 
在本方法中，假如沒有已知或偵測到的障礙物
時，則主要使用 Milan Erdelj 等人的方法 [16] 。
即所有感測節點一開始都是透過基站發送資訊得
到利益點的座標位置，再經由感測器彼此之間做運
算且傳遞訊息，來進行移動的動作，感測器與感測
器之間的移動距離須計算過後得到 d 值，再藉由 d
值的大小決定移動的距離單位，所以感測器的移動
距離是有受到限制的。式子(1)顯示原始的函式。 
      
( )
2
R d u
d

              (1) 
其中 d 代表感測器的移動距離， R 代表感測器的
通訊範圍， ( )d u 代表在 RNG 中從感測節點 u 到
相鄰最遠節點的距離。在根據 PDA 演算法求得移
動距離來佈署節點。 
當障礙物出現時，我們把問題分為兩個部分探
討，第一部分為障礙物為基站所已知，第二部分為
障礙物的資訊對基站而言是未知的。 
(1) 障礙物為已知 
當基站已知有障礙物存在，則基站至利益點之
間的連線稱為虛擬線，當有感測器移動至虛擬線 
時，則可得知若沿虛擬線佈署則必遇到障礙物，為
避開障礙物，首先我們先利用一個大小適中的矩形 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
L×W 來包覆此障礙物，由於障礙物相關資訊為已
知，故可得此矩形的四個頂點座標，分別為 V1, V2, 
V3以及 V4，皆可為基站及感測器所知。 
接下來即判斷繞過障礙物的行走路線，我們可
依據虛擬線分割矩形的大小來決定行走路線，以期
達到最短路徑佈署之目的，由於此矩形為 L×W，
故必有兩邊為 L 和兩邊為 W，不失一般性假設虛
擬線穿越矩形的左半邊和右半邊的 W，如圖 4 所
示，左半邊被虛擬線分割的上半部為 W1、下半部
為 W1’，右半邊被虛擬線分割的上半部為 W2、下
半部為 W2’。當要判斷繞過障礙物的最短路徑屬於
上半部或下半部時，我們藉由計算可得知經由上半
部(或下半部)繞過矩形的距離總和。式子(2)顯示此
計算方式。 
  S = W1+W2+L 
     S’ = W1’+W2’+L               (2) 
其中 
  L 表示矩形的長邊長， 
  S 表示上半部的距離總和， 
  S’表示下半部的距離總和， 
      W1表示左半邊上半部的長度， 
      W1’表示左半邊下半部的長度， 
      W2表示右半邊上半部的長度， 
      W2’表示右半邊下半部的長度。 
根據 S 與 S’的值去比較之間的大小，便可得知繞
過障礙物的最短佈署路徑。 
當獲得這些資訊之後，基站發送利益點座標位
置訊息給每個感測節點，而感測節點執行佈署的動
作依照感測節點之間與利益點位置計算出的 d 值 
x
u
v
w
R PoI
Base Station
dp
 
(a) 
dp
x
u
v
w
R
PoIBase Station
 
(c) 
x
u
v
w
R
PoIBase Station
 
(b) 
x
u
v w
R PoIBase Station
 
(d) 
 
 
 
 
 
 
圖3. 感測節點移動範例 (a)感測器v決定移動至灰色圓圈處 (b)感測器v移動後的結果 (c)感測器w決定移
動至灰色圓圈處 (d)感測器w移動後的結果 
感測節點的方式，並分別對已知障礙物以及未知障
礙物來做探討。對已知障礙物採用的是利用適當的
矩形來包覆障礙物，再由感測節點彼此之間計算出
最大的移動距離，且選擇一條最短路徑繞過障礙物
來達到利益點覆蓋，這樣的模型能夠藉由減少感測
器佈署的數量，來降低整體網路的能量及成本的消
耗。對未知障礙物採用的是利用感測節點每次佈署
時，感測附近是否有障礙物出現，當感測到障礙物
出現時，將沿著障礙物的邊緣依序佈署感測節點進
行每一次的感測移動，進而繞過障礙物來達到利益
點覆蓋。我們的佈署目標為盡量減少感測器數量來
進行連通，從而提高對利益點的最大覆蓋率。未來
研究包括在非單位圓盤網路中如何進行移動佈
署，另外的研究則包括當網路故障時，感測節點如
何在最短時間內能夠找到最佳的解決方式來達到
修復機制。 
5. 誌謝 
 本研究為「一種用來建立能完全覆蓋關鍵區
域的最小型無線感測網路的有效率演算法」之計畫
(計畫編號：NSC 100-2221-E-151-039)之部分研究
成果，在此謹向國科會致謝。 
參考文獻 
[1] Cheng, T.M., and Savkin, A.V., "Decentralized 
control of mobile sensor networks for 
triangular blanket coverage" American Control 
Conference (ACC),  pp. 2903–2908, 2010. 
[2] Mai Vu, and Vahid Tarokh, "Scaling Laws of 
Single-Hop Cognitive Networks" IEEE 
Transactions on Wireless Communications, vol. 
8, no. 8,  pp. 4089–4097, Aug. 2009. 
[3] Ping Wang, Hai Jiang, Weihua Zhuang, and H. 
Vincent Poor, "Redefinition of max-min 
fairness in multi-hop wireless networks" IEEE 
Transactions on Wireless Communications, vol. 
7, no. 12,  pp. 4786–4791, Dec. 2008. 
[4] Yi Zou, and Krishnendu Chakrabarty, 
"Distributed Mobility Management for Target 
Tracking in Mobile Sensor Networks" IEEE 
Transactions on Mobile Computing, vol. 6, no. 
8,  pp. 872–887, Aug. 2007. 
[5] Wei Wang, Vikram Srinivasan, and Kee-Chaing 
Chua, "Coverage in Hybrid Mobile Sensor 
Networks" IEEE Transactions on Mobile 
Computing, vol. 7, no. 11, pp. 1374–1387, Nov. 
2008. 
[6] Linghe Kong, Xuemei Liu, Zhi Li, and 
Min-You Wu, "Automatic Barrier Coverage 
Formation with Mobile Sensor Networks" 
IEEE International Conference on 
Communications (ICC), pp.1–5, 2010. 
[7] Xiaole Bai, Chuanlin Zhang, Dong Xuan, and 
Weijia Jia, "Full-Coverage and k-Connectivity 
(k = 14, 6) Three Dimensional Networks" 
IEEE INFOCOM 2009, pp. 388–396. 
[8] Wei-Chieh Ke, Bing-Hong Liu, and Ming-Jer 
Tsai, "Efficient Algorithm for Constructing 
Minimum Size Wireless Sensor Networks to 
Fully Cover Critical Square Grids" IEEE 
Transactions on Wireless Communications, vol. 
10, no.4, pp. 1154–1164, Apr. 2011. 
[9] Anwar Saipulla, Cedric Westphal, Benyuan Liu, 
and Jie Wang, "Barrier Coverage of 
Line-Based Deployed Wireless Sensor 
Networks" IEEE INFOCOM 2009, pp. 
127–135. 
[10] Ai Chen, Santosh Kumar, and Ten H. Lai, 
"Local Barrier Coverage in Wireless Sensor 
Networks" IEEE Transactions on Mobile 
Computing, vol. 9, no. 4,  pp. 491–504, Apr. 
2010. 
[11] Jun He, and Hongchi Shi, "A distributed 
algorithm for finding maximum barrier 
coverage in wireless sensor networks" IEEE 
Global Telecommunications Conference 
(GLOBECOM 2010), pp. 1–5, 2010. 
[12] Min Xi, Kui Wu, Yong Qi, Jizhong Zhao, 
Yunhao Liu, and Mo Li, "Run to Potential: 
Sweep Coverage in Wireless Sensor Networks" 
International Conference on Parallel 
Processing, pp. 50–57, 2009. 
[13] Hung-Chi Chu, Wei-Kai Wang, and Yong-Hsun 
Lai, "Sweep Coverage Mechanism for Wireless 
Sensor Networks with Approximate Patrol 
Times" Ubiquitous Intelligence & Computing 
and 7th International Conference on 
Autonomic & Trusted Computing (UIC/ATC), 
pp. 82–87 2010. 
[14] Mo Li, Weifang Cheng, Kebin Liu, Yuan He, 
Xiang-Yang Li, and Xiangke Liao, "Sweep 
Coverage with Mobile Sensors" IEEE 
Transactions on Mobile Computing, vol. 10, no. 
11, pp. 1534–1545, Nov. 2011. 
[15] Junzhao Du, Yawei Li, Hui Liu, and Kewei Sha, 
"On Sweep Coverage with Minimum Mobile 
Sensors" IEEE International Conference on 
Parallel and Distributed Systems (ICPADS), pp. 
283–290, 2010. 
[16] Milan Erdelj, Tahiry Razafindralambo, and 
David Simplot-Ryl, "Covering Points of 
Interest with Mobile Sensors" IEEE 
Transactions on Parallel and Distributed 
Systems, 2012. 
[17] G. T. Toussaint. The relative neighbourhood 
graph of a finite planar set. Pattern 
Recognition, vol. 12, no. 4, pp. 261 – 268, 
1980. 
 2
 
 以下檢附幾張參加會議的代表性照片。 
 
Figure 1.抵達會場照片 
 
 
 
 
 
 
Figure 2.報告論文中的照片 
 
 
 The Sixth International Conference on Genetic and  
Evolutionary Computing 
August 25-28, 2012, Kitakyushu, Japan 
http://bit.kuas.edu.tw/~icgec12 
Dear Prof./Dr./Ms./Mr. Bing-Hong Liu, 
Thank you for your submission to the Sixth International Conference on Genetic and Evolutionary 
Computing (ICGEC-2012), to be held on August 25-28, 2012, in Kitakyushu, Japan. We are pleased to 
inform you that your paper 
ID No.: ICGEC-2012-IS14-04 
Title: An Improved Method of Constructing a Data Aggregation Tree in Wireless Sensor 
Networks 
Author(s): Bing-Hong Liu, Ying-hong Jhuang, Li-Ping Tung, and Jyun-Yu Jhang 
has been accepted for presentation in ICGEC-2012. Your paper will be published in the conference 
proceeding with the Conference Publishing Services of the IEEE Computer Society. Please do take the 
comments and suggestions of the reviewers into account in the revision to further improve the quality 
of your paper. Please refer to http://bit.kuas.edu.tw/~icgec12 for further information regarding the 
conference registration and to the online Author Guide at http://bit.kuas.edu.tw/~icgec12 for detailed 
procedures in the preparation of your camera-ready copy and copyright release form. Both deadlines 
are July 7, 2012. 
We are looking forward to meeting you in Kitakyushu. Further information on ICGEC-2012 can be 
obtained from the conference web sites: http://bit.kuas.edu.tw/~icgec12 
 
Sincerely Yours, 
 
Chin-Shiuh Shieh, Program Committee Chair 
National Kaohsiung University of Applied Sciences, Taiwan 
 
Junzo Watada, Conference Chair 
Waseda University, Japan 
 
II. PRELIMINARIES
In this paper, we follow the network model for data
aggregation in wireless sensor networks in [10]. In this
model, a network is represented as a connected weighted
graph G(VG, EG, wG), where v ∈ VG denotes a sensor in
the networks, edge (u, v) ∈ EG indicates that u and v are
neighbors, and wG(v) ∈ Z+0 , the weight of node v ∈ VG,
denotes the size of the data reported by v to sink r ∈ VG.
In the networks, every node v needs to periodically report
the data with size wG(v) to sink r via a routing tree if
wG(v) = 0. In G, a routing tree T (VT , ET ) is constructed
and rooted at sink r, where VT ⊆ VG and ET ⊆ EG. Let
α ∈ Z+ be the aggregation ratio, denoting the maximum
size of reports allowable to be aggregated into one packet.
While sending data via the routing tree, the data collected or
generated by node v is aggregated by the aggregation ratio
α. In addition, the data aggregated by v is forwarded to the
parent node of v in T .
Let Tx and Rx be the energy cost required to transmit and
receive a packet, respectively. The Minimum Energy-Cost
Aggregation Tree with Relay Nodes (MECAT RN) problem
[10] is illustrated as follows:
INSTANCE: A graph G(VG, EG, wG), a sink r ∈ VG,
an aggregation ratio α ∈ Z+, Tx ∈ R+, Rx ∈ R+, and
C ∈ R+.
QUESTION: Find a routing tree T (VT , ET ) with root r
and U ∪{r} ⊆ VT in G such that the total transmission and
reception energy cost consumed by all sensors is not greater
than C, where U denotes the set of v for all v ∈ VT with
wG(v) = 0.
Take Fig. 1 for example. Fig. 1(a) shows a wireless sensor
network represented by a connected weighted graph G. In
Fig. 1(a), G consists of six nodes and node a is the sink.
In addition, the data reported by each of nodes e and f
is one unit, that reported by node b is four units, and that
reported by the other nodes each are zero unit. Assume that
the aggregation ratio α in this example is three. In Fig. 1(b),
T1 is a shortest path tree in graph G. Assume that the energy
cost consumed to transmit or receive a packet is one, that is,
Tx = Rx = 1. Because the size of data units generated by
node b is four and the aggregation ratio is three, two packets
are required to be sent by node b. The total transmission and
reception energy cost of sending the two packets from node
b to node a is 2×2×1 = 4. In addition, because the length
of the path in T1 from node e (or, f ) to node a is two, the
total transmission and reception energy cost of sending the
packet from node e (or, f ) to node a is 1 × 2 × 2 = 4.
Therefore, the total transmission and reception energy cost
consumed by all sensors is twelve. Fig. 1(c) and Fig. 1(d)
show other two routing trees in G. It is easy to verify that
the total transmission and reception energy cost consumed
by all sensors in T2 and T3 are ten and eight, respectively.
It is obvious that T3 is a optimal solution of this instance
for MECAT RN problem.
III. THE RECONSTRUCTION METHOD
The total energy cost, including transmission and recep-
tion energy cost consumed by all sensors, of a routing tree
can be reduced by reconstructing the tree topology. Take Fig.
1 for example. Fig. 1(a) shows a graph G whose sink is node
a; and Figs. 1(b)-1(d) show three routing trees T1, T2, and
T3 in graph G, respectively. Assume that the aggregation
ratio α in this example is three and Tx = Rx = 1. T2 can
be constructed by adding edge (e, b) to T1 and deleting edge
(e, c) from T1, where the total energy cost of T1 is twelve
and that of T2 is ten. Hereafter, the process of changing
the tree topology T is called the reconstruction process. Let
u.parentT denote the parent node of u in tree T . When
a u, v-pair ((u, v) ∈ EG − ET ) executes a reconstruction
process, edge (u, v) is added to T and edge (u, u.parentT )
is deleted from T . In the reconstruction process, deleting
edge (u, u.parentT ) from T is in an attempt to break
the loop introduced by the new tree edge (u, v). In Fig.
1(b), when edge (e, b) is added to T1, a loop e, b, a, c is
introduced. It is easy to verify that the loop is broken if
edge (e, e.parentT1), namely (e, c), is deleted.
The total energy cost of a routing tree can be reduced
depending on which pair executes a reconstruction process.
In Fig. 1(b), the total energy cost of T1 cannot be reduced
if the b, c-pair executes a reconstruction process. This is
because if edge (b, c) is added to T1 and edge (b, a) is
deleted from T1, the total energy cost of T1 is fourteen.
It then goes to deﬁne the proﬁt value of the u, v-pair
((u, v) ∈ EG −ET ), profit(u, v), to indicate how much of
the total energy cost a reconstruction process executed by
the u, v-pair can reduce. It is clear that profit(u, v) is equal
to the energy difference before and after a reconstruction
process executed by the u, v-pair. For example, in Fig. 1(b),
profit(e, b) = 2 because a reconstruction process executed
by the e, b-pair reduces the energy cost two in T1.
Algorithm 1 shows the Reconstruction algorithm used to
reduce the total energy cost of an existing routing tree.
The algorithm checks all possible u, v-pair and executes a
reconstruction process if profit(u, v) > 0. After completing
the algorithm, if the leaves in tree T are zero-weighted, the
leaves can be deleted from T because these nodes have no
data required to be reported to sink.
IV. SIMULATION RESULT
In this simulation, 100 connected networks were gener-
ated by randomly deploying 400 nodes in 200× 200 square
areas, where sink locates at the center of the networks. Let
γ (0 ≤ γ < 1) denote the relay-node ratio. In the networks,
there was a probability of γ that a node became a relay node.
The node in networks was assigned an integer weight from
the interval [1, β] if the node was not a relay node; otherwise,
the node was assigned weight zero, where β denotes the
3495
the shortest-path-tree) has due to less data required to be
reported.
Fig. 4 shows the comparison of the total energy costs
between the reduced-shortest-path-tree and the shortest-path-
tree under a different value of the maximum data size (β),
where the relay-node ratio (γ) is 50% and the aggregation
ratio (α) is 20. As the same observations in Figs. 2 and 3, the
reduced-shortest-path-tree has lower cost than the shortest-
path-tree. In addition, the greater the maximum data size,
the higher total energy cost the reduced-shortest-path-tree
(or, the shortest-path-tree) has due to more data required to
be reported to sink.
ı
Ķıı
Ĳııı
ĲĶıı
ĳııı
ĳĶıı
Ĵııı
ĴĶıı
ĵııı
ĳ ĵ ķ Ĺ Ĳı Ĳĳ Ĳĵ Ĳķ ĲĹ ĳı
ŢŨŨųŦŨŢŵŪŰůġųŢŵŪŰ
ŵŰ
ŵŢ
ŭġŦ
ůŦ
ųŨ
źġ
ŤŰ
Ŵŵ
ŔũŰųŵŦŴŵĮőŢŵũĮŕųŦŦ
œŦťŶŤŦťĮŔũŰųŵŦŴŵĮőŢŵũĮŕųŦŦ
Figure 2. A comparison of the total energy costs under a different value
of aggregation ratio (α).
ı
ĳıı
ĵıı
ķıı
Ĺıı
Ĳııı
Ĳĳıı
Ĳĵıı
Ĳķıı
ĶĦ ĲıĦ ĲĶĦ ĳıĦ ĳĶĦ ĴıĦ ĴĶĦ ĵıĦ ĵĶĦ ĶıĦ
ųŦŭŢźĮůŰťŦġųŢŵŪŰ
ŵŰ
ŵŢ
ŭġŦ
ůŦ
ųŨ
źġ
ŤŰ
Ŵŵ
ŔũŰųŵŦŴŵĮőŢŵũĮŕųŦŦ
œŦťŶŤŦťĮŔũŰųŵŦŴŵĮőŢŵũĮŕųŦŦ
Figure 3. A comparison of the total energy costs under a different value
of relay-node ratio (γ).
V. CONCLUSION
In this paper, we follow the network model for data aggre-
gation in wireless sensor networks in [10]. In order to reduce
the total energy cost, we propose a Reconstruction algorithm
to reconstruct a routing tree. In the simulations, we apply
our proposed algorithm on a shortest-path-tree to reconstruct
a routing tree, termed the reduced-shortest-path-tree. Then,
we compared the performance of the reduced-shortest-path-
tree with the original one in terms of total energy cost. The
simulation results shows that the reduced-shortest-path-tree
has lower total energy cost than the original shortest-path-
tree.
ı
Ķıı
Ĳııı
ĲĶıı
ĳııı
ĳĶıı
Ĵııı
ĴĶıı
Ĵ ķ ĺ Ĳĳ ĲĶ ĲĹ ĳĲ ĳĵ ĳĸ Ĵı
ťŢŵŢġŴŪŻŦ
ŵŰ
ŵŢ
ŭġŦ
ůŦ
ųŨ
źġ
ŤŰ
Ŵŵ
ŔũŰųŵŦŴŵĮőŢŵũĮŕųŦŦ
œŦťŶŤŦťĮŔũŰųŵŦŴŵĮőŢŵũĮŕųŦŦ
Figure 4. A comparison of the total energy costs under a different value
of maximum data size (β).
ACKNOWLEDGMENT
This work was supported by the National Science Council
under the Grant NSC 100-2221-E-151-039.
REFERENCES
[1] A. Gionis, H. Mannila, and P. Tsaparas, “Clustering aggrega-
tion,” ACM Trans. Knowl. Discov. Data, vol. 1, no. 1, March
2007.
[2] J. Kamimura, N. Wakamiya, and M. Murata, “Energy-efﬁcient
clustering method for data gathering in sensor networks,” IEIC
Technical Report, vol. 103, no. 691, pp. 31–36, 2004.
[3] M. Dhanaraj and C. S. R. Murthy, “On achieving maximum
network lifetime through optimal placement of cluster-heads in
wireless sensor networks,” IEEE ICC, pp. 3142–3147, 2007.
[4] M. Lee and V. W. S. Wong, “LPT for data aggregation in
wireless sensor networks,” IEEE GLOBECOM, pp. 2969–
2974, 2005.
[5] M. Lee and V. W. S. Wong, “An energy-aware spanning tree
algorithm for data aggregation in wireless sensor networks,”
IEEE PACRIM, pp. 300–303, 2005.
[6] Y. Wu, Z. Mao, S. Fahmy, and N. B. Shroff, “Constructing
maximum lifetime data-gathering forests in sensor networks,”
IEEE/ACM Transactions on Networking, vol. 18, no. 5, pp.
1571–1584, 2010.
[7] S. Pattem, B. Krishnamachari, and R. Govindan, “The impact
of spatial correlation on routing with compression in wireless
sensor networks,” International Symposium on Information
Processing in Sensor Networks (IPSN), pp. 28–35, 2004.
[8] F. Chen, Y. Shen, J. Liu, and F. Wen, “Nonthreshold-based
node level algorithm of data compression over the wireless sen-
sor networks,” International Conference on Signal Processing
Systems (ICSPS), pp. 223–227, 2010.
[9] N. Kimura and S. Latiﬁ, “A survey on data compression
in wireless sensor networks,” International Conference on
Information Technology: Coding and Computing, pp. 8–13,
2005.
[10] T. W. Kuo and M. J. Tsai, “On the construction of data
aggregation tree with minimum energy cost in wireless sensor
networks: np-completeness and approximation algorithms,”
IEEE INFOCOM, pp. 2591–2595, 2012.
35147
100 年度專題研究計畫研究成果彙整表 
計畫主持人：劉炳宏 計畫編號：100-2221-E-151-039- 
計畫名稱：一種用來建立能完全覆蓋關鍵區域的最小型無線感測網路的有效率演算法 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 1 1 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 3 3 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 2 2 100%  
研究報告/技術報告 0 0 100%  
研討會論文 2 2 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
