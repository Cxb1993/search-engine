 1.  中文摘要 
  本計畫在計算三維電路晶片的成本後，提出
了一個層數預估的方法。自動化分割一個原始電
路 (gate-level netlist)成多層數的三維積體電路，
使此電路設計的單一晶片製造成本最小。此方法
由最佳層數預估法及應用於三維積體電路的多階
層電路分割演算法所組成。最佳層數預估法是以
製程及晶片上的連線關係為基礎。在層數預估之
後，我們使用多階層的 framework對電路進行
coarsen，並在un-coarsening的過程中，對每個階
層的電路進行K-layer的分割演算法。在 finest 
level進行完K-layer分割演算法之後，我們使用
Bi-partitioning group refinement進一步減少矽穿
孔 (Through Silicon Vias)的數目，目的是使電路
設計的總成本最小。我們使用八個工業用電路作
實驗，實驗結果顯示我們提出的演算法可有效找
出成本少、晶片面積小的結果。 
 
關鍵字：三維積體電路分割、成本、矽穿孔、自
動化分割、最佳層數預估 
 
Abstract 
After evaluating costs of 3D ICs, we propose a 
layer prediction method to automatically partition a 
gate-level netlist into a multilayer 3D IC such that 
the total cost of the design is minimized. The 
method is composed of a Best_layers prediction and 
multilevel multilayer partition for a 3D IC. The 
Best_layers prediction is based on the 
manufacturing process and the die connectivity. 
After prediction, we utilize a multilevel framework 
to coarsen the netlist successively. A K-layer 
partitioning procedure is applied on each level of 
partition during the un-coarsening process. At the 
finest level of K-layer partitioning, we use a Bi-
Partition group refinement to further reduce the 
number of TSVs. The objective is to minimize the 
total cost of the design. The experimental results 
show that the proposed algorithm can effectively 
produce good results with small cost, chip area for 8 
industrial cases. We get the best result on this 
subject in the IC/CAD 2010 contest in Taiwan [1]. 
Key word: Three dimensional integrated circuits 
partition; Cost; Through Silicon Via(TSV); 
automatically partition; Best_layers prediction 
2.  INTRODUCTION 
      Recently, the emerging 3D integration 
technology has become one of very important topics 
in semiconductor industry. 3D ICs have the 
following advantages: shorter global wire length, 
smaller power consumption, and better performance 
of a chip [2,3]. 
      To construct a 3D IC, the circuit is divided into 
N sub-circuits. These sub-circuits are then stacked 
in three dimensional layers. Circuit partition is the 
first phase in the 3D ICs physical design process. It 
divides a large circuit into N sub-circuits which will 
be placed into different layers. The signals belong to 
different layers are connected by Through Silicon 
Vias (TSVs).  
    Since the cost of a product is the most important 
issue for a company to survive. For a new IC 
product, whether to partition the circuit into 
multiple layers or not is very difficult for a decision 
maker to determine without any help of cost 
analysis tools. So we proposed a method to 
automatically evaluate the costs of both 2D and 3D 
of a design, and find the minimum cost of this 
design [4,5]. 
The rest of this paper is organized as follows. 
Section II presents the problem description. The 
details of the prediction method and the multilevel 
multilayer partition will be described in Section III. 
行政院國家科學委員會專題研究計畫成果報告 
三維積體電路實體設計自動化方法研究(I) 
計畫編號：NSC 98-2221-E-033 -056 - 
執行期限：98年8月1日 ～ 99年7月31日 
主持人：陳美麗 中原大學資訊工程系教授 
1) Less-TSV Prediction Method 
This method is applied to the chip with small 
value of total TSV area. To the extreme case, we 
assume the number of TSV is zero and the die areas 
of all layers are the same.  
      From equation (1), we may calculate the cost of 
3D IC of different numbers of layers. The results are 
collected in a table, noted as Zero-TSV Table. The 
total cost of a given layer should be less than the 
total cost of the partitioned result of the same 
number of layers. The Zero-TSV Table of circuit b1 
is shown in Table II and it is also drawn in Fig. 3. It 
is a “Smiling” curve in green color. 
      Also in Fig. 3 shows the partition results of 
different numbers of layers of b1 in red color. It 
shows the Zero-TSV Table may be used to predict 
the Best_Layers of 3D IC circuits that belong to the 
“Smiling” curve type.  
     Now we define the Best_Layers in the Zero-TSV 
Table as Kmax. We start partition from Kmax.which is 
the initial number of layers of Less_TSV prediction 
method. The initial number of layers is defined as 
Kinitial. In general, when K decreases the number of 
TSV is also decreased. Therefore, after initial 
partition, the partitioning process is repeated with 
K-1 until the cost increased. During the partitioning 
process, if the cost of the partition is less than the 
costs of some specific layers in the Zero-TSV Table, 
then we do not need to perform partition of these 
specific layers. It reduces the range for partitions. 
For example, circuit b1 after partition with K=5 
( the cost is 0.796102 ). Then we do not need to 
perform K=3 and 2 as this listed in Table II.  
 
TABLE II. ZERO-TSV TABLE OF b1 
# of Layers (K) Total Cost (US$) 
1 0.923217376 
2 0.836882908 
3 0.806802251 
4 0.79763372 
5 0.796678741 
6 0.799863133 
7 0.805527304 
 
2) More_TSV Prediction Method 
      Then we analyze the circuit with large total area 
of TSVs. It may occur with either a large TSV cell 
or a large number of TSVs in a chip. In these cases, 
the die area will be increased by the area of TSVs. 
In general, more layers will generate more TSVs 
and the total cost is increased accordingly. 
Therefore, the curve of the total cost relative to the 
number of layers will show an upward trend. This 
type of circuits can not be predicted by the Less-
TSV method. 
b1
0.79
0.795
0.8
0.805
0.81
0.815
0.82
0.825
0.83
0.835
0.84
2 3 4 5 6 7
Number of Layer
3D
 I
C
 C
os
t(
U
S$
)
partition ed
result
Ze ro-TSV
Table
b9
3.7
3.9
4.1
4.3
4.5
4.7
4.9
5.1
5.3
2 3 4 5 6 7 8
Number of Layer
3D
 I
C
 C
os
t(
U
S
$)
partition ed
result
Ze ro-TSV
Table
 
 
 
      Our experiments show that the Best_Layers is 
less for the 3D IC of this type. As shown in Fig. 4, 
we draw the cost of partition and the cost in the 
Zero-TSV Table of circuit b9. It shows that the 
prediction by Zero-TSV Table is not appropriate for 
circuit b9. It also shows the Best_Layers is 3. 
Therefore, for this type of circuits, we start 
partitioning process from K=2 and then perform 
partition with K+1 until the cost increases. At most 
we need to perform partition from K=2 to Kmax 
times. 
3) Selection of Prediction Method 
  By our experiments, we observe that the total 
TSV area could affect the selection of Best_Layers 
prediction method. From equation (2), we know the 
total TSV area is related to the process and the die 
connectivity. 
 
  The total TSV Area is proportional to aTSV. We 
apply two different sizes of TSV on circuit b9 for 
partition. The results are drawn in Fig. 5. It shows 
that we can utilize More_TSV prediction method for 
a larger TSV area (shown in blue), otherwise 
Less_TSV prediction method (shown in red) should 
be applied. It shows if a circuit is manufactured by 
different processes, the suitable prediction method 
may be different. 
  Therefore, we define two parameters: 
(a) process parameter  
cells of area average the
TSV_Cell a of area theRtc =
 
(b) die parameter 
die the of area total the
die a in TSVs of area total theRtd =
 
Figure 4. Total cost associated 
with number of layers of b9 
Figure 3. Total cost associated 
with number of layers of b1 
with less cost. The cost of the 3D IC and the chip 
area of circuit b3 and b5 are the smallest among all 
teams. Compared with Teams 37, 46, 63 and 64, the 
results show that our algorithm achieves averagely 
1%, 0%, 5% and 0% better in 3D IC cost, and 5%, 
2%, 0% and 1% better in chip area, respectively.  
Besides, we compare the result of our partition 
algorithm with previous research work [10]. We use 
the same platform and the same benchmarks in 
reference [10]. The Table VII shows the detail 
information of benchmarks and the Table VIII 
shows the comparison of our results with [10]. We 
can control the area overhead under 5% to find the 
minimal number of TSVs. Compared with 
[10]Team47 and [10], the results shown that our 
algorithm achieves averagely 56% and 20% better 
in number of TSVs, 2% and 1% better in total area, 
and 2% and 0% better in chip area, respectively. 
And our runtime is better 373% than [10]. 
 
 
 
 
 
  
6.  CONCLUSIONS 
We propose a Best_Layers prediction method for 
Min_cost 3D ICs. We choose Less_TSV prediction 
method or More_TSV prediction method according 
to the process and the die connectivity. The 
Best_Layers of our results are exactly the same with 
that of exhaustive partitions. In order to partition a 
circuit and minimize TSVs, we develop an efficient 
multilevel multilayer partition with Bi-partitioning 
refinement program. Our results show that our 
program can produce a low cost 3D IC with small 
memory usage. 
 
 
TABLE III. COMPARISON OF THE RESULTS BETWEEN BEST_LAYERS 
PREDICTION METHOD AND EXHAUSTIVE PARTITIONS 
IO Area (um2) 3600 2700 3000 2700 1800 2700 1800 1800 1350 900 22 
circuit TSV Cell 
 Area (um2) 1600 1600 1000 900 800 600 600 400 225 100 25 
Ours 4 4 4 4 4 4 4 4 5 5 5 b1 
Exhaustive 4 4 4 4 4 4 4 4 5 5 5 
Ours 2 2 2 3 3 3 3 3 3 4 4 b2 
Exhaustive 2 2 2 3 3 3 3 3 3 4 4 
Ours 2 2 2 2 2 2 2 2 3 4 4 b3 
Exhaustive 2 2 2 2 2 2 2 2 3 4 4 
Ours 2 2 2 2 2 2 2 2 2 2 3 b4 
Exhaustive 2 2 2 2 2 2 2 2 2 2 3 
Ours 3 3 3 3 3 5 5 5 5 6 6 b5 
Exhaustive 3 3 3 3 3 5 5 5 5 6 6 
Ours 3 3 3 3 3 3 3 3 6 6 6 b9 
Exhaustive 3 3 3 3 3 3 3 3 6 6 6 
 
TABLE IV. THE IMPROVEMENT OF BI-PARTITION GROUP REFINEMENT. 
# of TSVs Time (sec) 
circuit After  
Coarsen 
& FM 
After Bi-
Partition 
Bi-
Partition 
Total 
Time 
Bi-Partition 
Time / Total 
Time 
Reduced 
number 
of TSVs 
improvement # of Cell 
b5 1422 1331 43.2 452.65 9.54% 91 6.40% 482,189  
b9 1509 489 57.79 445.65 12.97% 1020 67.59% 484,456  
TABLE V. COMPARISON OF THE RESULTS BETWEEN 2D AND 3D 
IMPLEMENTATION OF CIRCUITS. 
circuit 2D Die Area (um2) 
3D Die 
Area (um2) 
# of 
layers 
2D IC Cost 
(US$) 
3D IC Cost 
(US$) 
Cost 
Saving 
b1 5487955.2  5498555.2  5 0.9207  0.7961  13.53% 
b2 5896954.2  5971954.2  4 0.8375  0.7474  10.76% 
b3 22296015.6 23051215.6 2 3.1953 3.1721  0.73% 
b4 11549468.5 13378268.5 2 2.0755 2.0279  2.29% 
b5 33639655.0 35609255.0 3 5.4577 4.7939  12.16% 
b6 56822164.3 60111664.3 4 8.9017 7.6833  13.69% 
b7 26246105.2 28050605.2 3 8.6353 4.7174  45.37% 
b9 30181728.2 30804128.2 3 4.7160  4.1785  11.40% 
Avg.   13.74% 
 
TABLE VI. THE RESULT PROVIDED BY THE SPONSOR OF THE CONTEST [1]. 
3D IC Cost and Chip area results Comparison 
circuit   Team  
37 
Team  
46 
Team  
63 
Team 
 64 ours 
Team  
37 
Team 
46 
Team  
63 
Team 
 64 ours 
3D IC Cost 3.3235 3.3209 3.1763 3.3138 3.1721 1.05  1.05  1.00  1.04  1 b3 
3D Die Area -- -- 23126k -- 23051k -- -- 1.00  -- 1 
3D IC Cost 2.0116 2.013 2.012 2.0234 2.0279 0.99  0.99  0.99  1.00  1 b4 
3D Die Area 13373k 13385k 13375k 13370k 13378k 1.00  1.00  1.00  1.00  1 
3D IC Cost 4.957 4.9612 5.0855 4.9819 4.7939 1.03  1.03  1.06  1.04  1 b5 
3D Die Area 37065k 37062k 35908k 37180k 35609k 1.04  1.04  1.01  1.04  1 
3D IC Cost -- 7.4365 -- 7.4752 7.6833 -- 0.97  -- 0.97  1 b6 
3D Die Area -- 58233k -- 57132k 60112k -- 0.97  -- 0.95  1 
3D IC Cost 4.6417 4.4242 5.4569 4.5754 4.7174 0.98  0.94  1.16  0.97  1 b7 
3D Die Area 31245k 29985k 27278k 29394k 28051k 1.11  1.07  0.97  1.05  1 
 Average 3D Cost comparison 1.01  2.74  1.05  1.00  1 
 Average Chip Area comparison 1.05  1.01  1.00  1.01  1 
 
TABLE VIII. COMPARISON OF THE RESULTS BETWEEN OUR PARTITION 
ALGORITHM AND [10]. 
TSV, Total area, Chip area, Run 
time, Area overhead results Comparison circuit 
[10]Team 47 [10] Ours [10]Team 47 [10] Ours 
# TSVs 663 579 541 1.23  1.07  1  
Total area (um2) 209736 207411 206461 1.02  1.00  1  
Chip area (um2) 221068 211196 213262 1.04  0.99  1  
Run time (sec) 5.3 5 1.19 - 4.20  1 
C1 
Area overhead 5.12% 1.79% 3.19% 1.61  0.56  1 
# TSVs 171 157 106 1.61  1.48  1  
Total area (um2) 1411368 1411018 1409743 1.00  1.00  1  
Chip area (um2) 1412973 1429665 1428682.5 0.99  1.00  1  
Run time (sec) 193 379.5 71.614 - 5.30  1 
C2 
Area overhead 0.11% 1.30% 1.32% 0.08  0.98  1 
# TSVs 501 285 272 1.84  1.05  1  
Total area (um2) 271945.5 266545.5 266220.5 1.02  1.00  1  
Chip area (um2) 283519.5 273211.5 273822 1.04  1.00  1  
Run time (sec) 7.3 11.3 1.905 - 5.93  1 
C3 
Area overhead 4.08% 2.43% 2.78% 1.47  0.87  1 
  Average TSV comparison 1.56  1.20  1  
  Average Total area comparison 1.01  1.00  1  
  Average Chip area comparison 1.02  1.00  1  
  Average Run time comparison - 5.14  1 
  Average Area overhead comparison 1.05  0.81  1 
 
TABLE VII. BENCHMARK CIRCUITS INFORMATION. 
circuit # cells # nets # layers # TSV IO Total Cell Area (um2) 
C1 6291 6511 4 134 162786 
C2 85013 89189 5 13 1404168 
C3 9155 9627 3 96 237820.5 
 
 出席國際學術會議心得報告 
 
 
計畫編號 
 
NSC 98-2221-E-033-056 
計畫名稱 三維積體電路實體自動化方法研究(I) 
出國人員姓名      
服務機關及職稱 中原大學資訊工程系 陳美麗 教授 
會議時間地點 
 
March 22-24, 2010.  San Jose, California, USA. 
會議名稱 2010 11th International Symposium on Quality Electronic Design 
發表論文題目 A Multilevel Multilayer Partitioning Algorithm for Three Dimensional Integrated Circuits 
一、參與會議經過 
第11屆的International Symposium on Quality Electronic Design (ISQED)國際研討會今年在美國加
州的San Jose市舉行，會議日期為2010年3月22日至24日。此研討會參與者包括產業界、學術界及研
究機構的學者專家。研討會的program除了論文發表外，亦有廠商展示及未來產學發展之研究討論。 
本人為此國際研討會之Organizing Committee之台灣代表委員，所以亦參加此委員會對此研討會
的檢討及規劃會議。本人在此會議發表論文“A Multilevel Multilayer Partitioning Algorithm for Three 
Dimensional Integrated Circuits.”。 
 
二、與會心得 
今年的Keynote Speaker共有6位，他們對未來SoC設計、製造的發展趨勢 
提出論述。這六位Keynote Speaker為R. Thiagarajah, Sr. Director of Product and Test Engineering, Inphi 
company，講題為“High Rel by Design – Creating Enterprise Class Memories”，S. Krishnamoorthy, Chief 
Scientist, Place & Route Division, Mentor Graphics company，講題為“The New Challenges of Advanced 
SoC Implementation”，M. Gogolewski, CTO & CFO, Denali Software company，講題為“Beyond Endless 
Verification：Delivering High Quality at Low Expense”，K. Yarlagadda, President & CEO, HelloSoft 
company，講題為“Mobile Convergence (4G/WiFi/Celluar) – Myths and realities”，A. Fujimura, CEO, D2S 
& eBeam Initiative company，講題為“Design for eBeam：Getting the Best Wafers Without the Exploding 
Mask Cost”，S. Glaser, Corporate VP, Gadence Design Systems company，講題為“Cost-Aware System 
LSI Design”。 
 技術會議共有28個sessions，內容涵括的主題有：Memory Design, Low Power, Performance in System 
Design, Design for Reliability, Design for Manufacturability, New Emerging Device and Design Techniques, 
Package & IC Co-design, Analog & Mixed-Signal Verification, Placement & Routing, Test, Clock design, 
Modeling & Analysis of Temperature & Power. 
 由整個議會的內容涵括了Quality System Design所需討論的議題。可見到的是Low Power, 
Performance, Test及Cost相關的研究會是未來的研究發展方向。  
 
三、考察參觀活動 
訪問了二家位於矽谷的Electronic Design Automation公司Atrenta及Synopsis。Atrenta是開發設計 
前端RTL領域的Design & Verification tool的公司。Synopsis是目前電子設計自動化領域最大的公司，
其產品跨越整個晶片設計的領域。本人與他們討論一些未來可能合作的事宜。 
 
 
投稿論文如下： 
 DEFINITION  1. A circuit is modeled by a netlist hypergraph 
G = (C,N), where C is a set of cells with associated area and N 
is a set of nets(hyperedges) that connect two or more cells. 
 
DEFINITION 2. A K-layer partition of a hypergraph is 
expressed by the K-tuple, P = (L1, L2,…, Lk) where  ji LL  
for ji   and ii L = C. Li is the i-th layer of the partition. 
Every layer has a unique physical position in y. The layer Li is 
located at yi  for Ki 1  and ji yy   for i < j . 
 
DEFINITION   3. Adjacent layers are the layers located next to 
each other as Li and Li+1. Net range Ri(b, t) is the span of the net  
Ni connecting the layers Lb and Lt, where Lb is the bottom layer 
and Lt is the top layer of net Ni. b/t is the index of the 
bottom/top layer. Total of t – b TSVs are required. If a net 
connects two adjacent layers, that is t – b = 1, then in 3D ICs a 
TSV is required for the connection. This TSV is modeled as 
one cut between the two layers. The area of the TSV is counted  
to area of the top layer. If a net spans more than two layers, that 
is t – b = l where 1l , then l TSVs are required. In this case, 
one TSV is assigned to each layer ranging from b + 1 to t. Each 
TSV is modeled as one cut between its associated layers. The 
total number of TSVs T in the partition P = (L1, L2,…, Lk) is 
defined as T = 

K
i
iT
1
where Ti is the number of TSVs in Li. 
 
DEFINITION  4. In a 3D IC, the I/O pins are located at the 
bottom layer, i.e. L1. It requires a TSV_IO cell for each I/O pin 
connected to L1. Thus the area of L1 is defined as 
A1 = a1 + IOIO an   
where a1 is the area of all cells in L1, nIO is number of I/O nets, 
aIO is the area of a TSV_IO cell. In a 3D ICs, the area of each 
TSV is added to the area of the upper layer of the two adjacent 
layers. Therefore, there is no TSV in the L1, i.e. T1 = 0. The 
area of the layeri is defined as  
Ai = ai + ti aT          for Ki 2  
where ai is the total area of the cells belong to Li, at is the area 
of  a TSV. The maximum area among all layers, is defined as  
Amax = max { Ai, Aj }    for Kj,i 1  
The size of Amax is the foot print of the chip. We also define 
an area constraint of each layer. The area upper/lower bounds, 
Aup /  Alo, of any layer are defined as 
Aave = (

K
i 1
ai + IOIO an  ) / K 
Aup = Aave * rup 
Alo = Aave * rlo 
where rup and rlo are the experimental numbers. We use the 
range of upr =1.05 and lor = 0.95. 
 
Problem Description. We modeled a 3D IC multilayer 
partitioning problem as a hypergraph multilayer partitioning 
problem. We formulate the partitioning problem as follows. 
Given a netlist hypergraph G = (C, N), the K-layer 
partitioning problem is to assign C into K physical layer 
( 2K ) such that 

K
i
iT
1
is minimized while each Ai is 
constrained to a certain bond, i.e., upilo AAA  . 
III. ALGORITHM 
Our algorithm is composed of four phases. First we apply the 
multilevel coarsening technique to coarsen the netlist to reduce 
the number of modules. The coarsened modules are then 
assigned to appropriated layers according to the connectivity 
and area constraint. At this point, we get an initial K-layer 
partition. A K-layer FM-like partitioning refinement process is 
then applied to further minimize the number of TSVs under 
the area constraint. Then an uncoarsening process is 
performed to restore to its previous level. The K-layer FM-like 
refinement process [3] and the uncoarsening process are 
repeated until the level of the original netlist is reached. Details 
of the algorithm are described below. A flow chart of the 
algorithm is shown in Fig. 2.  
A. Multilevel Coarsening Phase 
We apply the Hyperedge Coarsening (HEC) and Modified 
Hyperedge Coarsening (MHEC) techniques [4, 5] to coarsen 
the netlist. During the coarsening phase, a sequence of 
successively smaller hypergraph is constructed. When the area 
of a module reaches the size of aveA. 20 , the module will stop 
coarsening in that level. The coarsening phase ends when a 
threshold level is reached or none of the modules may be 
coarsened. The threshold level is defined as log (number of C) 
/ log2. 
B.  Initial K-layer partitioning Phase 
The second phase of the multilevel K-layer partitioning 
algorithm is to assign the modules in the coarsest level to K 
layers. The modules connecting to the I/O pins are placed on 
the first layer. The rest of modules will be pulled onto the same 
layer if they are connected to the placed modules. This process 
proceeds until the sum of the area of cells and TSV_IOs 
reaches the value Aave. Then the procedure will start to put the 
un-placed modules onto the next layer. The process proceeds 
until all modules are placed. 
C. K-layer Partitioning Phase 
At this phase, a FM-liked K-layer partitioning procedure is 
performed. The objective is to minimize the total number of 
TSVs T without violating the pre-defined area constraint. Thus 
a refined K-layer partition is obtained. The details of this phase 
are described in Section IV. 
D.  Multilevel Uncoarsening and Refinement Phase 
During this phase, the netlist of the coarser hypergraph is 
successively restored to its previous level. The K-layer 
partitioning refinement algorithm, described in section IV, is 
applied to this finer level. Because the netlist of the finer level 
 A
B
(a)
B
A
 Gain = ( to–b ) + ( from– t’ )
(b)
1
2
3
4
5
1
2
3
4
5
t
to
b
from
t'
b'
B
C
A
 Gain = ( to–b )
(b)
B
C
(a)
A
1
2
3
4
5
1
2
3
4
5
to
b from
t
B
A
C
(b)
Gain  =  t–max( t’ , to ) 
(a)
A
B
C
1
2
3
4
5
1
2
3
4
5
t
to
b
t'
from
(a)
B
C
A
(b)
A
B
C
Gain =  min( b’ , to )–b 
1
2
3
4
5
1
2
3
4
5
t
to
b
b'
from
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
V. EXPERIMENTAL RESULTS 
We implement our algorithm in C/C++ and the program is 
executed on an IBM X3500 with 2.83GHz CPU (duo) and 
16GB memory. We tested the quality of resulting number of 
TSVs and chip area, based on the benchmarks used in the 
“Design Partitioning for 3D IC” problem in the IC/CAD 2009 
Contest in Taiwan [8]. The test cases are industrial circuits 
provided by Industrial Technology Research Institute [7]. The 
test cases include verilog gate level netlists and standard cell 
library. Table II shows the characteristics of the benchmark 
circuits including the number of cells, number of nets and 
number of device layers. 
The area bounding parameters for each layer are rlo = 0.95 
and rup = 1.05 in our experiment. Chip area is defined as K 
times Amax which is the largest area among k layers. A smaller 
chip area means a smaller footprint. Total area is defined as the 
summation of area of k layers. Area overhead is defined as the 
difference between chip area and total area divided by the chip 
area. The area overhead represents the ratio of white space in a 
circuit. Table III shows the results of multilevel multilayer 
partition including number of layers, number of TSVs, chip 
area, area overhead and runtime. The average area overhead is 
only 1.84% that shows the average white space is very small. 
Table IV shows the area distribution of all layers for every 
circuit including area of each layer, total area, μ , and CV. 
μ is the mean and is the standard deviation of the area of all 
layers in the corresponding circuit. CV is the area coefficient of 
variation. It measures the standard deviation relation to the 
mean. The average coefficient of variation is 2.61% only. That 
represents the area distribution of all layers is very uniform. 
For the Circuit_2 with 5 layers, the coefficient of variation is 
only 1.20%. 
Because we use the benchmark provided by the contest [8], 
we can compare our results with the results of the teams 
participating the contest. Table V shows the comparison of our 
results with the results of the top four winners in the contest, 
Team 20, 21, 47 and 51, on number of TSVs and chip area. 
Note that we do not compare with Team 20 for some 
unavailable results to the team. All data are normalized to ours 
for easier comparison. Compared with Teams 20, 21, 47 and 
51, the results show that our multilevel multilayer partition 
achieves averagely 116%, 3797%, 33%, and 16% better TSV, 
and 6%, 27%, 3%, and 10% better chip area, respectively. 
Because the computer used in our experiment has different 
CPU speed from computer used in the contest, we list the actual 
run time in Table V and leave it for readers to judge the 
performance. 
VI. CONCLUSION 
In this paper, we presented a multilevel multilayer partition 
algorithm for 3D ICs technologies. We use netlist coarsening 
and multilayer partitioning process to minimize the number of 
TSVs  under the area constraint. We identify eight special 
cases of cell distribution for updating cell gain effectively. The 
results also show small area overhead and uniform area 
distribution of all layers on the test cases. 
 
 
 
 
 
 
 
 
 
Fig. 3-3-1. (a) F (Ni) = 1 and  
Cell A is moved outside Ri(b,t),  
to < b,  from > to and from != t.  
(b) Cell A is moved down. 
 
Fig. 3-3-2. (a) F (Ni) = 1 and Cell  
A is moved outside Ri(b,t), to < b, 
from > to and from = = t. (b) Cell  
A is moved down. t’ is the top 
layer of Ri(b’,t’) after cell A is  
moved down. 
 
Fig. 3-4-2. (a) F (Ni) = 1 and Cell  
A is moved within Ri(b,t), to   t  
and to   b, if from > to and   
from = = t.  
(b) cell A is moved down. t’ is the  
top layer of Ri(b,t’) after cell A is 
moved down. 
 
Fig. 3-4-1. (a) F (Ni) = 1 and Cell  
A is moved within Ri(b,t), to   t  
And to   b, from < to and  
from = = b. 
(b) Cell A is moved up. b’ is the 
bottom layer of Ri(b’,t) after cell  
A is moved up. 
 
TABLE I 
GAIN TABLE FOR SPECIAL CASES 
 
from < to Gain = (t– to) 
F(Ni) > 1 
from > to Gain = (to – b) 
from != b Gain = (t – to) 
from < to 
from = = b Gain = (t – to) + (b’– from) 
from != t Gain = (to – b) 
Cell Move 
Outside 
Ri(b,t) 
to > t 
or 
to < b 
F(Ni) = 1 
from > to 
from = = t Gain = (to – b) + (from – t’) 
from < to from = = b Gain = min(b’, to) – b Cell Move 
within 
Ri(b,t) 
b   to   t 
F(Ni) = 1 
from > to from = = t Gain = t–max(t’, to) 
 
無研發成果推廣資料 
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
本計畫提出一個結合最佳層數預估法與應用於三維積體電路的多階層電路分割
演算法的演算 
法，自動化分割一個原始電路設計(gate-level netlist)成多層數的三維積體
電路，使此電路設計的單一晶片製造成本最小。 
我們以開發的分割演算法及自動化預估及分割演算法，參與 2010年教育部主辦
的九十八學年度大學院校積體電路電腦輔助設計(CAD)軟體製作競賽，得到定題
組特優獎。並將提出的應用於三維積體電路的多階層分割演算法撰寫成論文發
表於 2010 年的 ISQED 及 2010 年的 VLSIDesign/CAD Symposium。 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
國科會補助專題研究計畫成果報告自評表 
請就研究內容與原計畫相符程度、達成預期目標情況、研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）、是否適
合在學術期刊發表或申請專利、主要發現或其他有關價值等，作一綜合評估。
1. 請就研究內容與原計畫相符程度、達成預期目標情況作一綜合評估 
■達成目標 
□未達成目標（請說明，以 100字為限） 
□實驗失敗 
□因故實驗中斷 
□其他原因 
說明： 
2. 研究成果在學術期刊發表或申請專利等情形： 
論文：■已發表 □未發表之文稿 □撰寫中 □無 
專利：□已獲得 □申請中 ■無 
技轉：□已技轉 □洽談中 ■無 
其他：（以 100字為限） 
3. 請依學術成就、技術創新、社會影響等方面，評估研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）（以
500字為限） 
本計畫提出一個結合最佳層數預估法與應用於三維積體電路的多階層電路分割演算法的
演算法，自動化分割一個原始電路設計(gate-level netlist)成多層數的三維積體電路，
使此電路設計的單一晶片製造成本最小。 
我們以開發的分割演算法及自動化預估及分割演算法，參與 2010 年教育部主辦的九十八
學年度大學院校積體電路電腦輔助設計(CAD)軟體製作競賽，得到定題組特優獎。並將提
出的應用於三維積體電路的多階層分割演算法撰寫成論文發表於2010 年的ISQED及 2010 
年的 VLSIDesign/CAD Symposium。 
