Abstract
Keywords: low-density parity-check codes, convolutional codes, block codes, wireless local
area networks.
Low-density parity-check (LDPC) codes have attracted considerable attention in the re-
search community in recent years because they can achieve near-Shannon-limit performance
with iterative massage-passing decoding and sufficiently long block lengths. LDPC convo-
lutional codes (LDPC-CCs) are similar to LDPC block codes (LDPC-BCs) in the sense of
sparse parity-check equations, but they are convolutional codes in nature. There are several
advantages of employing LDPC-CCs over LDPC-BCs in packet-switching networks, thereby
making them a better candidate than LDPC-BCs in applications such as wireless local area
networks. In this report, we propose a new construction of (3, t)-regular LDPC-CCs by
properly including binomial entries in the parity-check matrices. Both upper and lower
bounds on the free distance are derived for the new codes. Compared with previous con-
structions, our design can not only avoid codes of girth less than 8 but also provide enlarged
free distances for some code rates. We can extend this construction to the corresponding
(3, t)-regular quasi-cyclic LDPC (QC-LDPC) codes. Besides, irregular constructions for both
types of codes are provided, which can have larger upper bounds on the minimum/free dis-
tance. Furthermore, we propose a new method for regular LDPC-CCs with binomials in
the parity-check matrices to remove cycles of length 8. This method can also be applied to
QC-LDPC codes with binomials in the parity-check matrices. So we can obtain codes with
ii
Contents
Abstract i
Contents iv
1 Introduction 1
2 Low-Density Parity-Check Codes 4
2.1 Definition . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 4
2.2 Tanner Graph . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 5
2.3 Decoding Algorithm . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 5
3 Quasi-Cyclic Low-Density Parity-Check Codes 10
3.1 Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 10
3.2 Properties of Minimum Distance and Girth . . . . . . . . . . . . . . . . . . . 11
3.3 Previous Algebraic Constructions . . . . . . . . . . . . . . . . . . . . . . . . 13
3.4 Type-I and Type-II QC-LDPC Codes . . . . . . . . . . . . . . . . . . . . . . 14
4 LDPC Convolutional Codes 17
4.1 Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 17
iv
List of Figures
2.1 Tanner graph for a regular (7,3) code. . . . . . . . . . . . . . . . . . . . . . . 6
3.1 Shift of the same kind of cycles. . . . . . . . . . . . . . . . . . . . . . . . . . 12
4.1 Decoding of an LDPC convolutional code with I iterations. . . . . . . . . . . 22
4.2 Decoding of a tail-biting LDPC-CC with I iterations. . . . . . . . . . . . . . 24
9.1 Performance of (3,4)-regular LDPC-CCs. . . . . . . . . . . . . . . . . . . . . 60
9.2 Performance of (3,5)-regular LDPC-CCs. . . . . . . . . . . . . . . . . . . . . 61
9.3 Performance of (3,4)-regular QC-LDPC codes. . . . . . . . . . . . . . . . . . 63
9.4 Performance of (3,5)-regular QC-LDPC codes. . . . . . . . . . . . . . . . . . 64
9.5 Performance of (5,6)-irregular QC-LDPC codes. . . . . . . . . . . . . . . . . 65
9.6 Performance of (5,6)-irregular QC-LDPC codes. . . . . . . . . . . . . . . . . 66
9.7 Performance of (3,5)-regular tail-biting LDPC-CCs. . . . . . . . . . . . . . . 67
9.8 Performance of (3,4)-regular QC-LDPC codes. . . . . . . . . . . . . . . . . . 68
vi
[21] are convolutional codes with sparse parity-check matrices. There are several advantages
of employing LDPC-CCs over LDPC block codes (LDPC-BCs) in packet-switching networks,
thereby making them a better candidate than LDPC-BCs in applications such as wireless lo-
cal area networks (WLANs). Encoding and decoding of LDPC-CCs can be done continuously
and for arbitrary lengths of data [13], [15]. Also, the encoding complexity of LDPC-CCs is
smaller than that of LDPC-BCs, and the repetitive nature of the LDPC-CC decoder makes
it well-suited for VLSI hardware implementation. Moreover, the performance of LDPC-CCs
is usually better than that of their LDPC-BC counterparts [13].
Constructions of QC-LDPC codes and LDPC-CCs with parity-check matrices consisting
of monomials only was proposed in [11], [13]. However, this kind of codes has limited upper
bound on the minimum distance (or free distance) [6]. The type-II versions of QC-LDPC
codes and LDPC-CCs proposed in [12] have parity-check matrices allowing binomial entries.
Even though a larger upper bound on the minimum distance (or free distance) than that
in [11], [13] was claimed in [12], not all codes considered in [12] can truly have a larger
bound. Also there is no guarantee of girth larger than 6 for codes in [12]. Besides, the using
of binomials produces extra cycles of length 8, thereby causing some performance loss.
In this report, we propose a new explicit construction of (3, t)-regular LDPC-CCs with
parity-check matrices consisting of binomial entries. Our constructed codes can indeed have
a larger bound on the free distance than that in [11], [13]. Furthermore, lower bounds
on the free distance are also given. We can guarantee that the constructed codes have
girth at least 8. The corresponding construction of (3, t)-regular QC-LDPC codes is also
given. Moreover, we give a new construction of irregular QC-LDPC codes and LDPC-CCs
with binomials, which can have larger upper bounds on the minimum/free distance. A
cycle-removing method is also provided to remedy the performance loss due to the using of
binomials. From computer simulations, our new codes can have better BER performance
2
Chapter 2
Low-Density Parity-Check Codes
2.1 Definition
An LDPC code [1] is defined as a linear block code whose parity-check matrix H has the
following properties :
• Each row has the same number, dc, of 1’s.
• Each column has the same number, dv, of 1’s.
• The number of 1’s in each row and the number of 1’s in each column are both small
compared to the codeword length and the number of rows in H .
• The number of 1’s in common between any two columns, denoted λ, is no greater than
1. This implies no two rows of H have more than 1 in common.
The LDPC code satisfying the above conditions is usually called a (dv, dc) regular LDPC
code. If the first or second condition is not satisfied, this code is called an irregular LDPC
code. Irregular LDPC codes often have better performance than regular ones.
4
)(
6
c
v
)(
7
c
v
)(
1
v
v
)(
4
v
v
)(
3
v
v
)(
5
v
v
)(
6
v
v
)(
7
v
v
)(
2
v
v
)(
1
c
v
)(
2
c
v
)(
3
c
v
)(
4
c
v
)(
5
c
v
Figure 2.1: Tanner graph for a regular (7,3) code.
of the codeword bit:
L(p0, p1) = ln
p0
p1
= lnλ
where p0 is the probability that the codeword bit is equal to 0, and p1 is the probability that
the codeword bit is equal to 1.
We have two types of operations.
• At a variable node,
VAR(L1, L2) = ln (λ1, λ2) = lnλ1 + lnλ2 = L1 + L2.
• At a check code,
CHK(L1, L2) = ln
1 + eL1eL2
eL1 + eL2
= ln
e−
L1+L2
2 + e
L1+L2
2 /2
e
L1−L2
2 + e−
L1−L2
2 /2
= ln(cosh(
L1 + L2
2
))− ln(cosh(L1 − L2
2
)).
6
• Initialization:
We can get the LLR of the codeword bit for the channel output. For additive white
Gaussian noise (AWGN) channels with symbol energy Es and double-side noise power
spectral density N0, codeword bit l has the initial LLR given by
Ll = ln
p(yl|xl = 0)
p(yl|xl = 1) = 4
Es
No
yl.
For every i, j such that Hi,j = 1, set qi,j = Lj.
• Message Passing:
1: Bottom-up:
For each i, j, compute
ri,j = CHKj′∈L(i)\j(qi,j′).
2: Top-down:
For each i, j, compute
qi,j = VAR(VARi′∈M(j)\i(ri′,j), Lj) = Lj +
∑
i′∈M(j)\i
ri′,j.
• Decision:
For each j, compute
qj = VAR(VARi∈M(j)(ri,j), Lj) = Lj +
∑
i∈M(j)
ri,j.
For 1 ≤ j ≤ N , we get
x̂j =
{
0, if qj > 0
1, if qj < 0.
If Hx̂T = 0, the algorithm stops and x̂ is the output codeword. Otherwise, go back
to the message-passing step. If the number of iterations exceeds a decided threshold
and Hx̂T ̸= 0, we declare decoding failure.
8
Chapter 3
Quasi-Cyclic Low-Density
Parity-Check Codes
3.1 Introduction
Most methods for designing LDPC codes are based on random construction techniques. The
lack of structure implied by randomness presents serious disadvantages in terms of encoding
and decoding due to the need of storing and accessing a large parity-check matrix. A QC-
LDPC code is presented by a parity-check matrix consisting of blocks of circulant matrices.
The QC property can reduce the encoding complexity; furthermore, the algebraic structure
allows for an efficient VLSI implementation.
Permutation matrices are usually used as circulant matrices in the parity-check matrices
of QC-LDPC codes. For an permutation matrix, a identity matrix with each row is the
cyclic-shift right of the row above it, and first row is the cyclic-shift right of the last row. All
the row weights and column weights are 1. We can have the parity-check matrix H given
by
H =

IP1,1 IP1,2 IP1,3 ... IP1,t
IP2,1 IP2,2 IP2,3 ... IP2,t
... ... ... ...
IPs,1 IPs,2 IPs,3 ... IPs,t
 (3.1)
where Ix is an p × p identity matrix with rows cyclically shifted to the left by x positions.
10
Length-4 cycle
Length-4 cycle
Length-4 cycle
1,1
2,1
1,2
2,2
Figure 3.1: Shift of the same kind of cycles.
0 ≤ jk ≤ t− 1, we have
m−1∑
k=0
△ik,ik+1(jk) ̸= 0 mod p
with i0 = im and ik ̸= ik+1, jk ̸= jk+1.
For QC-LDPC codes given by (3.1), the girth g satisfies 4 ≤ g ≤ 12. As in Fig. 3.1, the
same kind of cycles occurs with column shifts since the parity-check matrices of QC-LDPC
codes consist of permutation matrices. So the performance of the QC-LDPC codes of girth 6
is not so well as ones of girth 8. In general cases, QC-LDPC codes with girth not less than 8
are codes we desire. To design QC-LDPC codes for given values of the block length N , code
dimension K, and girth g, we can first determine corresponding values : s, t, and p, and then
randomly generate s × t integers until Theorem 3.1 is satisfied. Yet random construction
may require a high complexity of computer search. Hence we could impose some structures
on the p′i,js. For example, we can have the following choices.
• Sum: Let pi,j = iq1 + jq2 mod p. We hence have ∆i1,i2(j) = (i1 − i2)q1.
• Product: Let pi,j = ij mod p. We hence have ∆i1,i2(j) = (i1 − i2)j.
12
We can obtain irregular QC-LDPC codes from the constructions in (3.3). For all 0 ≤
i ≤ s − 3, we replace the last (t − 1 − i) circulant submatrices in the ith row of circulant
submatrices with all-zero matrices. The resulting LDPC code is now irregular, but it is still
QC. The corresponding parity-check matrix H is given by
H =
I1 ... Iat−s−1 Iat−s 0 ... 0 0 0
Ib ... Iat−s−1b Iat−sb Iat−s+1b ... 0 0 0
... ... ... ... ... ... ... ... ...
Ibs−3 ... Iat−s−1bs−3 Iat−sbs−3 Iat−s+1bs−3 ... Iat−3bs−3 0 0
Ibs−2 ... Iat−s−1bs−2 Iat−sbs−2 Iat−s+1bs−2 ... Iat−3bs−2 Iat−2bs−2 Iat−1bs−2
Ibs−1 ... Iat−s−1bs−1 Iat−sbs−1 Iat−s+1bs−1 ... Iat−3bs−1 Iat−2bs−1 Iat−1bs−1
 . (3.4)
The rank ofH is then (s− 2)m plus the number of linearly independent rows in the last 2m
rows of H .
Example 3.2. Based on a (3, 5) regular QC-LDPC code of length N = 155, we can obtain
an irregular QC-LDPC code with parity-check matrix given by
H =
 I1 I2 I4 0 0I5 I10 I20 I9 I18
I25 I19 I7 I14 I28
 .
This code has rate R = 63/155 = 0.4065, and its minimum distance is 16 only. 
3.4 Type-I and Type-II QC-LDPC Codes
We call the QC-LDPC codes whose parity-check matrices consist of monomials and zeros
only are Type-I QC-LDPC codes. Type-II QC-LDPC codes are QC-LDPC codes whose
parity-check matrices consist of binomials, monomials, and zeros. We do not concern the
cases that trinomials or higher weights terms exist since they must contain length-6 cycles
in the corresponding Tanner graph.
In the last section, the codes of the constructions (3.3) and (3.4) are Type-I QC-LDPC
codes. Their minimum distances are bounded by (s+1)!. But for Type-II QC-LDPC codes,
14
It can be shown that the resulting upper bound on the minimum distance is only 24. Since
it is difficult to find the true minimum distance, it is possible to obtain codes with small
minimum distance. Also there is no guarantee that codes constructed with binomial entries
always have girth at least 8, and hence codes of girth 6 may exist.
16
parity-check matrix in the scalar form can hence be represented as
H [0,∞] =

H0(0)
H1(1) H0(1)
H2(2) H1(2) H0(2)
...
...
...
. . .
HM(M)
...
...
... H0(M)
HM(M + 1)
...
...
... H0(M + 1)
. . . . . . . . . . . . . . .

.
An LDPC convolutional code is a convolutional code with a sparse scalar parity-check
matrix satisfying the following properties [16]:
• each column has dv’s 1’s;
• each row has dc’s 1’s except the first sM rows;
• dv and dc are small compared to sM and tM .
The number of 1’s dc in a row of the scalar matrix is exactly the weight sum in a single
row in the polynomial form. This phenomenon also holds for each column. If the elements of
H(D, y) are all monomials, we will have degree parameters dc = t and dv = s. We use (s, t)-
regular LDPC-CCs to represent codes with s 1’s in a column and t 1’s in a row, i.e., codes
with s × t polynomial parity-check matrices. Furthermore, if the polynomial parity-check
matrix of the LDPC-CC is independent of time index y, we have
H i(0) =H i(1) =H i(2) · · ·
for i = 1, 2, · · · ,M . This is the time-invariant LDPC-CC.
Example 4.1. The polynomial parity-check matrix of a (2, 3)-regular time-invariant LDPC-
CC with code rate 1/3 is given by
H(D) =
(
D1 D3 D5
D2 D4 D5
)
.
18
usually composed of permutation matrices, its corresponding polynomial form contains all
monomials, e.g.,
H(D) =

DP1,1 DP1,2 · · · DP1,t
DP2,1 DP2,2 · · · DP2,t
· · · · · · · · · · · ·
DPs,1 DPs,2 · · · DPs,t

where D can be viewed as the delay component in the convolutional code. Then we can let
H(D) be the parity-check matrix of the corresponding LDPC-CC. The generator matrix of
the LDPC-CC can be obtained by the condition H(D)GT (D) = 0.
Example 4.2. Consider a (3, 5)-regular regular LDPC convolutional code with rate 0.4 and
parity-check matrix given by
H(D) =
 D D2 D4 D8 D16D5 D10 D20 D9 D18
D25 D19 D7 D14 D28
 .
By H(D)GT (D) = 0, we can have a systematic generator matrix as
G(D) =
(
a1(D)
∆(D)
a2(D)
∆(D)
a3(D)
∆(D)
1 0
b1(D)
∆(D)
b2(D)
∆(D)
b3(D)
∆(D)
0 1
)
where
a1(D) = D
4(1 +D7 +D10 +D14 +D18 +D29)
a2(D) = D
3(1 +D3 +D6 +D18 +D21 +D36)
a3(D) = D
7(1 +D4 +D8 +D11 +D15 +D22)
b1(D) = D
13(1 +D6 +D14 +D15 +D23 +D28)
b2(D) = D
12(1 +D2 +D11 +D21 +D23 +D35)
b3(D) = D
21(1 +D3 +D4 +D5 +D10 +D16
∆(D) = 1 +D4 +D14 +D25 +D26 +D33. 
The same as QC-LDPC codes, we consider some algebraic constructions for LDPC-CCs.
The algebraic construction of LDPC-CCs in [11], [13] is described below. For a prime p, the
20
. . . . . .
Decoding window 
Length: n(M+1)I
Processor 1 Processor 2
. . .
Processor I
. . .
Figure 4.1: Decoding of an LDPC convolutional code with I iterations.
are calculated in parallel by I processors, and separated by t(M + 1) code symbols. Since
the variable (check) nodes connected to the same check (variable) node are not apart by
more than M positions, the I processors can operate independently and in parallel. The
decoder has to store t(M + 1)I received symbols. The codeword symbols slide through the
processors. After decoded by the first processor, the symbols are passed to the second one
and decoded again. The number of processors is exactly the number of iterations.
Because the symbol values of the encoder are all zero at the beginning, we set the decoder
metric initially with ∞ to represent the symbol zero. Each processor computes t variable
nodes and s check nodes at one time. The graph representation is given in Fig. 4.2, where the
updated variable nodes and updated check nodes are represented by
⊕
and
⊗
, respectively.
The bits move t positions in one pass. After M + 1 passes, the bits will be decoded again.
The decoder gives output results after the bits are decoded by I processors. After an initial
delay equal to the decoding window size t(M + 1)I, the decoded output bits are produced
continuously.
22
IN
OUT
Processor 1
Processor 2
Processor I
Figure 4.2: Decoding of a tail-biting LDPC-CC with I iterations.
the tail nodes of corresponding parity-check matrix (4.3) is in the part
HM(q) HM−1(q) · · · H1(q)
HM(q + 1) · · · H2(q + 1)
...
...
HM(q +M − 1)
 .
They obtained the message from the nodes in the processor I.
24
5.2 Girth of (3, t)-Regular LDPC-CCs
We first discuss the girth of LDPC-CCs. Consider the parity-check matrix of (s, t)-regular
LDPC-CCs consisting of monomials given by
H(D) =

DP1,1 DP1,2 DP1,3 · · · DP1,t
DP2,1 DP2,2 DP2,3 · · · DP2,t
...
...
. . . . . .
...
DPs,1 DPs,2 DPs,3 · · · DPs,t
 .
Permuting the rows and columns of the corresponding scalar matrix H , we can obtain the
modified H ′ given by
H ′ =

IP1,1 IP1,2 . . . IP1,t
IP2,1 IP2,2 . . . IP2,t
...
...
. . .
...
IPs,1 IPs,2 . . . IPs,t

where each IPi,j is an infinite identity matrix with columns shifted down to Pi,j positions.
We can then see the similarity between QC-LDPC codes and LDPC-CCs in these scalar
matrices. Therefore, similar to the result in [9], we can have the following theorem about
cycles of LDPC-CCs with parity-check matrices consisting of monomials only.
Theorem 5.1. Define
△jx ,jy (i) = Pi ,jx − Pi ,jy .
The Tanner graph for the matrix H(D) has cycles of length 2l if and only if there exist
(i0, i1, · · · , il−1) and (j0, j1, · · · , jl), where 1 ≤ ik ≤ s for k = 0, 1, · · · , l − 1 and 1 ≤ jk ≤ t
for k = 0, 1, · · · , l, such that
l−1∑
k=0
△jk,jk+1(ik) = 0
where ik ̸= ik+1, jk ̸= jk+1 for k = 0, 1, · · · , l − 2, and i0 ̸= il−1, jl = j0.
Proof. Since the polynomial parity-check matrix (5.2) can be transformed into scalar form
(5.2), the existence condition (3.2) can be modified from row-shifting to column-shifting.
26
Proof. In this construction, length-6 cycles are impossible. We only have to consider length-4
cycles. According to the existence condition, length-4 cycles may occur only in the following
three situations:
(a) {ai1bj1 , ai1+1bj1} − {ai1bj2} = {ai2bj1 , ai2+1bj1} − {ai2bj2}.
(b) {ai1bj1 , ai1+1bj1} − {ai1+1bj2} = {ai2bj1 , ai2+1bj1} − {ai2+1bj2}.
(c) {ai1bj1} − {ai1+1bj1} = {ai2bj1} − {ai2+1bj1}.
For (a), we consider three cases as follows.
Case 1: We have
ai1bj1 − ai1bj2 = ai1(bj1 − bj2)
ai2bj1 − ai2bj2 = ai2(bj1 − bj2).
Since
bj1 ̸= bj2 , aj1 ̸= aj2
we get
ai1bj1 − ai1bj2 ̸= ai2bj1 − ai2bj2 .
Case 2: We have
ai1+1bj1 − ai1bj2 = ai1(abj1 − bj2)
ai2+1bj1 − ai2bj2 = ai2(abj1 − bj2).
Since
abj1 ̸= bj2 , aj1 ̸= aj2
we get
ai1+1bj1 − ai1bj2 ̸= ai2+1bj1 − ai2bj2 .
28
For (c), we have
ai1bj1 − ai1+1bj1 = ai1bj1(1− a).
ai2bj1 − ai2+1bj1 = ai2bj1(1− a).
Since
ai1 ̸= ai2 , a = α3 ̸= 1
we know
ai1bj1 − ai1+1bj1 ̸= ai2bj1 − ai2+1bj1 .
Therefore, there do not exist 4-cycles because (a), (b) and (c) are not satisfied. The codes
in this construction must have girth at least 8.
5.3 Upper Bound on Free Distance of (3, t)-Regular
LDPC-CCs
Regarding the free distance, we first introduce some lemmas.
Lemma 5.1. For two p×p circulant permutation matrices Ix and Iy, where Ix and Iy are the
identity matrices with rows cyclically left-shifted by x positions and y positions, respectively,
we have
Ix × Iy = Iz
where z = x+ y mod p.
Proof. Because Ix and Iy are both permutation matrices, Ix × Iy is the matrix that Iy
cyclically shift its rows to the left by x positions. Hence, we have
Ix × Iy = Iz
where z = x+ y mod p.
30
Theorem 5.4. For the (3, t)-regular LDPC-CCs obtained by Construction 1, we can have
that the free distance is upper-bounded by Bd, where
Bd =

32, t = 4
28, t = 5
24, t ≥ 6 and t is even
12, t ≥ 7 and t is odd.
Proof. Case 1:
First, we consider (3, 4) codes. Then scalar-form H can be represented as
H =
 R11 R12 R13 R14R21 R22 R23 R24
R31 R32 R33 R34

where each Rij is a circulant matrix with equal infinite block length. Define
d1 = R12R23R34 +R22R33R14 +R32R24R13 +R14R23R32 +R13R22R34 +R12R33R24,
d2 = R11R23R34 +R11R24R33 +R13R21R34 +R13R24R31 +R14R21R33 +R14R23R31,
d3 = R11R22R34 +R21R32R14 +R31R24R12 +R14R22R31 +R12R21R34 +R11R32R24,
d4 = R11R22R33 +R21R32R13 +R31R23R12 +R13R22R31 +R12R21R33 +R11R32R23.
Let w(Rij) represent the row weight of circulant Rij. By Lemmas 5.1 and 5.2, we have
w(d1) ≤ w(R12)w(R23)w(R34) + w(R22)w(R33)w(R14) + w(R32)w(R24)w(R13)
+w(R14)w(R23)w(R32) + w(R13)w(R22)w(R34) + w(R12)w(R33)w(R24)
= 2× 1× 2 + 2× 1× 2
= 8.
Similarly, we have w(d2) ≤ 8, w(d3) ≤ 8, and w(d4) ≤ 8.
Let w = (dT1 x
T ,dT2 x
T ,dT3 x
T ,dT4 x
T ) where x is a vector with weight one. We can have
the syndrome given by
HwT =
 S1S2
S3

32
For t = 7, similarly, we can obtain the upper bound on the free distance Bd = 12. For t > 7
and t is odd, we can find that there exists a part of H t which is the same as that of H7
given by  DP1,1 +DP1,2 DP1,3 +DP1,4 DP1,5 +DP1,6 DP1,7DP2,1 DP2,3 DP2,5 DP2,7
0 0 0 DP3,7
 .
Hence, we get the upper bound on the free distance Bd = 12.
Note that the upper bounds for (3, 4) and (3, 5)-regular codes are the same as those in [12]
while the bounds for t ≥ 6 are new.
5.4 Lower Bound on Free Distance of (3, t)-Regular LDPC-
CCs
We proceed to discuss lower bounds on free distance for codes given by Construction-CC. The
free distance is equal to the smallest number of dependent columns of the scalar matrix H
corresponding toH(D) in Construction-CC. Due to the property of binomials, the 1’s of the
dependent columns in the first and third row-block ofH must form disjoint cycles. And the
corresponding 1’s in the second row-block must be cancelled in order to make these columns
dependent. So we can first find the position of cycles in the first and third row-blocks, and
then check the corresponding 1’s in the second row-block.
We define some notations first. Let Xr,j represent the block in the rth row-block and jth
column-block of the scalar matrix H , where 1 ≤ r ≤ 3 and 1 ≤ j ≤ t. Let Γ1(j, α, β) ,
β + P1,j represent the position of 1 in the αth row and βth column of X1,j and Γ2(j, α, β) ,
β + P3,j represent the position of 1 in the αth row and βth column of X3,j for all α, β ∈ N .
Then we define
Λ
(i)
jx,jy ,βx,βy
(αx) = Γi(jx, αx, βx)− Γi(jy, αx, βy).
34
For [1], it can be satisfied for CL by definition. We need to consider the condition [2]. We
know the second row block consist of permutation matrices only and the element of CL
represents the position of 1’s in it. Since the 1 can be cancelled if and only if there exists
another 1 in the same position, it means the condition [2] can be satisfied if and only if the
position of 1’s can be taken into pairs. It is equivalent to that the elements in the sequence
CL appear even times.
Let Ων , {γ : γ appears odd times in Cν}, where ν ∈ N . We can directly obtain the
following theorem by Lemma 5.3.
Theorem 5.5. For the (3, t)-regular LDPC-CCs, where t is even, obtained by Construction-
CC, the free distance is at least L+ 1 if and only if Ων = φ for all 0 ≤ ν ≤ L.
Since the number of cycles in an LDPC-CC is infinite, the principle of quasi-cyclic con-
struction as in Fig. 3.1 helps us to reduce the situations of cycles. We can therefore have
following lemma.
Lemma 5.4. For a cycle of length 2L, we have the corresponding sequence (ξ
(i)
j0,α′0,β
′
0
, · · · , ξ(i)jL−1,α′L−1,β′L−1).
For β′0 ̸= β0, let q = β′0 − β0. Then (ξ(i)j0,α0,β0 + q, · · · , ξ
(i)
jL−1,αL−1,βL−1 + q) corresponds to a
cycle of the same type as (ξ
(i)
j0,α′0,β
′
0
, · · · , ξ(i)jL−1,α′L−1,β′L−1) which starts from the β
′
0th column in
the same block.
Proof. Let Hq1 represent the original scalar parity-check matrix for the sequence
(ξ
(i)
j0,α′0,β
′
0
, · · · , ξ(i)jL−1,α′L−1,β′L−1). Consider Hq2 which is the matrix with the column shift-right
q position of H1. So the sequence
(ξ
(i)
j0,α0,β0
+ q, · · · , ξ(i)jL−1,αL−1,βL−1 + q) = (ξ
(i′)
j0,α0,β0
, · · · , ξ(i′)jL−1,αL−1,βL−1)
in theHq2 where ξ
(i′)
jx,αx,βx
= ξ
(i)
jx,αx,βx
for x = 0, 1, · · · , L−1. We have (ξ(i)j0,α0,β0+q, · · · , ξ
(i)
jL−1,αL−1,βL−1+
q) corresponds to a cycle of the same type as (ξ
(i)
j0,α′0,β
′
0
, · · · , ξ(i)jL−1,α′L−1,β′L−1).
36
[z1v1 + z2v2 + · · ·+ zt−[t]2vt−[t]2 ]p = 0
z1 + z2 + · · ·+ zt−[t]2 ≤ d
zc = zc+1, for all odd c with 1 ≤ c ≤ t− [t]2.
Also we have
[±(P2,l1 − P2,l2)]p ̸= [±(P2,l3 − P2,l4)]p
for all even l1, l2 with l1 ̸= l2 and for all odd l3, l4 with l3 ̸= l4. Moreover, for k =
2, 3, · · · , ⌊t/2⌋,
[P2,2k − P2,2(k−1)]p < ⌊d/4⌋Mk
[P2,2k−1 − P2,2(k−1)−1]p < ⌊d/4⌋Mk.
Then the free distance is at least d.
Theorem 5.7 can be proved by directly employing Theorem 5.6 for even t. While for odd
t, the last column of H(D) in Theorem 5.7 can help us in reducing the problem to the case
for even t.
The constructions of (5.3) and (5.4) is the special cases of (5.1) and (5.2) respectively. So
we can modify Theorem 5.3 to the following corollary to guarantee the codes we construct
are really of girth-8.
Corollary 5.8. Consider (3, t)-regular LDPC-CCs in Construction-CC with shifting values
Pi,j given by
Pi,j = a
j−1bi−1, for i = 1, 2, and j = 1, 2, · · · , t− [t]2
P3,j = P1,j, for j = 1, 2, · · · , t− [t]2
P1,t = P2,t = P3,t, for odd t.
38
The shifting values following Corollary 5.8 are given by a = 144 and b = 196 in GF(211).
The corresponding Tanner graph has girth 8. And from Theorems 5.4 and 5.7, the upper
bound on free distance is now 28 and the lower bound is 20. So the range of the true free
distance is between 20 and 28. Also consider a (3, 5)-regular LDPC-CC of rate 2/5 obtained
form the previous construction in (4.1) with parity-check matrix given by
H(D) =
 D1 D107 D55 D188 D71D14 D21 D137 D100 D150
D196 D83 D19 D134 D201
 .
The upper bound on free distance is then 24, and no knowledge of the lower bound has been
obtained. Note that the two codes have almost the same M .
40
6.2 Properties of QC-LDPC Codes in the New Con-
struction
We can give some specific values to the Pi,j’s in the parity-check matrix of the QC-LDPC
codes in Construction-QC to make sure that the codes have girth at least 8.
Theorem 6.1. Consider (3, t)-regular QC-LDPC codes in Construction-QC with shifting
values Pi,j given by
Pi,j = a
j−1bi−1, for i = 1, 2, 3, and j = 1, 2, · · · , t
Then the corresponding Tanner graph must have girth at least 8 if we take a = α3 and
b = αK, where α is a primitive 3Kth root of unity in GF(p), αi ̸= p− 1 for i = 0, 1, . . . , 3K,
and K ≥ t with 3 - K.
Regarding the minimum distance, we have the following theorem about the upper bound
on the minimum distance.
Theorem 6.2. For the (3, t)-regular QC-LDPC codes obtained by Construction-QC, we can
have that the minimum distance is upper-bounded by Bdqc, where
Bdqc =

32, t = 4
28, t = 5
24, t ≥ 6 and t is even
12, t ≥ 7 and t is odd.
Note that the upper bounds for (3, 4) and (3, 5)-regular codes are the same as those in [12]
while the bounds for t ≥ 6 are new.
Let the shifting values Pi,j, for all i, j, are obtained from the field GF(p). Denote a mod b
by [a]b. For 1 ≤ y ≤ ⌊t/2⌋, let
v2y−1 = [P1,2y−1 − P1,2y]p
42
The constructions of (6.3) and (6.4) is the special cases of (6.1) and (6.2) respectively. We
can also modify Theorem 6.1 to the following corollary to guarantee the codes we construct
are really of girth-8.
Corollary 6.4. Consider (3, t)-regular QC-LDPC codes in Construction-QC with shifting
values Pi,j given by
Pi,j = a
j−1bi−1, for i = 1, 2, and j = 1, 2, · · · , t− [t]2
P3,j = P1,j, for j = 1, 2, · · · , t− [t]2
P1,t = P2,t = P3,t, for odd t.
Then the corresponding Tanner graph must have girth at least 8 if we take a = α3 and
b = αK, where α is a primitive 3Kth root of unity in GF(p), αi ̸= p− 1 for i = 0, 1, . . . , 3K,
and K ≥ t with 3 - K.
Above theorems are similar with the theorems in the previous chapter. They can be
proved with the similar method. So for the construction of (3, t)-regular QC-LDPC codes
with monomials only, the corresponding codes have minimum distance upper-bounded by
(3 + 1)! = 24. From Theorem 6.2, our constructed (3, 4) and (3, 5) codes can have larger
upper bound on the minimum distance. Moreover, by the lower bound in Theorem 6.3, we
can have more knowledge about the true minimum distance. Furthermore, codes of girth
less than 8 can be avoided by setting the shifting values as in Corollary 6.4.
Example 6.1. Consider a (3, 4)-regular QC-LDPC code of length 244 by our new construc-
tion with parity-check matrix given by
H =
 I1 + I9 0 I20 + I58 0I47 I57 I25 I42
0 I1 + I9 0 I20 + I58
 .
It is of rate 0.25. The shifting values following Corollary 6.4 are given by a = 9 and b = 47
in GF(61). The corresponding Tanner graph has girth 8. And from Theorem 6.2 and 6.3, the
44
Chapter 7
New Irregular Constructions of
QC-LDPC Codes and LDPC-CCs
In this chapter, we can construct new irregular QC-LDPC codes which have larger upper
bound on the minimum distance than original irregular QC-LDPC codes given in (3.4). This
can also be done for LDPC-CCs.
7.1 New Construction of Irregular QC-LDPC Codes
Consider the previous algebraic construction (3.4) of irregular QC-LDPC codes. We can
change the last two row-blocks to sums of two permutation matrices to improve the upper
bound on the minimum distance as the described in the previous chapter. Our construction
of irregular QC-LDPC codes is given as follows.
[Construction-IRQC]
For the (s, t)-irregular QC-LDPC codes which come from (s, t)-regular ones, the parity-
46
Taking t/2 > s, we can guarantee that the upper bound on the minimum distance of our
construction is larger than that of the previous irregular construction. Then the code rate
is (t− s)/t < (t− t/2)/t = 0.5. For example, (5, 7) irregular codes have an upper bound on
the minimum distance as 48 while the codes with Construction-IRQC have an upper bound
on the minimum distance as 60.
We can give specific values to the shifting values Pi,j to guarantee the codes we construct
is not of girth-4 or 6.
Theorem 7.1. Consider the (s, t)-irregular QC-LDPC codes with the shifting values Pi,j of
the parity-check matrix (3.4) given by
Pi,j = a
j−1bi−1, for i = 1, 2, 3, and j = 1, 2, · · · , t
where a = αs and b = αK, and α is a primitive sKth root of unity in GF(p), αi ̸= p − 1
for i = 0, 1, . . . , sK, and K ≥ t with s - K. If the corresponding Tanner graph has girth
larger than 8, the shifting can be applied to the parity-check matrix of Construction-IRQC.
The corresponding Tanner graph also has girth larger than 8.
This can be proved directly by the existence condition for QC-LDPC codes. From the
above theorem, we know that Construction-IRQC can preserve the value of the girth of the
original irregular construction at least.
Example 7.1. Consider an (3, 4)-irregular QC-LDPC code of length 1266 by original con-
struction (3.4) with parity-check matrix given by
H =

I1 I58 0 0 0 0
I71 I109 I203 0 0 0
I188 I143 I65 I183 0 0
I55 I25 I184 I122 I113 I13
I107 I87 I193 I11 I5 I79
 .
It is of rate 0.167. This irregular code has an upper bound on the minimum distance as
100. The shifting values following Theorem 7.1 are given by a = 58 and b = 71 in
48
Also, we can obtain a theorem on the girth similar to Theorem 7.1
Theorem 7.2. Consider the (s, t)-irregular LDPC-CCs with the shifting values Pi,j of the
parity-check matrix (4.2) given by
Pi,j = a
j−1bi−1, for i = 1, 2, 3, and j = 1, 2, · · · , t
where a = α3 and b = αK, and α is a primitive 3Kth root of unity in GF(p), αi ̸= p − 1
for i = 0, 1, . . . , 3K, and K ≥ t with 3 - K. If the corresponding Tanner graph has girth
larger than 8, the shifting can be applied to the parity-check matrix of Construction-IRCC.
The corresponding Tanner graph also has girth larger than 8.
Construction-IRCC can also preserve the value of the girth of the original irregular con-
struction.
Example 7.2. Consider the counterpart LDPC-CCs of the Example 8.1 by original con-
struction with parity-check matrix given by
H(D) =

D1 D58 0 0 0 0
D71 D109 D203 0 0 0
D188 D143 D65 D183 0 0
D55 D25 D184 D122 D113 D13
D107 D87 D193 D11 D5 D79
 .
It is of rate 0.167. This irregular code has an upper bound on free distance as 100. The
shifting values following Theorem 7.2 are given by a = 58 and b = 71 in GF(211). The
corresponding Tanner graph has girth 8. So the irregular LDPC-CCs of our Construction-
IRCC is with the parity-check matrix given by
H(D) =

D1 D58 0 0 0 0
D71 D109 D203 0 0 0
D188 D143 D65 D183 0 0
D55 +D25 0 D184 +D122 0 D113 +D13 0
0 D107 +D87 0 D193 +D11 0 D5 +D79
 .
The corresponding Tanner graph has girth at least 8 from Theorem 7.2. Besides, its upper
bound on free distance is 136 > 100.
50
According to the modified cycle existence condition [20] of LDPC-CCs, we have
{Pi1,j2 − Pi1,j1} + {Pi1,j4 − Pi1,j3}
+ {Pi1,j1 − Pi1,j2}
+ {Pi1,j3 − Pi1,j4}
= 0.
So this kind of cycles of length 8 exists.
Due to the repeated property of LDPC-CCs, the number of cycles of length 8 increases
with the time index. So pairing of binomial terms in the parity-check matrix should be
controlled.
After some row and column permutations to the scalar-form parity-check matrix of
an LDPC-CC, it can be viewed as a QC-LDPC code with parity-check matrix of infin-
ity block length. We call it the QC-form parity-check matrix. For example, the term(
DPi1,j1 +DPi1,j2 DPi1,j3 +DPi1,j4
)
in the polynomial parity-check matrix of a LDPC-CC
corresponds to (
IPi1,j1 + IPi1,j2 IPi1,j3 + IPi1,j4
)
in the QC-form parity-check matrix where IPi,j is an infinity-length identity matrix with
columns cyclically shifted down by Pi,j positions.
From the modified cycle existence condition of LDPC-CCs in the proof of Lemma 1, the
position of this kind of cycles of length 8 can be obtained in the QC-form parity-check matrix
of LDPC-CCs. If we can change the rows involved in the cycles of length 8, cycles can then
be removed.
Consider the pairing of binomial terms in the QC form given by
(
IPi1,j1 + IPi1,j2 IPi1,j3 + IPi1,j4
)
.
52
Example 8.1. Consider the structure
(
D1 +D100 D2 +D145
)
.
We have r = min{144, 101} = 101. So after 101 columns in each block in the QC form, we
change it to (
D3 +D101 D1 +D146
)
.
Again we have r′ = min{148, 99} = 99. After processing 99 columns in each block in the QC
form, we change it back. We repeat this procedure
(
D1 +D100 D2 +D145
)
101−−→ ( D3 +D101 D1 +D146 )
99−→ ( D1 +D100 D2 +D145 )
101−−→ ( D3 +D101 D1 +D146 )
...
until the desired length. This is a time-variant LDPC-CC with period 200. For decoding a
total of 10000 codeword bits, we can decrease the number of length-8 cycles from 2120 to 166.
However, the length-8 cycles from pairing of binomial terms still exist. The relationships
between the number of length-8 cycles and the parameters in our method is listed below.
• When |(Pi,1+Pi,4−Pi,3)− (Pi,2+Pi,3−Pi,1)| gets large, the number of cycles of length
8 increases.
• When |(P ′i,1+P ′i,4−P ′i,3)− (P ′i,2+P ′i,3−P ′i,1)| gets large, the number of cycles of length
8 increases.
• When |r − r′| gets large, the number of cycles of length 8 increases.
54
The time-variant polynomial parity-check matrix is given by
H(D)
109−−→ H ′(D) 109−−→ H(D) · · · .
The code is of rate 0.25 and its girth is at least 10. Also consider a (3, 4)-regular time-
invariant LDPC-CC of rate 0.25 with parity-check matrix given by
H(D) =
 D1 +D100 0 D10 +D118 0 D199D196 D161 D185 D54 D82
0 D4 +D17 0 D96 +D201 D144

Yet the corresponding Tanner graph has girth 8.
8.2 Application to QC-LDPC Codes
Since the length-8 cycles coming from pairing of binomial terms also occur for QC-LDPC
codes, a similar method to remove this kind of cycles can be obtained. In order to make the
code still in the QC structure, we need some extra conditions.
We can construct (s, t)-regular QC-LDPC codes with parity-check matrix given by
H =

MP1,1+P1,2 0 · · · MP1,t−1+P1,t 0
IP2,1 IP2,2 · · · IP2,t−1 IP2,t
...
. . . . . . . . .
...
0 MPs,1+Ps,2 · · · 0 MPs,t−1+Ps,t

where IPi,j is a p× p identity matrix with rows cyclically shifted to the left by Pi,j positions,
0 is the p× p all-zero matrix, and MPi,j+Pi,j+1 is of the form
IP ′i,j + IP ′i,j+1 0 0 · · · 0
0 IP ′′i,j + IP ′′i,j+1 0 · · · 0
0 0 IP ′i,j + IP ′i,j+1 · · · 0
...
. . . . . . . . .
...
0 0 · · · · · · IP ′′′i,j + IP ′′′i,j+1

where Iq is a p
′×p′ identity matrix with rows cyclically shifted to the left by q positions and
0 is the p′ × p′ all-zero matrix. Besides, p is divided by p′. If p = fp′, we have
P ′′′i,j =
{
P ′i,j, f is odd
P ′′i,j, f is even
56
which is still a parity-check matrix for QC-LDPC codes. It is equivalent to a QC-LDPC
code with s(p/p′)× t(p/p′) blocks. And its girth is at least 10.
Example 8.3. Consider a (3, 4)-regular QC-LDPC code with parity-check matrix given by
H =
 MP1,1+P1,2 0 MP1,3+P1,4 0I105 I210 I525 I315
0 MP3,1+P3,2 0 MP3,3+P3,4

where
MP1,1+P1,2 =
 I1 + I90 0 · · ·0 I4 + I74 · · ·
...
. . . . . .

MP1,3+P1,4 =
 I15 + I16 0 · · ·0 I27 + I23 · · ·
...
. . . . . .

MP3,1+P3,2 =
 I46 + I70 0 · · ·0 I48 + I50 · · ·
...
. . . . . .

and
MP3,3+P3,4 =
 I35 + I81 0 · · ·0 I45 + I103 · · ·
...
. . . . . .
 .
This is a QC-LDPC code of length 3360 with p′ = 105 and p = 540 = 8p′. It is of rate
0.25. Besides, the girth is 12. Also consider a (3, 4)-regular QC-LDPC code of rate 0.25 with
parity-check matrix given by
H =
 I1 + I90 0 I15 + I16 0I105 I210 I525 I315
0 I46 + I70 0 I35 + I81

where each permutation matrix is of length 840. This is a QC-LDPC code with binomials of
length 3360. Yet the corresponding Tanner graph has girth 8.
58
1 1.5 2 2.5 3 3.5 4 4.5
10−6
10−5
10−4
10−3
10−2
10−1
Eb/N0
BE
R
 
 
Original (3,4)−regular LDPC−CC with monomials only
(3,4)−regular LDPC−CC of Construction−CC
Figure 9.1: Performance of (3,4)-regular LDPC-CCs.
60
Fig. 9.4. shows the performance of (3, 5)-regular QC-LDPC codes by Construction-QC
and by the previous algebraic construction in (3.3), as described in Example 6.2. Both codes
have girth 8 and rate 0.4. Our new code can have a larger coding gain at high SNRs and
the error floor tends to occur later than the previously constructed code.
Fig. 9.5. shows the performance of (5, 6)-irregular QC-LDPC codes by Construction-
IRQC and by the previous algebraic construction in (3.4), as described in Example 7.1.
Both codes have girth 8 and rate 0.167. It can be seen that our constructed code has better
performance at high SNRs since its minimum distance is probably larger.
Fig. 9.6. shows the performance of (5, 6)-irregular LDPC-CCs by Construction-IRCC
and by the previous algebraic construction in (4.2), as described in Example 7.2. Both codes
have girth 8 and rate 0.167. Our new code can have a larger coding gain at high SNRs and
the error floor tends to occur later than the previously constructed code.
Fig. 9.7 shows the performance of (3, 5)-regular LDPC-CCs by our cycle-removing con-
struction and by the Construction-CC, as described in Example 8.2. We consider the tail-
biting LDPC-CCs with the pipelined version of message-passing decoding [21]. Both codes
are of rate 0.4 and length 12050. Our code with the cycle-removing method has girth 12
and the other code only has girth 8. It can be seen that the code with lager girth has better
performance.
Fig. 9.8 shows the performance of (3, 4)-regular QC-LDPC codes by our cycle-removing
construction and by the Construction-QC, as described in Example 8.3. Both codes are of
rate 0.25 and length 3360. Our code with the cycle-removing method has girth 12 and the
other code only has girth 8. It can be observed that our new code can have larger coding
gain than the previously constructed code.
62
0.5 1 1.5 2 2.5
10−6
10−5
10−4
10−3
10−2
10−1
100
BE
R
Eb/N0
 
 
Original (3,5) QC−LDPC code of length 2105 with monomials only
Our (3,5) QC−LDPC code of length 2105 of Construction−QC
Figure 9.4: Performance of (3,5)-regular QC-LDPC codes.
64
0.4 0.6 0.8 1 1.2 1.4 1.6 1.8 2 2.2 2.4
10−6
10−5
10−4
10−3
10−2
10−1
100
Eb/N0
BE
R
 
 
Original (5,6)−irregular LDPC−CC
(5,6)−irregular LDPC−CC of Construction−IRCC
Figure 9.6: Performance of (5,6)-irregular QC-LDPC codes.
66
0.5 1 1.5 2 2.5 3
10−6
10−5
10−4
10−3
10−2
10−1
100
Eb/N0
BE
R
 
 
(3,4)−regular QC−LDPC code with binomials of length 3360
(3,4)−regular QC−LDPC code of length 3360 with cycles removed
Figure 9.8: Performance of (3,4)-regular QC-LDPC codes.
68
Bibliography
[1] R. G. Gallager, “Low-density parity-check codes,” IEEE Trans. Inf. Theory, vol. IT-8,
pp. 21–28, Jan. 1962.
[2] R. M. Tanner, “A recursive approach to low complexity codes,” IEEE Trans. Inf. The-
ory, vol. IT-27, pp. 533–547, Sep. 1981.
[3] D. J. C. Mackay and R. M. Neal, “Near shannon limit performance of low density parity
check codes,” Electron. Lett., vol. 32, pp. 1645–1646, Aug. 1996.
[4] F. R. Kschischang, B. J. Frey, and H. A. Loeliger, “Factor graphs and the sum-product
algorithm,” IEEE Trans. Inf. Theory, vol. 47, pp. 498–519, Feb. 2001.
[5] D. Sridhara, T. Fuja, and R. M. Tanner, “Low density parity check codes from permu-
tation matrices,” in Proc. Conf. Inf. Sciences and Systems, Baltimore, MD, Mar. 2001,
p. 142.
[6] D. J. C. Mackay and M. C. Davey, “Evaluation of Gallager codes for short block length
and high rate applications,” in Codes, Systems, and Graphical Models, B. Marcus and
J. Rosenthal, eds. New York: Springer-Verlag, 2001, pp. 113–130.
[7] H. Tang, J. Xu, Y. Kou, S. Lin, and K. Abdel-Ghaffar, “On algebraic construction
of Gallager and circulant low-density parity-check codes,” IEEE Trans. Inf. Theory,
vol. 50, pp. 1269–1279, Jun. 2004.
70
[17] M. Lentmaier, D. V. Truhachev, and K. S. Zigangirov, “To the theory of low-density
convolutional codes II,” Probl. Inf. Trans., vol. 37, pp. 288–306, Oct. 2001.
[18] A. Sridharan and D. J. Costello, Jr., “A new construction for low density parity check
convolutional codes,” in Proc. IEEE Inf. Theory Workshop, Bangalore, India, Oct. 2002,
p. 212.
[19] A. Sridharan, D. Truhachev, M. Lentmaier, D. J. Costello, Jr., and K. S. Zigangirov,
“On the free distance of LDPC convolutional codes,” in Proc. IEEE Int. Symp. Inf.
Theory, Chicago, IL, Jun. 2004, p. 312.
[20] C.-J. Wu, Y.-C. Chou, C.-H. Wang, and C.-C. Chao, “New construction of LDPC
convolutional codes,” in Proc. IEEE Int. Symp. Inf. Theory, Toronto, Canada, Jul.
2008, pp. 1040–1044.
[21] M. B. S. Tavares, K. S. Zigangirov, and G. P. Fettweis, “Tail-biting LDPC convolutional
codes,” in Proc. IEEE Int. Symp. Inf. Theory, Nice, France, Jun. 2007, pp. 2341–2345.
72
表 Y04 2
一､參加會議經過 
 
Asia-Pacific Conference on Communications (亞太通訊會議，簡稱 APCC)是在亞太地
區所舉辦的重要通訊領域國際會議，前幾年分別是 2006 年在韓國釜山舉行，2007 年在
泰國曼谷，2008 年在日本東京秋葉原，今年已是第十五屆，在大陸上海舉辦。本人目前
擔任 IEEE Communications Society Taipei Chapter Chair，去年前往日本東京秋葉原參加
IEEE Communications Society Asia-Pacific Region Chapter Chairs Meeting 時順道參加
APCC2008，發現 APCC 甚具規模，是亞太地區通訊領域專家交流的絕佳場所。故今年
特地赴上海參加 APCC2009，算是第二次參加 APCC。 
 
本人於十月七日上午，由桃園機場搭乘長榮直飛班機出發，於中午時飛抵上海浦東
機場，再搭乘計程車抵達住宿旅館也是大會會場的上海富豪東亞酒店，隨即入住，為十
月八日開始的會議預做準備。 
 
大會於十月八日上午正式開始，在開幕典禮後，隨即舉行四場大會主題演講 
(Keynote Addresses)，講題包括“From TD-SCDMA to TD-LTE,＂ “Towards a Universal 
Signaling Framework for Integrated Switching in a Future Optical Internet,＂ “Next 
Generation Mobile Access Network --LTE and beyond--,＂ “Communication and Internet: 
How Do They Meet?＂等。除一位來自美國的學者之外，主要都是由大陸、日本、韓國的
行動電話公司或其研究機構的專家介紹最新發展。其中最後一個主題演講
“Communication and Internet: How Do They Meet?＂，來自韓國的演講者舉了不少以多媒
體展示的例子，相當有趣，令人印象深刻。 
 
十月八日下午則開始舉行論文發表會 (Technical Sessions)，至十月十日下午為止共
二天半，分成三個 Tracks，分別是 Wireless Communication Systems (WCS) and Signal 
Processing for Communications (PCS) Joint Track, Optical Communications (OC) Track, 
Network Communications (NC) Track，同一時間有四個 Sessions 一起進行，全部 34 個
Sessions，共有 215 篇論文發表。 
 
大會晚宴於十月九日舉行，除頒發最佳論文獎外，也由下屆主辦者介紹會議地點紐
西蘭奧克蘭相關情況，氣氛相當熱烈。席間本人與不少故舊相談甚歡，更結識了不少新
朋友。 
表 Y04 4
NC Track 的 Sessions。個人觀察，此次會議以 MIMO, Cognitive Radio, Cooperative 
Communications 等方面的論文較為熱門，也較有新意。另外值得注意的是，這幾年來
自大陸各大學的論文數量顯著增加，也有一些品質頗為不錯的論文。此外，大陸大學近
幾年師資品質顯著提昇，在會場也遇到幾位甚為優秀的年輕教師。 
 
三､考察參觀活動 
 
無其他考察參觀活動。 
 
四､建議 
 
本人在此感謝國科會計畫經費補助，方得以參加此次會議。參加國際學術會議對研
究者極為重要，建議國科會以後應持續支援國內學者專家參加國際學術會議。此外，今
後我們也應多加強與亞太週邊國家在通訊領域的學術交流。 
 
五､攜回資料名稱及內容 
 
Final Program 一本、Proceedings USB 隨身碟一個。 
 
六､其他 
 
無。 
 
表 Y04 2
 
一､參加會議經過 
 
International Workshop on Signal Design and Its Applications in Communications (訊號
設計及其通訊應用國際研討會，簡稱 IWSDA)起源於 2001 年在大陸成都首次舉辦，後來
2005 年在日本山口縣，2007 年又回到成都，今年(2009 年)是第四屆，在日本福岡舉行。
這是序列設計(Sequence Design)領域的二大國際研討會之一，另一則是 International 
Conference on Sequences and Their Applications (SETA)。本人近年來部分研究著重於序列
設計及其在通訊系統上的應用，故此次特地至福岡參加本屆會議，今後也將持續參加此
研討會。 
 
本人於十月十八日一大早，由桃園機場搭乘長榮班機出發，約中午時到達福岡機
場，轉搭巴士及地鐵後抵達住宿之旅館，為十月十九日開始的會議預做準備。 
 
大會於十月十九日下午開始在會場「福岡國際會議場」接受報名及領取資料，晚間
則在附近餐廳舉辦豐盛之歡迎餐會，讓與會學者專家有相互交流的機會，本人也與不少
故舊相談甚歡，更結識了不少新朋友。 
 
大會自十月二十日至十月二十二日連續三日，每天上午九時左右均安排 Plenary 
Talks，由頗負盛名的學者專家，就某一課題做較完整的介紹。講題包括 “Low Correlation 
Zone Sequences over Finite Fields and Rings,＂ “Cross-correlation of M-sequences, 
Exponential Sums and Dickson Polynomials,＂ “Wireless Challenge 等，演講內容都非常豐
富，令人深覺受益良多。 
 
學術論文發表會 (Technical Sessions)則從十月二十日上午起至十月二十三日中午
止，因本研討會領域較集中，規模並不大，同一時間只有一個 Session，共安排了十個 
Sessions，全部發表的論文約四十五篇。Technical Sessions 包括： “Optimal Sequences,＂ 
“ZCZ/LCZ Sequences,＂ “Communication Systems,” “Decoders for Communications,＂ 
“Frequency Hopping Sequences,＂ “Theoretical Analysis of Sequences,＂ “Applications 
of Sequences,＂ “Miscellaneous Sequences/Codes 1,＂ “Miscellaneous Sequences/Codes 
2,＂ “Performance Analysis of Communication Systems＂等，都與大會主題密切相關。 
 
表 Y04 4
 
 
本人主持論文討論情形 
 
 
與會人員合影 
 
二､與會心得 
 
從本研討會發表論文觀之，在序列設計方面，有不少好的研究課題，其中
Complementary Sequences, ZCZ/LCZ Sequences 等與本人的研究密切相關，這次也學到不
少東西。此外，序列在通訊系統上之應用，更是有不少潛力可再繼續發揮。 
 
這項會議雖然規模不大，但反而顯得氣氛更熱烈，討論也更密切，是其他大型會議
所不及。與會者彼此間也顯得熟悉而親切，令人印象良好。此次會議國內出席者，除本
