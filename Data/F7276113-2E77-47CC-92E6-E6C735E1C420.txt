1 
行政院國家科學委員會專題研究計畫成果報告 
服務水準限制下製造供應鏈考慮機器當機及啟動時間之最佳控制 
Optimal Control of a manufacturing supply chain with server 
breakdowns and startup times under service level constraint 
計 畫 編 號：NSC 98-2221E-164-016 
執 行 期 限：98年 08月 01日至 99年 07月 31日 
主 持 人：王風帆   修平技術學院工業工程與管理系 
計畫參與人員：劉鎮源、黃振誠   修平技術學院工業工程與管理系 
一、中文摘要 
當機器啟動成本不可忽略時，生產系統可以累積一定數量N(N>=1)訂單再開始生產，以
達規模經濟效益，稱之為N策略，然而N策略之延遲生產方式將導致生產週期變長，本研究探
討“存貨”N策略模式，以縮短訂單下達至完成出貨之前置作業時間並兼顧降低成本之效
益，並將單階結果延伸至佇列存貨網路領域，最後藉由一個二階製造供應鏈在服務水準限制
下之優化為例說明所提模型在運籌實務上之應用。 
關鍵詞：N 策略，佇列存貨，啟動，擬生死，離開過程 
 
Abstract 
An N policy queueing-inventory model concerning breakdown and startup times is proposed. 
We use approximated QBD approach to derive stationary queue length probabilities for non-sopped 
demand and stopped demand patterns. Optimal thresholds of production and inventory control are 
searched based on convexity property. Further, we extend to a supply chain context. Since the 
proposed model is new in the literature, No available results can be directly employed. We derive 
the departure process of the network and verify the accuracy of the derivation by simulation. The 
connected multi-stage problem is then solved. Finally, a service level constrained optimization of a 
two-stage manufacturing supply chain is proposed to illustrate its application. 
Keywords: N policy, queueing inventory, startup, QBD, departure process. 
 
二、緣由與目的 
隨機運籌網路為供應鏈在充滿不確定之供需因素下分析基石，不考慮產能之多階存貨模
式(multi-echelon inventory model)始於 Clark & Scarf(1960)，較實際模式則為考慮產能之佇列存
貨網路(Queueing inventory network)，例如 Lee & Zipkin (1992)假設各站為獨立 M/M/1 系統，
提出矩陣分析式，隨後 Liu et al.(2004)並考慮上下游互動關係發展出 Convolution 方法以解非
馬可夫模式，Veatch and Wein(1994)使用 MDP 解二階存貨佇列網路，提出所謂交換曲線之最
佳作業策略。惟上述分析皆圍繞在基本存貨控制而發展，若某供給點之生產必須考慮啟動成
本，基本存貨控制是否仍適當？整體績效如何分析及最佳化？本文探討之 N 策略或與其類似
之批量製造都是運籌實務問題，但包含啟動成本之多階運籌網路最佳作業策略尚無文獻報
導，文獻僅見批量製造網路(如 Curry and Deuermeyer, 2002)本文因此提出當供應網路中有不可
忽視啟動成本，假設使用 N 策略生產管制手段為適當，將其應用至產能受限多階存貨模式，
並完成以下成果： 
1 存貨 N 策略單階評估式與最佳化過程。 
2 N 策略離開過程公式推導與服務水準限制限制下最佳化過程。 
3 
2
xc  SCV of r.v. x 
⊕  Kronecker sum of two matrices 
⊗  Kronecker product of two matrices 
ie  Unit row vector with a 1 at the ith entry 
I  Identity matrix of proper size 
1  Column vector of all ones with proper size  
Additionally, we denote startup point as when queueing level equals N. Except for the service time, 
all the other r.v.’s are independent and identically distributed with only the first moment and squared 
coefficient of variation (SCV) known. We approximate all the general r.v.’s with continuous phase 
type (CPH) distributions. The demand process is one by one with inter-arrival time a, which is 
approximated as CPH ),( Tα with order .ka  v is approximated as CPH ),( Uυ  with order .kv  b is 
approximated as CPH ),( Sβ  with order .kb  The breakdown interval is exponential with mean rate 
fu . When breakdown occurs, the server is repaired with w, which is approximated as CPH ),( ηγ  
and order .kw  
Definition 1 According to Zipkin (2000, p. 473), if ijijmM )~(
~
=  and ijijnN )~(
~
=  are two square 
matrices with respective dimensions pp ×  and qq ×  then 










=⊗
NmNm
NmNm
NM
ppp
p
~
~
~
~
~
~
~
~
~~
1
111
MMM
L
 
.
~~~~ NIIMNM ⊗+⊗=⊕  
Definition 2 “Alternating renewal process” From the definition of the alternating renewal 
process by Neuts (1994, p. 52), we define an alternating renewal process pertaining to 
breakdown and repair with transient matrix F: 
.
0








−
=
ff uu
F
γ
1ηη
 
Definition 3 Define ( ),1 ˆ 1 kwdiagI ×= 0  where ( )xdiag  represents a diagonal matrix with 
diagonal elements specified by its parameters x and zeros for all off-diagonal elements. 
Definition 4 Define I~  as follows. 
( )
.0
0
~
00
11






=
×
×
kk
kv
I
I
e
 
where ( ) .10 += kwkbk  
Definition 5 Define the following row vectors: 
( )
( )
( ) .
,
,
2112
2111
1110
kkvkw
k
k
×++
×
×
=
=
=
eε
eε
eε
 
Proposition 1 “Superposed process” A superposed process, ,'S  which combines normal 
service with alternating breakdown and repair process is CPH( ), 'Spi  with order 
5 
where I~ is from Definition 4. The state of our studied problem is ))(),(( tjtn  where )(tn  denotes 
the queueing level at the servicing stage. )(tj  is the phase of the error-prone service with either 
idle or startup state incorporated. 
Special cases 
Some works existing in the literature can be treated as special cases of our proposed model 
after proper parameter setting in the canonical model. For example if all r.v.s are Markovian, we 
obtain a simple M/M/1/K-type queueing system with 1221 BBB == and .2121 CCC ==  Under such 
case only the diagonal sub-matrices are slightly different before and after startup point. The 
resulting infinitesimal generator Q~  has a very concise form (cf. Buzacott and Shanthikumar, 
1993). 
3.1.2 Probability distribution 
In this section, first we derive probability distribution for infinite queueing case followed by 
finite case. 
Infinite case: 
To solve our studied problem, we categorize two cases: N > 1 and N = 1. 
Case I: N > 1 
For N > 1, we use a hybrid solution method incorporating iterative method for finite QBD and 
matrix geometric method (MGM) for infinite QBD. First notice when Nn ≥  the evolution of the 
QBD process remains the same as 
 
,02
2
22 =++ CRRAB  (3) 
hence we can use MGM to obtain the stationary probability vector for Nn ≥ as follow: 
 
.for  , NnR NnNn ≥=
−pp  (4) 
Here R is a minimal non-negative matrix (Neuts, 1994) which may be obtained through repetitive 
substitution methods: 
 ( )( ) .)( 12222 −+−= ACRBR oldnew
 
(5) 
However, Np  in (4) still needs to be solved. We use the canonical approach for solving a finite 
QBD, which iteratively calculates np  from the following relations: 
 
.0
,22 ,0
,0
,0
211112
11111
121100
0100
=++
−≤≤=++
=++
=+
−−
+−
CAB
NnCAB
CABp
CAp
NNN
nnn
ppp
ppp
pp
p
 (6) 
The solutions to (6) are as follows. 
 
.][  where,
,22for ,][  where,
,][ where,
,  where,
1
12121111
1
11111
1
00111121
1
000010
−
−−−−
−
−+
−
−
+−==
−≤≤+−==
+−==
−==
BGACGG
NnBGACGG
BGACGG
ACGG
NNNNN
nnnnn
pp
pp
pp
pp
 (7) 
Starting from 1−Np  we may solve (7) in a reverse way as 
7 
,22
'
2 BAA +=  
together with the normalizing equation 
 ∑
−
=
=+
1
0
1ˆ
K
n
KnKG 1p1p  (13) 
as in the infinite case to obtain .Kp  
Case II: K > N 
In this case, besides (7) we add two more equations: 
 
.11for ,][  where,
,][  where,
1
21221
1
121221
−≤≤++−==
+−==
−
−+
−
−+
KnNBGACGG
BGACGG
nnnnn
NNNNN
pp
pp
 
(14) 
On the analogy of K = N case, we may obtain .Kp . 
 
3.1.3 Performance measures 
 The Performance measures we are interested in infinite capacity are WIP, inventory and 
backorder level and probability of the server being in some state. They are obtained in proposition 4. 
The Performance measures we are interested in finite capacity is the same as in infinite case, plus 
the probability of lost sale. They are obtained in proposition 5. Before we derive these measures we 
have the following definition. 
Definition 6 Define the following column vectors 
( )





⊗=






−⊗
⊗=






⊗
⊗=
0
1
1ε
11
0
1ε
11
0
1ε
5
4
3
ˆ
,
ˆ
II
I
 
with dimension ( )( ) 11 ×+×+× kwkskvka  where Iˆ is from Definition 3. Similarly define 
'
4
'
3  , εε and
'
5ε with the same construct as the above, however with 
dimension ( )( ) .111 ×+×+× kwkska We use conventions that ( ) 0=⋅∑d
c
 for dc >  and 
( ) ( ).,0max xx =+  
Proposition 4 
(1) The expected number of customers in the system is given by 
 
( ) ( )( ) .ˆ][ 1
1
21






−+−+= ∑
−
=
−−
N
n
nN RIRRINGLE 11p  (15) 
(2) The expected inventory level is given by  
 
( ) ( ) ( ) .ˆˆ][ 1
1
0 





−+−+= ∑∑
=
−
−
=
++
Z
Nn
Nn
N
n
nN RnZGnZGZHE 111p  (16) 
(3) The expected backorder level is given by 
9 
Case I: r ≥ 0 
 
( ) .ˆ
1
1p nK
K
Zn
GZnB ∑
+=
−=  (24-1) 
Case II: r < 0  
 
( ) ( ) .ˆˆ)(ˆ 1
1
1 





−+−+−= ∑ ∑
−
= =
++
−
N
n
n
K
Nn
nNK GZnGZnZGB 111p  (24-2) 
(4) The probability of busy system is given by 
 
.
ˆˆ
_
1
1
3
'
3 





+= ∑ ∑
−
= =
N
n
K
Nn
nnK GGbusyp εεp  (25) 
(5) The probability of idle system is given by 
 
.
ˆˆ
_
1
1
0
'
5 





+= ∑
−
=
N
n
nK GGidlep 1εp  (26) 
(6) The probability of breakdown system is given by  
 
.
ˆˆ
_
1
1
4
'
4 





+= ∑ ∑
−
= =
N
n
K
Nn
nnK GGbkdnp εεp  (27) 
(7) The probability of system under starting up is given by 
 
.
ˆ
_ 5∑
=
=
K
Nn
nK Gstartp εp  (28) 
(8) The probability of system losing sales is given by 
 
._ epKlossp =  (29) 
Proof. The proof is similar to the infinite case.                                   ■ 
We summarize the solution procedure in Algorithm I for our studied problem: 
Algorithm I 
If {waiting space is infinite} Then 
 Applying eq. (7) to obtain 1 N-G  together with eq. (9) and eq. (10) to obtain . Np  
 Calculate performance measures based on eq. (14) ~ eq. (21). 
Else {// waiting space is finite} 
 If {K = N} 
  Applying eq. (7) to obtain 1 K-G  together with eq. (12) and eq. (13) to obtain . Kp  
 Else {// K > N } 
  Applying eq. (14) to obtain 1 −KG  together with eq. (12) and eq. (13) to obtain . Kp  
 End If 
 Calculate performance measures based on eq. (22) ~ eq. (29). 
End If 
 
 
3.1.4 Optimization 
 In this section we show that total operating cost for a GI/G/1 queueing-inventory system with 
11 
( ) ( )
( ) ( )( )
1
11
1ˆ
2
1
011
ˆ
,1ˆ1,
−
==
+=
+
−
=
++++−=
−= ∑
N
NN
Z
rZ
LN
LLN
N
ZZL
N
ZrL
L  
where 1=NL  is obtained by letting N = 1 and plug in (15), which is not related to N, Z too.  
Therefore we may rearrange terms and obtain the last expression in (30), which is now ready for 
optimization procedure.                                                           □          
Note ( )ZZH ˆ,1ˆ −  and ( )ZZB ˆ,1ˆ − in the second expression of (30) are obtained by setting N = 
1 in Algorithm I. For M/G/1 without startup and breakdown, Gavish and Graves (1981) proved the 
convexity property of ( )ZNTC ,  w.r.t. N and Z respectively. However, their optimization 
procedures based on the convexity property is very complicated. The following posed method is 
more intuitive. First we borrow the finding indicated by Gavish and Graves (1981): ( )ZTC ,1  is 
convex in Z. Note ( )QTC ,1  denoted in Gavish and Graves equals to ( )ZZTC ,1−  in (30). 
( )ZZTC ,1−  goes linearly when Z is below zero. In section 6 we numerically verify these under 
GI/G/1 case. Below imagine we neglect the WP cost, i.e. assume N/2 does not exist (That is what 
Gavish and Graves do.) Starting from the base stock which has the smallest cost we put it into the 
optimal (r, Z) set. Next we find the remaining base stock which has the smallest cost. This base 
stock may be at the right or left of the current base stock. If the cost of the considered base stock is 
smaller than the current averaged cost we put it into the (r, Z) set and recalculate ( )ZrTC , . This 
process is repeated until we can find no more base stock with smaller cost than the current averaged 
cost. Now if we want to consider WIP cost, it becomes a little bit complicated. However, the same 
procedure still applies with minor modification. In figure 3 we draw a possible realization of this 
optimization process where ( )ZrTC ,  is a function of N. It can be proved that ( )ZrTC ,  is convex 
in N when N is less than or equal to n and then ( )ZrTC ,  increases after n. In Algorithm II we 
detail the modified optimization procedure. 
Algorithm II 
Step1: Starting from ,0=Z  Calculate ( )0 ,1TC  and increment Z  by one. Search until 
( )ZTCZ
Z
 ,1min* =  is found using convexity of .Z  Let .1** −= Zr  
Setp2:  If ( ) ( )1 ,1 ,1 ** +≤ ZTCrTC  let ,1 , ** −== rrZZ  Else let . ,1 ** rrZZ =+=  
Step3: Calculate ( )ZrTC  ,  according to equation (30). If ( ) ( )**  , , ZrTCZrTC ≤  let 
, ,
** rrZZ ==  Repeat Step 2. Else Stop, ( )**  , Zr  is global optimal. 
 
Figure 1 Optimization for (r, Z) policy starting from the optimal base stock policy 
13 
Similarly, we next derive the departure process for an N policy M/G/1 system. From Medhi and 
Templeton (1992) we may obtain a busy cycle 
( ) ( )( ) ( ).1/ ρλ −+= bB uvENCE  
Analogously, we may obtain for N policy system: 
( )( ) ( ).1/ ρλ −+= vENM  
Then, we may treat the service process of an N policy system as a startup batch with (Curry and 
Deuermeyer, 2002) 
( )
 ++
=
                      
  
 /K.1-Ky probabilitwith b
1/K,y probabilitwith bvyδ  
Here K denotes a random batch. Again we use mean value analysis to obtain the expected 
inter-departure time: 
( ) ( ) ( ) ( )
M
bMEvEyEE ++=δ , 
and second moment: 
( ) ( )( ) ( ) ( ).1 222
M
bEM
M
bvyEE −+++=δ  
Unlike a standard batch startup model, the expected idle time of an N policy system is the interval 
between the end of the last busy period and next startup, which is the accumulating time for N 
orders: 
( ) ( ).aNEyE =  
The second moment of the idle time is derived as  
( ) ( )( ) ( )
( )( ) ( )( )
( ) ( )( ) .1
var
2
222
22
aENN
aENaEN
yyEyE
+=
+=
+=
 
The expected regenerative cycle is 
( ) ( ) ( ) ( ).bMEvEaNECE N ++=  
Traffic intensity may be obtained: 
( ) ( )
( ) .NCE
bMEvE +
=ρ  
Finally, the SCV of inter-departure time may be derived as: ( )
( )( )
( )( ) ( ) ( )
( )( )
( ) ( ) ( )
( )( )
( ) ( ) ( ) ( )( )
( )( )
( ) ( )
( )( ) 1
212
11
1
222
2222
2
22
2
2
2
−+
+−
+
++
=
−
−+++
=
−=
NN
N
N
N
CE
bEvME
CE
bEvECEM
CE
bEMvMEyME
MCE
MbEMMbvyE
E
E
c
ρ
δ
δ
δ
 
15 
Algorithm II  
Step 1 Set up PH/PH/1 model using (1), (2). 
Step 2 Calculate )( 1NP  by using the above derived procedure. let P(K1) = P(N1). 
Step 3 Calculate 2δc  using (31). 
Step 4 Set up PH/PH/1 model and calculate P(K2) and )( 2BP based on convolution of Wang 
(2009). 
Step 5 Calculate ][ 2KE , ][ 2BE , ][ 2IE , f2 using Wang (2009). 
  
Note that alternatively we may use Wang et al. (2007) to quickly obtain ][ 1KE . 
 
 
Fig. 2 A two-stage manufacturing supply chain 
 
3.2.3 Optimization 
Suppose the suggested policies are used at respective stages, we want to optimize the control 
parameters (N, Z) as follows: 
 
( ) ( ) ( )( )
( ){ }, timewaiting    ..
,,,
2,1
2
ω≤
++= ∑
=
ETS
ZNHEcNLEc
CE
KTC
j
hjWIP
N
 (32) 
where ω is the pre-specified SL in terms of expected waiting time. 
 
3.3 Numerical results 
3.3.1 Single stage 
In this section we first test the accuracy of the posed model for a GI/G/1 system with breakdown 
and startup followed by optimization for M/G/1 systems without breakdown and startup. Finally, we 
optimize an unreliable GI/G/1 system without startup. We compare our optimization method with 
Gavish and Graves (1981). The complete QBD model and optimization procedure are written in 
MATLAB. The simulation verification model is developed using ARENA. The parameter setting in 
Gavish and Graves is mean arrival rate: 96.008.0 << λ  with increment 0.08. The service process 
composes of three consecutive exponential distributions with mean rates 1/2, 1/3 and 1/6 
respectively and SCV 0.39. Cost parameters are .100,10,1 === sbh ccc  Additionally, we set 
1=hwc  for optimization test. Table 1 lists the performance test for GI/G/1 queueing inventory 
systems solved by both QBD and simulation methods. The parameter are: 
( ) ( ) ( ) ( ) .1.0,5.0,10,8.0,2 ===== wEuvEbEaE f  
From table 1, our approximation model is very accurate for the studied queueing inventory 
system. For GI/G/1 system we obtain the same invariant probability as for an M/G/1 system when 
the server is either in busy or repairing state. We therefore confide in using QBD model as an 
accurate evaluation tool for the subsequent optimization procedure. Table 2 lists the optimal results 
for an M/G/1 queueing system without breakdown and startup solved by Algorithm I (denoted as 
17 
Table 3 Comparison of optimal results between QBD and ENUM for GI/G/1 system 
 QBD_AVG QBD_ENUM 
 r Z E[B] E[H] TC r Z E[B] E[H] TC 
0.08 -1 2 0.03  0.95  5.24  -1 2 0.03  0.98  5.27  
0.16 -1 3 0.06  1.38  7.45  -1 3 0.06  1.45  7.52  
0.24 -1 4 0.10  1.78  9.11  -1 4 0.10  1.89  9.21  
0.32 -1 5 0.15  2.16  10.54  -1 5 0.15  2.30  10.68  
0.4 0 6 0.13  2.93  11.68  0 6 0.13  3.07  11.82  
0.48 1 7 0.15  3.66  12.91  1 7 0.15  3.80  13.04  
0.56 1 8 0.25  3.88  14.07  1 8 0.24  4.03  14.21  
0.64 2 9 0.32  4.46  15.43  2 9 0.32  4.61  15.55  
0.72 4 11 0.37  5.82  17.05  4 11 0.36  5.96  17.15  
0.8 7 14 0.42  7.88  19.29  7 13 0.45  7.54  19.37  
0.88 11 17 0.58  10.01  22.60  11 17 0.57  10.13  22.66  
0.96 17 23 0.86  13.66  28.35  17 23 0.85  13.78  28.40  
Total CPU time 19.54   564.64  
3.3.2 Multi-stage 
The same parameter setting is used as in single stage case except that the first stage is reliable. 
Additionally we add E[b] = 1 at the second stage and all SCV are assumed unity. We first test the 
accuracy of the posed model for departure process from an M/G/1 N policy queueing inventory 
system followed by service-level-constrained optimization for an integrated two-stage 
manufacturing supply chain. We use the ReadWrite module of ARENA to obtain inter-departure 
time data. To see the accuracy of (31), for example, we compare it with simulated result for N = 15, 
(31) yields 132 =δc  while the simulated SCV is 08.132 =δc  for 100 000 simulated time units. The 
deviation of (31) from the simulation is only 0.61%. To see the accuracy of the proposed method, 
we use (31) as input for the proposed PH/PH/1 model to obtain WIP at the second stage and 
compare its results with those obtained from Allen_Cuneen approximation. The results are shown in 
table 4. Simulation shows our proposed PH/PH/1 model yields averaged error of -3.32%, which is 
more accurate than 22.22% of Allen_Cuneen. We run 10 replications with 100 000 time units for 
each run. Note in this test if the second stage is treated as isolated M/M/1 the WIP value is equal to 
unity, which is obviously deviated from the true PM. From table 4 we are confident that our 
evaluation model is viable for the task of optimization. Table 5 compares our proposed optimization 
method with the other two methods including individual and sequential optimizations. 
Table 4 Comparison of WIP between simulation and others for WIP at the second stage 
N 2δc  SIM PH Err1 AC Err2 
1 6.00  2.06 2.00  -2.91% 2.25  9.22% 
2 6.31  2.08 2.04  -1.72% 2.33  11.95% 
3 6.70  2.12 2.10  -1.07% 2.43  14.39% 
4 7.13  2.17 2.16  -0.69% 2.53  16.74% 
5 7.60  2.25 2.22  -1.54% 2.65  17.78% 
6 8.09  2.3 2.28  -1.01% 2.77  20.55% 
7 8.60  2.38 2.34  -1.74% 2.90  21.85% 
8 9.12  2.44 2.40  -1.62% 3.03  24.21% 
9 9.66  2.55 2.46  -3.47% 3.16  24.09% 
10 10.20  2.62 2.52  -3.74% 3.30  25.95% 
11 10.75  2.7 2.58  -4.38% 3.44  27.31% 
12 11.31  2.77 2.64  -4.67% 3.58  29.12% 
13 11.87  2.86 2.70  -5.64% 3.72  29.95% 
14 12.43  2.97 2.76  -7.22% 3.86  29.90% 
15 13.00  3.07 2.81  -8.41% 4.00  30.29% 
    -3.32%  22.22% 
Note: SIM:simulation, PH: PH/PH/1, err1:(PH-SIM) / SIM ∗100%, AC: Allen-Cuneen, err2: (PH-SIM) / SIM ∗100%. 
19 
process from upstream stage and use decomposition method to approximate a base-stock controlled 
tandem supply network. Liu et al. (2004) extends to allow for arbitrary processing at each stage for 
the same base-stock controlled tandem supply network considering the effect of departure process. 
Based on Liu et al., Wang (2009) generalized to allow for resource sharing and probability routing 
based on the same tandem structure and inventory control. 
 
Figure 2 E[L] as a function of N for different Z 
 
Figure 3 E[H] as a function of N for different Z 
 
Figure 4 SLC optimization for two-stage SC 
21 
五、參考文獻 
[1] Altiok T. On the phase-type approximation of general distributions. IIE Trans 
1985;17(2):110-116. 
[2] Buzacott JA, Shanthikumar JG. Stochastic models of manufacturing systems. NJ:Prentice 
Hall;1993. 
[3] Gavish B, Graves SC. Production/inventory systems with stochastic production rate under a 
continuous review policy. Computers Ops Res 1981;8:169-183. 
[4] Heyman DP. Optimal operating policies for M/G/1 queuing systems, Ops Res 1968; 
16:362-382. 
[5] Ke JC. The optimal control of an M/G/1 queueing system with server vacations, startup and 
breakdowns, Computers Indus Eng 2003a; 44:567-579. 
[6] Ke JC. The analysis of a general input queue with N policy and exponential vacations, 
Queueing sys 2003b;45:135-160. 
[7] Latouche G, Ramaswami V. Introduction to Matrix Analytic Methods in Stochastic Modeling. 
PA:ASA-SIAM;1999. 
[8] Li QL, Xu DJ, Cao J. Reliability approximation of a Markov queueing  system with server 
breakdown and repair, Microelectron Reliab 1997;37(8):1203-1212. 
[9] Medhi J, Templeton JGC. A Poisson input queue under N-policy and with a general start up 
time, Computers Ops Res 1992;19(1):35-41. 
[10] Neuts MF. Matrix-Geometric solutions in stochastic models: An algorithmic approach, 
Reprinted Edition, NY:Dover Publications Inc;1994. 
[11] Sobel MJ. Optimal average-cost policy for a queue with start-up and shut-down costs, Ops Res 
1969;17(1):145-162. 
[12] Wang FF, An analytic framework for generic inventory queueing systems. Journal of the 
Chinese Institute of Industrial Engineers, 2009;26(4):303-315. 
[13] Wang FF, The effect of repairmen vacation issue on the performance of multi-server failure 
models, Journal of Management and System (To appear). 
[14] Wang FF, N policy M/G/1 production-inventory system with Markovian breakdown and start 
up times，2010 產業創新與管理研討會，修平工管。 
[15] Wang FF, Stochastic Petri nets as alternative analytic models for supply networks，2010 商業
管理研討會，北科大商業自動化。 
[16] Wang FF，同步與非同步多服務員失效模式之客製化模擬與決策分析，第六屆跨領域管
理學術暨實務研討會，東海企管。 
[17] Wang FF, A generic modeling framework for queueing-inventory systems with single 
removable servers, (under review). 
[18] Wang FF, An analytic model for optimal control of a manufacturing supply chain with server 
breakdowns and startup times under service level constraint, (working paper). 
[19] Wang KH, Ke JC. A recursive method to the optimal control of an M/G/1 queueing system 
with finite capacity and infinite capacity. Appl Math Modell 2000;24:899-914. 
[20] Wang KH, Wang TY, Pearn WL. Optimal control of the N policy M/G/1 queueing system with 
server breakdowns and general startup times. Appl Math Modell 2007;31:2199-2212. 
[21] Yadin M, Naor P. Queueing system with a removable service station. Opl Res Quarterly 
1963;14:393-405. 
[22] Zipkin P. Foundations of Inventory Management. NY:McGraw-Hill;2000.
 
98年度專題研究計畫研究成果彙整表 
計畫主持人：王風帆 計畫編號：98-2221-E-164-016- 
計畫名稱：服務水準限制下製造供應鏈考慮機器當機及啟動時間之最佳控制 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 2 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 3 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 2 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 0 2 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
 
