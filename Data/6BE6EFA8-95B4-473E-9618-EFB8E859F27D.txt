2 
 
一、 前言 
 
倉儲的主要功能在儲存原料及各級產品，以便能迅速滿足供應鏈中的產銷需求。倉儲的存在
ㄧ方面可以降低產品運輸成本、提高產品運輸效率，進而提升顧客滿意度，另ㄧ方面，倉儲
的存在也可以協助生產廠商適應顧客需求的變化、減少生產缺料狀況，並進而提升生產效率。
然而倉儲作業也需要花費相當的成本，根據研究報告指出[1]，倉儲作業成本大約佔公司銷售
成本的百分之二至百分之五，因此，如何提供適當的倉儲管理方式，來降低倉儲作業成本，
提升倉儲作業效率，是非常重要的。 
 
在所有的倉儲作業中，揀貨作業是最耗費時間的，研究報告指出[1]，揀貨作業時間約佔所有
倉儲作業時間的 50-70%，因此如何改善揀貨效率實為當務之急。 
 
倉儲儲位指派的問題主要是研究如何將產品項目指派到儲位上，以使得揀貨員的行走距離能
夠最小。良好的儲位指派方式，可以減輕揀貨員的工作負擔，進而提昇揀貨效率。然而，倉
儲儲位指派的問題具有相當高的計算複雜度，其搜尋空間隨著倉儲產品項目數目和訂單數目
的增加作幾何性的成長，近年來，由於資訊科技的進步，許多現代化的倉儲資訊系統相繼出
現，大量的訂單資料可以儲存於大型資料庫中，這些大量儲存的訂單資料，使得儲位指派問
題更加的複雜且困難。有關倉儲儲位指派的文獻探討，將在下一章節敘述。 
 
目前在文獻上有許多關於儲位指派問題的演算法，或者假設產品之間毫無關聯性產品，或者
僅探討至多兩個產品間的關聯性，這些演算法多有執行效率很高的優點，然而由於未考量多
個項目之間的關聯性，因此，常無法找到很好的可行解。也有一些方法考量了多個項目之間
的關聯性，但他們多使用較複雜的運算模型，如數學規劃等，這些方法具備有相當高的計算
複雜度，當訂單數目繁多的時候，他們常無法快速找到很好的可行解。 
 
綜合而言，要應用品項一起出現於訂單的關聯性來改善揀貨效率，有以下的問題需要克服: 
1. 我們要能夠找出那些品項經常一起出現在訂單中。 
2. 我們要有一個儲位指派方法，能夠利用品項一起出現的資訊，將常一起出現的品項放置
在相近的地方，以最佳化揀貨效率。 
 
要解決上述 (1) 的問題，我們可以使用高頻項目集探勘。所謂高頻項目集探勘是從大型資
料庫中，探勘出那些資料項目(item) 經常會一起出現在資料庫交易中，目前已有許多學者提
出許多高頻項目集探勘方法，並且在市面上已有許多成熟的高頻項目集探勘軟體。直覺上，
如果我們每一個張訂單當作一筆資料庫交易，將每一個倉儲品項視為一個資料項目，則我們
可以應用高頻項目集探勘，來找出那些品項經常一起出現在訂單中。 
 
要解決上述 (2) 的問題，我們使用螞蟻演算法，螞蟻演算法是一種模擬螞蟻覓食行為的演算
法，螞蟻演算法至今已應用於許多複雜的組合最佳化問題上，尤其如 MAX-MIN螞蟻演算
法在解決旅二次指派問題(將設施指派給位置)、一般化指派問題(將工作指派給代理人)、旅
行者問題上已經有很好的成效，由於倉儲儲位問題與二次指派問題、一般指派問題非常類
4 
單中的次數，然後將品項成對的依其共同出現的次數排序，他們將排序在前的品項成對的指
派到離揀貨點較近的位置，將排序在後的品項成對的指派到離揀貨點較遠的位置，根據他們
的實際驗證成果顯示可減低 30-40﹪揀貨距離。Lee [7] 定義品項與品項之間的關聯性為此兩
個品項共同於同一張訂單的機率(如同 Frazelle and Sharp [6]一樣)，他並以群組技術的方法將
品項分成多個群組，再依據群組的周轉率，以空間填充曲線(space-filling curve)的方式將這些
品項擺放至鄰近的儲位。Amirhosseini and Sharp [8] 提出一個訂單滿意關聯度測量 (order 
satisfying correlation measure, OSCM)的方法，他們定義品項與品項之間的關聯性為此兩種品
項可以滿足每一張訂單的比率的總和。他們同時也提出一個階層式聚類的方法，將關聯性較
強的品項安排為同一群組，以利儲位指派。 
Mazini [9] 也將品項之間的關聯性定義為此兩個品項共同於同一張訂單的次數(如同 
Frazelle and Sharp [6]一樣)，他先將品項兩兩配對，計算出每一配對品項間的關聯性，再將這
些品項的配對依據其關聯性從大到小排序，最後提出了三種方法來決定個別品項的排序，這
三種聚類方法分別是一般聚類法(CLA)、平行法(PA)與循序法(SA)。一般聚類法(CLA)先將品
項聚類成多個群組，然後再將多個群組依其週轉率排列，以決定品項的排序。平行法由關聯
性排序大到小逐一檢視配對品項，如果配對品項中的有一個或兩個品項均未列入品項的排
序，則此一個或兩個品項即依序納入品項排序中。循序法中則由目前最後一個納入排序的品
項，來依據品項配對的關聯性循序決定下一個要納入的品項。Xiao [10] 提出了一個改良 Lee 
(1992) 的儲位指派方法，和 Lee (1992)相同的是他同樣以群組技術的方法將品項分成多個群
組，再依據群組的周轉率對品項進行排序，以進行儲位指派。和 Lee (1992)不同的是他提出
一個新的品項關聯性的定義，他定義兩個品項的關聯性為此兩個品項共同出現訂單的頻率除
以此任一個品項出現於訂單的機率。 
 
Liu [11] 提出以數學規劃方式來分析訂單、品項與數量之間的關係，他建立品項與顧客的相
似度，並據以進行品項分群與顧客分群，研究成果顯示其方法可以大幅縮短揀貨距離。
Rosenwein [12] 利用 p-median 最佳化模型的方式以及分支界限方法來找到產品的最佳化區
分群組方式。同ㄧ群組的產品被指派到較相近的儲位。其方法有很好的儲位指派效能，惟計
算複雜度很高。 
 
2. 高頻項目集探勘的介紹及其文獻探討 
高頻項目集探勘問題是最早是由 Agrawal [13]首先提出的，它屬於資料探勘的一支，其
目的是從大型資料庫中，探勘出多數訂單的共同子集合，高頻項目集探勘的優點在於它可以
顯示多個項目之間的關聯性，並且可以處理大型的訂單資料庫，高頻項目集並已經成功應用
在零售業管理 [13]與電子商務 [14]等方面。舉例來說，在零售業的領域中，高頻項目集顯示
出顧客經常一起購買的產品，藉由對高頻項目產品的鼓勵銷售，或是將高頻項目產品置放在
鄰近的位置，將能夠提高銷售的績效。 
舉例而言，在零售業的應用上，一個典型的高頻項目集如下所示:  
購買奶油、購買牛奶、購買柳橙汁 (70%) 
此高頻項目集顯示顧客有 70% 的機會會同時購買奶油、牛奶與柳橙汁時，這樣的
高頻項目集對我們作零售店擺設與商品促銷的決策，有很大的助益。 
在本計畫中，我們將應用高頻項目集探勘在倉儲儲位指配問題上，我們希望能夠研
6 
另外，由於螞蟻是以機率的方式，依據每條路線費洛蒙的強度來選擇前進的道路，因此螞
蟻不一定選擇其他螞蟻走過的較好路徑，也有可能走一條新的路徑，這樣的現象叫做探索
(exploration)，透過探索的過程，螞蟻也有可能找到更好的路徑，並可以將這樣的路徑訊息再
透過費洛蒙的方式傳遞給其他螞蟻，來引導其他螞蟻找到這樣的路徑。透過不斷的利用與探
索的方式，可以使蟻群不斷的發現新的好的路徑，並將新發現的訊息快速的傳遞給其他螞蟻。 
螞蟻演算法最早由 Marco Dorigo博士發明[18]，雖然引起學術界極高的注目，然而由於
和其他演算法比較起來速度較慢，因此沒有很好的應用價值，其間經過不斷的改良，一直到
ACS [19] 和 MMAS [20] 這兩種螞蟻演算法被提出後，又重新受到重視，其中尤其是
MMAS螞蟻演算法在解決旅行者問題上與二次指派方法問題上，都比其他文獻中各種演算
法的效能較為優異，因此，本計劃乃採用MMAS螞蟻演算法作為我們主要的研究方法。 
MMAS螞蟻演算法的基本架構如下所示。 
步驟一: 設定起始參數，並選擇一定數量的螞蟻 
步驟二: 為每一隻螞蟻建立自己的可行解 
步驟三: 應用區域搜尋方法以改善在每一隻螞蟻的可行解 
步驟四: 更新費洛蒙的值 
步驟五: 當中止條件不成立的時候，重複步驟二 
 
四、研究方法 
本計劃第一年的目標是使用柔性結合的方式，我們先使用高頻項目集探勘來找出那些品
項經常一起出現在訂單中，以此建立螞蟻的行走圖形，在計算解單元希求度時僅考量兩
項目間的關聯性，然後再利用MMAS螞蟻演算法求出最佳化儲位指派。詳細步驟將於以
下敘述。 
 
1. 使用高頻項目集探勘來找出那些品項經常一起出現在訂單中 
 為了能夠探勘那些品項經常一起出現在訂單中，以了解多個品項間的共同關聯性，我
們使用高頻項目集探勘的技術，來探勘訂單資料庫。我們首先使用現有的高頻項目集
探勘軟體，來找出那些品項經常一起出現在訂單中，這樣作法有製作成本較低的好處、
系統製作迅速的好處。目前市面上已經有許多成熟的高頻項目集探勘軟體的商品，請
參考 [27] 以得到完整的現有高頻項目集探勘軟體的表列。微軟公司自 2005 年起在
其資料庫軟體 SQL Server 中也提供高頻項目集探勘的功能，以 SQL Server資料庫軟
體的流行性與平價性，更將使得高頻項目集探勘的應用成為十分普及。在 SQL Server
資料庫軟體執行高頻項目集探勘還有一項額外的好處，我們可以使用微軟的 Visual 
Studio 與 VB.Net技術來進行探勘出的知識後處理與知識展現的部份。 
 
2. 使用MMAS螞蟻演算法，並利用品項經常一起出現在訂單中的資訊，來求出最
佳化的儲位址派方式。 
MMAS 螞蟻演算法是目前在文獻中解決二次指派問題(將設施指派給位置)的最
佳方法，就我們要解決的儲位指派問題而言，如果我們把倉儲品項當成二次指派
問題中的設施，把倉儲儲位當成二次指派問題中的位置，則我們可以看出倉儲儲
位指派問題和二次指派問題有非常大的相似性，因此我們可以合理推論，MMAS 
8 
(4) Moon (Lee [13] (1992) 群組技術的方法) 
(5) CLA (Mazini [15] (2006) 一般聚類法) 
(6) PA (Mazini [15] (2006) 平行法) 
(7) SA (Mazini [15] (2006) 循序法) 
(8) Xiao (Xiao et al. [16] (2009) 改良群組技術的方法) 
2. 我們製作完成了長方形倉儲(包含返回式、穿越式、最大間隔式三種不同的揀貨員行走方
式)與自動倉儲系統的模擬程式 
我們考量一個長方形倉儲，此長方形倉儲具備有 5 個走道，每一個走道可以撿取 8 個品
項。 
為了了解我們的方法在不同揀貨員走動方法(routing method)下的效能，我們製作了以下的
功能 
(1) 揀貨員使用返回式(return)走動方法: 這代表揀貨員進入和離開走道在同一個位置，同
時撿貨員只拜訪有品項需要被揀取的走道。 
(2) 揀貨員使用穿越式(traversal)走動方法: 這代表揀貨員一但拜訪一個走道，就會走完
整條走道，同時撿貨員只拜訪有品項需要被揀取的走道。 
(3) 揀貨員使用最大間隔(largest gap)走動方法: 在最大間隔方法中，我們定義最大間隔
(gap)為同一走道中兩個鄰近所需揀取品項的最大距離走道片段，最大間隔走動方
法，乃指揀貨員從走道的兩端進出，並避免拜訪最大間隔。 
3. 我們依據 Jarvis 和Mcdowell [7]的方法，產生 16種不同型態的訂單資料庫測試範例 
我們採用 Jarvis 和Mcdowell [7]使用隨機產生訂單測試資料庫的方式，來產生 16種
不同型態的大量訂單資料庫測試範例，來比較我們方法和現有文獻的方法的效能。以下我
們簡述這些測試資料庫的產生方式。 
 
(二)、實驗成果說明: 
我們所有的實驗都在一台具有 3.6 GH z執行速率的個人電腦上，此個人電腦具有 1 GB的記
憶體，此個人電腦執行Windows XP的作業系統，我們使用 SQL Server來計算所有的高頻項
目集，其餘的程式 均使用Microsoft Visual C++ 來製作。  
 
在效能比較上，我們採用平均改善效率(improvement ratio)的評量指標，平均改善效率的定義
如下: 
平均改善效率 = 100%- ×距離本研究方法所需的行走
距離本研究方法所需的行走離文獻方法所需的行走距  
 
實驗成果如以下表一到表四所示。 
 
以下表一到表四五分別顯示本研究方法較現有八種文獻方法的平均改善效率。其中表一顯示
在長方形倉儲中、使用返回式行走方法的平均改善效率，表二顯示在長方形倉儲中、使用穿
越式行走方法的平均改善效率，表三顯示在長方形倉儲中、使用最大間隔行走方法的平均改
善效率，表四顯示我們的方法相較現有文獻方法在所有測試範例的平均改善效率。 
 
10 
 
測試範例 本方法的行走距離平均改善效率 
x y Pop Cor OSCM Moon MCLA MPA MSA Xiao 
2.5% 20% 17.51% 19.29% 17.44% 18.22% 11.89% 13.67% 11.74% 19.72%
2.5% 40% 13.24% 13.24% 10.98% 13.71% 7.17% 10.05% 9.89% 12.93%
2.5% 60% 5.52% 6.81% 5.52% 7.95% 4.62% 6.49% 3.57% 9.65%
2.5% 80% 6.21% 6.21% 6.21% 6.47% 5.46% 5.88% 4.45% 7.30%
5% 20% 13.65% 14.12% 13.26% 17.51% 8.76% 14.16% 10.17% 13.65%
5% 40% 9.80% 8.22% 9.80% 6.56% 5.26% 6.74% 5.80% 6.74%
5% 60% 4.79% 8.21% 8.90% 7.17% 8.70% 3.95% 1.48% 13.00%
5% 80% 1.82% 1.41% 1.82% 1.82% 1.41% 1.82% 3.88% 13.52%
7.5% 20% 10.60% 10.84% 10.95% 14.16% 10.98% 13.07% 6.48% 13.31%
7.5% 40% 7.65% 7.42% 6.79% 10.75% 5.57% 6.27% 8.01% 10.22%
7.5% 60% 4.20% 3.95% 4.20% 4.53% 3.27% 4.24% 5.03% 7.11%
7.5% 80% 0.70% 0.70% 0.70% 1.64% 1.69% 0.75% 0.85% 10.85%
10% 20% 10.58% 9.90% 11.52% 12.36% 7.04% 11.45% 8.48% 9.57%
10% 40% 6.54% 5.89% 6.59% 9.46% 8.12% 12.01% 5.89% 9.85%
10% 60% 3.27% 3.27% 3.27% 5.55% 2.69% 2.12% 1.30% 18.36%
10% 80% 0.30% 0.30% 0.30% 1.38% 0.56% 0.35% 1.81% 11.23%
表二: 我們的方法較現有文獻方法的行走距離平均改善效率(長方形倉儲, 穿越式行走方式) 
 
測試範例 本方法的行走距離平均改善效率 
x y Pop Cor OSCM Moon MCLA MPA MSA Xiao 
2.5% 20% 12.07% 13.90% 14.09% 22.68% 19.88% 19.59% 20.37% 15.83%
2.5% 40% 9.77% 9.39% 9.14% 18.65% 20.43% 24.37% 23.35% 16.24%
2.5% 60% 13.79% 13.64% 13.32% 16.61% 26.65% 20.06% 21.32% 14.42%
2.5% 80% 9.30% 9.49% 8.54% 18.22% 11.95% 15.56% 26.57% 38.71%
5% 20% 10.68% 12.36% 10.19% 20.06% 14.72% 13.11% 13.11% 11.49%
5% 40% 10.55% 9.69% 12.34% 12.89% 15.63% 16.72% 16.88% 16.56%
5% 60% 11.17% 11.37% 11.27% 13.66% 13.28% 14.33% 18.24% 26.84%
5% 80% 12.78% 12.78% 14.23% 16.34% 16.21% 15.28% 16.86% 30.43%
7.5% 20% 7.72% 7.67% 9.71% 17.14% 14.96% 11.55% 15.01% 11.79%
7.5% 40% 12.07% 13.90% 14.09% 22.68% 19.88% 19.59% 20.37% 15.83%
7.5% 60% 9.77% 9.39% 9.14% 18.65% 20.43% 24.37% 23.35% 16.24%
7.5% 80% 13.79% 13.64% 13.32% 16.61% 26.65% 20.06% 21.32% 14.42%
10% 20% 9.30% 9.49% 8.54% 18.22% 11.95% 15.56% 26.57% 38.71%
10% 40% 10.68% 12.36% 10.19% 20.06% 14.72% 13.11% 13.11% 11.49%
10% 60% 10.55% 9.69% 12.34% 12.89% 15.63% 16.72% 16.88% 16.56%
10% 80% 11.17% 11.37% 11.27% 13.66% 13.28% 14.33% 18.24% 26.84%
表三: 我們的方法較現有文獻方法的行走距離平均改善效率(長方形倉儲, 最大間隔行走方
12 
11. Liu, C. (1999) Clustering techniques for stock location and order-picking in a distribution 
center. Computers & Operations Research, 26 (10-11), 989-1002.  
12. Rosenwein, M.B. (1994). An application of cluster analysis to the problem of locating items 
within a warehouse. IIE Transactions, 26(1), 101-103. 
13. Agrawal R, Srikant R. Fast algorithms for mining association rules. In: Proceedings of the 20th 
International Conference on Very Large Data Bases, Santiago, Chile, September 1994. p. 
487-99. 
14. Changchien, S.W. and Lu, T.C. (2001) Mining association rules procedure to support 
on-line recommendations by customers and products fragmentation”, Expert Systems with 
Application, vol 20, 325-335. 
15. Han, J., Pei, J., Yin, Y. and Mao, R. (2004) Mining Frequent Patterns without Candidate 
Generation: A Frequent-pattern Tree Approach. Data Mining and Knowledge Discovery, 8, 
53-87. 
16. Zou Q, Chu WW, Lu B. SmartMiner: a depth first algorithm guided by tail information for 
mining maximal frequent itemsets. In: Proceedings of IEEE International Conference on Data 
Mining, Maebashi City, Japan, December 2002. p. 570-77. 
17. Software for Associations Discovery Home Page. 
http://www.kdnuggets.com/software/associations.html. 
18. Dorigo, M. and Blum, C., “Ant colony optimization theory”, A survey. Theoretical 
Computer Science, 344, 2005, pp. 243-278. 
19. Dorigo, M., Gambardella, L.M. (1997). “Ant colony system: A cooperative learning approach 
to the traveling salesman problem”, IEEE Transactions on Evolutionary Computation, 6(6), 
53-66. 
20. Stutzle T., Hoos H. (2000). “MAX-MIN ant system”, Future Generation Computer Systems,16, 
889–914. 
無衍生研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
本計劃成果製作為投影片，作為本校資訊與運籌管理研究所倉儲管理、資料探
勘與電腦演算法課程教材，並作為本校國際管理碩士專班資訊管理課程教材。
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
