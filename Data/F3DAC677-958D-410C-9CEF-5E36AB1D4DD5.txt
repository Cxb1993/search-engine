 1
嵌入被加密之訊息於馬可夫隨機域合成紋理與微晶片模板影像 
Embedding Encrypted Messages into MRF-Synthesized Textures 
and Microarray Templates 
 
計畫編號: NSC 100-2221-E-007-118- 
執行期限: 100/08/01 – 101/07/31 
 
主持人: 陳朝欽     國立清華大學資訊工程學系 教授 
 
     參與研究人員: 游然琇、劉姵菱、吳柄灃、王彥鈞、胡子晉、蔡明鴻、賴威儒 
 
 
摘要 
 
原計畫希望兩年內完成，然而僅獲得一年
期補助，因此在 Microarray Templates 部
份尚在進行中。本技術報告由三部分組
成，它包含 (1)以馬可夫隨機域產生的覆
蓋影像完成一套高容量的資訊隱藏法，(2) 
基於 JPEG 的資訊隱藏演算法(2012 碩士論
文)，(3) 以馬可夫隨機域產生的紋理影像
為覆蓋影像的資訊隱藏法：這篇論文發表
於日本京都國際研討會(IMQA2011), (4) 
參加國際研討會之心得報告。曾經由本計
畫補助同學已完成之碩士論文列出供參考
如下。 
 
1. 游然琇 On DCT-Based Steganographic 
Algorithms, June 18, 2012 
2. 劉姵菱 JPEG-Based Steganographic 
Algorithms, May 30, 2012 
3. 吳柄灃 A Study on Automatic Finger-
print Identification Systems, 
May 30, 2012 
4. 王彥鈞 A Study on Wavelet-Based 
Watermarking Systems, June 18, 
2012 
 
ABSTRACT 
 
The technical report of this project is 
composed of three parts including 
 
(1) High-Capacity Steganography Using 
MRF-Synthesized Cover Images, 
 
(2) JPEG-Based Steganographic Algorithms, 
Pei-Ling Liu’s M.S. Thesis, National 
Tsing Hua University, Hsinchu Taiwan, 
May  30, 2012 
       
(3) A Steganographic Method Based on 
MRF-Synthesized Textures as Cover 
Images (Presented in the 4th International 
Workshop on Image Media Quality and 
Its Applications pp.58-62, in Kyoto, Japan, 
October 3-4, 2011) 
http://www.cs.nthu.edu.tw/~cchen/cchen2.html 
  
(4) A report of participating international 
academic activities:  Report for attending 
IMQA 2011 International Workshop. 
2.1 Background of Markov Random
Field
Let x, an M × N texture pattern, be represented
as a matrix whose elements take values from the set
A = {0, 1, ..., G− 1}. Let Ω = {x | xt = x(i, j) ∈ A},
be the set of all possible texture patterns, and let S =
{1, ...,MN} be the sites of a matrix ordered by a raster
scan. A Gibbs random ﬁeld (GRF) is a joint probability
mass function deﬁned on Ω which satisﬁes
P (x) = e−U(x)/Z, (1)
where U(x) is the energy function and Z =∑
y∈Ω e
−U(y) is the partition function.
A Markov random ﬁeld is a Gibbs random ﬁeld whose
probability mass function satisﬁes the following condi-
tions.
(a) Positivity: P (X = x) > 0 for all x ∈ Ω.
(b) Markov Property: P (Xt = xt|Xr = xr, r = t) =
P (Xt = xt|Xr = xr, r ∈ Rt) ∀ t ∈ S.
where Rt is the ordered set of neighbors of site t.
(c) Homogeneity: P (xt|Rt) does not depend on a par-
ticular site t.
Figure 2 deﬁnes the relative sites and orders of neigh-
bors of site t. A GRF and an MRF are equivalent [3]
with respect to a speciﬁed neighborhood system.
t:-3
t:-1
t:-4
t:-2
t
t:+2
t:+4
t:+1
t:+3
(a)
2
1
2
1
t
1
2
1
2
(b)
Figure 2: The relative sites and orders of neighbors of
site t.
A Gibbs random ﬁeld is completely characterized by
its energy function. In this paper, a commonly used
MRF model whose energy function has the following
form is introduced:
U(x) =
MN∑
t=1
F (xt) +
MN∑
t=1
c∑
r=1
H(xt, xt:+r), (2)
where H(a, b) = H(b, a) and c depends on the size
of the neighborhood. For example, c = 2, 4 for 1st-
order and 2nd-order neighborhoods, respectively. The
generalized Ising MRF model (GIM) is deﬁned below
[3].
2.1.1 Generalized Ising Model (GIM)
Let A = {0, 1, ....., G − 1}; the F and H functions
of (2) in the generalized Ising model are deﬁned as
F (xt) = αxt and H(xt, xt:+r)= θrI(xt, xt:+r), where
I(a, b) = −1 if a = b and I(a, b) = 1, otherwise.
Simple derivation gives the conditional density:
P (xt|Rt) = exp[−αxt −
∑c
r=−c θrI(xt, xt:+r)] / W,
W =
∑
s∈A exp[−αs −
∑c
r=−c θrI(s, xt:+r)].
(3)
An algorithm for simulating the generalized Ising
model (GIM) is given below. Two 128 × 128 synthe-
sized image textures obtained based on GIM with the
parameters θ = (1, 1, 1,−1) and θ = (2, 2,−1,−1)
are shown in Figures 3(a) and 3(b), respectively.
Algorithm GIM
(1) For s=1 to MN, randomly assign a g ∈ A for xs to
give an initial image x.
(2) For s=1 to MN Do
(a) Let yt = xt for all t = s. Choose g ∈ A at
random and let ys = g.
(b) Let r = min{1, P (y)/P (x)}, where P is as
deﬁned in eq. (1).
(c) x ←− y with probability r.
(3) Repeat step (2) until ”convergence,” is achieved,
for example, in 50 iterations.
Each of the four parameters of the 2nd-order GIM
model is restricted to be between -2 and 2 to avoid
the phase-transition phenomenon [3]. In practice, this
model assumes that a texture will consist of a small
number of gray levels, for example, 8 or less. Each
parameter determines a directionality; the larger the
negative value of the parameter, the stronger the di-
rection.
2
Science and Engineering, vol. 19, no. 2, 371-380,
2003.
[4] C.C. Chen, C.Y. Kao, C.F., Chang, H.T. Chu, and
C.N. Chen, Simple Software for Microarray Im-
age Analysis, IEEE Proceedings of Computer and
Robot Vision, Pid163, Quebec City, Canada, 2006.
[5] I.J. Cox, M.L. Miller, J.A. Bloom, J. Fridrich, and
T. Kalker, Digital Watermarking and Steganogra-
phy, Morgan and Kaufmann, 2008.
[6] N.F. Johnson and S. Jajodia, Exploring Steganog-
raphy: Seeing the Unseen, IEEE Computer Mag-
azine, vol. 31, no. 2, 26-34, 1998.
[7] C.L. Liu and S.R. Liao, High-Performance JPEG
Steganography Using Complementary Embedding
Strategy, Pattern Recognition, vol. 41, 2945-2955,
2008.
[8] Z. Ni, Y.Q. Shi, N. Ansari, and W. Su, Reversible
Data Hiding, IEEE Transactions on Circuit and
Systems for Video Technology, vol. 16, no. 3, 354-
362, 2006.
[9] N. Provos and P. Homeyman, Hide and Seek: An
Introduction to Steganography, IEEE Security &
Provacy, vol. 1, no. 3, 32-44, 2003.
[10] W.B. Pennebaker, J. Mitchell, JPEG Still Image
Compression Standard, New York: Van Nostrand
Reinhold, 1993.
[11] D.R. Stinson, Cryptography Theory and Practice,
3rd ed., Chapman & Hall/CRC, 2006.
[12] A. Westfeld, F5 − A Steganographic Algorithm:
High Capacity Despite Better Steganalysis, Inter-
national Workshop on Information Hiding, Berlin,
vol. 2137, 289-302, 2001.
[13] http://en.wikipedia.org/wiki/Steganography, last
access on July 20, 2012.
[14] http://www.cs.nthu.edu.tw/∼cchen/steve.txt,
last access on July 20, 2012.
4
  
JPEG-Based Steganographic Algorithms 
 
By 
 
Pei-Ling Liu 
 
 
 
A Thesis 
Submitted to 
 
National Tsing Hua University 
In partial fulfillment of the requirements 
For the degree of 
 
MASTER OF SCIENCE 
 
Department of Computer Science 
May 2012 
 iv 
ABSTRACT 
JPEG-Based Steganographic Algorithms 
By 
Pei-Ling Liu 
 
Steganography is a method of data hiding. It is more and more important while the 
Internet communication grows up. Now, many steganographic algorithms or software have 
already been developed including image hiding techniques for JPEG images. JPEG is the 
most common image format used by digital cameras and transmitted in the Internet.  
    This thesis proposes two methods to increase the capacity of F5 embedding algorithm. 
The first method is a pre-processing method, we randomly modifies the qDCT coefficients 
before the F5 embedding algorithm to get more nonzero qDCT coefficients to embed 
message. In the second method, we slightly modify the end of block (EOB) information in a 
JPEG image to increase the capacity of embedding after the F5 embedding algorithm. We 
change a qDCT coefficient on each qDCT 8 ൈ 8 block to embed 3 more bits of message. 
Although the PSNR value is slightly decreased, our proposed algorithm significantly 
increases the capacity of embedding compared with many classical steganographic 
algorithms. 
 
 
 
  
 
 
 vi 
Table of Contents 
 
Chapter 1 Introduction............................................................................................................ 1 
Chapter 2 Review of DCT-Based Steganographic Algorithms............................................ 3 
2.1 The JPEG Image Format .............................................................................................. 3 
2.2 Some Classical Steganographic Algorithms ................................................................ 5 
2.2.1 J-Steg ....................................................................................................................... 5 
2.2.2 JPhide ...................................................................................................................... 6 
2.2.3 F5 ............................................................................................................................. 6 
2.2.4 OutGuess ................................................................................................................. 8 
2.2.5 JPEG-CES ............................................................................................................... 8 
2.3 Steganalysis................................................................................................................ 10 
2.3.1 χଶ-test  ................................................................................................................. 10 
2.3.2 S1 attack ................................................................................................................ 11 
2.3.3 S2 attack ................................................................................................................ 12 
Chapter 3 Proposed Data Hiding Method ........................................................................... 13 
3.1 Method 1: Random Modification of DCT Coefficients ............................................. 13 
3.2 Method 2: Adding One More Coefficient .................................................................. 15 
3.3 Embedding and Extraction ......................................................................................... 16 
Chapter 4 Experimental Results........................................................................................... 18 
4.1 Image Quality ............................................................................................................. 18 
4.2 S1 attack test .............................................................................................................. 22 
Chapter 5 Conclusion and Future Work ............................................................................. 23 
References ............................................................................................................................... 24 
 
 
 
 
 viii 
List of Figures 
 
Figure 1.1. A block diagram of the JPEG embedding process ............................................ 2 
Figure 2.1. A block diagram of JPEG compression .............................................................. 3 
Figure 2.2. J-Steg equalizes the frequencies of both values of each PoV after embedding 
message bits .......................................................................................................... 5 
Figure 2.3. The F5 embedding algorithm .............................................................................. 7 
Figure 2.4. Diagram of the JPEG-CES embedding process ................................................. 9 
Figure 2.5. The effect of F5 embedding algorithm on the histogram of the qDCT 
coefficients at (2,1) ............................................................................................. 11 
Figure 3.1. The histogram of qDCT coefficients at (2,1) when embedding 8632 bits on 
512×512 Lena grayscale image: (a) estimated histogram (b) stego-image 
histogram ............................................................................................................ 13 
Figure 3.2. The last position of nonzero qDCT coefficients in a block ............................. 15 
Figure 3.3. An example of zero run length four between a new position and the last 
position ................................................................................................................ 16 
Figure 3.4. The flowchart of the proposed embedding process ......................................... 17 
Figure 3.5. The flowchart of the proposed extraction process ........................................... 17 
Figure 4.1. The test images used in our experiments: (a) Mandrill, (b) Barbara, (c) 
Cameraman, (d) Jet, (e) Goldhill, (f) Tiffany, (g) Lena, (h) Peppers, (i) Scene, 
and (j) Lady ........................................................................................................ 18 
Figure 4.2. The results of our embedding algorithm: (a),(c) the JPEG images, (b),(d) the 
corresponding stego-images .............................................................................. 20 
Figure 4.3. The detection of results of S1 attack for the stego-images created by F5 
embedding algorithm and our proposed embedding algorithm: (a) the 
stego-image is Mandrill, (b) the stego-image is Barbara ................................ 22 
 
 2 
transformed (qDCT) coefficients by least significant bit (LSB) insertion methods. However, 
there exist some statistical attacks which can detect the existence of the secret message for 
the stego-image. The attacks include the well-known χଶ-attack [West1999], the extended 
χଶ-attack [Provo2001b] and the special steganalytic method proposed by Fridrich et al. 
[Frid2003]. Figure 1.1 is a block diagram of the JPEG embedding process. Data hiding 
embeds secret message into a cover-medium and the JPEG embedding process uses 
compressed images of a JPEG format as a cover-medium. The JPEG format [Penn1992] is 
the most commonly used image format on the Internet since 1992. The paper proposes and 
implements a JPEG steganography which has more capacity compared with those of classical 
steganographic algorithms. 
 
 
 
 
 
 
The remaining of this thesis is organized as follows. We review JPEG compression 
algorithm, and classical steganographic algorithms in Chapter 2. The proposed embedding 
process is described in Chapter 3. Chapter 4 gives experimental results. Chapter 5 draws the 
conclusion.  
 
 
 
 
Figure 1.1. A block diagram of the JPEG embedding process. 
FDCT Quantization 
Entropy 
Coding 
Secret-bits 
Embedding 
JPEG 
stego-image 
Cover image 
 4 
Fሺu, vሻ ൌ 14CሺuሻCሺvሻ ቎෍෍fሺx, yሻ ∗ cos
ሺ2x ൅ 1ሻuπ
16 cos
ሺ2y ൅ 1ሻvπ
16
଻
୷ୀ଴
଻
୶ୀ଴
቏ , ሺ2.1ሻ	
where C(x) = 1/√2 when x is equal to 0 and C(x) = 1 otherwise. 
Step 2: Quantization 
The quantization of each DCT coefficient in an 8 ൈ 8 block can be done by the 
following equation based on the Quantization table given as follows. 
F୕ሺu, vሻ ൌ round ൬Fሺu, vሻQሺu, vሻ൰																																																	ሺ2.2ሻ 
Table 2.1. Quantization table. 
16 11 10 16 24 40 51 61 
12 12 14 19 26 58 60 55 
14 13 16 24 40 57 69 56 
14 17 22 29 51 87 80 62 
18 22 37 56 68 109 103 77 
24 35 55 64 81 104 113 92 
49 64 78 87 103 121 120 101 
72 92 95 98 112 100 103 99 
Because the higher frequency components do not affect the quality of the image much, many 
of the higher frequency components are rounded to zero, so the following entropy coding will 
have a better performance on compression. 
 
Step 3: Entropy coding 
Entropy coding is a special form of lossless data compression. DC coefficient, F(0,0) is 
used to employ a simple predictive coding model called differential pulse code modulation 
(DPCM). As for AC coefficients, each 8 ൈ 8 block of the 63 quantized AC coefficients are 
arranged in a "zigzag" order and employed a zero run length encoding (RLE). Then, in the 
JPEG image format, DC coefficient and AC coefficients must be changed to binary code 
according to DC Huffman table and AC Huffman table [Penn1992], respectively.  
 6 
2.2.2 JPhide [Web04] 
JPhide was proposed by Allan Latham. The method of JPhide to select the qDCT 
coefficients is not like the method of J-Steg which sequentially replaces the LSBs of qDCT 
coefficients with the message’s data. JPhide uses a fixed table to classify the qDCT 
coefficients, and to determine the order that these classes are used. All the qDCT coefficients 
in the current class are used first before the next class is chosen. We may rearrange the order 
of the coefficients selected to hide information according to the table, so that the χଶ-test can 
detect JPhide. 
 
2.2.3 F5 [West2001]  
F5 steganographic algorithm was proposed by Westfeld in 2001. The F5 algorithm uses 
matrix encoding to improve the embedding efficiency that every several bits of nonzero 
qDCT coefficients per change to embed secret message bits. The number of bits is larger per 
change, the embedding efficiency is better. When there is less amount of the secret message, 
the matrix encoding can increase the embedding efficiency by using unused capacity. F5 
denote the matrix encoding by an ordered triple (1, ݊, ݇) which encodes a k-bit message word 
x into an n-bit code word a with	n ൌ 2௞ െ 1	 by modifying one qDCT coefficient at most. 
For example, if we want to embed three secret message bits ݔଵ, ݔଶ, ݔଷ in seven modifiable 
bit places. The (1, 2௞ െ 1, ݇) matrix encoding for k = 3 can be listed below.  
1) We get LSBs of seven nonzero AC coefficients, a = [ܽଵ, ܽଶ, … , ܽ଻]. 
2) Create a matrix B with the “binary coding” from 1 to 7. 
 
B =	൥
0 0 0 1 1 1 1
0 1 1 0 0 1 1
1 0 1 0 1 0 1
൩
ଷൈ଻
 
 
 8 
If the coefficient becomes zero, shrinkage happens, and we will eliminate the 0 from the 
chosen coefficients group by filling one more nonzero coefficient. After that, we use the 
group to embed secret message bits again. The F5 algorithm embeds secret bit by using the 
qDCT coefficients (except 0s), the capacity of the F5 have a chance to be larger than that of 
J-Steg. 
 
2.2.4 OutGuess [Prov2001a] 
OutGuess steganographic algorithm was proposed by Niels Provos. OutGuess improves 
the method of selecting qDCT coefficients at random by using a pseudo-random number 
generator. OutGuess and J-Steg are similar in that they embed the secret bits by replacing 
LSBs of qDCT coefficients (except 0s and 1s), but OutGuess can’t use all of the redundant 
bits to embed the secret message. The enough preservation of qDCT coefficients will correct 
the statistical property of qDCT frequency histogram. Suppose embedding a hidden message 
modifies the j-th qDCT coefficient, qDCT(j). If qDCT(j) = 2i, it will be modified to 2i+1. We 
correct this change by finding an adjacent coefficient qDCT(k), that is qDCT(k) = 2i+1, and 
changing it to 2i. So, the statistics way based on frequency counts is unable to detect the 
difference between the cover image and the stego-image. The OutGuess algorithm defends 
the χଶ-test and the extended χଶ-test. However, the length of the embedding message will be 
estimated by S2 attack proposed by Fridrich et al [Frid2003] and the capacity of OutGuess is 
not better than J-Steg. 
 
2.2.5 JPEG-CES [Liu2008] 
Liu and Liao propose a secure and high-capacity JPEG steganography (JPEG-CES) to 
improve the shortcomings of JPEG steganography. The JPEG-CES embedding process is 
integrated with JPEG encoding process. Figure 2.4 shows the Diagram of the JPEG-CES  
 10 
capacity of JPEG-CES algorithm is better than these steganographic algorithms. But the 
algorithm also tests the imperceptibility performance with the PSNR [Jain1989] slightly 
lower than these steganographic algorithms. Whereas, it still has the values of PSNR higher 
than 30 dB and the stego-images are visually close to the corresponding original images. In 
summary, the JPEG-CES algorithm seems better than some steganographic algorithms and it 
may be not too difficult to implement. 
 
2.3 Steganalysis 
2.3.1 ૏૛-test [West1999] 
Westfeld and Pfitzmann used a χଶ-test to determine whether the observed qDCT 
frequency histogram that shows the distortion from embedding hidden data, even though the 
test uses only the stego medium. The steganographic algorithm which embeds the secret bits 
by replacing LSBs of qDCT coefficients will cause that the frequencies of both values of 
each PoV tend to become equal. As a result, we let n୧ be the number of pixels with value i 
among the embedded qDCT coefficients, the expected distribution ሼy୧∗ሽ for the χଶ-test will 
be computed by the arithmetic mean         
y୧∗ ൌ nଶ୧ ൅ nଶ୧ାଵ2 ,																																																									ሺ2.5ሻ 
to determine the expected distribution and compare it against the observed distribution 
           y୧ ൌ nଶ୧.																																																														ሺ2.6ሻ 
The r value for the difference between the distributions is given as 
r ൌ ෍ሺy୧ െ y୧
∗ሻଶ
y୧∗
୴ାଵ
୧ୀଵ
,																																																								ሺ2.7ሻ 
where v+1 is the number of y୧′ݏ, the probability of embedding p is given by the complement 
of the cumulative distribution function, 
 12 
S1 attack could use this estimate to calculate the difference between the estimated qDCT 
histogram and the stego-image qDCT histogram to get β to represent the average rate of 
change in a nonzero AC coefficient was modified.  
 
2.3.3 S2 attack [Frid2003] 
S2 attack was proposed to detect the steganographic algorithm OutGuess. OutGuess 
avoids the distortion in the qDCT histogram so that a χଶ-test isn’t useful for detection. 
However, the embedding process with replacing LSBs of qDCT coefficients will increase the 
discontinuities in the spatial domain along the boundaries of 8 ൈ 8 blocks. Similar to S1 
attack, S2 attack finds an estimate of the cover image’s qDCT histogram. Stego-image has 
the smaller increment of the spatial discontinuities at the boundaries of all 8 ൈ 8 blocks than 
those in a cover image, after stego-image and cover image are embedded a 100% capacity 
message into the qDCT coefficients. S2 attack will use their difference in this distinguishing 
statistic to find the secret message length. 
 
 
 
 
 
 
 
 
 
 
 
 14 
The S1 attack can calculate the degree of the difference of qDCT coefficient histogram 
to estimate the secret message length. In order to increase the embedding capacity and slow 
down the situation of the frequencies of qDCT histogram centralized to the middle, we 
modify qDCT coefficients before F5 embedding algorithm. Assuming the (1,2௞ െ 1, ݇) 
matrix encoding for F5 embedding algorithm, we use a parameter p to modify qDCT 
coefficients, 
p ൌ 	 12௞ െ 1 ∗
2௞ െ 1
2௞ ൌ
1
	2௞ 																																																	ሺ3.1ሻ 
 
In particular, when k = 1 for the (1,2௞ െ 1, ݇) matrix encoding, the p of the odd qDCT 
coefficients is equal to the probability of 0 occurrences, and the p of the even qDCT 
coefficients is equal to the probability of 1 occurrences among the secret bits. Moreover, let 
h(d) be the total number of qDCT coefficients whose value are d in the cover image, and let 
X(d) be the expected number of modifications for the value of qDCT coefficients is equal to 
d. In our experiment, the value of d falls in the range [-8,8], and X(9) and X(-9) will be preset 
to zero. Then the expected value X(d) can be calculated as  
 
   X(d)*(1-p) = X(d+1)+p*[h(d)-X(d+1)]-p*[h(d+1)+X(d+1)],  ∀ 0	൏	d ൑	8    ሺ3.2ሻ         
X(d)*(1-p) = X(d-1)+p*[h(d)-X(d-1)]-p*[h(d-1)+X(d-1)],    ∀ -8	൑	d	൏	0    ሺ3.3ሻ 
 
We modify the qDCT coefficients by using the pseudo code as given below. 
1) Search the greatest absolute value d of nonzero qDCT coefficients that has not been 
searched yet. 
2) Calculate X(d) by the equation (3.2) and the equation (3.3). 
3) Randomly modify qDCT coefficients: 
 
 16 
Table 3.1. Zero run length for encoding a 3-bit message. 
Length 0 1 2 3 4 5 6 7 8 
3-bit {} 000 001 010 011 100 101 110 111 
We mark a new position of qDCT = 0 in an EOB to change its value into 1 or -1, the distance 
between the last position of nonzero qDCT coefficients and the new position is counted by a 
"zigzag" order. If the produced new position overflows, the length is set to be zero. Figure 3.3 
shows the length between the new position and the last position is four, and the qDCT = 0 at 
the new position is changed to 1. 
 
 
 
The goal of this approach is to increase embedding capacity with a slight loss of fidelity in 
the high frequency part.  
 
3.3 Embedding and Extraction 
Then the proposed embedding process combines two improvements with F5 embedding 
algorithm. Figure 3.4 lists the flowchart of the proposed embedding process and Figure 3.5 
lists the flowchart of the proposed extraction process. 
 
1
Figure 3.3. An example of zero run length four between a new 
position and the last position. 
 18 
Chapter 4 
Experimental Results 
__________________________________________________ 
This chapter demonstrates the image quality and the capacity with the proposed embedding 
algorithm.   
4.1 Image Quality 
In our experiments, ten 512×512 grayscale images depicted in Figure 4.1 are used as 
cover images [Web07, Web08]. 
 
(a)             (b)            (c)             (d)            (e)    
      (f)             (g)            (h)             (i)             (j) 
Figure 4.1. The test images used in our experiments: (a) Mandrill, (b) Barbara, (c) 
Cameraman, (d) Jet, (e) Goldhill, (f) Tiffany, (g) Lena, (h) Peppers, (i) Scene, and (j) 
Lady. 
 
The PSNR (peak signal to noise ratio) [Jain1989], used to quantitatively measure the 
distortion between a cover image x and its corresponding stego-image y, is computed by 
																																																					PSNR	 ൌ 	10 ൈ log ቆ255
ଶ
ܯܵܧቇ ሺdBሻ																																													ሺ4.1ሻ 
where the mean square error (MSE) is defined as 
 20 
algorithm outperforms all of the listed commonly used classical embedding algorithms. 
Although our PSNR value is slightly smaller than those classical existing algorithms, the 
stego-images look much the same as the JPEG images which embedded empty message. 
Figure 4.2 shows some JPEG images and the corresponding stego-images by our proposed 
embedding algorithm. 
  
(a)                                 (b)   
  
(c)                                 (d) 
Figure 4.2. The results of our embedding algorithm: (a),(c) the JPEG images, (b),(d) the 
corresponding stego-images. 
 22 
4.2 S1 attack test 
We used S1 attack to detect stego-images created by F5 embedding algorithm and our 
proposed embedding algorithm. The detection of result is presented in Figure 4.3. A positive 
ratio β means that the average rate of the absolute value of nonzero AC coefficients was 
decremented; a negative ratio β means that the average rate of the absolute value of nonzero 
AC coefficients was incremented. The closer the ratio β is to zero, the S1 attack expresses 
lower probability that the stego-image carries secret message.  
 
 
(a)                                   (b) 
Figure 4.3. The detection of results of S1 attack for the stego-images created by F5 
embedding algorithm and our proposed embedding algorithm: (a) the stego-image is 
Mandrill, (b) the stego-image is Barbara. 
 
The detection of β of the stego-image created by our proposed embedding algorithm in 
compared with the stego-image created by F5 embedding algorithm, the ratio β doesn’t have 
very great progress. 
 
 
‐0.4
‐0.2
0
0.2
0.4
0 20 40 60 80 100
de
te
ct
io
n 
of
 β
embedding rate
F5 The proposed
‐0.4
‐0.2
0
0.2
0.4
0 20 40 60 80 100
de
te
ct
io
n 
of
 β
embedding rate
F5 The proposed
 24 
References  
 
[Frid2003]  J. Fridrich, M. Goljan, and D. Hogea, “New methodology for breaking 
steganographic techniques for JPEGs,” Proceedings of SPIE: Security and 
Watermarking of Multimedia Contents, Vol. 5020, 143-155, 2003. 
[Jain1989]   A. K. Jain, “Fundamentals of digital image processing. Englewood Cliffs,” NJ: 
Prentice Hall, new Jersey, 1989. 
[John1998]   N. F. Johnson and S. Jajodia, “Exploring Steganography: Seeing the Unseen,” 
IEEE Computer Magazine, Vol. 31, 26-34, 1998. 
[Liu2008]    C. L. Liu, and S. R. Liao, “High-Performance JPEG Steganography using 
complementary embedding strategy,” Pattern Recognition, Vol. 41, No. 9, 
2945-2955, 2008. 
[Penn1992]   W. B. Pennebaker, and J. L. Mitchell, “JPEG still image data compression 
standard,” New York: Van Nostrand Reinhold, 1992.  
[Prov2001a]  N. Provos, “Defending Against Statistical Steganalysis,” Proceedings of the 
10th USENIX Security Symposium, 323-335, 2001.  
[Prov2001b]  N. Provos, and P. Honeyman, “Detecting Steganographic Content on the 
Internet,” CITI Technical Report, Vol. 1, 1-11, 2001. 
[Prov2003]  N. Provos, and P. Honeyman, “Hide and Seek: An Introduction to 
Steganography,” IEEE Security & Privacy, Vol. 1, No. 3, 32-44, 2003. 
[West1999]  A. Westfeld and A. Pfitzmann, “Attacks on Steganographic Systems,” 
Proceedings of the 3rd International Workshop on Information Hiding, 
Springer-Verlag, 61-76, 1999. 
 
 
  
A STEGANOGRAPHIC METHOD USING MRF-
SYNTHESIZED TEXTURES AS COVER IMAGES 
 
Feng-Ju Chang and Chaur-Chin Chen 
Institute of Information Systems and Applications, National Tsing Hua University, Hsinchu 
30013, Taiwan 
 
Abstract 
We adopt a grayscale statistical texture synthesizer based on MRF to generate an image of user-requested size to 
fit the secret message. Each of our synthesized texture images as cover images contains four gray values: 30, 100, 
170, and 240. We encrypt secret messages via exponent and modulo operations. Then we partition the encrypted 
bit sequence of the secret message as many of 2-bit words: 00, 01, 10 and 11, thus each 2-bit word naturally 
corresponds to one of the four gray values 30, 100, 170 and 240. To be more secure, we adopt a circular shift 
technique on (30, 100, 170, 240) such that the same 2-bit words need not be embedded into the same pixel values 
and the security could be further ensured. Experiments are given to demonstrate our approach. 
 
Keywords: Markov Random Field (MRF), Steganography,  Texture 
 
1 Introduction 
Steganography [11] is a popular topic for scholars 
since Internet becomes the most common way of 
communication. It forces people to establish a passive 
attitude of protecting data with high security to avoid 
being victims. The most important requirement of 
steganography is undetectability; the concealed 
messages should be perfectly disguised under all 
statistical and visual analysis [4, 6, 10].  
 
Since we discuss steganography on images, if images 
are always acquired from Internet there is a problem 
that the length of message would be limited by the 
image size [8, 9]. To overcome this problem, a 
grayscale statistical texture synthesizer based on 
Markov random field (MRF) [1, 2, 8] is adopted such 
that we can synthesize the designated size of image 
needed. 
 
Reversible data hiding [5] which ensures that after 
extracting the messages the image could preserve its 
primordial pattern. It takes the pixels with peak value 
in the histogram as targets for embedding. This paper 
uses a cover image of user-selected size and we want 
to develop a steganographic method based on the 
ideas of reversible data hiding algorithm and quantum 
cryptography [7] that every quantum would be 
affected by other quanta with a unique relationship 
respectively to increase the security. For the 
encryption method, we shall adopt the exponent and 
modulus computations [3]. Figure 1 depicts our 
scheme. 
 
Figure 1: A paradigm of data hiding scheme. 
2 Background Review  
2.1 Texture Synthesis Based on Markov 
Random Field 
Markov Random Field [1, 2] is a Gibbs random field 
which represents a dependent relationship of the 
pixels within the defined neighborhood. Taking 
advantage of properties of MRF to synthesize a 
meaningful texture, we define the renewed probability 
with its energy function U(x) introduced below; it 
would make the pattern related to parameters we give. 
Before showing the energy function U(x), some 
notations are listed as follows 
A ൌ ሼ0,1,2, … , G െ 1ሽ, a set of gray values 
x: an initial M ൈ N texture in matrix form and xሺi, jሻ  
     belongs to A  
Ω ൌ ሼx | x୲ ൌ xሺi, jሻ א Aሽ, the set of all possible 
         Occurrence 
 
  
the security level.  
3 Proposed Data Hiding Method  
In the beginning, we set a natural correspondence of 
four pixel gray values in the order of (30, 100, 170, 
240) with the four 2-bit words (00, 01, 10, 11) as 
shown in Table 1. 
Table 1: A natural order cprrespondence 
 
 
Figure 4: A paradigm of embedding. 
For each 2-bit word embedding, we left circular shift 
R units of the natural order (30, 100, 170, 240) such 
that the same 2-bit words need not be embedded into 
the same pixel values. An example of left circular 
shifting R = 2 units is illustrated in Figure 5. 
 
Figure 5: An example of left circular shifting R units 
(R = 2). 
The left circular shifting units, R, is determined by the 
latest embedded location. First, we randomly generate 
α locations which serve as a set of fixed relative 
locations. Second, use these α relative locations to get 
the dependent pixel locations of the latest embedding 
pixel location as demonstrated in Table 2. Then we 
substitute the pixel values of the dependent pixels into 
Eq. (2) to get the left circular shifting units R; 
meanwhile, we can get the shifted correspondence 
between 2-bit words and four gray values. Because 
the pixel values correspond to the 2-bit words vary 
along with the time, the security could be further 
ensured. 
 
Table 2: Dependent pixel locations for an M × N 
cover image. 
 
 
R ൌ ∑ ہሺPi െ 30ሻ 70⁄ ۂαiୀ1 , where                            ሺ2ሻ  
Pi: the ith dependent pixel value, 
α: the number of dependent pixels, α ൌ 10 is used. 
 
Embedding Algorithm 
Input:  a secret key K to generate α locations, and 
Image (0: M-1, 0: N-1), an M×N MRF texture, 
S:  an (encrypted) secret message recorded as a 
sequence of 2-bit words, 
k:  an integer in [1, 9] to signify the embedding, 
R:  the units of left circular shifting, R=0 initially. 
 
(1) Randomly generate α locations using a secret key 
K. The initial embedding location = (0, 0).Scan 
the cover image in a specific order, for example, a 
lexicographic order. 
(2) Read into a 2-bit word m from the binary 
sequence of secret message S each time. 
(3) Left circular shift the pixel ordered values (30, 
100, 170, 240) R units which corresponds to the 
2-bit word order (00, 01, 10, 11). 
Find the shifted pixel value corresponding to m. 
(4) Follow the latest embedding location to search 
the next pixel location with the shifted pixel 
value to be the latest embedding pixel location 
and increase k to its pixel value. 
(5) Compute α dependent pixel locations by Table 1 
according to the latest embedding location and α 
locations. Then compute R by Eq. (2). 
(6) Repeat steps (2~5) until the sequence of 2-bit 
words for the message S are embedded. 
 
An Example 
Image(0:4, 0:9) : a 5×10 cover image as shown in 
Figure 6(a), the top leftmost pixel location is 
recorded as (0, 0) with the pixel value 100. 
S: Bit sequence of encrypted secret message {10, 11, 
10, 01}. 
α locations ={(3,0), (1,3)}, where α = 2. 
k : is set to be 3 in this example. 
Natural correspondence of 2-bit words and four gray 
values is given in Table 1. 
R: left circular shifting units determined by Eq. (2). 
(1) To embed the first 2-bit word “10” with the initial 
R = 0, scan the cover image from (0,0) in the 
lexicographic order to find the location (0,3) 
corresponding to the pixel value 170 according to 
Table 1. We embed the “10” by updating 
Image(0,3)=173 from Image(0,3)=170. We then 
compute the next shift units R by Eq.(2) as 
R ൌ ቔଶସ଴ିଷ଴଻଴ ቕ ൅ ቔ
ଷ଴ିଷ଴
଻଴ ቕ ൌ 3 ൅ 0 ൌ 3 ሺmod 4ሻ. 
(2) To embed the next 2-bit word “11” with R = 3 
computed in the previous step,  scan the cover 
image from the latest embedded location (0, 3) in 
the lexicographic order to find the location (1, 5) 
corresponding to the pixel value 170 with left 
circular shift R=3 units according to Table 1. We 
  
Hiding, Berlin, Vol. 1525, 273 - 289, 1998. 
[5]   Z. Ni, Y.Q. Shi, N. Ansari, and W. Su, 
“Reversible data hiding,” IEEE Transaction on 
Circuits and Systems for Video Technology, 
Vol. 16, No. 3, 354 - 362, 2006.  
[6]     N. Provos and P. Honeyman, “Hide and seek: 
an introduction to steganography,” IEEE 
Security & Privacy, Vol. 1, No. 3, 32 - 44, 
2003. 
[7]      D. Stucki, N. Brunner, N. Gisin, V. Scarani, 
and H. Zbinden, “Fast and simple one-way 
quantum key distribution,” IEEE Applied 
Physics Letters, Vol. 87, No. 19, 194108-1 - 
194108-3, 2009. 
[8] F. J. Chang, A Steganographic Method Using 
MRF-Synthesized Textures as Cover Images, 
M.S. Thesis, National Tsing Hua Unviersity, 
Hsinchu, Taiwan, April 2011. 
[9] C.L. Liu and S.R. Liao, “High-performance 
JPEG steganography using complementary 
embedding strategy,” Pattern Recognition, Vol. 
41, 2945-2955, 2008. 
[10] A. Westfeld, “F5 – A Steganographic 
Algorithm: High Capacity Despite Better 
Staganalysis,” International Workshop on 
Information Hiding, Berlin, Vol. 2137, 289-
302, 2001. 
[11]     http://en.wikipedia.org/wiki/Steganography, 
last access on June 28 2011. 
「發展國際一流大學及頂尖研究中心計畫」補助國內專家學者 
出國參加國際學術活動報告 
                                                            100 年 10 月 11 日 
報告人姓名 
 
陳朝欽 
 
系  所 
及職稱 
 
資工系、資應所教授 
 
出國目的 出席國際學術會議 
時  間 100 年 10 月 4~100 年 10 月 5 日  
地  點 Campus Plaza Kyoto,  
Japan (日本京都) 
發表論文 
題目（如有） 
(中文) 以馬可夫隨機場產生的紋理影像為覆蓋影像的一種藏秘方法 
(英文) A Steganographic Method Using MRF-synthesized Textures as Cover Images
報告內容應包括下列各項： 
一、參加會議經過 100 年 10 月 2 日(星期日)上午 8:30 搭乘長榮航空 BR2132 班機於當地 12 
noon 抵達京都關西空港 (Kansai International Airport, Kyoto)，隨即搭 JR-West railway 前
往東橫五条烏丸住宿旅館(Gojo-Karasuma)。4 日下午 12 點 45 分報到並參加 13:30 由大
會主席 Masao AIZU 致詞的開幕式，聆聽 Dr. Michael Kriss(MAK Consultant)的精彩演講:
How Many Pixels Does it Take to Make a Good 4”x6” Print? Pixel Count Wars Revisited 
     隨後 14:30 由 NTT Cyberspace Laboratory, Japan 的 Dr. Hiroshi Fujii 專題演講 
    Recent Advances on Scalable Video Coding 
     Coffee Break 之後 16:00-17:20 安排四篇口頭報告由於討論熱絡，直到 17:50 才結束。
18:10-20:00 晚宴，由於是個 50 人左右的小型研討會，我們可以面對面和所有與會者討
論研究與學校，甚至是產業的議題，這是非常值得的。10月5日上午10:00-11:30的 invited 
speech 由 Dr. Stefan Winkler (Advanced Digital Science Center, Singapore)主講 
    Visual Quality in the Era of Social Media 
13:00-14:30 Poster Session 有 12 篇 Posters 講解，14:30-16:30 最後安排五篇論文口頭報告
與閉幕式。10 月 4 日利用 Banquet 與大會主席與多位主辦教授如 Dr. Aizu, Yamada, 
Miyake, Sugiyama, Morimoto, Horita, Ariss, Winkler, Kaarna 等討論研究議題與學生訓
練，由於個人略懂日語與日本文化更容易溝通。 
本次會議接授 21 篇論文，有來自日本、台灣、芬蘭、美國等 50 人左右學者專家報名
參加。我們的論文安排於 10 月 5 日 13:00~14:30 Poster 報告，引起數位學者的好奇與討
論。我全程參加 Conference and Banquet，Session Presentations 和其它國內外學者專家
討論研究議題。本次會議有 5 位台灣來的教授和研究生參加，大家都覺得受益良多。
由於 Kyoto 離台灣很近，沒有時差，另一方面，文化、語言環境也相近，經費能較有
效使用。會議前後利用空檔走訪京都近郊比叡山、宇治，10 月 7 日 13:10 搭乘長榮航
空 BR2131 班機於 15:10 返抵台灣。 
二、與會心得 本會議約以日本為主，是個中、小型會議由 Technical Group of Image Media 
       Quality, IEICE 主辦，便於近距離討論。感謝清華大學與國科會的經費補助。 
三、考察參觀活動: 無。 
四、建議: 國科會編列經費鼓勵部份台灣的中小型 (50~200 人) 國內會議國際化以提升 
國際知名度。政府積極編列適當經費鼓勵學者多參加國際會議 (縱使沒有發表論文) 
以提升台灣學術水準與知名度。 
五、攜回資料名稱及內容: CD for the contents of papers 包含 22 篇論文。 
六、其他: 無。 
聯絡電話: (Tel/Fax) (03) 573-1078 / 572-3694      E-mail: cchen@cs.nthu.edu.tw  
簽名蓋章: 陳朝欽                            日期:  100 年 10 月 11 日 
 
IMQA 2011 Advance Program 
 
4 Oct. (Tue.), 13:30-15:30 [A] Special Session 1 
Chair: Yoichi Miyake(Chiba Univ.) 
A-1 : 13:30-14:30 
How Many Pixels Does it Take to Make a Good 4''x6'' Print? Pixel Count Wars Revisited 
Michael Allen Kriss (MAK Consultants, USA) 
A-2 : 14:30-15:30 
Recent advances on scalable video coding 
Hiroshi Fujii (NTT Cyber Space Laboratory, Japan) 
 
5 Oct. (Wed.), 10:00-11:30 [C] Special Session 2 
Chair: Yuukou Horita (Univ. of Toyama) 
C-1 : 10:00-11:30 
Visual Quality in the Era of Social Media 
Stefan Winkler (Advanced Digital Sciences Center, Singapore) 
 
4 Oct. (Tue.), 16:00-17:20 [B] General Session (Oral): "Watermarking, Coding Artifacts" 
Chair: Kenji Sugiyama (Seikei Univ.) 
B-1 : 16:00-16:20 
Watermarking Scenario for Enabling Intellectual Property Rights in Distribution of Spectral Images 
Arto Kaarna and Harri Lattu (Lappeenranta University of Technology) 
B-2 : 16:20-16:40 
Game Theoretic Image Authentication and Recovery with Watermarking from Region of Interest 
Ling-Shih Fang and Long-Wen Chang (National Tsing Hua University) 
B-3 : 16:40-17:00 
Motion Estimation for Color Plane Interpolation of the Sequential Color Video System 
Toshio Hasegawa, Naoya Sagara, and Kenji Sugiyama (Seikei University) 
B-4 : 17:00-17:20 
An MSE-based Quality Metric for Optimal Video Post Scaling 
Ren-Jie Wang, Chih-Wei Huang, and Pao-Chi Chang (National Central University) 
 
5 Oct. (Wed.), 13:00-14:30 [D] Poster Session 
(core-time:45 min、odd; 13:00-13:45, even; 13:45-14:30) 
Chair: Jun Okamoto (NTT Lab.) 
D-1 
3D Program Production Studio and Analysis of Vergence Eye Movement when Viewing a 3D Pilot Program 
Keisuke Sano, Hiroya Kodama, Yusuke Horie, and Mitsuho Yamada (Tokai University) 
 
Color Differences in Spectral Space Clustering for MRA with CIEDE2000 Compatibility 
Joni Taipale and Arto Kaarna (Lappeenranta University of Technology) 
E-2 : 14:50-15:10 
High Dynamic Range Imaging Fusion Based on Non-linear Color Compensation 
Zong-Yi Chen, Pi-Chen Hsu, and Pao-Chi Chang (National Central University) 
E-3 : 15:10-15:30 
Comparison of Visual Functions in Individuals Viewing Natural Objects and Virtual 3D Video Clips According to Age 
Hori Hiroki, Shiomi Tomoki, Uemoto Keita, and Miyao Masaru (Nagoya University) 
E-4 : 15:30-15:50 
The Influence on Humans of Long Hours of Viewing 3D Movies 
Yuta Kawamura, Yusuke Horie, Kesuke Sano, Hiroya Kodama, and Mitsuho Yamada (Tokai University) 
E-5 : 15:50-16:10 
The Investigation of Eye Movement Characteristics in the Case of 3D Image Viewing with Captions 
Hiroya Kodama, Yusuke Horie, Kensuke Sano, and Mitsuho Yamada (Tokai University) 
 
Copyright: Technical Group of Image Media Quality and its Applications, IEICE. All rights reserved. 
Last update 24.11.2011 
 


國科會補助計畫衍生研發成果推廣資料表
日期:2012/07/30
國科會補助計畫
計畫名稱: 嵌入被加密之訊息於馬可夫隨機域合成紋理與微晶片模板影像
計畫主持人: 陳朝欽
計畫編號: 100-2221-E-007-118- 學門領域: 影像處理
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
無 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
