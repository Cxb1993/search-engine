 2
合作企業簡介 
合作企業名稱：笛林傑網通科技股份有限公司 
計畫聯絡人：楊思惠 
資本額：2000 萬 
產品簡介：IAGuard:多功能資產稽核結合資訊安全管理系統 
EMGuardian:全方位電子郵件過濾及記錄稽核系統 
SurfAdmin:上網行為過濾管理系統 
InfoSec:多功能資訊安全與權限控管系統 
SAM:垃圾及病毒郵件過濾攔阻系統 
PornBlacklist:高精準度情色網站黑名單蒐集系統 
 
網址：http://www.tljtech.com    電話：(02)2723-0166 
 
 
 
 4
人才培育成果說明： 
 
經由參與本計畫之合作廠商工程師與研究生得到以下之訓練成果： 
a. 了解 SOAP AXIS 的基本運作原理與應用。 
b. 了解利用 Use case 分析來設計系統。 
c. 了解 Interceptor 的原理與系統實作。 
d. Portable Interceptor 的運作模式與設計考量之概念。 
e. 了解網際網路服務架構。 
f. 系統整合實作之經驗。 
 
 
技術研發成果說明： 
 
本計畫在不影響與違反 SOAP 所提供的標準下，並且考慮系統的實用性，做最佳的選
擇，建立一個可攜性的攔截機制介面，以補足現有 SOAP 標準的不足。技術特點主要以
Web Service 的容錯為出發點，而可攜性的攔截機制介面不僅僅侷限於網際服務的容錯，此
機制能廣泛的應用各個領域，例如資訊安全、負載平衡以及連續性審計等領域。期望本計
畫所提出在 AXIS 上開發可攜性機制介面能標準化，進而提升 SOAP 的實用性，為網際服
務發展更進一步。 
在系統的設計上，可將整體 Interceptor 機制依其基本功能規劃成二大部分：第一部份
為 Interceptor 機制，第二部分為系統設定管理。以下分項詳細敘述其運作功能： 
第一部份為 Interceptor 機制。在 SOAP 的架構下，在既有系統中加入 Interceptor 機制，
達到攔截目的，如圖 1 所示。一個完整的 SOAP 傳遞流程，客戶端（Client）傳送一個請
求至伺服器端（Server）時，會先在客戶端通過 Send request 的攔檢點（圖 1 中1所示），
進行處理，再傳送到伺服器端。進入伺服器端時，會再經過 Receive request 的攔檢點（圖 1
中2所示），當伺服器回傳回應時，經過 Send reply 的攔檢點（圖 1 中3所示）。最後，在
客戶端經過 Receive reply 的攔檢點（圖 1 中4所示），完成所有動作。 
 
Send request Receive request
Client Server
Send replyReceive  reply
3
1 2
4
 
圖 1: SOAP Interceptor 示意圖 
第二部分為系統設定。此系統設定的部份，可以提供相關人員，如系統管理者，設定
系統攔截機制運作的組態。藉由組態設定，將可攜性的攔截元件設定至運作的系統。而可
攜性元件的建立部分，需要遵守本論文所規範的物件的方法，根據 Use Case 系統描述，利
 6
SOAP Engine
response
msg
Web Service
request
msg
Receive Reply 
Interceptor Chain
Configuration
ServerClient
Send Request 
Interceptor Chain
Application
 
圖 3: 客戶端系統架構圖 
 
客戶端在 SOAP Engine 上建立 PIM 機制也可區分為兩部分，如上節所述，放置在訊
息的出口端，稱之為 Pre-Interceptor；放置在訊息的入口端者，稱之為 Post-Interceptor。
SOAP Engine 中，我們提供了一個組態設定元件，主要為提供客戶端設定 Interceptor 環
境。我們可以藉由 Interceptor 管理工具，來設定我們欲新增之 Interceptor，或是利用管理
工具來查詢目前系統中正在運行的 Interceptor。 
 
 
技術特點說明： 
由於 W3C 組織在 2000 年 5 月訂定完成 SOAP 1.1 Specification，以及在 2003 年 7 
月，W3C 組織進一步發佈新一版的標準 SOAP 1.2 Specification 來看。若以 SOAP 平台進
行研究，對於為了增進網際服務的可靠性（Reliability）而進行容錯（fault-tolerance）機制，
現行的 SOAP 平台架構並不完善。且目前的 SOAP 1.1 平台，因為業界的廠商眾多，標準
的實作不一，導致平台間存在著各自特有的機制，機制間並無法彼此互通。例如在 Apache 
所提供的SOAP 平台 axis 1.1 中，可以利用其所提供特有的Handler 機制，來達到FT -SOAP 
容錯功能，但此容錯機制並不能延伸到其他平台，如 Microsoft .NET。 
另外，對於新標準的 SOAP 1.2 平台與 SOAP 1.1 平台的混合網路環境下，若以 SOAP 
1.2 的新機制－中間站（Intermediary）所實作出來的 FT-SOAP 機制，也無法與舊有的 SOAP 
1.1 平台溝通，因此無法在混合的網路環境下達到容錯的功能。因此，以現今所訂定的 SOAP
標準中，並不完善，也無法滿足我們的需求。 
本計畫主要特點在於不影響與違反 SOAP 所提供的標準下，並且考慮系統的實用性，
做最佳的選擇，建立一個可攜性的攔截機制介面，以補足現有 SOAP 標準的不足。技術特
點主要以 Web Service 的容錯為出發點，而可攜性的攔截機制介面不僅僅侷限於網際服務
的容錯，此機制能廣泛的應用各個領域，例如資訊安全、負載平衡以及連續性審計等領域。
期望本計畫所提出在 AXIS 上開發可攜性機制介面能標準化，進而提升 SOAP 的實用性，
為網際服務發展更進一步。 
經由本計劃所實作之雛形，除了提供 SOAP 一個具備可攜性的攔截機制介面供各類型
SOAP Engine 使用，該機制亦提供一個方便的攔截機制管理介面，藉由此管理機制可以輕
鬆的置換與啟用不同的攔截機制，藉此提供一個彈性化的應用環境。 
 
 
 
