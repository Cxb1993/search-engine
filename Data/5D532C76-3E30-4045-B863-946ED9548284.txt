 1 
行政院國家科學委員會補助專題研究計畫成果報告 
 
同時具有退化與學習效應之單機排程問題研究 
A study on some single-machine scheduling problems simultaneous 
with deteriorating and learning effects 
計畫編號：NSC 97－2221－E－150－056－MY2 
執行期限：97 年 8 月 1 日至 99 年 7 月 31 日 
主持人：楊達立 教授 
執行機構及單位名稱：國立虎尾科技大學資訊管理系 
E-mail：dlyang@nfu.edu.tw 
 
 
 
一、中文摘要 
 
本研 究探 討同 時具 有退 化效 應 
(Deteriorating effect) 與 學 習 效 果 
(Learning effect) 之單機排程問題。在生產
過程中「退化效應」的現象經常會發生，
舉例而言當生產加工的時間累積越多時，
工件刀具的磨損率逐漸增加，單一工作的
處理時間也將隨之增長，因此會導致整體
生產時程延遲。另一方面，當操作人員在
對產品做加工生產時，會隨著時間的增
加，累積工作經驗與技巧等能力，因此使
得執行工作的實際操作時間會隨著工作的
處理順序而有縮短工時的情形發生，我們
將這樣的現象稱為「學習效果」。故在本研
究中我們將推廣先前文獻所討論的退化效
應與學習效果模式，同時考慮具有退化效
應與學習效果之單機排程問題， 結合加工
處理順序與加工開始時間，分別考量完工
時間  (Makespan) 、全部完工時間總和 
(Total completion times)、全部完工時間絕
對值差總和 (Total absolute differences in 
completion times) 與提早完成、延後完成
及到期日等時間之加權懲罰成本總和下
(Sum of earliness, tardiness and common 
due-date penalty)之最小化績效衡量指標，
提出相關理論性質，據此設計演算法，並
應用至業界與提供電腦模擬分析報告。 
 
關鍵字：單機排程，退化效應，學習效果，
完工時間，全部完工時間總和，全部完工
時間絕對值差總和，提早完成、延後完成
及到期日等時間之加權懲罰成本總和 
 
Abstract 
 
In this research, we consider some 
single-machine scheduling problems 
simultaneous with deteriorating and learning 
effects. A “deteriorating effect” can be 
described by the following example.  
Assume that some products need to be 
processed by a cutting tool.  Because of 
wear of the cutting tool, the processing time 
required to execute some products increases 
with respect to the processing time of 
products already executed. On the other 
hand, in many realistic setting, because 
employees perform a task over and over, 
they learn how to perform more efficiently.  
The worker improves continuously over 
time. As a result, the actual processing time 
of a given job is reflected in a decrease in 
normal processing time as a function of the 
number of repetitions of the job of a single 
item, i.e. as a function of the job position in 
 3 
具有相同的學習效果。 Mosheiov 與
Sideney[19]進一步推廣上述的研究，他們
考慮學習效果與工作本身的特性有關 
(Job-dependent) ，也就是所有的工作可能
具有不同的學習效果。進一步相關之學習
效果文獻可參考 Biskup [20]. 
在研究工作的處理時間可以縮短的考
量下，加入學習效果 (Learning effect) 來
思考問題，是具有很實際的應用。往往組
織或工作人員會因重複的執行工作，因而
學習到如何將工作執行的更有效率。在生
產排程問題方面，當操作人員在對產品做
生產加工時，會隨著時間的增加，累積工
作經驗與技巧等能力，因此導致執行工作
的實際操作時間會隨著工作的處理順序而
有縮短加工時間的情形發生，我們將這樣
的現象稱為「學習效果」。學習效果在今日
的競爭環境下，愈來愈顯重要，往往一個
組織或個人會透過學習來快速成長，進而
降低營運成本，增加整體競爭力。有關於
學習效果在排程問題方面的研究皆為最近
的文獻，屬於新的研究題材，相當值得探
討，對於實務上的應用相信也會有很大的
貢獻。 
對於同時考慮具有退化與學習效應之
文獻，目前仍屬於新的研究題材。就我們
所收集的文獻中，Lee [21] 最早提出相關
文章，他考慮二種時間模式，分別為
b
iir trp α=  及 biir rtap )( 0 α+= 等處理時
間函數。在時間函數為 biir trp α= 與目標
函數為完工時間與全部完工時間總和考量
下，他分別提出多項式時間下之最佳解
法。Wang [22] 考慮另一線性組合模式
))(( biir rtap βα += ，其中 )(tα 是一增函
數， β 為非負之權重參數，在考慮完工時
間、全部完工時間總和與全部完工時間平
方總和考量下，他分別提出多項式時間下
之最佳解法。 
 
計畫目的： 
故在本研究中我們將探討上述文獻所
討論的退化效應與學習效果排程模式，考
慮同時具有退化效應與學習效果之單機排
程問題，結合加工處理順序與加工開始時
間 等 因 素 ， 分 別 考 量 完 工 時 間 
(Makespan) 、全部完工時間總和 (Total 
completion times)、全部完工時間絕對值差
總 和  (Total absolute differences in 
completion times) 與提早完成、延後完成
及到期日等時間之加權懲罰成本總和下
(Sum of earliness, tardiness and common 
due-date penalty)之最小化績效衡量指標，
提出相關理論性質，據此設計演算法，並
應用至業界與提供電腦模擬分析報告。 
 
 
三、研究結果與討論 
 
在一般情況下，排程問題的求解方法
有以下幾種方式: 
1. 排 程 問 題 性 質 之 推 導 (Scheduling 
Theory)、 
2. 多 項 式 時 間 下 之 最 佳 演 算 法
(Polynomial Time Algorithm)、 
3. 分 枝 與 界 限 法 (Branch & Bound 
Method)、 
4. 動態規劃法(Dynamic Programming)、 
5. 整數規劃模式(Integer Programming)、 
6. 啟發式演算法(Heuristic Method)等。 
其中方法 3-6 的適用性，均架構在計
算理論下的複雜度分析為依據。 
所以在本研究裡，我們首先推導排程
模式在理論上的一些特性，做為設計解法
之依據，並根據這些特性尋找是否存在有
多項式時間下之最佳演算法(Polynomial 
time algorithm)。若無法尋得，我們再利用
計算方法理論來分析問題的複雜度
(Complexity analysis)。若是 NP-hard 的問
題，則利用啟發式演算法來求取近似解並
做誤差界限分析。 
在第一年 (97 年 8月至 98 年 7 月) 期
間，我們考慮 
a
iir rtap )( α+=  模式 
 
績效衡量指標為 
1. Cmax (Makespan)； 
2. TC (Total completion times)； 
3. TADC (Total absolute differences in 
 5 
Processing Letters 81, 81-84. 
[9] G. Mosheiov (1996). Λ-shape policies for 
schedule deteriorating jobs, Journal of 
the Operational Research Society 47, 
1184-1191. 
[10] B. Alidaee and N.K. Womer (1999). 
Scheduling with time dependent 
processing times: Review and 
extensions. Journal of the Operational 
Research Society 50, 711-729. 
[11] T. C. E. Cheng, Q. Ding and B.M.T. Lin 
(2004). A concise survey of scheduling 
with time-dependent processing times. 
European Journal of Operational 
Research 152, 1-13. 
[12] T. C. E. Cheng, Z. L. Chen and C.-L. Li 
(1996).  Parallel-machine scheduling 
with controllable processing times. IIE 
Transactions 28, 177-180. 
[13] T. C. E. Cheng, C. Oguz and X. D. Xi 
(1996).  Due-date assignment and 
single machine scheduling with 
compressible processing times. 
International Journal of Production 
Economics 43, 29-35. 
[14] D. Biskup and T. C. E. Cheng (1997).  
Single-machine scheduling with 
controllable processing times, earliness, 
tardiness and completion time penalties. 
Engineering Optimization. 
[15] D. Biskup (1999).  Single-machine 
scheduling with learning considerations.  
European Journal of Operational 
Research 115, 173-178. 
[16] G. Mosheiov (2001).  Scheduling 
problems with a learning effect.  
European Journal of Operational 
Research 132, 687-693. 
[17] G. Mosheiov (2001).  Parallel 
machines scheduling with a learning 
effect.  Journal of the Operational 
Research Society 52, 1-5. 
[18] W. C. Lee and C. C. Wu (2004).  
Minimizing total completion time in a 
two- machine flowshop with a learning 
effect. International Journal of 
Production Economics 88, 85-93. 
[19] G. Mosheiov and J. B. Sidney (2003).  
Scheduling with general job-dependent 
learning curves.  European Journal 
of Operational Research 147, 665-670. 
[20] D. Biskup (2007). A state-of-the-art 
review on scheduling with learning 
effects. European Journal of 
Operational Research, In Press, 
Corrected Proof, Available online 2 
June 2007. 
[21] W.C. Lee (2004). A note on 
deteriorating jobs and learning in 
single-machine scheduling problems. 
International Journal of Business and 
Economics 3, 83-89. 
[22] J.B. Wang (2006). Single-machine 
scheduling problems with the effects of 
learning and deterioration. Omega, in 
press. 
 
316 Ann Oper Res (2009) 172: 315–327
that the total weighted completion time minimization problem with the same deterioration
model (pAi = pi +αit) is NP-hard. Mosheiov (1994) considered a simple model (pAi = αit)
and showed that the problems of minimizing such objectives as the makespan, total com-
pletion time, total weighted completion time, total lateness, number of tardy jobs, maxi-
mum lateness, and maximum tardiness are all polynomially solvable. Mosheiov (1996) fur-
ther considered another simple linear deterioration model (pAi = pi + αt), he showed that
the problem to minimize the total weighted completion time with weights proportional to
the original processing times is also polynomially solvable. For research results on other
scheduling models considering deterioration effects and under different machine environ-
ments, the reader can refer to Inderfurth et al. (2006) and the survey papers of Alidaee and
Womer (1999), Cheng et al.a (2004a), and Biskup (2008). Janiak and Mikhail (2006) also
provided a detailed survey about the research of this line.
On the other hand, there is also a growing interest in the literature to study scheduling
problems with a learning effect. For example, Biskup (1999) introduced a job-independent
learning effect model in which the actual processing time of job Ji is pir = pira when
scheduled in position r , where pi and a (a < 0) are the original processing time and the
learning rate of job Ji , respectively. He showed that the single-machine scheduling problems
with the learning effect still remain polynomially solvable if the objective is to minimize the
deviation from a common due date or to minimize the total completion time. Mosheiov
(2001) applied similar solution techniques to several other single-machine problems. Lee et
al. (2004) considered the objective of minimizing the linear combination of total completion
time and maximum tardiness. They created some dominance properties and applied them
to enhance the performance of a proposed algorithm. Wu and Lee (2009) considered the
objective of minimizing the total completion time in a permutation flowshop scheduling
problem and provided a dominance rule and some lower bounds to speed up the search
for the optimal solution. Mosheiov and Sidney (2003) further considered a more general
model of learning effect (pir = pirai ) in which the learning effects of some jobs are greater
than those of others in a sequence, i.e. the learning effects are job-dependent. They showed
that some scheduling problems with the job-dependent learning effect remain polynomially
solvable. Lin (2007) showed that the complexity for a single machine scheduling problem of
minimizing the number of late jobs with a general job-dependent learning model is strongly
NP-hard when due-dates of jobs are different. Janiak and Rudek (2008b) further improved
the proof. Janiak et al. (2009) defined the experience of the processor at the start of execution
of the r th job is Eβ(r) = ∑r−1l=1 e[l] + β[r]e[r] where e[l] ≥ 1 is the experience provided to
the processor by a job scheduled in position l in a sequence. They introduced an experience
based learning model in which the actual processing time of job Jj scheduled in position r is
pj (Eβ(r)) = aj −bj (min{Eβ(r), gj })αj where aj is normal processing time of Jj , αj and bj
are the exponential and linear ratios of Jj , respectively and gj is its learning threshold. They
showed that the makespan minimization problem with such a learning model is strongly NP-
hard and provided some eliminating properties that are used to construct a branch-and-bound
algorithm and some fast heuristic methods. A survey on this kind of scheduling research
could be found in Bachman and Janiak (2004) and Janiak and Rudek (2006). There are also
some special approaches to the learning effect in scheduling problems. The reader can refer
to Ng et al. (2002), Cheng et al. (2003), Janiak and Kovalyov (2006) and Janiak and Rudek
(2007, 2008a, 2008c).
Recently, the effects of deterioration and learning effects are simultaneously considered
in some scheduling problems because the phenomena can be found in many real-life situa-
tions (Wang 2007). For example, as the manufacturing environment becomes increasingly
competitive, in order to provide customers with greater product variety, organizations are
318 Ann Oper Res (2009) 172: 315–327
the sum of weighted completion times, the sum of the kth power of completion times, the
maximum lateness, the total absolute differences in completion times and the sum of ear-
liness, tardiness and common due-date penalties, respectively. The remaining part of the
paper is organized as follows. In Sect. 2, we formulate the problem. In Sect. 3 to Sect. 9,
several polynomial time algorithms are proposed to optimally solve the problem with the
above objectives. Finally, conclusions are given in Sect. 10.
2 Problem formulation
To model the effect of deteriorating jobs, we follow Mosheiov (1996) by incorporating a
linear model (pAi = pi + αt). On the other hand, the learning effect is modeled in a form of
the log-linear curve (see Biskup (1999)). In order to study the effects of deterioration and
learning simultaneously, we combine the above models to constitute our model.
There are n jobs to be processed on a single machine. All the jobs are non-preemptive.
The machine can handle at most one job at a time and cannot stand idle until the last job
assigned to it has finished processing. Let pir be the actual processing time of job Ji (i =
1,2, . . . , n) if it is started at time t and scheduled in position r in a sequence. That is, if Ji
is scheduled in position r in a sequence, its actual processing time is
pir = (pi + αt)ra (1)
where α is a common deterioration rate, pi is the original processing time of Ji , t is the start-
ing time of Ji , and a is the learning index. The assumption that all the jobs have an identical
deterioration rate is reasonable, which reflects some real-life situations. Namely, Cheng et
al. (2004b) mentioned that the model of pAi = pi + αt is a very realistic setting, particularly
in the case of scheduling problems with deteriorating machine, when all processing times
are increased by a common factor caused by the machine.
For convenience, for a given schedule σ , let Ci = Ci(σ ) denote the completion time
of job Ji . Let d denote a common due date and Ti = Ti(σ ) and Ei = Ei(σ ) denote the
tardiness of job Ji and the earliness of job Ji , respectively, where Ti = maxi{Ci − d,0},
Ei = maxi{d − Ci,0}. We will consider the minimization of the following objective func-
tions: the makespan Cmax = maxi{Ci}, the total completion time ∑C = ∑ni=1 Ci , the sum
of weighted completion times
∑
wC = ∑ni=1 wiCi , the sum of the kth power of com-
pletion times
∑
Cki =
∑n
i=1 C
k
i , the maximum lateness Lmax = maxi{Ci − di} where di
is the due-date of job Ji , the total absolute differences in completion times TADC =∑n
i=1
∑n
j=i |Ci − Cj | and the sum of earliness, tardiness and common due-date penalty
ETCP = ∑ni=1(μEi + νTi + ωd) where μ, ν and ω are the unit earliness, tardiness and due
date penalty, respectively. Thus, using the three-field notation introduced by Graham et al.
(1979), the corresponding scheduling problems are denoted by 1/pir = (pi + αt)ra/Cmax,
1/pir = (pi + αt)ra/∑C, 1/pir = (pi + αt)ra/∑wiCi , 1/pir = (pi + αt)ra/∑Cki ,
1/pir = (pi + αt)ra/Lmax, 1/pir = (pi + αt)ra/TADC and 1/pir = (pi + αt)ra/ETCP,
respectively.
3 The makespan minimization
In this section, we show that the problem 1/pir = (pi + αt)ra/Cmax is polynomially solv-
able. First, a useful lemma which was applied in Kuo and Yang (2007) is given as follows.
320 Ann Oper Res (2009) 172: 315–327
The completion time of the last job can be expressed as
C[n] = p[1]1a(1 + α2a) · · · (1 + αna) + p[2]2a(1 + α3a) · · · (1 + αna) + · · ·
+ p[n−1](n − 1)a(1 + αna) + p[n]na
=
n∑
k=1
p[k]zk (4)
where the vector zk = ka ∏nj=k+1(1 + αja) for k = 1, . . . , n, and
∏n
j=n+1(1 + αja) = 1.
Therefore, from (4), the makespan of the problem is
Cmax =
n∑
k=1
p[k]zk.
It can be viewed as the scalar product of two vectors zk = ka ∏nj=k+1(1 + αja) and p[k]
(k = 1, . . . , n). Since the elements of the vector zk are already sorted in non-increasing order,
from Lemma 1, the elements of the vector p[k] should be sorted in non-decreasing order
to minimize the makespan. Consequently, the optimal sequence for the problem 1/pir =
(pi + αt)ra/Cmax is the well known shortest processing time (SPT) sequence. 
4 The total completion time minimization
In this section, we show that the problem 1/pir = (pi + αt)ra/∑C is also polynomially
solvable.
Theorem 2 For the problem 1/pir = (pi +αt)ra/∑C, there exists an optimal schedule in
which jobs are sequenced in non-decreasing order of pi .
Proof From (3), the total completion time is calculated as follows:
n∑
i=1
C[i] =
n∑
i=1
(
i∑
k=1
p[k]zik
)
=
n∑
i=1
(
n∑
k=i
zki
)
p[i] =
n∑
i=1
[
n∑
k=i
k∏
j=i+1
(1 + αja)
]
iap[i]. (5)
Equation (5) can be viewed as the scalar product of two vectors ui = [∑nk=i
∏k
j=i+1(1 +
αja)]ia and p[i] (i = 1, . . . , n). Since the elements of the vector ui are already sorted in
non-increasing order, from Lemma 1, the elements of the vector p[i] should be sorted in
non-decreasing order to minimize the total completion time. Thus, the optimal sequence for
the problem 1/pir = (pi + αt)ra/∑C is still the well known SPT sequence. 
5 The sum of weighted completion times minimization
In this section, we show that some polynomial-time solutions are optimal for the problem
1/pir = (pi + αt)ra/∑wiCi under certain conditions.
Theorem 3 For the problem 1/pir = (pi + αt)ra/∑wiCi , if jobs have agreeable condi-
tion, i.e. pi ≤ pj implies wi ≥ wj and wipi ≥ wjpj for all jobs i and j , there exists an
optimal schedule in which jobs are sequenced in non-decreasing order of pi/wi (i.e. short-
est weighted processing time rule, SWPT rule).
322 Ann Oper Res (2009) 172: 315–327
6 The sum of the kth power of completion times minimization
Townsend (1978) studied a single machine scheduling problem with a quadratic cost func-
tion of completion times. His analysis implied that the problem 1//
∑
C2i can be solved
optimally by sequencing jobs in non-decreasing order of their basic processing times. In
some scheduling situations, it is possible to consider a polynomial cost function of degree k.
Therefore, we consider a more general scheduling measure, that is, the sum of the kth power
of completion times. In addition, we show that the problem 1/pir = (pi + αt)ra/∑Cki is
still solved optimally by sequencing jobs in non-decreasing order of pi .
Theorem 4 For the problem 1/pir = (pi + αt)ra/∑Cki where k is a positive real number,
there exists an optimal schedule in which jobs are sequenced in non-decreasing order of pi
(i.e. shortest processing time rule, SPT rule).
Proof This theorem can be proved by a pairwise interchange of jobs. First, we still use the
same notations mentioned above. Then, by comparing (6) and (8) in Sect. 5, if pi ≤ pj ,
it is clear that C[r](S1) ≤ C[r](S2) for C[r−1](S1) = C[r−1](S2). In addition, if pi ≤ pj ,
it follows from Theorem 1 that C[r+1](S1) ≤ C[r+1](S2). Therefore, since k is a posi-
tive real number, we have Ck[r](S1) ≤ Ck[r](S2) and Ck[r+1](S1) ≤ Ck[r+1](S2). Consequently,∑
Cki (S1) ≤
∑
Cki (S2). This completes the proof of the theorem. 
7 The maximum lateness minimization
In this section, we also show that some polynomial time solutions are optimal for the prob-
lem 1/pir = (pi + αt)ra/Lmax under certain conditions.
Theorem 5 For the problem 1/pir = (pi + αt)ra/Lmax, if jobs have agreeable due-dates,
i.e. pi ≤ pj implies di ≤ dj for jobs Ji and Jj , there exists an optimal schedule in which
jobs are sequenced in non-decreasing order of di (i.e. Earliest due-date rule, EDD rule).
Proof This theorem can be proved by a pairwise interchange of jobs. First, we still use the
same notations mentioned above. Then the lateness of Ji and Jj in sequence S1 and S2 is
respectively given as follows:
Li(S1) = C[r−1](S1) + (pi + αC[r−1](S1))ra − di, (13)
Lj(S1) = C[r−1](S1) + (pi + αC[r−1](S1))ra + (pj + αC[r](S1))(r + 1)a − dj , (14)
Lj(S2) = C[r−1](S2) + (pj + αC[r−1](S2))ra − dj (15)
and
Li(S2) = C[r−1](S2) + (pj + αC[r−1](S2))ra + (pi + αC[r](S2))(r + 1)a − di, (16)
where di and dj are the due-dates of Ji and Jj , respectively.
If di ≤ dj then we obtain Lj(S2) ≤ Li(S2). That is Li(S2) = max{Lj(S2),Li(S2)} if
di ≤ dj . Hence, if pi ≤ pj , from Theorem 1, then C[r+1](S1) ≤ C[r+1](S2). Since C[r−1](S1) =
C[r−1](S2), if pi ≤ pj and di ≤ dj , we have Lj(S1) ≤ Li(S2) and Li(S1) ≤ Li(S2). There-
fore, if pi ≤ pj and di ≤ dj , then we have max{Li(S1),Lj (S1)} ≤ max{Lj(S2),Li(S2)}.
This completes the proof of the theorem. 
324 Ann Oper Res (2009) 172: 315–327
9 The earliness, tardiness and due date penalty minimization
In this section, we study the problem 1/pir = (pi + αt)ra/ETCP. The goal of the prob-
lem is to jointly minimize the earliness, tardiness and due date penalty. Among others,
an unrestricted common due date d is a decision variable whose value is to be deter-
mined. If there are no deteriorating jobs and learning effects (i.e. α = a = 0), the problem
1/pir = (pi +αt)ra/ETCP is reduced to the problem 1//∑(μEi +νTi +ωd). Panwalkar et
al. (1982) provided some useful results of the problem 1//∑(μEi + νTi + ωd) as follows.
Theorem 6 (Panwalkar et al. 1982) For the problem 1//∑(μEi + νTi + ωd),
(1) it is optimal to assign the due date at the completion time of the kth job, where k is the
smallest integer greater than or equal to (nν − nω)/(μ + ν).
(2) the optimal schedule is V-shaped, i.e., early jobs are arranged in non-increasing order
of their processing times and tardy jobs are arranged in non-decreasing order of their
processing times.
(3) the positional weight of a job when scheduled in position i in the sequence is given by
qi = min{nω + (i − 1)μ, (n + 1 − i)ν}.
According to Theorem 6,
ETCP =
n∑
i=1
(μEi + νTi + ωd)
can be rewritten as
ETCP =
n∑
i=1
(μE[i] + νT[i] + ωd) =
n∑
i=1
qip[i]i
=
n∑
i=1
[
qi
(
i∑
k=1
p[k]vik
)]
=
n∑
i=1
(
n∑
k=i
qkvki
)
p[i] =
n∑
i=1
hip[i] (18)
where hi = ∑nk=i qkvki .
Based on the above analysis and Lemma 1, the following O(n logn) algorithm which is
similar to Algorithm 1 in Kuo and Yang (2007) is provided to solve the problem 1/pir =
(pi + αt)ra/ETCP.
Algorithm 1
Step 1. Assign the optimal due-date at the completion time of the kth job, where k is the
smallest integer greater than or equal to (nν − nω)/(μ + ν), that is,
k =
⌈
nν − nω
μ + ν
⌉
.
Step 2. Calculate each value of hi , i = 1, . . . , n.
Step 3. Assign the job with the longest original processing time to the position with the
smallest value of hi , the job with the second longer original processing time to the
position with the second smaller value of hi , etc.
326 Ann Oper Res (2009) 172: 315–327
Biskup, D. (2008). A state-of-the-art review on scheduling with learning effects. European Journal of Oper-
ational Research, 188, 315–329.
Browne, S., & Yechiali, U. (1990). Scheduling deteriorating jobs on a single processor. Operations Research,
38, 495–498.
Cheng, T. C. E., Ding, Q., Kovalyov, M. Y., Bachman, A., & Janiak, A. (2003). Scheduling jobs with piece-
wise linear decreasing processing times. Naval Research Logistics, 50, 531–532.
Cheng, T. C. E., Ding, Q., & Lin, B. M. T. (2004a). A concise survey of scheduling with time-dependent
processing times. European Journal of Operational Research, 152, 1–13.
Cheng, T. C. E., Kang, L., & Ng, C. T. (2004b). Due-date assignment and single machine scheduling with
deteriorating jobs. Journal of the Operational Research Society, 55, 198–203.
Cheng, T. C. E., Wu, C. C., & Lee, W. C. (2008). Some scheduling problems with deteriorating jobs and
learning effects. Computers & Industrial Engineering, 54, 972–982.
Graham, R. L., Lawler, E. L., Lenstra, J. K., & Rinnooy Kan, A. H. G. (1979). Optimization and approxima-
tion in deterministic sequencing and scheduling: A survey. Annals Discrete Mathematics, 5, 287–326.
Hardy, G. H., Littlewood, J. E., & Polya, G. (1967). Inequalities. London: Cambridge University Press.
Inderfurth, K., Janiak, A., Kovalyov, M. Y., & Werner, F. (2006). Batching work and rework processes with
limited deterioration of reworkables. Computers & Operations Research, 33, 1595–1605.
Janiak, A., & Kovalyov, M. Y. (2006). Job sequencing with exponential functions of processing times. Infor-
matica, 17, 13–24.
Janiak, A., & Mikhail, K. Y. (2006). Scheduling deteriorating jobs. In A. Janiak (Ed.), Scheduling in computer
and manufacturing systems (pp. 12–25). Warszawa, WKL.
Janiak, A., & Rudek, R. (2006). Scheduling problems with position dependent job processing times. In A. Ja-
niak (Ed.), Scheduling in computer and manufacturing systems (pp. 26–38). Warszawa, WKL.
Janiak, A., & Rudek, R. (2007). The learning effect: Getting to the core of the problem. Information Process-
ing Letters, 103, 183–187.
Janiak, A., & Rudek, R. (2008a). A new approach to the learning effect: Beyond the learning curve restric-
tions. Computers & Operations Research, 35, 3727–3736.
Janiak, A., & Rudek, R. (2008b). Viewpoint on: Complexity results for single-machine scheduling with po-
sitional learning effects. Journal of the Operational Research Society, 59, 1430.
Janiak, A., & Rudek, R. (2008c). Experience based approach to scheduling problems with the learning effect.
IEEE Transactions on Systems, Man, and Cybernetics – Part A. doi:10.1109/TSMCA.2008.2010757.
Janiak, A., Janiak, W., Rudek, R., & Wielgus, A. (2009). Solution algorithms for the makespan minimization
problem with the general learning model. Computers and Industrial Engineering, 56, 1301–1308.
Kanet, J. J. (1981). Minimizing variation of Flow Time in Single Machine Systems. Management Science,
27, 1453–1459.
Kunnathur, A. S., & Gupta, S. K. (1990). Minimizing the makespan with late start penalties added to process-
ing times in a single facility scheduling problem. European Journal of Operational Research, 47, 56–64.
Kuo, W. H., & Yang, D. L. (2006a). Single-machine group scheduling with a time-dependent learning effect.
Computers & Operations Research, 33, 2099–2112.
Kuo, W. H., & Yang, D. L. (2006b). Minimizing the total completion time in a single machine scheduling
problem with a time-dependent learning effect. European Journal of Operational Research, 174(2),
1184–1190.
Kuo, W. H., & Yang, D. L. (2007). Single machine scheduling with past-sequence-dependent setup times and
learning effects. Information Processing Letters, 102, 22–26.
Lee, W. C. (2004). A note on deteriorating jobs and learning in single-machine scheduling problems. Inter-
national Journal of Business and Economics, 3, 83–89.
Lee, W. C., Wu, C. C., & Sung, H. J. (2004). A bi-criterion single-machine scheduling problem with learning
considerations. Acta Informatica, 40, 303–315.
Lin, B. M. T. (2007). Complexity results for single-machine scheduling with positional learning effects.
Journal of the Operational Research Society, 58, 1099–1102.
Mosheiov, G. (1991). V-shaped policies for scheduling deteriorating jobs. Operations Research, 39, 979–
991.
Mosheiov, G. (1994). Scheduling deteriorating jobs under simple linear deterioration. Computers and Oper-
ations Research, 21, 653–659.
Mosheiov, G. (1995). Scheduling jobs with step-deterioration: minimizing makespan on a single- and multi-
machine. Computers and Industrial Engineering, 28, 869–879.
Mosheiov, G. (1996). -shape policies for schedule deteriorating jobs. Journal of the Operational Research
Society, 47, 1184–1191.
Mosheiov, G. (2001). Scheduling problems with learning effect. European Journal of Operational Research,
132, 687–693.
Some scheduling problems with deteriorating jobs and learning effectsq
Dar-Li Yang, Wen-Hung Kuo *
Department of Information Management, National Formosa University, Yun-Lin 632, Taiwan
a r t i c l e i n f o
Article history:
Received 6 January 2009
Received in revised form 26 June 2009
Accepted 30 June 2009
Available online 10 July 2009
Keywords:
Scheduling
Single machine
Deteriorating jobs
Learning effects
Flowshop
Polynomial time algorithm
a b s t r a c t
This paper considers some scheduling problems with deteriorating jobs and learning effects. The follow-
ing objective functions are considered: the makespan, the total completion times, and the total absolute
differences in completion times. Several polynomial time algorithms are proposed to optimally solve the
single-machine scheduling problems. Finally, we show that several special cases of the ﬂowshop sched-
uling problems remain polynomially solvable under the proposed model.
 2009 Published by Elsevier Ltd.
1. Introduction
Recently, the effects of deterioration and learning effects are
simultaneously considered in some scheduling problems because
the phenomena can be found in many real-life situations (Wang,
2007). For example, as the manufacturing environment becomes
increasingly competitive, in order to provide customers with more
product varieties, organizations are moving toward shorter pro-
duction runs and frequent product changes. The learning and for-
getting that workers undergo in this environment have thus
become increasingly important as workers tend to spend more
time in rotating among tasks and responsibilities prior to becoming
fully proﬁcient. These workers are often interrupted by product
and process change causing decrements in performance, which
we will refer to, for simplicity, as forgetting. Therefore, it is worth
studying scheduling problems simultaneous with deterioration
and learning effects. To the best of our knowledge, there are only
a few researches on scheduling problems simultaneous with dete-
rioration and learning effects. Lee (2004) ﬁrst considered single-
machine scheduling problems with both deterioration and learning
effects. He proposed the following two models. In the ﬁrst model,
the actual processing time of job Ji is pir = aitra if it starts at time
t and is scheduled in position r in a sequence, where ai, a and t
are the deterioration rate, learning rate and starting time of job
Ji, respectively. In the second model, the actual processing time is
pir = (p0 + ait)ra, where p0 is the basic processing time. In the ﬁrst
model, he showed that the optimal schedule can be obtained by
the smallest deterioration rate (SDR) principle if the objectives
are to minimize makespan, the ﬂow time, and the sum of the late-
ness, respectively. However, he only gave counter examples to
demonstrate the SDR principle does not provide the optimal solu-
tion for these objectives in the second model. That is, the optimal
solutions of the problem with the second model for these objec-
tives are still unknown. Wang (2007) considered a linear combina-
tion model different from those of Lee (2004). In his model, the
actual processing time of job Ji is pir = ai(a(t) +bra) if it starts at time
t and is scheduled in position r in a sequence, where a(t) is an
increasing function and weight parameter bP 0. He showed that
the makespan, the total completion time, and the sum of comple-
tion time squares minimization problems all can be optimally
solved by the shortest processing time (SPT) rule. Wang and Cheng
(2007a) considered a model in which the actual processing time of
job Ji is pir = ai(b + ct)ra if it is started at time t and scheduled in
position r in a sequence where ai is a deterioration rate, b > 0 and
c > 0 are constants, and a is a learning index. They introduced
polynomial-time solutions to minimize the makespan, the total
completion time, the sum of weighted completion times in the
single-machine scheduling problem. They also provided some
polynomial-time solutions to minimize the makespan and the total
completion time under certain conditions in the two-machine
ﬂowshop scheduling problem. Wang and Cheng (2007b) consid-
ered another model in which the actual processing time of job Ji
is pir = (p0 + ait)ra if it is started at time t and scheduled in position
r in a sequence where ai is a deterioration rate, p0 is the common
basic processing time, and a is the learning index. They gave some
polynomially solvable cases to the single-machine minimum
0360-8352/$ - see front matter  2009 Published by Elsevier Ltd.
doi:10.1016/j.cie.2009.06.016
q This manuscript was processed by Area Editor T.C. Edwin Cheng.
* Corresponding author. Tel.: +886 5631 5733; fax: +886 5636 4127.
E-mail address: whkuo@nfu.edu.tw (W.-H. Kuo).
Computers & Industrial Engineering 58 (2010) 25–28
Contents lists available at ScienceDirect
Computers & Industrial Engineering
journal homepage: www.elsevier .com/ locate/caie
TC ¼
Xn
i¼1
C ½i ¼
Xn
i¼1
Xi
k¼1
a½kwik
 !
¼ ða½1w11Þ þ ða½1w21 þ a½2w22Þ þ ða½1w31 þ a½2w32 þ a½3w33Þ
þ    þ ða½1wn1 þ a½2wn2 þ    þ a½n1wn;n1 þ a½nwnnÞ
¼ ða½1w11 þ a½1w21 þ a½1w31 þ    þ a½1wn1Þ
þ ða½2w22 þ a½2w32 þ    þ a½2wn2Þ þ    þ ða½nwnnÞ
¼
Xn
i¼1
Xn
k¼i
wki
 !
a½i ¼
Xn
i¼1
Xn
k¼i
ð1þ aÞki
" #
iba½i: ð6Þ
Eq. (6) can be viewed as the scalar product of two vectors, the
ui ¼
Pn
k¼ið1þ aÞki
h i
ib and a[i] vectors, respectively (i = 1, . . . ,n).
Since the elements of the ui vector are already sorted in non-
increasing order, from Lemma 1, the elements of the a[i] vector
should be sorted in non-decreasing order. Based on the above anal-
ysis, the optimal sequence for the 1/pir = airb + at/TC problem is still
the well known SPT sequence.
3.3. The 1/pir = air
b + at/TADC scheduling problem
We consider a scheduling problem with the objective of mini-
mizing the total absolute variation in the job completion times
(TADC). This scheduling measure was ﬁrst considered by Kanet
(1981). The TADC of the 1/pir = airb + at/TADC scheduling problem
can be calculated from Eq. (4) as follows:
TADC ¼
Xn
i¼1
Xn
j¼i
C ½i  C ½j
  ¼Xn
i¼1
ð2i n 1ÞC½i
¼
Xn
i¼1
ð2i n 1Þ
Xi
k¼1
a½kwik
" #
¼
Xn
i¼1
Xn
k¼i
ð2k n 1Þwki
" #
a½i
¼
Xn
i¼1
Xn
k¼i
ð2k n 1Þð1þ aÞki
" #
iba½i: ð7Þ
Eq. (7) can be viewed as the scalar product of two vectors, the
zi ¼
Pn
k¼ið2k n 1Þð1þ aÞki
h i
ib and a[i] vectors, respectively
(i = 1, . . . ,n). Based on the above analysis and Lemma 1, the optimal
sequence for the 1/pir = airb + at/TADC problem can be obtained in
O(nlog(n)) time by arranging the elements of the zi and a[i] vectors
in the opposite order.
3.4. The 1=pir ¼ airbi þ at=fCmax; TC; TADCg problems
Since, the 1=pir ¼ airbi þ at=Cmax; 1=pir ¼ airbi þ at=TC and
1=pir ¼ airbi þ at=TADC problems can be formed as assignment
problems, these problems can be solved in O(n3) time. As in Biskup
(1999), let xir be a 0/1 variable such that xir = 1 if Ji is the rth job to
be processed and xir = 0 otherwise. Then all of the scheduling prob-
lems mentioned above can be formulated as the following assign-
ment problem.
min
Xn
i¼1
Xn
r¼1
Wiraixir
s:t:
Xn
i¼1
xir ¼ 1; r ¼ 1;2; . . . ;n;
Xn
r¼1
xir ¼ 1; i ¼ 1;2; . . . ;n;
xir ¼ 0 or 1; i; r ¼ 1;2; . . . ;n;
where
Wir ¼ ð1þ aÞnrrbi for the 1=pir ¼ airbi þ at=Cmax problem,
Wir ¼
Pn
k¼rð1þ aÞkr
h i
rbi for the 1=pir ¼ airbi þ at=TC problem
and
Wir ¼
Pn
k¼rð2k n 1Þð1þ aÞkr
h i
rbi for the 1=pir ¼ airbiþ
at=TADC problem.
4. Several ﬂowshop problems
The ﬂowshop problems consists of scheduling n jobs J1, J2, . . . , Jn
on m machines M1,M2, . . . ,Mm. Job Ji consists of m operations
(Oi1,Oi2, . . . ,Oim). Operation Oij has to be processed on machine Mj
(j = 1,2, . . . ,m). Operation Oi,j+1 can start its processing only after
Oij has been completed. In addition, all jobs are processed in the
same order on all machines, i.e., it is a permutation schedule. All
jobs are non-preemptive. The machine can handle at most one
job at a time and cannot stand idle until the last job assigned to
it has ﬁnished processing. Let pijr be the actual processing time of
job Ji (i = 1,2, . . . ,n) on machine Mj (j = 1,2, . . . ,m) if it is scheduled
in position r in a sequence. As stated in Sections 3.1 and 3.2, the fol-
lowing model is considered,
pijr ¼ aijrb þ at; ð8Þ
where aij is the original processing time of Oij, t is the starting time
of Oij, b 6 0 is a learning index, and aP 0 is a common deterioration
rate.
For a given schedule P, let Cij = Cij(P) denote the completion
time of operation Oij,Ci = Cim(P) denote the completion time of
job Ji. Then, the deﬁnition of machine dominance is introduced.
Following Nouweland, Krabbenborg, and Potters (1992) and Yang
and Chern (1995), machine Mr is dominated by Mk (deno-
teMr  Mk) iff max{airji = 1,2, . . . ,n} 6min{aikji = 1,2, . . . ,n}. Based
upon the deﬁnition of machine dominance, the special case of
m-machine ﬂowshop problem with dominant machines (M1  
M2   . . .  Mm) is considered in the following.
4.1. The Fm/pijr = aijr
b + at, M1  M2       Mm/{Cmax, TC}
problems
First, we consider the makespan case, for a given schedule
P = [J1, J2, . . . , Jn]. Since M1  M2   . . .   Mm, operation Oi+1,j can
start its processing immediately after Oij for each iP 1 and jP 1.
We have
C1 ¼ ð1þ aÞm1a11 þ ð1þ aÞm2a12 þ    þ ð1þ aÞa1;m1 þ a1m
¼
Xm
k¼1
ð1þ aÞmka1k
C2 ¼ a2m2b þ ð1þ aÞC1;
C3 ¼ a3m3b þ ð1þ aÞC2 ¼ a3m3b þ a2m2bð1þ aÞ þ ð1þ aÞ2C1; . . . ;
Ci ¼ aimib þ ð1þ aÞCi1 ¼ aimib þ ai1;mði 1Þbð1þ aÞ
þ ai2;mði 2Þbð1þ aÞ2 þ    þ a2;m2bð1þ aÞi2
þ ð1þ aÞi1C1; . . . ; ð9Þ
Cn ¼ anmnb þ ð1þ aÞCn1 ¼ anmnb þ an1;mðn 1Þbð1þ aÞ
þ an2;mðn 2Þbð1þ aÞ2 þ    þ a2;m2bð1þ aÞn2
þ ð1þ aÞn1C1: ð10Þ
The makespan of the problem is obtained by Eq. (10) and it can be
viewed as the scalar product of two vectors (except the last term
(1 + a)C1), the wk = (1 + a)nkkb and akm vectors respectively
(k = 2, . . . ,n). Since the elements of the wk vector are already sorted
in non-increasing order, the elements of the akm vector should be
sorted in non-decreasing order. Based on the above analysis, for
the Fm/pijr = aijrb + at, M1  M2   . . .  Mm/Cmax problem, there
exists an optimal solution that satisﬁes the following condition:
the sequence of all jobs except the ﬁrst processed job is the smallest
D.-L. Yang, W.-H. Kuo / Computers & Industrial Engineering 58 (2010) 25–28 27
Journal of the Operational Research Society (2010), 1 --5 © 2010 Operational Research Society Ltd. All rights reserved. 0160-5682/10
www.palgrave-journals.com/jors/
A note on due-date assignment and single-machine
scheduling with deteriorating jobs and learning effects
W-H Kuo and D-L Yang∗
National Formosa University, Yun-Lin, Taiwan, ROC
The concepts of deteriorating jobs and learning effects have been individually studied in many scheduling
problems. This note considers a single-machine scheduling problem with deteriorating jobs and learning
effects. All of the jobs have a common (but unknown) due date. The objective is to minimize the sum of
the weighted earliness, tardiness and due-date penalties. An O(n3) algorithm is proposed to optimally solve
the problem with deteriorating jobs and job-dependent learning effect. Besides, an O(n log n) algorithm is
provided to solve the problem with deteriorating jobs and job-independent learning effect.
Journal of the Operational Research Society advance online publication, 6 January 2010
doi:10.1057/jors.2009.155
Keywords: scheduling; single-machine; deteriorating jobs; learning effects
Introduction
Scheduling problems with deteriorating jobs have received
increasing attention in recent years. In such scheduling prob-
lems, the actual processing time of a job is modelled as an
increasing function of its starting time due to deterioration
effects. Kunnathur and Gupta (1990) and Mosheiov (1995)
presented several real-life situations where deteriorating jobs
might occur such as steel production, resource allocation, fire
fighting, maintenance or cleaning, etc, in which any delay
in processing a job may result in an increasing effort to
accomplish the job. For the single-machine scheduling prob-
lems, Browne and Yechiali (1990) studied the problem with
a deterioration model in which the actual processing time of
job i is pi = ai + i t , where ai , i and t are the original
processing time, deterioration rate and starting time of job i ,
respectively. They showed that sequencing the jobs in non-
decreasing order of ai/i minimizes the makespan. Mosheiov
(1991) introduced the above model into the total comple-
tion time minimization scheduling problem. He did not find
the optimal sequence exists for this problem with general
original processing times, but showed that an optimal one
(V-shaped schedule) exists if the original processing times of
all jobs are equal (ie pi =a+i t). Bachman and Janiak (2000)
showed that the maximum lateness minimization problem
with the linear deterioration model (pi =ai +i t) is NP-hard.
Bachman et al (2002) also showed that the total weighted
completion time minimization problem with the same deteri-
oration model (pi = ai + i t) is NP-hard. Mosheiov (1994)
∗Correspondence: DL. Yang, Department of Information Management,
National Formosa University, 64, Wen-Hua Road, Hu-Wei, Yun-Lin,
Taiwan 632, ROC
E-mail: dlyang@nfu.edu.tw
incorporated a simple model (pi = i t) and showed that the
problems of minimizing such objectives as the makespan,
total completion time, total weighted completion time, total
lateness, number of tardy jobs, maximum lateness, and
maximum tardiness are all polynomially solvable. Mosheiov
(1996) further considered another simple linear deterioration
model (pi = ai + t), he showed that the problem to mini-
mize the total weighted completion timewith weights propor-
tional to the original processing times is also polynomially
solvable. For research results on other scheduling problems
considering deterioration effects and under different machine
environments, the reader is referred to the review papers of
Alidaee and Womer (1999) and Cheng et al (2004a).
On the other hand, there is a growing interest to study
scheduling problems with a learning effect in the literature.
Biskup (1999) was the first to analyse a single-machine
scheduling problem with a learning model in which the
actual processing time of job i is pir =airb, if it is scheduled
in position r in a sequence, where ai and b are the orig-
inal processing time of job i and a common learning effect
of jobs, respectively. He showed that the single-machine
scheduling problem with a learning effect still remain poly-
nomially solvable if the objective is to minimize the deviation
from a common due date or to minimize the total comple-
tion time. Mosheiov (2001) followed Biskup’s (1999) model
and showed that the single-machine makespan scheduling
problem remains polynomial solvable. He also gave some
counterexamples to show that the optimal properties for
the corresponding classical scheduling problems no longer
hold. For example, the earliest due-date rule is not optimal
for minimizing the maximum lateness, and the weighted
shortest processing time rule is not optimal for minimizing
the weighted flow time. Mosheiov and Sidney (2003) further
W-H Kuo and D-L Yang—A note on due-date assignment and single-machine scheduling 3
temperature required for rolling. Among them, reheating time
of the ingot depends on its waiting time and it can be viewed
as the deterioration effect, which is described in the second
term of Equation (1). On the other hand, the learning effect,
which is described in the first term of Equation (1), depends
on the job position and its original processing time. Moreover,
Cheng et al (2004b) mentioned that the model of pi =ai +t
is a very realistic setting, particularly in the case of scheduling
with deteriorating machine, when all processing times are
increased by a common factor caused by the machine.
The classical due-date assignment problem is introduced
by Panwalkar et al (1982). They considered a single-machine
scheduling. All jobs have a common due date that has to be
determined. An early (tardy) job is penalized according to
its earliness (tardiness) value. An additional cost factor refers
to the due date: a larger (later) common due date clearly
provides more production flexibility to the producer/supplier,
but reduces his competitiveness. Thus, a later due date incurs
a higher cost. The goal is to find the job schedule and the due
date that minimize a linear combination of all three (earliness,
tardiness and due date) cost factors. This penalty is consistent
with the just-in-time concept that discourages tardiness as well
as earliness. Panwalkar et al (1982) introduced an efficient
polynomial-time solution for the problem. A recent survey
on due-date assignment problems could be found in Gordon
et al (2002).
Optimal solution procedure
In this section, we studied a scheduling problem simultaneous
with learning and deterioration effects. For convenience, some
notations are introduced in the following. For a given schedule
q , let Ci = Ci (q) denote the completion time of job i . Let d
denote a common due date and Ti = Ti (q) and Ei = Ei (q)
denote the tardiness of job i and the earliness of job i , respec-
tively, where Ti =max{Ci −d, 0}, Ei =max{d−Ci , 0}. We will
consider the minimization of the following objective function:
ETCP =∑ni=1(Ei + Ti + d) where ,  and  are the
unit earliness, tardiness, and due-date penalties, respectively.
Thus, using the three-field notation introduced by Graham
et al (1979), the corresponding scheduling problem is denoted
by 1/pir = airbi + t/ETCP.
The 1/pir = airbi + t/ETCP scheduling problem
The goal of the unrestricted common due-date problem is to
minimize the sum of the weighted earliness, tardiness, and
due-date penalties. First, an unrestricted common due date
d is needed be determined. If there are no deterioration and
learning effects (ie = 0, bi = 0, i = 1, . . . , n), the 1/pir =
air
bi +t/ETCP problem becomes the 1/pir = ai/∑(Ei +
Ti + d) problem. Panwalkar et al (1982) provided some
useful results of the 1/pir =ai/∑(Ei + Ti +d) problem
in Theorem 1. Let J[i] denote the job occupying the i position
in the sequence.
Theorem 1 (Panwalkar et al, 1982) For the 1/pir =
ai/
∑
(Ei + Ti + d) problem,
(1) it is optimal to assign the due date at the completion time
of the kth job, where k is the smallest integer greater
than or equal to (n− n)/(+ ).
(2) the optimal schedule is V-shaped, that is, early jobs
are arranged in non-increasing order of their processing
times and tardy jobs are arranged in non-decreasing
order of their processing times.
(3) the positional weight of a job when scheduled in position
i in the sequence is given by qi =min{(i −1)+n, (n−
i + 1)} and the total cost
ETCP =
n∑
i=1
(E[i]+T[i]+d)=
n∑
i=1
qi p[i]i=
n∑
i=1
qi a[i].
The following properties of an optimal solution for the
original due-date assignment problem, which is proved by
Panwalkar et al (1982), continue to hold when the deteri-
orating and learning effects are considered simultaneously.
First, it is clear that an optimal schedule starts at time zero
and there is no idle time between consecutive jobs. In addi-
tion, there exists an optimal schedule in which the due date d
coincides with a job completion time C[k] where the index k
is the same as the result obtained by Panwalkar et al (1982).
Let p[i]i denote the actual processing time of job occupying
in the iposition in the sequence. Then the actual processing
time of jobs can be expressed as follows:
p[1]1 = a[1]1b[1] + t[1] = a[1]1b[1] +  · 0 = a[1]1b[1] ;
t[2] = t[1] + p[1]1 = 0 + a[1]1b[1] = a[1]1b[1] ;
p[2]2 = a[2]2b[2] + t[2] = a[1]1b[1] + a[2]2b[2] ;
t[3] = t[2] + p[2]2 = a[1]1b[1] + a[1]1b[1] + a[2]2b[2]
= (1 + )a[1]1b[1] + a[2]2b[2] ;
p[3]3 = a[3]3b[3]+t[3] = (1+)a[1]1b[1]+a[2]2b[2]+a[3]3b[3] .
Generally, the actual processing time for the job J[i] (i =
1, . . . , n) is
p[i]i = (1 + )i−2a[1]1b[1] + (1 + )i−3a[2]2b[2]
+ · · · + (1 + )a[i−2](i − 2)b[i−2] + a[i−1]
× (i − 1)b[i−1] + a[i]i b[i]
=
i∑
j=1
yi j a[ j] j b[ j] (2)
where yi j = (1 + )i− j−1 for j = 1, . . . , i − 1 and yii = 1.
Because the positional weight of a job is independent of its
processing time, the ETCP of the 1/pir = airbi + t/ETCP
W-H Kuo and D-L Yang—A note on due-date assignment and single-machine scheduling 5
Bachman A and Janiak A (2000). Minimizing maximum lateness
under linear deterioration. Eur J Opl Res 126: 557–566.
Bachman A, Janiak A and Kovalyov MY (2002). Minimizing the total
weighted completion time of deteriorating jobs. Inform Process
Lett 81: 8184.
Biskup D (1999). Single-machine scheduling with learning
considerations. Eur J Opl Res 115: 173–178.
Biskup D (2008). A state-of-the-art review on scheduling with learning
effects. Eur J Opl Res 188: 315–329.
Browne S and Yechiali U (1990). Scheduling deteriorating jobs on a
single processor. Opns Res 38: 495–498.
Cheng TCE, Ding Q and Lin BMT (2004a). A concise survey of
scheduling with time-dependent processing times. Eur J Opl Res
152: 1–13.
Cheng TCE, Kang L and Ng CT (2004b). Due-date assignment and
single machine scheduling with deteriorating jobs. Opl Res Soc 55:
198–203.
Cheng TCE, Wu CC and Lee WC (2008). Some‘ scheduling problems
with deteriorating jobs and learning effects. Comput Ind Eng 54:
972–982.
Gordon V, Proth JM and Chu C (2002). A survey of the state-of-the-
art of common due date assignment and scheduling research. Eur
J Opl Res 135: 1–25.
Graham RL, Lawler EL, Lenstra JK and Rinnooy Kan AHG (1979).
Optimization and approximation in deterministic sequencing and
scheduling: A survey. Ann Discrete Math 5: 287–326.
Kunnathur AS and Gupta SK (1990). Minimizing the makespan with
late start penalties added to processing times in a single facility
scheduling problem. Eur J Opl Res 47: 56–64.
Kuo WH and Yang DL (2006a). Single-machine group scheduling
with a time-dependent learning effect. Comput Opns Res 33:
2099–2112.
Kuo WH and Yang DL (2006b). Minimizing the total completion time
in a single-machine scheduling problem with a time-dependent
learning effect. Eur J Opl Res 174: 1184–1190.
Lee WC (2004). A note on deteriorating jobs and learning in single-
machine scheduling problems. Int J Bus Econ 3: 83–89.
Mosheiov G (1991). V-shaped policies for scheduling deteriorating
jobs. Opns Res 39: 979–991.
Mosheiov G (1994). Scheduling jobs under simple linear deterioration.
Comput Opns Res 21: 653–659.
Mosheiov G (1995). Scheduling jobs with step-deterioration:
Minimizing makespan on a single- and multi-machine. Comput
Indust Eng 28: 869–879.
Mosheiov G (1996).-shaped policies for schedule deteriorating jobs.
Opl Res Soc 47: 1184–1191.
Mosheiov G (2001). Scheduling problems with a learning effect. Eur
J Opl Res 132: 687–693.
Mosheiov G and Sidney JB (2003). Scheduling with general job-
dependent learning curves. Eur J Opl Res 147: 665–670.
Panwalkar SS, Smith ML and Seidmann A (1982). Common due
date assignment to minimize total penalty for the one machine
scheduling problem. Opns Res 30: 391–399.
Wang JB (2007). Single-machine scheduling problems with the effects
of learning and deterioration. Omega 35: 397–402.
Wang JB and Cheng TCE (2007a). Scheduling problems with the
effects of deterioration and learning. Asia Pac J Opl Res 24:
245–261.
Wang X and Cheng TCE (2007b). Single-machine scheduling with
deteriorating jobs and learning effects to minimize the makespan.
Eur J Opl Res 178: 57–70.
Received December 2008;
accepted September 2009 after one revision
97年度專題研究計畫研究成果彙整表 
計畫主持人：楊達立 計畫編號：97-2221-E-150-056-MY2 
計畫名稱：同時具有退化與學習效應之單機排程問題研究 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 3 3 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
 
