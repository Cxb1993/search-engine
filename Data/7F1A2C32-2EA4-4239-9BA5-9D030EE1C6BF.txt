 2
application-level multicast. Due to the open 
and decentralized nature, a number of new 
security issues emerge. 
We will study a broad spectrum of new 
P2P security challenges from three basic 
primitive: (1) node identification: including 
authentication, access control, Sybil attack. 
(2) secure routing: including routing table 
maintenance, secure message forwarding, 
and eclipse attack. (3) secure data: including 
secure storage, self-certified data, 
information dispersal. Besides, our research 
will encompass the provision of anonymity 
and deniability. Our project aims to propose 
a diversity of secure protocols achieving a 
diversity of security requirements. 
Furthermore, to capitalize the trend of 
P2P research around the world, we will 
intensively study the ‘trust’ issue. Applying 
economics and game theory, the trust and 
incentive have been in the spotlight of P2P 
research since no system would work 
efficiently and securely without autonomous 
incentive and appropriate reputation 
evaluation. Our project will propose 
theoretical incentive-based schemes and also 
practical trust/reputation mechanisms. 
In this project, we propoae a flexible 
scheme for providing anonymity in 
structured P2P networks. We provide sender 
anonymity for public service connection and 
file sharing. No modification to the 
underlying P2P networks is needed. Our 
system achieves co-existence of anonymous 
file sharing and normal structured P2P 
communication. We also proposed three 
routing methods with various performance 
and degrees of anonymity for different 
purposes. Analytic analysis shows that our 
system outperforms existing systems. 
In the late stage of the project, we also 
design a sector-based routing model over 
structured P2P networks. According to a 
predefined system parameter, we divide the 
key space of structured P2P network into 
several sectors. Each sector contains at most 
one super node and other members in the 
sector are called local nodes. The results of 
Simulation show that the routing model dose 
not only reduces the overhead of 
maintenance overhead when nodes 
frequently join or leave in the structured 
peer-to-peer network, but also improve the 
performance for lookup. In addition, we also 
propose an approach for accurately 
recognizing P2P applications running on 
monitored hosts based on signaling behavior, 
which is regulated by the underlying P2P 
protocol; therefore, each application 
possesses a distinguishing characteristic. We 
consider that the signaling behavior of each 
P2P application can serve as a unique 
signature for application identification. Our 
approach is particularly useful for three 
reasons: 1) it does not need to access the 
packet payload; 2) it recognizes applications 
based purely on their signaling behavior; and 
3) it can identify particular P2P applications. 
The performance evaluation shows that 92% 
of a real-life traffic trace can be correctly 
recognized within a 5-minute monitoring 
period. 
 
Keywords: anonymity, peer-to-peer 
networks, privacy, anonymous networks, 
network security, structured peer-to-peer 
network, 
 
二、緣由與目的 
 
根據CacheLogic™ 在2005年所做的調
查，同儕網路的流量佔網際網路總流量60%
以上，而且持續提升中，在所有同儕網路
的流量中，以檔案分享的 eDonkey 和 
BitTorrent 為最大宗，而且 eDonkey所佔
比例已經超過五成，同樣持續提升中。除
了檔案分享的服務，即時通訊（Instant 
Messaging）是另一項大量採用同儕網路技
術的服務，而且使用者廣布全球，MSN Live 
Messenger 在台灣的使用人數超過六百
萬，全球超過三千五百萬；VoIP的最大公
司Skype全球隨時都有超過六百萬使用者
在線上。 
同儕網路的應用在國內使用率極高，
不論是檔案分享或即時通訊，但國內對同
儕網路的研究卻遠落後國外甚多。許多知
名大學或機構都有開發大型同儕網路系統
 4
S
D
R1
R2
R3
 
Figure 4. Relay-by-neighbor 
 
0
2
4
6
8
10
12
14
0 10 20 30 40 50 60 70 80 90 100
Proportion to Request
N
um
be
r o
f H
op
s
0.5
0.6
0.7
0.8
N
um
be
r o
f H
op
s
 
Figure 5. Performance comparison 
TABLE Ⅰ 
COMPARE WITH ANONYMOUS WEB BROWSING 
Properties Crowds Tor Method 1 Method 2
Request m+1 4 1/2mlog(N)+1 m+1 
Transfer m+1 4 m+1 m+1 
Mixed 4 4 7.3 4 
 
在計畫的第二年中，我們提出了一個
應用於結構化同儕網路之區段式路由模
型。根據一個預先定義的參數，我們將結
構化同儕網路的鍵值空間分割成許多的區
段。在每個區段裡最多擁有一個超級節
點，而這區段的其他成員都被稱作局部節
點。 
表2是我們提出之區段式路由演算法
(SBRN-SP, SBRN-LP) 與 chord 之分析比
較。Figure 7~Figure 11是針對各種不同的參
數組合所進行模擬的結果。由模擬的結果
可看出，提出的這個路由模型不但減少當
節點不斷的加入或離開時所需要的維護負
擔，而且改善了查詢時的效能。 
 
Figure 6. A lookup example in SB-Chord. 
 
Table 2: System analysis 
 
 
 
Figure 7. Average lookup path length. 
 
 
Figure 8. Average number of messages required to initialize 
a new node's finger table. 
 
 6
z Jiunn-Jye Lee, Hann-Huei Chiou, 
Yu-Sheng Yang, Yu-Cheng Su, and 
Chin-Laung Lei, “A Sector-Based 
Routing Model over Structured 
Peer-to-PeerNetworks,” International 
Workshop on Wireless Technologies for 
Smart Homes, September 10 – 12,, 2008, 
Ilan, Taiwan. 
z Chen-Chi Wu, Kuan-Ta Chen, Yu-Chun 
Chang, and Chin-Laung Lei, “Detecting 
Peer-to-Peer Activity by Signaling 
Packets,” ACM SIGCOMM 2008 
(poster),  pp. 487-488, August 17-22, 
2008, Seattle, USA. 
z Li-Yuan Lee, Jiunn-Jye Lee, and 
Chin-Laung Lei, “A Universal 
Anonymous System for Structured 
Peer-to-Peer Networks,” IEEE 
TENCON 2007, October 30 – 
November 2, Taipei, Taiwan.  
z Chun-Ying Huang, and Chin-Laung Lei, 
“Bounding Peer-to-Peer Upload Traffic 
in Client Networks,” 37th Annual 
IEEE/IFIP International Conference on 
Dependable Systems and Networks 
(DSN-2007), pp. 759-769, 2007, 
Edinburgh, UK. 
z Ren-Chiun Wang, Wen-Shenq Juang 
and Chin-Laung Lei, “User 
Authentication Scheme with 
Privacy-preservation for Multi-server 
Environment,” IEEE Communications 
Letters, Vol. 13, No. 2, pp. 157-159, 
2009. (SCI, 0.869, 21/66, 
Telecommunications) 
 
這些結果將可作為相關研究之重要參
考依據。同儕網路不但是正在發展中的技
術，也是一般普羅大眾廣泛使用的科技，
因此除了本計畫所提及在技術面上的安全
問題，也衍生社會面的安全問題，最明顯
的例子就是非法或限制級資料傳輸，以檔
案分享為例，全世界65%以上的同儕網路流
量是影音資料，其中多數可能是盜版的電
影或限制級檔案，這類資料的流竄危害商
業利益和社會風俗。但由於許多同儕網路
並無核心的控管組織或單位，對企業或政
府而言要遏止這類資料的傳輸難上加難，
如何利用技術來解決這類問題亦是個研究
方向。 
此外，建構出一個極安全、可靠且分
散式的同儕網路，是否反成為網路安全的
新漏洞，尤其是具備匿名性的同儕網路，
攻擊者的惡意行為是否可以藉由同儕網路
破壞主機系統，或是病毒、蠕蟲、後門程
式等等藉著同儕網路蔓延、散佈，這都是
額外需考慮的安全問題。 
 
五、參考文獻 
 
1. A. Rowstron and P. Druschel. “Pastry: 
Scalable, Distributed Object location and 
Routing for Large-Scale Peer-to-Peer 
Systems.” In Proceedings of the IFIP/ACM 
International Conference on Distributed 
Systems Platforms, pp.329-350, Heidelberg, 
Germany, November 12-16, 2001. 
2. A. Singh and L. Liu. “Agyaat: Providing 
Mutually Anonymous Services over 
Structured P2P Networks.” Technical Report 
GIT-CERCS-04-12, Georgia Inst. Of Tech. 
CERCS, 2004. 
3. A. Mislove, G. Oberoi, A. Post, C. Reis, P. 
Druschel and D. S. Wallach. “AP3: 
Cooperative, decentralized anonymous 
communication.” In Proceedings of the 11th 
workshop on ACM SIGOPS European 
workshop: beyond the PC, pp.30-35, Leuven, 
Belgium, September 19-22, 2004. 
4. A. Pfitzmann, M. Köhntopp. “Anonymity, 
Unobservability, and Pseudonymity - A 
Proposal for Terminology.” In Proceedings 
of the International Workshop on Design 
Issues in Anonymity and Unobservability, 
pp.1-9, Berkeley, CA, July 25-26, 2000. 
5. C. O'Donnell and V. Vaikuntanathan. 
“Information Leak in the Chord Lookup 
Protocol.” In Proceedings of the 4th 
International Conference on Peer-to-Peer 
Computing (P2P’04), pp.28-35, Zurich, 
Switzerland, August 15-17, 2004. 
6. C. Díaz, S. Seys, J. Claessens, B. Preneel. 
“Towards Measuring Anonymity.” In 
Proceedings of the Second International 
Workshop on Privacy Enhancing 
Technologies (PET’02), pp.54-68, San 
Francisco, CA, April 14-15, 2002. 
7. D. Chaum. “Untraceable Electronic Mail, 
Return Addresses, and Digital Pseudonyms.” 
 8
25. The Anonymizer. <http://anonymizer.com/>. 
26. U. M¨oller, L. Cottrell, P. Palfrader, and L. 
Sassaman. Mixmaster Protocol — Version 2. 
Draft, July 2003. <http://www.abditum.com/ 
mixmaster-spec.txt>. 
 
Table 1: Notations used in SBRM.
Name Description
K Key space of the system, K = 2m
N Number of peers, where 2n ≤ N < 2n+1
P Average number of peers in a sector, P = 2p
S Number of sectors. S = 2
n
P
= 2s where s = n− p
R Key range of a sector. R = K
S
= 2r, where r = m− s
Si The i-th sector Si = [i ∗R, (i+ 1) ∗R), i = 0, 1, ..., Q− 1
SPi Super peer of sector i
LPi,j The j-th local peer node in sector i
value of the time threshold is hard to decide.
By integrating the spirit of L-Chord and FS-Chord, we pro-
posed a sector-based routing model (SBRM)and the details
of SBRM is introduced in the following paragraph.
3. THE SECTOR-BASED ROUTING MODEL
Table 1 lists the notations used in this paper. Nodes in
SBRM are classified into two categories: super peers (SPs)
and local peers (LPs). According to a predefined system
parameter P , the key spaceK is divided into S sectors. Each
sector contains exactly one super peer and other members
in the sector are local peers. Super peers form a structured
peer-to-peer network. For simplicity, we use Chord as the
structured network and abbreviate SBRM over Chord as
SB-Chord.
A super peer SPi serves as a query proxy of sector i. Re-
quests sent to/from any LPi,j will be handled by SPi. SPi
holds two keys: a sector key ski = (i + 1) ∗ R − 1 that is
used for Chord’s lookup between super peers and a peer key
pki used as the identity in the whole peer-to-peer network.
SPi at the same time maintains two tables: a finger table
for Chord’s lookup and an LP table recording the key value
and IP address of LPs in sector i. On the other hand, a local
peer LPi,j only keeps her own peer key pki,j and a fixed size
table recording the information of her SP, successor node,
predecessor node, and SPi’s successor SP.
3.1 Lookup
When an LP, say LPa,b, looks for an item with a key value
k, she first examines key values in his own table. If one of
LPa,b and LPa,b+1 holds related records of k, the request
can be satisfied within one step. Otherwise, LPa,b sends the
request to his super peer SPa. By invoking Chord’s lookup
procedure, SPa forwards the request to a super peer, say
SPa′ , who should be responsible for k. On receiving the
request, SPa′ checks her LP table and makes a decision. If
Ka′,i−1 ≤ k < Ka′,i, SPa′ forwards the request to LPa′,i. If
none of her local peers has a peer key value larger than k,
LPa′ forwards the request to LPa′+1 and the process repeats
until the destination node is found.
A lookup example is shown in Figure 1. Assume a local
peer L0,1 looks for a resource with key value k, she will
checks if herself or S0 manages k. Let pk6,1 < k ≤ pk6,2 and
lookups in a local sector
lookups between super peers 0
R
2
R
3R
4R
5
R
6
R
7
R
S0
S1
S3
S5
S6
L0,1
L0,2
L6,1
L6,2
Figure 1: A lookup example in SB-Chord.
the request cannot be satisfied locally, then L0,1 forwards
the request to her SP S0. According to Chord’s lookup
mechanism, the request will be relayed through S3, S5, and
finally reaches S6 who is the first SP that has a sector key
sk6 larger than k. On receiving the request, S6 examines
her LP table and find the responsible node L6,2, then the
destination is found.
3.2 Join
Before going into details, we assume that a new member M
knows one existing bootstrap node B acting as a temporary
relay agent and has already retrieved an unoccupied key
value k as her peer key. To join the network, M issues a
join request containing her peer key to the bootstrap node
B. B relays such a request to the network to find out the
super peer that should be responsible for k. By the lookup
mechanism mentioned above, the request will be routed to
a super peer, say SPa, that should take over this request. If
k does not within the range of the sector Sa (i.e., the sector
M belongs to is empty), SPa will promote M to the super
peer of the empty sector. Otherwise, SPa will help update
M ’s table, inform M ’s predecessor and successor, and then
insert M into her LP table. After this registration process
is done, M ’s successor will hand over related data records
that should be maintained by M now to M .
3.3 Leave
When a member leaves the network, peers in a structured
peer-to-peer network should update corresponding data en-
tries to keep information consistency. Roughly speaking,
node departure may be classified into two categories: initia-
tive leave and node failure.
In SBRM, if an LP initiatively leaves the system, all she has
to do is to transfer relate data/key pairs to her successor and
01
2
3
4
5
6
7
8
9
10
1000 5000 10000 20000 50000
b
b
b
b
b
r
r
r
r
r
l
l
l
l
l
u
u
u
u
u
q
q
q
q
q
Number of peers
A
v
er
a
g
e
lo
o
k
u
p
p
a
th
le
n
g
th
(h
o
p
s)
Chord
SB-Chord, p = 2
SB-Chord, p = 3
SB-Chord, p = 4
SB-Chord, p = 5
b
r
l
u
q
Figure 2: Average lookup path length.
0
25
50
75
100
125
150
175
200
225
250
275
1000 5000 10000 20000 50000
b
b
b
b
b
r
r
r
r
r
l
l
l
l
l
u
u
u
u
u
q
q
q
q
q
Number of peers
N
u
m
b
er
o
f
m
es
sa
g
es
Chord
SB-Chord, p = 2
SB-Chord, p = 3
SB-Chord, p = 4
SB-Chord, p = 5
b
r
l
u
q
Figure 3: Average number of messages required to
initialize a new node’s finger table.
Figure 2 shows the average lookup path length of SB-Chord
and Chord. The length of lookup paths are mainly decided
by the size of the Chord ring. With some viewpoints, Chord
can be treated as a special case of SB-Chord with the system
parameter p = 0. Moreover, in SB-Chord a larger system
parameter P = 2p implies a fewer number of sectors, and
thus a smaller Chord ring. Therefore a lookup message in
SB-Chord takes fewer hops to reach the destination than
that in Chord.
5.2 Join
The design philosophy of SBRM is to reduce the amount
of messages required when a node joins or leaves the sys-
tem. For each system size and system parameter, the av-
erage number of messages required for a new member to
initialize her finger table is depicted in Figure 3. Since in
general a DHT evenly distributes key values, with high prob-
ability each sector already has an SP in our simulation en-
vironment. In other words, when a new member joins, the
chance of becoming an SP is rare, which implies a small
table to fill in most cases.
Figure 4 shows the average number of nodes that have to
update their finger table entries after a new node joins. The
reason SB-Chord outperforms Chord is obvious since most
0
1
2
3
4
5
6
7
8
9
10
11
12
1000 5000 10000 20000 50000
b
b
b
b
b
r
r
r r
r
l l l l lu u u u uq q q q q
Number of peers
N
u
m
b
er
o
f
n
o
d
es
Chord
SB-Chord, p = 2
SB-Chord, p = 3
SB-Chord, p = 4
SB-Chord, p = 5
b
r
l
u
q
Figure 4: Average number of nodes that have to
update finger table entries after a new node joins.
0
25
50
75
100
125
150
175
200
225
250
1000 5000 10000 20000 50000
b
b
b
b
b
r
r
r r
r
l l l l lu u u u uq q q q q
Number of peers
N
u
m
b
er
o
f
m
es
sa
g
es
Chord
SB-Chord, p = 2
SB-Chord, p = 3
SB-Chord, p = 4
SB-Chord, p = 5
b
r
l
u
q
Figure 5: Average number of messages required to
update finger table entries after a new node joins.
of the joining nodes in SB-Chord will become LPs and there
are only three nodes have to modify their tables.
Difference between SB-Chord and Chord in Figure 4 may
look immaterial. But if we take the total cost to update
the information of the whole system into consideration, it
cannot be negligible anymore. Figure 5 illustrates such a
performance gap. To accurately count the number of mes-
sages in Chord, we updates the system immediately after a
join take place, instead of using the stabilization mechanism.
It is also shown that the cost of the join operation is almost
irrelevant with neither the system size nor the system pa-
rameter P and provides a promising solution of the churn
problem.
5.3 Relay Overhead of Super Peers
The main drawback of SBRM is that the task of relaying
requests passing through a sector may overburden a super
peer. To exploit this situation, we perform 100000 lookups
for each system setting and calculate the average number
of processed message on an SP, an LP, and a Chord node.
The result is shown in Figure 6. In a smaller system, each
node handles more request on average, so the curve descends
Peer-to-Peer Application Recognition Based on
Signaling Activity
Chen-Chi Wu†, Kuan-Ta Chen‡, Yu-Chun Chang†, and Chin-Laung Lei†
†Department of Electrical Engineering, National Taiwan University
‡Institute of Information Science, Academia Sinica
{bipa,congo}@fractal.ee.ntu.edu.tw, ktchen@iis.sinica.edu.tw, lei@cc.ee.ntu.edu.tw
Abstract—Because of the enormous growth in the number of
peer-to-peer (P2P) applications in recent years, P2P traffic now
constitutes a substantial proportion of Internet traffic. The ability
to accurately identify different P2P applications from the network
traffic is essential for managing a number of network traffic
issues, such as service differentiation and capacity planning. How-
ever, modern P2P applications often use proprietary protocols,
dynamic port numbers, and packet encryptions, which make
traditional identification approaches like port-based or signature-
based identification less effective.
In this paper, we propose an approach for accurately recog-
nizing P2P applications running on monitored hosts based on
signaling behavior, which is regulated by the underlying P2P
protocol; therefore, each application possesses a distinguishing
characteristic. We consider that the signaling behavior of each
P2P application can serve as a unique signature for application
identification. Our approach is particularly useful for three
reasons: 1) it does not need to access the packet payload;
2) it recognizes applications based purely on their signaling
behavior; and 3) it can identify particular P2P applications. The
performance evaluation shows that 92% of a real-life traffic trace
can be correctly recognized within a 5-minute monitoring period.
Index Terms—Application identification, BitTorrent, Skype,
Support vector machine, Traffic classification
I. INTRODUCTION
Peer-to-peer (P2P) traffic now constitutes a substantial pro-
portion of Internet traffic. The ability to identify different P2P
applications from the network traffic is important for network
management functions, such as service differentiation, capac-
ity planning, and QoS provisioning. For example, network
administrators limit or block P2P traffic that occupies a high
amount of bandwidth to ensure that other applications have
sufficient bandwidth. Another issue is that most content shared
in P2P networks infringes copyright laws.
Managing P2P traffic is a major challenge for network
administrators because P2P applications tend to use dynamic
port numbers and proprietary protocols. In this paper, we
propose a model that can recognize particular P2P appli-
cations running on the monitored host without examining
packet payloads. The key to our approach is recognizing the
signaling behavior of a P2P application. Although a P2P
application can easily change its port number, payload, and
even message format, the signaling patterns between peers
This work was supported in part by Taiwan Information Security Center
(TWISC), National Science Council under the grants NSC97-2219-E-001-001
and NSC97-2219-E-011-006. It was also supported in part by the National
Science Council of Taiwan under the grant NSC96-2628-E-001-027-MY3.
are more fundamental and are therefore unlikely to change.
For example, a BitTorrent client needs to regularly exchange
the file bitmaps containing the block status of its files with
neighboring peers. This signaling behavior is essential for
the maintenance of the BitTorrent network, so changing it
would lead to state inconsistency and software incompatibility
problems. Hence, it would be difficult for a P2P application
to change its signaling behavior without affecting its normal
operations. Moreover, the signaling behavior is regulated by
the underlying P2P protocol, so each application possesses
distinctive features. We consider that the signaling behavior
of each P2P application can serve as a unique signature for
application identification.
The contribution of our approach is threefold:
• It recognizes P2P applications based on their unique
signaling behavior, rather than by examining the packet
payload. Since this behavior is relatively difficult to
change compared to the port numbers or packet format,
it is unlikely that an application will be able to evade
recognition.
• It only needs to examine traffic associated with the
monitored host; in other words, a global view of the
network is not necessary.
• It can recognize particular applications running on the
monitored host, so it does not treat all P2P traffic in the
same way.
The remainder of the paper is organized as follows. In
Section II, we review related works. We describe the data
collection methodology and summarize our traces in Sec-
tion III. In Section IV, we discuss the fundamental concepts
behind our approach. We present a detailed description of our
scheme in Section V and evaluate the scheme’s performance
in Section VI. Then, in Section VII, we summarize our
conclusions.
II. RELATED WORK
In recent years, a number of works have addressed the issue
of P2P traffic identification. Early approaches relied on the
port numbers used by applications [10], but the estimates are
now regarded as misleading because P2P applications may use
dynamic ports or the default ports of other applications (e.g.,
port 80 or 443).
The application-layer approach identifies a protocol-specific
signature by examining the packet payload [2, 9]. This ap-
This full text paper was peer reviewed at the direction of IEEE Communications Society subject matter experts for publication in the IEEE ICC 2009 proceedings
978-1-4244-3435-0/09/$25.00 ©2009 IEEE
0 20 40 60 80 100 120
0
20
0
60
0
10
00
(a) BitTorrent
Elapsed time (min.)
N
um
be
r o
f h
os
ts
0 20 40 60 80 100 120
0
50
10
0
15
0
20
0
(b) eMule
Elapsed time (min.)
N
um
be
r o
f h
os
ts
0 20 40 60 80 100 120
0
5
10
15
20
25
30
(c) Skype
Elapsed time (min.)
N
um
be
r o
f h
os
ts
Old hosts
New hosts
Fig. 1. The signaling traffic statistics: the number of old hosts and new hosts contacted by the monitored hosts.
the monitored host contacts a large number of hosts initially,
but the number of hosts decreases dramatically after about 10
minutes and continues to fluctuate over time. Fig. 1(c) shows
that the Skype host contacts a dozen hosts during the login
process and contacts a near constant number of hosts after 60
minutes.
Next, we analyze the ratio of new hosts to all hosts contacted
by the monitored host. Compared to the eMule and Skype
hosts, we observe that the BitTorrent host has a high ratio
of new hosts most of the time. On the other hand, the ratio
of new hosts is only high in the early stage for eMule; and
the Skype host only has a high ratio of new hosts during the
login process. The above preliminary analysis evidences that
BitTorrent clients may continuously seek new hosts, whereas
eMule and Skype clients tend to contact old hosts.
Based on the above analysis, we show that different P2P
applications exhibit very different signaling behavior in terms
of the number of hosts and the ratio of new and old hosts.
B. Signaling Patterns
In Figure 2, we plot the signaling patterns of BitTorrent,
eMule, and Skype in a 1-hour period. We assign numeric
identifiers to hosts that have been contacted by the monitored
host based on the order in which they are observed, and use the
sign of the identifiers to denote the direction of the signaling
traffic. A positive identifier indicates a packet sent from the
monitored host to the peer host, while a negative identifier
indicates a packet sent from the peer host to the monitored
host. Each dot in Figure 2 represents a signaling packet sent
from or received by the monitored host. An intensive exchange
of signaling packets is depicted by a high distribution of dots
or even an area of solid color in this figure. In the following,
we discuss the unique characteristics of each application.
BitTorrent: The high dot density in Fig. 2(a) implies an
intensive exchange of signaling packets between the monitored
BitTorrent client and its peer hosts. Moreover, the near linear
growth of the number of peer hosts shows how a BitTorrent
client progressively discovered new hosts during the monitor-
ing period.
eMule: As shown in Fig. 2(b), the number of signaling
packets sent from and received by the eMule client is much
fewer than those of the BitTorrent client. We also observe
that the number of peer hosts increases rapidly in the first 10
minutes, but it increases slowly thereafter.
0 10 20 30 40 50 60
−
15
00
0
0
10
00
0
(a) BitTorrent
Elapsed time (min.)
H
os
t I
D
0 10 20 30 40 50 60
−
15
00
0
10
00
(b) eMule
Elapsed time (min.)
H
os
t I
D
0 10 20 30 40 50 60
−
10
0
0
50
10
0
(c) Skype
Elapsed time (min.)
H
os
t I
D
Fig. 2. The signaling activity patterns of BitTorrent, eMule, and Skype.
Skype: The sparse distribution of dots in Fig. 2(c) suggests
that most of the signaling packets belonged to probe traffic,
which is a pair of packets comprised of a single probe packet
and the corresponding reply packet [3], i.e., a packet with a
host ID X is coupled with another packet with the host ID
-X .
The above graphical comparisons show that each P2P appli-
cation possesses a number of unique signaling characteristics.
In the next section, we utilize the distinctiveness of each
application’s signaling patterns to develop a P2P application
recognition scheme.
V. THE PROPOSED SCHEME
In this section, we propose a P2P application identification
scheme, which is based on the signaling traffic associated with
the monitored host . First, we explain how we characterize the
signaling behavior and how we derive features from signaling
packet streams. We then exploit the features to design a
classifier for recognizing individual P2P applications.
This full text paper was peer reviewed at the direction of IEEE Communications Society subject matter experts for publication in the IEEE ICC 2009 proceedings
Overall BT eMule Skype Non−P2P
 
Ac
cu
ra
cy
 / 
Tr
u
e
 p
os
iti
ve
 r
a
te
0.
0
0.
2
0.
4
0.
6
0.
8
1.
0
Fig. 5. The overall accuracy and true positive rate of each category for the
traces in Set 2.
our classifier achieves over 96% accuracy in a 5-minute
monitoring period and 98% accuracy in an 8-minute period. It
achieves a true positive rate of 90% for each application with
a monitoring period longer than 6 minutes. We also observe
that the true positive rate of the non-P2P category is nearly
99%, which means our scheme seldom misidentifies a non-P2P
sample as a P2P sample. Furthermore, the false positive rate
of each category is lower than 5%. For an overall evaluation
of the traces in Set 1, we plot the ROC curves for each P2P
application, as shown in Fig. 4(b). The ROC curve of each
application depicts its performance by treating the application
as the positive class and all other applications as the negative
class. We observe that each ROC curve in Fig. 4(b) passes
through the upper left corner of the plot (i.e., the true positive
rate is close to 1 with a small false positive rate). Therefore,
these curves evidence that our proposed scheme can recognize
each application with a high true positive rate and an extremely
low false positive rate.
Next, we use the classification result of an application-layer
classifier as a reference point to evaluate the performance
of our scheme based on the traces in Set 2. Based on
the application-layer classification result, unknown flows are
excluded from the data set. We also perform 10-fold cross
validation and set the monitoring period to 5 minutes. As
shown in Fig 5, our classifier achieves 92% overall accuracy
and the true positive rate of each category is over 90%. The
above identification results for both data sets demonstrate
that our scheme can recognize P2P applications running on
monitored hosts with a high degree of accuracy.
VII. CONCLUSION AND FUTURE WORK
In this paper, we propose a scheme for recognizing P2P
applications based on the signaling behavior of the applica-
tions. Our approach is particularly useful in two respects.
First, it does not need to access the packet payload or rely
on port numbers. It only needs to analyze the signaling traffic
associated with the monitored host. Second, it can recognize
particular P2P applications running on the monitored host.
By analyzing the signaling behavior at the host and message
levels, we show that 92% of a real-life trace can be correctly
recognized in a 5-minute monitoring period.
Although the evaluation results are promising, we will
improve the following two aspects of our scheme in a future
work.
Launching multiple P2P applications on a host. When a
host launches multiple P2P applications, all signaling traffic is
combined. As a result, the proposed scheme cannot recognize
particular applications based purely on observations of all the
signaling traffic of the host. To solve this problem, we are
working on demultiplexing traffic that consists of signaling
packets generated by more than one P2P application. Based on
the port numbers used by each traffic flow, we gather flows that
use related port numbers into a group. We assume that each
group of traffic flows only contains signaling traffic generated
by a single application. With this heuristic, our scheme can
recognize individual applications by analyzing each group of
traffic flows.
Short flows. Since the monitoring period of the proposed
scheme is at least 5 minutes, we are unable to correctly detect
P2P applications with signaling traffic that is shorter than 5
minutes. For example, a user may make a phone call that lasts
less than 5 minutes and sign out immediately after finishing
the call. In this case, we cannot collect enough signaling traffic
to derive the signaling features. In our future work, we will
devise other powerful features to characterize the signaling
behavior of short P2P sessions.
REFERENCES
[1] “L7-filter Supported Protocols,” http://l7-
filter.sourceforge.net/protocols/.
[2] H. Bleul, E. P. Rathgeb, and S. Zilling, “Evaluation of an
efficient measurement concept for p2p multiprotocol traffic
analysis,” in EUROMICRO ’06: Proceedings of the 32nd EU-
ROMICRO Conference on Software Engineering and Advanced
Applications. Cavtat, Croatia: IEEE Computer Society, 2006,
pp. 414–423.
[3] D. Bonfiglio, M. Mellia, M. Meo, N. Ritacca, and D. Rossi,
“Tracking down skype traffic,” in Proceedings of IEEE INFO-
COM’08, Phoenix, AZ, USA, 2008, pp. 15–17.
[4] F. Constantinou and P. Mavrommatis, “Identifying known and
unknown peer-to-peer traffic,” in NCA ’06: Proceedings of the
Fifth IEEE International Symposium on Network Computing
and Applications, Cambridge, MA, USA, 2006, pp. 93–102.
[5] T. Karagiannis, A. Broido, M. Faloutsos, and K. claffy, “Trans-
port layer identification of p2p traffic,” in IMC ’04: Proceedings
of the 4th ACM SIGCOMM conference on Internet measure-
ment, Taormina, Sicily, Italy, 2004, pp. 121–134.
[6] T. Karagiannis, K. Papagiannaki, and M. Faloutsos, “Blinc:
multilevel traffic classification in the dark,” in Proceedings of
ACM SIGCOMM’05, Philadelphia, Pennsylvania, USA, 2005,
pp. 229–240.
[7] X. Lu, H. Duan, and X. Li, “Identification of p2p traffic based
on the content redistribution characteristic,” in ISCIT’07: Pro-
ceedings of the International Symposium on Communications
and Information Technologies, Sydney, Australia, 2007, pp.
596–601.
[8] M. Perenyi, A. G. Trang Dinh Dang, and S. Molnar, “Identifi-
cation and analysis of peer-to-peer traffic,” Journal of Commu-
nication, vol. 1, no. 7, pp. 36–46, 2006.
[9] S. Sen, O. Spatscheck, and D. Wang, “Accurate, scalable in-
network identification of p2p traffic using application signa-
tures,” in WWW ’04: Proceedings of the 13th international
conference on World Wide Web, New York, NY, USA, 2004,
pp. 512–521.
[10] S. Sen and J. Wang, “Analyzing peer-to-peer traffic across large
networks,” IEEE/ACM Transactions on Networking (TON),
vol. 12, no. 2, pp. 219–232, 2004.
This full text paper was peer reviewed at the direction of IEEE Communications Society subject matter experts for publication in the IEEE ICC 2009 proceedings
- 2 - 
1. Pairing-based Cryptography 
 Pairing Lite  
 High-Speed and High-Performance Algorithm of Pairing 
 Research on Privacy Related Technology 
 Development of Pairing-based Protocol 
 Developement of LSI Chip 
 
2. Cryptography Systems 
 Key Management, Signature and Privacy 
 Key Delivery 
 Grant-in-Aid for Scientific Research(special area research) 
 Research of Security Enhancement Technology on PKI System" 
 Secret Information Distributed Management 
 -Highspeed Decoding Processing 
 
3. Network Security 
 IDS 
 Always-on System 
 Privacy Protection of Mobile Cellular Network 
 Ad-Hoc Network 
 Countermeasure of IP Address Spoofing 
 Sender ID(address) Authentication 
 *Countermeasure of DDoS Attack 
 Modeling Depends on Simulation 
 
4. Risk of Cryptography Vulnerability 
 Challenges in identifying vulnerabilities hidden in our highly sophisticated 
information society and exploring solutions 
 Cryptography SLA (Service Level Agreement) 
 Development of novel and practical methods of cryptography risk assessment 
to reveal the vulnerabilities inherent in the components of critical 
cryptography infrastructure that are tightly integrated with information and 
communication technology  
 
二、 心得與建議 
此次赴日本東京的 University of Tsukuba, Tokyo 參訪 Prof. Eiji Okamoto 主持的密
碼學與信息安全研究中心，並洽談進行合作之可行性，有數點心得： 
國科會補助計畫衍生研發成果推廣資料表
日期:2010/12/24
國科會補助計畫
計畫名稱: 同儕網路計算之信任與安全機制的設計與實作
計畫主持人: 雷欽隆
計畫編號: 96-2628-E-002-182-MY3 學門領域: WEB 技術
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
無。 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
