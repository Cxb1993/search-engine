以特徵向量預測蛋白質辨識 
Predicting Protein-Protein Recognition Using Feature Vector 
計畫主持人：郭煌政 
兼任研究助理：林榮章、李宗龍、李嘉杰、蘇冠宇、許宴綾 
國立嘉義大學資訊工程學系 
中、英文摘要及關鍵詞 
蛋白質交互作用的研究，可以幫助我們了解在細胞活動中，蛋白質所扮演的功能。蛋白質辨
識更是生物中關鍵角色。我們以蛋白質介面(結合面)之特徵，做為預測蛋白質辨識之依據。人工
智慧中之基因規劃法是一個最近常被利用的分類方法，我們以蛋白質結合面的特徵向量為基礎，
利用基因規劃法來預測蛋白質辨識，預測之平均正確率可達 78%。 
除了蛋白質介面特徵資料外，我們也以微陣列資料，研究基因調控，以期綜合各種相關資訊，
達到最佳結果。 
Study on protein-protein interaction is important for understanding the protein function in cell 
activity. Protein-protein recognition plays a crucial role of biology. Therefore, we use the properties of 
protein interface for protein recognition prediction because the interface offers important clues in 
biological functions. Genetic Programming (GP), one of artificial intelligence technologies, has been 
proposed in data classification research in biology. In this paper, we present a prediction method with GP 
for protein-protein recognition based on protein binding site features. We successfully predict 
recognition proteins with an average accuracy rate of 78% with ten-fold cross validation. 
Also, we study gene regulation from microarray data in order to understand protein function. We 
hope that hybridization of related information help achieve better result. 
關鍵詞：蛋白質交互作用、蛋白質辨識、蛋白質結合面、基因調控、基因規劃法、微陣列、基因
表現時間序列 
Keywords: protein-protein interaction, protein-protein recognition, protein binding site, gene regulation, 
genetic programming, microarray, gene expression time series 
1、 前言 
The functionalities specified by the information encoded in genes are carried out by proteins [19]. 
The interaction of two proteins certainly produces some functions between them. Therefore, 
protein-protein interaction plays an important role in the cell functions. Analysis of physical and 
chemistry properties on the protein binding site offers important clues for protein-protein functions. 
In biological experiments, it is time-consuming to prove whether two proteins interact or not. 
Currently there are many relevant researches on protein-protein interaction field. These studies are 
developed for predicting the interaction by exploiting some characteristics of the surface residues, 
sequence signatures and proteins. All of the above, prediction of the relations of interactions between 
proteins is an important issue and is interesting for biologists. 
We discuss the characteristics used for predicting protein recognition. The protein recognition 
means that after two or more proteins interact and become a complex, the complex separates after 
message is transmitted or process is completed. Such protein interaction is also call transient recognition. 
In contrast, if a complex does not separate after the two proteins interact, it is a non-recognition protein 
complex. Such protein complexes are also called permanent complexes. In this paper, we focus on the 
recognition complexes having what kind of conditions or physico-chemical properties that can 
distinguish from non-recognition complexes. 
We propose a method to predict protein-protein recognition using genetic programming based on feature 
vectors computed from protein binding sites. First, we devise the feature vector using the attributes in 
PROTORP server (Protein-Protein interface analysis server) which are residue, accessible surface area 
(ASA), atom, planarity, eccentricity, hydrogen bonds, gap volume, and so on. Our dataset is the 
PROTORP server calculates values of the protein interface characteristics. An example of values of 
protein binding interface characteristics, called parameters in the server, is shown below. 
Table: Protein interface parameter value on protein complex 1A2K A:D 
Protein Interface Parameter Value 
1 Interface Residue Segments 9 
2 Interface Accessible Surface Area 1618.32 
3 % Interface Accessible Surface Area 21.74 
4 Atoms in Interface 118 
5 
 
% Polar Atoms Contribution to 
Interface 
28.40 
6 
 
% Non-Polar Atoms Contribution to Interface 50.36 
7 
 
% Neutral Atoms Contribution to 
Interface 
20.12 
8 Residues in Interface 47 
9 % Polar Residues in Interface 38.30 
10 % Non-Polar Residues in Interface 48.94 
11 % Charged Residues in Interface 12.77 
12 Residues on Surface 180 
13 % Polar Residues on Surface 36.11 
14 % Non-Polar Residues on Surface 41.67 
15 % Charged Residues on Surface 22.22 
16 Planarity 3.997 
17 Eccentricity 0.770 
18 Hydrogen Bonds 14 
19 Gap Volume Index 1.10 
5、 結果與討論 
We use 119 protein complexes for experiment. The complexes are listed below. 
Table: The dataset of 67 recognition complexes and 52 nonrecognition complexes 
  
 
Figure:. The final program in tree structure trained with population size of 200 
6、 參考文獻 
本計畫兼任研究助理之碩士畢業論文(姓名、畢業年份、論文題目) 
1. 李宗龍 2009 時間基因序列分割式群集分析 
2. 李嘉杰 2009 以蛋白質結合面特徵預測蛋白質辨識 
3. 林榮章 2009 蛋白質結合區域之胺基酸樣式探勘 
Other references related to the research: 
[1] J.R. Bradford and D.R. Westhead, “Improved Prediction of Protein-Protein Binding Sites 
Using a Support Vector Machines Approach,” Bioinformatics, Vol. 21, No. 8, 2005, pp. 
1487-1494. 
[2] H.M. Berman, J. Westbrook, Z. Feng, G. Gilliland, T.N. Bhat, H. Weissig, I.N. Shindyalov, 
and P.E. Bourne, “The Protein Data Bank,” Nucleic Acids Research, Vol. 28, No.1, 2000, pp. 
235-242. 
[3] S. Dohkan, A. Koike, and T. Takagi, “Prediction of Protein-Protein Interactions Using 
Support Vector Machines,” IEEE Symposium on Bioinformatics and Bioengineering, 2004, 
pp. 576-583. 
[4] P. Fariselli, F. Pazos, A. Valencia, and R. Casadio, “Prediction of Protein—Protein 
Interaction Sites in Heterocomplexes with Neural Networks,” European Journal of 
Biochemistry, Vol. 269, No. 5, 2002, pp. 1356-1361. 
[5] S. Handley, “The Prediction of the Degree of Exposure to Solvent of Amino Acid Residues 
via Genetic Programming,” International Conference on Intelligent Systems for Molecular 
Biology, 1994, pp. 156-160. 
[6] C. Huang, F. Morcos, S.P. Kanaan, S. Wuchty, D.Z. Chen, and J. A. Izaguirre, “Predicting 
Protein-Protein Interactions from Protein Domains Using a Set Cover Approach,” IEEE/ACM 
Transactions on Computational Biology and Bioinformatics, Vol. 4, No. 1, 2007, pp. 78-87. 
我們在研究計畫提案中所描述的預期目標： 
1. 找尋具有能夠相互作用的蛋白質複合體，並且有一套可以信賴的蛋白質複合體，
可以提供本計畫明確的作用關係，例如說明蛋白質複合體中的某鏈可以分辨那顆
蛋白質複合體中的某鏈的正確資料集。 
2. 找出並判斷抓取蛋白質複合體結合面的殘基，並且設計演算法將這些殘基分成具
有代表性的樣式，可以幫助我們之後在預測兩兩蛋白質主鏈結合面時，可以用來
比對特徵的基本單位，完成樣式的設計。 
3. 撰寫和確定蛋白質複合體各主鏈的結合面的各種特徵向量及轉化這些向量成為數
值的核心演算法或軟體或網站，完成特徵向量的數值化。 
本計畫對於參興的研究人員，預期的成效： 
1、生物知識的累積及應用。 
2、程式能力的撰寫和人面化介面的設計。 
3、能夠協調生物學上和資訊工程學上的結合。 
4、提昇研究人員跨領域的學習和溝通協調的能力。 
經過一年多，我們有一些初步成果。同時，我們也將與以往一樣，持續與校內有生物背景
的老師合作，或更進一步與校外研究人員合作，使研究的方向更貼切生物學家的需求。感
謝國科會在本計畫之後，繼續支持我們，將原來的研究議題—蛋白質辨識之預測，往前推
進一步，設計蛋白質篩選之方法。 
 
 
 
附錄 
1. Huang-Cheng Kuo, Pei-Cheng Tsai, Jen-Peng Huang, Finding Time-delayed Gene Regulation 
Patterns from Microarray Data, Ninth International Conference on Hybrid Intelligent Systems, 
2009, China, pp. 117-122. 
2. Huang-Cheng Kuo, Kuan-Yu Su, Ping-Lin Ong, Jen-Peng Huang, Learning a Prediction 
Model for Protein-Protein Recognition, International Conference on Computer Sciences and 
Convergence Information Technology, 2009, Korea, pp. 736-741. 
3. Huang-Cheng Kuo, Tsung-Lung Lee, Jen-Peng Huang, Cluster Analysis on Time Series Gene 
Expression Data, Int. J. Business Intelligence and Data Mining, Vol. 5, No. 1, pp.56–76. 
 
全文完 
 
Finding Time-delayed Gene Regulation Patterns from Microarray Data 
 
 
Huang-Cheng Kuo 
Department of Computer 
Science and Information 
Engineering
National Chiayi University 
Chiayi 600, Taiwan 
hckuo@mail.ncyu.edu.tw 
 
Pei-Cheng Tsai 
Department of Computer 
Science and Information 
Engineering
National Chiayi University 
Chiayi 600, Taiwan 
s0950310@mail.ncyu.edu.tw
 
Jen-Peng Huang 
Department of Information 
Management
Southern Taiwan University 
Tainan 710, Taiwan 
jehuang@mail.stut.edu.tw
 
Abstract—Discovered gene regulation networks are very 
helpful to predict unknown gene functions. Microarray 
gene expression data reveals activation and deactivation 
relations among genes. There are evidences showing that 
multiple time units delay exist in a gene regulation 
process. Association rule mining technique is very 
suitable for finding regulation relations among genes. 
However, current association rule mining techniques can 
not handle temporally ordered transactions. We propose 
a modified association rule mining technique for 
efficiently discovering time-delayed regulation 
relationships among genes. 
Keywords-Gene Regulation, Apriori Algorithm, 
Microarray, Association Rule Mining. 
 
I. INTRODUCTION 
 
DNA microarray experiments measure the 
expression levels of genes during biological processes. 
A microarray is a chip with probes on glass or plastic, 
which is high-throughput technology for molecular 
biology [1]. DNA microarrays can be used to measure 
changes in expression levels. By analyzing gene 
expression data from microarray, we can uncover some 
relations between genes. These relations can be 
important when verifying them with biological 
evidences. The relations are found by computational 
algorithms without biological evidence. It may provide 
a direction for biologists to observe and discuss genetic 
relations. In gene regulation networks, co-regulated 
genes may not appear adjacently to each other in the 
same cluster. Gene regulation networks are widely 
used to predict unknown functions of genes. Thus, 
gene regulation networks help us confirm not only the 
interaction between genes, but also gene functions. 
Different network structures can be predicted by 
different network models. There is much formalism to 
describe a genetic regulatory system [2]. A Bayesian 
network is a common structure to model gene 
regulation network [3][4]. We use mining algorithms 
to find the relationship of genes for further study. 
Association rule mining algorithms prune itemsets 
by using the minimum support and the minimum 
confidence. Association rules can identify patterns that 
might not have been found by clustering analysis. 
Association rules can describe how the expression of 
one gene may be associated with the expression of a 
set of genes; given such a rule exists, we can easily 
infer that the genes involved participate in some kind 
of gene network. The gene expression levels can be 
binned by using a statistical technique [5]. Different 
transcription factors might be affected by the same 
gene at different starting times, or they may suffer 
different conditions [6]. The predicted rules allow 
overlapping regulators because co-regulations 
normally appear in only a fraction of the investigated 
condition pairs. Association rules can be used to relate 
the expression of genes to their cellular environment. 
For example, association rules are conducive to 
identify cancer genes, especially when cancer is caused 
by a set of genes acting together instead of a single 
gene. Existing techniques determine rules based on 
analyzing the time series gene expression values were 
not accurate enough to discover the relations from 
multiple regulators to a target gene [7].  
Functions of genes may be produced by RNA or a 
protein. The expression of a gene may be modulated 
from DNA-RNA transcription. Applying time-delayed 
property is important to model relations between genes 
[8][9]. It needs time to transcribe a gene to mRNA, and 
RNA translates to proteins for gene expression 
processes. At last the productive proteins activate or 
inhibiting its target genes from expressing its function, 
so time delay is an essential factor to consider.  
Analyzing gene expression data can provide us 
information for recognizing the positive and negative 
2009 Ninth International Conference on Hybrid Intelligent Systems
978-0-7695-3745-0/09 $25.00 © 2009 IEEE
DOI 10.1109/HIS.2009.31
117
 
Figure 1. Framework. The graph shows our framework to get the 
result of BL3 that is a set of co-regulated patterns. 
 
B. Preprocessing Gene Expression Data 
The microarray gene expression data can be 
normalized if needed. The form of original gene 
expression data we use are the experimental results by 
Campbell et al. [19]. We assume the ti column means   
gene expression profile at time point i. Then we 
transform the value into the form which is easy to use 
in our method. Defining ti = {p1, p2, …, pn | n is the 
number of genes }where p is defined as follows (1). A 
jx value is the average value of the gene expression 
data of gene j. Sj is a value to decide the boundary for 
discretization. 
The value of gene expression level transforms to the 
expression condition label by discretization (1). The 
label Hj represents the gene j expressed highly. 
Condition Lj represents the gene j down expressed.  Mj 
represents the gene j and it was not considered in the 
time. As the time past, the gene expression levels were 
in fluctuation.  
Investigations show that more often than not, 
several genes contribute to a disease, which motivates 
researchers to identify genes whose expression levels 
rise and fall synchronously under a subset of 
conditions, whether they exhibit fluctuation of a 
similar shape when conditions change [20]. Smaller 
variations in expression values are likely to be 
coincident with little biological meaning but may be 
caused by noise. 
°°¯
°°®
­


 
else. , 
. x than  less  value theif , 
.xhan greater  t  value theif , 
j
jjj
jjj
j
m
Sl
Sh
p (1)
 
C. Using Apriori to Find L1 and L2
The way to find L1 is the same in the Apriori 
algorithm. In our proposed method, it counts the 
appearance of every item in all transactions. If the 
count of the items is greater than the minimum support 
count, we select the item from candidate 1-itemset to 
large 1-itemset. We take ti defined in section 3.2 as a 
transaction, and the variable i is the time point of 
dataset. After finding L1, it continues to find L2. The L2 
itemset contains frequent patterns in length two. The 
items in the frequent 2-itemset in gene expression data 
are mined in the same time point. 
 
D. Finding for BL1
In order to find BL1, we need to first find L2. To 
select the item that is in itemset L2, we count the 
candidate appearance itemsets of size 2. The number of 
appearances supports the itemset in C2. We prune C2 
by removing the itemset it supports, which is less than 
the minimum support. After the step of pruning, we 
obtain L2 and continue the process for finding BL1. 
BL1 includes all items occurring in the itemsets of L2. 
Because the item s in definition (2) in the set is 
backward from L2, we name the set as BL1. 
BL1= {s | s୴P, P୰L2, |s|=1}. (2)
 
E. Definition of BL2
We combine the BL1 item with the item in L1 and 
place them in the order-set. BC2 is the order-set of the 
first position which includes all the elements of BL1. 
The second position includes all elements of L1. 
BC2= {<a, b> | aBL1, bL1, aЋb}. (3)
 
The way to count the support of BC2 is defined as 
follows. Because we want to get the regulatory relation 
with a time delay between genes, the support is the 
appearance count of the first item in time point i, while 
the appearance of the second item is the time point 
i+ǻt in the same time. ǻt identifies the number of 
times the units delay. We give ǻt as needed by the user. 
We select the order-set it supports as greater or equal 
to the minimum support count and place it into BL2. 
Data  
Preprocessing 
L1, L2 
BL1 
Gene expression data 
BC2, BL2 
BC3, BL3 
119
ACKNOWLEDGEMENT Method\Count 1000 2000 3000 4000 5000
Apriori 6s 24s 57s 252s 2h 
BL3 0.1s 0.3s 0.8s 1.3s 2s 
This work was supported in part by the National 
Science Council, Taiwan, under the Grant NSC 97-
2221-E-415-013-. 
Table I. Time cost comparison between Apriori and BL3. 
REFERENCES  
˃ˁ˄
˄
˄˃
˄˃˃
˄˃˃˃
˄˃˃˃˃
˄˃˃˃ ˅˃˃˃ ˆ˃˃˃ ˇ˃˃˃ ˈ˃˃˃
˺˸́˸ʳ́̈̀˵˸̅̆
˧˼
̀
˸ʻ
̆˸
˶ˁ
ʼ
˔̃̅˼̂̅˼
˕˟ˆ
 
Figure 2. Time cost comparison between Apriori and BL3. 
V. CONCLUSIONS 
 
In this paper, a method with backward frequent 
itemsets to find time-delayed gene regulation patterns 
is proposed. We provide a different viewpoint from 
other methods. Our method applies results performed 
by Apriori to find possible gene regulation 
relationships. However, the BL3 method discovered 
that two or more genes can affect a single gene, and 
BL3 also facilitates the process of finding regulation 
patterns.   
In addition, no matter how many time units are 
delayed between regulators and their targets, the length 
of the time delay can be assigned manually by the user. 
The interactions between genes in any length of time 
delay in which you want to know can be found in a 
time series DNA microarray gene expression dataset 
by our method. We thought that the patterns we found 
might be used for gene function prediction. The 
predicted gene regulation patterns can be verified by 
biological evidence and they are consistent with the 
yeast cell cycle phase information. We can apply our 
framework to a gene expression dataset further to test 
and verify if the results are helpful for predicting, or if 
they are applicable to other analyses. 
[1] P.A. Pevsner, et al, “Improved Chips for Sequencing by 
Hybridization,” Journal of Biomolecular Structure and 
Dynamics, Vol. 9, No. 2, pp. 399-410. (1991) 
[2] H.D. JONG, “Modeling and Simulation of Genetic 
Regulatory Systems: A Literature Review,” Journal of 
Computational Biology, Vol. 9, No. 1, pp. 67-103. (2002) 
[3] R. Ram, M. Chetty, T.I. Dix, “Causal Modeling of Gene 
Regulatory Network,” IEEE Symposium on 
Computational Intelligence and Bioinformatics and 
Computational Biology, pp. 1-8. (2006) 
[4] N. Friedman, M. Linial, I. Nachman, and D. Pe’er, 
“Using Bayesian Networks to Analyze Expression 
Data,” Journal of Computational Molecular Biology, 
Vol. 7, No. 3-4, pp. 601-620 (2000) 
[5] K. Koch, S. Schonauer, I. Jansen, J.v.d. Bussche, T. 
Burzykowski, “Finding Clusters of Positive and 
Negative Coregulated Genes in Gene Expression Data,” 
IEEE International Conference on Bioinformatics and 
Bioengineering, pp. 93-99. (2007) 
[6] Y. Zhao, G. Wang, Y. Yin, G. Yu, “Mining Positive and 
Negative Co-regulation Patterns from Microarray Data,” 
IEEE Symposium on BioInformatics and 
BioEngineering, pp. 86-93. (2006) 
[7] C. Creighton, S. Hanash, “Mining Gene Expression 
Databases for Association Rules,” Bioinformatics Vol. 
19, No. 1, pp. 79-86. (2003) 
[8] L. Sacchi, R. Bellazzi, R. Porreca, C. Larizza, P. Magni, 
“Precedence Temporal Networks from Gene Expression 
Data,” IEEE Symposium on Computer-Based Medical 
Systems. pp. 109-114. (2005) 
[9] Z. Xing, D. Wu, “Modeling Multiple Time Units 
Delayed Gene Regulatory Network Using Dynamic 
Bayesian Network,” IEEE International Conference on 
Data Mining – Workshops, pp. 190-195. (2006)  
[10] S. Kotsiantis, D. Kanellopoulos, “Association Rules 
Mining: A Recent Overview,” GESTS International 
Transactions on Computer Science and Engineering, Vol. 
32, No. 1, pp. 71-82. (2006) 
[11] R. Agrawal, T. Imielinski, A. Swami, “Mining 
Association Rules between Sets of Items in Large 
Databases,” ACM SIGMOD International Conference 
on Management of Data, pp. 207-216. (1993) 
[12] A. Tuzhilin, G. Adomavicius, “Handling Very Large 
Numbers of Association Rules in the Analysis of 
Microarray Data,” ACM SIGKDD International 
Conference on Knowledge Discovery and Data Mining, 
pp. 396-404. (2002) 
[13] C. Becquet, S. Blachon, B. Jeudy, J. Boulicaut, O. 
Gandrillon, “Strong-association-rule Mining for Large-
scale Gene-expression Data Analysis: a Case Study on 
Human SAGE Data,” Genome Biology, Vol. 3, No. 12. 
(2002) 
[14] Genes & Gene Expression, 
http://www.biochemweb.org/genes.shtml 
121
Learning a Prediction Model for Protein-Protein 
Recognition 
 
Huang-Cheng Kuo, Kuan-Yu Su 
Department of Computer Science and 
Information Engineering 
National Chiayi University 
Chia-Yi City, Taiwan 
hckuo@mail.ncyu.edu.tw 
s0970406@mail.ncyu.edu.tw 
Ping-Lin Ong 
Department of Biochemical Science 
and Technology 
National Chiayi University 
Chia-Yi City, Taiwan 
peterong@mail.ncyu.edu.tw 
Jen-Peng Huang 
Department of Information 
Management 
Southern Taiwan University 
Tainan County, Taiwan 
jehuang@mail.stut.edu.tw 
 
ABSTRACT 
Study on protein-protein interaction is important for 
understanding the protein function in cell activity. Protein-protein 
recognition plays a crucial role of biology. Therefore, we use the 
properties of protein interface for protein recognition prediction 
because the interface offers important clues in biological 
functions. Genetic Programming (GP), one of artificial 
intelligence technologies, has been proposed in data classification 
research in biology. In this paper, we present a prediction method 
with GP for protein-protein recognition based on protein binding 
site features. We successfully predict recognition proteins with an 
average accuracy rate of 78% with ten-fold cross validation.  
Categories and Subject Descriptors 
I.5.2 [Pattern Recognition]: Design Methodology – classifier 
design and evaluation  
J.3 [Computer Applications]: Life and Medical Sciences – 
biology and genetics 
General Terms 
Algorithms, Design, Performance 
Keywords 
protein-protein recognition; genetic programming; binding site; 
protein complex; feature vector 
1. INTRODUCTION 
The functionalities specified by the information encoded in genes 
are carried out by proteins [19]. The interaction of two proteins 
certainly produces some functions between them. Therefore, 
protein-protein interaction plays an important role in the cell 
functions. Analysis of physical and chemistry properties on the 
protein binding site offers important clues for protein-protein 
functions. 
In biological experiments, it is time-consuming to prove whether 
two proteins interact or not. Currently there are many relevant 
researches on protein-protein interaction field 
[1][3][6][7][14][16][18][20]. These studies are developed for 
predicting the interaction by exploiting some characteristics of the 
surface residues, sequence signatures and proteins. All of the 
above, prediction of the relations of interactions between proteins 
is an important issue and is interesting for biologists. 
We discuss the characteristics used for predicting protein 
recognition. The protein recognition means that after two or more 
proteins interact and become a complex, the complex separates 
after message is transmitted or process is completed. Such protein 
interaction is also call transient recognition. In contrast, if a 
complex does not separate after the two proteins interact, it is a 
non-recognition protein complex. Such protein complexes are also 
called permanent complexes. In this paper, we focus on the 
recognition complexes having what kind of conditions or physico-
chemical properties that can distinguish from non-recognition 
complexes. 
We propose a method to predict protein-protein recognition using 
genetic programming based on feature vectors computed from 
protein binding sites. First, we devise the feature vector using the 
attributes in PROTORP server (Protein-Protein interface analysis 
server) [8] which are residue, accessible surface area (ASA), atom, 
planarity, eccentricity, hydrogen bonds, gap volume, and so on. 
Our dataset is the collection of feature vectors, obtained from the 
PROTORP server, of 67 transient complexes and 52 permanent 
complexes. Finally, we derive a formula (program) to accurately 
predict whether the protein is recognizable by genetic 
programming. 
2. RELATED WORK 
In past, there are many researches of prediction on protein-protein 
interaction using information on binding site [1][16], or using  
domain information [3][6]. The interface between two interacting 
proteins provides important clues to the function on proteins. 
Therefore, some studies propose which are important attributes on 
protein binding sites for protein function prediction. Tapan Patel 
et al. [16] analyzes that there are seven properties on binding sites 
which are residue propensity, hydrophobicity, accessible surface 
area, shape index, electrostatic potential, curvedness, and 
conservation score. Many studies applied Support Vector 
Machine [1][3], Neural Network [4][20], and other machine 
learning methods to predict protein-protein recognition for protein 
complexes based on the above features. 
In Mintseris and Zhiping Weng’s study [11], they use the atomic 
contact vectors (ACVs) to represent the interface of interactions 
between proteins, and test the utility of ACVs by using quadratic 
Fisher discriminant (QFD) and kernel discriminant analysis (KDA) 
3 % Interface Accessible Surface Area 21.74 
4 Atoms in Interface 118 
5 
 
% Polar Atoms Contribution to 
Interface 
28.40 
6 
 
% Non-Polar Atoms Contribution to 
Interface 
50.36 
7 
 
% Neutral Atoms Contribution to 
Interface 
20.12 
8 Residues in Interface 47 
9 % Polar Residues in Interface 38.30 
10 % Non-Polar Residues in Interface 48.94 
11 % Charged Residues in Interface 12.77 
12 Residues on Surface 180 
13 % Polar Residues on Surface 36.11 
14 % Non-Polar Residues on Surface 41.67 
15 % Charged Residues on Surface 22.22 
16 Planarity 3.997 
17 Eccentricity 0.770 
18 Hydrogen Bonds 14 
19 Gap Volume Index 1.10 
5. DATASETS 
In this paper, there are two kinds of experiment data which are 
transient recognition and permanent recognition complexes.  
We adopt the data of recognition complexes from [13] by Julian 
Mintseris and Zhiping Weng. In which there are 209 identified 
transient recognition complexes, including 34 antibody-antigen 
complexes and 60 enzyme-inhibitor complexes.  
We adopt the data of permanent recognition from [15] by Hannes 
Ponstingl, Kim Henrick, and Janet M.Thornton. There are 76 
homodimer proteins  
After filtering the incomplete data, we use 119 complexes which 
are 67 transient complexes and 52 permanent complexes. The 119 
protein complexes are shown in TABLE 2. 
Table 2. The dataset of 67 recognition complexes and 52 nonrecognition complexes 
Recognition complexes 
1A2K A:D 1A4Y A:B 1ACB E:I 1ARO P:L 1ATN A:D 1AVW A:B 
1AVZ B:C 1AXI A:B 1AY7 A:B 1B41 A:B 1BKD R:S 1BLX A:B 
1BML A:C 1BP3 A:B 1BQQ T:M 1BUH A:B 1BVN P:T 1BZQ A:L 
1C1Y A:B 1C4Z A:D 1CD9 A:B 1CDM A:B 1CLV A:I 1CMX A:B 
1CSE E:I  1CXZ A:B 1D2Z A:B 1D5M A:C 1D6R T:A 1DE4 A:C 
1DF9 B:C 1DFJ E:I  1DHK A:B 1DPJ A:B 1DS6 A:B 1DTD A:B 
1DZB A:X 1E0O A:B 1E44 A:B 1E96 A:B 1EAI A:C 1EAY A:C 
1EV2 A:E 1F02 I:T  1F3V A:B 1F60 A:B 1F7Z A:I  1FC2 C:D 
1FOE A:B 1FQ1 A:B 1FYH A:B 1G3N A:C 1GH6 A:B 1GL4 A:B 
1HX1 A:B 1I1R A:B 1I2M A:B 1I5K A:C 1IAR A:B 1IBR A:B 
1IM3 A:D 1J7V L:R 1JDH A:B 1JDP A:H 1JTD A:B 1JTG A:B 
1KAC A:B 
Nonrecognition complexes 
11GS A:B 1AD3 A:B 1AFW A:B 1AJS A:B 1ALK A:B 1AOM A:B 
1AOR A:B 1AQ6 A:B 1AUO A:B 1AY0 A:B 1AZY A:B 1BFT A:B 
1BSR A:B 1CG2 B:C 1CHM A:B 1CP2 A:B 1D9G A:B 1DAA A:B 
1E7N A:B 1F6Y A:B 1FA7 A:B 1FIP A:B  1FRO A:B 1FZR C:D 
1HJR B:D 1HSS C:D 1ICW A:B 1IMB A:B 1ISB A:B 1KBA A:B 
1LYN A:B 1MJL A:B 1MKA A:B 1MY7 A:B 1NXF A:B 1OAC A:B 
1OH0 A:B 1PRE A:B 1QAE A:B 1QIP A:B 1RFB A:B 1SES A:B 
1SLT A:B 1SMT A:B 1SOX A:B 1WGI A:B 1XSO A:B 1YFB A:B 
 Figure 6. Prediction accuracy for each data partition with 
population size of 200 
In addition, we discover that some features appear frequently such 
as polar residues on surface, neutral atoms on interface, interface 
accessible surface area and polar residues on interface through 
genetic programming. Especially, we noted that 12th feature 
(residues on surface) never appear in all programs. The number of   
features is shown in Figure 7.  
After a series of experiments, we notice that the prediction rate 
improves when population size increases. In worth to mention that 
some features appear more frequently than others. 
 
Figure 7. Number of features in programs 
7. CONCLUSIONS AND FUTURE WORKS 
8. ACKNOWLEDGMENTS 
This work was partially supported by grants from the National 
Science Council of Taiwan under contracts NSC 97-2221-E415-
013- and NSC 98-2221-E-415-013-. 
9. REFERENCES 
[1] J.R. Bradford and D.R. Westhead, “Improved Prediction of 
Protein-Protein Binding Sites Using a Support Vector 
Machines Approach,” Bioinformatics, Vol. 21, No. 8, 2005, 
pp. 1487-1494. 
[2] H.M. Berman, J. Westbrook, Z. Feng, G. Gilliland, T.N. Bhat, 
H. Weissig, I.N. Shindyalov, and P.E. Bourne, “The Protein 
Data Bank,” Nucleic Acids Research, Vol. 28, No.1, 2000, 
pp. 235-242. 
[3] S. Dohkan, A. Koike, and T. Takagi, “Prediction of Protein-
Protein Interactions Using Support Vector Machines,” IEEE 
Symposium on Bioinformatics and Bioengineering, 2004, pp. 
576-583. 
[4] P. Fariselli, F. Pazos, A. Valencia, and R. Casadio, 
“Prediction of Protein—Protein Interaction Sites in 
Heterocomplexes with Neural Networks,” European Journal 
of Biochemistry, Vol. 269, No. 5, 2002, pp. 1356-1361. 
[5] S. Handley, “The Prediction of the Degree of Exposure to 
Solvent of Amino Acid Residues via Genetic Programming,” 
International Conference on Intelligent Systems for 
Molecular Biology, 1994, pp. 156-160. 
[6] C. Huang, F. Morcos, S.P. Kanaan, S. Wuchty, D.Z. Chen, 
and J. A. Izaguirre, “Predicting Protein-Protein Interactions 
from Protein Domains Using a Set Cover Approach,” 
IEEE/ACM Transactions on Computational Biology and 
Bioinformatics, Vol. 4, No. 1, 2007, pp. 78-87. 
[7] H.F. Juan, H.C. Huang, “An Efficient Mechanism for 
Prediction of Protein-Ligand Interactions Based on Analysis 
of Protein Tertiary Substructures,” IEEE Symposium on 
Bioinformatics and Bioengineering, 2004, pp. 427-433. 
[8] C. Reynolds, D. Damerell, and S. Jones, “Protorp: a Protein-
protein Interaction Analysis Tool,” Bioinformatics, Vol. 25, 
No. 3, 2009, pp. 413-414. 
[9] H.-C. Kuo, P.-L. Ong, J.-C. Lin, J.-P. Huang, “Prediction of 
Protein-Protein Recognition Using Support Vector Machine 
Based on Feature Vectors,” IEEE International Conference 
on BioInformation and BioMedicine Workshops (BIBMW), 
2008, pp. 200-206. 
In this paper, we propose a new method which automates learning 
a program to predict whether two proteins recognize or not. For 
predicting a protein complex recognition or non-recognition, we 
design a feature vector for the proteins which are 19 parameter 
values on protein interface from the PROTORP server. The 
experimental results report the method has good performances. 
The average prediction accuracy achieves 78% with ten-fold cross 
validation. The best program is 92% prediction rate among our all 
evolution programs. 
[10] H.-C. Kuo, P.-L. Ong, J.-J. Li, J.-P. Huang, “Predicting 
Protein-Protein Recognition Using Feature Vector,” The 
International Conference on Intelligent Systems Design and 
Applications (ISDA), 2008, pp. 45-50. 
[11] J.R. Koza, Genetic Programming: On the Programming of 
Computers by Means of Natural Selection, MIT Press, 1992. 
[12] D.P. Muni, N.R. Pal, and J. Das, “Genetic Programming for 
Simultaneous Feature Selection and Classifier Design,” IEEE 
Transactions on Systems, Man, and Cybernetics, Part B, 
Cybernetics, Vol. 36, No. 1, 2006, pp. 106-117.   
In the future, we will investigate the effect of parameters in 
GPLAB such as population size, generation, function et al. As to 
the interpretation of the learned programs of the features of 
protein binding sites, we observe that some features appear much 
more frequently than others. We will substitute them into GP to 
provide that is significant momentous or not. 
[13] J. Mintseris and Z. Weng, “Atomic Contact Vectors in 
Protein-Protein Recognition,” Protein: Structure, Function, 
and Genetics, Vol. 53, No. 3, 2003, pp. 629-639. 
   
 
   
   
 
   
   
 
   
   56 Int. J. Business Intelligence and Data Mining, Vol. 5, No. 1, 2010    
 
   Copyright © 2010 Inderscience Enterprises Ltd. 
 
 
   
   
 
   
   
 
   
       
 
Cluster analysis on time series gene expression data 
Huang-Cheng Kuo* and Tsung-Lung Lee 
Department of Computer Science 
and Information Engineering, 
National Chiayi University,  
Chia-Yi City 600, Taiwan  
E-mail: hckuo@mail.ncyu.edu.tw  
E-mail: ctx@mail.educities.edu.tw  
*Corresponding author 
Jen-Peng Huang 
Department of Information Management,  
Southern Taiwan University,  
Tainan County 710, Taiwan  
E-mail: jehuang@mail.stut.edu.tw 
Abstract: Cluster analysis is frequently used to study the trend of gene 
expression behaviours from microarray time series data. We adopt a 
partitioning-based clustering algorithm for such a task. After time series are 
discritised into sequences, a sequential pattern mining technique is applied  
to find patterns as the initial clusters. Longest Common Subseries Similarity  
is used to measure the similarity between time series which overcomes  
the ‘shift-effect’ influence. An object is re-assigned to the cluster which  
has most objects within the k nearest neighbours of the object. Similarity 
measurements, like Pearson correlation coefficient, are used to determine  
the neighbours. 
Keywords: gene expression time series; cluster analysis; similarity 
measurement; k-nearest neighbours; sequential pattern mining. 
Reference to this paper should be made as follows: Kuo, H-C., Lee, T-L.  
and Huang, J-P. (2010) ‘Cluster analysis on time series gene expression data’,  
Int. J. Business Intelligence and Data Mining, Vol. 5, No. 1, pp.56–76. 
Biographical notes: Huang-Cheng Kuo is an Assistant Professor of the 
Department of Computer Science and Information Engineering of National 
Chiayi University, Taiwan. He received his MS and PhD in Computer Science 
from Case Western Reserve University in 1993 and 1997. His research interest 
is in applying data mining techniques to biological data. 
Tsung-Lung Lee obtained his MS Degree in Computer Science and Information 
Engineering from National Chiayi University in 2009. His research interest  
is in data mining. Now, he is in the Army of Taiwan for compulsory military 
service. 
 
 
   
 
   
   
 
   
   
 
   
   58 H-C. Kuo et al.     
 
    
 
 
   
   
 
   
   
 
   
       
 
namely scaling, baseline shifting (Chu and Wong, 1999), outliers, and shift effect 
(Dunham, 2003), as illustrated in Figure 2. For example, Euclidean distance measurement 
is one of the commonly used similarity measurements for time series similarity,  
but Euclidean distance measurement will calculate an incorrect similarity when the 
challenges of outliers and shift effect exist. The Pearson correlation coefficient has 
similar drawbacks. For these reasons, we introduce a useful similarity measurement that 
can well measure the similarities of gene expression time series. 
Figure 2 Four challenges for measuring time series similarities: (a) scale; (b) baseline shift;  
(c) outliers and (d) shift effect 
 
There are several clustering techniques for gene expression data, and the  
partitioning-based clustering algorithm is one of the popular analysis techniques.  
In partitioning-based clustering algorithms, the main issue is finding the target number of 
clusters. Usually, this is done by means of trial-and-error to pick up a number from a 
large range. In order to solve this problem, a partitioning-based clustering algorithm is 
applied for gene expression time series data to automatically determine the target number 
of clusters meaningfully. 
In partitioning-based clustering algorithms, three major subjects will be discussed 
below. 
• Time series similarity measurement:  
For the challenges of scale, baseline shift, outliers, and shift effect, LCSS is used  
for integrating with clustering methods appropriately. 
• The target number of clusters: 
The data pre-process is operated to convert all gene expression time series into gene 
expression sequences for generating the initial target number of clusters. According 
to the characteristics of gene expression data, the initial target number of clusters  
   
 
   
   
 
   
   
 
   
   60 H-C. Kuo et al.     
 
    
 
 
   
   
 
   
   
 
   
       
 
Z-score normalisation 
The Z-score normalisation transforms the input data to make the mean zero and the 
variance one (Han and Kamber, 2006). The mathematical formula is shown below: 
,vv µ
σ
−
′ =  (2-2) 
where v is the original data, v′ is the new value, µ is the mean value of the original data, 
and σ is the standard deviation of the original data. 
2.2 Similarity measurements 
In order to determine the similarities between time series, several measurements have 
been proposed (Agrawal et al., 1995; Berndt and Clifford, 1994; Das et al., 1997; 
Drâghici, 2003). In this section, several similarity measurements are examined. 
Euclidean distance measurement 
Euclidean distance measurement is the most used dissimilarity measurement (Han and 
Kamber, 2006). A time series of length n is considered as a point in the n-dimensional 
space. The distance between two time series in the n-dimensional space can be  
calculated by using Euclidean measurements. For two time series X = <x1, x2, …, xn> and 
Y = <y1, y2, …, yn> with length n, the formula of Euclidean distance measurement is 
shown below. 
2
1
( , ) ( ) .
n
i ii
E X Y x y
=
= −∑  (2-3) 
Euclidean distance measurement is not suitable for measuring gene expression time series 
similarity because it can be quite sensitive to a few outliers and shift effect. 
Pearson correlation coefficient 
The characteristic of correlation coefficient uses the similarity degree of vector curve  
for time series similarity (Drâghici, 2003). For two time series, if the value of correlation 
coefficient is positive, then the two time series are positively correlated.  
On the other hand, two time series are negatively correlated. For two time series  
X = <x1, x2, …, xn> and Y = <y1, y2, …, yn> with length n, the formula of Pearson 
correlation coefficient measurement is shown below. 
( ) ( )2 22 2
1
( , )
1 1
i i i i
i i i i
x y x y
nr X Y
x x y y
n n
−
=
  
− −    
∑ ∑ ∑
∑ ∑ ∑ ∑
. (2-4) 
The Pearson correlation coefficient measurement is more suitable than Euclidean  
distance measurement for time series data because the similarity between two time series 
measured by the Pearson correlation coefficient is not influenced by different baselines 
and scales. However, outliers and shift effect are quite sensitive to Pearson correlation 
coefficient measurement. 
   
 
   
   
 
   
   
 
   
   62 H-C. Kuo et al.     
 
    
 
 
   
   
 
   
   
 
   
       
 
( 1, 1)
( , ) ( , ) min ( 1, ) ,
( , 1)
i j
D i j
D i j d a b D i j
D i j
− −  
= + −  
− 
 (2-7) 
where d(ai, bj) is the Euclidean distance between two time points ai and bj. 
The restrictions on warping paths are monotonicity and continuity. Monotonicity 
indicates that warping paths can not go down or to the left, and continuity indicates that 
no elements in the time series may be skipped. 
Longest common subsequence 
The concept of time series similarity measurement is to discover the common segments 
between time series. Two time series are considered to be similar if they have enough 
non-overlapping time-ordered pair of sub-sequences which are similar (Agrawal et al., 
1995). For two sequences A and B, the gaps between them will be ignored, and then the 
baseline offset and amplitude scaling are regulated. At last, the sub-sequences  
of A and B, respectively, are matched. Therefore, two sequences are considered similar if 
the total length of matched sub-sequences is greater than a threshold. And the similarity 
between A and B is defined as the ratio of the total length of matched sub-sequences to 
the total length of original sequences. In gene expression time series, LCS-like similarity 
measurement just discovers the segments with similar expression between time series and 
does not take care of the expression levels. It is difficult to distinguish the similarities  
that time series have similar expression tendencies but have great different expression 
levels. Therefore, LCS-like similarity measurement is inadequate to calculate similarities 
between gene expression time series. The idea about how to match two sequences is 
illustrated in Figure 3. 
Figure 3 Illustration of sequences matching: (a) original sequences; (b) removing gap;  
(c) offset translation and (d) amplitude scaling and matching 
 
   
 
   
   
 
   
   
 
   
   64 H-C. Kuo et al.     
 
    
 
 
   
   
 
   
   
 
   
       
 
Figure 4 Comparison of two time series with shift effect and without shift effect: (a) shift effect 
exists between time series X and Y and (b) one item is dropped off from time series  
X and Y 
 
 (a) 
 
 (b) 
In order to overcome the influence of the shift effect, a possible solution is to discover the 
best alignment between time series, and the dynamic programming technique is usually 
used to achieve it (Wu et al., 2004). The dynamic programming technique can be used  
to discover the best alignment between time series when the shift effect exists  
(Berndt and Clifford, 1994). And the dynamic programming will be used here to discover 
the similarities in the longest common segments between each two time series. 
3.2 A similarity measurement: LCSS 
According to the background of time series similarity measurements, we propose  
a similarity measurement, LCSS, to calculate similarities between gene expression  
time series in our research. The concept of LCSS is to discover the longest common 
segments between two time series, and the longer common segments indicates the higher 
similarity.  
LCSS is used to discover the longest common sub-segments between two time series. 
Given two time series X = <x1, x2, …, xn> and Y = <y1, y2, …, yn>, both X and Y are 
normalised first to avoid the influences of scale and baseline shift. Z-score normalisation 
is used to normalise time series. For discovering the longest common segments between 
time series, unlike symbols, expression levels are numeric values and one problem is how 
to determine two numeric values which are ‘alike’. The definition of ε-match is used  
to determine whether two time points are alike. 
 
   
 
   
   
 
   
   
 
   
   66 H-C. Kuo et al.     
 
    
 
 
   
   
 
   
   
 
   
       
 
To compute LCSL accordingly, we can find the largest number of ε-match time points. 
And if we want to know the data of the longest common sub-series of time series X  
and Y, we can use LCS-DISCOVER to discover the longest sub-series of time series.  
The procedure takes two time series X, Y, length of X, length of Y and the table b  
which is returned by procedure LCSL-COMPUTE as inputs. Two list structures X′ and Y′  
are used to store the longest common sub-series of X and Y. Figure 6 illustrates the  
LCS-DISCOVER procedure and the initial invocation is LCS-DISCOVER (b, X, Y, 
length [X], length [Y]). And Figure 7 is an example of longest common sub-series 
discovery with ε equal to 0.5. 
Figure 6 Procedure of LCS-DISCOVER 
 
Figure 7 An example of longest common sub-series discovery 
 
In Figure 7, given two time series S = <0.32, 0.47, 0.89, 0.66, 1.02, 0.79, 0.54, 0.21>  
and T = <0.21, 0.12, 0.38, 0.69, 0.98, 1.11, 0.84, 0.52>. The longest common sub-series  
of S is S′ = <0.32, 0.47, 0.89, 0.66, 1.02, 0.79, 0.54> and the longest common sub-series 
of T is T′ = <0.21, 0.38, 0.69, 0.98, 1.11, 0.84, 0.52>. And Figure 8 is the longest 
common sub-series of the time series. 
 
   
 
   
   
 
   
   
 
   
   68 H-C. Kuo et al.     
 
    
 
 
   
   
 
   
   
 
   
       
 
In gene expression time series data, genes with great similarity expression segments 
may be grouped into the same class. In other words, genes with the same expression 
pattern are grouped into a cluster. According to this idea, a number of clusters can be 
generated by discovering the expression patterns during gene expression time series data. 
We use the frequent pattern mining technique to discover expressions patterns by 
translating time series into sequences. Given a time series T = <t1, t2, …, tn> with length 
n, a sequence S = <i1, i2, …, in> is translated from time series T by: 
, 1 ,
0 5
k
k
T
ti k n
. σ
 
= ≤ ≤ 
×   
(4-1) 
where σT is the standard deviation of time series T. The gene expression sequence dataset 
is generated from the gene expression time series dataset, and is used to discover 
expression patterns. 
Several frequent pattern mining techniques can be used such as Apriori-based 
algorithms (Agrawal and Srikant, 1995), FP-growth algorithm (Han et al., 2000), and 
decomposition-base algorithm (Huang et al., 2007). In frequent pattern mining, the 
min_support parameter is the threshold that a pattern should be supported by at least 
min_support sequences. 
By mining frequent patterns, gene expression time series data are separated into 
several groups according to the frequent patterns, and the groups are regarded as the 
initial clusters for gene expression time series clustering. 
Besides, in order to avoid the inaccuracy by normalising time series data from 
floating point to integer sequence, we use floor, ceiling and rounding to generate the time 
series sequence. In this way, we can generate longer frequent patterns, and this can avoid 
sequences which are not similar from being clustered in the same cluster in the first step 
because of the shorter mining frequent patterns. 
4.2 Nearest neighbours based clustering algorithm 
Many clustering methods have been used to cluster gene expression time series data.  
In this paper, a partitioning-based clustering algorithm using nearest neighbours  
as the re-assignment criteria is proposed for gene expression time series. 
The nearest neighbours based clustering algorithm uses nearest neighbours to replace 
the centroid-based technique in K-means algorithm. The basic idea is that an object is in 
the cluster which contains the most nearest neighbours of the object. A parameter k 
(KNN) is used to determine the number of nearest neighbours for an object in nearest 
neighbours based clustering. We used several similarity measurements (LCSS, Pearson 
correlation coefficient, Jackknife correlation measurement, Tanimoto coefficient) to 
determine the location of k nearest neighbours. 
Definition 2: The formula of Pearson correlation coefficient measurement 
( ) ( )2 22 2
1
( , ) .
1 1
i i i i
i i i i
x y x y
nr X Y
x x y y
n n
−
=
  
− −    
∑ ∑ ∑
∑ ∑ ∑ ∑
 (4-2) 
   
 
   
   
 
   
   
 
   
   70 H-C. Kuo et al.     
 
    
 
 
   
   
 
   
   
 
   
       
 
5 Experimental results 
5.1 Similarity measurements experiments 
The Cho/Spellman dataset which contains 6178 ORFs in yeast will be used. The dataset 
is available at http://genome-www.stanford.edu/cellcycle. Two indices, analogue to 
precision and recall, are defined to compare the similarity measurements. 
In Cho/Spellman dataset, there are 343 pairs of genes that have been discovered to 
have activation by Filkov et al. (2001). In order to recognise the effectiveness of 
similarity measurements, an additional 657 gene pairs in the alpha dataset will be joined 
with the 343 activation pairs. Because the domain of the Pearson correlation is –1 to 1, 
we normalise the domain to the range from 0 to 1 by treating the correlation between –1 
and –0.8 as the similarity between 0 and 0.1 and treating the correlation between 0.8 and 
1.0 as the similarity between 0.9 and 1.0 identically. Tanimoto coefficient has a domain 
from –1/3 to 1. We normalise the domain to the range from 0 to 1 by treating the 
correlation from –1/3 to –0.15 as from 0 to 0.1 and –0.15 to 0 as 0.1 to 0.2 and similarity 
from 0 to 0.125 as 0.2 to 0.3. The similarity distribution is illustrated in Figures 10  
and 11. 
Figure 10 Similarity distribution among Pearson correlation coefficient, LCSS (ε = 0.5)  
and Tanimoto coefficient 
 
Figure 11 Similarity distribution among Pearson correlation coefficient, LCSS (ε = 0.7)  
and Tanimoto coefficient 
 
Similarity measurements should be able to give high similarity values to activation  
gene pairs and low similarity values to non-activation gene pairs. Considering all the 
gene pairs which a similarity measurement gives similarity values higher than a certain 
   
 
   
   
 
   
   
 
   
   72 H-C. Kuo et al.     
 
    
 
 
   
   
 
   
   
 
   
       
 
5.2 Clustering algorithms experiments 
For verifying the quality of clustering, we cannot use the measures for data in metric 
spaces (Nguyen and Rayward-Smith, 2008), because we consider the shift effect. So, for 
cluster validity assessment, Dunn’s validity index (Dunn, 1974) is used. 
1
1 1 ,
min{ ( )}
max max
( , )
kk n
i n j n i j i j
s c
D
s c c
≤ ≤
≤ ≤ ≤ ≤ ≠
′    
=       
 (5-3) 
where s(ci, cj) is the similarity between cluster i and cluster j, s′(ck) is the individual 
similarity in the cluster k, and n is the number of clusters. Identically, a higher Dunn’s 
validity index value indicates the better clustering. 
In clustering experiments, there are 6076 samples in the alpha dataset which  
are used in this experiment. There are 18 time points in the alpha dataset, and we  
use LCSS (ε = 0.7) as similarity measurement. We use 5%, 10%, 15%, 20% for 
min_support, and use 10, 11, 12 for the number of nearest neighbours (KNN) in the 
experiment. The result is in Figure 14. The result of Dunn’s values in clustering result is 
in Figure 15. 
Figure 14 The number of final clusters using different minimal supports 
 
Figure 15 Dunn’s values of final clusters using different minimal supports 
 
 
 
   
 
   
   
 
   
   
 
   
   74 H-C. Kuo et al.     
 
    
 
 
   
   
 
   
   
 
   
       
 
Table 3 DB and BR index experiment in k-means 
 k-mean (k = 9) k-mean (k = 12) 
DB_index 1.4374 1.3575 
BR_index 0.4149 0.3623 
According to the tables above, we found that the values in DB and BR in our method are 
better than k-means in the same cluster result. 
We notice that the numbers of most objects in the cluster between these two types of 
methods are much different. In Ceil, the numbers between each cluster are much bigger 
than the numbers in ceil, round and floor. It is better well-spread when we use more 
sequences for clustering results. 
6 Conclusions 
In recent years, biological informatics has already become more important.  
More powerful analytic techniques are essential to retrieve the information from the 
biological data. And here a partitioning-based clustering algorithm is proposed to cluster 
gene expression time series. 
For measuring time series similarities, the LCSS measurement is proposed to pay 
attention to both similar expression segments and the intensity of gene expression, 
simultaneously. Furthermore, it is more suitable for overcoming the problem of outlier 
and shift effect for discovering the longest common segments. 
In clustering, with mining frequent patterns, time series which support identical 
patterns are grouped in the same cluster, and these clusters generate greater confidence in 
predicting the target number of clusters. 
Finally, the partitioning-based clustering algorithm using nearest neighbours for 
object re-assignment is proposed. With verification of the accuracy of the clustering, the 
results show higher values and better cluster quality. 
Acknowledgement 
This work was partially supported by a grant from the National Science Council of 
Taiwan under grant NSC 97-2221-E415-013. 
References 
Agrawal, R. and Srikant, R. (1995) ‘Mining sequential patterns’, IEEE International Conference on 
Data Engineering, Taipei, Taiwan, pp.6–10. 
Agrawal, R., Lin, K-I., Sawhney, H.S. and Shim, K. (1995) ‘Fast similarity search in the presence 
of noise, scaling, and translation in time-series databases’, International Conference on Very 
Large Data Bases, Zurich, Switzerland, pp.490–501. 
Berndt, D. and Clifford, J. (1994) ‘Using dynamic time warping to find patterns in time series’, 
Workshop on Knowledge Discovery in Databases, Seattle, Washington, USA, pp.359–370. 
 
   
 
   
   
 
   
   
 
   
   76 H-C. Kuo et al.     
 
    
 
 
   
   
 
   
   
 
   
       
 
Tamayo, P., Slonim, D., Mesirov, J., Zhu, Q., Kitareewan, E., Dmitrovsky, E., Lander, E. and 
Golub, T. (1999) ‘Interpreting patterns of gene expression with self-organizing maps, method 
and application to hematopoietic differentiation’, Proceedings of the National Academy of 
Sciences of the United States of America, Washington DC, USA, Vol. 96, pp.2907–2912. 
Tanimoto, T.T. (1958) An Elementary Mathematical Theory of Classification and Prediction, 
November, IBM Report, New York, USA. 
Wu, C-C., Kuo, C-N., Huang, J-P. and Kuo, H-C. (2004) ‘Clustering gene expression time series’, 
International Computer Symposium, Taipei, Taiwan, pp.1192–1197. 
