1 
行政院國家科學委員會專題研究計畫成果報告（完整版） 
題目：(中文) 在排隊系統裡控制到達與控制服務之理論與實務應用研究 
      (英文) Studies on Theory and Application of Controlling Arrival and Controlling Service in 
Queueing Systems 
計畫編號：NSC 96-2628-E-005-013-MY3 
執行期限：96 年 8 月 1 日至 99 年 7 月 31 日 
主持人：王國雄 教授   國立中興大學應用數學系 
研究人員：郭清章，巫佳煌，楊東育 （國立交通大學工業工程與管理系），鍾啟元，簡偵如，                       
商紓瑋 （國立中興大學應用數學系） 
 
一、中文摘要 
排隊系統可以二大類之ㄧ來處理：控制到
達或控制服務。第一大類只要專注於減少在系
統裡的顧客數。而第二大類只要集中在減少服
務者在服務顧客時之閒置時間。本整合型研究
計劃乃在探討在排隊系統裡控制到達與控制
服務之理論與實務應用研究，依據排隊系統可
以分成二大類，分別是控制到達和控制服務，
我們不僅研究以控制到達有關之排隊系統，如
F 方策 M/G/1/K 排隊系統和 F 方策 G/M/1/K
排隊系統；還研究以控制服務有關之排隊系
統，如 N 方策 M/G/1/K 排隊系統和 N 方策
G/M/1/K 排隊系統，並探討兩者間之相互關
係。本整合型研究計劃橫跨二大類排隊問題即
控制到達問題與控制服務問題，此乃為在排隊
系統裡控制到達與控制服務之理論與應用研
究。對於第一年的整合型計劃敘述如下:子計
畫一：利用遞迴方法探討有限容量 F 方策
M/G/1 排隊系統。我們著重於推導 F 方策
M/G/1/K 排隊系統之穩態分析解。子計畫二：
利用遞迴方法探討有限容量 F 方策 G/M/1/K
排隊系統。我們著重於推導 F 方策 G/M/1/K
排隊系統之穩態分析解。子計畫三：探討具啟
動服務者有限容量 N 方策 M/G/1 排隊系統。
我們著重於推導 N 方策 M/G/1/K 排隊系統之
穩態分析解。對於第二年的整合型計劃敘述如
下:子計畫一：探討有限容量 F 方策 M/G/1 排
隊系統之操作特性，我們著重於推導此系統之
穩態點系統大小分配與離開點隊伍大小分配
之顯示公式；子計畫二：探討有限容量 F 方
策 G/M/1 排隊系統之操作特性，我們著重於
推導此系統之穩態點系統大小分配與離開點
隊伍大小分配之顯示公式；子計畫三：探討 N
方策 M/G/1/K 排隊系統與 F 方策 G/M/1/K 排
隊系統的相互對偶關係。我們著重於首先推導
N 方策 M/G/1/K 排隊系統之穩態機率分配；
其次探討 F 方策 G/M/1/K 排隊系統和 N 方策
M/G/1/K 排隊系統間之相互關係。對於第三年
的整合型計劃敘述如下:子計畫一：探討有限
容量 F 方策 M/G/1 排隊系統之最佳控制並做
敏感度研究。我們首先推導此系統之最佳 F
方策，即最佳解 *F 。其次做敏感度分析；子
計畫二：探討有限容量 F 方策 G/M/1 排隊系
統之最佳控制並做敏感度研究。我們首先推導
此系統之最佳 F 方策，即最佳解 *F 。其次做
敏感度分析；子計畫三：探討 N 方策 G/M/1/K
排隊系統與 F 方策 M/G/1/K 排隊系統的相互
對偶關係。我們著重於首先推導 N 方策
G/M/1/K 排隊系統之穩態機率分配；其次探討
F 方策 M/G/1/K 排隊系統和 N 方策 G/M/1/K
排隊系統間之相互關係。 
 
關鍵詞：相互關係, M/G/1 排隊, G/M/1 排隊, 
操作特性, 敏感度分析 
Generated by Foxit PDF Creator © Foxit Software
http://www.foxitsoftware.com   For evaluation only.
3 
二、緣由與目的 
本整合型研究計劃乃在探討在排隊系統裡
控制到達與控制服務之理論與實務應用研
究。所謂 F 方策就是當在系統裡顧客數達到
系統容量時（也就是系統飽和時），沒有任何
一位顧客可以允許進到系統來接受服務，一直
到在系統裡有足夠的顧客已經完成服務，此時
在系統裡的顧客數遞減到一個門檻值  F  
( 0 1F K   )。在那時候，服務者要求一段具
有指數分配之啟動時間來開始允許對顧客服
務。 此系統維持正常操作直到在系統裡的顧
客數又達到系統之容量。Gupta [4]探討在排隊
系統裡控制顧客到達與控制服務之間的相互
關係。 Gupta [4]首先研究有限容量 N 方策
M/M/1 排隊系統含有指數分配之啟動時間，
其次研究有限容量 F 方策 M/M/1 排隊系統含
有指數分配之啟動時間，最後探討 N 方策
M/M/1 排隊系統與 F 方策 M/M/1 排隊系統之
間的相互關係。據本人所知，尚未有學者針對
含有啟動時間是指數分配之有限容量 F 方策
M/G/1 排隊系統之操作特性與敏感度分析進
行研究之。針對第一年的整合型計劃之子計畫
一及子計畫二。我們利用遞迴方法，並經過繁
雜數學運算，來推導 F 方策 M/G/1/K 及 F 方
策 G/M/1/K 排隊系統之在系統裡顧客數之機
率分配，並以 closed-form 表示。子計畫三也
是利用遞迴方法，來推導 N 方策 M/G/1/K 排
隊系統之在系統裡顧客數之機率分配，並以
closed-form 表示。針對第二年的整合型計劃
之子計畫一及子計畫二。我們推導 F-Policy 
M/G/1/K 及 G/M/1/K 排隊系統之穩態點系統
大小分配與離開點隊伍大小分配之顯示公
式。本子計畫三首先推導 N 方策 M/G/1/K 排
隊系統之穩態機率分配；其次探討 F 方策
G/M/1/K 排隊系統和 N 方策 M/G/1/K 排隊系
統間之相互關係。針對第三年的整合型計劃之
子計畫一及子計畫二。我們探討 F-Policy 
M/G/1/K 及 G/M/1/K 排隊系統之最佳控制並
做敏感度分析。我們首先建立成本函數，利用
電腦軟體 MAPLE 求出最佳解 *F 。依據不同
系統參數之指定值或不同成本元素之數值做
敏感度分析。本子計畫三首先推導 N 方策
G/M/1/K 排隊系統之穩態機率分配；其次探討
F 方策 M/G/1/K 排隊系統和 N 方策 G/M/1/K
排隊系統間之相互關係。  
三、研究方法 
本「子計畫一、二」之第一年是利用輔助變
數技巧，把輔助變數視為剩餘顧客到達時間
（或剩餘顧客服務時間），來建立 F 方策
M/G/1/K 及 F 方策 G/M/1/K 排隊系統之穩態
方程式（steady-state equations）。其次，利用
遞迴方法，並經過繁雜數學運算，來推導 F
方策 M/G/1/K 及 F 方策 G/M/1/K 排隊系統之
在系統裡顧客數之機率分配，並以 closed-form
表示。本「子計畫三」之第一年也是利用遞迴
方法，來推導 N 方策 M/G/1/K 排隊系統之在
系統裡顧客數之機率分配，並以 closed-form
表示。 
本「子計畫一、二」之第二年，我們利用跟 
Laxmi and Gupta (1999)相同的結果來完成：
（1）推導F-Policy M/G/1/K及 F方策G/M/1/K
排隊系統之穩態點系統大小分配之顯示公
式；（2）推導 F-Policy M/G/1/K 及 F 方策
G/M/1/K 排隊系統之離開點隊伍大小分配之
顯示公式；（3）利用兩者顯示公式之關係，
來推導在隊伍等候時間之分配，並求出其平均
等候時間等。本「子計畫三」之第二年首先利
用遞迴方法來推導 N 方策 M/G/1/K 排隊系統
之穩態機率分配；其次探討 F 方策 G/M/1/K
排隊系統和 N 方策 M/G/1/K 排隊系統間之相
互關係。 
 
本「子計畫一、二」之第三年，我們首先建立
每單位時間總期望成本函數，利用電腦軟體
MAPLE 及數值方法求出最佳解 *F 。給定不同
系統參數之數值或不同成本元素之數值，針對
最佳解 *F 做敏感度分析。本「子計畫三」之
第三年首先利用遞迴方法來推導 N 方策
Generated by Foxit PDF Creator © Foxit Software
http://www.foxitsoftware.com   For evaluation only.
5 
arrival rates on the N-policy of M/G/1 with 
server setup, Applied Mathematical 
Modelling, Vol. 23, No. 4, pp. 289-299, 
1999. 
7. Ke, J.-C., The operating characteristic 
analysis on a general input queue with 
N-policy and a startup time, Mathematical 
Methods of Operations Research, Vol. 57, 
No. 2, pp. 235-254, 2003. 
8. Ke, J.-C., Wang, K.-H., A recursive method 
for N-policy G/M/1 queueing system with 
finite capacity, European Journal of 
Operational Research, Vol. 142, No. 3, pp. 
577-594, 2002. 
9. Kimura, T., Optimal control of an M/G/1 
queueing system with removable server via 
diffusion approximation, European Journal 
of Operational Research, Vol. 8, No. 4, pp. 
390-398, 1981. 
10. Lee, H.W., Park, J.O., Optimal strategy in 
N-policy production system with early 
set-up, Journal of the Operational Research 
Society, Vol. 48, No. 3, pp. 306-313, 1997. 
11. Medhi, J., Templeton, J.G.C., A Poisson 
input queue under N-policy and with a 
general start up time, Computers and 
Operations Research , Vol. 19, No. 1, pp. 
35-41, 1992.  
12. Takagi, H., A M/G/1/K queues with 
N-policy and setup times, Queueing 
Systems, Vol. 14, No. 1-2, pp. 79-98, 1993. 
13. Teghem, J.Jr., Optimal control of a 
removable server in an M/G/1 queue with 
finite capacity, European Journal of 
Operational Research, Vol. 31, No. 3, pp. 
358-367, 1987. 
14. Wang, K.-H., Ke, J.-C., A recursive method 
to the optimal control of an M/G/1 
queueing system with finite capacity and 
infinite capacity, Applied Mathematical 
Modelling, Vol. 24, No. 12, pp. 899-914, 
2000. 
15. Wang, K.-H., Ke, J.-C., Control policies of 
an M/G/1 queueing system with a 
removable and non-reliable server. 
International Transactions in Operational 
Research, Vol.9, pp. 195-212, 2002. 
16. Wang, K.-H., Wang, T.-Y., Pearn, W.L., 
Optimal control of the N policy M/G/1 
Queueing System with Server Breakdowns 
and General Startup Times.  Applied 
Mathematical Modelling, Vol. 31, No. 10, 
pp. 2199-2212, 2007.  
17. Laxmi P.V., Gupta U.C. On the 
finite-buffer bulk-service queue with 
general independent arrivals: GI/M/1/N. 
Operations Research Letter, Vol. 25, 
241-245, 1999. 
備註：本專題研究計畫成果已發表於 
1. Wang, K.-H.

, Kuo, C.-C. and Pearn, W.L. (2007)  
"Optimal Control of an M/G/1/K Queueing System 
with combined F-policy and Startup Times." Journal 
of Optimization Theory and Applications. Vol. 135, 
No. 11, pp.285-299. [SCI, 2007 Impact factor: 0.688, 
Ranking 84/165 in Mathematics, Applied] 
2. Wang, K.-H.

, Kuo, C.-C. and Pearn, W.L. (2008) 
"A Recursive Method for the F Policy G/M/1/K 
Queueing System with an Exponential Startup Time." 
Applied Mathematical Modelling. Vol. 32, No. 6, pp. 
958-970. [SCI, 2007 Impact factor: 0.572, Ranking 
52/74 in Mathematics, Interdisciplinary 
Applications] 
3. Kuo, C.-C., Wang, K.-H.   and Pearn, W.L. 
(2010)   "The Interrelationship between N 
Policy M/G/1/K and F Policy G/M/1/K Queues 
with Startup Time" International Journal of 
Quality Technology and Quantitative 
Management. (accepted on September 2, 2009) 
Generated by Foxit PDF Creator © Foxit Software
http://www.foxitsoftware.com   For evaluation only.
Author's personal copy
the number of customers in the system. This becomes particularly helpful when the supplementary variable
technique to the non-Markovian queueing system having general interarrival times or general service times
is used. Cox [2] ﬁrst introduced the supplementary variable technique. Basis on this technique, Gupta and
Rao [3,4] presented a recursive method to develop the steady-state probability distributions of the number
of failed machines for the no-spare M/G/1 machine repair problem and the cold-standby M/G/1 machine
repair problem, respectively.
Past work regarding queues may be divided into two parts according to whether the system is considered to
control the service or the arrival. In the ﬁrst category of controlling the service, the N-policy M/M/1 queueing
system without startup was ﬁrst introduced by Yadin and Naor [5]. The extension of this model can be
referred to Bell [6,7], Heyman [8], Kimura [9], Teghem [10], Wang and Ke [11], and others. Wang and Ke
[11] provided a recursive method and used the supplementary variable technique to develop the steady-state
probability distributions of the number of customers for the N-policy M/G/1/L queueing system. Ke and
Wang [12] presented a recursive method and applied the supplementary variable technique to obtain the
steady-state probability distributions of the number of customers for the N-policy G/M/1/L queueing system.
The server startup corresponds to the preparatory work of the server before starting the service. In some real-
life situations, the server often needs a startup time before beginning to provide the service. Several authors
research on queueing systems with startup time focus mainly on the N-policy M/G/1 queues. Baker [13] ﬁrst
studied the N-policy M/M/1 queueing system with an exponential startup time. Borthakur et al. [14] extended
Baker’s model to the general startup time. The N-policy M/G/1 queueing system with startup time was inves-
tigated by several authors such as Medhi and Templeton [15], Takagi [16], Lee and Park [17], Hur and Paik
[18], Krishna et al. [19], and so on. Ke [20] presented a recursive method and used the supplementary variable
technique to compute the operating characteristics for the N-policy G/M/1/L queueing system with an expo-
nential startup time. In the second category of controlling the arrivals, the analytical developments for con-
trolling the arrivals in queueing problems are rarely found in the literature, which are particularly for
service time and interarrival time following general type. The work of related problems in the past mainly con-
centrates on Markovian system. The pioneering work in steady-state analytical solutions of the F-policy
M/M/1/K queueing system with an exponential startup time was ﬁrst derived by Gupta [1]. Through a series
of propositions, the relationship between the operating N-policy and the operating F-policy are established by
Gupta [1].
Practically, the memoryless property of the arrival (input) process does not always meets the needs of appli-
cations because, for interarrival time, general distribution, rather than exponential distribution, appears to be
more appropriate and reasonable. General distribution can include the special cases of exponential, Erlang,
hyper-exponential, and deterministic, etc. However, aside from theoretical arguments, many real-life situa-
tions satisfy the assumptions of Markovian conditions for service time. Hence, we may consider inevitably
to analyze the F-policy G/M/1/K queueing system.
In Section 2, the queueing model is brieﬂy described. Practical justiﬁcation of the model is also included.
Section 3 provides a recursive method using the supplementary variable technique and treating the supplemen-
tary variable as the remaining interarrival time, to obtain the steady-state probability distributions of the num-
ber of customers in the F-policy G/M/1/K queueing system. We illustrate the solution algorithm by presenting
three simple examples for three diﬀerent interarrival time distributions: exponential (denoted M), 3-stage
Erlang (denoted E3), and deterministic (denoted D). In Section 4, various system performance measures are
presented. The total expected cost function per unit time for the F-policy G/M/1/K queueing system with
startup times is developed in Section 4. Numerical and comparative results are shown in Section 5. Finally,
Section 6 consists of some concluding remarks.
2. Description of the system
We consider the category of controlling the arrivals to the F-policy G/M/1/K queueing system with expo-
nential startup time. It is assumed that the times elapsing between successive arrivals are independent and
identically distributed (i.i.d) random variables having general distribution A(v) (vP 0), a probability density
function a(v) (vP 0) and mean interarrival time b1. The service times of the customers are independent
random variables having a common exponential distribution with mean 1=l. Let us assume that customers
K.-H. Wang et al. / Applied Mathematical Modelling 32 (2008) 958–970 959
Author's personal copy
Let us deﬁne
P 0;nðv; tÞdv ¼ PrfNðtÞ ¼ n; v < V ðtÞ 6 vþ dvg; vP 0; n ¼ 0; 1; . . . ; F ;
P 1;nðv; tÞdv ¼ PrfNðtÞ ¼ n; v < V ðtÞ 6 vþ dvg; vP 0; n ¼ 0; 1; . . . ;K  1;
P 0;nðtÞ ¼
Z 1
0
P 0;nðv; tÞdv; n ¼ 0; 1; . . . ; F ;
P 1;nðtÞ ¼
Z 1
0
P 1;nðv; tÞdv; n ¼ 0; 1; . . . ;K  1:
In steady state, we deﬁne
P 0;n ¼ lim
t!1
P 0;nðtÞ; n ¼ 0; 1; . . . ;K;
P 1;n ¼ lim
t!1
P 0;nðtÞ; n ¼ 0; 1; . . . ;K  1;
P 0;nðvÞ ¼ lim
t!1
P 0;nðv; tÞ; n ¼ 0; 1; . . . ; F ;
P 1;nðvÞ ¼ lim
t!1
P 1;nðv; tÞ; n ¼ 0; 1; . . . ;K  1
and further deﬁne
P 0;nðvÞ ¼ P 0;naðvÞ; n ¼ 0; 1; . . . ; F : ð1Þ
For the F-policy G/M/1/K queueing system with server startup, we can easily obtain the steady-state equa-
tions as follows:
0 ¼ bP 0;0 þ lP 0;1; ð2Þ
0 ¼ ðbþ lÞP 0;n þ lP 0;nþ1; 1 6 n 6 F ; ð3Þ
0 ¼ lP 0;n þ lP 0;nþ1; F þ 1 6 n 6 K  1; ð4Þ
0 ¼ lP 0;K þ P 1;K1ð0Þ; ð5Þ
 d
dv
P 1;0ðvÞ ¼ bP 0;0aðvÞ þ lP 1;1ðvÞ; ð6Þ
 d
dv
P 1;nðvÞ ¼ lP 1;nðvÞ þ bP 0;naðvÞ þ P 1;n1ð0ÞaðvÞ þ lP 1;nþ1ðvÞ; 1 6 n 6 F ; ð7Þ
 d
dv
P 1;nðvÞ ¼ lP 1;nðvÞ þ P 1;n1ð0ÞaðvÞ þ lP 1;nþ1ðvÞ; F þ 1 6 n 6 K  2; ð8Þ
 d
dv
P 1;K1ðvÞ ¼ lP 1;K1ðvÞ þ P 1;K2ð0ÞaðvÞ: ð9Þ
We introduce the following Laplace–Stieltjes transforms (LST):
aðhÞ ¼
Z 1
0
ehvdAðvÞ ¼
Z 1
0
ehvaðvÞdv;
P i;nðhÞ ¼
Z 1
0
ehvP i;nðvÞdv; i ¼ 0; 1;
P i;n ¼ P i;nð0Þ ¼
Z 1
0
P i;nðvÞdv; i ¼ 0; 1;Z 1
0
ehv
o
ou
P i;nðvÞdv ¼ hP i;nðhÞ  P i;nð0Þ; i ¼ 0; 1:
Taking the LST on both sides of (6)–(9), it implies that
 hP 1;0ðhÞ ¼ bP 0;0aðhÞ þ lP 1;1ðhÞ  P 1;0ð0Þ; ð10Þ
ðl hÞP 1;nðhÞ ¼ bP 0;naðhÞ þ lP 1;nþ1ðhÞ þ P 1;n1ð0ÞaðhÞ  P 1;nð0Þ; 1 6 n 6 F ; ð11Þ
K.-H. Wang et al. / Applied Mathematical Modelling 32 (2008) 958–970 961
Author's personal copy
where
‘n ¼
ðlÞ
naðnÞðlÞ
n!aðlÞ ; 1 6 n 6 K  1;
0; otherwise:
8><
>: ð22Þ
Using (20) and (21) in (17), we obtain
P 1;nð0Þ ¼ P 1;nþ1ð0ÞaðlÞ þ
XK1
i¼nþ2
‘in1P 1;i1ð0Þ þ b unþ2;F
XF
i¼fnþ2
‘in1/i  unþ1;F/nþ1
" #
P 0;0; 0 6 n 6 K  3:
ð23Þ
Further, let us deﬁne
Wn ¼
1; n ¼ 0;P
16k6n
P
s1þs2þþsk¼n
s1;s2;;sk2f1;2;;ng
js1js2    jsk ; n ¼ 1; 2; . . . ;K  2;
0; otherwise;
8>><
>>>:
ð24Þ
where
jn ¼
1
aðlÞ þ ‘1; n ¼ 1;
‘n; n ¼ 2; 3; . . . ;K  2;
0; otherwise:
8>><
>>:
ð25Þ
Remark. The representative meaning of the above formulation (24) is to sum up all possible products of k js
in which the total of subscript values of j equals n. We may present an easily understood example for n ¼ 4:
W4 ¼ j4 þ j3j1 þ j2j2 þ j1j3 þ j1j1j2 þ j1j2j1 þ j2j1j1 þ j1j1j1j1 ¼ j4 þ 2j3j1 þ j22 þ 3j21j2 þ j41: ð26Þ
Using (24) and (25) to solve (23) recursively, and including (18), we ﬁnally have
P 1;nð0Þ ¼
XKn1
i¼1
WKni1KðK  i 1ÞP 0;0; 0 6 n 6 K  2; ð27Þ
where
KðnÞ ¼
bunþ2;F
PF
i¼fnþ2
‘in1/i  bunþ1;F/nþ1; 0 6 n 6 K  3;
l/Fþ1
aðlÞ ; n ¼ K  2:
8>><
>>:
ð28Þ
Finally, we develop the steady-state probabilities P 1;nð0Þ in terms of P 0;0. Setting h ¼ 0 in (10)–(13) yields
P 1;nð0Þ ¼
1
l
P 1;n1ð0Þ  b
Xfn1
i¼0
/iP 0;0
" #
; 1 6 n 6 K  1: ð29Þ
As P 1;1ð0Þ; P 1;2ð0Þ; . . . ; P 1;K1ð0Þ are known, P 1;1ð0Þ; P 1;2ð0Þ; . . . ; P 1;K1ð0Þ can be solved recursively using (29) in
terms of P 0;0.
K.-H. Wang et al. / Applied Mathematical Modelling 32 (2008) 958–970 963
Author's personal copy
P 0;3ð0Þ ¼ P 0;4ð0Þ ¼ P 0;5ð0Þ ¼ /3P 0;0 ¼
1 a
a3
P 0;0:
Step 3. For n ¼ 1; 2; 3, compute ‘n and jn using (22) and (24), respectively.
We ﬁrst compute ‘n. For n ¼ 1; 2; 3, using (22) yields ‘1 ¼ r=ð1þ rÞ, ‘2 ¼ r2=ð1þ rÞ2 and
‘3 ¼ r3=ð1þ rÞ3, where r ¼ l=k.
Next, we compute jn. For n ¼ 1; 2; 3, using (24) yields
j1 ¼ ð1þ rþ r2Þ=ð1þ rÞ; j2 ¼ r2=ð1þ rÞ2 and j3 ¼ r3=ð1þ rÞ3:
Step 4. For n ¼ 0; 1; 2; 3, compute Wn using (23).
It follows from (23) that
W0 ¼ 1; W1 ¼ ð1þ rþ r2Þ=ð1þ rÞ; W2 ¼ 1þ r2; and W3 ¼ ð1þ rþ r2 þ r3 þ r4Þ=ð1þ rÞ:
Step 5. For n ¼ 0; 1; 2; 3, compute KðnÞ using (28).
From (28) we have
Kð0Þ ¼  lð1 aÞ
2ðaþ arþ r2Þ
a3ð1þ rÞ ; Kð1Þ ¼ 
lð1 aÞ2
a3
; Kð2Þ ¼ 0; and Kð3Þ ¼ lð1 aÞð1þ rÞ
a3
:
Step 6. For n ¼ 0; 1; 2; 3, compute P 1;nð0Þ using (27) in terms of P0,0.
Using (27) yields
P 1;0ð0Þ ¼ ½W3Kð3Þ þW2Kð2Þ þW1Kð1Þ þW0Kð0ÞP 0;0 ¼ lð1 aÞðr
2 þ r3 þ r4 þ arþ a2Þ
a3
P 0;0;
P 1;1ð0Þ ¼ ½W2Kð3Þ þW1Kð2Þ þW0Kð1ÞP 0;0 ¼ lð1 aÞðrþ r
2 þ r3 þ aÞ
a3
P 0;0;
P 1;2ð0Þ ¼ ½W1Kð3Þ þW0Kð2ÞP 0;0 ¼ lð1 aÞð1þ rþ r
2Þ
a3
P 0;0;
P 1;3ð0Þ ¼ W3Kð3ÞP 0;0 ¼ lð1 aÞð1þ rÞa3 P 0;0:
Step 7. For n ¼ 1; 2; 3; 4, compute P 1;nð0Þ using (29) in terms of P0,0.
It implies from (29) that
P 1;1ð0Þ ¼
rð1 aÞðrþ r2 þ r3 þ aÞ
a3
P 0;0; P 1;2ð0Þ ¼
rð1 aÞð1þ rþ r2Þ
a3
P 0;0;
P 1;3ð0Þ ¼
rð1 aÞð1þ rÞ
a3
P 0;0; and P 1;4ð0Þ ¼
rð1 aÞ
a3
P 0;0:
Step 8. Compute P 1;0ð0Þ using (32) in terms of P0,0.
Using (32) yields P 1;0ð0Þ ¼ rð1aÞðr
2þr3þr4þarþa2Þ
a3 P 0;0.
Step 9. Determine P0,0 using (33). Thus P

0;nð0Þ ðn ¼ 1; 2; . . . ; 5Þ are achieved from Step 2, and
P 1;nð0Þ ðn ¼ 0; 1; . . . ; 4Þ are achieved from Step 7 and Step 8.
P 0;0 ¼ a
3
a3 þ ð1 aÞð3þ aþ a2Þ þ rð1 aÞð3þ aþ a2 þ arþ 3þ 3rþ 3r2 þ 2r3 þ r4Þ :
It is to be noted that these results are in accordance with the expressions given by Gupta [1, p. 1006].
Example 2. (For E3/M/1/K queueing system). Let k denote the interarrival rate. The 3-stage Erlang
distribution is made up of three independent and identical exponential stages, each with mean 1=3k. We set the
mean interarrival time b1 ¼ 1=k, F ¼ 1, and K ¼ 3. In this case, we have
aðhÞ ¼ 3k
3kþ h
 3
:
K.-H. Wang et al. / Applied Mathematical Modelling 32 (2008) 958–970 965
Author's personal copy
Step 1. For each n ¼ 0; 1; 2; 3, compute /n using (16).
Using (16), we obtain
/0 ¼ 1; /1 ¼ ð1 aÞ=a; and /2 ¼ /3 ¼ ð1 aÞ=a2; where a ¼ l=ðlþ bÞ:
Step 2. For each n ¼ 1; 2; 3, compute P 0;nð0Þ using (14) in terms of P0,0.
Using (14), we ﬁnally get
P 0;1ð0Þ ¼ /1P 0;0 ¼
1 a
a
P 0;0; P 0;2ð0Þ ¼ P 0;3ð0Þ ¼ /2P 0;0 ¼
1 a
a2
P 0;0:
Step 3. Compute ‘1 and j1 using (22) and (25), respectively.
Using (22) yields ‘1 ¼ r, where r ¼ l=k. Form (25), we obtain j1 ¼ er  r.
Step 4. For each n ¼ 0; 1, compute Wn using (23).
It implies from (23) that W0 ¼ 1 and W1 ¼ er  r.
Step 5. For each n ¼ 0; 1, compute KðnÞ using (28).
It follows from (28) that Kð0Þ ¼  lð1aÞ2a2 and Kð1Þ ¼ lð1aÞe
r
a2 .
Step 6. For each n ¼ 0; 1, compute P 1;nð0Þ using (27) in terms of P0,0.
Using (27) yields
P 1;0ð0Þ ¼ ½W1Kð1Þ þW0Kð0ÞP 0;0 ¼ lð1 aÞðe
2r  rer þ a 1Þ
a2
P 0;0;
P 1;1ð0Þ ¼ W0Kð1ÞP 0;0 ¼ lð1 aÞe
r
a2
P 0;0:
Step 7. For each n ¼ 1; 2, compute P 1;nð0Þ using (29) in terms of P0,0.
It implies from (29) that
P 1;1ð0Þ ¼
ð1 aÞðe2r  rer  1Þ
a2
P 0;0 and P 1;2ð0Þ ¼
ð1 aÞðer  1Þ
a2
P 0;0:
Step 8. Compute P 1;0ð0Þ using (32) in terms of P0,0.
Using (32) yields P 1;0ð0Þ ¼ ð1aÞ½2þarð1rÞe
rðerþ1rÞ
a2 P 0;0.
Step 9. Determine P0,0 using (33). Thus P

0;nð0Þ ðn ¼ 1; 2; 3Þ are achieved from Step 2, and P 1;nð0Þðn ¼ 0; 1; 2Þ
are achieved from Steps 7 to 8.
P 0;0 ¼ a
2
re2rð1 aÞ þ rerð1 aÞð1 rÞ þ 2 aþ ar a2r :
4. Optimal F-policy
Some important system performance measures of the F-policy G/M/1/K queueing system with exponential
startup time are ﬁrst deﬁned as follows:
Ls  the expected number of customers in the system;
Pb  the probability that the server is busy;
Ps  the probability that the server requires a startup time before starting the service;
Pbl  the probability that the server is blocked.
The expressions for Ls, Pb, Ps, and Pbl are given by
Ls ¼
XK
n¼1
nP 0;n þ
XK1
n¼1
nP 1;n;
P b ¼
XK
n¼0
P 0;n þ
XK1
n¼0
P 1;n;
K.-H. Wang et al. / Applied Mathematical Modelling 32 (2008) 958–970 967
Author's personal copy
In this section we provide the numerical results of the optimal value F * and the minimum expected cost for
three interarrival time distributions and speciﬁc values of k, l, b. We ﬁrst ﬁx ðl; bÞ ¼ ð1:0; 3:0Þ and choose
diﬀerent values of k ¼ 0:55; 0:65; 0:75. Next, we ﬁx ðk; bÞ ¼ ð0:7; 3:0Þ and consider various values of
l ¼ 1:0; 1:1; 1:2. Finally, we ﬁx ðk; lÞ ¼ ð0:7; 1:0Þ and select diﬀerent values of b ¼ 2:0; 4:0; 5:0.
The optimal value of F, F *, and its minimum expected cost TCðF Þ for the above ﬁve cases are shown in
Tables 1–3. For ﬁxed values of ðl; bÞ and various values of k in Tables 1–3, we observe that (i) TCðF Þ
increases as k increases for any case; and (ii) F * decreases as k increases for any case. For ﬁxed values of
ðk; bÞ and various values of l in Tables 1–3, we ﬁnd that (i) TCðF Þ decreases as l increases for any case;
and (ii) F * increases as l increases for any case. Again, for ﬁxed ðk; lÞ and various values of b in Tables
1–3, we observe that (i) TCðF Þ slightly decreases as b increases for any case; and (ii) F * does not change
at all when b changes from 2.0 to 5.0 for any case. Intuitively, F * is insensitive to changes in b.
It can be easily seen from Tables 1–3 that (i) F * increases as Ch decreases (see cases 4–5); and (ii) Ch has a
larger eﬀect on F * than Cb, Cs and Cbl (see cases 3–4, cases 2–3 and cases 1–2).
6. Conclusions
The analytical steady-state results developed in this paper would be useful, which is signiﬁcant to practitio-
ners and system designers. The main objective of this paper is threefold. We have ﬁrst provided a recursive
Table 2
The optimal value of F and its minimum expected cost for 3-stage Erlang interarrival time
ðl; bÞ ¼ ð1:0; 3:0Þ ðk; bÞ ¼ ð0:7; 3:0Þ ðk;lÞ ¼ ð0:7; 1:0Þ
k l b
0.55 0.65 0.75 1.0 1.1 1.2 2.0 4.0 5.0
Case 1 F * 7 5 4 4 7 9 4 4 4
TC(F *) 118.991 143.288 170.687 156.448 139.842 126.868 156.450 156.447 156.447
Case 2 F * 9 7 5 6 9 12 6 6 6
TC(F *) 118.991 143.291 170.747 156.463 139.844 126.868 156.465 156.462 156.462
Case 3 F * 9 7 5 6 9 11 6 6 6
TC(F *) 118.991 143.291 170.750 156.464 139.844 126.868 156.466 156.463 156.462
Case 4 F * 8 6 4 5 8 11 5 5 5
TC(F *) 132.741 159.539 189.471 173.957 155.752 141.451 173.959 173.956 173.955
Case 5 F * 5 4 3 3 5 7 3 3 3
TC(F *) 137.236 166.178 199.711 182.155 162.033 146.552 182.157 182.153 182.153
Table 3
The optimal value of F and its minimum expected cost for deterministic interarrival time
ðl; bÞ ¼ ð1:0; 3:0Þ ðk; bÞ ¼ ð0:7; 3:0Þ ðk;lÞ ¼ ð0:7; 1:0Þ
k l b
0.55 0.65 0.75 1.0 1.1 1.2 2.0 4.0 5.0
Case 1 F * 10 6 4 5 7 10 5 5 5
TC(F *) 117.440 140.710 166.469 153.130 137.435 125.030 153.130 153.129 153.129
Case 2 F * 10 7 5 6 9 12 6 6 6
TC(F *) 117.440 140.710 166.477 153.131 137.435 125.030 153.131 153.130 153.130
Case 3 F * 12 7 5 6 9 12 6 6 6
TC(F *) 117.440 140.710 166.478 153.131 137.435 125.030 153.131 153.131 153.130
Case 4 F * 9 6 5 5 8 11 6 5 5
TC(F *) 131.190 156.960 185.224 170.630 153.344 139.613 170.630 170.630 170.630
Case 5 F * 6 4 3 4 6 8 4 4 4
TC(F *) 134.911 162.315 193.445 177.193 158.425 143.794 177.193 177.193 177.193
K.-H. Wang et al. / Applied Mathematical Modelling 32 (2008) 958–970 969
J Optim Theory Appl (2007) 135: 285–299
DOI 10.1007/s10957-007-9253-6
Optimal Control of an M/G/1/K Queueing System
with Combined F Policy and Startup Time
K.-H. Wang · C.-C. Kuo · W.L. Pearn
Published online: 24 July 2007
© Springer Science+Business Media, LLC 2007
Abstract We investigate the optimal management problem of an M/G/1/K queue-
ing system with combined F policy and an exponential startup time. The F policy
queueing problem investigates the most common issue of controlling the arrival to
a queueing system. We present a recursive method, using the supplementary vari-
able technique and treating the supplementary variable as the remaining service time,
to obtain the steady state probability distribution of the number of customers in the
system. The method is illustrated analytically for exponential service time distribu-
tion. A cost model is established to determine the optimal management F policy at
minimum cost. We use an efficient Maple computer program to calculate the opti-
mal value of F and some system performance measures. Sensitivity analysis is also
investigated.
Keywords Fpolicy, M/G/1/K queue · Optimization · Recursive methods ·
Sensitivity analyses · Startup times · Supplementary variables
1 Introduction
A supplementary variable technique is used to study the optimal management prob-
lem of the F policy M/G/1/K queueing system where the server needs a startup time
before allowing customers in the system and K < ∞ denotes the maximum number
Communicated by Y.C. Ho.
K.-H. Wang ()
Department of Applied Mathematics, National Chung-Hsing University, Taichung, Taiwan, ROC
e-mail: khwang@amath.nchu.edu.tw
C.-C. Kuo · W.L. Pearn
Department of Industrial Engineering and Management, National Chiao Tung University, Hsin Chu,
Taiwan, ROC
J Optim Theory Appl (2007) 135: 285–299 287
to determine the optimal management F policy to minimize the total expected cost
per customer per unit time.
2 Description of the System
We consider controlling the arrivals to a finite capacity M/G/1/K queueing system
with combined F policy exponential startup time. It is assumed that customers ar-
rive according to a Poisson process with parameter λ, and the service time of the
successive customers are independent and identically distributed (i.i.d.) random vari-
ables having a distribution S(u) (u ≥ 0), a probability density function s(u) (u ≥ 0)
and mean service time s1. The arrival process is independent of the service process.
We assume that arriving customers form a single waiting line based on the order of
their arrivals; that is, the first-come, first-served discipline is followed. Suppose that
the server can serve only one customer at a time. Customers entering into the ser-
vice facility and finding that the server is busy have to wait in the queue until the
server is available. Gupta [1] first introduced the concept of a F policy. The defin-
ition of a F policy is described as follows: When the number of customers in the
system reaches its capacity K (i.e. the system becomes full), no further arriving cus-
tomers are allowed to enter the system until enough customers in the system have
been served so that the number of customers in the system decreases to a threshold
value F (0 ≤ F < K − 1). At that time, the server requires to take an exponential
startup time with parameter β to start allowing customers in the system. Thus, the
system operates normally until the number of customers in the system reaches its
capacity at which time the above process is repeated all over again.
3 Steady State Results
We use the following supplementary variable: U ≡ remaining service time for the
customer in service. The state of the system at time t is given by
N(t) ≡ number of customers in the system,
U(t) ≡ remaining service time for the customer being served.
Let us define
P0,n(u, t)du = Pr{N(t) = n,u < U(t) ≤ u + du}, u ≥ 0, n = 0,1, . . . ,K,
P1,n(u, t)du = Pr{N(t) = n,u < U(t) ≤ u + du}, u ≥ 0, n = 0,1, . . . ,K − 1,
P0,n(t) =
∫ ∞
0
P0,n(u, t)du, n = 0,1, . . . ,K,
P1,n(t) =
∫ ∞
0
P1,n(u, t)du, n = 0,1, . . . ,K − 1.
J Optim Theory Appl (2007) 135: 285–299 289
−(d/du)P1,n(u) = −λP1,n(u) + λP1,n−1(u) + P1,n+1(0)s(u),
F + 1 ≤ n ≤ K − 2, (18)
−(d/du)P1,K−1(u) = −λP1,K−1(u) + λP1,K−2(u). (19)
Further define
S∗(θ) =
∫ ∞
0
e−θudS(u) =
∫ ∞
0
e−θus(u)du,
P ∗0,n(θ) =
∫ ∞
0
e−θuP0,n(u)du,
P ∗1,n(θ) =
∫ ∞
0
e−θuP1,n(u)du,
P0,n = P ∗0,n(0) =
∫ ∞
0
P0,n(u)du,
P1,n = P ∗1,n(0) =
∫ ∞
0
P1,n(u)du,
∫ ∞
0
e−θu ∂
∂u
P0,n(u)du = θP ∗0,n(θ) − P0,n(0),
∫ ∞
0
e−θu ∂
∂u
P1,n(u)du = θP ∗1,n(θ) − P1,n(0).
Therefore, if the LST is taken of both sides of (12–14) and (16–19), it is found that
−θP ∗0,n(θ) = −βP0,nS∗(θ) + P0,n+1(0)S∗(θ) − P0,n(0), 1 ≤ n ≤ F, (20)
−θP ∗0,n(θ) = P0,n+1(0)S∗(θ) − P0,n(0), F + 1 ≤ n ≤ K − 1, (21)
−θP ∗0,K(θ) = λP ∗1,K(θ) − P0,K(0), (22)
(λ − θ)P ∗1,1(θ) = βP0,1S∗(θ) + λP1,0S∗(θ) + P1,2(0)S∗(θ) − P1,1(0), (23)
(λ − θ)P ∗1,n(θ) = βP0,nS∗(θ) + λP ∗1,n−1(θ) + P1,n+1(0)S∗(θ) − P1,n(0),
2 ≤ n ≤ F, (24)
(λ − θ)P ∗1,n(θ) = λP ∗1,n−1(θ) + P1,n+1(0)S∗(θ) − P1,n(0),
F + 1 ≤ n ≤ K − 2, (25)
(λ − θ)P ∗1,K−1(θ) = λP ∗1,K−2(θ) − P1,K−1(0). (26)
3.1 Recursive Method
A recursive method is developed to obtain P ∗0,n(0) and P ∗1,n(0). Our solution algo-
rithm will first obtain P0,n(0) (1 ≤ n ≤ K) which are then used for finding P ∗0,n(0).
J Optim Theory Appl (2007) 135: 285–299 291
P
∗(l−1)
1,n (λ) = −(1/l)[P1,n+1(0)S∗(l)(λ) + βϕn,F φnP0,0S∗(l)(λ) + λP ∗(l)1,n−1(λ)],
2 ≤ n ≤ K − 2, l = 1, . . . ,K − n − 1, (37)
P ∗1,K−1(λ) = −λP ∗(1)1,K−2(λ), (38)
where P ∗(0)1,n (λ) = P ∗1,n(λ) and S∗(l)(θ) = (dl/dθ l)S∗(θ) denote the lth derivative
of S∗(θ).
Solving (36–38) recursively, we obtain
P ∗1,n(λ) = −	nS∗(λ)P1,0 −
ζn∑
i=1
[β	n−i+1φiS∗(λ)/λ]P0,0
−
n∑
i=1
[	n−i+1S∗(λ)/λ]P1,i+1(0), 1 ≤ n ≤ K − 1, (39)
where
	n =
{−[(−λ)nS∗(n)(λ)/n!S∗(λ)], 1 ≤ n ≤ K − 1,
0, otherwise.
(40)
Using (39) in (34), we obtain
P1,n(0) = [1/S∗(λ)]P1,n−1(0) +
n−2∑
i=1
	n−i−1P1,i+1(0)
+ β
[ζn−2∑
i=1
	n−i−1φi − ϕn−1,F φn−1
]
P0,0
+ λ	n−2P1,0, 3 ≤ n ≤ K − 1. (41)
We further define

n =
⎧⎪⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎪⎪⎩
1, n = 0,∑
1≤k≤n
∑
τ1+τ2+···+τk=n
κτ1κτ2 · · ·κτk ,
n = 1,2, . . . ,K − 3, τ1, τ2, . . . , τk ∈ {1,2, · · · , n}
0, otherwise,
(42)
where
κn =
⎧⎪⎨
⎪⎩
[1/S∗(λ)] + 	1, n = 1,
	n, n = 2,3, . . . ,K − 3,
0, otherwise.
(43)
Remark 3.1 The representative meaning of the above formulation (42) is to sum up
all possible products of k κs in which the total of subscript values of κ equals n. We
give an easily understood example for n = 4:
J Optim Theory Appl (2007) 135: 285–299 293
As P1,1(0),P1,2(0), . . . ,P1,K−1(0) and P1,0 are known, P ∗1,1(0),P ∗1,2(0), . . . ,
P ∗1,K−1(0) can be determined recursively using (49) and (50) in terms of P0,0.
Now the only unknown quantity is P ∗0,K(0), which can be obtained from (22). To
find it, differentiating (22) with respect to θ and setting θ = 0, we have
P ∗0,K(0) = −λP ∗(1)1,K−1(0). (51)
To find λP ∗(1)1,K−1(0), differentiating (23–26) with respect to θ and setting θ = 0, we
finally obtain
P
∗(1)
1,1 (0) = [P1,1 + βφ1P0,0S∗(1)(0) + λP1,0S∗(1)(0) + P1,2(0)S∗(1)(0)]/λ, (52)
P
∗(1)
1,n (0) = [P1,n + βϕn,F φnP0,0S∗(1)(0) + λP ∗(1)1,n−1(0) + P1,n+1(0)S∗(1)(0)]/λ,
2 ≤ n ≤ K − 2, (53)
P
∗(1)
1,K−1(0) = [P1,K−1 + λP ∗(1)1,K−2(0)]/λ. (54)
As P ∗(1)1,1 (0) is known completely from (52), the values P ∗(1)1,n (0) for n = 2,3, . . . ,
K − 1 can be found recursively from (53) and (54). Therefore, we obtain
P
∗(1)
1,K−1(0) = (1/λ)
[K−1∑
i=1
P1,i + βS∗(1)(0)
F∑
i=1
φnP0,0
+ S∗(1)(0)
K−1∑
i=2
P1,i (0) + λP1,0S∗(1)(0)
]
. (55)
Substituting (55) into (51), we have
P ∗0,K(0) = −
[K−1∑
i=1
P1,i + βS∗(1)(0)
F∑
i=1
φnP0,0 + S∗(1)(0)
×
K−1∑
i=2
P1,i (0) + λP1,0S∗(1)(0)
]
. (56)
So P ∗0,1(0),P ∗0,2(0), . . . ,P ∗0,K(0) is known in terms of P0,0, which can be determined
using the normalizing condition
K∑
i=0
P0,i +
K−1∑
i=0
P1,i = 1. (57)
To demonstrate the working of the recursive method, we first describe the solution
algorithm for calculating the steady state probabilities P ∗0,n(0) (0 ≤ n ≤ K) and
P ∗1,n(0) (0 ≤ n ≤ K − 1). Next, to illustrate the solution algorithm, we provide one
simple example for the exponential service time distribution.
J Optim Theory Appl (2007) 135: 285–299 295
Step 4. For each n = 0,1, compute 
n.
It implies from (42) that 
0 = 1 and 
1 = (1 + σ + σ 2)/σ (1 + σ).
Step 5. For each n = 1,2,3, compute A(n) and B(n).
Using (46) and (47), it follows that
A(1) = μ/σ, A(2) = μ/σ 2, A(3) = −μ/σ(1 + σ).
B(1) = −(1 − α)μ/α, B(2) = −(α + σ)(1 − α)μ/σα2,
B(3) = −(1 − α)2μ/(1 + σ)α2.
Step 6. For n = 1,2,3, using (44–45), we compute P1,n(0) in terms of P1,0 and P0,0.
It yields from (44) and (45) that
P1,1(0) = A(1)P1,0 + B(1)P0,0,
P1,2(0) = 
0[A(2)P1,0 + B(2)P0,0],
P1,3(0) = 
1[A(2)P1,0 + B(2)P0,0] + 
0[A(3)P1,0 + B(3)P0,0].
Step 7. Compute P1,0 using (48) in terms of P0,0. Thus, P1,n(0)(1 ≤ n ≤ 3) are ob-
tained from Step 6.
From (48), we finally have
P1,0 = [σ(1 − α)(α + σ + σ 2 + σ 3)/α2]P0,0 (P ∗1,0(0) = P1,0),
P1,1(0) = [σμ(1 − α)(1 + σ + σ 2)/α2]P0,0,
P1,2(0) = [σμ(1 − α)(1 + σ)/α2]P0,0,
P1,3(0) = [σμ(1 − α)/α2]P0,0.
Step 8. For each n = 1,2,3, compute P ∗1,n(0) using (49) and (50) in terms of P0,0.
Using (49) and (50) yields
P ∗1,1(0) = [σ(1 − α)(1 + σ + σ 2)/α2]P0,0,
P ∗1,2(0) = [σ(1 − α)(1 + σ)/α2]P0,0,
P ∗1,3(0) = [σ(1 − α)/α2]P0,0.
Step 9. For n = 4, compute P ∗0,n(0) using (56) in terms of P0,0.
Using (56), it follows that
P ∗0,4(0) = [(1 − α)/α2]P0,0.
Step 10. Determine P0,0 using (57). Thus P ∗0,n(0) (n = 0,1, . . . ,4) are obtained from
Steps 2 and 9, and P ∗1,n(0) (n = 0,1,2,3) are obtained from Steps 7 to 8.
P0,0 = α2/[α2 + α(1 − α) + 3(1 − α) + σ(1 − α)(3 + α + 3σ + 2σ 2 + σ 3)].
We note that these results are the same as those given in Gupta [6, p. 1006].
J Optim Theory Appl (2007) 135: 285–299 297
Table 1 The optimal value of F and its minimum expected cost (the F policy M/M/1 queueing system)
λ(μ,β) = (1.0,3.0) μ(λ,β) = (0.8,3.0) β(λ,μ) = (0.8,1.0)
0.5 0.6 0.7 1.0 1.1 1.2 2.0 4.0 5.0
Case1 F ∗ 9 7 5 4 7 10 5 4 4
T C(F ∗) 105.00 127.49 151.42 177.60 158.45 143.31 177.68 177.56 177.54
Case2 F ∗ 12 11 9 6 10 12 6 6 6
T C(F ∗) 105.00 127.50 151.55 178.29 158.66 143.37 178.36 178.25 178.23
Case3 F ∗ 12 11 8 6 10 12 6 6 6
T C(F ∗) 105.00 127.50 151.56 178.31 158.67 143.37 178.40 178.27 178.24
Case4 F ∗ 11 9 7 4 8 11 5 5 5
T C(F ∗) 117.50 142.50 169.00 197.99 176.77 160.02 198.07 197.94 197.92
Case5 F ∗ 5 4 3 2 4 6 2 2 2
T C(F ∗) 122.47 149.93 180.05 213.87 189.10 169.77 213.96 213.83 213.80
6 Numerical Results
We now perform a sensitivity analysis on the optimum value F ∗ based on changes
in the specific values of the system parameter and fix the system capacity at K = 15.
We present two simple examples for two different service time distributions such as
exponential and 3-stage Erlang. We employ the following cost elements:
Case 1: Ch = 5, Cb = 200, Cs = 250, Cbl = 300.
Case 2: Ch = 5, Cb = 200, Cs = 250, Cbl = 350.
Case 3: Ch = 5, Cb = 200, Cs = 300, Cbl = 350.
Case 4: Ch = 5, Cb = 225, Cs = 300, Cbl = 350.
Case 5: Ch = 10, Cb = 225, Cs = 300, Cbl = 350.
The optimal value of F , F ∗, and its minimum expected cost T C(F ∗) for the
above five cases are shown in Tables 1, 2. We first fix (μ,β) and vary the val-
ues of λ. Tables 1, 2 reveal that: (i) T C(F ∗)increases as λ increases for any cases;
(ii) F ∗decreases as λ increases for any cases. Next, we fix (λ,β) and vary the values
of μ. We observe from Tables 1, 2 that: (i) T C(F ∗)decreases as μ increases for any
cases; (ii) F ∗increases as μ increases for any cases. Finally, we fix (λ,μ) and vary
the values of β . It appears from Tables 1, 2 that: (i) T C(F ∗)slightly decreases as β
increases for any cases; (ii) F ∗does not change at all when β changes from 2.0 to 5.0
for any cases. Intuitively, F ∗ is insensitive to changes in β .
It can be easily seen from Tables 1, 2 that (i) F ∗ increases as Ch decreases or Cbl
increases (see Case 4–5 and Case 1–2) and that (ii) Chand Cbl have a larger effect on
F ∗ than Cb and Cs (see Case 3–4 and Case 2–3).
7 Conclusions
In this paper, we have provided a recursive method for computing the steady state
probability distribution of the number of customers in a finite system. We also illus-
J Optim Theory Appl (2007) 135: 285–299 299
13. Baker, K.R.: A note on operating policies for the queue M/M/1 with exponential startups. INFOR
11(1), 71–72 (1973)
14. Borthahur, A., Medhi, J., Gohain, R.: Poisson input queueing systems with startup time and under
control operating policy. Comput. Oper. Res. 14(1), 33–40 (1987)
15. Medhi, J., Templeton, J.G.C.: A Poisson input queue under N policy and with a general startup time.
Comput. Oper. Res. 19(1), 35–41 (1992)
16. Takagi, H.: A M/G/1/K queues with N policy and setup times. Queueing Syst. 14(1–2), 79–98 (1993)
17. Lee, H.W., Park, J.O.: Optimal strategy in N policy production system with early setup. J. Oper. Res.
Soc. 48(3), 306–313 (1997)
18. Hur, S., Paik, S.J.: The effect of different arrival rates on the N policy of M/G/1 with server setup.
Appl. Math. Model. 23(4), 289–299 (1999)
19. Ke, J.C.: The operating characteristic analysis on a general input queue with N policy and a startup
time. Math. Methods Oper. Res. 57(2), 235–254 (2003)
三、預期效益 
 
    本人此次參訪除了提供一個難能可貴的國際跨領域合作機會，且藉著這次參加國際會議
之機會能與更多國際學者合作。期待能夠對本人專長領域之限制有所突破，更期待能夠解決
可靠度最佳化問題及發展新型的演算法。這次本人參訪的主要目標。 
 
 
 
無研發成果推廣資料 
