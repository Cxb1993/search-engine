系統晶片測試架構之診斷設計
“Diagnosable Design of SoC Testing Architectures”
計畫編號：NSC97-2221-E-259-033
執行期間：97 年 8 月 1日 至 98 年 7 月 31 日
主持人：紀新洲 東華大學資訊工程系副教授
一、中文摘要
現今系統晶片(System-On-a-Chip, SoC)設
計的發展已趨近成熟，許多系統設計者為了縮
短產品設計的時間，使用已設計好的核心
(Core)，組合成完整的系統晶片。在 SoC 設計
中，由於重覆使用已設計好的核心，系統設計
者需使用具有可測性(Testability)的核心，以便
將來整個晶片完成後，可針對晶片系統中每個
核心個別測試。若能使用標準測試介面，將測
試資料由晶片外部傳送至每個核心中，則未來
系統設計者便能輕易規劃系統晶片內以核心
為基礎的測試(Core-Based Testing)架構。IEEE
P1500 SECT 便是一個為系統晶片而發展出來
的測試架構標準。IEEE P1500 SECT 能夠提供
核心內部的測試、測試資訊的傳達、對核心的
測試控制及整合系統晶片的測試及最佳化，使
得 SoC 系統設計者能夠測試每個核心，整合適
當的系統架構。若 IEEE P1500 SECT 中資料傳
輸或控制的硬體電路產生錯誤時，則嚴重影響
到 SoC 測試的正確性。本計畫研究 IEEE P1500
SECT 硬體電路之測試方法，使用測試方法為
基礎進而提出診斷方式，以提供修復(Repair)
技術所需資訊。
英文摘要
The development of system-on-chip (SoC)
design has become more and more mature
nowadays. Many designers employ reusable IP
cores and integrate them in a single chip in
order to shorten design time. However, since
reusable cores are used, the cores need to
provide testability. As such, we can test each
core individually after the chip is manufactured.
If a standard testing interface is provided, we
can then feed the test data to each core from the
outside of the chip conveniently. IEEE P1500
SECT is a proposed standard interface for
core-based testing. IEEE P1500 SECT can
provide core internal tests, core test knowledge
transfer, test access to embedded cores, and
system chip test integration and optimization.
Hence, it makes system designers be able to test
each core and integrate suitable system
architectures. This project studies the test
method for the IEEE P1500 SECT hardware
architecture. Diagnosis based on the test
method is employed and provides information
for repair.
二、計畫的緣由與目的
現今晶片系統(System-On-a-Chip, SoC)設
計的發展已趨近成熟，許多系統設計者為了縮
短產品設計的時間，使用已設計好的核心
(Core)，組合成完整的系統晶片。以設計觀點
分析，SoC 就像是使用不同功能的 IC 整合成
完整的電路板 (System-On-Board, SoB)，但就
測試電路的角度分析，SoB 的電路測試主要在
於個別晶片之間的接線測試；而 SoC 設計中，
由於重覆使用已設計好的核心，系統設計者需
Core
WIR WBY
TAM - In TAM - Out
Wrapper
Cell
Wrapper
Boundary
Register(WBR)
Wrapper
Serial
Input(WSI)
Wrapper Interface
Port(WIP)
Wrapper
Serial
Output(WSO)
Wrapper
Instruction
Register(WIR)
Wrapper
Bypass
圖 2. 被測試介面所覆蓋的核心設計
WIP是一組控制訊號，可控制P1500 Serial
Interface Layer (SIL) 和 TAM。IEEE P1500
SECT 規定 WIP 訊號有 WSI、WSO、WRCK、
WRSTN、SelectWIR、 CaptureWR、ShiftWR
及 UpdateWR，以測試觀點來看，每個具 IEEE
P1500 SECT 的核心都需要這些標準的訊號，
才可以達到隨插即用的目的。此外這些訊號專
門給 IEEE P1500 SECT 使用的，不能和其他訊
號端共同使用。
WRCK 為時脈訊號， WRSTN 為重置訊
號。WSI, WSO 分別為 Wrapper 的輸入端與輸
出端。SelectWIR 是控制 WSI 與 WSO 之間的
連接路徑，此路徑是經由 WIR 或其他暫存器
(如 WBR, WBY) 。CaptureWR、ShiftWR 及
UpdateWR 則用來控制 WIR 或 WBR 的行為。
WIR 是串接的指令暫存器，指令經由 WSI
進入 Shift Stage，再進入 Update Stage，最後經
由 Instruction Decoder 產生控制訊號，其控制
訊號可用來控制其他的資料暫存器(例如WBR,
WBY)的行為。此外 WIR 也可以進行固定指令
的截取，配合著 CaptureWR 的訊號即可直接
截取使用者事先設定好的固定指令。 IEEE
P1500 沒有規定 WIR 的實際電路，只描述其行
為，故能符合規定行為的電路即可使用。
IEEE P1500 SECT WBR 又 稱 之 為
Wrapper Cell，可分為輸入端(Core input, CI)與
輸出端(Core Output, CO)。核心在工作狀態時
資料傳輸途徑改經由 WFI (Wrapper Functional
Input)/WFO (Wrapper Functional Output)，並且
透過 Wrapper Cell 的 CFI (Cell Functional
Input)/CFO (Cell Functional Output)與核心的
輸入及輸出端傳輸資料，此路徑即為外界資料
進出核心的主要路徑。若核心處於測試狀態
時，則測試向量經由 WSI 傳遞到 Wrapper Cell
的 CTI/CTO，最後測試結果由 WSO 輸出。
為確定 WBR 於正常工作及測試時能夠建
立正確之資料傳遞路徑，故定義應有的操作模
式，並透過 WIR 的指令進行操作模式的選擇。
在核心正常工作時可選擇 Normal Mode，若是
測試模式中則有兩種模式可選擇， Inward
Facing Mode (IF)中可以控制 CI 資料並觀察
CO 反應；Outward Facing Mode (OF) 中可控
制 WFO 資料並觀察 WFI 反應。Safe Mode 則
可以控制 CO 與 WFO 的輸出資料為安全值
(Safe value)。除了上述四種模式，IEEE P1500
SECT 亦定義十幾種可供選擇的模式。標準的
Wrapper Cell 必須有四個主要的端點，即 CFI、
CFO、CTI、CTO，而 Cell 只要必備 IEEE P1500
SECT 所規範的模式與行為，並無特別定義實
際的電路，使用者可依照自己的需求設計
Wrapper Cell。
IEEE P1500 SECT 能夠提供核心內部的
測試、測試資訊的傳達、對核心的測試控制及
整合系統晶片的測試及最佳化，不僅改善 SoC
測試的諸多不便，也使得 SoC 系統設計者能夠
更容易測試每個核心，也更能整合適當的系統
架構。核心內部的測試可由核心使用者自行定
義或由核心提供者提供，測試資訊的傳達及對
核心的測試控制皆須經由 IEEE P1500 SECT
提供，故 IEEE P1500 SECT 對於 SoC 測試資
料的傳輸與控制扮演著相當重要的角色。若
我們已經整理出計畫的研究成果，撰寫成
會議論文與期刊論文，目前正投稿至相關的國
際會議與國際期刊。
四、結論與討論
IEEE P1500 SECT 是一個為系統晶片而
發展出來的測試架構標準。IEEE P1500 SECT
能夠提供核心內部的測試、測試資訊的傳達、
對核心的測試控制及整合系統晶片的測試及
最佳化，使得 SoC 系統設計者能夠測試每個核
心，整合適當的系統架構。本計畫研究 IEEE
P1500 SECT 硬體電路之測試方法，使用測試
方法為基礎進而提出診斷方式，以提供修復
(Repair)技術所需資訊，另外本計劃亦設計以
NoC 做為 TAM 之 Wrapper 及其測試與診斷的
方法。
五、參考文獻
[1] A.M. Amory, E. Briao, E. Cota, M. Lubaszewski, and
F.G. Moraes, “A Scalable Test Strategy for
Network-on-Chip Routers,” Proceedings of IEEE
International Test Conference, pp. 591-599, Nov.
2005.
[2] T.L. Anderson, R. Chandramouli, S. Dey, S.
Hemmady, C. Mallipeddi, R. Rajsuman, R. Walther,
and Y. Zorian, “Testing Embedded Cores,”IEEE
Computer, Vol. 14, No. 2, pp. 81-89, Apr.-June 1997.
[3] A.M. Amory, K. Goossens, E.J. Marinissen,
M.Lubaszewski and F. Moraes, “Wrapper Design for
the Reuse of Networks-on-Chip as Test Access
Mechanism,”Proceeding of Test Symposium, pp.
213-218, May 2006.
[4] P. Bernardi, G. Masera, F.Quaglio, and M.S. Reorda,
“Testing Logic Cores Using a BIST P1500 Compliant
Approach: a Case of Study,”Proceedings of Design,
Automation and Test in Europe Conference, pp.
228-233, Oct. 2005.
[5] K.-L. Cheng, J.-R. Huang, C.-W. Wang, C.-Y. Lo,
L.-M. Denq, C.-T. Huang, C.-W. Wu, S.-W. Hung and
J.-Y. Lee, “An SOC Test Integration Platform and Its
Industrial Realization,” Proceedings of IEEE
International Test Conference, pp. 1213-1222, Oct.
2004.
[6] S. Edirisooriya and G. Edirisooriya, “Diagnosis of 
Scan Path Failures,” Proceedings of VLSI Test
Symposium, pp. 250-255, Apr. 1995.
[7] R. Guo and S. Venkataraman, “A Technique for Fault
Diagnosis of Defects in Scan Chains,” Proceedings of
International Test Conference, pp. 268-277, Oct.
2001.
[8] H.-J. Huang, J.-F. Li, J.-B. Chen, C.-P. Su, C.-W. Wu,
C. Cheng, S.-I Chen, C.-Y. Hwang, and H.-P. Lin,
“Test Wrapper Design and Automation for
System-on-Chip,” Proceedings of VLSI Design/CAD
Symposium, Aug. 2001.
[9] IEEE Computer Society, “IEEE Standard Test
Interface Language (STIL) for Digital Test Vector
Data,”IEEE Std. 1450-1999, Aug. 1999.
[10] IEEE 1450 Web Site,
http://grouper.ieee.org/groups/1450/.
[11] IEEE P1500 Standard for Embedded Core Test Web
Site, http://grouper.ieee.org/groups/1500/.
[12] R. Kapur, M. Lousberg, T. Taylor, B. Keller, P.
Reuter and D. Kay, “CTL — The Language for
Describing Core-Based Test,”Proceedings of IEEE
International Test Conference, pp. 131-139, Oct.-Nov.
2001.
[13] J. C.-M. Li, “Diagnosis of Single Stuck-at Faults and
Multiple Timing Faults in Scan Chain,”IEEE Trans.
on Very Large Scale Integration (VLSI) System,
Vol.13, No. 6, pp. 708-718, June 2005.
[14] V. lyengar, K. Chakrabarty and E.J. Marinissen, “Test
Access Mechanism Optimization, Test Scheduling,
and Tester Data Volume Reduction for
System-on-Chip,”IEEE Computer, Vol. 52, No. 12 pp.
1619-1632, Dec. 2003,.
[15] J.-F. Li, H.-J. Huang, J.-B. Chen, C.-P. Su, C.-W. Wu,
C. Cheng, S.-I. Chen, C.-Y. Hwang and H.-P. Lin, “A 
Hierarchical Test Methodology for Systems on Chip,” 
IEEE Micro, pp. 69-81, Sept.-Oct. 2002.
[16] J.-F. Li and C.-S. Wu, “Design-for-Testability and
Testing of P1500 Test Wrapper,” Proceedings of VLSI
Design/CAD Symposium, Aug. 2005.
[17] E.J. Marinissen, S.K. Goel and M. Lousberg,
“Wrapper Design for Embedded Core Test,”
Proceeding of International Test Conference, pp.
911-920, Oct. 2000.
[18] E. J. Marinissen, R. Kapur, M. Lousberg, T. McLaurin,
M. Riccheti and Y. Zorian, “On IEEE P1500’s 
Standard for Embedded Core Test,” J. Electronic
國科會出席國際學術會議報告
98 年 5 月 1 日
報告人姓名
紀新洲
服務機構
及職稱
國立東華大學資工系副教授
兼資訊與網路中心主任
時間
會議
地點
2009/4/2 ~ 2009/4/4
洛杉磯
會議
名稱
(中文) 國際工程科學與資訊計算會議
(英文) International Conference on Computing in Engineering, Science, and Information
發表
論文
題目
(中文) 對於掃描鍊電路之單一陷住錯誤之有效診斷
(英文) Efficient Diagnosis of Scan Chains with Single Stuck-at Faults
Efficient Diagnosis of Scan Chains with Single Stuck-at Faults
Hsin-Chou Chi, Hsi-Che Tseng, and Chih-Ling Yang
Department of Computer Science and Information Engineering
National Dong Hwa University
Hualien, Taiwan
E-mail: hcchi@mail.ndhu.edu.tw
Abstract
Locating the scan chain fault is a critical step for
IC manufacturers to analyze failure for yield
improvement. In this paper, we propose a diagnosis
scheme to locate the single stuck-at fault in scan
chains. Our diagnosis scheme is an improved design
to a previously proposed scheme which can diagnose
the output of each cell flip-flop in the scan chain. With
our scheme, not only the output of each cell flip-flop
can be diagnosed, but also the inverse output of each
cell flip-flop and the serial input of the scan chain as
well. Our proposed diagnosis scheme is efficient and
takes (4n+6) clock cycles in the worst case for an n-bit
scan chain.
1. Introduction
As the complexity of VLSI chips grows, the testing
cost also increases. A common approach to reducing
testing cost is design for testability (DFT). Scan-based
design is a DFT technique that has been used
extensively in VLSI. It has been reported that scan
chain failures account for almost 50% of chip failure
[1]. Therefore, locating the scan chain faults is a
critical step for IC manufacturers to analyze failure for
yield improvement.
Previously proposed scan chain fault diagnosis
techniques can be classified into two categories: One is
hardware-based technique, which modifies the scan
chain hardware for diagnosis purpose [2][3][4][5]. The
other is software-based technique, which does not need
any modification to the scan chain hardware, but
regards the diagnosis as a sequence of guessing and
verifying process [1][6][7][8][9][10]. In this paper, we
will focus on the hardware-based technique for
diagnosing faulty scan chains.
Many hardware-based diagnosis techniques have
been proposed. An interesting technique for scan chain
design was presented in [2], which locates the single
stuck-at fault by using test sequences. This scheme can
diagnose the output of each cell flip-flop of the scan
chain. However, the inverse output of each cell flip-
flop and the serial input of the scan chain cannot be
diagnosed with this scheme. When there is a single
stuck-at fault at the output of a cell flip-flop or the
serial input, we may get incorrect diagnosis results.
In this paper, we propose an efficient diagnosis
scheme that can not only locate the single stuck-at fault
at the output of each cell flip-flop of the scan chain, but
also the inverse output of each cell flip-flop and the
serial input.
In the next section, we briefly describe how the
faulty scan chain is diagnosed based on the work in [2].
We also explain why the technique described in [2] is
not sufficient when the single stuck-at fault occurs at
other places in the scan chain. In Section 3, we present
our improved diagnosis technique. Finally, the
concluding remarks are given in Section 4.
2. Diagnosis of faulty scan chains
Hardware-based techniques can be efficient for
locating single stuck-at faults by using test sequences.
In [2], the author modifies the cell flip-flop of the scan
chain by adding supporting inversion logic. Figure 1(a)
shows the modified flip-flop that can invert its state
when the control signal IM (Inversion Mode) is set to 1.
Figure 1(b) shows a faulty scan chain with n such
modified flip-flops. Note that another 2-to-1
multiplexer at the input of each flip-flop, which exists
in normal scan chain design, is omitted for simplicity.
the FITB is 1; that is, the new sequence is 10…00. For
the original n-bit all-1 sequence, the FIHB is 1 and the
FITB is 0; that is, the new sequence is 01…11. The
diagnosis needs to use both sequences, in the worst
case, to determine the fault type and fault location. The
two-phase diagnosis process is as follows.
Table 1: Diagnosis response of a 4-cell scan chain.
0000 1111
No fault 1111 0000
Q1 SA0 0000 0000
Q1 SA1 1111 1111
QB1 SA0 1110 0000
QB1 SA1 1111 0001
Q2 SA0 0001 0001
Q2 SA1 1110 1110
QB2 SA0 1101 0000
QB2 SA1 1111 0010
Q3 SA0 0011 0011
Q3 SA1 1100 1100
QB3 SA0 1011 0000
QB3 SA1 1111 0100
Q4 SA0 0111 0111
Q4 SA1 1000 1000
QB4 SA0 0111 0000
QB4 SA1 1111 1000
SI SA0 1111 1111
SI SA1 0000 0000
We first apply the (n+2)-bit sequence 10…00 in the
first phase. The sequence is shifted into the scan chain
for (n+1) clock cycles. At this moment, the FIHB,
whose value may be changed due to the possible stuck-
at fault, has already been shifted out of the scan chain.
Then we assert the IM to invert the state of each flip-
flop in the scan chain. After that, we further shift the
scan chain for the next (n+1) clock cycles. When this
has been completed, all the sequence has been shifted
out of the scan chain, including the FITB. If there is no
single stuck-at fault found in the first phase, we
proceed to the second phase of the diagnosis process.
In the second phase, the sequence 01…11 is used
instead. The way we shift the sequence in the second
phase is exactly the same as in the first phase.
Based on the response sequence observed at the SO
of the scan chain, we can determine the fault type and
where the stuck-at fault is located, if it exists, in the
following steps.
Step 1: When the FIHB is shifted out after the first
(n+1) clock cycles, check the value of the
shifted-out new FIHB. If the new FIHB is not
equal to the original FIHB, go to Step 4.
Otherwise, there may be a stuck-at-b fault,
where b is the value of the original FIHB.
Step 2: Look beyond the FIHB and check the
subsequent bits. Find the first bit encountered
that is equal to b. If there is no such bit in the
sequence, go to Step 4 since there is no stuck-
at-b fault. If there is such a bit but this bit is
the FITB, then we have found a stuck-at-b
fault at the SI and we can terminate the whole
diagnosis process.
Step 3: If we find the first encountered bit whose
value is equal to b and is not the FITB,
assume it is the kth bit in the sequence,
excluding the FIHB. We further check the
(k+1)th bit. If the value of the (k+1)th bit is also
equal to b, then there is a stuck-at-b fault at
the Qk. If the value of the (k+1)th bit is equal
to the inverse of b, then there is a stuck-at-b
fault at the QBk.
Step 4: If the two diagnosis sequences have been
applied and found no stuck-at fault, the scan
chain is fault-free and we can terminate.
Otherwise, go to Step 1 and applied the
second diagnosis sequence.
Step 5: The diagnosis results of the example 4-cell
scan chain with our proposed diagnosis
scheme in the above are shown in Table 2.
The bits underlined indicate what we use to
determine the fault type and fault location. For
instance, we apply the sequence 100000 to the
scan chain and the response is 111010. Since
the FIHB is 0, there is a SA0 fault somewhere
in the scan chain. After that, the first 0 is
found at the 2nd bit excluding the FIHB, and
so the SA0 fault occurs at the 2nd cell. Since
the 3rd bit is 1, we now determine that it is
SA0 fault at the QB2.
In our diagnosis process, each phase takes (2n+3)
clock cycles: (n+1) cycles for shifting in the sequence,
one cycle for inversion, and another (n+1) cycles for
shifting out the sequence. There are two phases in our
