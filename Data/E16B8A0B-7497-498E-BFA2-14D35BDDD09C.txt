  2 
variable system frequency for use in the system in 
order to optimize the system power consumption. 
Key words: embedded systems, embedded 
hardware platform, FPGA/CPLD, cell-based library, 
SoC, power management module, low-power SoC 
design, and SoC system test, ADPLL. 
 
二、研究動機  
近年來由於系統晶片(SOC)的興起，許多功
能性強大的電子產品紛紛被推出，而這些電子產
品共同的特色就是體積小、容易攜帶，功能性也
越來越多元，例如：手機和PDA的高畫質螢幕、
相機功能、無線網路和藍芽通訊等。然而效能提
升也使得複雜性提升，更進一步的使整個系統功
率消耗提升，因此如何延長電池的充電使用時間
和低功率設計就成了近幾年來重要的研究課
題。但這些年來，電池技術並沒有太大的突破，
因此要延長系統的使用時間，應該是著重於整個
系統晶片的設計，以及電源管理的技術。 
欲設計一個低功率系統，我們必須先了解在
CMOS電路中，功率的消耗因素。依據CMOS動
態功率消耗關係式： 
 
其中 為電源電壓，αi為充、放電之活動性或
活動頻率，ci為節點電容值，f 為系統工作頻率。
依此關係式可知：動態功率消耗受電源電壓的影
響最大，為平方關係，所以降低電源電壓是降低
動態功率消耗的最佳方式。除了電源電壓之外，
還可以藉由下列三個因素來著手：充、放電之活
動頻率、節點電容值、系統工作頻率。 
目前最常見的降低動態功率消耗技術有：
Gated clock、DFS (Dynamic Frequency Scaling)、
DVFS (Dynamic Voltage and Frequency 
Scaling)。Gated clock 是最簡單也是應用最廣泛
的技術，它藉由控制充、放電之活動頻率來達到
目的。在工作頻率的控制方面，較常見的技術是
DFS，它是利用降低頻率的方式來達到目的，但
此方法對於CPU處理一個任務來說，降低工作頻
率就需增加處理時間，雖然功率降低但總消耗能
量還是一樣的，所以實際上只能增加散熱的功
能，對於節省能量消耗並沒有幫助。因此近年來
開始有研究提出DVFS，這個技術的特色就是降
低頻率同時降低電壓，這樣的方法與單獨調整頻
率的方式比較下，它不僅一樣能降低功率消耗，
同時也能達到節省總能量消耗的目的。 
總結來說，我們在本計劃中將完成一個電源
管理模組(PMM)，此模組利用Gated clock技術來
控制充、放電之活動頻率，再配合DVFS的技術，
適時降低工作頻率和工作電壓來達到省電的目
的。此外為了調整工作頻率，我們也將設計一個
全數位鎖相迴路(ADPLL)，用來控制系統的工作
頻率於所需的性能與最佳的功率消耗上。 
三、架構簡介  
在本計劃中，我們使用之前已經完成的32位
元Proto3-ARM9TM嵌入式系統平台為基礎，並結
合已經完成的周邊設計，包括AMBA模組、
UART、GPIO、定時器(timer)、PWM、中斷控制
器 (Interrupt Controller)和記憶體介面 (Memory 
Interface)，設計並完成我們的電源管理模組
(PMM)。此外，我們也設計一個全數位鎖相迴路
(ADPLL)，以控制系統的工作頻率於所需的性能
與最佳的功率消耗上。其整體系統架構如圖1所
示。 
  4 
II. DVFS. 
電源管理模組除了負責控制各個模組的啟
動與否之外，還必須負責控制各個模組的工作狀
態，因此我們利用DVFS的技術使各個模組操作
在最佳的工作狀態，達到節省功率消耗的目的。
以下我們將針對DVFS如何實現做更詳細的說
明。 
一般實現DVFS系統的工作流程如下： 
(1) 收集與系統負載有關的訊號，並利用這些訊
號來計算目前的系統負載。 
(2) 根據目前的系統負載，預測下一段時間系統
所需要的性能需求(所需工作頻率、電壓)。 
(3) 將預測的性能要求轉換成相對應的工作頻率
和工作電壓。 
(4) 調整工作頻率和工作電壓。在調整頻率和電
壓時必須注意調整的順序，當頻率由高往低
調整時，先降低頻率再降低電壓。相反的，
若頻率由低往高調整時，則應先調高電壓在
調高頻率。 
DVFS系統的工作流程如圖4所示。 
 
圖4：DVFS系統的工作流程 
其次，我們將詳細說明DVFS技術如何讓各
個模組工作在最佳的操做狀態。包括如何調整最
佳的工作頻率和工作電壓。 
 
 
(1) 頻率控制  
要調整各個模組的工作頻率，首先要知
道各個模組目前的工作負載(workload)，再藉
由已知的目前工作負載來調整各個模組的最
佳工作頻率。我們定義工作負載(workload)
為： 
 
知道目前的工作負載後，我們利用預測
系統來預測下一段時間的工作負載。我們將
預測的工作負載表示為： 
 
其中 為加權參數，我們令 =1/N，
也就是說我們預測下一段時間的工作負載為
前N次工作負載的平均值。最後，我們根據預
測的下一段時間的工作負載決定下一段時間
的工作頻率。 
(2) 電壓控制  
電壓控制的方式大致上有兩種，分別為開環
(open loop)電壓調整和閉環(closed loop)電壓調
整。由於閉環(closed loop)電壓調整需要複雜的電
路設計，所以我們採用開環(open loop)電壓調整
的方式。 
開環(open loop)電壓調整的方法是依據工作
頻率的高低，產生能滿足此工作頻率的最低工作
電壓，因此我們必須先知道頻率和電壓的關係。
表1是我們實際量測Proto3-ARM9TM嵌入式系統
的工作電壓和最高工作頻率。例如，若所需的工
作頻率為100 MHz，根據表1得知工作電壓並不需
要原先的1.8 V，我們只需要提供1.5 V就能滿足
了。 
 
  6 
 
圖7：數位控制振盪器架構圖 
第二部分  mux delay cell：  
請參考圖8為mux delay cell 接法的示意圖，mux 
delay cell 上層做為TDC電路使用，下層則為
ring oscillator 回授的電路。詳細的動作說明如
下： 
 
圖8：mux delay cell架構圖 
Step 1 ：Reset 
當reset 動作時，第一部分的mux選擇在1的位
置，而sample_clock的訊號設定為low。上層電
路的up_sel(n) 的都設為1，而下層的ctu(n)皆設定
為0。由此得知，若up_out(n-2)為high，up_out(n-1)
則為low，up_out(n)為high，up_out(n+1)為low。 
Step 2 ：Sample 
在sample 動作時 sample clock 會輸入一clock 
訊號由low轉為high，這時後方的mux delay cell
會一個接著一個propagate到後面的up_out(n)，
直到Sample clock由high轉為low時，才產生一
終止的訊號，這時則依propagate至第幾個偶數
的stage而決定下方的ctu(n)要幾個stage設定為
1。例如，若propagate至up_out(3)時，則將stage 
1之前(不包括stage 1)所有的ctu設定為1。因為
propagate至up_out(3)時，表示其經過第一部分
的mux之外再加上4個mux delay。若每個mux 
delay time都相同為 T propagate time，則
propagate至up_out(4)時，總共有(1+4)*T delay 
time。此時，我們只需要將ctu(0)設為1，並將其
它ctu都維持在初始值0，所得到的ring oscillator 
週期即為5T個mux的delay time。請參考圖9。 
 
圖9: mux delay cell運作  
Step 3 ：Oscillate 
將第一部分的mux切到0，讓下方的mux和上方
的mux造成一ring oscillator 而產生振盪。 
第三部分    Fine Tune Unit (FTU)  
請參考圖10的詳細電路，FTU設計的方式是將三
態反相閘並接在奇數個反相器而三態緩衝閘並
接於偶數個反相器，形成多組跨接不同數目反
相器的控制位元，增加FTU解析度並提供設計者
對於不同控制位元數的選擇需求。此外，為了
將FTU可控制的範圍加大，我們將第一部分的
mux也並接上了一個反向三態閘。其中stage 0和
stage 1使用於FTU，ctu(0)和ctu(1)永遠設定為1，
其餘均為可控制的部份，因此，一共有7位元可
用於細部調整DCO的輸出振盪週期。 
