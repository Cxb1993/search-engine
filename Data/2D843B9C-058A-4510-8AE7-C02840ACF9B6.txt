英文摘要
In this project, we present a novel Grid scheduling scheme for co-allocating requests in
advance reservation systems. The scheme integrates a flexible reservation model, an
overbooking policy, and a novel deferred request scheduling algorithm. The
overbooking policy allows a system to temporally accommodate more requests than
its capacity. The deferred request scheduling algorithm then selects a subset of
requests and assigns their actual start times so as to maximize the system utilization.
However, deferred request scheduling is a combinatorial problem. Therefore, we use a
divide-and-conquer approach to partition the original scheduling problem into several
sub-problems, each of which is equivalent to the 0/1 Multi-Dimensional Knapsack
Problem (MDKP), a well-known NP-hard problem. Simulation results demonstrate
that the proposed approach can improve resource utilization significantly
1II. THE FLEXIBLE RESERVATION MODEL
The proposed flexible reservation model is de-
signed to provide flexible start times for book-
ahead requests. That is, a request’s start time can be
scheduled within a tolerable, flexible interval instead
of according to a rigid time frame. The features of
the flexible reservation model are as follows:
1. The specification of a book-ahead request
ri includes the early ready time si, the de-
sired duration di, the flexible duration fi,
the required resource set Px, and a set of
resource requirements for each dedicated
resource Bx.
2. The actual start time of the request ri,
Sact,i, can be scheduled at an interval be-
tween si and si + fi.
3. The latest deadline of ri must be arranged
before si + di + fi.
4. All desired resources are allocated to re-
quest ri concurrently at a continuous in-
terval [Sact,i, Sact,i + di].
In the flexible reservation model, the actual start
time of an admitted request is assigned via the
deferred request scheduling function. Thus, we can
solve the resource fragmentation problem if some
book-ahead requests can be re-scheduled appropri-
ately by using their flexible durations. At the same
time, we can optimize the system utilization via the
deferred request scheduling algorithm.
III. THE DEFERRED REQUEST-SCHEDULING
PROBLEM
A. Problem Description
In a Grid system, the resource manager is respon-
sible for resource allocation and scheduling. When
a book-ahead request arrives, the resource manager
finds a routing path, conducts the admission tests,
and allocates resources to the request. Moreover,
an overbooking policy, which allows the system
to temporally accommodate more requests than the
resource capacity, is implemented. The admission
tests classify an incoming book-ahead request as one
of the following three types:
• an admitted request: if the usage of each de-
sired resource is less than the system’s capacity
limit.
• a pending request: if any desired resource
usage exceeds the system’s capacity limit but
it is less than the overbooking capacity limit.
• a rejected request: if any desired resource
usage exceeds the overbooking capacity limit.
The admission test also assigns a provisional start
time to an admitted or a pending request; however,
the actual start time is determined by the deferred
request scheduling algorithm at the end of each
reservation cycle. The deferred request scheduling
problem can be defined as follows. Given a set of
pending requests and admitted requests, the deferred
request scheduling problem involves selecting an
optimal subset of the pending requests and assign-
ing actual start times to them and the admitted
requests so as to maximize the system utilization.
By cooperating with the flexible reservation model,
the deferred request scheduling algorithm can re-
schedule admitted requests and pending requests
to increase the system utilization; however, re-
scheduling requests arbitrarily can lead to viola-
tion of the resource capacity constraints verified
in the admission tests. Hence, the deferred request
scheduling algorithm is subject to those constraints.
B. The Admission Control with an Overbooking
Policy
Let a Grid system have M admitted requests,
N pending requests and an acceptable overloaded
factor α. Then, in an admission test, a new request
rx with a desired start time sx, a flexible duration fx,
a desired duration dx and a capacity requirement bx
on a required resource set Px will only be classified
as an admitted request if
B` ≥
M∑
i=1
bt`,i +
N∑
j=1
b
t
`,j + bx ,∀` ∈ Px,∀t ∈ Iact,x,
where B` is the capacity of the resource ` for
1 ≤` ≤ L, Iact,x = [Sact,x, Sact,x + dx), Sact,x ∈
[sx, sx + fx]; and bt`,i, the resource requirement of
the admitted request ri on the resource ` at time t,
can be stated as
bt`,i =
{
bi ` ∈ Pi and t ∈ Iact,i,
0 otherwise.
Similarly, b
t
`,j , the resource requirement of the pend-
ing request rj on the resource ` at time t, can be
stated as
b
t
`,j =
{
bj ` ∈ Pj and t ∈ Iact,j,
0 otherwise.
3problem that involves fM+N possible solutions, where f is
the maximum flexible duration in the reservations. Hence,
obtaining an optimal solution incurs a high computational
cost. Alternatively, we can consider faster methods based on
heuristics. In this paper, we propose two such methods: a cut-
down approach and a fill-up approach.
IV. THE DEFERRED REQUEST-SCHEDULING
ALGORITHMS
To achieve a substantial reduction in computational costs,
it is necessary to decompose the deferred request scheduling
problem into progressively smaller deferred request scheduling
sub-problems. Then, each sub-problem only has to address the
resource overload problem at a small, fixed interval, called a
time slot. In this section, we propose two heuristics, a cut-down
and a hybrid approach to solve the deferred request scheduling
sub-problems.
A. The Cut-Down Approach
At an overloaded time-slot t, the cut-down approach first
postpones an optimal subset of the admitted requests to the
next time-slot in an attempt to accommodate all the pending
requests. If any request still fails to satisfy the resource
capacity constraints at the time-slot t, the cut-down approach
starts discarding subsets of the pending requests to reduce
the system workloads. At the end of each reservation cycle,
the deferred request scheduling algorithm runs the cut-down
approach repeatedly from the first time slot to the last time
slot. Finally, the approach selects a subset of pending requests
to accept and decides the actual start time of each accepted
request. Next, we describe the cut-down approach in detail.
1) Phase I: Postpone the Admitted Requests:
Given m admitted requests with their flexible start times at
the overload time slot t, the problem of selecting an optimal
subset of the admitted requests to postpone can be formulated
as an MDKP problem as follows:
Problem(I) maximize :
m∑
i=1
pi xi
subject to :
m∑
i=1
(xibt`,i) ≤ ct`, 1 ≤ ` ≤ L (7)
m∑
i=1
(xi bte`,i) ≤ cte` , 1 ≤ ` ≤ L
min
1≤i≤m
(Sact,i + di) ≤ te
≤ max
1≤i≤m
(Sact,i + di + fi) (8)
xi = 0 or 1, i = 1, ...,m (9)
The variable xi is a decision variable for this problem. If
xi = 1, the start time of request ri is postponed to the next
time-slot t + 1; however, if xi = 0, the request ri is not
postponed. Constraint (7) is the capacity constraint at the time-
slot t, where ct` is the capacity deficit on link ` at time-slot t,
which can be expressed as
ct` = max{0,
M∑
i=1
bt`,i +
N∑
j=1
b
t
`,j −B`} (10)
Constraint (8) is the admission constraint at the successive
time slots after the original reservation interval, where cte` is
the available capacity on link ` at the time slot te, and
cte` = B` −
M∑
i=1
bte`,i −
N∑
j=1
b
te
`,j (11)
The profit pi of the admitted request ri can be expressed as
pi = (t− si + 1) ∗ di ∗ bi ∗ |Pi|/c (12)
, where c is a constant. If ri is a pending request, c is set to
1. In contrast, if ri is an admitted request, c > (t− si + 1) ∗
di ∗ bi ∗ |Pi|. Now, the size of Problem (I) can be reduced to
(f+1)∗L knapsacks and m objects, where f is the maximum
flexible interval of requests.
2) Phase II: Discard the Pending Requests:
In the second phase, we discard a subset of the pending
requests to solve the resource overload problem incurred by
the overbooking policy. The major task in this phase is to
select an optimal subset of the pending requests to discard
so as to maximize the system utility. Again, the sub-problem
can be formulated as an MDKP, where the residual capacity
of each link, i.e. the difference between the link capacity and
the accumulated load of the admitted requests, can be viewed
as a knapsack, and each pending request can be viewed as a
object. Then, we add the pending requests with larger profits
to the knapsack to maximize the overall profit. In this context,
the profit pj of a request rj can be expressed as
pj = dj ∗ bj ∗ |Pj | (13)
Given n pending requests whose flexible start times overlap
at the overloaded time slot t, the problem of selecting an
optimal subset of the pending requests to discard can be stated
as follows:
Problem(II) maximize :
n∑
j=1
pj xj
subject to :
n∑
j=1
(xjb
t
`,j) ≤ ct` 1 ≤ ` ≤ L (14)
xj = 0 or 1, j = 1, ..., n, (15)
where xj is the decision variable for this problem. If xj = 1,
the pending request rj will be granted; however, if xj = 0, the
pending request rj will be discarded. Here ct` is the residual
capacity on link ` at t, which is defined as:
ct` = B` −
m∑
i=1
bt`,i (16)
and m is the number of the admitted requests whose flexible
start times overlap at time-slot t. Problem (II) is an MDKP
problem with L knapsacks and n objects.
5Fig. 1. Topology of a Grid in Simulations
Fig. 2. The System Workloads in Simulations
A. Simulation Scenarios
The network topology in our simulations is shown in
Figure 1. Each link has a capacity of 155 Mbps (OC-3).
The source node, the destination node and the bandwidth
requirement of a book-ahead request are generated randomly.
The bandwidth requirement is uniformly distributed between
64 Kbps – 1.5 Mbps with 64 Kbps/step. The duration of
a request is a uniform distribution with mean 125 minutes
and deviation 115 minutes; and the minimum reservation time
unit (i.e., time slot) is 5 minutes. The requests from each
source node form a Poisson distribution with a fluctuating
mean arrival rate as shown in Figure 2. The workload of a grid
system is not uniform over a 24-hour period. It can be low
during the morning, increase gradually through the evening
and then fall off during the night, as shown in Figure 2.
Hence, two synthetic workloads with respective peak rates of
5.5 requests/time slot (light workload) and 8 requests/time slot
(heavy workload),respectively, are used in the experiments.
The overbooking factor ranges between 1.1 and 1.8, and the
flexible interval ranges between 0 and 360 minutes in 10
minute steps.
B. Simulation Results
We compared two deferred request-scheduling approaches:
the cut-down (CD) approach, described in Section IV.A, and
the hybrid (HB) approach described in Section IV.B. In the
following figures, the notations CD x.y and FU x.y denote,
Fig. 3. The improvement in the system utilization (normalized,
mean=8.0)
respectively the cut-down and the hybrid approach under
overbooking factor x.y. respectively.
1) System utilization: The system utilization is defined
as the ratio of the reserved bandwidth to the overall capacity,
where the reserved bandwidth is the sum of the subscribed
capacity of all links, and the overall capacity is the sum
of the actual capacity of all links in the grid system. The
improvement in the system utilization is defined as the ratio
of the system utilization in the proposed deferred request
scheduling scheme to that of the FCFS scheduling without
an overbooking policy or flexible interval. Figure 3 shows
the improvements in the system utilization versus the flexible
interval with different overload factors. As shown in Figure
3, in the best case, the hybrid approach can achieve up to
32 % improvement in the system utilization with a heavy
workload (i.e., the peak request = 8 requests \time slot).
The improvement in the system utilization is proportional to
the length of the flexible interval. However, there exists a
threshold for the flexible intervals above which the system
utilization becomes constant. Furthermore, the improvement
in the system utilization is correlated to the overbooking
factor in the overbooking policy described in Section IV
B. However, there exists an overbooking factor threshold =
1.3, above which the system utilization becomes constant.
Figure 3 also shows that the hybrid approach outperforms
the cut-down approach in terms of the system utilization,
and the deferred request scheduling scheme achieves a better
performance improvement with a heavy workload than with a
light one.
2) The overall blocking probability: The overall
blocking probability is defined as the total number of rejected
requests to the overall book-ahead requests, where the total
number of rejected requests includes the new requests rejected
in the initial admission tests and the pending requests rejected
in the deferred request-scheduling phase. Figures 4 shows that
for heavy workloads, the overall blocking decrease signifi-
cantly as the flexible interval increases; that is, it declines
from 21.4 % with no flexible interval to 3.54 % with a flexible
interval = 360 min for the heavy workload. As observed, the
hybrid approach also outperforms the cut-down approach in
terms of the overall blocking probability.
7[4] L. Kunrath, C. Becker Westphall, and F. Koch ”Towards Advance
Reservation in Large-Scale Grids,” Proc. of the Third Interna-
tional Conference on Systems 2008, pp 247-252
[5] Y. T. Chen and K. H. Lee, ”A Flexible Service Model for
Advance Reservations,” Computer Network, vol. 37, no. 3-4, pp.
251-262, Oct. 2001.
[6] Neena R. Kaushik1 , Silvia M. Figueira , and Stephen A.
Chiappari ”Flexible Time-Windows for Advance Reservation
Scheduling,” Proc of the 14th IEEE Int’l Symp. on Modeling,
Analysis, and Simulation, Sep. 2006.
[7] Carole Fayad, Jonathan M. Garibaldi and Djamila Ouel-
hadj,“Fuzzy Grid Scheduling Using Tabu Search ” . Proc. of
IEEE Int’l Conf. on Fuzzy Systems, 2007 pp. 1-6,.
[8] Umar Farooq , Shikharesh Majumdar , and Eric W. Parsons .
“Impact of Laxity on Scheduling with Advance Reservations in
Grids ” . Proc. of 13th IEEE Int’l Symp. on Modeling, Analysis,
and Simulation of Computer and Telecommunication Systems,
2005, pp: 319 - 324.
[9] D. Sulistio, K. Kim and R. Buyya ”Managing Cancellations
and No-shows of Reservations with Overbooking to Increase
Resource Revenue,” Proc. Eight IEEE Int’l Symp. on Cluster
Computing and the Grid, 2008.
利用道格拉斯演算法降低人體輪廓的像素
點數目，以提高骨架萃取的速度。同時利
用取樣技巧，約 0.4 秒獲取一張畫面中的
人體骨架，以取代在每張畫面進行人體骨
架比對，以偵測受害者在跌倒時的變化。
我們所發展二維度的骨架模型，不須利用
顏色的訊息，僅使用形狀輪廓的資訊，去
分析建立人體的頭、四肢、軀幹模型。因
此在燈光晦暗顏色資訊不足的情況下，依
舊能使用。計算成本低特性，能滿足即時
跌倒偵測系統的需求。
新加坡南洋理工大學, Jiwen Lu 等學者提
出文獻”View Recognition of Human Gait
Sequences in Videos”: 在識別人的步伐影
像中有許多潛在的應用，譬如視頻監控與
人型的辨識人類行走的步伐圖是一種相當
有用的生物特徵，而當下在電腦視覺社群
中也有越來越多人對此感到興趣；希望能
將其應用於需要自動識別與需要安全控管
的環境中的監控系統像是銀行、機場或停
車場中。在電腦視覺中，有些文獻對於人
步伐做出分析，大致分為兩類:基於模型或
基於動作。基於模型的方法為去定義出人
體模型並比對每張畫面；基於動作的方式
為去描述人的行走模式藉由一種表示法。
此篇文獻主要處理在影片中人型步伐的辨
識，針對於如兩個步伐影片的差異性不大
時，在分辨上容易出錯，因此提出新穎的
adaptive discriminant analysis(ADA)
方法來，在比對的兩部影片中，如差異性
較小，則給予較大的權重增加分辨率，反
之如差異性較大，則給予較小的權重。
提出方法實行的流程大致如下，首先利用
Gait energy image(GEI)將步伐序列的特
徵呈現出來，並以 ADA 的方法來減少步伐
的特徵，並提升識別的能力，最後在以傳
統的鄰近法(Nearest Neighbors, NN)分
類。實驗以 CASIA 的 database(Dataset B)
為基準，包含 11 角度的影片，其中 36、
108 度的實驗結果為達最佳，但仍有出色
的結果。
加州理工學院 Jet Propulsion Laboratory
Yumi Iwashita, 發 表 論 文 ”People
Identification Using Shadow Dynamics”。
人物識別具有相當廣泛的應用，可延伸至
負責監控/安全的自律機器。在應用中，人
臉和軀幹的動作(步伐)的生物特徵為解決
該問題的重要的資訊。在傳統的情況中，
會直接去觀測人體軀幹來做分析，但在某
些情況下，投影產生的物件或許會提供更
多的資訊比直接觀測人體軀幹，譬如說從
人的頭頂上方往下看到的影子(像是無人
飛機監控的視角)，可能會獲得更多的資訊
比起分析同樣視角下的人體的頭/身體資
訊。
此篇文獻提出”陰影生物測定” 的想
法；從影片圖像中利用影子輪廓當作生物
特徵，作為從高海拔的影像處理的使用方
法。並提出影子的填補方式來解決在某些
條件變化下(太陽位置等等)。所使用的
常事件，大致上可分為兩類。第一類的為
基於物件的偵測與追蹤。第二類的為基於
低階的特徵來分類。該文獻所屬於的為第
二類，提出了一種異常偵測的系統基於低
階特徵，主要的流程為：1. 利用Motion
Vector作為特徵，2. 利用PCA來做資料維
度的減少，3. 利用SVM來做分類。此方法
易於計算也不需利用任何偵測及追蹤模
型 。 使 用 的 Database 為 PETS2004 與
Underground Parking database 進行效能評
估。
University of Genova, Italy 作者Francesco
Monti, Carlo S. Regazzoni 等，提出文
獻”Human Action Recognition Using the
Motion of Interest Point”:雖然人的行為分
類方法已經被重視很久，但如今仍是具挑
戰性的問題，由於攝影機移動、遮擋、背
景變化、光源變化及人的姿勢變化。本文
獻提供新型的動作描述，以稀疏的光學流
來計算出感興趣的點並來追蹤並可使用在
非靜態背景及移動的攝影機中。
該方法為監督式學習，主要的流程為先將
物件的動作描述出來再以Latent Semantic
Analysis(LSA)將維度減少；處理完再將此
特徵用於訓練非線性 SVM 。使用的
Database為KTH database，其內包含了拳
擊，鼓掌聲，慢跑，跑步，走路，手揮動
六種動作再分為4種情況(門外、門外但尺
寸不同、門外但不同衣服及門內)，文獻只
呈現慢跑，跑步，走路的數據，因為這些
動作比較容易被混淆。
3 建議與結論
這次 IEEE ICIP2010 國際影像處理會議，
來自世界影像處理重要學者都參與此重
要盛會， 3D 影像與 Multimedia Social
Networking 是近幾年非常熱門題目，本
次會議也不例外，國內研究影像處理 學
者可在這新興領域急起直追。
jor and minor semi-axes to detect the human shape change.
We then conﬁrm a human fall incident by monitoring the in-
activity of a person for a period of time.
2.1. Posture Analysis with Human Skeleton
We use the Douglas-Peucker algorithm to approximate the
contour of the foreground object with fewer vertices. We next
perform the constrained Delaunay triangulation to partition
the foreground object into triangular meshes, and extract the
human skeleton through the depth ﬁrst search on centers of
triangular meshes. Finally, we calculate a distance map of the
human skeleton, and detect the posture change by calculating
the distance map of two human skeletons every 0.4 second.
2.1.1. Douglas-Peuker Algorithm
The Douglas-Peucker algorithm approximates a curve by re-
cursively dividing the poly-line. In the beginning, we connect
the two endpoints of a poly-line as the initial approximation
and calculate the perpendicular distance of each intermediate
point to the approximation line. If each distance is less than a
predeﬁned threshold, ξ, the approximation straight line is an
acceptable solution. All endpoints are kept, and other inter-
mediate points are discarded. Otherwise, if any perpendicular
distance is larger than a threshold, ξ, the approximation is
then unacceptable and we continue to choose a point that is
farthest away as a new point and subdivide the original poly-
line into two shorter poly-lines. This process continues until
the approximation is acceptable.
2.1.2. Delaunay Triangulation
Deﬁnition: let S be a set of points in the plane of triangula-
tion. T is a Delaunay triangulation of S if for each edge of T ,
there exists a circle C with the following properties: (1) end-
points of edge e are on the boundary of C, and (2) no other
vertex of S is in the interior of C.
After simplifying the human contour, we use the Delau-
nay triangulation, well-studied in computational geometry, to
partition the foreground object into triangular meshes. The
details of the Delaunay triangulation algorithm can be found
in [4].
2.1.3. Human Skeleton Extraction
We ﬁrst connect all triangle meshes and obtain the centroid of
each triangular mesh. We can then ﬁnd a spanning tree as the
human skeleton via the depth ﬁrst search from the root node
of the triangular meshes [4].
Human Skeleton Extraction Algorithm:
1. Calculate the centroid C of a human posture.
2. Construct a graph G by connecting all centers of any
two connected triangular meshes, which share a com-
mon edge.
3. Find the node with the largest y coordinate and degree
= 1 among all nodes in G as the root node R.
4. Perform the depth ﬁrst search on G and obtain a span-
ning tree F .
5. Find all leaf nodes L and branch nodes B of the span-
ning tree F.
6. Extract the skeleton S by connecting any two nodes in
{R,L,B,C} if there exists a path between these two
nodes.
Fig. 1. an example of the Delaunay triangulation, the human
skeleton extraction, and the distance map of a skeleton
2.1.4. Distance Map of Human Skeleton
The distance map, also known as the distance transform, is
employed to compute the distance of two sampling skeletons.
In the distance transform of a binary map, the value of a pixel
is the shortest distance to all pixels in the foreground object.
The distance map of the binary image S1, denoted as DMS1 ,
can be represented as follows :
DMS1(p) = min
q∈S1
Dist(p, q) (1)
where Dist(p, q) is the Euclidian distance between pixel p
and pixel q. Before calculating the distance between two
skeletons, we must normalize them to the same size. Conse-
quently, the distance of the two skeletons,S1,and S2, denoted
as Dist(S1,S2), can be calculated as follows :
Dist(S1, S2) =
1
|DM |
∑
p
|DMS1(p) −DMS2(p)| (2)
where |DM | represents the image size of the distance map.
2.2. Human Shape Analysis
We use an ellipse to approximate the human shape [5] instead
of a bounding box. An ellipse can provide more precise shape
information than a bounding box, especially, when a human
carries an object.
3486
Table 1. The experimental results of the proposed fall detec-
tion with the skeleton distance = 0.056
events video
no.
detected
falling
detected non-falling
falling 22 20 2
sit-down 8 2 6
squat 8 0 8
walking 8 0 8
running 8 0 8
where true positive (TP) and true negative (TN) are the counts
of correct detection while false positive (FP) and false nega-
tive (FN) are the counts of incorrect prediction.
In our experiments, we compared the proposed fall detec-
tion system with three different fall detection approaches:the
skeleton match [4], the change rate of sampling skeletons and
the shape analysis [2]. The shape analysis approach only uses
the change rate in the ellipse angle and the ratio between the
major and minor semi-axes of the ellipse to detect human
falling.
The experimental results for the proposed falling detec-
tion are shown in Table 1. Two fall-down incidents cannot
be detected because they are slow-speed fall incidents, which
cannot ﬂag as a fast posture change in the proposed approach.
On the other hand, two brutally sit-down activities are ﬂagged
fall incidents. Table 2 summarizes the performance of the four
human fall detection approaches in terms of the detection rate
and the false alarm rate. Table 3 compares the proposed hy-
brid human detection approach with the shape analysis ap-
proach [2] in terms of the execution time, the detection rate
and the false alarm rate. We can observe from Tables 2 and
3 that the proposed approach, a combination of different fall
detection schemes, can achieve high detection accuracy and
lower false alarm rate within a reasonable execution time.
4. CONCLUSIONS
We presented a novel video-based human fall detection
system, which can achieve real-time detection while still
maintaining high detection accuracy. This system combines
posture analysis and shape analysis to detect fall-down in-
cidents. A human skeleton is ﬁrst extracted from a human
Table 2. The comparisons of four fall detection schemes
detection schemes detection
rate
false
alarm rate
the skeleton match 0.727 0.031
the change rate of sam-
pling skeletons
1 0.34
the shape analysis 0.909 0.16
the proposed scheme 0.909 0.06
Table 3. Comparison of the proposed scheme and the shape
analysis in terms of the execution time,the detection rate and
the false alarm rate
metrics the proposed scheme the shape
analysis
detection rate 90.9% 90.9 %
false alarm rate 6.25 % 15.6 %
execution Time 4.21 sec 1.36 sec
posture. The distance between two sampling skeletons be-
yond a threshold ﬂags a posture change. We then used an
ellipse to approximate the human shape. The orientation
and the ratio of the major and the minor semi-axes of the
ellipse are used to detect the human shape change. We con-
ﬁrmed a human fall incident by monitoring the inactivity
of a person for a period of time. The contribution of this
paper is to combine the skeleton change and shape change
into the proposed fall-down detection framework to provide
a reliable fall detection system. Experimental results indicate
that the proposed human fall detection system can achieve a
high detection rate and low false alarm rate with reasonable
computational costs.
5. REFERENCES
[1] A. William, D. Ganesan, and A. Hanson, “Aging in place:
fall detection and localization in distibuted smart camera
network,” in Proc. the 15th Int. Conf. on Multimedia,
2007, pp. 892 – 901.
[2] Caroline Rougier, Jean Meunier, Alain St-Arnaud, and
Jacqueline Rousseau., “Fall detection from human shape
and motion history using video surveillance,” in Proc.
21st Int. Conf. on Advanced Information Networking and
Applications Workshops, 1987, pp. 215–222.
[3] B. U. Toreyin, Y. Dedeoglu, and A. E. Cetin, “Hmm-
based falling person detection using both audio and
video,” in Proc. Int. workshop on Human-Computer In-
teration 2005, 2005, pp. 211 – 220.
[4] Y. T. Hsu, H. Y. M. Liao, C. C. Chen, and J. W. Hsieh,
“Video-based human movement analysis and its applica-
tion to surveillance systems,” IEEE Transactions on Mul-
timedia, vol. 10, pp. 372–392, March 2008.
[5] and E. Ramasso C. Panagiotakis and G. Tziritas, “Shape-
motion based athlete tracking for multilevel action recog-
nition,” in Proc. Int. Conf. on Articulated Motion and
Deformable object, 2006, pp. 385 – 394.
3488
98年度專題研究計畫研究成果彙整表 
計畫主持人：陳郁堂 計畫編號：98-2221-E-011-071- 
計畫名稱：適用於網格計算中預約式排程之研究 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 1 100 100% 
投 稿 於 IEEE 
Transaction 
Parallel and 
Distributed 
Systems 學 術 期
刊審查中 
 
 
國外 論文著作 
研究報告/技術報告 0 0 100% 
篇 
 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
