  DNS     	
        
	
                                                                                        
     94-2213-E-009-111 
     94 8 1  95 7 31 
  !  " # $ % &' (   ) * + , - .  / 0 1 	2   
  3 1! 4  " 5 ) 6 7 2 8 6 9 : ; 
 
< 6 2 = > ? 
@ A B C D  	E FG H I J KL MN
OPQ R S T N U VWXYN,  Z [ \   ]
^_K` a b c d e^_YNf g h  i jk l Nm
n o  	E Fg p q ` a b r s t u v wN
x  y z { C |  } ~   F  
c  ec  eKL M    - s     
u ,   Z    - s  v ` a b ^
_YN   	&   ? 3  
 jH   2  ?    ¡ ¢ £ ¤ <
¥  ¦ § ¨  K` a b Y^_r s © 
  Nª « J  	
     ¬p ­
® ¯ ¯ ¯ ° ±  ²  ³ ´ µ  c ° ec  ± eN\ < ¶¤
  	
    1· ¸ ¹ º »  
¼ ½ %  &¹ ¾  y  ¿ À  	

 ¹ Á · Â ^Ã Ä Å ´ 
  Æ Ç ¬
È É » } Ê Ë Ì { C k  Í Î Ï
Ð F0 ÑÒ Ó Ô Õ¹ NÖ  × Ø Ù 
	Ó Ú Û Ü NÝ Þ ß \ < ¶à - j
 
á 6 â = > ? (Abstract) 
  Nowadays, most Internet services are 
based on the working model that there will 
be some Domain Name System (DNS) [3][11] 
queries before the communication activities. 
Thus, for supporting DNS-based anomaly 
detection, the key problem is how to identify 
the clusters (sequences) of inappropriate 
DNS queries form the DNS traffic mixture 
that are directly generated or indirectly 
induced by internetworking hosts that are 
abnormal (i.e., including compromised 
and/or the original abusers) [1][2]. In this 
project, we propose an offline DNS-based, 
Two-phase Network Anomaly Detection 
Scheme. Based on the analysis of DNS query 
logs and followed by a field study to assert 
the identification of these threats, we design 
and implement a DNS-based network 
anomalous detection and intrusion 
eradication scheme, combining the 
DNS-based anomaly detection [6][7] and 
IEEE 802.1x-based[8][10] authentication 
scheme to help the system administrators 
identify the network anomalous activities in 
the early phase, locate the suspected problem 
sources and fix them as soon as possible to 
reduce the impact of the abusing hosts.  
 
ã 6   ä å 1A  
@ A B C D   	 E F 2 K L M N
OPQ R S T N U VWXYN,  Z [ \   ]
^_K` a b ^_YNf g h  i jæ ç n o
qA B  	è é ê , ë ì í @ } < î 
ï -  ð p , ñ ¡ A B ò - < ó Fô , 
å õ  ö ÷ Õø Ó ù , k l Ö ú F0
Ñ, ,  û ¡ ü @ ý } þ KL M, ý } ö
    ,    , · ¸   X , ö
÷  )  Ì  þ (  } ö  B 	  , 

 Ó     ö ÷     , L M  
©        ),    k l Ò   
 2  ,  ¹ Ï · ¸ Ò Ó Ô Õ,    Ò
Ï F¼  u     6   · ¸   Ü 
  	 ,    v Ø Ù  	Ê  -
   j 
 ! , m " & #  ¼ $ , ë ,
· ¸    (IDS) [13], G H %  & &
 ? ' @ < ó  	E FÍ Î ( )   
	r s  t * 6 + × j   } < , 
 } \  Ö - ú F   t *  (usage 
pattern analysis), 
 G H h ¡  .  	E
F (M  e-mail X )2   / , ý } 0  
DNS ^_r s t *   access pattern 1
 	
    , \ < ¶p ­ 1 ¼ j2 3 4 m
 	 5 / ú Fn 6 ¼ $ , 7 Ml 8 E F
Ö  - s DNS ^_,  9 h : ; 
 	
  < = j k l , mn o  	E
Fg p D s C > q DNS r s t u v
w, x y z { C |  } ~   F   
hosts. For example, as shown in Table 2, the 
DNS clients listed in categories 1, 2, 4, and 5 
are usually recognized and acceptable. On 
the other hand, the traffic introduced by hosts 
in categories 3 and 6 are usually not welcome. 
Often, they are either malicious programs, or 
underground client/server processes. All of 
these might consume lots of network and 
system resources. 
 
Table 2: Typical users/programs of an 
ordinary DNS resolving server 
Category Examples ( refer to Figure 1) 
1. Ordinary 
clients 
(G1) 
Ordinary clients without 
specialized protection 
mechanism 
2. Normal 
server 
(G2, G4) 
• Mail, web proxy, etc. (G2),  
• Personal firewall systems 
(G4) 
3. p2p [12] 
clients 
(G3) 
BitTorrent, eDonkey, etc. 
4. DNS 
server 
(G5) 
Downstream DNS forwarding 
servers 
5. Malicious 
program 
(G6) 
• Botnet, network virus/worm 
(e.g., mail, web), etc. 
• intrusion attempts 
(SSH/Telnet/Ftp exploits, 
etc.), etc.  
 
Moreover, as shown in Figure 1, both 
normal (e.g., category G2- mail transfer 
agents, etc.) and abnormal (e.g., category G6 
- botnet, or virus/spam engine, etc.) DNS 
clients could usually produce huge amounts 
of DNS queries (resolving) in a specific time 
interval. Therefore, it is often hard to conduct 
the network anomaly detection by using a 
straightforward statistical-based approach on 
DNS queries sequences alone. 
 Methodology and System Architecture  
The system aims at identifying candidate 
sources of compromised hosts from a 
collection of DNS query logs and from the 
background knowledge provided by the 
domain experts. The framework for our 
proposed DNS Knowledge-based, Two-phase 
Anomaly Detection Scheme is depicted in 
Figure 3.  
DNS
traffic
Classification
Machine
Learning
Knowledge
Base
Use Case
Analysis
Attributes and 
Relationships
Extraction
Data
warehouse
Top-N Sorting
(e.g., QS, QD, QT, QS+QT, etc.)
Domain Experts
+ Knowledge  Engineer
Knowledge
Engineer
Alert
Other
Logs
E.g., MTA,
firewall, 
etc.
Legend
QS: Query Source
QD: Query Domain
QT: Query Type
Phase-1
Phase-2
Figure 3: Proposed System Architecture 
As mentioned above, the first problem to 
be addressed is how to identify the candidate 
problem source in the early phase. Next, the 
identified information could be further used 
for checking with the authentication system 
to persuade the users of the compromised 
hosts to fix the problems as soon as possible. 
The general idea is as follows. In Phase 1, 
we deal with the problem by trying to detect 
the misuse (e.g., topmost, repeated 
unresolved) to help identify the network 
anomalous activities in the early phase. Next, 
in Phase 2, we will further try identifying the 
problem types and sources (e.g., locating the 
virus-affected or compromised hosts) for 
fixing, by combining the log analysis of 
access patterns of the DNS and other network 
applications (e-mail, web, etc.). The detail of 
the two-phased algorithm is shown as 
follows: 
 DNS Knowledge-based Two-phase 
Anomaly Detection Algorithm 
 
♦ Phase 1 - DNS Knowledge-based 
Two-phase Anomaly Detection Algorithm 
• Input: DNS traffic (querylog, tcpdump 
trace, etc). 
• Output: Network anomaly candidates 
  Implementation of DNS-based Anomaly 
Detection System 
 
Table 3: System Implementation Environment 
Item Description 
1. DNS 
servers 
PC-based server running  
• FreeBSD (4.11, 5.4) 
• BIND DNS server (9.3.2) 
• Tool – dig, Dnstop  
2.data 
warehouse 
server 
• Windows 2003 Standard 
Eng 
• MS SQL Server 2005 
Enterprise edition 
 
The system environment is listed as 
shown in Table 3. In general, our DNS-based 
scheme and implementation help lessen the 
problem to identify the network anomalous 
activities in the early phase and locate the 
suspected problem sources for fixing to 
reduce the impact of the abusing hosts on the 
overall network operation. For example, 
Figure 4 shows the snapshot of an identified 
anomaly candidate (i.e., a possible bot of a 
certain Botnet) on the Phase-2 data analysis 
server. The listed host was repeatedly trying 
to send forwarding DNS queries for a 
currently unresolved domain name (e.g., 
“mail.ballzout.info”).  
•After checking with dig program, we 
could find that there is currently no such an 
address.
 i.e., Potential Botnet contact address
•List of possible compromised hosts
Figure 4: Identification of IP/host lists 
possible compromised (e.g., BOTNET) 
 
 
♦ Supporting an IEEE 802.1x-based 
Authentication System 
Next, as shown in Figure 5, we have 
refined the DormNet IP registration system, 
mainly by incorporating an IEEE 
802.1x-based authentication scheme, for 
registering the dormitory network users in 
our university to help identify the appropriate 
people responsible for the compromised 
hosts. For hosts unable to enable the IEEE 
802.1x based authentication scheme (e.g., 
missing IEEE 802.1x capabilities), the 
approach to keep MAC addresses (e.g., 
registering the MAC and corresponding IP 
address) will be used instead. 
Figure 5: DormNet IP Registration/Query System 
 Typical Anomalous Example Cases 
Figure 6 shows the accumulative statistics of 
NCTU IP/hosts abusing events from 2006.01 
to 2006.09. Roughly speaking, nearly 50% of 
the reported events are concerning SPAM 
activities and 40% are events about hosts 
being compromised by worm/virus/botnet.  
The rest are events about SSHd 
compromised. 
 
