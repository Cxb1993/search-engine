表  Y04 
中文摘要 
 本研究主要為提出一高效能無元素分析法之軟體架構於大地工程上之應用。在研究之
初步發展階段，使用物件導向設計模式的優勢，提出一 weak-form 無元素分析法之通用軟
體架構，研究者可使用此架構快速發展 weak-form 無元素分析法，且容易維護與更新此架
構。本研究使用 C++物件導向程式語言，實現出此軟體架構，並使用 C++程式語言配合使用
圖形化界面開發函式庫 Qt 及 VTK 繪圖函式庫發展一後處理視覺化程式，將無元素分析結
果之資料，視覺化呈現，讓分析結果能更直接地呈現給研究者，並可容易的驗證其結果之
正確性。 
 
關鍵字 無元素法、物件導向設計模式、軟體架構、視覺化 
 
ABSTRACT 
 The research proposes a software framework for high-performance meshless analysis 
method in geomechanics. A general software framework for weak-form meshless method with 
object-oriented design patterns is presented in this initial stage of the research. Researchers can 
use the framework to develop quickly weak-form meshless method. The framework is extensible 
and easily manageable. Object-oriented programming language C++ is used to implement the 
framework, as well as a post-processing program for visualization analyses results. The 
visualization program is programmed using Qt for graphical user interface and VTK (The 
visualization toolkit) for scientific visualization. The post-processing program can visualize the 
output data of conducted meshless analyses, and help researchers gain insight into the mechanical 
mechanisms through visualization and user interactions. 
 
Keywords  meshless, meshfree, object-oriented design patterns, software framework, 
visuallization 
 
  
表  Y04 
1) 無元素法由於節點之間的連結是在計算時建立的，並可隨著計算的進行而改變，因
此可輕易地處理大變形問題； 
2) 無元素法相較於有限元素法可輕易地與電腦輔助設計之資料庫進行結合，因為無元
素法不需產生網格； 
3) 無元素法可輕易地處理元件的損傷分析 (例如裂縫之生成)，因此適合應用於模擬材
料破壞時的行為； 
4) 準確性相較於有限元素法較容易控制，因為在準確度需要加強的區域增加節點即可
提升準確度，而有限元素法則需要對網格進行修改與調整； 
5) 連體力學之無元素分析可模擬薄殼結構之大變形問題 (例如奈米碳管)； 
6) 無元素法可輕易進行多尺度 (multi-scale) 的分析，在大尺度中加入考量細微特徵之
求解，例如隨應力狀態改變之裂縫延伸問題； 
7) 無元素法在將連體問題離散化的過程當中仍可保有精確的幾何形狀。 
  由以上可知無元素法相較於有限元素法有許多的優點，然而由於其在近似場的計算上
需動態地計算節點之間的連結，而造成了其計算速度上相較於有限元素法為慢。根據 Bathe 
(2001)，無元素法之計算速度與有限元素法比較可相差 2-5 倍，可見以無元素法取代有限元
素法仍有其實務上的困難。 
在所參考的無元素法之相關研究上，以下大致分為四個部份來介紹：1) 基本方法、2) 數
值積分的探討、3) 邊界條件之處理、與 4) 無元素法之應用。 
1) 基本方法：無元素法家族各方法上的發展大致發生在 1977 ~ 2000 之間。此方法最
早可追溯到平滑顆粒流體動力學(SPH, Smoothed Particle Hydrodynamics, Lucy, 
1977) 於天文物理學之研究，然而一直到 1990 年代後才有許多學者投入此一領域
的研究而發展出許多無需網格之數值模擬方法，如表 1 所示。而各方法之間最主要
的差異在於 1) 近似場函數與 2) 系統方程式之求取過程。 
2) 數值積分的探討：數值積分用於 weak-form 無元素法的積分方程式，藉以求得整體
之領域之系統方程式，高斯積分法(Gauss integration)為常用的數值積分方法(Fries 
and Matthies, 2004)。點積分(Nodal integration)的技巧，因評估應力值只在結點上，
且是 particle method 的形式，可用以處理非常大的變形問題(Puso et al. 2008)，在近
年來也有許多文獻在探討點積分的方法(Beissel and Belytschko, 1996; Chen et al., 
2001; Liu et al., 2007)或改善數值積分結果品質的探討文獻(Dolbow and Belytschko, 
1999)。 
3) 邊界條件的束制：由於無元素法的場近似方法中如 MLS (Moving Least Square) 法
不具有 Kronecker delta 性質，而造成了在加入基本邊界條件 (Essential boundary 
condition) 或稱 Dirichlet 邊界條件時不若有限元素般的直接，而必需特殊處理。
而在此邊界條件的束制技巧上，根據 Fernandez-Mendez 與 Huerta (2004) 之研究，
可分為兩大類：1) 針對 weak form 進行修改，如使用 Lagrange Multiplier (Swegle et 
al. 1995)、罰數法 (Penalty Method) (Liu et al. 1995a) 與 Nitsche’s method (Belytschko 
et al. 1994; Nayroles et al. 1998)；與 2) 針對內插函數進行修改 (Babuska and 
Melenk 1997; Duarte and Oden 1995; Liu et al. 1997)。 
表  Y04 
(inheritance)等機制，設計出合適的分析架構。Scholz(1992)使用物件導向中的運算子覆載
(operator overloading)及多型(polymorphic)，並將資料封裝(data encapsulation)於物件，清楚
的定義出程式架構，且相對於程序性語言並可容易的驗證及維護程式。後續更有許多文獻
探討使用物件導向程式語言於有限元素上相關應用之研究(Patzák and Bittnar, 2001; Fang, 
2007; Commend and Zimmermann, 2001)。Heng and Mackie (2009)並使用物件導向設計模式
充分發揮程式可再利用、擴充性及維護性的功能發展無元素分析架構。 
設計模式 (Design Patterns) 這個詞可追溯到 1980 年代，由 Erich Gamma 等人從建築設
計領域引導至計算機科學的領域裡。設計模式的產生，普遍是為了解決在物件導向的程式
中，反覆出現的各種問題之解決方案。設計模式並非直接用來完成程式碼的撰寫，而是描
述在各種不同的情況下，如何解決問題的一種方案。程式設計是思維具體化的一種方式，
是思考如何解決問題的過程；設計模式是在解決問題的過程中，一些良好思路的經驗集成。
最早講設計模式，人們總會提到 Gof (Gang of four) 的著作 (Gamma et al. 2004)，它最早將
經典的 23 種模式集合在一起說明，對後期學習程式設計，尤其是對從事物件導向程式設
計的人們起了莫大的影響。Freeman et al. (2004) 將 Gof 的著作重新以更白話的方式論述，
使一般使用者可以更容易使用設計模式來設計軟體架構。 
在開發大型程式架構時，可藉由物件導向設計模式(Object-Oriented Design Patterns)的
優勢來發展成式架構，如離散元素模擬分析(Yang and Hsieh, 2005; Kozicki and Donz´ 2008)。
因此使用物件導向設計模式設計此無元素分析法之程式架構有其可行性及優勢。 
三、研究方法 
本研究之整體研究架構如圖 1 所示，以領域分解 (domain decomposition) 力學分析模
式為核心架構，並分別由 1) 軟體架構、2) 數值分析方法、3) 加速運算、4) 案例分析、以
及5) 前後處理，這五個角度來發展高效能無元素分析法之軟體架構，並應用於大地工程上，
本階段研究主要提出一初步整合的無元素分析法之軟體架構，以及針對無元素法之特性發
展適合觀看結果之視覺化後處理程式。以下將分別從無元素分析架構開發及視覺化後處程
式方面來說明。 
 
圖 1  研究架構圖 
表  Y04 
勢，使能在這些常遇到的問題能在這些模式中找尋出ㄧ解決方案，而能讓軟體開發初期避
免掉一些錯誤以及往後需大幅度更改程式的可能性，使得軟體得以快速的發展；而在面對
於未來程式之擴充，維護人員只需了解此軟體的設計模式架構，就算不是當初開參與開發
的人員，也能夠輕易的維護與更新。而在其他領域方面研究若需使用到相關力學分析模式
開發程式，也可遵循已設計好之架構模式開發之。 
使用物件導向設計模式來開發軟體架構雖有其方便性，且可以易了解及找尋單一問題
可解決之模式，但若需考量處理許多不同層面之問題，並在設計模式中找出單一模式設計
架構，可能將無法找到適合之解決方案，必須透過許多模式之組合才能將不同層面的問題
整合在ㄧ個架構下，但要整合不同模式以及判斷是否適合用於解決所遭遇的問題，將有其
困難性存在。 
本階段將透過已設計完成之力學分析軟體架構，進行無元素法核心分析演算法之開發，
本研究將從表 2 中數十種無元素分析方法組合，透過更進ㄧ步之文獻探討，在其中擇其一
種組合予以實作。本實作中將使用廠商調校過之高效能數學函式庫 (如 Intel MKL 或 AMD 
ACML 等)，用以求解系統方程式或需要使用數學函式庫的問題，藉此節省自行開發求解數
學系統的時間，並達高效能之運算。 
本研究在此階段將初步使用物件導向設計模式，開發出ㄧ通用之 weak-form 無元素力
學分析之軟體架構，找出適合之設計模式予以整合之，藉此達成ㄧ具擴充性、維護性及通
用性之力學分析軟體架構。 
3.2 後處理視覺化程式開發 
 為了能讓使用者更容易的使用、觀察各種無元素法的計算結果，本研究另行開發了一
個針對無元素法分析結果的後處理程式，以將無元素法之分析結果加以視覺化的呈現，並
利用圖形化使用者介面( Graphical User Interface ,GUI )讓使用者透過一簡單、易懂的操作介
面，對於無元素法分析結果加以展現與了解。本研究之後處理視覺化呈現以 C++物件導向程
式語言開發，並配合圖形化界面開發函式庫 Qt 及 VTK 繪圖函式庫發展一後處理視覺化界
面，以下將分別介紹 Qt 及 VTK。 
 Qt 是一個跨平台的 “圖形化介面開發函式庫”，由挪威的 Trolltech 公司所開發。其雛
型在 1991 年完成，1995 年 Trolltech 公司公開釋出 Quasar Toolkit 0.90，至今經過了好幾次
的改版，其功能也日加完整、強大。在 2008 年 6 月，Nokia 合併了 Qt 的開發公司，藉以
加強自己在行動裝置的桌面應用程式之開發，並在 2008 年 9 月將其更名為 Qt Software，
目前，其最新推出的版本為 4.5.3 版。Qt 有以下幾點的特性，1) 易於使用且大量的類別：
數百個以上的類別，整合各種功能，如檔案讀取，I/O device、資料庫.......等；2) 跨平台特
性：支援 Windows、Linux、Mac ......等多個平台；3) 各種開發工具：Qt  designer、Partner 
Add-ons、Qt Assistant、Qt Linguist...等各式開發工具；4) 支援 C++與 Java 等不同的語言。
使用 Qt 所開發出的界面可至官方網站瀏覽(Qt 官網, http://qt.nokia.com/)。 
 VTK( Visualization ToolKit )是一個繪製 3D 圖形的工具，且具有物件導向的類別庫。
VTK 一開始是在 1993 年，以 The Visualization Toolkit: An Object-Oriented Approach to 3D 
Graphics 這本書的附件身份推出，以下為 VTK 幾個主要的特點，1) 屬於開放原始碼的資
源；2) 其提供了強大且豐富的 3D 圖形類別；3) 具有支援多種程式語言( Tcl/Tk、Java、Python
和 C++等)的特性；4) 跨平台能力(Windows、Linux、Mac)，因此在推出不久就大受好評，
表  Y04 
 
圖 2  weak-form 無元素法分析線彈 
性問題之通用流程 
圖 3  weak-form 無元素法組合示意圖 
4.2 weak-form 無元素法程式架構 
 根據本研究 4.1 節所整理出之需求，考量其互動關係，本研究使用物件導向程式語言
及設計模式，設計出此初步之 weak-form 無元素法通用軟體架構，並完成實做，其為一可
行之軟體架構。如圖 4 所示，為整體之程式介面架構類別圖，圖中除了 Client class 及 Domain 
class 外，其餘每個方塊皆為其介面類別，分別需各自演化其實體子類別，此目的主要為讓
所考慮之需求，在程式中能有共通之介面，以達界面間可以容易的溝通，此為透過物件導
向程式語言中，將不同的資料分別封裝(data encapsulation)在各自的類別中，並透過多型
(Polymorphism)的方式，讓程式中可以選擇各自要實現的方法，因此圖中每個方塊都需設計
其適當之共通介面。本架構主要分成以下八部份組成： 
1) 系統介面：此部分為整個分析系統之介面類別，使用者(Client class)首先透過 Model class 
建立其實體模型資料，再將模型資料給予 SystemInterface class 使用，使用者透過此介面
建立出整體系統分析之相關實體物件，並組合起整體分析架構，使用者藉由
SystemInterface class 的介面操作，簡單的控制整個系統分析，而不用知道到系統中複雜
的運作情況，此為利用物件導向設計模式中的表象模式(Façade pattern)實現而成。而
Model class 則衍生其對應之模型產生形式，來建立起模型資料，如：透過讀檔來建立模
型、建立預設之模型等方式，此為物件導向設計模式中策略模式(Strategy pattern)分別將
一群相同目的之演算法整合在一起，藉由共通之介面衍生其實體物件。 
2) 核心架構：主要為 Domain class 及 Formulation class 之間與考量因素之物件互動流程。
Domain class 負責管理整體主要的運算流程，透過 Formulation class 計算求得整體模型
之系統方程式，之後呼叫 Solver class 求解系統方程式，得到最後結果。Formulation class
主要為根據 Domain class 的要求，配合所選擇控制方程式、內插函數及數值積分方式，
計算出整體之系統方程式，並透過 Assemble class 將計算完之勁度矩陣及力的向量分別
存入 SaprseMatrix class 及 LoadVector class 中，以讓 Solver class 取得資料計算出系統方
程式的解。因考量不同的控制方程式，所擁有項次不同，及計算流程也不同，因此
Formulation class 將根據不同的控制方程式，各自衍生其特化之 Formulation subclass。
Domain class 及 Formulation class 在此所扮演之角色為設計模式中中繼者(Mediator 
1) 建立模型
4) 加入邊界條件至
整體勁度矩陣
6) 求解系統方程式
Ku = F
5) 加入外力或自重至
方程式
7) 計算應力應變值
3) 透過數值積分方法，
計算整體模型勁度矩陣
[ ] [ ][ ]TK B D B d

 
8) 後處理資料呈現
2) 選擇
Approximation Function
表  Y04 
 
 
圖 4  weak-form 無元素分析法之整體架構介面類別圖 
 
圖 5  計算近似函數(Approximation function)之類別架構圖 
  
圖 6  控制方程式(Governing equation)之類別架構圖 圖 7  後處理視覺化呈現之程式架構圖 
1
1
1
表  Y04 
 
a) 軟體外觀及 3D 模型展示 b) 結點散布情形 
c) 網格之呈現 d) 邊界束制表示法及三軸圖示 
e) 節點資訊表 f) 外力加載情況 
g) 綜合呈現 h) 節點編號呈現 
圖 8  視覺化後處理軟體結果展示圖 
 
表  Y04 
O’REILLY. 
Fries, T. P. and Matthies, H. G. (2004). ”Classication and overview of meshfree methods.” 
Institute of Scientic Computing, Technical University Braunschweig Brunswick, Germany. 
Gamma, E., Helm, R., Johnson, R., and Vlissides, J. (2004). “Design Patterns, Elements of 
Reusable, Object-Oriented Software.” Addison-Wesley. 
Gu, Y.T.(2005). “Meshfree methods and their comparisons.” International Journal of 
Computational Methods (IJCM), 2(4), 477-515. 
Heng, B. C. P. and Mackie, R. I. (2009). “Using design patterns in object-oriented finite element 
programming.” Computers and Structures, 87, 952-961. 
Huerta, A., Fernandez-Mendez, S. and Liu, W. K. (2004). “A comparison of two formulations to 
blend finite elements and mesh-free methods.” Computer Methods in Applied Mechanics and 
Engineering, 193, 1105-1117. 
Kozicki, J. and Donz´, F.V. (2008) “A new open–source software developed for numerical 
simulations using discrete modeling methods.” Computer Methods in Applied Mechanics 
and Engineering, 197, 4429-4443. 
Li, S. and Liu, W. K. (2002). “Meshfree and particle methods and their applications.” ASME 
Applied Mechanics Review, 54, 1-34. 
Liu, W. K., Jun, S. and Zhang, Y. F. (1995a). “Reproducing kernel particle methods.” 
International Journal for Numerical Methods in Engineering, 20, 1081-1106. 
Liu, W. K., Li, S. and Belytschko, T. (1997). “Reproducing least-square kernel Galerkin method. 
(I) Methodology and convergence.” Computer Methods in Applied Mechanics and 
Engineering, 143, 113-154. 
Liu, G. R., Zhang, G. Y., Wang, Y. Y., Zhong, Z. H., Li, G. Y. and Han, X. (2007). “A nodal 
integration technique for meshfree radial point interpolation method (NI-RPIM).” 
International Journal of Solids and Structures, 44, 3840-3860. 
Patzák , B. and Bittnar, Z. (2001). “Design of object oriented finite element code.” Advances in 
engineering software, 32, 759-767. 
Puso, M. A., Chen, J. S., Zywicz, E. and Elmer, W. (2008). ” Meshfree and finite element nodal 
integration methods.” International Journal for Numerical Methods in Engineering, 74, 
416-446. 
Qt官網, http://qt.nokia.com/ 
Scholz, S. P. (1992). “Elements of an object-oriented FEM++ program in C++” Computers and 
Structures, 43(3), 517-529. 
Swegle, J.W., Hicks, D. L. and Attaway, S. W. (1995). “Smoothed particle hydrodynamics 
stability analysis.” Journal of Computational Physics 116, 123-l34. 
VTK官網, http://www.vtk.org/ 
Yang, C. T. and Hsieh, S. H. (2005). “An object-oriented framework for versatile discrete objects 
simulation using design patterns.” Computational Mechanics, 36, 85-99.  
 
表 Y04 
行政院國家科學委員會補助國內專家學者出席國際學術會議報告 
                                                             98 年 10 月 29 日 
報告人姓名  謝佑明 
 
服務機構 
及職稱 
 
國立台灣科技大學營建工程系 
助理教授 
 
     時間 
會議 
     地點 
98 年 6 月 24 日-27 日 
美國德州大學奧斯汀分校 
本會核定 
補助文號 
97-2221-E-011-102- 
會議 
名稱 
 (中文)第 26 屆營建工程之自動化與機器人技術國際研討會 
 (英文) 26th International Symposium on Automation and Robotics in 
Construction (ISARC) 
發表 
論文 
題目 
 (中文) 
1. 一個空間內插之物件導向程式架構 
2. 有限元素參數研究之平行計算之高效能分析方法 
 (英文) 
1. An object-oriented framework for spatial interpolation 
2. An Efficient Scheme for Parallel Parametric-Study in Finite 
Element Analyses 
