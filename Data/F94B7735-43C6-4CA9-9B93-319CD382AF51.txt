 2 
摘要 
 
本研究計畫預計分成三年三階段完成，各階段目標分別為「平行計算與 PSO演算法於叢集架構的建立
與分析」、「平行多目標 PSO演算法的建立」以及最後一年透過前二年的研究成果，促成高效能平行多
目標演算法的開發與建立，藉此有效且廣域的針對多目標最佳化問題進行尋解，並同時兼顧所得解間
的差異/多樣性，以達到演算搜尋的收歛性與多樣性。 
本計畫第三階段目標是藉由前兩階段所得實驗分析結果，進一步促成發展多目標 PSO演算法之一般性
想法，於求解多目標最佳化問題時，實驗亦針對高維度多目標問題進行探討，為進一步評估所發展之
方法的性能，實驗結果將與當前數個優秀之多目標演算法進行比較與分析。 
 
Abstract 
Most real world optimization problems involve the optimization task of more than single objective function 
requires a significant computational effort, and therefore various evolutionary algorithms (EAs) for 
multi-objective optimization are proposed in last decade. In this paper, a new proposal of using particle swarm 
optimization algorithms is presented for solving the multi-objective optimization problems. The proposed 
algorithm is constructed based on the concept of Pareto dominance, which include both the diverse search (DS) 
and empirical movement (EM) strategies. The proposed parallel particle swarm multi-objective evolutionary 
algorithm with those strategies (EMDS-MOPSO) is tested through a variety of standard benchmark functions 
taken from the literature and compared with other four MOEAs. The experimental results verify that the 
proposed algorithm is extremely competitive as compared with other multi-objective optimizers.                 
 
Keywords: evolutionary algorithms (EAs), multi-objective optimization, Particle Swarm Optimization (PSO) 
algorithm, large-scale multi-objective optimization problems. 
 
1. INTRODUCTION AND BACKGROUND 
 
There are various optimization problems involve the optimization task of more than single objective function in real world. Hence, 
the typical single objective optimization methods cannot be directly applied to multi-objective optimization when all of the 
objectives are treated equally important. Among different objectives, different solutions may produce different trade-offs (i.e., 
conflicting scenarios), and a solution can be treated as an extreme (in a better fitness sense) with respect to one objective but 
requires a compromise in other objectives. Therefore, various evolutionary algorithms (EAs) are proposed for multi-objective 
optimization. The research direction is to improve both the computational efficiency of the algorithm and distribution of the 
obtained non-dominated optimal solutions. Some researchers have proposed many creative MOEAs based algorithms to maintain 
diversity and uniformity of Pareto optimal solutions in recent years. It implies that the members of the population will perform 
co-operative search behavior. Through the co-operative search strategy, more different non-dominated optimal solutions may be 
discovered during the search of the multi-objective problem. The primary advantages for MOEAs are that they perform well in 
dealing with complex and large-scale optimization problems, and the cooperative searching behavior with the population-based 
structure that provides a large number of solutions in a single run (i.e., generation or iteration). SPEA (Zitzler and Thiele 1999) used 
a secondary population to store the non-dominated solutions and a cluster mechanism to ensure diversity. Fieldsend and Singh 
(2002) applied an unconstrained elite archive to store the non-dominated individuals found along the search process. In NSGA-II 
(Deb et al., 2002), a concept of the crowded-distance was introduced. The crowded-distances of all solutions are calculated by a 
sorting procedure on each of their objective values. Then, the solutions with larger crowded-distance are retained in the archive. On 
the other hand, the SPEA2 (Zitzler et al., 2002) applied the selection, crossover, and mutation operators to fill an archive of 
individuals. Ray and Liew (2002) proposed an algorithm that used Pareto dominance and combined concepts of evolutionary 
techniques with the particle swarm. Following the concept of the crowded-distance, to measure the density among the obtained 
non-dominated solutions, MOPSO (Coello Coello et al., 2004) used an adaptive grid search strategy for adjusting the diversity of 
the obtained solutions. Moreover, a secondary repository (i.e., archive) of particles was also used to store the solutions and guide the 
search of the particles. Coello Coello and Pulido (2001) applied three forms of elitism with an external archive to improve the GA. 
Beausoleil (2005) applied the Tabu/Scatter search algorithm to develop a MOEA to solve the multi-objective optimization problems, 
called Multi-Objective Scatter Search (MOSS). In the MOSS, frequency memory and another escape mechanism were used to 
 4 
where the value 
max
jD  and 
min
jD  are the predetermined maximum and minimum values of the -thj  decision variable. 
 
 
X1 
X2 
id  
: The centroid for all non-dominated solutions 
: The obtained non-dominated solutions in the external archive 
tC
iA  
 
Figure 1  The illustration for the remote member search method.  
 
Once all Euclidean distances 'sid  are available for each solution iA , a selection scheme is performed using a stochastic 
universal sampling method, Roulette Wheel (RW). Solutions with larger distance values will be selected more likely than the ones 
with smaller distance values. Provided the centroid 
t
C  is regarded as a pseudo-position for the currently obtained non-dominated 
solutions in the decision variable space, the solution with the largest distance value id  implies that its current position is remote 
from other obtained non-dominated solutions. Namely, the swarm will be urged to explore the less visited solution space as to 
maintain the solution diversity by means of selecting a solution with a larger value of id  as the leader.  
B. The Sigma search method:  
In addition to maintaining the diversity of the obtained non-dominated solutions, the most important task is to assure the 
convergence of the MOEA. To achieve this aim, a method of leader selection is augmented to enhance the convergence ability of the 
algorithm under development. This method is originally introduced by Mostaghim and Teich (2003), termed the sigma method (or 
σ  method), which involves choosing the guiding solution based on the similarity of the angular position in the objective space. To 
explain the mechanism of the sigma method clearly, the original concept is described first as follows. In the sigma method, each 
solution is assigned a iσ  value. Suppose that the coordinate of a solution x  is defined as 1 2( ( ), ( ))f x f x  in the bi-objective case. 
Consequently, all the solutions that are located on the line 2 1( ) ( )f x af x=  have the identical iσ , where a  is a constant. In this 
case, the sigma value is defined as:  
2 2
1 2
2 2
1 2
( ) ( )
=
( ) ( )i
f x f x
f x f x
σ
−
+
. 
Figure 2 illustrates that different solutions iS  have different σ  values. It is self-evident, the 0σ =  while 1 2( ) ( )f x f x=  as can 
be observed in 2S . In other cases, 1S  and 3S  are assigned two different σ  values 0.8−  and 0.96 , respectively. To extend the 
concept of the sigma method, each obtained non-dominated solution contains ( )2m  sigma values in a m -objective space. For 
instance, in a 3-objective case, the σ  values of the non-dominated solution 1 2 3( ( ), ( ), ( ))f x f x f x  can be calculated as follows:  
( )
2 2
1 2
2 2 2 2 2
2 3 1 2 3
2 2
3 1
( ) ( )
= ( ) ( ) / ( ) ( ) ( )
( ) ( )
f x f x
f x f x f x f x f x
f x f x
σ
−
− + +
−
 
 
 
 
 
. 
 
    2    3         5    
6 
 
 
3 
 
1 
1( 0.8)S σ = −  
2 ( 0)S σ =  
3( 0.96)S σ =  
1f  
2f  
  
 6 
t t
i iEA A Dε= +

, 
where 
t
iEA  is the tentatively obtained solutions with D

 for the individual tiA  of the archive in the -tht  generation. The 
parameter ε  is a weight factor which involves the acceptability of the vector D

, as can be defined by:  
1t t
dom new
t
A A
A
ε
+
+
= , 
where tA  is the number of the individuals in the archive during the -tht  generation. The parameter tdomA  denotes how many 
individuals of the archive in the -tht  generation are dominated by the generated solutions in the ( 1)-tht +  generation. The 
parameter 1t
new
A +
 denotes how many generated non-dominated solutions are adopted into the archive in the ( 1)-tht +  generation. 
In other words, once more individuals of the archive are dominated by the generated solutions from the population, and then the 
current individuals of the archive may execute a tentative large-scale movement in the decision variable space. In this way, the 
individuals of the archive may exhibit a marked convergence toward the known Pareto optimal front in the objective space.  
2.1.3 The Picking Rule for External Archive — Knitting Technique  
As the proposed algorithm is a type of archive-based MOPSO, the picking rule should be devised to maintain the size of the 
archive in the EMDS-MOPSO algorithm. The purpose of the external archive (or called repository) is to record the discovered 
non-dominated solutions during the optimization process. Of equal importance is the mechanism that makes the obtained Pareto 
front evenly distributed. Once the number of the currently obtained non-dominated solutions exceeds the allowable capacity of the 
archive, the picking rule would be triggered. Figure 4 diagrammatically illustrates the picking procedure of non-dominated solutions. 
First, a pair of solutions with the maximum Euclidean distance in the objective space is picked (see Figure 4 (a)) according to:  
2
, ,
( , ) ( ) ( )Max
X Y X YS
Edis X Y F X F Y
∈ ≠
= − ,  
where S  represents the set of currently obtained non-dominated solutions. Each un-picked solution 
un pickedS −  calculates the 
minimum Euclidean distance between itself and each picked solution pickedS  in the objective space. Then, the solution un pickedS −  
with maximum Euclidean distance is picked that can be illustrated graphically in Figure 4 (b) and the formula is defined by:  
2
,
( , ) ( ) ( )Max Min
pickedun picked
un picked picked YX SX S
Edis S S F X F Y
−
− ∈∈
= − , 
where ( , )
un picked pickedEdis S S−  denotes the maximum Euclidean distance among all the collected minimum Euclidean distances 
between all un-picked solutions 
un pickedS −  and each picked solution pickedS . The procedure is repeatedly executed to knit the 
currently obtained Pareto front until the remainder of the capacity of the external archive is filled up (the next picking procedure can 
be seen in Figure 4 (c)).  
 
(a)
( , )Max Edis X Y
 (b)
MaxDis
(c)
MaxDis
 
 
Figure 4 Illustration of the picking rule for the external archive. 
2.1.4 The Perturbation Operator (Polynomial Mutation)  
In order to maintain the diversity among all individuals within the population, the mutation operators are widely used in 
various multi-objective optimization algorithms, such as the SPEA2 (Zitzler et al., 2002), NSGA-II (Deb et al., 2002), AbYSS 
(Nebro et al., 2008), among others (Nebro et al., 2007; Sierra and Coello Coello, 2005). The perturbation (or mutation operator) is to 
reduce the risk that all individuals of the population are trapped into a similar local topology. For this reason, the polynomial 
mutation (Deb, 2001) is chosen to implement in the proposed EMDS-MOPSO algorithm for maintaining the diversity of the 
particles along the optimization process. Here, a mutation rate 1
nm
p =  (where n is the number of decision variables) is suggested 
 8 
Figure 5 The flowchart of the EMDS-MOPSO algorithm. 
4. Experimental Setup 
The experiment conducted in this chapter is categorized into three sections for assessing the effectiveness, robustness and 
efficiency of the EMDS-MOPSO algorithm in terms of a set of benchmark functions. For each experiment, 100 independent runs 
are performed for the evaluation purpose, and the performance of the EMDS-MOPSO algorithm is compared with the SPEA2 
(Zitzler et al., 2002), NSGA-II (Deb et al., 2002), SMPSO (Nebro et al., 2009) and AbYSS (Nebro et al., 2008). In the first 
experiment, the noted bi-objective serial of ZDT and WFG benchmark functions are adopted. In the second and third experiments, 
six DTLZ benchmark functions (Deb, 2005) are implemented as the tri- and pent-objective test problems, respectively, to further 
evaluate the effectiveness of the proposed EMDS-MOPSO algorithm.  
4.1 Description of Benchmark Functions  
This section introduces the adopted multi-objective test problems in this dissertation. For the bi-objective test problems, Zitzler 
et al. (2000) suggested six test problems. We choose 5 out of those 6 problems here and call them ZDT1, ZDT2, ZDT3, ZDT4 and 
ZDT6, respectively. The reason why ZDT5 is not selected is two-fold: (i) ZDT5 is of binary coding instead of real coding 
considered in this dissertation; (ii) ZDT4 and ZDT5 resemble each other in producing numerous local Pareto-optimal fronts. The 
series of ZDT test problems are tabulated in Table 3.1 The table also shows the number of variables and their bounds of input 
variables. In addition, we also adopt additional 9 bi-objective test problems, WFG1 to WFG9, from the WFG Toolkit that was 
proposed by Huband et al. (2007). These derived transition vectors are manipulated to acquire the objective values, via several 
predefined shape functions. For the more detailed information of the WFG test problems, interested readers can refer to the original 
publication in Huband et al. (2007). The properties of these problems are specified in Table 2. Note that all objectives of each 
test function are designed to be minimized at the same time.  
 
Table 1  The test problems for bi-objective optimization. 
Problems n Var. bounds Objective functions 
ZDT1 30 [0,  1]ix ∈  
1 1 2 1
= 2
( ) = , ( ) ( )(1 / ( ) ),
( ) = 1 9( ) / ( 1)n
ii
f x x f x g x x g x
g x x n
= −
+ −∑
 
ZDT2 30 [0,  1]ix ∈  
2
1 1 2 1
= 2
( ) = , ( ) ( )(1 ( / ( )) ),
( ) = 1 9( ) / ( 1)n
ii
f x x f x g x x g x
g x x n
= −
+ −∑
 
ZDT3 30 [0,  1]ix ∈  
1 1 2 1 1 1
= 2
( ) = , ( ) = ( )(1 / ( ) ( / ( )) sin(10 )),
( ) = 1 9( ) / ( 1)n
ii
f x x f x g x x g x x g x x
g x x n
pi− −
+ −∑
 
ZDT4 10 
1 [0,  1],
[ 5,  5],
= 2,...,  
i
x
x
i n
∈
∈ −  
1 1 2 1
2
= 2
( ) = , ( ) = ( )(1 / ( ) ),
( ) = 1 10( 1) ( 10 cos(4 ))n
i ii
f x x f x g x x g x
g x n x xpi
−
+ − + −∑
 
ZDT6 10 [0,  1]ix ∈  
6 2
1 1 1 2 1
0.25
= 2
( ) = 1 exp( 4 ) sin (6 ), ( ) = ( )(1 ( / ( )) ),
( ) = 1 9(( ) / ( 1))n
ii
f x x x f x g x x g x
g x x n
pi− − −
+ −∑
 
 
Table 2 The test problems for bi-objective optimization. 
Problem Separability Modality Bias Geometry 
WFG1 separable uni polynomial, flat convex, mixed 
WFG2 non-separable 1 2:uni, :multif f  no bias convex, disconnected 
WFG3 non-separable uni no bias linear, degenerate 
WFG4 non-separable multi no bias concave 
WFG5 separable deceptive no bias concave 
WFG6 non-separable uni no bias concave 
WFG7 separable uni parameter dependent concave 
WFG8 non-separable uni parameter dependent concave 
WFG9 non-separable multi, deceptive parameter dependent concave 
 10 
is available at: http://www.tik.ee.ethz.ch/pisa/selectors/spea2/), the real-coded version of the NSGA-II (the NSGA-II code is 
implemented in C which is available at: http://www.iitk.ac.in/kangal/codes.shtml) and the SMPSO, 20 for the AbYSS (the code of 
AbYSS and SMPSO have been implemented in Java using jMetal which is available for downloading at: 
http://mallba10.lcc.uma.es/wiki/index.php/Main_Page/) and 25 for the EMDS-MOPSO. For the NSGA-II, SPEA2 and AbYSS, the 
crossover probability 0.9
c
p =  and mutation probability 1 Dmp =  (where D  is the number of decision variables) with the 
distribution indices 20
c
η =  and 20
m
η = , respectively. Except for the crossover operator, the identical settings of the perturbation 
operator (i.e., mutation operator) are used in the SMPSO and EMDS-MOPSO. In AbYSS, the pairwise generation parameters were 
set to 1 10RefSet =  and 2 10RefSet = . In each experiment, the EMDS-MOPSO algorithm uses an adaptive inertia parameter with 
the dynamic inertia weight strategy that is introduced before. In addition, the learning factors (or termed acceleration coefficients) 
1C  and 2C  are randomly generated in each generation, and the size of the external archive is limited to 100 solutions for every 
MOEAs. 
4.3 Experimental Results and Analysis 
To analyze the performances of each algorithm, this section presents the computational results obtained by using different 
MOEAs for three experiments (i.e., bi-, tri- and pent-objective test problems). For each test problem in every experiment, we have 
executed 50 independent runs for statistics collection. The means and standard deviations of the three performance metrics are 
recorded for each test problem.  
In the experiment, 14 bi-objective benchmark problems (i.e., the series of ZDT and WFG test problems) are adopted as the 
test-bed to compare the performances of each algorithm. Each test problem is evaluated based upon a fixed number of function 
evaluations (i.e., 37.5 10×  FES) as the termination criterion. Table 3 shows the results of the GD obtained by different algorithms. 
In all bi-objective test functions, the EMDS-MOPSO algorithm returns smaller means and standard deviations of GD than the other 
4 MOEAs. For the EMDS-MOPSO algorithm, the accuracy of the mean of GD is achieved down to the fourth or fifth digit after 
decimal point for all ZDT test problems. The smaller standard deviation, the more stable solution returned by the algorithm. 
Obviously, the EMDS-MOPSO algorithm prevails over both in consistency and stability of GD in all benchmark problems of the 
ZDT family. Likewise, in the series of the ZDT test problems, the performance of the proposed method yields the smaller values of 
the GD metric than other algorithms for the series of the WFG test problems. To observe the results of the WFG benchmark 
problems, competitive results of the convergence are produced by SMPSO, showing the same digit after decimal point with the 
EMDS-MOPSO algorithm in WFG5 and WFG9. These two test functions contain a deceptive transformation function to interfere 
the search behaviors of the algorithm. The WFG1 employs a couple of transformation functions, the polynomial and flat functions, 
to obstruct the convergence capabilities of the algorithms. Due to the configuration of the bias in WFG1, all algorithms have 
difficulty in approaching the Pareto optimal front, as can be seen from Table 3. Note that the identical decimal place of the GD 
metric is achieved by each optimizer. In short, the proposed algorithm takes the lead with better consistency and stability of GD in 
every test problem.  
 12 
Table 4  Means and standard deviations of the convergence metric SP for the bi-objective test problems. 
Function EMDS-MOPSO NSGA-II SPEA2 SMPSO AbYSS 
Avg. 2.171e－1 5.023e－1 6.236e－1 3.239e－1 6.349e－1 
ZDT1 
S.D. 1.36e－3 9.24e－2 2.92e－1 8.05e－2 9.62e－2 
Avg. 2.086e－1 7.067e－1 8.012e－1 5.452e－1 7.801e－1 
ZDT2 
S.D. 1.74e－3 3.81e－2 7.01e－2 8.78e－2 7.60e－2 
Avg. 1.396e－1 3.952e－1 4.584e－1 6.477e－1 5.769e－1 
ZDT3 
S.D. 5.48e－3 3.08e－2 3.25e－2 1.04e－1 4.13e－2 
Avg. 2.066e－1 9.772e－1 8.576e－1 4.335e－1 8.890e－1 
ZDT4 
S.D. 2.18e－2 1.94e－1 8.48e－2 2.94e－2 3.87e－2 
Avg. 2.158e－1 8.303e－1 8.119e－1 7.647e－1 5.922e－1 
ZDT6 
S.D. 3.18e－2 8.51e－2 1.62e－2 1.17e－2 7.49e－2 
Avg. 5.131e－1 3.501e－1 3.238e－1 6.237e－1 3.208e－1 
WFG1 
S.D. 1.02e－1 2.67e－2 1.90e－2 3.03e－2 2.40e－2 
Avg. 6.806e－1 8.239e－1 6.508e－1 1.455e－1 6.193e－1 
WFG2 
S.D. 1.47e－2 1.31e－1 1.16e－1 9.59e－2 5.41e－1 
Avg. 3.018e－1 3.768e－1 1.396e－1 7.515e－1 3.957e－1 
WFG3 
S.D. 1.27e－2 2.62e－2 9.42e－2 8.04e－2 7.99e－2 
Avg. 3.125e－1 2.610e－1 3.609e－1 3.066e－1 2.455e－1 
WFG4 
S.D. 9.35e－3 4.64e－2 6.07e－2 5.38e－2 3.57e－2 
Avg. 3.665e－1 2.803e－1 2.428e－1 5.221e－1 1.609e－1 
WFG5 
S.D. 5.72e－3 3.72e－2 5.16e－2 8.63e－2 3.47e－2 
Avg. 1.983e－1 2.036e－1 2.291e－1 4.827e－1 2.318e－1 
WFG6 
S.D. 1.69e－2 7.57e－2 8.11e－2 8.31e－2 1.92e－1 
Avg. 3.038e－1 3.776e－1 5.548e－1 4.483e－1 4.024e－1 
WFG7 
S.D. 6.14e－2 2.16e－1 1.10e－1 6.56e－2 1.89e－1 
Avg. 3.386e－1 3.733e－1 4.361e－1 3.132e－1 3.898e－1 
WFG8 
S.D. 2.49e－2 5.52e－2 3.04e－2 7.45e－2 4.14e－2 
Avg. 3.252e－1 2.225e－1 2.874e－1 7.279e－1 2.916e－1 
WFG9 
S.D. 1.32e－2 2.93e－1 2.15e－1 7.92e－2 1.63e－1 
 
 14 
all MOEAs. Obviously, larger HV values are always observed from the EMDS-MOPSO algorithm, a fact that may be largely 
attributed to its excellent performance on GD.  
The proposed EMDS-MOPSO algorithm has been verified to be an extremely competitive optimizer for handling the 
multi-objective optimization problems. To maintain the diversity of the obtained non-dominated solutions, a picking rule, dubbed 
knitting technique, is devised and incorporated in the proposed algorithm. Moreover, the EM and DS strategies are particularly 
design for enhancing the convergence and diversity of the searching behavior of the EMDS-MOPSO algorithm. It is observed from 
the experimental results that the EMDS-MOPSO algorithm provides the best performances concerning the GD metric, although the 
corresponding spread of the obtained Pareto solutions is not always the best one in terms of the evaluation of the SP metric among 
all MOEAs in each benchmark problem. Overall, the EMDS-MOPSO algorithm performs best in the mean of the SP metric in 14 
test problems. As evidenced by the computational experience from the HV metric, the EMDS-MOPSO algorithm proves to be an 
extremely competitive algorithm that could cover largely the Pareto front for every benchmark problem considered in this paper. 
4. Conclusions and future research 
A novel PSO-based algorithm with the diversified search and empirical movement strategies, termed EMDS-MOPSO, is 
proposed in this dissertation to handle multi-objective optimization problems. Additionally, a novel picking rule (i.e., knitting 
strategy) is particularly designed for maintaining the volume of non-dominated solutions in the external archive, which is eventually 
used for constructing the obtained Pareto optimal front. To verify the proposed algorithm, a series of ZDT and WFG test problems 
are used as the test-bed of the bi-objective optimization problems, and three well-known performance metrics, GD, SP and HV, are 
used for the evaluation purpose. On a fair comparison basis of using the same number of function evaluations, the proposed MOES 
is able to yield a well-distributed Pareto front and much better convergence of obtained non-dominated solutions than the other four 
4 elitists: NSGA-II, SPEA2, AbYSS and SMPSO. As evidenced by the computational experience, the EMDS-MOPSO algorithm 
proves to be an extremely competitive algorithm that could cover largely the Pareto front for every test functions considered in this 
paper. 
 
References: 
Zitzler, E. and Thiele, L. (1999). “Multiobjective Evolutionary Algorithms: A Comparative Case Study and the Strength Pareto 
Approach,” IEEE Transactions on Evolutionary Computation, Vol. 3, pp. 257–271. 
Fieldsend, J.E. and Singh, S. (2002). “A Multi-Objective Algorithm based upon Particle Swarm Optimization, an Efficient Data 
Structure and Turbulence,” Proceedings of the 2002 U.K. Workshop on Computational Intelligence, 2-4 September, 
Birmingham, UK: IEEE press, pp. 37–44. 
Deb, K., Pratap, A., Agarwal, S. and Meyarivan, T. (2002). “A fast and elitist multiobjective genetic algorithm: NSGA-II,” IEEE 
Transaction Evolutionary Computation, Vol. 6, pp. 182–197. 
Zitzler, E., Laumanns, M. and Thiele, L. (2002). “SPEA2: Improving the Strength Pareto Evolutionary Algorithm for Multiobjective 
Optimization,” Proceedings of the EUROGEN 2001 Conference, Barcelona, Spain: CIMNE, pp. 95–100. 
Ray, T. and Liew, K. M. (2002). “A Swarm Metaphor for Multiobjective Design Optimization,” Engineering Optimization, Vol. 
34(2), pp.141–153. 
Coello Coello, C. A., Toscano Pulido, G. and Salazar Lechuga., M. (2004). “Handling Multiple Objectives with Particle Swarm 
Optimization,” IEEE Transactions on Evolutionary Computation, Vol. 8(3), pp. 256–279. 
Coello Coello, C. A. and Pulido, G. T. (2001). “A micro-genetic algorithm for multiobjective optimization,” First International 
Conference on Evolutionary Multi-Criterion Optimization, Lecture Notes in Computer Science, 7-9 March, Zurich, 
Switzerland: Springer-Verlag, pp. 126–140. 
Beausoleil, R. P. (2005). “Multiobjective scatter search applied to nonlinear multiple criteria optimization,” European Journal of 
Operational Research, Vol. 169(2), pp. 426–449. 
Nebro, A. J., Luna, F., Alba, E., Dorronsoro, B., Durillo, J. J. and Beham, A. (2008). “AbYSS: Adapting Scatter Search to 
Multiobjective Optimization,” IEEE Transactions on Evolutionary Computation, Vol. 12(4), pp. 439–457. 
Van Veldhuizen, D. A. and Lamont, G. B. (1998). Multiobjective evolutionary algorithm research: A history and analysis, 
Department of Electrical and Computer Engineering, Air Force Institute of Technology, Wright-Patterson AFB, OH, Tech. Rep. 
TR-98-03. 
Deb, K. (2001). Multi-Objective Optimization using Evolutionary Algorithms, New York: John Wiley & Sons. 
Kennedy, J. and Eberhart, R. C. (1995). “Particle Swarm Optimization,” Proceedings of IEEE International Conference on Neural 
Networks, Vol. 4, pp. 1942–1948. 
Kennedy, J. and Eberhart, R. C. (1997). “A discrete binary version of the particle swarm optimization Algorithm,” Proceedings of 
the IEEE conference on Systems, Man, and Cybernetics, October, Orlando, Florida, USA, Piscataway, NJ: IEEE press, pp. 
4104–4109. 
Mostaghim, S. and Teich, J. (2003). “Strategies for finding good local guides in multi-objective particle swarm optimization 
(MOPSO),” In IEEE 2003 Swarm Intelligence Symposium, 8-11 April, Indianapolis, Indiana, USA, Piscataway, New Jersey: 
IEEE press, pp. 26–33. 
Nebro, A. J., Alba, E. and Luna, F. (2007a). “Multi-objective optimization using grid computing,” Soft Computing, Vol. 11(6), pp. 
531–540. 
Nebro, A. J., Durillo, J. J., Luna, F., Dorronsoro, B. and Alba, E. (2007b). “MOCell: A cellular genetic algorithm for multiobjective 
optimization,” International Journal of Intelligent Systems, pp. 25–36. 
Nebro, A. J., Durillo, J. J., Luna, F., Dorronsoro, B. and Alba, E. (2007c). “Design issues in a multiobjective cellular genetic 
algorithm,” In Evolutionary Multi-Criterion Optimization 4th International Conference, Berlin, Germany: Springer-Verlag, Vol. 
 16 
元智大學補助校內教師出席國際會議報告書 
 
報告人姓名 范 書 愷 所屬系所 工業工程與管理學系 
會議時間地點 
Xi'an, China, October 26-29, 2010 (joint with UIC 2010) 
會議名稱 
The 2010 International Symposium on Service, Security and its Data 
management technologies in Ubi-com 
發表論文題目 
A New Image Registration Method Using Intensity Difference Data on 
Overlapped Image  
 
出席國際會議報告內容 
 
十月二十五日： 
搭乘華航 CI0561班機直飛中國咸陽國際機場，於當地時間 17:10 hours抵達東京，搭
乘計程車抵達下榻飯店：水晶島酒店。晚上同台灣一同前往教授驅車往西安古樓共進
晚餐。 
 
十月二十六日： 
一早同兩位台灣教授一同驅車前往開會酒店：Holiday Inns Hotel，用過早餐後便逕至
UIC/ATC Workshops之 SSDU Session 1擔任分組會議主持人，此 Session共有三篇文
章發表，兩篇來自台灣，一篇來自中國，分組會議結束後與多位與會來賓進行研究內
容之討論並共同合影留念。由於 SSDU Session 2之會議主持人未到達現場，故應大會
要求擔任代班會議主持人至中午，中午於會議酒店用餐，下午一點至 SSDU Session 3
進行個人論文發表，會議後與在場學者進行學術討論。晚上至西安城內用餐並徒步觀
賞市容景觀。 
 
十月二十七、二十八日： 
參加 UIC/ATC Main Conference，並聽取多個場次之論文發表，並與各國學者進行學
術交流。 
 
十月二十九日： 
一早起床後便包車至長安近郊之古蹟進行參訪，隨後便搭乘 CI0562班機回國。 
 
 
 
 18 
國科會補助專題研究計畫成果報告自評表 
請就研究內容與原計畫相符程度、達成預期目標情況、研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）、是否適
合在學術期刊發表或申請專利、主要發現或其他有關價值等，作一綜合評估。 
1. 請就研究內容與原計畫相符程度、達成預期目標情況作一綜合評估 
■  達成目標 
□ 未達成目標（請說明，以 100字為限） 
□ 實驗失敗 
□ 因故實驗中斷 
□ 其他原因 
說明： 
 
 
 
2. 研究成果在學術期刊發表或申請專利等情形： 
論文：□已發表 □未發表之文稿 ■ 撰寫中 □無  
專利：□已獲得 □申請中 □無 
技轉：□已技轉 □洽談中 □無 
其他：（以 100字為限） 
 
To be submitted to European Journal of Operational Research (Elsevier) or 
Engineering Optimization (Taylor & Francis) 
3. 請依學術成就、技術創新、社會影響等方面，評估研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）（以
500字為限） 
1) 透過檢索相關高效能平行運算技術與粒子群演算法文獻，完成平行雙目標
及多目標最佳化 PSO演算法的開發。 
2) 本階段研究完成平行與單一群體多目標 PSO演算法的開發，並成功將其導
用於雙目標與三目標問題之上，和針對高維度雙目標最佳化問題進行比較分
析，實驗結果證明本研究所發展之平行多目標演算法是兼具求解的效能與效
率。  
 
 
 
元智大學補助校內教師出席國際會議報告書 
 
報告人姓名 范 書 愷 所屬系所 工業工程與管理學系 
會議時間地點 May 6-8, 2011 (05/06 registration, 05/7-8  
Intelligent Information Technology Application Research 
Association /中國/上海 
會議名稱 2011 International Conference on Information Technology for 
Manufacturing Systems 
發表論文題目 A New Cross-Correlation based Image Registration Method  
 
出席國際會議報告內容 
 
五月六日：搭乘華航 CI501班機直飛中國上海浦東國際機場，於當地時間 10:50抵達
上海，搭乘地下鐵抵達下榻飯店：奧林匹克俱樂部酒店（位於上海運動場旁），直接逕
行辦理註冊手續。晚上同台灣一同前往教授驅車往浦東外灘共進晚餐。 
 
五月七日：用過早餐後便逕至同多台灣教授一同前往開會會議室：百合廳， 聆聽來自
台灣高雄應用科技大學工學院潘副院長的Keynote Speech，其內容談論有關 Swarm 
Intelligence，會後與副院長進行學術交流，本人認為本議題已經被學術界過度炒作，
多數論文都無法進行學術或是技術上的突破，如此做研究出版再多的論文也不具學術
價值實在可惜。第二個Keynote Speech為來自逢甲大學陳講座教授述說有關 Secret 
Sharing之網路技術，而後本人進行論文編號 114的口頭報告，可惜與會來賓對於我的
presentation都只有誇獎而無提出任何提問，會後與多位大陸學者教授們共同交換研究
心得。 
 
五月八日：參加Main Conference，並聽取多個場次之論文發表，並與各國學者與大陸
研究生進行學術交流。 
 
五月九日：早上利用空閒至田子坊觀賞舊時土庫屋的舊建築，並造訪邱永漢先生於田
子坊的所開設之咖啡屋休憩。下午便搭乘計程車前往上海虹橋機場搭機返國（CI2002
班機）。 
 
心得：本國際研討會組織並不嚴謹，會議學術價值並不高，不建議繼續參與本會。 
 
 
97 年度專題研究計畫研究成果彙整表 
計畫主持人：范書愷 計畫編號：97-2628-E-155-002-MY3 
計畫名稱：結合多粒子群演算策略與平行叢集計算系統於多目標最佳化問題之研究 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 2 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 1 0 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 2 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
 
