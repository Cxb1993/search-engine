I 
 
中英文摘要 
 
一、中文摘要 
在刑案現場，工具痕跡往往都會存在歹徒經過或破壞之物上，而成為犯罪現場最常見的跡證，
例如：竊盜犯利用工具(如鉗子、鐵橇、螺絲起子等)破壞鐵窗、門鎖、抽屜及保險箱後侵入竊取財
物。由於各類刑案犯罪工具之差異性，造成工具痕跡的方式經常可成為該案件的特徵，若歹徒重覆
地使用相同或類似的工具再次犯案，我們即可利用這些工具痕跡作為重要的關連性證據。工具痕跡
具有出現機率高、易發現、易採取、不易消失或破壞、立體感強等特點，可用以研判犯罪手法、犯
罪歷程、案件真偽及工具種類等，根據工具痕跡比對結果，刑案偵查人員將可關連不同地方之案件，
提昇案件之破案數。我國「319 總統槍擊案」偵辦方向之擬定即是經由李昌鈺博士與鑑識單位鑑定
該案所擊發之子彈，發現其彈頭及彈殼構造特殊且具個化工具紋痕，提供查緝小組偵查方向，並依
此追查各槍擊案所獲之子彈，最後終於找出製造此類型子彈之地下兵工廠。 
工具痕跡的形成是作用力、工具和被破壞客體等共同作用的結果，因作用力方向、工具和被破
壞客體的材質特性而具有多變性及複雜性，在此情況下，若只靠人力用目視的方法作辨識，經常是
吃力而費時，若因此耽誤或錯失了破案的契機，將是非常可惜。若我們利用工具痕跡影像自動搜尋、
分類、比對及量化技術的發展，將可大量縮減人力比對的負擔，以提昇刑事鑑識人員鑑定的效率，
而這是本計畫的主要目的。 
 
關鍵字：工具痕跡、影像檢索、刑事影像鑑識 
 
 
二、Abstract 
Tool marks are often found at crime scene. They can appear in a wide variety of shapes, depending 
on tools and surfaces where the tool mark is formed. Pliers, screwdrivers and crowbars are often used for 
entering a building for a burglary. When criminals use them to perpetrate crimes, such as jimmying a door 
to gain access to a location, the patterns on the tools are often transferred to the crime scene. If criminals 
use these tools again, tool marks will become important correlation evidences.   
When forensic experts examine tool marks from crime scene, the process is very tedious. In order to 
avoid the time-consuming visual inspection of tool marks, we need automated approaches for the 
evaluation of marks. In this project, we will build a tool mark retrieval and identification system, and 
hope this system can help law forces to solve crime problems. 
 
Keyword: tool marks, image retrieval, forensic image processing 
 
2 
2. Method of Striation marks 
Our methods include four parts － image preprocessing, striation orientation detection, signature 
extraction and retrieval. First, the striation images should be resized to a uniform scale by using 
conversion ratio. After that, we use top-hat transformation and histogram equalization to reduce 
illumination inhomogeneity and detect subtle structures. Second, Sobel edge detection and Hough 
transformation are applied to the selected striation region to find the edge of the striations and detect the 
direction angle of the mark. Third, normalize horizontal projection of the striation can obtain the signature 
of the tool. Then, binarizing the normalized horizontal projection with the global threshold found by 
Otsu‟s method with information of Sobel edges. Thus, the features of the projection can be coded by the 
interval and width of dark striations. Finally, Smith-Waterman algorithm is used to find the best feature 
code alignment. With this alignment, we can evaluate the similarities of the suspect striation mark and the 
marks in the database. The listed marks with higher similarities can be used for visual inspection and 
manual validation. Fig. 2-1 shows the flow chart of the proposed method. Each step is described below in 
more detail. 
Image size calibration
Image Acquisition
Top-hat transformationImage preprocessing
Signature extraction
Retrieval
Histogram equalization
Sobel edge detection
Hough transformation/peak detection
Projection normalization
Striation binarization by 
global thresholding
Feature coding by the interval
and width of dark/bright striations
Use the Smith-Waterman algorithm to 
compute similarities
Mark listing with
higher similarity for
manual validation
Striation orientation detection
Results
 
Fig.2-1 The flow chart of the proposed method. 
4 
2. Normalize the cumulative histogram to 255. 
3. Use the normalized cumulative histogram as the mapping function of the original image. 
Histogram equalization can increase the global contrast of images, especially when the usable data of 
the image is represented by close contrast values. With this adjustment, the intensities can be better 
distributed on the histogram. This method can lead to better views of striation structure in images, and to 
better detail in photographs that are over or under-exposed. See Fig. 2-3(c). 
 
 
(a) 
 
 
(b) 
 
 
(c) 
Fig. 2-3(a) Original striation image, (b) Top-hat transformation, 
(c) Histogram equalization. 
6 
 
2.2.2 Hough transformation 
The result of edge detection by the Sobel filters is typically quite noisy, and edges are not precisely 
defined. Often the edge pixels do not form a continuous boundary. Hough transform is a technique used to 
find dominant edges in an image. We can detect the slope angle of striation mark by Hough 
transformation peak detection. 
In the image space, the straight line can be described as y = mx + b and is plotted for each pair of 
values (x, y). However, the characteristics of that straight line is not x or y, but its slope m and intercept b. 
Based on that fact, the straight line y = mx + b can be represented as a point (b, m) in the parameter space 
(b vs. m graph.) 
Using slope-intercept parameters could make application complicated since both parameters are 
unbounded. As lines get more and more vertical, the magnitudes of m and b grow towards infinity. For 
computational purposes, however, it is better to parameterize the lines in the Hough transform with two 
other parameters, commonly called r and θ (theta). Using this parameterizations, the equation of the line 
can be written as: r= xcosθ + ysinθ 
 For each data point, a number of lines are plotted going through it, all at different angles. For each 
line a line is plotted which is perpendicular to it and which intersects the origin. The length and angle of 
each normal line is measured. This is repeated for each data point. A graph of length against angle, known 
as a Hough space graph, is then created.  
A peak in the Hough space corresponds to a dominant edge in the original image. We detect the 
angles of 16 lines corresponding to the peaks in the Hough space, averaging these angles excluding 
outliers, and take the average angle as the angle of rotation adjustment for this striation mark. 
 
 
 
 
 
Fig. 2-6 Line segments corresponding to Hough transformation peaks. 
8 
 
 
(a) 
 
 
(b) 
 
 
(c) 
 
 
(d) 
Fig. 2-7 (a) Adjusted striation mark, (b) Horizontal projection, (c) Normalized 
horizontal projection, (d) Binarized projection of the striation mark (threshold=74). 
 
2.3.4 Feature coding by widths and intervals of dark and bright striations 
After binarizing the projection, the signature of striation mark has become alternately dark and bright 
regions. The width of these regions and interval between adjacent regions also represent the signature of 
the striation mark. And, regions with comparatively larger width dominate the feature of this mark. 
Therefore, 30 randomly selected striation marks were used to find the distribution of the region width. For 
the width of dark (bright) regions, we divide these regions by its width into two groups: wide (width≧8 
pixels) and narrow (4width 10 pixels) regions. For the reason of instability and high variability, 
regions with length less than 4 pixels were not used for feature coding. For each group, the width and 
interval of regions are coded separately. Therefore, the binarized projection can be represented by eight 
10 
 
2.4 The retrieval method 
Striation marks created by identical source tool have higher similarity. Evaluating the similarity 
between the suspect striation mark and the striation marks in the database can help us to find the marks 
which may be created by identical source tool. In order to evaluate the similarity of two the striation 
marks, we apply Smith-Waterman algorithm to the corresponding eight 1-D string codes of two striation 
marks. The Smith-Waterman algorithm can find the optimal alignment of two 1-D string codes. Finally, 
we may calculate the similarity score with the optimal alignment based on the scoring matrix. 
 
2.4.1 The Smith-Waterman algorithm 
The Smith-Waterman algorithm is a database search algorithm developed by T.F. Smith and M.S. 
Waterman, and based on an earlier model appropriately named Needleman and Wunsch after its original 
creators. The Smith-Waterman algorithm implements a technique called dynamic programming, which 
takes alignments of any length, at any location, in any sequence, and determines whether an optimal 
alignment can be found. Based on these calculations, scores are assigned to each character-to-character 
comparison: positive for exact matches/substitutions, negative for insertions/deletions. In scoring matrix, 
scores are added together and the highest scoring alignment is reported. 
Instead of looking at an entire sequence at once, the Smith-Waterman algorithm compares 
multi-length segments, looking for whichever segment maximizes the scoring measure. The algorithm 
itself is recursive in nature: 
 
0max),( jiD   ； 
),(),1( iadjiD     ；  
),()1,( jbdjiD     ；  
 
ji badjiD ,)1,1(     
Where ),( iad : similarity function of ia , (insertion). 
),( jbd  : similarity function of jb , (insertion). 
 
ji bad , ：similarity function of ia , jb . 
),( jiD ：score of alignment. 
Fig. 2-8 shows an illustration of Smith-Waterman algorithm. 
 
 
 
 
 
 
 
 
 
Fig. 2-8 Illustration of Smith-Waterman algorithm. 
 
Smith-Waterman algorithm has the desirable property that it is guaranteed to find the optimal local 
alignment with respect to the scoring system being used. 
D( i-1 , j-1 ) D( i , j-1 )
D( i-1 , j ) D( i , j )
D ( ai , bj )
- d ( a
i
 , ψ  )
- d ( ψ  , b
j
)
12 
 
We use partial sample of 01A1 and 01B1, Table 2-4 shows the illustration of similarity evaluation of these 
two samples. 
 
Table 2-4 Illustration of similarity evaluation for corresponding eight features. 
 
Sample 
feature 
01A1 01B1 
Optimal 
alignment 
Similarity score of features 
dark 
wide 
width DCEFD DCEFD 
DCEFD 
DCFFD 
100 
interval EABA EAAA 
EABA 
EAAA 
(5+5+3+5)×100/(5×4)=90 
narrow 
width DACG CDG 
DACG 
C-DG 
(3-1+3+5)×100/(5×4)=50 
interval AAC DC 
AAC 
D-C 
(0-1+5)×100/(5×3)=26.7 
bright 
wide 
width DC DC 
ABA- 
ABAA 
(5+5+5-1)×100/(5×4)=70 
interval DC BEG 
-FG 
BEG 
(-1+3+5)×100/(5×3)=46.7 
narrow 
width EAAABGBBBE FGCCFBABE 
EAAABGBBBE 
FGC-CFBABE 
(3+0+1-1+3+3+5+3+5+5)×100/(5×10) 
=54 
interval DABACDDDD DCACDDDD 
DABACDDDD 
D-CACDDDD 
(5-1+3+5+5+5+5+5+5)×100/(5×9) 
=82 
 
We take the corresponding weights as 0.15, 0.2, 0.2, 0.15, 0.05, 0.05, 0.1,and 0.1. And, the similarity 
score of 01A1 and 01B1 is: 
100×0.15+90×0.2+50×0.2+26.7×0.15+70×0.05+46.7×0.05+54×0.1+82×0.1=66.44. 
 
14 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
3.1.2 Preparation of hammer impression samples 
In order to acquire clear hammer impressions, we use a piece of flattened clay covered with 
aluminum foil as a soft material. Then we put the sample hammer over the material and striking the 
hammer from the top side by a rubber mallet, as shown in Fig.3-3.  
 
 
       (a) 
                 (b) (c) 
 
 
 
 
 
 
 
3.2 Image preprocessing – measurement scale  
A measurement scale is used to estimate the length of an object in an image when samples are taken 
pictures. Although we could not need the value of estimated length in the image by the measurement scale, 
it is important that we could examine the candidate images from the database manually after the retrieval 
method and measure the length and size of each selected image by the measurement scale in the image. 
Fig.3-2 shows an impression image including a measurement scale nearby a hammer impression.       
Fig.3-2 The structure of the imaging facility in our experiments. 
Fig. 3-3.The process of preparing hammer impressions: (a) a sample hammer beaten by a 
rubber mallet on the surface of aluminum foil (b) a piece of flattened clay covered with 
aluminum foil (c) the impression of the sample hammer. 
(b) image of left-side light source;(c) the fused image from (a) and (b) produces blurring boundary 
16 
 
Step.2: With the HT, the detected edge points  ii yx ,  in Fig.3-5(b) are transformed into the a-b-r 
parameter space defined by  
0)()( 222  rbyax ii   
where each point is transformed into a circular cone in a three-dimensional parameter space. For example, 
a circular cone transformed from the spatial data is shown in Fig.3-6 and two circular cones transformed 
from the spatial data are shown in Fig.3-7. We could find that the two circle in 0r  layer intersect at a 
single point  0'' ,, rba  that means the two point in the spatial data could be intersect at a circle the 
center of which is  '',ba  and th radius of which is 0r . 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
(1)
 
Fig. 3-6 The a-b-r three-dimensional parameter space. One cone is transformed from 
the point  00, yx  in spatial data. 
Fig. 3-7 The a-b-r three-dimensional parameter space. Two cones are transformed from 
the points  00, yx  and  11, yx in spatial data and intersect at a point  0'' ,, rba  
18 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
3.3.3 Feature extraction 
First, we describe features of impression toolmarks by the semi-automatic method, we could easily 
acquire the outlines of features without resulting in loss of partial features. 
(a). feature parameters: i

 , i
R
 and i
d  
Fig.3-10 shows the relationship of three parameters  i  , iR  and id  of a impression feature on 
the hammer impression. i  is the angle of the i -th feature of the Cartesian coordinate system in the 
image. iR  is the radius and 
 cici yx ,  is the center of the smallest enclosing circle containing the i -th 
feature. id  means the Euclidean distance between center of the smallest circle containing the i -th 
feature and  cc yx ,  which is the center of impression mark‟s outline is defined as the origin of Cartesian 
coordinate system. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Fig. 3-11 One feature in a impression mark and its three parameters { 1 , 1d , 1R  } 
 
Fig. 3-10 Detect a outline of a impression mark by the smallest enclosing circle (a) a image of 
a impression mark (b) selecting points(blue point) from the boundary of the impression to 
calculate the smallest enclosing circle (c) a circle (green line) containing the location of the 
impression. 
(a) (b) (c) 
 
 
20 
 
 
 
 
 
Feature No. 
id  i  iR  
Feature 1 90.8 133.5 53.3 
Feature 2 26.9 173.5 5.7 
Feature 3 15.4 281.7 4.9 
Feature 4 43.2 7.69 4.7 
 
3.3.3 Feature coding 
The 
^
id  and 
^
iR histograms of lengths computed separately from database are calculated. In each 
histogram, The interval between minimal and maximal lengths is divided into 10 sub-intervals, and each 
sub-interval has the same probability 0.1 of the histogram. In this way, we could equally attribute the 
assigned text-based codes into sub-intervals by the same probability. We could encode the 10 
sub-intervals sequentially into corresponding feature text-based codes (alphabet a to j), as shown in Table 
3-2.   
 
 
Probability of sub-intervals Corresponding feature code 
0   ~  0.1 a 
0.1   ~  0.2 b 
0.2   ~  0.3 c 
0.3   ~  0.4 d 
0.4   ~  0.5 e 
0.5   ~  0.6 f 
0.6   ~  0.7 g 
0.7   ~  0.8 h 
0.8   ~  0.9 i 
0.9   ~  1.0 j 
Feature 1 
Feature 2 
Feature 3 
Feature 4 
Table. 3-1 All the features in a hammer impression mark are transformed into their own  
parameters 
 
Table3- 2. Corresponding table of  feature code 
22 
 
 
 
 
 
 
Feature No. 
^
id value 
^
id code encoded 
from Table3-4 
^
iR value 
^
iR  code encoded 
from Table3-5 
Feature 1 90.8 h 53.3 j 
Feature 2 26.9 b 5.7 d 
Feature 3 15.4 a 4.9 c 
Feature 4 43.2 c 4.7 c 
 
Feature 1 
Feature 2 
Feature 3 
Feature 4 
Table 3-5.  
^
id and 
^
iR  Features from Table 3-1 are encoded into text codes 
consulting Table 3-4 and Table 3-5 
24 
The Euclidean distance value is then computed between boundary pixels and the centroid 
 scsc yx , to obtain the distance distribution and is defined as: 
           2
1
22
),(D scksckk yyxxqp   
where jp  is the k -th pixel of the feature‟s boundary; q is the pixel of the centroid  scsc yx , and 
 kk yx ,  is the coordinate of kp   
The distance distribution defined as the signature iS  is a 1-D functional representation of the i -th 
feature‟s boundary. Fig.3-13 shows the distribution of the signature 1S computing between the centroid of 
the boundary and each boundary pixel and its 1-D representation. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
(6)
 
Pixel number 
D
ista
n
ce v
a
lu
e
 
(a)
 
(b)
 
Fig. 3-14.: Distance distribution computation of extracted feature on the hammer 
impression. (a) distance distribution computation between the centroid (the red 
dot)of the outline and each boundary pixel (b)the distribution plot 
26 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
D
ista
n
ce v
a
lu
e 
Pixel number 
140 
30 
Pixel number 
D
ista
n
ce v
a
lu
e 
Fig. 3-15:The normalization of distance distribution of a feature‟s signature.(a)the original 
distance distribution before normalization. The maximal distance value of Y axis is about 
140 (the yellow line) and the the farthest point from the centroid to the boundary pixel (the 
red line) is not the starting point of X axis. (b) after normalization, The maximal distance 
value of Y axis is about 30(the yellow line) and the the farthest point from the centroid to 
the boundary pixel (the red line) is the starting point of X axis. 
(a)
 
(b)
 
28 
2S  
 
3S  
 
4S  
 
30 
 
We could design the similarity score function(matrix) by adjusting weighted score in every cell of 
the matrix in order to have the flexibility if parameter
^
id and
^
iR of  a feature is assigned into nearby its 
alphabetic character .This flexibility is needed because features on impression marks are not totally 
matched and vary slightly in size or shape or few feature are of loss during the manufacturing process 
with different beaten force and angles.  
We use Smith-Waterman alignment approach to determine the optimal alignment of two encoded 
sequences to solve the problems in feature losing or feature encoding into nearby alphabetic character. 
For example, compared with encoded 
^
id  sequence A1 {a, b, d, g, h, h, j} and 
^
id  sequence B1{a, b, g, 
i, i}, a adequate design of the score function(matrix) and the similarity function of ),( iad and ),( jbd   
such as Table. 3-7 would have the flexibility when we apply the Smith-Waterman alignment approach to 
determine the optimal alignment.  
The result of dynamic program after Smith-Waterman alignment is shown as Table 3-8 and it shows 
the best alignment of sequence A1 and B1 after Smith-Waterman  
 alignment with the score function(matrix) of Table 3-7.  
 
 
 
  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 A B C D E F G H I J 
A 5 4 2 0 0 0 0 0 0 0 
B 4 5 4 2 0 0 0 0 0 0 
C 2 4 5 4 2 0 0 0 0 0 
D 0 2 4 5 4 2 0 0 0 0 
E 0 0 2 4 5 4 2 0 0 0 
F 0 0 0 2 4 5 4 2 0 0 
G 0 0 0 0 2 4 5 4 2 0 
H 0 0 0 0 0 2 4 5 4 2 
I 0 0 0 0 0 0 2 4 5 4 
J 0 0 0 0 0 0 0 2 4 5 
Table.3-7. The designed scoring function and similarity function of ),( iad and ),( jbd  . 
Score of ),( iad =1; Score of ),( jbd  =1       
32 
The result of sequence A1 and B1 after Smith-Waterman alignment is as follows: 
 
A1 a b d g h h j 
B1 a     – d g i i  
 
The “b” character of sequence A1 matched no character between “a” to “c” character after “a” 
character of sequence A1 which matches with “a” character of sequence B1 and a gap “-” is inserted into 
B1 sequence .Two “h” characters of sequence A1 match with two “i” characters of sequence B1 between 
“g” to “i” character.  
The Smith-Waterman alignment approach is applied to determine the optimal alignment of two 
text-based sequences encoded into from 
^
id and
^
iR parameters in a hammer impression.  
 
3.4.2 Global feature 
^
id  similarity measurement  
(a) Sorting 
^
id  parameters and encoding into corresponding text-based codes   
The feature parameters of 
^
id  in a hammer impression are sorted descendingly and are encoded 
into corresponding text-based codes. The sorting step would overcome the problem in the variance of 
impression marks‟ orientation. Fig.3-16 shows the sorted text-based codes of 
^
id  in a hammer 
impression. 
 
34 
(b) Using the Smith-Waterman alignment approach and measuring similarity 
The optimal alignment is produced after the Smith-Waterman alignment (equation 7) with the 
designed scoring function and similarity function of ),( iad and ),( jbd   as shown in Table 3-9. 
Similarity of two aligned sequences Seq1, Seq2 is defined as: 
 
 
 
 
 
where     is the fully character-matched score in the score function (matrix).  
 
 Seq1、Seq2 are two text-based sequences representing two impression marks and )2,1(s total SeqSeqcore  
is the maximal value of the dynamic program tracing matrix of sequence Seq1 and Seq2. 
 For example, Fig.3-17 shows two 
^
id sequences of Seq1 and Seq2 from two hammer impression 
marks are aligned with the Smith-Waterman alignment. Table 3-9 show the dynamic program tracing 
matrix of sequence Seq1 and Seq2. 
 
 
 
 h c b a 
h 5 0 0 0 
a 0 7 10 14 
a 0 8 13 15 
 
 100
))2(),1(max(
)2,1(s total



mSSeqlengthSeqlength
SeqSeqcore
 (8) Similarity(Seq1,Seq2) 
mS  
Seq1 
Seq2 
Table.3-9 The dynamic program tracing matrix of sequence Seq1 and Seq2                                                   
36 
3.4.3 Global feature i  similarity measurement 
(a) including angles between features matched after 
^
id  alignment. 
The positions of matched features by
^
id alignment are recorded and including angles are calculated 
by differences between nearby features‟ i  parameters of features matched by 
^
id  alignment on the 
impression marks. The including angle is subtracted from degree 360 if it was over degree 180.  
 
(b) Similarity of including angles 
Similarity of including angles is defined by: 
 
 
 
 
 Where Seq1θ and Seq2θ are two sequences each of which would have N numbers of  including angles 
between two features matched by 
^
id  alignment. 
For example, Fig.3-18 shows that the similarity of including angles after 
^
id  alignment on two 
impression marks. The result score is equal to : 
 
 
 
 
We selected twenty candidates from “Retrieval result 1” by ranking the smallest score in database as 
the “Retrieval result 2”. 
 
 
 
Similarity(Seq1θ ,Seq 2θ )  
N180
             -            N
1i

 
  
Seq1θ (i)   Seq2θ (i) 
(9) 
Similarity(Seq1θ ,Seq 2θ )                    0.0322 


 |
3180
9.26.22
|  
38 
 
 
 
 
 
 
 
 
 
 
 
 
 
^
1R  
^
2R  
^
3R  
^
4R  
90.8 43.2 26.9 15.4 
^
1R  
^
2R  
^
3R  
^
4R  
j d c c 
Feature 2 
Feature 4 
Feature 2 
Feature 1 
Feature 3 
sorted 
encoded 
 
 
 
 
 
 
 
Fig.3-20 The process of sorting the 
^
iR parameters and encoding into text-based codes  
40 
 
The )2,1(s total RR SeqSeqcore  from Table 3-10 is 19 and mS  is 5. 
The ))2(),1(max( RR SeqlengthSeqlength is 4, so the similarity score is equal to : 
 
 
We calculate all the 
^
iR  similarity scores between the suspected sample and samples in database 
and select fifteen candidates from “Retrieval result 2”by ranking the highest value of similarity scores as 
the “Retrieval result 3”. 
3.4.5 Feature signature 
^
iS  comparison 
The 
^
iS signature of each feature matched by  
^
iR  alignment in one impression mark is compared 
with the 
^
"
iS one in the other impression mark as shown in Fig 3-21. 
 
 
 
 
 
 
 
 
 
^
1R
^
2R
^
4R
^
3R
^
"
1R
^
"
2R
^
"
3R
^
"
4R
^
2S
^
1S
^
3S
^
4S
^
"
3S
^
"
1S
^
"
2S
^
"
4S
 
 
When comparing two signature distributions of features matched by 
^
iR  alignment with different 
distribution lengths ( pixel numbers), normalization is needed for re-sampling the longer distribution to 
the same pixel numbers as the other. Fig.3-22 shows the normalization of two comparing signatures 1S  
and  
"
iS .  
95100
54
19


Similarity(Seq1 R,Seq2 R) 
42 
are calculate as similarity of two impression marks, ie. 
 
           
 
 
 
 
 
where p, q are two compared impression marks;
jMSE is the minimum square error  
of the j-th signature‟s distance distribution of features matched by 
^
iR  alignment. The n is the number of 
features matched by 
^
iR  alignment. 
We select top ten candidates of impression marks from “Retrieval result 3”by ranking the smallest 
score of similarity scores to narrow our search in database. 
 
 





n
j
j
n
j
j
MSElength
qpompare
1
1
)(
MSE
,C
(11) 
44 
 
 
 
Fig. 4-1 Similarity score diagram of striation marks by same side of same screwdriver. 
 
4.1.2 Similarity of marks by different side of same tool 
Striations on different sides of same screwdriver might be correlated. To measure the similarity of 
different sides of same screwdriver, the five striation marks created by A side were cross compared with 
the five striation marks created by B side. Table 4-2 shows the average, maximum and minimum 
similarity scores of each screwdriver. All average similarity score of two different sides were less than 50 
for all screwdrivers. And most of the maximum similarity score were less than 50, with only one 
exception (no. 04). The result shows that the striations marks created by different sides of same 
screwdriver were not significantly correlated. Fig. 4-2 shows the similarity score diagram of striation 
marks by different sides of same screwdriver. 
 
Table 4-2 Similarity score of striation marks by different sides of same screwdriver. 
 
No. Average Max Min No. Average Max Min 
01 40.8877 46.7005 36.5548 11 38.0860 43.3513 33.3764 
02 36.4751 42.2880 30.6800 12 37.8040 42.0674 34.2329 
03 37.8674 44.0157 34.2708 13 30.6028 39.5483 24.6699 
04 46.0192 50.6625 41.2170 14 31.0877 40.3785 24.4319 
05 42.0901 46.8967 36.5806 15 40.4165 43.1042 35.8502 
06 39.3915 46.1434 33.1996 16 40.4472 43.1588 37.2179 
07 33.0226 37.4148 27.8683 17 42.7316 47.2424 38.8277 
08 29.2880 39.6450 22.6653 18 42.2088 46.6525 38.4545 
09 39.4057 44.6482 31.5961 19 42.0456 46.2645 38.7161 
10 41.2437 45.9467 35.9105 20 42.0803 45.8010 38.4800 
 
46 
 
Table 4-3 List of striation marks with higher similarity score to the suspect mark. 
 
NO SIDE Rank1 Rank2 Rank3 Rank4 Rank5 Missing 1 Missing 2 
1 A 
01A05 
(61.6352) 
01A02 
(59.8314) 
01A04 
(57.4194) 
01A03 
(55.2309) 
15B02 
(47.8287) 
* * 
1 B 
01B02 
(55.0245) 
01B03 
(54.0107) 
01B04 
(47.3789) 
01B05 
(46.452) 
01A02 
(46.099) 
* * 
2 A 
02A04 
(67.5579) 
02A03 
(65.0781) 
02A05 
(64.9354) 
02A02 
(57.6344) 
11B01 
45.859) 
* * 
2 B 
02B02 
(69.713) 
02B03 
(60.3234) 
02B05 
(54.0221) 
02B04 
(53.1352) 
03B05 
47.6735) 
* * 
3 A 
03A02 
(51.6735) 
03A03 
(50.7591) 
03A05 
(50.2405) 
14B01 
(46.771) 
01B01 
(46.7598) 
03A04(RANK16) 
(44.0628) 
* 
3 B 
03B02 
(70.9602) 
03B03 
(63.8295) 
03B05 
(57.7941) 
03B04 
(53.1495) 
05B02 
(46.558) 
* * 
4 A 
04A02 
(64.161) 
04A03 
(60.2003) 
04A05 
(58.8198) 
04A04 
(57.7076) 
04B05 
(48.3496) 
* * 
4 B 
04B02 
(67.6296) 
04B03 
(60.6126) 
04B05 
(56.1758) 
07B05 
(53.2898) 
07B03 
(50.9657) 
04B04(Rank6) 
(50.7353) 
* 
5 A 
05A04 
(66.8632) 
04A02 
(64.7972) 
05A05 
(60.1853) 
05A03 
(57.0494) 
06A04 
(47.429) 
* * 
5 B 
05B02 
(66.3776) 
05B05 
(50.6495) 
05B03 
(49.835) 
10A01 
(45.8169) 
13A02 
(45.7617) 
05B04(Rank28) 
(42.7594) 
* 
6 A 
06A05 
(63.0894) 
06A02 
(62.4868) 
06A04 
(60.8997) 
06A03 
(60.3055) 
04A05 
(54.4971) 
* * 
6 B 
06B03 
(70.6779) 
06B05 
(63.424) 
06B02 
(59.5025) 
06B04 
(55.6862) 
14A02 
(48.4646) 
* * 
7 A 
07A05 
(80.0419) 
07A02 
(66.7675) 
07A04 
(56.8386) 
07A03 
(54.0361) 
10B03 
(50.3806) 
* * 
7 B 
07B02 
(72.6164) 
07B04 
(63.0069) 
07B03 
(60.0513) 
07B05 
(51.3989) 
03A02 
(47.3956) 
* * 
8 A 
08A02 
(74.9435) 
08A03 
(69.4603) 
08A05 
(54.8523) 
08A04 
(51.9143) 
14A01 
(37.2954) 
* * 
8 B 
08B02 
(63.9003) 
14A01 
(55.7143) 
07A02 
(49.474) 
07A04 
(49.029) 
10B04 
(47.5383) 
08B05(Rank14) 
(40.2999) 
08B03(Rank15) 
(40.0728) 
9 A 
09A02 
(64.814) 
09A03 
(59.3436) 
09A05 
(54.6941) 
09A04 
(50.9623) 
04A03 
(46.4541) 
* * 
9 B 
09B03 
(52.9107) 
09B02 
(50.4947) 
09B04 
(49.9875) 
09B05 
(49.8) 
13A03 
(47.5278) 
* * 
10 A 
10A02 
(67.481) 
10A05 
(61.9696) 
10A04 
(59.8088) 
10A03 
(57.8699) 
14A03 
(52.5521) 
* * 
10 B 
10B03 
(57.9183) 
10B02 
(54.2921) 
10B04 
(52.6941) 
10B05 
(52.1737) 
14A03 
(49.6134) 
* * 
 
48 
4.1.4 Retrieval accuracy for marks of different width 
The suspect striation marks may be partial or incomplete. The width of the mark may affect the 
retrieval accuracy. In order to find the minimum requirement of the striation width, we choose a striation 
mark with higher consistency to marks created by the same tool. Chop this striation mark into fragments 
marks of different width, and use the feature codes generated by these fragmental striation marks to find 
the most similar striation marks in the database. In this experiment, striation mark 16B01 was selected. 
We randomly chop this mark to 2mm, 3mm and 4mm, and five marks for each size. The result is shown 
in Table 4-4.  
For the 2mm fragmental marks, none can find the origin mark (16B01) or the marks with common 
source (16B02~16B05) in the top five list. For the 3mm fragmental marks, four marks can find the origin 
mark at the rank one position, the rest one list the origin mar at rank 7. And for the 4mm fragmental 
marks, most of them can list over three common source marks in the top five list. This result shows the 
proposed method has the property of robustness. And marks with width over 3mm can obtain better 
search result.
50 
4.2 Impression 
We prepare 30 hammers, 27 fired cartridge cases and 30 image samples of circle-based drug tablets 
in our experiments. The sample hammers which have similar radius(1.2~1.4 cm) on flattened clay 
covered with a piece of aluminum foil are beaten from the top by a rubber mallet .Each of 30 hammer 
produce 3 similar impression marks successively in out experiment to check reproducibility and test for 
flexibility of features in a impression mark. 27 fired cartridge cases with the same caliber(9mm) which 
were shot by 9 guns of 5 brands are obtained in our experiments. Three cartridge cases shot by each gun 
are collected and could be examined the reproducibility of features on the cartridge cases fired by the 
same gun. The image samples of circle-based drug tablets on which are impressed recognition marks 
from internet. 
In this project, the retrieval method could be divided into two fields, global field and local field. The 
algorithms of global field include alignment of sorted 
^
id  sequences and the angle i  of each feature of 
the Cartesian coordinate system in the image. In the global retrieval field, it is optional to select alignment 
of sorted 
^
id  sequences or similarity of i  in relative features ,and we adopt both algorithms in our 
experiment. In the same way, the algorithms of local field include alignment of sorted 
^
iR sequences and 
distance distribution of each feature‟s signature are also adopted optionally in our experiment. 
 
4.2.1 Retrieval of hammer impressions 
Fig.4-3 shows the flow chart of the proposed retrieval method in the “0803” hammer impression. 
 
 
 
 
 
 
 
 
 
 
 
 
(a)“0803” image 
Normalization  
 
Hough transform 
(b)Impression outline detected and 
resolution normalization  
Feature  
extracting  
 
(c)Extracting features 
(d)Data of features of “0803” 
Similarity of  
^
id alignment 
 
Fig.4-4 
(e) Retrieval result 1 
 
Similarity of  
Including angles 
 
Fig.4-5 
(f) Retrieval result 2 
 
Fig.4-6 
Similarity of  
^
iR  alignment 
 
(g) Retrieval result 3 
 
 
 
 
 
 
 
 
 
 
Fig.4-3 A flow chart of the proposed retrieval method 
 
52 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
The Signature method is not very appropriately applied to hammer impression because the method is 
needed for enclosing features. There are six types of characteristics in hammer impressions, but only one 
of these features, enclosure, could be applied to the signature method. So, the signature method is not 
applied to the flow chart of proposed hammer impression retrieval method. 
 
4.2.2 Retrieval of cartridge cases 
Fig.4-7 shows the flow chart of the proposed retrieval method in the “050101” cartridge case. 
Fig.4-6 Retrieval result 3 
 
54 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Fig.4-9    Retrieval result 2 
 
Fig.4-10    Retrieval result 3 
 
56 
4.3Retrieval of drug tablets 
Fig.4-13 shows the flow chart of the proposed retrieval method in the “028” drug tablet. 
 
 
 
 
 
 
 
 
 
Normalization 
 
Hough transform 
Feature  
extracting  
 
Similarity of  
id  alignment 
 
Similarity of  
including angles 
 
Similarity of  
iR  alignment 
 
Comparison of 
iS  signature 
 
(a)“028” image (b)Impression outline detected and 
resolution normalization  
(c)Extracting features 
(d)Data of features of “028” 
(e) Retrieval result 1 
 
Fig.4-14 Fig.4-15 Fig.4-16 Fig.4-17 
(f) Retrieval result 2 
 
(g) Retrieval result 3 
 
(h) Final retrieval 
 
 
 
 
Fig.4-13 A flow chart of the proposed retrieval method 
 
Fig.4-14  Retrieval result 1 
 
58 
 
 
Because of lacking of the measurement scale in every image, we normalize each image by 
measuring the diameter of each drug tablet image. We can retrieve the similar tablet images like the 
similar arrange of characters on the drug tablets in top five candidates for each drug tablets.  
Fig.4-17  Final retrieval 
 
60 
計畫成果自評 
本計畫的執行進度符合當初所提之計畫內容，亦完成計畫書所擬定之研究目標。我們以影像內
容為基礎的檢索方法，建立有用的半自動特徵擷取方法，使各種刮擦及印痕可有效的區別背景雜訊
或是本身的特徵，再將工具痕跡的特徵儲存於資料庫中；提供有效的資料庫比對方法，將特徵編碼，
搜尋資料庫裡的工具痕跡。實驗結果顯示，本方法能夠有效的識別各式的工具痕跡。 
本技術以半自動化處理工具痕跡影像的方式，輸入工具痕跡影像，自動進行比對，達到省時省
力目的，並不會因為影像之旋轉或位移等失真造成錯誤的結果，此技術未來將可應用於法庭科學及
鑑識實務上。 
無衍生研發成果推廣資料
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 5 5 100%  
博士生 4 4 100%  
博士後研究員 0 0 100%  
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
無 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
