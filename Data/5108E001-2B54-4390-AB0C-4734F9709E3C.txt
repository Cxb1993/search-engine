 II 
目錄 
 
 中文摘要 …………………………………………………………………  III 
 英文摘要 …………………………………………………………………  IV 
 緣由、目的與文獻探討 …………………………………………………… 2 
 研究方法、結果與討論 …………………………………………………… 5 
 計劃成果自評 ……………………………………………………………  22 
 參考文獻 …………………………………………………………………  22 
 
 IV 
 
Abstract 
 
Recent advances in wireless technologies have encouraged the development of wireless 
sensor systems (WSS). The wireless sensor system is composed of a great deal of sensors which 
are equipped with functions like sensing environment, data processing, and wireless 
communicating with each other. The main operating challenge of the WSS nowadays is the 
duration of electric power. Many papers have shown that the most electric power consumption is 
caused by data transmission. Thus the efficient and energy-saving routing strategies are very 
important in order to fully realize the potential of WSS. The objective of this project is to find 
several routing strategies for WSS. Some routing strategies are designed for users’ queries which 
require aggregation or non-aggregation data in multiple-sinks multiple-sources applications. And 
several replacement strategies are also proposed for routing paths in a disclosed sensor system. 
The results of experiment exhibit that all strategies proposed in this project perform well. 
 
Keywords：Wireless sensor system, Routing strategy, Data aggregation, Immigrant sensor. 
 
 3 
1、 需求訊息的組成及傳送：需求訊息中除
了要記錄查詢是由那一個 sensor 所發
出，對於使用者要求資料的查詢條件限
制，也將被包含在需求訊息裡。有時，
sensor 也會把自己本身的狀態，如剩餘
電力、記憶體容量等，隨著訊息傳送。
此一訊息通常會以溢流（Flooding）的方
式廣播出去以便送達資料所在或能偵測
到資料的 sensors。 
2、 傳送節點的記錄：系統中的每個 sensor
在收到前一步驟的需求訊息後，將會記
錄傳送需求訊息給自己的 sensors。為了
記錄這些 sensors 的資訊，我們可以簡單
地用識別證（identification，或稱為 ID）
的方式來區別各個 sensor。記錄好
sensors 的 ID 之後，便檢查自己所偵測
到或儲存的資料是否符合訊息裡的使用
者條件需求。若不符合，則繼續廣播此
需求訊息給鄰近的 sensors。 
3、 確認訊息的回傳：當自己所偵測到或儲
存的資料符合需求訊息裡的使用者條件
時，此節點即是我們前面所提到的資料
源（Source）。此時，source 便會回傳確
認訊息給前一個傳送需求訊息給自己的
sensors，由此 sensor 轉傳回去資料源所
送出的確認訊息。這個轉傳動作將會持
續以逐個躍點（hop-by-hop）的方式回
傳，直至 sink 並傳給使用者。 
4、 傳送路徑的決定：因確認訊息的傳送是
利用溢流的方式，所以 sink 通常會收到
多條來自 sources 確認訊息的回傳，此時
便可以採用某些準則去選取之後用來傳
送資料的路徑。一旦決定資料傳送路徑
後，便可以針對這些被選取的路徑進行
強化（Reinforcement）的動作。至於用
來選取路徑的準則，一般常見的有，依
訊息回傳速度的快慢、依訊息回傳時所
跳躍的節點數、依訊息回傳路徑上節點
的最低能源值，等等。當然，路徑的選
擇可能是單條或多條，若是決定採用多
路徑的資料傳送方式，則將會有多條的
資料傳送路徑同時被強化，我們在 
[Ke05, YKSL06]已進行多條傳送路徑的
研究。 
5、 資料的傳送：一旦 source 收到某條路
徑的強化訊息，source 將會利用此被強
化的路徑開始進行資料的傳送。當然，
若是多路徑的資料傳送方式被採用，
source 就必須對多條路徑所要傳送的資
料進行工作量分配與排程。 
在上述的基本原則下，將能夠為 sink與
source間建立一條路徑進行資料傳送，先前
的學者 ([IEG02, IGE03, KAK03, KHY05, 
MFHH02, MFHH03, MSF02])已提出各種不
同的方法找到一條路徑去進行資料的傳
送。然而，這樣的作法存在著一個很大的問
題，即是由於每個節點都只配備稀少的電
量，同時在無線感測系統中又經常扮演著資
料發起者（data originator）及資料繞徑者
（data router）兩種角色，所以很容易因為
長時間的運作或是傳送大量資料導致sensor
耗盡電力而失效。如果整個系統有部份的
sensors失效，可能會造成嚴重的拓樸變動，
使得封包無法互傳，而需要重整系統，進而
使整體系統的壽命被迫縮短（ [ASS02, 
AZW03, CT04]）。因此，除了設計方法找出
有效率的路徑去進行資料傳送外，值得注意
的是，當路徑上的sensors因硬體故障、能源
耗盡等因素而無法作用時，如何對原有資料
傳輸路徑進行重建或是找出替代的路徑，亦
是另一個需要被討論的問題。 
 
圖 1-1 (a) GPSR 避開空洞區域。 
 5 
二、研究方法、結果與討論 
針對無線感測網路中，已存在某些既有
路徑的情況下，若新增 sink 時，該如何建
置較有效率的資料傳送路徑。很明顯地，若
是新 sink 與既有 sinks 所要求的資料不同，
則不管資料是否為聚合資料，新路徑僅需單
純地選擇和既有路徑不同的節點。本計劃主
要關心的是，新 sink 若是與既有 sinks 要求
相同的資料時，該如何利用既有路徑去建置
最有效率的新路徑。在此，我們從新 sink
與既有 sinks 的查詢是否為聚合資料去分
析，可分成下列四類的應用。 
● AP1— 新 使 用 者 （ Nw ） 要 求
non-aggregation data，且 active sinks 亦
要求 non-aggregation data 
● AP2— 新 使 用 者 （ Nw ） 要 求
non-aggregation data，但 active sinks 要
求 aggregation data 
● AP3—新使用者（Nw）要求 aggregation 
data ， 但 active sinks 要 求
non-aggregation data 
● AP4—新使用者（Nw）要求 aggregation 
data，且 active sinks 亦要求 aggregation 
data 
 
針對各類應用，本計劃執行期間設計出
其相對應的路徑演算法。 
 AP1 的路徑演算法設計理念 
(1) 每個感測節點紀錄自己與NW的跳躍數
(hop count)：當 Nw（i.e., N62）需要
sources 的資料時，廣播識別訊息給所
有節點，並建立其與各節點間的跳躍
數。 
(2) 決定 NSi：當 Nw 與各節點之跳躍數建
立完成後，由各 source 對既有路徑上各
節點發出比較訊息，比較既有路徑上各
節點與 Nw間的跳躍數，由具有最小值
之節點 NSi 負責傳送資料給 Nw。 
(3) 尋找 NSi 至 NW 的新路徑：NSi 決定後，
SUi 將沿著既有路徑至 NSi，再由 NSi
沿最短路徑將資料傳送至 NW。 
詳細的演算法如下： 
 
 
 AP2 的路徑演算法設計理念 
(1) 每個感測節點紀錄自己與 NW 的跳躍
數：當 Nw需要 source 的資料時，廣播
識別訊息給所有節點，並建立其與各節
點間的跳躍數。 
(2) 決定 NSi：當 Nw 與各節點之跳躍數建
立完成後，由各 source 對既有路徑上各
節點發出比較訊息，比較既有路徑上聚
合節點與 SUi 之間的各節點（不包括聚
合節點），它們與 Nw 間的跳躍數，選
出具有最小值之節點 NSi負責傳送資料
給 Nw。若有多個節點之跳躍數符合上
述條件，則優先選擇剩餘電量多的節
點。 
(3) 尋找 NSi 至 NW 的新路徑：NSi 決定後，
SUi 將沿著既有路徑至 NSi，再由 NSi
沿最短路徑將資料傳送至 NW。 
詳細的演算法如下： 
 
 AP3 的路徑演算法設計理念 
(1) 每個感測節點紀錄自己與 NW 的跳躍
數：當 Nw需要 source 的資料時，廣播
 7 
source SUi 經 NAG至 NW，且無須執行
任何的聚合運算。底下，我們舉例討論
這三種情況： 
− C1＝min｛C1, C2, CAW｝：由各 NSi 傳送
SUi 資料給 NG聚合後，再由 NG負責
傳送資料給 Nw。 
− C2＝min｛C1, C2, CAW｝：由各 NSi 直接
傳送 SUi 資料給 Nw（不經由 NG）。 
詳細的演算法如下： 
 
在本計劃的執行期間，我們也探討
了，當 sinks 要求資料源回傳聚合資料時，
資 料 源 如 何 有 效 找 出 適 合 的 聚 合 點
(aggregation point)，並且迅速將運算結果傳
回給 sinks。 對於路由策略的設計，將分別
從二種環境進行討論： 
(A) 在已建置某些現行路徑的情況下，增
加一處 source。 
(B) 在未建置任何現行路徑的情況下，同
時有多個 sinks 發出連續查詢，並且有
多處 sources偵測到符合條件的資料可
提供給 sinks。 
接下來，我們依序說明在上述二種應
用環境中，當 sinks 之間下達同質性查詢與
異質性查詢時，sources 端如何回傳資料的
路由建置方式。 
【環境 A】在已建置現行路徑的情況下，增
加一處 source。 
假 設 在 無 線 感 測 網 路 中 已 存 在
multiple sinks one source 的現行路徑，如圖
2-1 所示，圖中的路徑是引用我們在
[KHSL05]所提出之 FCMN 策略建置而成，
su1 代表 source，sk1 及 sk2 是兩個 sinks 的簡
稱，且向 su1 發出同質性查詢。 
在圖中，sk1 及 sk2 與 su1 間已建置好的
現行路徑分別為：su1→N3→N7→N12→sk1
與 su1→N3→N8→N14→sk2。假設，從某個
時間點開始，有另一個感測節點：N16，偵
測到符合 sk1 與 sk2 所要的資料。此時，我
們必須再建置路徑以利資料源N16順利將資
料傳給 sk1 及 sk2。為了方便說明，我們將新
的資料源 N16 命名為 su2。接下來，我們依
使 用 者 所 要 的 資 料 是 否 為 聚 合 性
(aggregation)資料，分別討論傳送路徑的建
置方法。 
 
圖2-1：已建置路徑之應用 
 
《A-1》使用者要求聚合性資料 
此類的應用代表當資料來自多個 sources
時，使用者最後希望得到的是，對這些資料
執 行 聚 合 運 算 的 結 果 ， 例 如 ， 執 行
AVERAGE的運算。所以，為了降低網路整
體電量的耗損，較佳的作法是在回傳資料給
使用者的過程中，在某個感測節點執行聚合
運算，之後僅需從單一條路徑傳送運算後的
結果，如此一來，便能避免直接利用多條路
徑傳送資料至sink才執行聚合運算所耗費
的大量能源。因此，對於這類的應用，我們
為新 source建置路徑的原則是，找出新
source至已建好路徑的最快且最佳的連接節
點。基本上，我們在此所使用的資料結構與
[KHSL05]所提的相同，且假設已建置好的
現行路徑是依據[KHSL05]所提的方法所建
 9 
所提出的方法。 
(4)  重複步驟(3)，直到建置好 sunew至原
先現行路徑的連接路徑為止。值得
一提的是，在步驟(3)的規則下，當
多個鄰居節點同時被選取的情況發
生時，最後建置好從 sunew至原先傳
送路徑的連接路徑便會有多條。 
 
《A-2》使用者要求非聚合性資料 
在此類的應用中，使用者僅希望單純地
接收到各 sources 回傳的資料，並不需要也
不要求對這些資料執行任何的聚合運算。在
這類應用中值得注意的是，當多筆資料都選
擇經由同一節點傳送時，節點的電量將會快
速地耗盡。因此，原則上來自多個 sources
的資料應該儘可能不要經由同一節點傳
送。更明確地說，不同 sources 至 sinks 的路
徑應該儘可能不同，也就是路徑間不要有相
交的節點。當然，若是由同一個 source 要將
同樣的資料同時傳送給多個 sinks 時，從
source 至 sinks 所建的路徑就應該儘可能相
同，才能避免相同的資料經由不同的路徑重
覆傳送耗損電量。因此，針對目前所討論的
這類應用，若要為新 source 建置路徑，應該
遵循兩個原則： 
● 儘可能避免使用到原先現行路徑上的節
點。 
● 新 source sunew至所有 sinks 的路徑應儘
可能相同。 
底下，我們說明針對此類應用所提出的
APNQ 路 由 策 略 (Active Path and 
Non-aggregation Queries Routing 
Strategies)。 
(1) 和前一類的應用相同，當新的 source 
sunew (i.e. N16) 偵測到或具有使用者所
要的資料，會傳送此訊息通知 sinks，
並準備建置資料傳送路徑到所有的
sinks。 
(2) 建置路徑的方法是由新 source sunew開
始，逐個節點尋找「最合適的鄰居節
點」，成為資料傳送路徑上的節點。最
合適鄰居節點的尋找方法主要是，比
較每個節點Ni與其鄰居節點Nbor-i所記
錄的向量中「分量值減少的個數」，同
時檢查 Nbor-i 的剩餘電量，以及是否已
在現行路徑上。底下，我們列出幾種
Nbor-i 可能滿足的條件，隨後再依 Nbor-i
所滿足的條件定出其被選取的優先順
序。 
● CX：所有分量皆比 Ni小 
● CY：僅部份分量比 Ni小 
● C1：Nbor-i 不在現行路徑上 
● C2：Nbor-i 已在原建置路徑上 
(3) 很明顯地，Ni 的任何一個鄰居節點
Nbor-i 可能同時滿足上述多個條件，例
如，Nbor-i 可能同時滿足(a) 所有的分量
都比 Ni 小；(b)不在現行路徑上。也就
是說，Nbor-i 同時滿足 CX、C1 二個條
件，此時我們可以簡單地表示成 Nbor-i
∈CX,1。為了稍後內容說明上的方便，
我們以Nbor-i∈Ci, j 代表Nbor-i同時滿足
Ci 及 Cj 二個條件。接下來，我們說明
滿足不同條件的鄰居節點，其被選取
的優先順序。 
− 屬於CX,1及CX,2的鄰居節點分別具
有被選取的最高及第二優先順
序：屬於這兩類的鄰居節點 Nbor-i，
它們所有的分量皆比 Ni 小代表它
們比 Ni 更為接近所有的 sinks，這
兩類的差別主要在於，目前是否在
現行路徑上，所以我們給予最高及
第二的選取優先順序。 
− 屬於 CY,1 及 CY,2 的鄰居節點 Nbor-i
分別具有被選取的第三及第四優
先順序：屬於這兩類的鄰居節點，
它們僅部份的分量比 Ni 小代表它
們僅比 Ni 更為接近部份的 sinks 而
非全部的 sinks。當然，這兩類節點
主要的差別仍是在是否在現行路
徑上。因為這兩類的鄰居節點都僅
比 Ni 接近「部份」的 sinks，所以
無法僅僅選擇「單一」的鄰居節點
Nbor-i 就能夠將資料傳送得更接近
所有的 sinks。因此，節點 Ni 必須
選擇多個 Nbor-i 來使得每個 sink 都
至少有一個鄰居節點是較為接近
它的[KHSL05]。 
 11 
 
圖 2-4：各節點記錄與 sinks 的 hop 數並組
成向量 
所有的sources同樣廣播自己的識別資料給
網路上的節點，此時，各節點也將記錄它與
所有sources的最小hop數，並將其組成第二
組向量，我們稱之為「U向量」，U向量中的
每個分量即表示該節點與每個source的最短
距離。沿用圖2-4，加上U向量後便如圖2-5
所示。若仍以編號N38的節點為例，它所記
錄的U向量是(5,6,8)，代表它與su1的最短距
離為5個hop數，與su2的最短距離為6個hop
數，而且與su3的最短距離為8個hop數。 
 
圖 2-5：各節點紀錄與 sources 的 hop 數並組
成向量 
(1) 當所有節點都記錄上述的兩組向量資
訊後，為了決定資料傳送路徑上的節
點，將需要從 sources 開始逐個節點選
取。選取節點的依據主要是參考，每
一感測節點Ni與其鄰居節點Nbor-i所記
錄向量的比較結果。實際上，若將任
意一個節點與其鄰居節點的 U 及 K 這
兩組向量的分量值進行比較，其結果
可能呈現多種的情形。為了將這些可
能的結果進行分類，我們列舉可能的
比較結果：  
  D1：Nbor-i 的 U 向量中，所有分量值減
少 
  D2：Nbor-i 的 U 向量中，部份分量值減
少 
  D3：Nbor-i 的 U 向量中，沒有分量值減
少 
  DX：Nbor-i 的 K 向量中，所有分量值減
少 
  DY：Nbor-i 的 K 向量中，部份分量值減
少 
  DZ：Nbor-i 的 K 向量中，沒有分量值減
少 
依上面所列出的可能結果，我們可以
推知，若是將任意一個節點 Ni 與其鄰居
節點 Nbor-i 所記錄的 U 及 K 兩個向量的分
量值進行比較，將可能產生九種不同的結
果，我們用符號 D1, X，D1, Y，D1, Z，D2, X，
D2, Y，D2, Z，D3, X，D3, Y，D3, Z來代表。
其中，Di, j 表示比較結果同時滿足 Di 及
Dj，而 i∈{1,2,3} 且 j∈{X,Y,Z}。例如，
若是比較結果為 D2, Z ，則代表 Nbor-i 的 U
向量中有部份分量值比Ni減少，同時Nbor-i
的 K 向量中沒有任何分量比 Ni 減少。 
(2) 對於任意一個感測節點 Ni 而言，它的
鄰居節點 Nbor-i僅可能屬於九種比較結
果之一。建置資料傳送路徑的方法主
要是，依鄰居節點 Nbor-i 的比較結果，
作為它被選取的優先順序，逐步構成
路徑上的節點。所以，在此先說明優
先權的訂定原則。基本上，要具有較
高優先權的兩個先決條件是： 
− 能夠將 sources 的資料儘早集中至某些
節點進行聚合運算。 
− 能夠將 sources 的資料 (不論是聚合前
或聚合後)，傳送至較接近所有 sinks
的節點。 
底下，更進一步討論如何滿足這兩個
條件。 
(I) 為了要滿足第一個先決條件，必須決
定出一個或多個「聚集點」，作為對
 13 
第一個條件是為了儘快將 source
的資料送達聚集點，以便能減少
「sources 資料傳送至聚集點的成本」，
而第二個條件則是為了儘快將聚合資
料送達 sinks，用來降低「聚集點傳送聚
合資料至 sinks 的成本」。在實際的作法
上，這兩個條件被用來檢查鄰居節點的
順序是先執行第一個，接著才是第二
個，原因乃是，從 sources 送出的資料
能被愈快聚集愈能省電，所以將第一個
條件列為優先判斷。另外，當同時有多
個鄰居節點滿足第一或第二個條件
時，則選擇具較高電量者或是隨機選擇
其一。 
到目前為止，雖然逐步選擇鄰居節
點的原則已被確定，然而在聚集點和伙
伴 source 的問題上，仍有幾項需要進一
步討論： 
(i) 資料聚集點的決定：作法上是，當各
source 檢查本身所記錄的 U 向量而
得知最小的分量值後，接著便可以利
用這個值去推算資料聚集點所該滿
足的條件。基本上，對於某個 source
節點 suj 而言，最佳的選擇是，資料
聚集點 Nagg 和 suj 及 subud-j 有著相等
的距離或 hops 數，使得雙方都能同
時將資料送達 Nagg執行聚合運算。底
下是此一想法較為正式的描述：假設
suj 的 U 向量中最小分量值發生在第
t 個分量，且其值為 Umin，若 suj 必須
將資料送達聚集點 Nagg，則 Nagg 的
U向量中第 t個分量 taggN 的值必須為
下列兩者之一： 
− 當 Umin 為奇數時， taggN = 





2
minU
  
− 當 Umin 為偶數時， taggN = 2
minU 。 
一旦依Umin的值計算出聚集點Nagg
該滿足的條件， suj 便將資料逐步送達
U 向量中第 t 個分量滿足上述 taggN 值的
感測節點。 
資料聚集點是否相同：在某些情況
下，互為彼此伙伴sources的su1及su2兩
個sources，即使是使用上述的法則分別
將資料送達自己預估的聚集點Nagg_1及
Nagg_2，仍可能發生Nagg_1≠ Nagg_2的情
況。不過，幸運的是，即使發生Nagg_1≠ 
Nagg_2的情況，Nagg_1和 Nagg_2 所記錄U
向量中的第t個分量值僅會相差1。也就
是說，此時Nagg_1和 Nagg_2彼此互為鄰居
節點，所以仍可以彼此協調出那一個感
測節點為真正的資料聚集點。 
(ii) 是否互為彼此的伙伴 source：基本
上，在最理想的情況下，某個 source
節點 suA的伙伴 sources 也將會以 suA
為它們的伙伴 source。然而，在有些
情況下可能發生，某個 source 節點
suA 認定 suB 為它的伙伴 source，但
是 suB卻以其他的 source為它的伙伴
source，如此一來，suA 的資料即使
送達預估的聚集點，仍無法與 suB 的
資料聚集。舉例來說，假設有三個
source 節點，suA、suB 和 suC，依各
自所記錄的U向量判斷後，suA以 suB
為它的伙伴 source 候選人， suB 以
suC 為它的伙伴 source 候選人，而 suC
以 suB 為它的伙伴 source 候選人。很
明顯地，suB 的資料將先與 suC 的資
料進行聚集，因而造成 suA將資料送
達它所預估的聚集點 Nagg_A時，卻無
法和 suB 的資料進行聚集。所以，若
是真有這類情況發生，  我們假設
Nagg_A 將必須與 suB 與 suC 的聚集點
再尋找一個聚集點進行資料的聚集。 
(II) 這一部份所關心的是，sources 的資
料能夠持續往「較接近所有 sinks 的
節點」傳送。基本上，我們將針對兩
種類型的資料分別去說明，一種是聚
合前的資料，另一種是聚合後的資
料。對於第一種聚合前的資料，在前
一部份討論 sources 的資料如何聚集
時，可以發現「逐步聚集法」在找聚
集點時，較為接近 sinks 的節點將具
有較高的被選擇權，因此聚合前的資
料確實是持續往較接近 sinks 的節點
 15 
有 sinks 所構成的集合；(ii) 所選的
鄰居節點數是滿足條件(i)的最小選
取數目。 
− 屬於 EX,2 的鄰居節點具有被選取的
第三優先順序：屬於這一類的鄰居節
點，雖然 Kbor-i 的所有分量值皆比 Ki
小，但是 Nbor-i 已經是其他路徑上的
節點，所以我們給予的選取優先順序
在前面二者之後。 
− 屬於 EY,2 的鄰居節點具有被選取的
第四優先順序：屬於這一類的鄰居節
點，Kbor-i 的部份分量值比 Ki 小，但
是 Nbor-i 已經是其他路徑上的節點，
所以給予第四選取優先順序。 
− 屬於EZ,1及EZ,2的鄰居節點具有被選
取的第五及第六優先順序：這二類的
鄰居節點，因為它們的所有分量值都
等於 Ki 的分量值，也就是說無法將
資料往較接近 sinks 的地方傳送，因
此會造成資料傳送時間的延遲，所以
我們給予最後兩個的選取優先順序。 
(3) 重複步驟 (2)持續去選取路徑上的節
點，直到每個 source 至所有 sinks 的路
徑皆被建置完成為止。 
 
在本計劃執行期間，亦針對系統中已建
置好某些資料傳送路徑在正常運作，因著遷
入感測器的加入，可能會存在更為有效率或
省電的路徑。對於影響路徑更換的因素中，
其中最重要的是遷入節點所坐落的位置及
所含蓋的現行路徑區段。而且，當感測網路
中出現多個遷入節點時，彼此間通訊範圍的
交錯複雜性，造成選取最佳路徑時的困難
度。因此，當多個遷入節點出現時，我們依
其 座 落 位 置 間 的 相 關 性 ， 分 成 相 鄰
(adjacency)與不相鄰兩種。當兩個遷入節點
是相鄰時，代表互為彼此的鄰居節點，能夠
直接通訊。另外，依遷入節點所含蓋的現行
路徑區段，將它們分成重疊(overlap)與不重
疊兩種情況。整體來說，我們可以依遷入節
點所坐落的位置及所含蓋的現行路徑區段
間的關係，將所有的環境情況分成四類： 
 情況一：『遷入節點不相鄰』 + 『含蓋
區段不重疊』。 
 情況二：『遷入節點不相鄰』 + 『含蓋
區段重疊』。 
 情況三：『遷入節點相鄰』 + 『含蓋區
段不重疊』。 
 情況四：『遷入節點相鄰』 + 『含蓋區
段重疊』。 
因為這四類情況所要採行的路徑更換策略
並不相同，因此接下來我們將分成四部份去
討論各種情況中的路徑更換策略。 
 
 NINS Path Replacement Strategy 
在第一類的環境中，遷入節點彼此間不
相鄰，而且它們所含蓋的現行路徑區段也不
重疊。所以，在這類的環境中，遷入節點都
是個別對現行路徑產生影響，彼此間並不相
關。如圖2-6(a)所示，共有四個遷入節點，
路徑更換策略只需個別計算這四個遷入節
點的效益，可以得知M0減少的成本B(M0)，
等於Cost(A3, A8) – Newcost(A3, M1, A8) = 
5 – 2 = 3，M1減少的成本B(M1)等於Cost(A10, 
A13) – Newcost(A6, M2, A11) = 3 – 2 = 1，M2
減少的成本 B(M2) 等於 Cost(A17, A19) – 
Newcost(A17, M3, A19) = 2 – 2 = 0，而M3減少
的 成 本 B(M3) 等 於 Cost(A22, A27) – 
Newcost(A22, M3, A27) = 5 – 2 = 3。整體所能
降低的成本有7。 
 
(a) 原有的現行路徑 
 
(b) 新建的更換路徑 
圖2-6：遷入節點不相鄰且區段不重疊 
 17 
 
(a) 原有的現行路徑 
 
(b) 新建的更換路徑 
圖 2-7：遷入節點不相鄰且區段重疊 
 
經由上述的分析，可以發現區段發生重疊的
情況會影響原本預估的個別效益。因此，針
對此類環境所設計的路徑更換策略，基本想
法是將重疊的區段放在一起一併考量。為了
達到此目的，我們將發生重疊區段的遷入節
點放在同一個『重疊集合』中，而且將重疊
集合中所有遷入節點所含蓋的現行路徑區
段稱之為『重疊區段』。接著，再依這些資
訊去選擇出最佳的更換路徑。所設計的路徑
更換策略稱之為，NIOS (Non-adjacency 
Immigrant- node and Overlap Segment) 路徑
更換策略，詳細步驟敘述如下： 
 
(1). 初始設定：此部份主要是負責找出每一
遷入節點 Mi 的領導節點 Li 與終止節點
Ei。 
(2). 現行路徑與新路徑的成本計算： 
 決定出所有的重疊集合 V(OLAPk)
及重疊區段 S-OLAPk：假設 Mi及
Mj 所含蓋的現行路徑區段 Si 及 Sj
發生重疊的情形，則將 Mi 及 Mj
放入同一個重疊集合 V(OLAPk)，
而 且 此 集 合 所 含 蓋 的 區 段
S-OLAPk = Si∪Sj。依此原則，所
有的重疊集合及重疊區段便能計
算出來。 
 決定出重疊區段 S-OLAPk 的領導
節 點 O-LEADk 及 終 止 節 點
O-REARk ：當所有的重疊區段
S-OLAPk 被決定出來後，可以依各
重疊區段中離資料源(source)最近
及最遠的現行節點，決定出領導節
點及終止節點。 
 計算所有區段的效益：除了上述的
重疊區段外，仍可能有些遷入節點
並未與其他遷入節點發生含蓋區
段重疊的情形。因此，對於區段效
益的計算上，分成下列兩類去計
算。 
−  重疊區段：對於重疊區段 S-OLAPk
而言，在原來現行路徑中的成本為
Cost(O-LEADk, O-REARk)。若選用
重疊集合 V(OLAPk)中的遷入節點
去傳送資料，則選取其中具最低成
本的路徑，且將其成本表示成
Newcost(O-LEADk, V(OLAPk), 
O-REARk)。 
− 無重疊區段：僅需單純地考量遷入
節點 Mi 對路徑的影響即可，也就
是計算 Cost(Li, Ei)及 Newcost(Li, 
Mi, Ei)。 
(3). 更換路徑的選取：依前述的步驟，可以
知道所有遷入節點所含蓋的區段分為
重疊區段與無重疊區段，所以對於更換
 19 
 
(1). 初始設定：此部份主要是負責找出每一
遷入節點 Mi 的領導節點 Li 與終止節點
Ei。 
(2). 現行路徑與新路徑的成本計算： 
 決定出所有的相鄰集合 V(ADJk)
及相鄰區段 S-ADJk：當 Mi 及 Mj
相鄰，也就是說互為彼此的鄰居節
點時，則將 Mi 及 Mj 放入同一個相
鄰集合 V(ADJk)。當所有相鄰的遷
入節點皆被放入對應的相鄰集合
後，我們便能夠計算出各相鄰集合
所含蓋的最大現行路徑區段，將它
稱之為相鄰區段 S-ADJk。 
 決定出相鄰區段 S-ADJk 的領導節
點 A-LEADk 及 終 止 節 點
A-REARk ：當所有的相鄰區段
S-ADJk 被決定出來後，可以依各相
鄰區段中離資料源(source)最近及
最遠的現行節點，決定出領導節點
及終止節點。 
  計算所有區段的效益：除了上述的
相鄰區段外，仍可能有些遷入節點
並未與其他遷入節點發生相鄰的
情形。因此，對於區段效益的計算
上，分成下列兩類去計算。 
−  相鄰區段：對於相鄰區段 S-ADJk
而言，在原來現行路徑中的成本
為 Cost(A-LEADk, A-REARk)。若
選用相鄰集合 V(ADJk)中的遷入
節點去傳送資料，則選取其中具
最低成本的路徑，且將其成本表
示成 Newcost(A-LEADk, V(ADJk), 
A-REARk)。 
− 個別區段：僅需單純地考量遷入節
點 Mi 對路徑的影響即可，也就是
計算Cost(Li, Ei)及Newcost(Li, Mi, 
Ei)。 
(3). 更換路徑的選取：依前述的步驟，可以
知道所有遷入節點所含蓋的區段分為
相鄰區段與個別區段，所以對於更換路
徑的選取，我們仍分成這兩種情況討
論。 
 相鄰區段的路徑選取。 
−  若 Newcost(A-LEADk, V(ADJk), 
A-REARk) < Cost(A-LEADk, 
A-REARk) ， 則 現 行 路 徑 中 的
A-LEADk 至 A-REARk 區段改由
A-LEADk 直 接 經 F(ADJk) 至
A-REARk 這條新區段所取代。此
處的F(ADJk)代表步驟(2.3.1)中具
最低成本的路徑，所經過 V(ADJk)
中的遷入節點。 
−  否則，仍由原來的現行路徑去傳
送資料。 
 個別區段的路徑選取。 
−  對 於 個 別 區 段 Si 而 言 ， 若
newcost(Li, Mi, Ei) < cost(Li, 
Ei) ，則現行路徑中的 Li至 Ei的
區段改由 Li 直接經 Mi 至 Ei這條
新區段所取代。 
−  否則，仍由原來的現行路徑去傳
送資料。 
 
 AIOS Path Replacement Strategy 
最後的這類情況最為複雜，因為遷入節
點間可能彼此相鄰，而且所含蓋的現行路徑
區段可能重疊。因此，針對這類情況所設計
的路徑更換策略必須同時考量相鄰與重疊
的特性。此策略的初始步驟將對遷入節點進
行歸類，使得相鄰及重疊的遷入節點被放入
同一個集合中，並且得知每個集合所含蓋的
 21 
含蓋的區段 S-OLAPk 可能是下列
三種情形之一：(i) Si∪Sj; (ii) Si∪
S-ADJj; (iii) S-ADJi∪S-ADJj。 
 決定出重疊區段 S-OLAPk 的領導
節 點 O-LEADk 及 終 止 節 點
O-REARk ：當所有的重疊區段
S-OLAPk 被決定出來後，可以依各
重疊區段中離資料源(source)最近
及最遠的現行節點，決定出領導節
點及終止節點。 
 計算所有區段的效益：除了上述的
相鄰與重疊區段外，仍可能有些遷
入節點並未與其他遷入節點發生
相鄰或含蓋區段重疊的情形。因
此，對於區段效益的計算上，分成
下列三類去計算。 
−  重疊區段：這類的重疊區段可能
來自於三種情形，(i)單純的個別
遷入節點所含蓋區段發生重疊; 
(ii)相鄰區段與個別遷入節點所
含蓋區段發生重疊; (iii) 相鄰區
段與相鄰區段發生重疊。無論是
那一種，對於重疊區段 S-OLAPk
而言，在原來現行路徑中的成本
為 Cost(O-LEADk, O-REARk)。若
選用重疊集合 V(OLAPk)中的遷
入節點去傳送資料，則選取其中
具最低成本的路徑，且將其成本
表 示 成 Newcost(O-LEADk, 
V(OLAPk), O-REARk)。 
−  非重疊的相鄰區段：對於這類的
相鄰區段 S-ADJk 而言，在原來現
行路徑中的成本為 Cost(A-LEADk, 
A-REARk) 。 若 選 用 相 鄰 集 合
V(ADJk)中的遷入節點去傳送資
料，則選取其中具最低成本的路
徑 ， 且 將 其 成 本 表 示 成
Newcost(A-LEADk, V(ADJk), 
A-REARk)。 
−  非重疊且非相鄰區段：在這類的
區段中，僅需單純地考量遷入節
點 Mi 對路徑的影響即可，也就是
計算Cost(Li, Ei)及Newcost(Li, Mi, 
Ei)。 
(3). 更換路徑的選取：依前述的步驟，可以
知道所有遷入節點所含蓋的區段分為
「重疊區段」、「非重疊的相鄰區段」與
「非重疊且非相鄰區段」，所以對於更
換路徑的選取，我們分三種情況討論。 
 重疊區段的路徑選取。 
− 若 Newcost(O-LEADk, V(OLAPk), 
O-REARk) < Cost(O-LEADk, 
O-REARk) ， 則 現 行 路 徑 中 的
O-LEADk 至 O-REARk 區段改由
O-LEADk 直 接 經 F(OLAPk) 至
O-REARk 這條新區段所取代。此處
的 F(OLAPk)代表步驟(2.5.1)中具最
低成本的路徑，所經過 V(OLAPk)
中的遷入節點。 
− 否則，仍由原來的現行路徑去傳送
資料。 
 非重疊的相鄰區段的路徑選取 
− 若 Newcost(A-LEADk, V(ADJk), 
A-REARk) < Cost(A-LEADk, 
A-REARk) ， 則 現 行 路 徑 中 的
A-LEADk 至 A-REARk 區段改由
A-LEADk 直 接 經 F(ADJk) 至
A-REARk 這條新區段所取代。 
− 否則，仍由原來的現行路徑去傳送
資料。 
 非重疊且非相鄰區段的路徑選取。 
− 對 於 個 別 區 段 Si 而 言 ， 若
newcost(Li, Mi, Ei) < cost(Li, Ei) ，
則現行路徑中的 Li 至 Ei 的區段改
由 Li 直接經 Mi 至 Ei 這條新區段所
取代。 
− 否則，仍由原來的現行路徑去傳送
資料。 
 23 
October 20-24, 2003, pp. 406–415. 
[EB04] Cheng Tien Ee, and Ruzena Bajcsy, 
“Congestion Control and Fairness for 
Many-to-one Routing in Sensor 
Networks,” In Proceedings of the 2nd 
International Conference on Embedded 
Networked Sensor Systems, pp.148-161, 
3-5, Nov. 2004. 
[GEGR+03] Benjamin Greenstein, Deborah 
Estrin, Ramesh Govindan, Sylvia 
Ratnasamy, and Scott Shenker,“DIFS: a 
distributed index for features in sensor 
networks,” in Proceedings of the first 
IEEE Sensor Network Protocols and 
Applications, May 2003, pp. 163-173. 
[HCB00] W. Heinzelman, A. Chandrakasan, 
and H. Balakrishnan, “Energy-Efficient 
Communication Protocol for Wireless 
Microsensor Networks,” In Proceedings 
of the 33rd Hawaii International 
Conference on System Sciences (HICSS 
'00), pp. 3005-3014, January 2000. 
[HMS02a] A. Howard, M.J. Mataric, and G.S. 
Sukhatme, “An Incremental 
Self-Deployment Algorithm for Mobile 
Sensor Networks”, Autonomous Robots, 
Vol. 13, no. 2, 2002, pp. 113–126. 
[HMS02b] A. Howard, M.J. Mataric, and G.S. 
Sukhatme, “Mobile Sensor Network 
Deployment using Potential Fields: A 
Distributed, Scalable Solution to the 
Area Coverage Problem”, In 
Proceedings of the Proc. Int. Conference 
on Distributed Autonomous Robotic 
Systems (DARS’02), Fukuoka, Japan, 
June, 2002, pp. 299–308.  
[IEG02] Chalermek Intanagonwiwat, Deborah 
Estrin, Ramesh Govindan, and John 
Heidemann, “Impact of Network 
Density on Data Aggregation in 
Wireless Sensor Networks”, In 
Proceedings of the 22nd International 
Conference on Distributed Computing 
Systems(ICDCS’02), Vienna, Austria, 
July, 2002, pp. 457-458. 
[IGE00] Chalermek Intanagonwiwat, Ramesh 
Govindan, and Deborah Estrin, 
“Directed Diffusion A Scalable and 
Robust Communication Paradigm for 
Sensor Networks”, In Proceedings of the 
6th International Conference on Mobile 
Computing and Networking 
(MobiCom’00), Boston, Massachusetts, 
USA, August 6-11, 2000, pp. 56-67. 
[IGE03] Chalermek Intanagonwiwat, Ramesh 
Govindan, Deborah Estrin, John 
Heidemann, and Fabio Silva, “Directed 
Diffusion for Wireless Sensor 
Networking”, IEEE/ACM Transactions 
on Networks, Vol. 11, No. 1, February 
2003, pp. 2-16. 
[KAK03] H. S. Kim, T. F. Abdelzaher, and W. 
H. Kwon, “Minimum-energy 
asynchronous dissemination to mobile 
sinks in wireless sensor networks”, In 
Proceedings of the ACM Conference on 
Embedded Networked Sensor Systems 
(SenSys 2003), Los Angeles, USA, Nov, 
2003, pp. 193-204. 
[Ke05] Chih-Horng Ke, “無線感測器網路中
多條資料傳輸路徑的負載平衡”，行政
院 國 家 科 學 委 員 會 計 劃 (NSC 
94-2213-E-309-006)，2005.08~2006.07.  
[KHSL05] Chih-Horng Ke, Ming Chi Hung, 
I-Fang Su, and Yu-Chiu Liu “Merged 
Multi-path Routing ： Two 
Energy-Efficient Strategies in Wireless 
Sensor Networks”, In Proceedings of 
