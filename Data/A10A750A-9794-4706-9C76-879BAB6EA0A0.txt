具有輸入/輸出介面提升設計之多專案晶圓製造 
“Multi-Project Wafers with Lifted I/Os” 
計畫編號：NSC95-2221-E-155-083 
執行期間：95 年 8 月 1 日 至 96 年 7 月 31 日 
主持人：林榮彬 元智大學資訊工程系副教授 
 
一、 中文摘要 
在多專案晶圓(Multi-project wafer)同一次
shuttle run 中，可能有許多設計使用了不同數
目之金屬層。那麼在製造過程中，使用到最少
金屬層的設計會最先離開晶圓，之後緊接一批
批使用較多金屬層的設計也會按照使用金屬
層多寡相繼離開。這樣的情形產生了相當可觀
的晶圓浪費，因而增加了 shuttle run 製造成
本。在本計劃裡，我們提出了一個簡單的構
想，稱作輸入/輸出介面提升(LIO)來處理這樣
的問題。LIO 這個方法就是把一個設計裡的輸
入/輸出界面全部拉高到在此次製造裡，所有
可能會用到的金屬層中的最高層，這樣一來所
有的晶片就會使用相同的金屬層。當每個晶片
產量達數千顆時，我們的方法就可節省 11%之
製造費用。 
英文摘要 
Shuttle fabrication or multi-project wafers 
(MPW) has been an important practice used by 
academics and industries for prototyping their 
innovative designs or low-volume Integrated 
Circuits (IC) production. The mask set for a 
shuttle run may contain designs with different 
number of metal layers. The wafers fabricated 
for designs using fewest metal layers will leave 
wafer lots first, and then batch-by-batch leave 
wafer lots for those using more metal layers. 
This incurs considerable waste of wafers and 
thus further increases the fabrication cost of a 
shuttle run. In this project, we propose a simple 
concept called Lifted-I/O (LIO) to address this 
problem. LIO elevates the I/Os of a design to the 
highest metal layers possibly used in a shuttle 
run so that all chips participating in a shuttle run 
will employ the same number of metal layers. By 
doing so, the number of wafers needed for a 
shuttle run can be reduced. Our method can 
achieve 11% production cost reduction for a 
volume of a few thousand dice per design. 
 
二、 計畫的緣由與目的 
Multi-project wafer (MPW) or shuttle run [1] 
has long provided an avenue to low-cost chip 
fabrication for low-to-medium volume 
production. Many chip designs collected from 
different customers can be placed in the same 
reticle to amortize the expensive mask-tooling 
cost [2]. These designs could be of different 
widths or lengths. They each may use a different 
number of metal layers. The intention to use as 
least number of metal layers as possible is 
pursued by designers to lower mask tooling and 
wafer fabrication cost. When a shuttle run has 
designs using different number of metal layers, 
those chips using the least number of metal 
layers will leave wafer lots first, the chips using 
the second least number of metal layers leave 
next,…, etc. We call the wafers fabricated with k 
metal layers k-layered wafers. In a k-layered 
wafer, only those dice designed with k metal 
layers can be good bare dice. The rest of dice 
will be bad. This incurs considerable waste of 
wafers and thus increases wafer production cost 
for a shuttle run. In this project we propose a 
solution to this problem. Our idea is that 
designers can keep using as fewer metal layers 
as possible in their designs, but they must lift the 
I/O pads of a design to the highest metal layer 
possibly used in a shuttle run. As shown in Fig. 1, 
an I/O originally fabricated up to metal layer k is 
lifted to layer k i+ . We call this task LIO. If all 
designs submitted for a shuttle run satisfy this 
fabrication program including SPW and MPW 
with LIO. However, we need a new cost model 
for MPW without LIO. The model is elaborated 
as follows. First, the mask cost for MPW without 
LIO is not much different from that for MPW 
with LIO and its calculation is the same as that 
done for conventional MPW program [4]. The 
reason is that the masks made for MPW without 
LIO must be also up to the top-most metal layer 
used by any design in the MPW without LIO. 
Second, wafer fabrication cost per wafer can be 
divided two parts [5], field-size independent 
wafer cost and field-size dependent wafer cost. 
Field-size dependent wafer cost, also called 
lithography (exposure) cost, depends on the 
number of exposures needed for fabricating a 
wafer. Fabricating a top metal layer needs a 
non-critical exposure for wires and a critical 
exposure for vias. Therefore, a k-layered wafer 
is less expensive than a k+1-layered wafer. The 
field-size dependent wafer cost per k-layered 
wafer with wafer field size A can be calculated 
as follows: 
 , , , ,( ) ( ) ( )e k v k v c k c n k nA T AC l e l e l e= + +  (1) 
where T(A) is the total of number exposures per 
layer on a wafer and it is a function of A. ,v kl , 
,c kl , and ,n kl  are the numbers of very critical 
layers, critical layers, and non-critical layers, 
respectively. ve , ce , and ne  are cost per 
exposure on a very critical, critical, and 
non-critical layer, respectively. 
Table 1. Cost per mask layer.  
 Wafer field size 
 625 mm2 384 mm2 256 mm2 128 mm2 64 mm2
Very critical layer 112,000 59,000 41,000 24,000 19,000
Critical layer 28,000 20,000 15,000 11,000 9,000
Non-critical layer 10,000 8,000 7,000 6,000 6,000
 
Field-size independent wafer cost depends on the 
number of metal layers fabricated. A k-layered 
wafer should has a smaller field-size 
independent wafer cost than a k+1-layered wafer. 
The difference depends on the cost of processing 
one more top metal layer, without including 
lithography cost. Since we do not have any trust 
worthy data about this difference, it is estimated 
as follows: 
 per metal layerC − − = ) /2( w B MC −   (2) 
where wC  is the field-size independent wafer 
cost per wafer when the wafer is fabricated using 
all the available metal layers, said N layers; M is 
the total number of mask layers for fabricating 
N-layered wafers; B is silicon substrate cost per 
wafer. Then, the field-size independent wafer 
cost per k-layered wafer is 
 , ( )w k w per metal layerN kC C C − −= − −   (3) 
Then, the total fabrication cost for an MPW 
without LIO is 
 
, , ,( ) ( ) ( )
g
mpw no lio m g e k w k k
k f
A AQC C C C− − =
= + +∑  (4) 
Where ( )k AQ is the number of k-layered wafers 
fabricated in the shuttle run. , ( )m g AC  is the cost 
for a g-layered mask set. 
The cost model presented in [4] can be used to 
calculate the share of cost assumed by a design 
participating in a shuttle run if all the designs are 
k-layered designs with a fixed k. However, when 
k takes several values, we suggest the model be 
revised as follows: 
 ( ) , ( )gmpw mpw k
k f
p pC C
=
= ∑  (5) 
Where for any chip p D∈  
( ) ( ) ( )
( ) ( )
, ,
, ,
p impw f m f
i D
p ie f p i w f p i
i D i D
p A Q AC C A A
A Q AC V V C V VA A
∈
∈ ∈
= +∑
+∑ ∑
(6) 
For any chip 
1k
i
i f
p D D
−
=
∈ − U  and k f>  
( ) ( ) ( )( )
( ) ( )( ) ( )
, , , 1
1
, , 1
1
, 1,
1
  +
   ) ( )(
p impw k m k m k
k
i D Di
i f
e k e k p i
k
i D Di
i f
p iw k p iw k k
i D Di
i f
p A AC C C A A
A A Q AC C V V
Q AC C V VA A
− −
∈ −
=
− −
∈ −
=
− −
∈ −
=
= − ∑
− +∑
− ∑
U
U
U
(7) 
For 
1k
i
i f
p D D
−
=
∉ − U  and k f> , , ( ) 0mpw k pC =  (8)  
where ( )Q A is the number of wafers fabricated 
with an MPW program regardless of whether 
LIO is used or not. pA and pV  are the chip 
size and required production volume for design p, 
However, LIO is not totally without its 
problems. The designers should pay a close 
attention to the following issues. 
z LIO could increase an I/O’s resistance. This 
increase can be kept to a minimum due to 
large I/O area. Moreover, dummy metals 
filled above top metal layers may influence 
interconnect capacitance and thus change 
timing characteristics of a circuit. 
z LIO may defer the completion date of chips 
using fewer metal layers. The delay is the 
time needed to fabricate only a couple of 
more top metal layers.  
z LIO might increase mask cost. This extra cost 
can be kept to a minimum since I/O pads on a 
few top metal layers are not critical. Their 
mask patterns can be fabricated using cheaper 
tools.  
 
The work will be presented at SPIE 27th Annual 
BACUS Symposium on Photomask Technology, 
17-21, September 2007. 
 
五、參考文獻 
1. C. A. Pina, “MOSIS: IC prototyping and low volume 
production service,” Proc. of Intl. Conf. on 
Microelectronic Syst. Education, 2001. 
2. M. LaPedus, “Is IC industry heading to the $10 
million photomask?” Semiconductor Business News, 
Oct. 7, 2002. 
3. D. Pramanik, H. Kamberian, C. Progler, M. Sanie, 
and D. Pinto, “Cost effective strategies for ASIC 
masks,” Proc. of SPIE, vol. 5043, 2003, pp. 142-152. 
4. R.B. Lin, M.C. Wu, W.C. Tseng, M.H. Kuo, T.Y. Lin 
and S.C. Tsai, “Design space exploration for 
minimizing multi-project wafer production cost,” to 
appear in ASPDAC, 2006. 
5. M. C. Wu and R. B. Lin, “Multiple project wafers for 
medium-volume IC production,” ISCAS, pp. 
4725-4728, 2005. 
6. A. B. Kahng, I. Mandoiu, Q. Wang, X. Xu, and A. Z. 
Zelikovsky, “Multi-project reticle floorplanning and 
wafer dicing,” Proc. of ISPD, 2004, pp.70-77. 
7. G. Xu, R. Tian, D. Z. Pan, D.F. Wong, “A 
multi-objective floorplanner for shuttle mask,” Proc. 
of SPIE, Vol 5567, 2004, pp. 340-350. 
8. M. C. Wu and R. B. Lin, “Reticle floorplanning and 
wafer dicing for multiple project wafers,” ISQED, 
2005, pp. 610-615. 
9. C. C. Chen and W. K. Mak, “A 
multi-technology-process reticle floorplanner and 
wafer dicing planner for multi-project wafers,” 
ASPDAC, 2006. 
10. M. C. Wu, S.C. Tsai, and R. B. Lin, “Floorplanning 
multiple reticles for multi-project wafers,” VLSI-DAT, 
2006. 
11. Y. C. Chang, Y. W. Chang, G. M. Wu, and S. W. Wu, 
“B*-tree: a new representation for non-slicing 
floorplans,” DAC, 2000, pp. 458-463. 
12. M. C. Wu and R. B. Lin, “A Comparative study on 
dicing of multiple project wafers,” IEEE Computer 
Society Annual Symposium on VLSI, 2005, pp. 
314-315. 
Double-Via-Driven Standard Cell Library Design 
 
 
Tsai-Ying Lin, Tsung-Han Lin, Hui-Hsiang Tung, Rung-Bin Lin 
Computer Science and Engineering Department 
Yuan Ze University, Chung-Li, Taiwan 
csrlin@cs.yzu.edu.tw 
 
 
Abstract 
 
Double-via placement is important for increasing chip 
manufacturing yield. Commercial tools and recent work 
have done a great job for it. However, they are found with 
a limited capability of placing more double vias (called 
via1) between metal 1 and metal 2. Such a limitation is 
caused by the way we design the standard cells and can 
not be resolved by developing better tools. This paper 
presents a double-via-driven standard cell library design 
approach to solving this problem. Compared to the results 
obtained using a commercial cell library, our library on 
average achieves 78% reduction in dead vias and 95% 
reduction in dead via1s at the expense of 11% increase in 
total via count. We achieve these results (almost) at no 
extra cost in total cell area and wire length. 
 
1. Introduction 
 
Via in a VLSI design has been one of the important 
sources that invite manufacturing defects and cause 
reliability problem during operation. With interconnect 
width kept shrinking and the introduction of copper 
metallization process, the probability of creating open vias 
or partially void vias increases considerably. To alleviate 
this problem, foundries encourage designers to use at least 
two vias to connect metal wires locating at two different 
layers as shown in Fig. 1 [1-5]. There are two ways to 
achieve this goal as shown in Fig, 2. One is to perform 
double-via (DV) placement during routing, whereas the 
other is to do it after routing. Placing double vias 
on-the-spot during routing is still in its inception. We call 
this approach DV-driven routing as shown on the left of 
Fig. 2. Side effects induced by DV-driven routing are still 
not well investigated. However, it is believed that this 
routing approach will exacerbate wiring congestion. The 
maze router designed by Xu et al. [6] is a DV-driven 
router. As to post-routing approach, a redundant via (RV) 
is inserted to a place adjacent to a via of our interest. The 
insertion must conform to layout design rules. Lee and 
Wang formulated the insertion problem as a problem of 
finding a maximum independent set in a graph [7]. Chen et 
al. proposed a faster approach to the same problem which 
is formulated as a bipartite graph matching problem [8]. 
The work in [9] and commercial tools such as [2,10] also 
provide such a capability to designers. To further increase 
RV insertion rate, Yao et al. in [11] designed an RV aware 
multilevel router that considers the cost of placing double 
vias during maze routing. Chen et al. in [8] presented an 
RV aware gridless multilevel router. The results obtained 
by an RV aware router are then fed into a post-routing RV 
insertion tool to complete the placement of double vias. 
The post-routing RV insertion rate with respect to the total 
number of vias in layout designs obtained by either an RV 
aware or a conventional router ranges from 70% to 98%. 
Post-routing RV insertion is in the main stream of 
current practice, which might be assisted by an RV aware 
router. Although previous work has done a great job for 
RV insertion on one aspect or another, our own study finds 
that only 20%~50% of via1s get inserted with redundant 
via1s (connecting metal 1 wires to metal 2 wires). This 
finding is consistent with that presented in [7]. Since via1 
is more critical than any other type of vias, it is desirable 
to have a higher via1 insertion rate. We have found that 
most of via1s, each of which is not accompanied by a 
redundant via1, occur at the IO pins of a cell. The main 
reasons for this have two.  
 
Fig.1: Redundant via insertion. 
978-3-9810801-2-4/DATE07 © 2007 EDAA 
 
z An RV aware router does help to increase the 
average insertion rate up to 2.2% at the expense of 
1.8% increase in the total number of vias [8]. 
z The insertion rates with respect to the total number 
of vias are not consistent throughout the above four 
approaches, i.e., 94.8% in [8], 92.1% in [9], 97.9% 
in [11], and 70.1% in [7].  
 
Chen et al. 
[8] 
Lee et al. [7] Method 
 
Router Alive Total 
Yao et 
al. [11] 
(Total) 
Luo et 
al. [9] 
(Total) Alive Total 
CV NA 92.6 NA 92.1 99.6 70.1 
RVA 98.6 94.8 97.9 NA NA NA 
Tab. 1: Redundant via insertion rates (%). 
 
The last bullet is the foremost interesting. Even though 
the insertion rate of 70.1% in [7] is achieved for the layout 
designs generated by a conventional router, the rate would 
not be considerably higher than 70.1% if the RV insertion 
were done for the layout designs generated by an RV 
aware router. This argument is made based on the 
observation presented in the second bullet. So, how could 
the situation in the third bullet happen? Our answer is that 
the insertion rate with respect to the total number of vias 
highly depends on the abstract views of the cells (gates) in 
a cell library. With a private communication to the authors 
in [7], we are told that a 0.18 um commercial cell library 
[12] has been used to describe the designs. It is found that 
the lower insertion rate reported in [7] is mainly caused by 
a considerable portion of dead via1s (in contrast to alive 
vias), which on average amounts to 26.4% with respect to 
the total number of vias. Our own study using the same 
commercial cell library justifies such a consequence. This 
places an upper bound on the RV insertion rate. 
As for the work in [8] and [11], the higher insertion rate 
is also attributed to the libraries used to describe their 
benchmark circuits. Both [8] and [11] use the same set of 
benchmark circuits, each of which contains cell instances 
from a very simple library. For the ISCAS89 circuits, the 
library being used there consists of only three gates, a 
2-input NAND, an inverter, and a flip-flop. The abstract 
views of these three gates are very simple. Each of their IO 
pins is simply a small square on metal 1 as shown in Fig. 4 
except that nothing is found on metal 1 layer. The libraries 
used for the benchmark circuits other than the ISCAS89 
circuits are also similar except that the macros contained 
in the library are much larger than basic logic gates. With 
such kind of libraries used in [8] and [11], it is basically no 
need to place a via1 on a pin because metal 1 pins are 
easily accessible using metal 1 wires. This is the reason 
why very high insertion rate can be achieved. However, a 
real circuit is seldom designed with this kind of cell library. 
As to the work presented in [9], libraries used for its 
benchmark circuits are not disclosed there.  
On account of the above analysis, RV insertion rate for 
a circuit highly depends on the library used for describing 
the design. In a more realistic situation where a 
commercial cell library is used, a very high insertion rate 
is not achievable simply using better tools. This gives 
concrete evidence to the need of a DV-driven library for 
resolving the low insertion rate problem in via1s. 
 
 
Fig. 4: Abstract views of some basic gates (only 
topologically but not geometrically correct). 
 
3. DV-Driven Standard Cell Library 
 
We design two standard cell libraries, DV1 and DV2. 
DV1 provides each pin with sufficient metal 1 area for 
accommodating at least two via1s. DV1 addresses the 
problem of insufficient metal 1 pin area. DV2 pre-installs 
two via1s at each pin of the cells. RV insertion at IO pins 
is thus guaranteed before routing. DV2 can resolve the 
problem about low insertion rate of via1s. 
Here we design a small cell library, instead of a 
full-blown one. Our cell library contains 48 frequently 
used standard cells such as INV, NAND, NOR, XOR, 
AND, OR, AND-OR-INV, and DFF with different drive 
strengths and different number of input pins. These cells 
are designed with UMC 0.18µm process technology. For 
the purpose of making a fair comparison, each cell we 
design has the same dimension as that of its counterpart in 
a UMC 0.18µm standard cell library [12]. Power/ground 
bus width, layout grid, and vertical/horizontal pin grid are 
all set equal to that used in the UMC cell library. The 
transistors in a cell are tuned to produce the same timing 
characteristics as that of its counterpart. 
We use a layout editor to handcraft the art work of each 
cell. We run DRC (design rule check) and LVS (layout 
versus schematic) to verify cell layouts. The post-layout 
HSPICE simulations are performed to see if the timing 
meets the specification. Once this is done, the abstract 
view of a cell layout is translated into a library exchange 
format (LEF) file. For the cells in DV1, only metal 1 of a 
pin is treated as ports. For the cells in DV2, both metal 1 
and metal 2 of a pin are treated as the ports. Each pin in a 
cell is designed in such a way that it is placed in parallel 
with metal 2 routing tracks so that the adjacent metal 2 
routing tracks will not be blocked by the pin. This is 
illustrated in Fig. 5. Fig. 6 shows a layout of D flip-flop 
and NAND2 in DV2, respectively. If we remove the metal 
2 plates and the via1s on the pins of these two cells, these 
two cells become the cells in DV1.  
if all pins in the DV1 cell are connected to metal 2 wires 
directly by via1s. This approach is called DV12. The other 
type is to replace a DV2 cell in a DV2-synthesized routed 
design by its counterpart in DV1 if at least one of the pins 
in the DV2 cell is connected to metal 1 wire directly. This 
approach is called DV21. Table 2 shows our experimental 
results only for the case using 4 metal layers due to lack of 
space. The results given in Table 2 are somewhat better 
than that for the case using 3 metal layers and somewhat 
worse than that for the case using 5 metal layers. Each 
bracket in an entry contains a normalized number with 
respect to the result obtained using UMC018 library. We 
have the following observations (based on all the results 
obtained using 3, 4 and 5 metal layers). All comparisons 
are made with respect to the results obtained using 
UMC018 library. 
z The dead via count is monotonically reduced with 
increasing number of DV2 cells in a circuit, whereas 
the total via count before RV insertion is 
monotonically increased with increasing number of 
DV2 cells in a circuit. For the circuits that use DV2, 
dead via count is reduced by 64%~84% (78% on 
average) and dead via1 count is on average reduced by 
95% at the expense of 7%~18% (11% on average) 
increase in total via count. We can also clearly see the 
trade-off between total via count and dead via count. 
z DV1 does not perform well in reducing dead via count 
but does help to reduce total via count by 2%~4% and 
via1 count by 1%~4.5% in a design. The reason for 
total via count reduction is possibly due to the 
improvement of metal 1 pin accessibility. However, 
the reduction in dead via1 (via) count is not consistent. 
In some cases, DV1 even incurs up to 20% (23%) 
more dead vias (via1s) than UMC018. We are still not 
totally clear why this happens. One possibility is that 
the places for adding a redundant via1 to the cells in 
DV1 are more seriously occupied by other metal 2 
wires. Hence, a DV-driven or an RV aware router 
needs to be employed to take advantage of DV1. 
z The insertion rate is on average increased from 66% 
with UMC018 library to 93% with DV2. The insertion 
rate achieved with DV2 is similar to those obtained by 
Chen [8] and Luo [9] (see Table 1). 
z No routability degradation is observed. The total wire 
length is fluctuated within ±5%. Note that the above 
results are achieved at no extra cost in total cell area. 
 
How good are the results we have obtained? It is 
somewhat difficult to answer this question. The problem is 
that we reduce dead via count at the expense of increasing 
total via count. Thus, it is interesting to see how much gain 
in via yield is achieved with our approach. To make yield 
calculation more realistic, we assume that single-via 
failure rate ranges from 5E-9 to 5E-6 [9] and the 
double-via failure rate is about 1/40 times the failure rate 
of a single via [4]. Assume Poisson yield model is used 
and the possibility of the opens or shorts on the metal 
overhangs for redundant vias is ignored. Figs. 8 and 9 
show that DV2 indeed achieves better yield improvement 
than any other approaches, especially for the cases with 
large single-via failure rates. Two large ITC-99 circuits 
b17 and b18 are also tested (in many cases the program 
from [7] can not complete RV insertion for the large 
circuits). Fig. 10 also shows that the results for b17 and 
b18 are consistent with that given in Figs. 7 and 8. 
0.70
0.75
0.80
0.85
0.90
0.95
1.00
5.E-09 1.E-07 5.E-07 1.E-06 2.E-06 3.E-06 5.E-06
Failure probability of single via
Y
iel
d
UMC018(no RV)
UMC018
DV1
DV12
DV21
DV2
 
Fig. 8. Via yield improvement for s35932. 
 
0.70
0.75
0.80
0.85
0.90
0.95
1.00
5.E-09 1.E-07 5.E-07 1.E-06 2.E-06 3.E-06 5.E-06
Failure probability of single via
Y
ie
ld
UMC018(no RV)
UMC018
DV1
DV12
DV21
DV2
 
Fig. 9: Via yield improvement for b15. 
0.75
0.80
0.85
0.90
0.95
1.00
5.0E-09 2.0E-08 4.0E-08 1.0E-07 2.0E-07 4.0E-07 6.0E-07 9.0E-07 1.4E-06
Failure probability of single via
Y
ie
ld b17-UMC018
b17-DV2
b18-UMC018
b18-DV2
 
Fig. 10: Via yield improvement for b17 and b18. 
