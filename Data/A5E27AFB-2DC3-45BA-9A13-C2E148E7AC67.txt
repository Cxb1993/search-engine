在 IPv6 環境的隨意行動網路上設計與實作任播協定 (II) 
Design and Implementation of Anycast Protocols for IPv6-based Mobile Ad-hoc 
Networks (II) 
計畫編號：NSC95-2221-E-035-010 
執行期限：95 年 8 月 1 日至 96 年 7 月 31 日 
主持人：竇其仁   E-mail: crdow@fcu.edu.tw 
計畫參與人員：陳聖章、宣拔、李佳容、林佩蓉、彭家揚 
逢甲大學資訊工程學系 
 
ㄧ、摘要 
任播協定在隨意行動網路上有許多應
用，如最鄰近或最佳伺服器發現、摘要服
務、可靠性服務、政策性繞送、網路安全
認證與網路時間服務等。本計畫的主要目
的就是在 IPv6環境的隨意行動網路上設計
與實作任播協定、以及改善任播-k 協定的
效能。我們並且針對實作的系統做一系列
的效能測試以及驗證叢集系統的正確性。
我們亦分別以服務主機數量與距離知悉方
法來改善原有任播-K 協定的效能。實驗證
明本系統可達到較低的控制負載與較高的
服務滿足率。 
 
關鍵詞：隨意行動網路、任播、IPv6、叢集、
虛擬骨幹。 
 
Abstract 
There are many applications of anycast 
protocols in mobile ad-hoc networks 
(MANETs), such as the nearest or best server 
discovery, abstract services, reliable services, 
policy routing, network security 
authentication, and network time services. 
We design, develop, and implement anycast 
protocols for MANETs on IPv6 environments 
and improve the performance of anycast-k 
protocol. We have also performed the 
performance analysis of the previous 
implemented anycast system on Linux system 
and verified the accuracy of the clustering 
subsystem. Also, we use the server count and 
distance information to improve the 
performance of the previous developed 
anycast-k protocol. Our system can achieve 
lower control overhead and higher 
satisfactory ratio. 
 
Keywords: Mobile Ad-hoc Networks, Anycast, 
IPv6, Clustering, Virtual Backbone. 
二、計畫緣起與目的 
隨意行動網路是屬於無線網路中的一
種架構。它是由一群節點(行動電腦、手機、
PDA 等行動通訊終端設備)的集合所組成，
而且可以不需要有線網路的架構或設備的
支援。由於沒有基地台的基礎架構，所以資
源的管理也較為困難。若是要在隨意行動網
路中做資源管理的話，我們可以從節點中選
出一些主機來做協調者的工作。叢集演算法
就是將網路中所有的節點分成好幾個叢
集。在每一個叢集中選出一個叢集協調者
(clusterhead)，由它來管理叢集中的成員。然
後我們可以利用此叢集架構來建立與維護
虛擬骨幹，利用此骨幹可以幫助我們在隨意
行動網路中做資源的管理。 
我們在過去幾年執行的國科會計畫
方法開發，這樣做有個好處，容易增加新功
能以及容易維護。本系統分為兩個子系統，
分別是 anycast address mapper 以及 pthread
管理機構，並且使用 AODV6 作為繞徑的機
制。 
(1) Anycast address mapper ： Anycast 
address mapper 用來處理任播伺服器的尋
找，當應用程式向任播伺服器要求服務時，
必須先向 anycast address mapper 要求尋找
最近的任播伺服器並且取得該伺服器的單
播位址，才傳回給要求的應用程式，該應用
程式再用從 anycast address mapper 取得的
單播位址向該伺服器要求服務。 
(2) Pthread 管理：為了讓系統資源不要被
無限制的佔用與取得，所有產生的 thread 都
必須統一由一個負責 thread 管理的 thread
來做控制，以保證沒有用的 thread 都能夠離
開，放出可用資源。 
四、評估基本型任播-K 協定 
在基本型的任播-K 機制中，我們利用
了遞送閘道的控管來減少尋找時所會產生
控制封包的負擔，而且我們也使用兩個不同
的分配機制，在每一個遞送閘道上，根據下
游的分支數去分配每一個分支要負責找尋
的資源數量。在這兩個機制中，因為無法知
道每一個分支下游所擁有的資源數量，所以
只能要求每個分支尋找同樣的服務資源數
量，但是這樣可能會造成幾個問題： 
(1) 當所要尋找的服務資源數量增加時，第
一個機制所可以減少的控制封包數量有
限。以圖 1 為例，當 K_No 增加到 30 時，
在節點 1 利用第一個機制所計算出的分配
數量為 27，此時節點 1 會要求每一個分支
去尋找 27 個資源，這樣還是一樣會產生大
量控制封包的數量並降低效能。  
(2) 當所要尋找的服務資源數量增加時，使
用第二個機制將會造成無法滿足所要尋找
資源數量的機會增加。以圖 1 為例，此圖
中每一個 ACH 旁的數字代表此 ACH 下管
理的資源主機的數量。在此例子中，當 K_No
增加到 30 時，在節點 1 利用第二個機制所
計算出的分配數量為 8，此時節點 1 會要求
每一個分支去尋找 8 個資源，但是在節點
98 這個分支下，總共只有五個服務資源，
所以最後回應到節點 1 的服務資源數將無
法滿足原本 30 個的要求，但是實際上在此
例中，網路中的總共的服務資源數量是可以
滿足此需求的。 
 
圖 1 尋找資源數增加的例子 
(3) 這兩個機制所找到的服務資源主機不
一定是最佳的選擇。因為這兩個機制是要求
每個分支尋找同樣的服務資源數量，因此並
沒有考慮到這些主機與原本要求服務節點
的距離，所以找到的服務主機有可能是比較
遠的，這樣可能會影響到後續在使用這些資
源時的效能。 
五、進階型任播-K 協定 
我們以基本型的任播-K 協定為基礎，
並且對其做了改善。為了要減少當在執行服
務發現的動作所產生的負擔，我們將建立好
的任播樹做裁剪，把沒有服務的樹裁剪掉建
立一個更為精簡的任播樹。我們並且付予任
播樹上的節點角色，分別為： 
(1) CH：clusterhead 
(2) ACH：anycast clusterhead，一個包含許
多任播群組成員的 clusterhead，並且會
提供服務資訊。 
(3) 第一類節點：在任播樹中具有大於等於
二條 outgoing path 的節點。 
(4) 第二類節點：在任播樹中具有一至二條
outgoing path 的節點。 
進階型任播-K 協定包含兩個部份，分
別為服務資訊搜集和維護以及服務發現，以
些節點收到 INQI 則會產生一個 REPI，其中
包括 SIT中的資訊。當來源端收到一個REPI
它會更新 SIT 並執行服務選擇的動作，如果
經過一段很長的時間都沒有收到 REPI 則不
啟動服務選擇，這時該節點會廣播 SREQ 到
任播樹上的每一個分枝尋找 K_No 個服務。 
六、實驗結果 
 在任播實作的實驗中，我們使用了八台
安裝了 Lucent Orinoco 802.11b 的無線網路
卡以及 Linux 2.4 kernel 的筆記型電腦。我們
並且將這八台筆記型電腦分散在完全連接
拓樸以及部份連接拓樸中。首先在我們的實
驗室中將所有的 daemon 啟動，包含了
anycast address mapper (anycastd) 以及叢集
子系統(clusterd)。之後在移動到指定的地點
後開始紀錄個點的狀態。在叢集的狀態紀錄
完成後，就開始執行任播實驗，每秒鐘送出
一次任播要求共送出 30 次，來觀察該任播
系統的任播要求成功率。 
73.5M
105.1M 52.5M
64.8M
63M 63M 63M 94.5M31.5M 63M
21.8M
23.2M
2
2
2
2
2
2 2 2
2
2 2 2
26.3M 2
12.3M 2 12.3M 2
212.3M
212.3M
212.3M
226.2M226.2M
15.4M 2 8.7M 2
214.4M14.4M 214.4M 214.4M 2
49M2
27.5M
250M
273.5M 73.5M 2 73.5M 2
63M 2
(22.2坪)
90.9M 94.5M 49.5M
上
380M
37.5M
11.4M17.7M17.7M
23.6M
18.7M
13.6M
下 14.6M
14.3M
2
2
2 2 2
2
2 2
2
22
2
2
45M2263M
86.1M
(26坪)
2
42.9M 2
231.5M231.5M
14.6M 214.7M 2 14.6M2
14.7M 2
14.7M 2
14.7M 2
14.7M 2
14.7M 2
14.7M 2
14.7M
14.7M
14.7M
14.7M
24.6M4.6M 2
212.8M
27.5M
Ordinary nodeGatewayClusterhead
Partially connected Environment
Fully connected Environment
 
圖 3 叢集演算法節點實體分佈 
如圖 3 所示，這是我們在大樓樓層中
執行叢集子系統的結果，可由圖 4 清楚的
看出，叢集子系統所產生的結果跟我們先前
開發的叢集演算法是相同的，所以由此証明
了叢集子系統的正確性。 
 
圖 4 叢集演算法邏輯拓樸 
Response time in 8 nodes environment
0
2
4
6
8
10
12
14
16
18
20
1 2 3 4 5 6 7
Number of services
Re
sp
on
se 
Ti
me
 (m
s)
Fully connected
Partially connected
 
圖 5 回應時間 
我們同時也針對任播系統做測試，如圖 
5 所示，我們發現當隨著服務數的增加，回
應時間會開始減少，這是因為隨著服務數的
增加，則越來越多的服務接近要求端造成回
應時間下降。同理，如圖 6 所示，隨著服
務數的增加，每次要求的成功率也會跟著增
加。 
Success rate in 8 nodes environment
70
75
80
85
90
95
100
1 2 3 4 5 6 7
Number of services
Su
cc
es
s r
ate
 (%
)
Fully connected
Partially connected
 
圖 6 服務要求成功率 
圖 7 顯示出當我們改變節點的個數
時回應時間會受到什麼樣的影響，節點
的增加會造成回應時間的上升，因為在
完全連接的網路中受到無線電的干擾，
在部份連接的網路中受到路由長度的影
響造成回應時間上升。同理，圖 8 也是
受到上述的原因造成成功率的下降。 
The impact of variant nodes on response time
0
2
4
6
8
10
12
14
16
18
20
2 4 6 8
Number of nodes
Re
sp
on
se 
Ti
me
 (m
s)
Fully connected
Partially connected
 
圖 7 改變節點個數對回應時間的影響 
不是高於其它的方法，但是在圖 14 和圖 
16 中當服務數接近 50 到 150 時，可以有能
力找到最鄰近以及最短延遲的服務，並且具
有較低的負擔，因此進階型任播-K 協定適
合在較高服務密度時使用。 
0.82
0.84
0.86
0.88
0.9
0.92
0.94
0.96
0.98
1
25 50 75 100 125
#Services
Sa
tis
fa
ct
or
y 
R
at
io
Anycast-K
VBAF1
VBAF2
AT-Flooding
 
圖 13 Satisfactory Ratio vs. #Services 
4
5
6
7
8
9
10
11
25 50 75 100 125
#Services
A
ve
ra
ge
 H
op
 C
ou
nt Anycast-K
VBAF1
VBAF2
AT-Flooding
 
圖 14 Average Hop Count vs. #Services 
205
255
305
355
405
455
505
555
25 50 75 100 125
#Services
La
te
nc
y 
(m
s)
Anycast-K VBAF1
VBAF2 AT-Flooding
 
圖 15 Latency vs. #Services 
0
1000
2000
3000
4000
5000
6000
7000
25 50 75 100 125
#Services
C
on
tro
l O
ve
rh
ea
d
Anycast-K
VBAF1
VBAF2
AT-Flooding
 
圖 16 Control Overhead vs. #Services 
 
 
七、結論 
 本計劃在 IPv6 為基礎的隨意網路上設
計與實作任播協定。我們在 Linux 系統上面
實作基本型的任播協定以及叢集演算法做
效能評估以及正確性。在任播協定方面，我
們採用修改 ICMPv6的方式來達到任播的功
能。叢集演算法則被用來管理由於任播要求
所產生的負擔，該叢集子系統的實作能夠達
到之前的模擬目標。我們也在實際環境中，
針對任播協定進行實際的測試。當越多服務
在網路中時，可以得到更短的回應時間和越
高的成功率。在改善任播-K 方面，我們可
以使用額外的資訊改善原有任播-K 協定的
效能，在 GloMoSim 的模擬結果顯示，不論
在靜態以及動態環境中任播-K 所花費的控
制訊息負擔、延遲時間以及距離都比原有的
任播-K 協定和水淹法來的低，而且能夠達
到近似水淹法的高滿足率。 
參考文獻 
[1] R. Bagrodia and X. Zeng, “GloMoSim, A Library 
for the Parallel Simulation of Large Wireless 
Networks,” in Proceedings of the 12th Workshop 
on Parallel and Distributed Simulation (PADS’98), 
1998. 
[2] T. C. Hou, T. J. Tsai and T. C. Hsu, “A Limited-size 
Clustering Protocol in Ad-hoc Networks,” 
Proceedings of International Conference on 
Information Networking, 2000. 
[3] H. Deng and D. P. Agrawal, “TIDS: threshold and 
identity-based security scheme for wireless ad hoc 
networks,” Ad Hoc Networks, Vol. 2, pp. 291-307, 
2004. 
[4] I. I. Er and W. K. G. Seah, “Mobility-based d-hop 
clustering algorithm for mobile ad hoc networks,” 
Proceedings of IEEE Wireless Communications 
and Networking Conference(WCNC. 2004), Vol. 4, 
pp. 2359-2364, Mar. 21-25, 2004 . 
[5] J. H. Lin, C. R. Dow and S. F. Hwang, “A 
Distributed Virtual Backbone Development 
Scheme for Ad-Hoc Wireless Networks,” Wireless 
Personal Communications, 27, pp. 215-233, Aug 
2003. 
[6] T. Mendez, W. Milliken, and C. Partridge, “Host 
Anycasting Service,” IETF RFC 1546, Nov. 1993; 
also available at www.ietf.org/rfc/rfc1546.txt. 
[7] M. Oe, and S. Yamaguchi, “Implementation and 
Evaluation of IPv6 Anycast,” proceedings of the 
10th Annual Internet Society Conference, 
Yokoham, Japan, Jul. 2000. 
[8] C. Perkins, E. Belding-Royer and S. Das, “Ad hoc 
On-Demand Distance Vector (AODV) Routing,” 
RFC 3561, Jul. 2003. 
[9] R. Poosarla et al., “A Cluster Based Secure 
可供推廣之研發成果資料表 
□ 可申請專利  ■ 可技術移轉                                    日期：96 年 10 月 10 日 
國科會補助計畫 
計畫名稱：在 IPv6 環境的隨意行動網路上設計與實作任播協定 (II)
計畫主持人：竇其仁 
計畫編號：NSC95-2221-E-035-010            
學門領域：資訊工程一 
技術/創作名稱 在 IPv6 隨意行動網路上之任播技術 
發明人/創作人 竇其仁 
中文： 
我們在 IPv6 環境的隨意行動網路上設計與實作任播協定、以及改
善任播-k 協定的效能。我們在 Linux 上實作任播系統和叢集子系
統，也針對實作完成的任播系統做了一系列的效能測試，並且驗證
其正確性。我們的任播-k 協定以服務主機數量與距離知悉方法來改
善傳統任播-K 協定的效能。 
技術說明 英文： 
We design, develop, and implement anycast protocols for MANETs on 
IPv6 environments. We have performed the performance analysis of 
the implemented anycast system on Linux system and verified the 
accuracy of the clustering subsystem. Our anycast-k protocol uses the 
server count and distance information to improve the performance of 
the traditional anycast-k protocol. 
可利用之產業 
及 
可開發之產品 
本計畫所提出之技術可以應用於無線產業方面。在任播技術方面，
可以利用於最鄰近伺服器選擇、摘要服務、可靠性服務、政策性繞
送、網路安全認證與網路時間服務等相關產品之開發。 
技術特點 
本任播技術可支援在 IPv6 環境的隨意行動網路。我們利用了虛擬
骨幹機制來管理並減少在找尋服務主機時所造成的負擔。實作完成
之任播機制 API 可用來尋找以及重新傳播和回應任播要求的訊
息，並且配合 AODV6 這個繞徑協定來決定封包路由。 
推廣及運用的價值 
本技術主要可以應用在無線網路的資料傳輸上。因為我們所提出的
任播技術具有擴充性，所以本技術很適合運用在無線網路服務尋找
相關的應用上。 
 
 
(B) KIMAS2007: 
2007 年 IEEE KIMAS 國際研討會 (International Conference on Integration 
ofKnowledge Intensive Multi-Agents Systems)是由國際電機電子工程師協會(Institute 
of Electrical and Electronics Engineers, IEEE)所舉辦。會議地點是在美國麻州的
Waltham 的Westin Hotel 中所舉行，此會議的舉辦日期為2007 年4 月30 日至5 月3 
日，其中Tutorial 一天議程三天共計四天，並且和KSCO-07 之國際會議共同舉行，
有來自許多不同國家的學界與業界人員參加。此研討會主要是針對知識強化系統的
整合以及智慧型多代理人系統做討論，此研討會也提供了學者及工程師一個國際公
開的場合，以促進資訊領域學者及研究人員的討論及互動。此會議每天上午及下午
session開始之前都有邀請著名的學者針對不同的主題做演講，然後開始會議的口頭
報告。 
 
議程第一天上午的Keynote Speech 主題為「 Inferences and Assumptions 
aboutComplex Adaptive Systems」，主講者為Dr. David Fogel。下午的主題是「An 
Emerging Unified Theory of Neocortex: From Vision to Cognition」，主講者為Dr. 
Stephen Grossberg。第二天上午的Keynote Speech 主題為「TBD」，主講者為Dr. 
Evangelia Micheli-Tzanakou。下午的主題是「 Seek Simplicity and Distrust It: 
Knowledge Maximization versus Effort Minimization」，主講者為Dr. Dan Levine。第
三天的 Keynote Speech 主題為「Toward Human-Level Machine Intelligence」，主講
者為Dr. Lofti Zadeh。下午的主題為「Man on the Loop」，主講者為Dr. Henry 
Hexmoor。此外，在這三天中有近13 個不同的知識強化多代理人系統相關的會議主
題被討論，也是國內目前與未來發展的重點方向。 
 
在此次會議中，我們發表了二篇文章，題目為” A Ubiquitous Teaching Assistant 
Using Knowledge Retrieval and Adaptive Learning Techniques” 與 ”Design and 
Implementation of an Open Sourced Location Service System for the Aglets Mobile 
Agent System”。這二篇論文分別在5 月1 下午的「Multiresolutional Organizations for 
Learning」與「Biologically Inspired Evolving and Self-Organizing Webs」的這二個 
Session 中發表。 
 
二、 與會心得： 
(A) ICACT2006: 
第八屆 IEEE 高等通訊技術國際研討會中集合了世界各國在通訊技術領域的學
者與專家們來進行成果報告及經驗交換，並增進彼此瞭解。透過此次國際會議為我
們提供了與世界各國的先進們一個很好的交流機會以及讓我們瞭解到有關通訊技術
的經驗與發展。這次參與研討會最大的收穫在於不僅能與其他學者與專家們進行研
究上的交流，更重要的是能夠了解目前行動計算領域的現況與未來趨勢，這對於我
們的未來研究有相當大的助益。 
 
 
