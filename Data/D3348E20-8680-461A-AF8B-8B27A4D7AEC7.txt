 1
1 動機與目的 
  隨著網際網路的普及，網路使用人口大幅成
長，網路頻寬也由早期的撥接式網路，直至目前的
寬頻網路，如：ADSL、光纖網路等，以滿足使用
者對資訊使用量的需求。而網際網路的主要應用就
是資訊的傳遞與分享，但由於網路資訊量的快速成
長，以及資訊內容重複的問題，若沒有一個較好的
方法可以提供資訊的搜尋與過濾，所有的使用者將
面臨資訊過量 (information overloading) 的困擾。 
  面對網路上無以計數的資訊（網頁），使用者通
常透過使用搜尋引擎進行資料的搜尋，因此搜尋引
擎本身的好壞直接影響到使用者是否能達成搜尋資
訊的目的。目前市場主流之搜尋引擎使用流程為讓
使用者先輸入關鍵字，接著搜尋引擎利用關鍵字進
行網頁的搜尋，最後透過各家搜尋引擎的排序演算
法 (ranking algorithm) 以條列的方式呈現網頁搜尋
結果，而回傳的搜尋結果依搜尋關鍵字不同，甚至
會高達百萬筆。這種呈現方式對一般個人電腦而
言，由於有方便的介面可以操控（鍵盤及滑鼠），以
及較大的空間（螢幕）可以進行結果的排列，於使
用上並不會有太大的困擾。 
  隨著科技的發達，行動化 (mobility) 成為科技
發展的重點，無線網路及行動裝置（PDA 與智慧型
手機）也隨著成本的降低逐漸普及。對於行動裝置
的使用者來說，資訊搜尋的問題不僅存在，而且更
嚴重。市場上雖然有為了小型螢幕而修改的搜尋引
擎服務，但在沒有方便的介面可以操控、螢幕過小
及處理能力不足的情況下，這種以條列式為主的大
量搜尋結果呈現方式，對行動裝置使用者來說並不
是非常的友善。換言之，行動裝置上並沒有一個有
效、方便的方法能讓使用者在網際網路上進行資訊
的搜尋及瀏覽。本研究針對行動裝置的資訊搜尋問
題提出一個合理的解決方案，以協助行動裝置用戶
方便的使用行動裝置進行網際網路資訊的搜尋。同
時，我們所設計的系統也能讓一般的瀏覽器所使用。 
  本研究有兩個重點工作：網頁分群技術及展示
介面之設計。首先，我們透過分析資料集之內容，
動態的決定數個群集，並將網頁分配至最相似的群
集中，最後替每個群集命名，讓使用者能夠方便辨
識群集之名稱與內容之相關性。接著，依照不同用
戶端裝置的特性，設計出容易操作、互動性高的兩
種使用者介面，讓使用者能夠容易的透過視覺化介
面找到有興趣之群集，進而瀏覽群集之內容，以滿
足快速搜尋需要之資訊的需求。 
2 文獻探討 
  本節將針對相關的文獻進行分析及探討，主要
探討的內容包括行動裝置之特性及設計應用之議
題、搜尋引擎資料之特性及使用者研究，最後則針
對分群方法進行探討。 
2.1 行動裝置之特性及設計應用之議題 
  本研究所定義的行動裝置，為個人數位助理
（PDA）與智慧型手機（Smartphone）。而這類行動
裝置具有下述幾個特性： 
z 螢幕較小： 
行動裝置的螢幕通常較小，以 3.5 吋螢幕的
PDA 為例，若解析度為 240*320 dpi，扣除上
方系統列及下方工具列，以預設之字型大小、
單頁顯示不跨頁面為原則，每一頁最多可顯示
15 行字，若顯示大寫英文字，每行最多顯示
27 個字母；顯示小寫英文字母，每一行最多
顯示 39 個字母；顯示中文字，則每行最多只
能有 19 個中文字。換言之，若使用行動裝置
顯示大量文字之資訊，使用者必須頻繁的拉動
捲軸切換頁面才能夠完整閱讀。 
z 處理能力較弱： 
行動裝置 CPU 的處理能力遠不及個人電腦
CPU 以 GHz 來計算，而是以 MHz 來計算，且
並沒有如同個人電腦 CPU 提供許多的指令集
加速運算。 
z 有限的記憶體空間： 
記憶體相較於個人電腦來說容量相對小很
多，以目前市售的 PDA 通常配備 32MB 或
64MB 的記憶體。 
z 受限的輸入介面： 
行動裝置的使用者輸入介面通常為觸控式螢
幕、數字鍵及功能鍵，只有少數行動裝置會提
供鍵盤供快速輸入。但無論鍵盤提供與否，行
動裝置輸入操作的方便性，都比不上一般個人
電腦使用鍵盤和滑鼠來的便利。 
z 相關性 (Relevance) ： 
能依據使用者查詢產生出數個群集，並將相關
之文件及無關之文件分配到不同的群集中。 
z 可瀏覽的摘要 (Browsable Summaries) ： 
能分配簡明、確切的名稱給群集，以提供使用
者快速的了解群集之內容。在 Kummamuru et 
al. (2004) 提出之一棵好的分群樹的定義中，
認為一棵好的分群樹的節點必須有可預期的
名稱 (Node Label Predictiveness) 。 
z 重疊性 (Overlap) ： 
有些文件本身包含了數個主題，因此好的方法
必須將該文件分配到適當的數個群集之中。 
z 網頁片段容錯性 (Snippet-tolerance) ： 
由於處理全文的時間會讓使用者等待太久，因
此一個好的方法就算只能分析網頁片段，也必
須產生出好的群集。 
z 速度 (Speed) ： 
為了讓使用者減少等待、快速的獲得分群結
果，一個好的分群演算法必須快速的進行分群
的動作。 
z 漸增性 (Incrementality) ： 
為了節省時間，一個好的分群演算法，應該要
能從收到網頁片段後就馬上開始處理。 
  由於最後用於顯示分群結果的設備為行動裝
置，因此除了以上的考量因素之外，還必須考量行
動裝置的特性。依據 2.1 的討論，行動裝置上並不
適合顯示大量資訊，也不太適合需要大量記憶體及
運算的應用，因此本研究提出適用於行動裝置的分
群方法應額外具備下列特性： 
z 可預期的群集數： 
由於小螢幕的特性及處理能力的考量，若一個
分群方法無法預期其產生的群集數量，使用者
利用行動裝置進行瀏覽時，可能會面臨群集過
多不易瀏覽的困擾。 
z 非階層式分群： 
由於行動裝置的處理能力及記憶體有限，同一
時間並不適合處理多量的資訊。假若分群方法
為階層式分群法，意即該分群法一次將所有的
群集階層結構產生，對行動裝置而言，接收及
處理完整的分群結構將使系統負荷增加。因
此，若分群方法一次只針對指定的文件集進行
單一階層的分群，除了能分散分群的處理時
間，以減少行動裝置等待接收資訊的時間外，
單次分群結果的資訊量也較少，相對於階層式
分群法更適合於行動裝置上。 
z 穩定的分群結果： 
若一個分群方法每次分群的結果都不同，則使
用者可能會誤以為原始資料集有大量的變
動，因此，本研究認為一個較好的分群方法在
原始資料集固定的情形下，應具備穩定的分群
結果。 
  在眾多分群演算法中 K-means (Ball & Hall, 
1967) 正好具備上述三項特性，首先 K-means 演算
法需設定最後分出的群集數目 K ，接著指定 K 個
初始事件中心，即可開始對特定的資料集進行分
群，最後該資料集會分成只有一個階層的 K 個群
集，倘若初始事件中心固定，則同一資料集每次分
群的結果將相同，因此本研究選定 K-means 演算
法作為原始分群演算法的依據，並將依據 Zamir & 
Etzioni (1998) 所提出的特性進行修改，以達到本研
究之需求。 
 
3 系統分析與設計 
  本節首先介紹本系統運作的系統情境 (System 
Context) ，接著介紹系統軟體架構，並針對各個元
件的運作方式及演算法進行說明，最後針對行動裝
置介面設計進行說明。 
 
3.1 系統情境 (System Context) 
  本系統運作如圖1所示，主要分為三個部份： 
Crawling Server 、  Clustering Server ， 以 及 
Client 。運作流程為： 
1. Client 送出使用者輸入的查詢關鍵字給 
Clustering Server。 
2. Clustering Server 在收到 Client 的查詢關鍵
字後，將關鍵字轉送給 Crawling Server。 
3. Crawling Server 依據 Clustering Server 送來
的查詢關鍵字向各搜尋引擎進行查詢，擷取其
 3
 Input: baseTerm, featureList 
 
for(length=baseTerm.length-1; length>=MinimumTermLength; length--) 
 for(i=0; i+length<=baseTerm.length; i++) 
  compareTerm = baseTerm.substring(i, i+length) 
  computeTF(compareTerm) 
  if(compareTerm.TF > baseTerm.TF){ 
   potentialFeatures.add(baseTerm.substring(0,i)) 
potentialFeatures.add(compareTerm) 
potentialFeatures.add(baseTerm.substring(i+length)} 
   foreach potentialFeature in potentialFeatures 
    if(!featureMap.contains(potentialFeature)) 
call this Algorithm 
 Exit 
featureList.add(baseTerm)  
圖 4：本系統斷詞演算法虛擬碼 
 
3.2.3 網頁分群 
  在取得各網頁之特徵向量後，即可開始進行分
群的步驟。由於本系統選定 K-means 作為核心演
算法，因此網頁分群的流程共分為四個步驟，第一
步為選取初始事件中心，第二步為分群，第三步為
替群集命名，最後一步為進行排序，最後依據分群
之結果，輸出結果之 XML。 
 
3.2.3.1 事件中心之選取 
  本研究考量到行動裝置上無法顯示大量的資 
訊，經初步實作後發現，分為 7 群時呈現效果較
佳，因此設定 K = 7 。由於 K-means 演算法的特
性，初始事件中心會影響到最後的分群結果，因此
本研究提出了一個方法來選取較合適的初始事件中
心，透過這個方法，相同資料集的分群結果將會一
致，其步驟如下： 
a. 計算網頁之間的相似度，並取其平均值 
為了確保選取的事件中心有一定的涵蓋率，必
須計算網頁與其他所有網頁之間的個別相似
度（本研究相似度的算法為 Cosine ）在計算
完後取其平均值，平均值越高，則代表該網頁
與其他網頁越相像，意即該網頁可能有較高的
涵蓋率；反之，則代表涵蓋率可能較低。 
b. 取高於但最接近門檻值之網頁為第一個事件
中心 
我們取所有網頁相似度平均值的平均為門檻
值。接著，選取高於但最接近門檻值的網頁做
為第一個事件中心，其理由有二：一、高於門
檻值代表有一定的網頁涵蓋率；二、由於最接
近門檻值，其涵蓋率不會造成所有網頁被分到
同一節點。 
c. 取高於門檻值且與所有已決定事件中心最不
相似之網頁為事件中心，直到事件中心個數已
達上限 
為確保各事件中心能涵蓋不同內容之網頁，因
此必須選取所有與已決定事件中心最不相似
之網頁為初始事件中心，而為確保該網頁能有
一定涵蓋率，因此其平均相似度也應高於門檻
值。 
  完成上述步驟後，將可決定 K 個初始事件中
心供分群演算法使用。 
3.2.3.2 分群 
  在決定了初始事件中心後，便開始進行
K-means 分群演算法。由於 K-means 之特性，所
有的網頁會被分配至與其相似度最高的群集中，但
可能該網頁實際上與該群集並不相似，因此，本研
究設定了一分配之門檻值，該網頁與該事件中心相
似度必須高於門檻值才會被分配進去，低於門檻值
之網頁則會被分配到「其他」之群集中，本研究中
門檻值設定為 0.6 。 
  依據上述方式，若  K-means 演算法已經收
斂，必須再進行最後終止條件的檢查，本研究設定
群集內的網頁個數應大於 2 ，若有群集僅有一個網
頁，則移除該事件中心，並設定為尚未收歛，讓演
算法繼續執行，直到符合終止條件。 
 
3.2.3.3 群集命名 
  依據 Zamir & Etzioni (1998) 及 Kummamuru 
et al. (2004) ，一個好的分群結果必須有一個可以讓
使用者清楚該群集內容的名稱。 Jones et al. (2004) 
認為可以利用數個關鍵詞代替網頁搜尋結果之標
題，本研究認為，網頁群集之名稱比網頁搜尋結果
更適合使用數個關鍵詞作為名稱。 
  本研究選取名稱的方法如下，首先計算出該詞
對於該群集之涵蓋率，接著計算該詞之區別率，最
後將涵蓋率與區別率相乘則為該詞對於該群集之代
 5
  
圖 6：使用者介面範例 
(2) 一般網頁瀏覽器的視覺模組 
一 般 網 頁瀏 覽 器 的所 呈 現 的畫 面 採 用
Tree+List view (如圖 7 所示)，上方為查詢關鍵
字輸入框，左下與右下分別以樹狀結構和條列
方式顯示分群結果與各群的詳細內容。 
 
圖 7：搜尋結果列表範例 (Web) 
 
4 情節展示 
  接下來，我們以一實際範例進行說明行動裝置
上的視覺化模組的操作，首先使用者於搜尋列打入
「王建民」並按下 Search 鍵，系統會將「王建民」
送到 Clustering Server ，分群完成後，系統會於視
窗中央顯示節點如圖 8，當使用者點選「球速,聯盟,
中華」此節點時，系統會進行對該節點的聚焦 
(Focus) ，首先將該節點移動至畫面的正中央，接著
顯示四項資訊，包括：該群集的節點數、相關度、
密度及平均排名，如圖 7。 
 
圖 8：聚焦範例 
  此時使用者若點下了「ZoomIn」鍵，該群集便
進行二次分群，此分群結果如圖 9；接著使用者又
對節點「球速,表現」有興趣，進行了點選的動作，
系統再次聚焦於該節點上如圖 9。 
 
圖 9：二次分群及聚焦範例 
  最後，使用者想了解此群集中到底包含哪些網
頁，點選了「List」鍵。於是系統將聚焦之群集中所
包含的搜尋結果列表顯示於畫面上如圖 10，列表中
包含之資訊有排序、標題、網頁片段、來源搜尋引
擎及原始排序。 
 7
