 
中文摘要： 軟體產業流程管理中代表軟體品質與開發管理能力的能力成熟
度整合模型(Capability Maturity Model Integration, 
CMMI)評鑑，是各大軟體廠商專案承接與執行能力的國際級證
明。在階段式的 CMMI 模型等級中，將成熟度分為五級，第一
級(ML1)為初始(Initial)級；第二級(ML2)為管理(Managed)
級；第三級(ML3)為定義級(Defined)；第四級(ML4)為量化管
理(Quantitatively Managed)級；第五級(ML 5)為最佳化
(Optimizing)級。根據美國卡內基美隆大學軟體工程學院
(Software Engineering Institute, SEI)所公佈通過 CMMI 組
織單位的統計數據（截至 2011 年 7 月），台灣僅有 5家軟體
公司或組織通過高階成熟度等級(High maturity level)即 ML4 
與 ML5，而中國大陸有 78 家、印度有 111 家、美國有 63 家、
南韓有 14 家及日本有 13 家通過 ML4 與 ML5 評鑑，顯示台灣軟
體組織與其他國家通過高階成熟度等級的軟體組織數量上顯然
有一段差距。 
究其根本原因在於台灣軟體組織缺乏專業的統計品管人才，無
法正確的使用統計理論與方法來達到 CMMI-ML4 量化專案管理
的目標，且軟體組織在應用製造業之統計製程管制
(statistical process control, SPC)方法時，往往忽略了軟
體產業與製造業有本質上的差異，而不易達成 ML4 量化專案管
理之目標。由於軟體發展是以人為中心的過程，因此每個過程
的產出都牽涉到人而非機器，換言之，軟體發展是人員高度密
集的生產過程，因此必須充分了解軟體發展之各個階段的背景
資訊、所重視之度量(metric)與組織目標，才能正確有效地將
統計方法應用於軟體產業之流程管理中。 
本計畫基於 CMMI 量化管理之精神，整合了統計方法、品質管
理最佳化方法及六標準差，建立了一套完整的流程與制度，包
括：(1)軟體績效指標之制定與資料收集流程之建立；(2)軟體
發展流程之管制圖經濟性設計；(3)發展一套選擇軟體子流程
的最佳化方法；(4)建構流程績效基準與流程績效模式，以作
為軟體組織 CMMI-ML4 量化管理目的而須跨越現有瓶頸的一個
重要參考依據。本計畫對提升軟體產業之軟體品質、流程改善
與組織成熟度，皆有相當重要之幫助。 
本計畫執行期間已完成多項具體貢獻，包括：(1)成功協助台
灣三家軟體組織，利用本計畫所提出之方法，通過 CMMI-ML4
評鑑；(2)調查並彙整目前國內軟體組織在導入 CMMI-ML4 普遍
遭遇到的困難與瓶頸；(3)以統計方法、品質管理與六標準差
為基礎，提出各項量化方法，並整合 CMMI-ML4 各項要求，建
構出一套適用於台灣軟體組織量化管理之流程與制度。 
本計畫之研究成果確實能有效協助台灣軟體組織提升軟體產業
CMMI 的成熟度等級，進而提升台灣軟體產業之軟體品質與軟體
 1 
行政院國家科學委員會補助專題研究計畫 
■ 成 果 報 告   
□ 期中進度報告 
 
 
應用統計理論與統計製程管制方法建構軟體產業 
CMMI Level-4 量化管理流程績效基準及績效預測模型 
 
 
計畫類別：■ 個別型計畫  □ 整合型計畫 
計畫編號：NSC 97  -  2221  -  E  -  009  -  111  -  MY3 
執行期間： 97年 8月 1日 至 100 年 7月 31日 
 
計畫主持人：唐麗英 
共同主持人： 
計畫參與人員：  
 
成果報告類型(依經費核定清單規定繳交)：□精簡報告  ■完整報告 
 
本成果報告包括以下應繳交之附件： 
□赴國外出差或研習心得報告一份 
□赴大陸地區出差或研習心得報告一份 
■出席國際學術會議心得報告及發表之論文各一份 
□國際合作研究計畫國外研究報告書一份 
 
處理方式：除產學合作研究計畫、提升產業技術及人才培育研究計畫、列
管計畫及下列情形者外，得立即公開查詢 
          ■涉及專利或其他智慧財產權，□一年■二年後可公開查詢 
執行單位： 
 
中   華   民   國 100 年 10 月  31  日 
 
 II 
摘要 
軟體產業流程管理中代表軟體品質與開發管理能力的能力成熟度整合模型(Capability 
Maturity Model Integration, CMMI)評鑑，是各大軟體廠商專案承接與執行能力的國際級證明。
在階段式的 CMMI 模型等級中，將成熟度分為五級，第一級(ML1)為初始(Initial)級；第二
級(ML2)為管理(Managed)級；第三級(ML3)為定義級(Defined)；第四級(ML4)為量化管理
(Quantitatively Managed)級；第五級(ML 5)為最佳化(Optimizing)級。根據美國卡內基美隆大
學軟體工程學院(Software Engineering Institute, SEI)所公佈通過 CMMI 組織單位的統計數據
（截至2011年7月），台灣僅有5家軟體公司或組織通過高階成熟度等級(High maturity level)
即 ML4 與 ML5，而中國大陸有 78 家、印度有 111 家、美國有 63 家、南韓有 14 家及日本
有 13 家通過 ML4 與 ML5 評鑑，顯示台灣軟體組織與其他國家通過高階成熟度等級的軟體
組織數量上顯然有一段差距。 
究其根本原因在於台灣軟體組織缺乏專業的統計品管人才，無法正確的使用統計理論
與方法來達到 CMMI-ML4 量化專案管理的目標，且軟體組織在應用製造業之統計製程管制
(statistical process control, SPC)方法時，往往忽略了軟體產業與製造業有本質上的差異，而
不易達成 ML4 量化專案管理之目標。由於軟體發展是以人為中心的過程，因此每個過程的
產出都牽涉到人而非機器，換言之，軟體發展是人員高度密集的生產過程，因此必頇充分
了解軟體發展之各個階段的背景資訊、所重視之度量(metric)與組織目標，才能正確有效地
將統計方法應用於軟體產業之流程管理中。 
本計畫基於 CMMI 量化管理之精神，整合了統計方法、品質管理最佳化方法及六標準
差，建立了一套完整的流程與制度，包括：(1)軟體績效指標之制定與資料收集流程之建立；
(2)軟體發展流程之管制圖經濟性設計；(3)發展一套選擇軟體子流程的最佳化方法；(4)建構
流程績效基準與流程績效模式，以作為軟體組織 CMMI-ML4 量化管理目的而頇跨越現有瓶
頸的一個重要參考依據。本計畫對提升軟體產業之軟體品質、流程改善與組織成熟度，皆
有相當重要之幫助。 
本計畫執行期間已完成多項具體貢獻，包括：(1)成功協助台灣三家軟體組織，利用本
計畫所提出之方法，通過 CMMI-ML4 評鑑；(2)調查並彙整目前國內軟體組織在導入
CMMI-ML4 普遍遭遇到的困難與瓶頸；(3)以統計方法、品質管理與六標準差為基礎，提出
各項量化方法，並整合 CMMI-ML4 各項要求，建構出一套適用於台灣軟體組織量化管理之
流程與制度。 
本計畫之研究成果確實能有效協助台灣軟體組織提升軟體產業 CMMI 的成熟度等級，
進而提升台灣軟體產業之軟體品質與軟體流程改善的腳步，使台灣軟體產業在國際間競爭
力快速提升。本計畫之研究成果已證實不僅對軟體產業有實質幫助，亦具學術創新性，將
於近期陸續發表於國內外學術期刊。 
 
 
關鍵詞：能力成熟度整合模型；軟體品質；軟體流程改善；量化專案管理；流程績效
基準；流程績效模型；統計製程管制；管制圖；預測模型；軟體度量；統計方法 
 1 
一、前言 
2008 年金融風暴過後，受惠於國內外經濟景氣穩定成長、網路基礎建設持續改善、行
動上網普及率逐年升高、App 應用程式的蓬勃發展及雲端運算服務的萌芽，台灣資訊服務
新興市場與新興產品應用之商機大幅增加。台灣資訊服務相關產值（包括系統整合、資訊
委外、商用軟體、資訊安全及嵌入式軟體）於 2009 年已達新台幣 1,442 億元，2010 年將達
1,563 億元，2011 年可達 1,707 億元，每平均維持平均 8~9%的成長率[9]。然而，隨著資訊
產業分工專業化與資訊服務委外風潮愈趨成熟，台灣資訊服務產業的市場界線早已由國內
延伸至國外，在美國、中國大陸與印度等資訊大國的巨大挑戰下，台灣資訊產業勢必面臨
全球化的競爭，對台灣資訊業而言，這是契機也是危機。 
綜觀印度能成功發展軟體產業的主要因素，除了政府長期培養優秀人才外，積極追求
軟體產業品質的提升，也是另一項重要的成功因素。而印度資訊服務大廠發展的主要特色，
係利用多項國際級認證以增加專案承接能力，此亦被視為印度資訊服務大廠的基本競爭能
力。其中，代表軟體品質與流程管理能力的「能力成熟度整合模型(Capability Maturity Model 
Integration, CMMI) 」認證，更是各大廠承接與執行軟體專案能力的國際級背書[8]。有鑑於
此，台灣行政院經建會於 2004 年 9 月 20 日召開之「全國服務業發展會議」中，確立資訊
服務業發展綱領及行動方案，並決議推動「BEST 旗艦計畫（台灣卓越資訊服務輸出計畫）」
與「CMMI 主軸措施（提升資訊軟體品質計畫）」[8]。 
能力成熟度整合模型(Capability Maturity Model Integration, CMMI)是美國卡內基美隆
大學(Carnegie Mellon University)的軟體工程學院(Software Engineering Institute, SEI)，自
1984 年以來整合來自政府、產業與研究機構的資源，發展而成的一套軟體發展流程管理認
證程序。CMMI 流程管理目標，涵蓋了產品品質、服務品質與流程績效，其強調的不僅是
流程發展上成熟度的表徵，更進一步代表了產品品質與顧客滿意度。CMMI 模型之表達方
式可分為連續式(continuous representation)與階段式(staged representation)兩種，在階段式的
CMMI 模型，將成熟度分為五個等級，第一級(ML1)為初始(Initial)級；第二級(ML2)為管理
(Managed)級；第三級(ML3)為定義級(Defined)；第四級(ML4)為量化管理(Quantitatively 
Managed)級；第五級(ML 5)為最佳化(Optimizing)級[22]。 
根據 SEI 於 2011 年 9 月公佈通過 CMMI 評鑑之軟體組織單位的統計數據（如表 1），
中國大陸從 2007 年 1 月的 321 家暴增至 1,557 家，躍居全球之冠，最引人矚目。美國與印
度分別為第二名及第三名，日本與南韓則為第五及第六名，台灣則位居第九名。該報告也
指出，全球各大洲通過 CMMI 的組織單位數量分別為：亞洲 2,660 家、北美洲 1,244 家、
歐洲 580 家、南美洲 295 家、非洲 54 家及大洋洲 13 家；亞洲地區佔全球 55%，顯示全球
資訊軟體發展及代工的市場已逐漸集中於亞洲地區，此地區競爭激烈的程度可見一斑[37]。 
 3 
綜上所述，本計畫之主要目的是針對 CMMI-ML4 評鑑，整合統計品質管理方法與
CMMI 流程管理之精神，提供軟體組織一套達成 CMMI-ML4 特定要求的管理方法。根據本
計畫所提出的方法，可幫助軟體組織瞭解導入 CMMI-ML4 時所需要進行的各項工作及瞭解
這些工作執行的先後順序，並正確使用各項統計及品質管理工具，協助軟體組織解決導入
CMMI-ML4 期間所會遭遇到的困難和縮短導入所花費的時間及成本。本計畫共分三年完成，
本報告是三年的成果報告，內容主要包括以下四點： 
(1) 彙整本計畫執行期間，訪談目前台灣已導入及正要導入 CMMI 高階成熟度的多
家軟體組織之結果。 
(2) 收集中外文獻，探討軟體產業與製造業的異同處以及將品質管理及統計方法應用
於軟體產業的可行性。 
(3) 發展 CMMI-ML4 所適用之量化方法與流程。  
(4) 發展建構 CMMI-ML4「流程績效基準」與「流程績效預測模式」之方法。 
(5) 本計畫之貢獻與建議。 
 
二、文獻探討 
2.1 CMMI 簡介 
美國卡內基美隆大學的軟體工程學院自 1984 年以來整合來自政府、產業、與研究機構
的資源，共同發展出軟體工程及系統工程方面之流程管理的理論，並集結實務經驗，融匯
成為能力成熟度整合模型(Capability Maturity Model Integration, CMMI)，此模型目前已成為
全球在系統工程、軟體工程、整合式產品與流程發展及委外作業等流程管理方面之重要參
考模式。所謂成熟度(maturity)是指流程改善的程度，且在軟體組織事先定義的流程領域
(process area, PA)中，達成所有的目標。而流程領域是一組屬於相同領域而彼此相關的執行
方法，當共同執行這些方法時，可以達成該領域的目標，並獲得重大改善。在 CMMI 中，
目標可分為特定目標(specific goal, SG)與一般目標(generic goal, GG)，特定目標是指用於單
一的流程領域，並強調其唯一的特徵，此特徵用來說明必頇要執行什麼活動才能滿足該流
程領域；而一般目標則是指具有相同敘述的目標，可適用於多個流程領域。以軟體工程領
域為例，CMMI 流程改善的目標，是要提升軟體發展流程的能力，當流程能力提升時，影
響品質與生產力的因素，即可得到控制或消除，使得流程的變異降低，此時軟體開發的產
出，就得以衡量、控制與預測[14]。 
CMMI的表述方式，包含連續式(continuous representation)與階段式(staged representation)
兩種。階段式的 CMMI 模型將流程管理的成熟度分為五個等級，分述如下[5]： 
第一級(ML1)、初始(Initial)級：該階段屬於不確定的工作方式，没有固定流程，無法
提供穩定環境、資源，無法估計人力，無法有效運用，經常超出專案時程及預算，其成功
經驗無法重複，偶而會成功、大都只靠少數有經驗的人才能完成。 
第二級(ML2)、管理(Managed)級：該階段建立了基本的專案管理過程，按照一定的程
 5 
在軟體發展流程中所蒐集的資料量通常很少，可能一星期甚至一個月才能蒐集到一筆
資料，且不同的軟體專案資料特性通常都有相當大的差異，因此在應用 SPC 中之管制圖時
難以針對軟體產業及軟體品質資訊進行合理的分群(subgroup)及建立管制界限(control limit)
或基準(baseline)。 
(4) 軟體產業包含多個一般原因(multiple common causes) 
影響軟體發展流程的因素很多，包括工具、方法、專案類型、開發環境、語言、專案
大小與設計複雜度等。這些因素造成的變異會使得軟體產業在應用管制圖時，管制界限或
基準訂得太寬，以致當有其他可歸屬原因(assignable cause)發生時難以即時偵測出。 
(5) 軟體產業指標(metrics)的表現會隨著不同的發展階段而改變 
測量軟體的指標在軟體發展流程的不同階段會有不同的型態(pattern)，如果在每個階段
都使用相同的指標基準，將可能會導致錯誤的結果。 
(6) 某些軟體測量是主觀的 
由於軟體屬看不見的與複雜的邏輯實體，因此軟體測量可以分為直接測量(direct 
measures)與間接測量(indirect measures)，直接測量得到的數據是客觀的，包括缺失數、成
本等，間接測量的數據則是主觀的，例如：軟體功能不能直接測量而是經過功能點數(function 
point)來量化，且在量化過程中權重(weight)必頇經過人的主觀判斷。即使這些測量專家都
已有明確定義，但仍會造成許多測量上的變異。 
(7) 軟體產業難以找到有效的測量指標 
軟體的品質特性包括可靠性(reliability)、可修改性(modifiability)、易學習性
(understandability)、效能(efficiency)、易使用性(usability)、測詴性(testability)、可移植性
(portability)、研發成本(cost-to-develop)、研發時間(time-to-develop) 、穩健性(robustness)與
顧客滿意度(satisfaction)等。上述品質特性都是在最終產品完成後才能確定，因此在軟體發
展流程中監控的指標並無法代表軟體之真實品質，即就算軟體發展流程中的指標值落在管
制界限內，也不能代表軟體品質一定是好的。此外，上述這些品質特性之間有些是互相衝
突的，例如：可移植性高則效能可能差，因此如何建立有效的測量指標是一個很重要的議
題。 
2.3 管制圖與製程能力分析相關文獻 
2.3.1 修瓦特管制圖簡介 
管製圖(control chart)最早是由美國貝爾實驗室的修瓦特博士(Dr. Walter A. Shewhart)於
1920 年代所發展。管制圖是一種關於品質之圖解紀錄工具，它將產品之品質特性依照時間
順序用圖形來表示製程品質的好壞。典型的管制圖包含中心線、管制上限及管制下限，中
心線用以表示製程處於統計管制時品質特性之平均值，管制上下限則用來表示品質變異的
容許範圍。管制圖可以用來判斷品質變異之顯著性，以偵測製程是否在穩定狀態。 
一般而言，品質發生變異的原因可以分為機遇原因(chance causes)和可歸屬原因
(assignable causes)兩種。任何製程或流程中，不論當初產品設計或是後續的維護有多好，總
會有一些自然的變異存在。對軟體發展流程來說，機遇原因就是一些無法避免的原因，例
如：專案規模、發展環境或軟體種類等，而不是由機遇原因所產生的變異則歸因為非機遇
 7 
從修瓦特博士提出管制圖的概念以來，有許多研究基於統計理論，針對統計指標進行
最佳化管制圖之參數設計，然而在設計的過程中雖然達到了其所要求之目標，卻使得成本
增加許多。有鑑於此，Duncan[23]於 1956 年首先將成本的觀念帶入管制圖之設計中，針對
X-bar 管制圖發展成本模式，並將其用來決定管制圖的三個重要參數，包括抽樣樣本數(n)、
抽樣間隔數(h)以及管制界限係數(k)。Duncan 的研究認為在整個應用管制圖之生產循環當中，
會產生許多的成本，這些成本包括抽樣檢驗成本、計算與繪製管制圖成本、尋找可歸屬原
因所需要之成本、假警報所造成之成本以及製造出缺陷產品之成本。管制圖經濟性設計的
目的就是要在考慮這些成本的情況下，找出最佳化之管制圖參數設定值。在軟體產業方面，
Jalote[27]提出了適用於軟體產業管制圖經濟性設計之成本模式，其目的是為了找出軟體產
業中應使用之最佳管制界限以最小化成本，以符合經濟效益。 
 
2.3.4 製程能力分析 
所謂的製程能力，是指一個製程在固定的生產因素與穩定的管制下所生產產品之品質
能力。通常可將產品特性值之六倍標準差( 6 )當作製程能力之量測值。製造業要評估其製
程能力之好壞，頇先知道其製程是否能滿足規格 (specification) 的能力為何，以作為對內
改善或對外議價時之用。製程能力代表著去除非自然因素後，製程在固定生產與穩定管制
下的品質能力。製程能力分析的主要目的是評估製程實際績效的優劣，並藉由量化的製程
能力指標來表現整個製程優劣的狀況[17]。 
常用的製程能力指標有Cp與Cpk。其中Cp是最常被拿來測量製程是否合乎規格的指標，
Cp 指標計算製程標準差與上下規格界限之差的比值，其公式為 
-
6
p
USL LSL
C

  
（其中 USL 與 LSL 為規格上下界限，  為製程平均， 為製程標準差） 
製程變異並非影響製程優劣的唯一因素，製程平均也會影響最終產品合格的程度，故
當製程平均不處於上下規格界限的中央時，就必頇使用 Cpk 指標，其公式為 
 ,pk pu plC Min C C ； 
-
,
3 3
pu pl
USL LSL
C C
 
 

   
（其中 USL 與 LSL 為規格上下界限，  為製程平均， 為製程標準差）[31] 
2.4 六標準差 
2.4.1 六標準差簡介 
1987 年摩托羅拉公司提出一項嶄新的品質改善方法－六標準差(Six Sigma)。六標準差
定義其製程能力為每百萬個生產單位中，最多只能有 3.4 個不良品，即 3.4 ppm 的不良率。
到 1992 年，摩托羅拉公司已經提升其製程能力達到 5.4 個標準差的水準，約為百萬分之四
十(40 ppm)的不良率，從 1988 年到 1992 年，六標準差為摩托羅拉公司省下 22 億美元，到
1996 年摩托羅拉公司更宣稱透過應用六標準差已經替公司節省 110 億美元[2,12,16]。 
摩托羅拉公司的成功，使得六標準差快速地蔓延到其他公司和產業，全球許多的組織
 9 
織內的什麼活動需要被改進，而 CMMI 可指出這些活動應該如何被實現，這樣的做法類似
CMMI 連續式表述法[4,34]。若軟體組織採取階段式表述法時，Siviy 和 Forrester[35]提出六
標準差的架構和其工具箱是能滿足 CMMI 高階成熟度的要求。Hefner[26]利用 Northrop 
Grumman 的案例證實運用六標準差可加速組織達成 CMMI-ML4 和 ML5 的流程領域，這些
流程領域分別為組織流程績效、量化專案管理、組織創新與推展、原因分析與解決方案。 
2.5 軟體發展流程之最佳化方法 
2.5.1 軟體發展流程最佳化 
在軟體開發與維護的過程中，軟體工程師將各專案的主流程(process)細分為多項子流程
(sub-processes)以利管控，每項子流程均有多種不同的方案(option)可供選擇，用以執行該子
流程之活動。軟體產業要通過 CMMI-ML4 需達成的一個重要目標是選定各子流程的最佳方
案，以達成顧客的需求或專案的目標。目前軟體產業在處理數量化專案管理階段的問題時，
除了使用統計製程管制和預測模型等目前常用的方法外，亦嘗詴應用一些量化方法，例如
蒙地卡羅模擬或隨機最佳化等方法，來找尋各子流程的最佳方案[18]。 
以 Young[39]所提之文獻資料為例，在軟體發展過程中，將一項專案的開發流程細分為
十項子流程來控管，且每個子流程有二至四種不等的方案可供選擇，用以執行該子流程之
活動。因此，軟體發展流程之最佳化之目的即是在十項子流程中各選擇一項執行方案，使
其整體之績效指標能滿足特定的專案目標（如最小化總成本）。 
 
2.5.2 隨機最佳化方法 
近年來，隨機最佳化(Stochastic Optimization Modeling, SOM)問題在工程、管理、經濟、
生物、醫學、農業以及其他領域中之應用相當廣泛。典型的隨機最佳化問題，例如等候系
統中，管理者欲決定最佳平均服務率與最佳服務人數，使得顧客之平均等候時間最小；存
貨系統中，決策者欲決定最佳訂購點與訂購量使得作業成本最小。此類問題的共同特性在
於問題本身涉及不可控的隨機條件，而不是單純地只是確定性最佳化問題。因此確定性最
佳化解法已不適用，必頇利用隨機最佳化方法來求解[24]。 
 
2.5.3 蒙地卡羅模擬方法 
  蒙地卡羅模擬(Monte Carlo simulation)是一種數值方法，將研究問題中不確定因素之機
率分佈函數，利用亂數取樣(Random Sampling)模擬來解決問題。蒙地卡羅模擬法發展與應
用甚早，舉凡所有具有隨機效應的過程，均可以蒙地卡羅方法大量模擬單一事件，再藉由
平均值獲得某設定條件下實際最可能的測量值。蒙地卡羅模擬法是基於大數法則的實證方
法，從標準常態分配中隨機抽取變數來當作因子的變動量，當實驗的次數越多，其平均值
就會越趨近於理論值，可用來作為 CMMI-ML4 中選擇子流程的模擬方法。 
 
 
 
 11 
邁向 CMMI 高階成熟度時，才發現當初所制定的標準流程及各項度量指標不切實
際。 
(3) CMMI 的條文只提供一般性指導原則，只告訴組織在特定流程領域中應達到的目
標和期望組織使用的特定執行方法(practice)，卻缺乏提供一套具體可行的方法讓
組織瞭解如何整合這些特定執行方法來達成各流程領域中的目標。組織執行
CMMI 高階成熟度中的流程領域之複雜度遠高於 CMMI 低階成熟度中的流程領域，
因此組織無法只單純透過條文中的一般性指導原則和現有的專業知識就能找出達
成 CMMI 高階成熟度的具體做法。 
(4) CMMI 高階成熟度中，需要應用許多品質管理的統計方法來降低流程變異，無法
僅靠著專案管理人員或程式設計人員的努力，更需要專業的品質管理或統計技術
之專業人員的共同參與。因此，往往統計專業技術的不足，成了進入高階成熟度
的障礙之一。 
(5) 根據卡內基美濃大學發佈的評鑑準則（the Standard CMMI Assessment Method for 
Process Improvement, SCAMPI），軟體組織取得 ML2 平均需費時 12 個月、ML3
平均費時需 18 到 24 個月，進階到 ML4 和 ML5 時，還需要 33 個月的時間，在這
漫長的導入時間中，組織常因看不到明顯的市場拉力、獲利的改善或因為外部和
內部環境的變遷使得在導入 CMMI 低階成熟度後，就宣告停止導入計畫，不繼續
向 CMMI 高階成熟度進行挑戰。 
綜上可知，若台灣軟體組織想往 CMMI 高階成熟度邁進時，組織內部需要一套可制定
組織的量化目標和系統性地規劃組織達成 CMMI 高階成熟度各項要求的具體做法，再輔以
專業的統計技術協助，即可縮短導入 CMMI 高階成熟度的時間。 
3.1.2 軟體流程績效指標與資料的收集 
本計畫以國內外文獻為基礎，探討軟體發展生命週期中常用流程績效指標之定義，並
訪談國內多家已導入及正要導入 CMMI 高階成熟度之組織單位，將訪談結果所得之流程績
效指標，按其對應之管制圖彙整介紹如附表 1 所示。在附表 1 中，第一欄為構面，係將軟
體產業流程績效分為三大構面，包括專案管理、品質與生產力；第二欄為流程績效指標名
稱，這些指標名稱在不同企業組織與學術用語上可能略有不同，本計畫以文獻中最常使用
的名稱為主；第三欄為階段或子流程名稱，係依據軟體生命週期的階段分為需求、設計、
發展、測詴、維護等五個階段，第四欄則為指標的公式或定義，公式與定義在不同企業組
織與學術用語上可能略有不同，本計畫以文獻中最常使用的定義為主。第五欄與第六欄，
則為本計畫所建議使用的管制圖與抽樣方式，對於軟體產業通過 CMMI-ML4 評鑑應有極大
幫助。 
 
3.1 量化方法 
以下 3.2.1 及 3.2.2 小節分別說明本計畫所提出量化分析之方法。 
 13 
於軟體開發流程是一個連續性的流程，為了瞭解與達成定義階段所制定的流程績效目標，
組織必頇挑選與此目標有相關的流程與度量指標進行量化管理。組織可先設定一些篩選流
程的準則，例如：流程是否能對應到所制定的品質及流程績效目標、流程是否適合量化管
理、流程是否具有穩定的歷史資料等，將有助於組織從ML3時已定義的多組標準流程中，
篩選出適合量化管理的流程，並對應至「CMMI 組織流程績效(OPP)的選定流程(OPP 
SP1.1)」。同時，組織為了能適當洞察定義階段制定的品質與流程績效目標的表現，可從組
織現有的度量指標，選定多個作為組織流程績效分析的度量指標，並對應至「CMMI 組織
流程績效(OPP)的建立流程績效度量(OPP SP1.2)」。組織可參考本研究3.1.2節與附表1，選定
度量指標及欲量化管理的流程，針對選定的度量指標、流程、及任何有助於組織進量化管
理的專案資料，例如：專案天數、專案需求個數、程式行數等，並建立一個資料收集計畫。 
 
(3) 分析(Analyze)階段 
在六標準差中，分析階段的主要工作是透過詳細的問題陳述，詴圖找出問題可能發生
的原因。完成衡量階段收集資料的工作後，組織可透過基本的統計分析計算組織目前的績
效表現，並嘗詴進一步分析造成組織目前的績效表現和所制定的績效目標之落差的原因。
組織可透過六標準差工具中的魚骨圖來協助調查分析，透過腦力激盪的方式，列出魚骨部
位「人、機器、材料、方法、環境」等五大構面的各種可能原因。根據本研究發現，軟體
組織若已具有CMMI ML3的水準，造成組織目前的績效表現與定義階段中所制定的績效目
標有落差的最重要原因是專案尚未使用量化管理的方法來降低流程變異。  
 
(4) 改善(Improve)階段 
在六標準差中，改善階段的主要工作是要對分析階段時所認為的要因(root cause)產生
可行的改善方法。在專案的規劃階段中，依照專案本身需求以及組織所制定的品質與流程
績效目標為基礎制定出專案的品質與流程績效目標，並對應至「CMMI 量化專案管理
(QPM)的設定專案目標(QPM SP1.1)」。以專案目標及專案特性為基礎來調適組織中的標準
流程成為專案的已調適流程，並選定適合運用統計管理的子流程，並對應至「CMMI 量化
專案管理(QPM的組合已調適流程及選定納入統計化管理的子流程(QPM SP1.2-1.3)」。此部
份的工作可利用本研究3.2.4節所提的方法來選則最佳化的軟體發展子流程。 
接著，專案必頇由所選定納入統計化管理的子流程中，選擇適當的度量指標與統計分
析工具，度量指標可參考組織已制定的度量指標來制定，軟體專案人員在選定統計分析工
具上，可嘗詴尋求統計品管專業人員的協助，針對專案特性替專案選擇最適當的統計分析
工具，最常見的工具有SPC中的個別值移動全距管制圖、信賴區間與假說檢定等，並對應
至「CMMI 量化專案管理(QPM)的選定度量及分析技術(SP2.1)」 
在進行專案監控時，可利用管制圖作為監控子流程的工具。管制圖的初始管制界限可
由組織在該子流程上的歷史資料得到，若發現流程績效有異常變化，例如：績效表現超出
所設定的管制界限，專案就必頇採取適當的矯正措施，找出造成流程績效異常變化的原因
進行改善。隨著專案的進行，組織可利用穩定的子流程資料，取代歷史資料所建立的管制
界限，以專案本身的資料重新建立的管制界限進行管制，並對應至「CMMI 量化專案管理
 15 
3.2.4 軟體發展流程之最佳化方法 
本計畫在流程績效模型的建構上，首先考量最佳化軟體發展子流程的問題，現有的隨
機最佳化(Stochastic Optimization Modeling, SOM)方法，需取得大量的數據並透過複雜的模
擬過程才能求解，導致軟體組織需花費很長的時間來蒐集數據以及操作模擬方法。因此，
本計畫使用變異數分析法來比較軟體產業中不同的方案在績效指標上是否有差異，進而透
過最佳化績效指標來找出最佳方案。利用變異數分析方法無需進行複雜的模擬過程，具容
易操作與學習之優勢[11]。本計畫所提出軟體發展流程之最佳化建構流程，如附圖 4 所示。 
3.2.5 流程績效模式之建構流程 
建構流程績效模型的方法是透過穩定的且可靠的歷史資料，以統計迴歸分析(regression 
analysis) 、時間序列(time series)或與可靠度 (reliability)方法來建立預測模型，並比較何種
方法所構建之預測模型較佳。而羅卲斯迴歸分析是類似一般線性迴歸，當資料之依變數為
二元分類時，羅卲斯迴歸不需要任何統計假設，即可構建迴歸方程式來預測資料是屬於二
元分類的哪一類別。 
在時間序列分析與可靠度分析方面，通常是利用時間序列分析法或可靠度成長模型，
本計畫提出另一種適用於軟體產業特性的灰色系統(Grey System)預測方法。灰色系統理論
主要是在系統模型之不明確性及資訊不完整性的情形下，進行關於系統的關聯分析及模型
建構，並藉著預測及決策的方法來探討及了解系統的情況。由於軟體產業的特性，無法取
得大量的同質性資料，往往在收集足夠穩定的流程資料前，專案活動可能已經結束。因此，
利用流程績效中少數已知且穩定的資料（最少僅需要四筆），即可建立一個灰色預測模型
(Grey Model, GM)，用以預測流程績效的動態行為及其趨勢。 
 
 
四、結論與建議 
近年來，台灣政府積極推動「提升資訊軟體品質(CMMI)計畫」，此對台灣軟體組織在
通過 CMMI ML2 與 ML3 成熟度等級方面，已有顯著的效果。但在軟體組織逐步邁向 ML4
之量化管理階段時，普遍會遇到許多瓶頸與困難，例如：如何達到量化管理的目的，尤其
是利用統計方法來提升軟體品質與流程績效成熟度。本計畫從中外文獻研究各種量化管理
方面的議題，並深入訪談目前國內已導入及正要導入 CMMI 高階成熟度的多家軟體組織，
實際了解軟體產業目前所面臨的量化管理與軟體品質之問題，並整理出軟體組織在達到
CMMI 高階成熟度時所面臨的瓶頸與困境。 
本計畫基於CMMI-ML4量化管理之精神，整合了統計方法、品質管理與六標準差方法，
建立一完整的流程與制度，可作為台灣軟體組織跨越 CMMI-ML4 量化管理現有瓶頸的一個
重要參考依據，以有效提升台灣軟體產業之軟體品質、流程改善與組織成熟度，增加台灣
軟體產業之國際競爭力。本計畫之貢獻成果彙整如下： 
 17 
參考文獻 
[1] 王宏仁（2007）。洪肇奎：發展軟體是所有產業升級關鍵。檢自：
http://www.ithome.com.tw/itadm/article.php?c=43258 
[2] 王雪明（2003）。六標準差專案管理。台北市：中華民國品質學會。 
[3] 朱聖偉（2008）。軟體發展流程管制圖之經濟性設計。國立交通大學工業工程與管理系
所碩士論文。 
[4] 洪志偉（2005）。使用六標準差協助導入能力成熟度整合模式。世新大學資訊管理學研
究所碩士論文。 
[5] 高惠堂（2006）。CMMI 簡介。檢自：http://cc.ee.ntu.edu.tw/~farn/courses/SE/CMMI.pdf 
[6] 陳啟揚（2008）。建構軟體發展流程之多變量管制系統。國立交通大學工業工程與管理
系所碩士論文。 
[7] 楊仁宏（2009）。軟體發展流程之變動抽樣間隔管制圖經濟性設計。國立交通大學工業
工程與管理系所碩士論文。 
[8] 資策會, M. I. C.（2006）。2006 資訊工業年鑑。台北市：資訊工業策進會資訊市場情報
中心, 經濟部 ITIS 計畫。 
[9] 資策會, M. I. C.（2010）。2010 資訊服務產業年鑑。台北市：資訊工業策進會資訊市場
情報中心, 經濟部 ITIS 計畫。 
[10] 鄒淑文（2010）。專訪 CMMI 首位主任評鑑員-洪肇奎，經濟日報。 
[11] 廖怡鈞（2009）。軟體發展流程之最佳化。國立交通大學工業工程與管理系所碩士論文。 
[12] 樂為良 Pande, P. S., Neyman, R.P., Cavanagh, R.R.（2002）。六標準差（樂為良譯）：美
商麥格羅〃希爾國際股份有限公司台灣分公司。 
[13] 潘彥志（2010）。整合六標準差與軟體產業 CMMI Level 4 之管理方法。國立交通大學
工業工程與管理學系所碩士論文。 
[14] 鄭炳強（2007）。軟體工程－從實務出發（初版）。台北市：智勝。 
[15] 蕭怡祺（2003）。使用者因素與成熟度層級對組織績效的影響：軟體能力成熟度為例。
國立清華大學科技管理研究所碩士論文。 
[16] 蘇朝墩（2009）。六標準差。新北市：前程文化。 
[17] 張志偉（2001）。以複式模擬法構建製程良率之信賴區間。國立交通大學工業工程與管
理系所碩士論文。 
[18] 黃家煌（2005）。基層員工晉升預估方法之建構。國立交通大學工業工程與管理系所碩
士論文。 
 [19] Baldassarre, T., Boffoli, N., Caivano, D., and Visaggio, G. (2004). Managing Software 
Process Improvement (SPI) through Statistical Process Control (SPC). In Product Focused 
Software Process Improvement (pp. 30-46). 
[20] Brooks, F. P. (1987). No silver bullet: Essence and accidents of software engineering. IEEE 
computer, 20(4), 10-19. 
[21] Caivano, D. (2005). Continuous Software Process Improvement through Statistical Process 
Control. Paper presented at the Software Maintenance and Reengineering, 2005. CSMR 
 19 
Improvement. 13th European Conference, EuroSPI 2006. Proceedings, Joensuu, Finland. 
[39] Young, R., Stoddard, B., and Konrad, M. (2008). Tutorial: If You’re Living the “High Life”, 
You’re Living the Informative Material: Carnegie Mellon University Software Engineering 
Institute. 
 
 
 
 21 
構面 指標名稱(中) 指標名稱(英) 階段 公式/定義 管制圖 抽樣方式 備註 
檢查之缺失密
度 
Defect Density at 
Inspection (DDI) 
需求階段 
設計階段 
發展階段 
DDI 
檢查時發現缺失數
檢查規模大小
 
其中審查規模可為： 
1.功能點數(FP) 
2.千行程式碼(KLOC) 
U Chart 
Z Chart 
X-mR 
每次抽樣大小：n=1 
抽樣頻率：每週、半個
月或依據專案所規定之
審查頻率抽取專案資料 
資料組一併處理。 
測詴之缺失密
度 
Defect Density at Testing 
(DDT) 
測詴階段 
DDT 
測詴時發現缺失數
測詴規模大小
 
其中審查規模可為： 
1.功能點數(FP) 
2.千行程式碼(KLOC) 
U Chart 
Z Chart 
X-mR 
每次抽取一個樣大小
(n=1) 
抽樣頻率：每週、半個
月、依據版本或依據專
案所安排之測詴案例抽
取專案資料 
測詴階段可包括單
元測詴、整合測詴或
驗收測詴，若組織對
不同測詴的標準或
要求相同，則該資料
可視為相同資料組
一併處理。 
軟體交付後缺
失密度 
Post-Delivery Defect 
Density (DDD) 
維護階段 
DDD 
軟體交付後發現缺失數
軟體交付後規模大小
 
其中審查規模可為： 
1.功能點數(FP) 
2.千行程式碼(KLOC) 
U Chart 
Z Chart 
X-mR 
每次抽取一個樣大小
(n=1) 
抽樣頻率：客戶每週、
半個月或組織與客戶約
定期間之頻率抽取專案
資料 
組織可將相同類型
規模之專案資料視
為相同資料組一併
處理。 
生產力 員工生產力 Employee Productivity 
(EP) 
所有階段均
適用 
EP 
員工產出規模
員工投入工時
 
 
X-mR 每次抽取一個樣大小
(n=1) 
抽樣頻率：每月或配合
工時系統之登錄頻率抽
取專案資料 
不同階段衡量員工
產出物有所不同，例
如需求階段為需求
數、規格數或文件
數；發展階段則為千
行程式碼。 
 
 23 
 
附圖 2 多度量指標之「流程績效基準」建構流程圖 [6] 
 
 25 
利用變異數分析，
比較不同方案在績效
指標上是否有差異？
蒐集資料
進行後續檢定
以選出最佳方案
是否通過模型妥當性檢定？
確認各子流程之最佳方案
決定需最佳化之績效指標
及抽樣樣本數
所有方案均為最佳方案
，可加入其他績效指標作
考慮，來選出最佳方案
進行資料轉換
是
是
否
否
 
附圖 4 本計畫所提軟體發展流程之最佳化建構流程 [11] 
 
 
工業工程學界及業界著名專家，共同探討工業界如何面臨後金融危機所產生的問
題。 
    本會議邀請很多知名學者與會演講，每場演講後都有互相交流的時間，交換彼
此之心得。本會議主要的學術活動包括了主題演講、小組討論及口頭報告，本計畫
主持人及一名研究助理參加本次會議，並發表了本計畫之部分研究成果：
「Optimization of Software Development Process」。 
二、與會心得 
    感謝國科會計畫對於這次國際會議研究計畫的經費補助和支持，才能參與此次
國際交流及觀摩的機會。參加會議的目的除了發表本計畫之成果外，也從會議中得
知國際間相關研究的最新資訊。這次會議推動了亞洲工業工程學術界走向國際，與
世界接軌，計畫主持人及參與之研究同學均獲益良多。 
三、建議 
    本次會議 IIE Asian Conference 2011成效良好，非常推薦工業工程領域學者及
研究生共同參與，除能提升本身研究能力外，亦能知道台灣在軟體產業界之競爭對
手，如：中國、印度、韓國等國家其學術發展近況。 
四、攜回資料名稱及內容 
     1.會議報告者論文集 
     2.大會紀念品：筆記型電腦手提包及無線滑鼠 
97 年度專題研究計畫研究成果彙整表 
計畫主持人：唐麗英 計畫編號：97-2221-E-009-111-MY3 
計畫名稱：應用統計理論與統計製程管制方法建構軟體產業 CMMI Level-4 量化管理流程績效基準及績
效預測模型 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 3 3 100%  
研討會論文 0 2 0% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 23 23 100%  
博士生 4 4 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 1 2 50% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
國科會補助專題研究計畫成果報告自評表 
請就研究內容與原計畫相符程度、達成預期目標情況、研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）、是否適
合在學術期刊發表或申請專利、主要發現或其他有關價值等，作一綜合評估。
1. 請就研究內容與原計畫相符程度、達成預期目標情況作一綜合評估 
■達成目標 
□未達成目標（請說明，以 100 字為限） 
□實驗失敗 
□因故實驗中斷 
□其他原因 
說明： 
2. 研究成果在學術期刊發表或申請專利等情形： 
論文：■已發表 □未發表之文稿 □撰寫中 □無 
專利：□已獲得 □申請中 ■無 
技轉：□已技轉 □洽談中 ■無 
其他：（以 100 字為限） 
1.本計畫之成果擬於未來申請專利或技術移轉。 
2.除已發表之會議論文外，其餘研究成果將陸續發表於中外學術期刊。 
 
3. 請依學術成就、技術創新、社會影響等方面，評估研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）（以
500 字為限） 
本計畫基於 CMMI-ML4 量化管理之精神，整合了統計方法、品質管理與六標準差方法，建
立一完整的流程與制度，可作為台灣軟體組織跨越 CMMI-ML4 量化管理現有瓶頸的一個重
要參考依據，以有效提升台灣軟體產業之軟體品質、流程改善與組織成熟度，增加台灣軟
體產業之國際競爭力。本計畫之貢獻成果彙整如下： 
    (1)本計畫執行期間，參與國內多家已導入及正要導入 CMMI 高階成熟度的軟體組織之
實際過程，並成功協助三家軟體組織（鼎升資訊、中冠資訊與工研院資通所）通過 CMMI-ML4
評鑑。 
    (2)本計畫探討並彙整目前國內軟體組織在導入 CMMI-ML4 普遍遭遇到的困難與瓶頸，
並根據其主要原因，提出有效的改善方法與措施。 
    (3)本計畫以統計方法、品質管理與六標準差方法為基礎，提出各項量化方法，並整
合 CMMI-ML4 要求，建構出一套適用於軟體組織的量化管理之流程與制度，可有效提高軟
體組織導入 CMMI-ML4 量化管理之成效。 
    (4)本計畫成果兼具實務與學術價值，透過本計畫之成果，經實際成功案例可知，本
計畫成果能有效協助軟體組織提升軟體產業通過 CMMI-ML4 的成熟度等級，以利我國軟體
產業在國際間更具競爭力。本計畫之研究成果將發表於國內外學術期刊。 
 
