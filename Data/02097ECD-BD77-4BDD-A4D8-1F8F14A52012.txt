 2
corresponding M-XOR circuit. The corresponding masks 
to recover the plain data are manipulated in the correction 
masks generator. Initial masks should come from a 
Random Number Generator (RNG). 
 
The pre-charge logic is used to ensure at most one 
transition at an AND (NAND) gate during a cycle. This 
makes the gates glitch-free. Though the pre-charge method 
has been used in several previous works [9, 12], there are 
two improvements in our work. Firstly, only a subset of 
data is conveyed by dual-rail signals. Specifically, only the 
selection signals of MUX-DSs need them. Secondly, a 
multi-stage pre-charge scheme is exploited to reduce the 
performance penalty caused by pre-charging time [19].  
The logic style has been proven to be DPA-resistant 
[4]. 
 
 
 
Multi-stage PMRML design 
The Fig. 3 (a) shows a 4-satge PMAXL structure. Each 
stage is controlled by separate PE (Pre-charge Enable) 
signals. All stages start pre-charge (PEk=1) simultaneously, 
while disable pre-charge (PEk=1), i.e. start evaluation, at 
different time. The timing diagram of PE signals is shown 
in Fig. 3(b). Let Dk denote the maximal circuit delay 
through the stage k logic, including the delays through pre-
charge circuit (NOR + INV) and AND-XOR circuits. The 
duration of PEk=1, Tk, must meet the following timing 
constraints: 
(1)  ∀ k ≥ 1 , Tk ≥ Dk .   
(2)  ∀ k > 1, Tk ≥ Tk-1 + Dk-1. 
   The condition (1) ensures that all nodes in the stage K 
have returned to zero before starting next evaluation. The 
condition (2) ensures that before starting next evaluation, 
all input signals from stage K-1 have set stable. 
Consequently, we have the minimal cycle time equals T1 + 
D1+….+Dk +  Rt, where Rt is the delay of the register. 
Currently, the partition and timing control are done 
manually. 
 
 
3. AES Hardware Implementation 
The Advanced Encryption Standard is a symmetric block 
cipher. The data block size is fixed to be128 bits, while the 
key length can be 128, 192 or 256 bits. The AES is a 
round-based algorithm. The number of rounds Nr is 10, 12, 
or 14, when the key length is 128, 192 or 256 bits, 
respectively. Each round of AES algorithm performs the 
three transformations: AddRoundKey, SubBytes, and 
ShiftRows. Except the final round, each round also 
performs Mixcolumns. The key used in each round, called 
as round-key, is generated from the initial key by a separate 
key scheduling module. In this paper, only the design for 
encryption with 128-bit key length is considered. The data 
path of the encryption circuit is shown in Fig. 4, which 
does not include the key-generation part. 
The SubBytes transformation (SBOX) involving 
multiplicative inverse in GF(28) is the most complicated 
operation in the AES algorithm. There have been many 
works that used composite field GF((24)2) arithmetic to 
reduce the hardware complexity [10, 13]. We use similar 
logic functions as proposed in these works. Then the 
PMRML is applied to make the circuit DPA-resistant. The 
Fig. 5 shows the PMRML-based SBOX implementation, 
which is split into 3 stages. On the left-hand part, the 
circuit is for correction-mask generation. The right-hand 
part is the data path for the masked data. The δ(x) means 
the mapping function from a ∈ GF(28) to a polynomial  
(b) 
precharge evaluation 
PE1
PE2
PE3
PE4
RE
RE PE1 PE2 PE3 
PE4
Reg PMRML PMRML 
 
PMRML
 
PMRML 
 
(a) 
Figure 3: (a) A multi-stage PMRML network 
and (b) the timing diagram of its PE signals. 
 Pre-charge 
 logic 
a 
PE 
 Correction masks generation
SR AND  
(MUX-DS) 
XOR 
 
SR 
SR: Single Rail 
Dual rail 
a 
a 
Figure 1: One stage PMRML. 
gm=(c ⋅ d)⊕ mg 
mf = mc♁me 
mf’ 
 dm 
md 
S1 
D0 
D1 
D2 
D3 
4x1 
MUX-DS 
S1
 S0 S0 
cm 
mf 
z
cm’ 
mg=mdme’+(dmme) 
Figure 2: A masked implementation of an AND 
gate ( g= c⋅d ), where  gm =z= (G0’⋅G1’⋅G2’⋅G3’)’, in 
that G0=mdcm’mf’, G1=dmcm’mf, G2=dmcmmf’ and 
G3=mdcmmf.   
 4
environment. The proposed design has favorable 
experimental results in both area and performance 
comparison.   
The whole PMRML AES encryption module is split 
into four stages. After timing analysis, the circuit delays 
through the four stages are found to have the ratio P+D1: 
P+D2: P+D3: P+D4= 2: 2: 3: 5.  
 
Table 1: Area of the AES encryption IP. 
Block  name Gate Count Percentage 
Interface 3612 9.5%
PRNG 1528 4%
AES (unprotected) 10400 27.5%
AES (PMRML) 20675 54.6
Others 1671 4.4%
Total 37886 100%
 
Table 2: Comparison between the PMRML design 
and unprotected design. 
 Area  
(gate count) 
Performance 
(Mbps) 
AES (unprotected) 10.1k 145  
AES (PMRML) 20.1 k+  85 
PMRML/unprotected 2 0.58 
+ Does not include RNG circuit. 
Table 3: Comparison of various DPA-resistant 
designs to the unprotected one. 
 Area Performance 
Unprotected  1 1 
M-AND [13]* 1.84 0.93 
WDDL [12]+ 3 0.26 
MDPL [9] + 4.54 0.58 
PMRML 2 0.58 
*Does not deal with both glitch and DTS problems. 
+ Does not deal with the DTS problem. 
 
We have used the PMRML design style to implement 
a DPA-resistant AES encryption hardware module. The 
PMRML design can overcome the glitch and Dissipation 
Timing Skew (DTS) problems, which both significantly 
reduce the DPA-resistance. The PMRML-based AES 
encryption module was implemented with TSMC 0.18um 
standard cell libraries. The post-layout results have shown 
the efficiency and effectiveness of the PMRML design 
methodology. We have published the result from this 
project in [4] 
 
5. References  
[1] M. Davio, J.P. Deschamps, and A. Thayse, “Discrete 
and Switching Functions,” McGraw-Hill Int’l, 1978. 
[2] J. D. Golić and R. Menicocci, “Universal Masking 
on Logic Gate Level,” Electronics Letters 40(9), pp. 
526–527, 2004. 
[3] J. D. Golic and C. Tymen: Multiplicative Masking 
and Power Analysis of AES, CHES002, LNCS, vol. 
2523, pp. 198-212, 2003.  
[4] K. J. Lin, S. C. Fang, S. H. Yang and C. C. Lo, 
“Overcoming Glitches and Dissipation Timing 
Skews in Design of DPA-Resistant Cryptographic 
Hardware,” IEEE/ACM DATE, pp. 1265-1270, 2007. 
[5] P. Kocher, J. Jaffe, and B. Jun, “Differential Power 
Analysis,” Advances in Cryptology – CRYPTO ’99, 
LNCS, vol. 1666, pp. 388-397, 1999. 
[6] K. J. Kulikowski, M. Su, A. B. Smirnov, A. Taubin, 
M. G. Karpovsky and D. MacDonald, “Delay 
Insensitive Encoding and Power Analysis: A 
Balancing Act,” ASYNC 2005, pp. 116-125, 2005. 
[7] S. Mangard, T. Popp, and B. Gammel, “Side-
Channel Leakage of Masked CMOS Gates”, CT-RSA, 
LNCS 3376, pp. 351-365, 2005. 
[8] T. S. Messerges, E. A. Dabbish, and R. H. Sloan, 
“Examining smart-card security under the thread of 
power analysis attacks,” IEEE TC, vol. 51, no. 5, pp. 
541-552, 2002. 
[9] T. Popp and S. Mangard, “Masked Dual-Rail Pre-
charge Logic: DPA-Resistance Without Routing 
Constraints,” CHES 2005, pp.172-186, 2005. 
[10] A. Rudra, P. K. Dubey, C. S. Jutla, V. Kumar, J. R. 
Rao, and P. Rohatgi, “Efficient Rijndael Encryption 
Implementation with Composite Field Arithmetic,” 
CHES 2001, LNCS, vol. 2162 , pp. 171-184, 2001.. 
[11] B. Sunar, W. J. Martin and D. R. Stinson, “A 
Provably Secure True Random Number generator 
with Built-In Tolerance to Active Attacks,” pp. 109-
119, 2007. 
[12] K. Tiri, D. Hwang, A. Hodjat, B. Lai, S. Yang, P. 
Schaumont, and I. Verbauwhede, “A Side-Channel 
Leakage Free Coprocessor IC in 0.18μm CMOS for 
Embedded AES-based Cryptographic and Biometric 
Processing”, DAC, June 2005. 
[13] E. Trichina and T. Korkishko, “Secure AES 
Hardware Module for Resource Constrained 
Devices,” ESAS 2004, LNCS, vol. 3313, pp. 215-229, 
2005.  
[14] E. Trichina, D. D. Seta, and L. Germani: Simplified 
Adaptive Multiplicative Masking for AES, CHES 
2002, LNCS, vol. 2523 , pp. 187-197, 2003. 
 
Overcoming Glitches and Dissipation Timing Skews in Design of DPA-
Resistant Cryptographic Hardware 
 
 
Kuan Jen Lin+, Shan Chien Fang, Shih Hsien Yang and Cheng Chia Lo 
Department of Electronic Engineering, Fu Jen Catholic University, Taiwan 
+kjlin @mail.fju.edu.tw 
 
 
Abstract 
Cryptographic embedded systems are vulnerable to 
Differential Power Analysis (DPA) attacks. In this 
paper, we propose a logic design style, called as Pre-
charge Masked Reed-Muller Logic (PMRML) to 
overcome the glitch and Dissipation Timing Skew (DTS) 
problems in design of DPA-resistant cryptographic 
hardware. Both problems can significantly reduce the 
DPA-resistance. To our knowledge, the DTS problem 
and its countermeasure have not been reported. The 
PMRML design can be fully realized using common 
CMOS standard cell libraries. Furthermore, it can be 
used to implement universal functions since any 
Boolean function can be represented as the Reed-
Muller form. An AES encryption module was 
implemented with multi-stage PMRML. The results 
show the efficiency and effectiveness of the PMRML 
design methodology. 
 
1. Introduction 
In 1998, Kocher et al. first reported that the power 
consumption of a smart card could reveal the secret key 
of the cryptographic algorithm [6]. The attack, called as 
Differential Power Analysis (DPA), has been 
considered as the most dangerous attack to the security 
of cryptographic embedded systems [9]. A recent report 
stated that the key of an unprotected AES coprocessor 
can be found in less than three minutes [14]. 
    A lot of research has been conducted on 
corresponding countermeasures against the DPA attack. 
Most works can be broadly categorized into two 
classes: (1) equalizing power consumption or (2) 
randomizing power consumption. The first approach 
attempts to make the power consumption constant 
regardless of what intermediate result being produced. 
A straightforward method is to use the dual rail logic 
[7, 10, 12, 14], that represents a data bit by a pair of 
complementary wires and takes the same number of 
transitions regardless of what data value it transfers. 
The logic style is expected to consume constant power 
for any kind of input transitions. However, it can only 
be achieved if the complementary wires have the same 
capacitive load. The requirement is hard to meet in 
standard semi-custom design environment. Balanced 
cell design [7] and differential routing technique [14] 
are proposed to treat the problem. As the transistor size 
and wiring width continuously shrink, it becomes more 
difficult to apply such techniques. Besides, current 
results show that these approaches needs area at least 3 
times larger than the standard CMOS implementation 
of an unprotected AES design [14]. 
The second countermeasure class aims at 
randomizing the intermediate results occurring during 
the computation of the cryptographic algorithm. A 
common approach is to use masking, which makes the 
output of a circuit unit unpredictable from the leaked 
information. Early masking approaches consider an 
arithmetic operation such as addition and multiplication 
as an atomic gate [1, 5, 16]. It is more realistic to 
provide protection on the basic gate level. A complete 
design of AES algorithm with masking at gate-level 
was presented in [15]. Universal masking for random 
logic was developed in [4]. However, these masking 
approaches were shown to be unable to resist DPA 
attacks in the presence of glitches [8, 13]. To overcome 
the glitch problem, the MDPL (Masking Dual-Rail Pre-
charge Logic) design style was proposed [10]. 
Compared to an unprotected design, the area is 
increased by 350% and the speed is decreased by 42% 
in the MDPL design. The RSL (Random Switching 
Logic) [13] exploits timing control to suppress possible 
glitches. However, it needs to build a new standard cell 
library. 
In this paper, we propose a logic design style, 
called as Pre-charge Masked Reed-Muller Logic 
(PMRML) to overcome the glitch and Dissipation 
Timing Skew (DTS) problems in design of DPA-
resistant cryptographic hardware. To our knowledge, 
the DTS problem and its countermeasure have not been 
978-3-9810801-2-4/DATE07 © 2007 EDAA 
 
arriving at the gate. This causes that the power 
consumption is correlated with the unmasked inputs. 
This offers a possibility to DPA attacks to find the key. 
The DPA-resistance is reduced. 
To overcome the glitch problem, the MDPL [10] 
design style uses the return-to-zero signalling (achieved 
by pre-charging) to allow certain gates such as an AND 
gate having at most one transition during a clock cycle. 
In the MDPL, the dual rail majority-gate that 
implements a 2-input masked AND function is 
considered as an atomic gate.  
Definition 2 (Glitch-safe): A masked circuit Gm is 
glitch-safe if it is glitch-free or a fully masked 
implementation of the original circuit G. 
The second property in the above definition 
ensures that if an input vector to Gm can cause a glitch, 
it puts the same impact on each of input vector to G. 
Hence, the glitch effect is equally distributed to both 
sets Tb=1 and Tb=0, thus counterbalancing with each 
other.  
Table 1: DTS problem occurs in MDPL AND gate. 
c．d m cmdm  
(m→ cm →dm)   
Masked Output 
(c．d) ⊕m 
000 →000 →000 →000 0 →0 →0 →0 00 
000 →100 →110 →111 0 →0 →1 →1 
000 →000 →000 →001 0 →0 →0 →0 01 
000 →100 →110 →110 0 →0 →1 →1 
000 →000 →010 →010 0 →0 →0 →0 10 
000 →100 →100 →101 0 →0 →0 →1 
000 →000 →010 →011 0 →0 →0 →1 11 
000 →100 →100 →100 0 →0 →0 →0 
 
2.4 Dissipation Timing Skews (DTS) 
So far, we assume that the power dissipation of the 
attacked circuit can be observed within the interval ∆t. 
However, if the arriving times of inputs vary largely 
and the time when the power dissipates for Tb=1 and 
Tb=0 is significantly different, this will cause that the 
DMt (b) ≠ 0 even if  the amounts of power dissipated 
during a cycle for the two sets Tb=1 and Tb=0 are 
identical. In the remainder of this document, we refer to 
this phenomenon as Dissipation Timing Skews (DTS). It 
can cause that the power consumption is correlated with 
the unmasked inputs. Let us use the 2-input MDPL-
AND (i.e. a 3-input majority) gate to show the DTS 
effect. The three inputs to the gate are cm =c ⊕ m, dm 
=d ⊕ m and mask m. Suppose that in the evaluation 
phase the inputs arrive the gate according to the order 
m → cm →dm. As shown in Table 1, the output 
transition (0→1) occurs at different moment of time for 
c⋅d=0 and c⋅d=1. If the DTS is large enough, it offers a 
possibility to DPA attacks to find the key. The use of 
MUX to realize masked circuits for AND (OR) gates in 
[4] also incur the same problem. 
Given an input-arriving order: i1→i2→…→ip, an 
output transition is denoted as tk if it is activated after 
that ik arrives. We give the following definition: 
Definition 3 (DTS-safe): A masked circuit Gm is 
DTS safe if (1) it is a fully masked implementation of 
the original circuit G or (2) for each of possible input-
arriving orders, the average number of tk for I0 is equal 
to that for I1, where k=1,…, p.  
 In the example shown in Table 1, for the order m 
→ cm →dm, we have t1=0, t2=1/3 and t3=1/6 for I0 and 
t1=0, t2=0 and t3=1/2 for I1.  Hence, it is not DTS-safe. 
For a fully masked implementation, if an input vector to 
Gm can cause a DTS problem, it puts the same impact 
on each of input vector to G. Hence, the DTS effect is 
equally distributed to I0 and I1, thus counterbalancing 
with each other. The second property also ensures the 
counterbalance. The M-XOR has the following 
property.  
Theorem 1: A k-input M-XOR gate is glitch-safe 
and DTS-safe. 
We define the DPA-resistant circuit as follows: 
Definition 4 (DPA-Resistant): A masked circuit 
implementation Gm of a circuit G is DPA-resistant if it 
is glitch-safe and DTS-safe.  
 
3. Pre-charge Masked Reed-Muller Logic 
(PMRML) 
All the Boolean functions can be represented as Fixed 
Polarity Reed-Muller (FPRM) form [2], in that a 
function is the XOR sum of cubes (ANDs) in which 
every variable has either positive or negative polarity. 
In the PMRML, a combinational logic function is 
realized as the FPRM form, as shown in Fig. 2. 
Currently, only 2-input AND gates are used in the 
AND-part. To provide DPA resistance, each AND gate 
is one-to-one replaced with its masked implementation, 
a 4X1 MUX with Dual-rail Selection signals (MUX-
DS). We will show that the masked circuit is glitch-safe 
and DTS-safe under the scheme. In the XOR-part, each 
XOR gate is one-to-one replaced with the 
corresponding M-XOR circuit. The corresponding 
masks to recover the plain data are manipulated in the 
correction masks generator. Initial masks should come 
from a Random Number Generator (RNG), which is 
assumed to already be available to our design.  
The pre-charge logic is used to ensure at most one 
transition at an AND (NAND) gate during a cycle. This 
makes the gates glitch-free. Though the pre-charge 
method has been used in several previous works [10, 
14], there are two improvements in our work. Firstly, 
conservative wire load model under UMC 0.18um 
technology. Compared to the unprotected design, as 
shown in Table 2, the area is increased by 100% and 
the speed is decreased by 29% in the PMRML design. 
Comparison with other approaches is shown in Table 3. 
Because the technology and the architecture (e.g. the 
number of SBOXs) used in those approaches vary, the 
comparison of the gate count and the performance can 
not fairly indicate the advantages. Therefore, we show 
the ratio of those DPA-resistant designs to the 
unprotected one in each own design environment. 
Although pre-charge scheme is used in the PMAXL 
design, the multi-stage schemes make the speed not 
halved.   
 
5. Conclusion 
In this paper, we have proposed the PMRML 
design style to overcome the glitch and Dissipation 
Timing Skew (DTS) problems in design of DPA-
resistant cryptographic hardware. Both problems can 
significantly reduce the DPA-resistance. To our 
knowledge, the DTS problem and its countermeasure 
have not been reported. The PMRML design can be 
fully realized using common CMOS standard cell 
libraries. Furthermore, a multi-stage pre-charge scheme 
is exploited to reduce the performance penalty caused 
by pre-charging time. The PMRML can be used to 
implement universal functions since any Boolean 
function can be represented as the Reed-Muller form. 
An AES encryption module was implemented with the 
PMRML. The results have shown the efficiency and 
effectiveness of the PMRML design methodology. 
 
 
Table 2: Comparison between the PMRML 
design and unprotected design. 
 Area  
(gate count) 
Performance* 
(Mbps) 
unprotected 10.1k 156  
PMRML 20.1 k+  111 
PMRML/unprotected 2 0.71 
+ Does not include RNG circuit. 
* Mbps = 128 / (cycle time x 41) 
Table 3: Comparison of area (performance) ratio of 
various DPA-resistant designs to the 
unprotectedone. 
 Area Performance  
Unprotected  1 1 
M-AND [15]* 1.84 0.93 
WDDL [14]+ 3 0.26 
MDPL [10] + 4.54 0.58 
PMRML 2 0.71 
*Does not deal with both glitch and DTS problems. 
+ Does not deal with the DTS problem. 
 
6. Acknowledgments 
The authors would like to thank the anonymous 
reviewers for their comments to improve the quality of 
this paper. This work was supported by Taiwan NSC 
under Contract No. NSC 95-2221-E-030-023. 
 
7. References  
[1] M. L. Akkar and C. Giraud, “An Implementation of 
DES and AES, Secure against Some Attacks,” 
ShiftRows
Shift Reg
SubBytes  
(SBox *4)
MixColumns
Reg
ShiftRows 
Shift Reg 
MixColumns 
Reg 
roundkey +
+
Output Data 
+
text in Random 
masks 
Figure 6: The PMRML design of the AES 
encryption module using 4 SBoxes. 
Figure 5: The SBOX implementation. 
δ-1 (x) 
Affine transformation 
δ(x) δ(x) 
X2λ× 
X-1 
×× 
δ-1 (x) 
Affine transformation
X2λ 
+ me3 
me2 
me1 
+ 
+ 
+ 
+ 
+ 
+ 
Masked Data 
Correction Mask 
Stage Partition  
Masked data Correction masks 
