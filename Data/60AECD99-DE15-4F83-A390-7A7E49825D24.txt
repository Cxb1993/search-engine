ii
中文摘要
第 4 代行動通訊系統將會包含各式各樣的異質無線網路技術，這些異質無線
網路將會整合在全 IP 網路環境下，利用共通的 IP 層實現行動管理、認證、信令
控制，提供一個無縫式、無所不在的通訊架構，讓使用者可以隨時隨地傳送語音、
視訊與高速上網。為了提供上述的的連線環境，行動管理、服務品質、安全性的
議題需要有妥善的解決方案。在第 4 代行動通訊的系統架構逐漸成形之際，
IEEE802.3 以太網路的技術也挾其成本優勢漸漸的拓展其應用範圍至都會網路及
廣域網路層級。在無線接取的技術方面，IEEE802.11 WLAN 已廣為使用者接受，
更高速更遠的 IEEE802.16 和 IEEE802.20 在廠商的大力推廣及標準制定的逐漸定
案，也形成一股風潮，使得 IEEE802 家族成為 IP 之外另一個具有聚焦功能的技
術。例如近年來行動以太網路的想法被提出，配合廣域以太網路的架構，使得第
二層 terminal mobility 的解決方案適用到大範圍的網路，以及在廣域網路提供如
區域網路般的 VPN 服務，亦即所謂的虛擬私有區域網路(VPLS)，都是 IEEE 第
二層的技術更加普及的實例。在本計畫，我們研究延伸 VPLS 到進接網路來實現
行動 VPN 以及探討無線網狀網路的服務品質保證的問題。
關鍵詞：虛擬私有區域網路、多重協定標籤交換、服務品質、虛擬私有網路
iv
目錄
中文摘要………………………………………………………………….…………i
Abstract………………………………………………………………………………ii
第 1 章 緣由與目的..........................................................................................1
第 2 章 成果與討論..........................................................................................9
2.1 支援 VPLS 之 MPLS 路由器 .....................................................................9
2.1.1 完整系統架構概觀..........................................................................9
2.2 自動搜尋機制............................................................................................11
2.2.1 延伸 Kompella VPLS 自動搜尋機制與 PW 信令協定 ...............11
2.2.2 設計考量........................................................................................15
2.2.3 邊界閘道器協定之延伸................................................................17
2.2.4 功能的驗證....................................................................................22
2.3 WMN QoS .................................................................................................27
2.3.1 NS2 模擬平台的介紹 ...................................................................28
2.3.2 TCP 效能公平性機制 ...................................................................29
2.3.3 Congestion window size 的觀察 ...................................................33
2.3.4 Buffer 長度的觀察 ........................................................................35
2.3.5 Advertised Window 的影響 ..........................................................37
2.3.6 Delayed ACK.................................................................................40
2.3.7 模擬結果與分析............................................................................41
第 3 章 成果自評............................................................................................49
參考文獻…………………………………………………………………………….50
vi
圖 2.28 新增 Delayed ack 機制後，三條 flows throughput 的結果 ........41
圖 2.29 每條 flow throughput 單位時間變化的結果................................43
圖 2.30 平均 throughput 的結果 ................................................................44
圖 2.31 RTT 的結果 ...................................................................................44
圖 2.32 cwnd 的結果 ..................................................................................45
圖 2.33 五個節點及四條 flows 時的模擬結果.........................................45
圖 2.34 五個節點及四條 flows 時 RTT 的模擬結果 ...............................46
圖 2.35 六個節點及五條 flows 時的模擬結果.........................................46
圖 2.36 六個節點及五條 flows 時 RTT 的模擬結果 ...............................47
圖 2.37 Data rate 為 2 Mbps 時， throughput 的模擬結果 .....................48
圖 2.38 Data rate 為 2 Mbps 時，RTT 的模擬結果..................................48
1第1章 緣由與目的
第 3 代(3G)蜂巢式通訊系統已正式進入商業營運，而下一代的無線通訊系統
(Beyond 3G or 4G)的規劃與研發也已經展開。B3G 或 4G 行動通訊系統將會包含
各式各樣的異質無線網路技術，這些技術可以依其涵蓋範圍歸類為三個 Levels：
1. Personal Level：如 personal area networks、body area networks；2. Local/Home
Level：WLAN、UWB、ad hoc networks；3. Cellular Level：3G 技術(如 UMTS)、
WiMAX 和 Satellite 等[1]。在第 4 代行動通訊網路，這些異質無線網路將會整
合在 All IP 網路環境下，利用共通的 IP 層實現行動管理(mobility management)、
認證(authentication)、信令控制(signaling control)，提供一個無縫式(seamless)、無
所不在(ubiquitous)的通訊架構，讓使用者可以隨時隨地傳送語音、視訊與高速上
網。
為了提供上述的一個「Anytime , Anywhere , Any media」的連線環境，首先
要提升無線最後ㄧ哩(Last Mile)的頻寬至數十 Mbps。其次，Mobility Management
的議題，如 access、handoff、location coordination 需要被解決。接下來，需考慮
Quality of Service (QoS) 的 議 題 ， 如 resource allocation 、 resource
coordination/provisioning 等。最後，security 和 network failure protection 的考量是
一個優質通訊環境不可或缺的[2]。
在第 4 代行動通訊的系統架構逐漸成形之際，IEEE802.3 以太網路(Ethernet)
的技術也挾其成本優勢漸漸的拓展其應用範圍至都會網路(MAN)及廣域網路
(WAN)層級。在無線接取(wireless access)的技術方面，IEEE802.11 WLAN 已廣為
使用者接受，其廣泛建置已對 3G 系統造成威脅，更高速更遠的 IEEE802.16
(WiMAX) 和 IEEE802.20 (MBWA)在廠商的大力推廣及標準制定的逐漸定案，也
形成一股風潮，使得 IEEE802 家族成為 IP 之外另一個具有聚焦功能的技術[3]。
舉例來說，早先的All IP 網路採用Mobile IP 機制使得主機(host)移至 foreign
network 後繼續能與外界連線(terminal mobility)。由於 Mobile IP 有許多效能上的
3範疇，IEEE802.3 Ethernet 挾其低成本、易於使用、具有 many-to-many 的連線機
制等優點，佔有邊緣端(edge)的絕對優勢。因此設備製造廠商與網路服務業者便
想到在廣域網路提供如區域網路般的 VPN 服務，這就是所謂的 Virtual Private
LAN Service (VPLS)。
VPLS 利用 MPLS 來達成 Layer 2 VPN 服務[10-15]。MPLS (Multi-Protocol
label Switching) 結合 IP 的彈性與 ATM 的效能，能向上包容多種 Layer 3 protocols
與向下支援不同的 Layer 2 protocols，是當前熱門的網路技術。MPLS 當初是為
提供 Traffic Engineering 而被提出，但最近幾年利用 MPLS 來提供 VPN (Virtual
Private Network) Service 反而得到更多的注意。Layer 2 MPLS Virtual Private
Network 大致可以分為兩大類，Virtual Private Wire Service （VPWS）以及 Virtual
Private LAN Service (VPLS)，兩者的差異在於 VPWS 提供的是一種 point-to-point
的服務，而 VPLS 則是在一個 Wide Area Network 提供 emulated LAN 的服務，也
就是讓 customer 感覺他是利用 LAN 的方式跨越 WAN 與他的 VPN 成員通訊。
VPWS 主要是由 CE、VPWS-PE 以及 P 這三個裝置所組成，其分佈如圖 1.1
所示，PE 之間會經由 P 建立所需的 tunnel/pseudo wire，而 customer 就可以經由
CE 把資料透過正確的 CE-PE 之間的連線送到 PE，PE 再根據接收到資料的連線
決定該由那個 tunnel/pseudo wire 把資料送到正確的目的成員，所以 VPWS 是提
供由 CE 到 CE 的 point-to-point 服務，而 PE 所扮演的是一個 virtual circuit switch
的角色，而它的 forwarding decision 並不是根據所接收到的資料內容，而是利用
接收資料的連線來做 forwarding 的決定。
圖 1.1 VPWS reference model.
5的處理。
由 Tunnel Label 所構成的 LSP 我們稱之為 Tunnel LSP。相對地，由 VC Label
所構成的 LSP 我們則稱之為 VC LSP。在邏輯上我們則可以看成一條大的 Tunnel
內包含一條小的 Tunnel，而資料流則是在這條小的 Tunnel 上流動。值得注意的
是，不同的 VC LSP 可以利用同一條 Tunnel LSP 來傳送資料，也就是一條大的
Tunnel（Tunnel LSP）可以同時包含許多小的 Tunnel（VC LSP），不同 VPN 的資
料流則分別利用不同的小 Tunnel 在網路上旅行，而這正也是 Tunnel LSP 的主要
目的，“匯集不同 VPN 的資料流於同樣路徑上”。
IP/MPLS
NetworkVPN A
VPN APE PECE
CE
Encapsulated Layer 2 frameVC labelTunnel label
MPLS Tunnel
Encapsulated Layer 2 frameVC label
VPN BCE
Which user’s VPN
圖 1.3 Martini LSP tunnel.
隨著行動通訊的日漸普及，目前 VPN 的應用也朝 Mobile VPN 的方向延伸。
迄今，有越來越多的工作者是屬於行動工作者，平均每周會有一天以上不在公司
內部。雖然越來越多的時間不在辦公桌前，但仍需完成同樣多的工作，像執法人
員，軍人，公司業務人員和司機都是 Mobile VPN 典型的例子。為了確保準時完
成工作，更需隨時取得相關最新的關鍵資訊。Mobile VPN 能讓廣大的行動工作
者在任何時間、任何地點，安全地透過網際網路存取企業內部資訊，這樣除了能
大幅降低存取成本、還能改善服務品質與提昇效率，增加競爭優勢。遠端存取已
漸漸成為商業上運用的必備工具，在競爭激烈的商場中，遠端存取提高了企業員
工的生產力，增進了便利性，進而保持競爭優勢[16]。
7為一個特殊的隨機式無線網路，這類網路的特色在於不需要固定的基礎架構
(Infrastructure-less)，網路上的節點透過廣播(Broadcast)的方式在一定的範圍內可
與其他的節點進行通訊或者資料的傳輸，其所送出的封包會被適當的轉送到目的
地。如果目的地節點(Destination node)不在來源節點(Source node)的通訊範圍內，
來源節點可以透過網路中其他的節點來協助轉送(Forward)資料，這種由來源節點
傳送資料到目的地節點的過程中，透過其他節點來協助傳送的方式稱為多重跳躍
(Multi-hop)。在這網路下，存在著一個或數個節點，具有連結到網際網路的能力，
擔任閘道器的角色，負責在有線/無線網路之間轉送封包，形成一個樹樁網路(Stub
Network)。一個行動來源節點可以透過具有連結網際網路能力的節點，連結到網
際網路。
WMN 將在 personal、local、campus、metropolitan area networks 上提供無線
服務去滿足各種的應用。儘管在發展 WMN 上有許多進步，在各個協定層中仍然
存在許多值得研究的問題需要被解決，才能實現出完整的 WMN 部署。我們期望
WMNs 有以下三種特性：[17]
 Multihop Wireless Network：發展 WMN 的目標是為了擴大現有無線網
路的涵蓋範圍以及提供 non-line-of-sight (NLOS)的連線。為了滿足這些
需求，多重跳躍網狀網路架構成為必要的考量，才能達到更好的覆蓋範
圍和降低網狀節點的相互干擾。
 Multiple types of network access：WMN 同時支援透過 gateway 存取寬頻
Internet 網路和採用 peer-to-peer (P2P)的通訊方式在無線路由器之間傳
送封包。WMN 整合多種類型的網路存取技術是為了提供不同種類的使
用者所使用不同的服務。
 Support for ad hoc networking, and capability of self-forming, self-healing,
and self-organization：WMN 建構一個無線的分散式系統，並且提供所
有 ad hoc network 的優點(如 self-forming、self-healing、self-configuration
和 self-management)。由於 WMN 擁有這些特點，WMN 可以降低建置
9第2章 成果與討論
2.1 支援 VPLS之MPLS路由器
2.1.1 系統架構概觀
圖 2.1 顯示的 PE 路由器系統架構將 Control Plane 與 Data Plane 劃分開來，
各自獨立開發與運作；最後透過 CP-PDK (Control Plane - Platform Development
Kit)把 Control Plane 與 Data Plane 整合起來。CP-PDK 提供了控制平面經由資料
平面傳送和接收 control packets 的 virtual interfaces。
圖 2.1 分離式路由器系統軟體架構
在 MPLS 的 control plane 中，主要需提供 Routing 和 Signaling 的功能。圖
2.1 中 OSPF-TE [18] daemon 是具備 Traffic Engineering 能力的改良版路由協定，
延伸自 Open Shortest Path First；當中採用了 CSPF（Constraint-based Shortest Path
First）路由演算法來計算符合 TE 的路由。除了 OSPF-TE，完整的路由系統還包
11
2.2 自動搜尋機制
2.2.1 延伸 Kompella VPLS自動搜尋機制與 PW信令協定
在 Kompella VPLS 中，自動搜尋機制與信令協定主要是利用 BGP broadcast 的
方式來進行的，以下我們舉一簡單例子如圖 2.2 來說明 Kompella VPLS 的運作流
程。
圖 2.2 Kompella VPLS 運作流程
一開始當 PE 1 要加入 VPN 1 時，首先會為每一台 remote PE 預留 label block
並且利用 BGP 將資訊 broadcast 到每一台 remote PE 如圖 2.2 步驟 1 所示，而當
remote PE 接收到 BGP 訊息之後，便檢查自己是否已經加入該 VPN，若沒有加
入該 VPN，則忽略封包；若有加入該 VPN，則進行 PW 的建立，如圖 2.2 步驟 2
所示，如此便能建立起 VPLS 的服務。由於 Kompella 機制中是以 broadcast 且預
留 label block 的方式來進行，因此在效率上會較為不足，並且就安全性考量來
說，broadcast 也會使得沒有參與該 VPN 的 PE 也能夠收到該 VPN 的資訊，使得
安全性上較為不足，因此，我們提出一個新的機制來改善 BGP broadcast 所造成
的問題，如此便能加強 BGP 的安全性及效率，並延續 BGP 在 Scalability 上的優
13
圖 2.3 延伸 Kompella VPLS 自動搜尋機制與建立 PW 流程（範例一）
而在 Border router 加入某個 VPN 的情形中，Border 首先會查找 VPN list 找
出該 VPN 的聯絡人，若沒有找到該 VPN 的資訊，則在該 VPN ID 記錄自己的 IP
address；若有找到，則會發出 Join 訊息給聯絡人 PE，同時為了減少 forward Join
的機會，Border Router 會將 VPN list 所記錄的 IP address 更新為自己的 IP
address，以下我們將舉例說明之。
如圖 2.4所示，一開始 PE 1發出 Join VPN 1的訊息給Border Router並在VPN
member list 中紀錄自己為 VPN 1 的成員，而 Border Router 在收到 Join 訊息後，
由於 VPN list 之中並沒有 VPN 1 的訊息，因此 Border Router 就將 PE 1 紀錄為
VPN 1 的聯絡人。此時，Border Router 為了加入 VPN 1，首先會進入 VPN list
之中查找，依照查找到的結果得知 Join 訊息要發送給 PE 1，接著 Border Router
會將 VPN list 中所記錄的 IP address 改為自己的 IP address，並在 VPN member list
中記錄自己為 VPN 1 的成員。PE 1 在收到 Join 訊息之後，則會傳送 VPN 1 的
VPN member list 和 Label information 給 Border Router，接著在 VPN member list
中，將 Border Router 紀錄為 VPN 1 的成員。Border Router 接收到之後 Label
information 和 VPN member list 之後，也就會和 PE 1 完成 PW 的建立並紀錄 PE 1
為 VPN 1 的成員。當 PE 2 要加入 VPN 1 時，PE 2 會先發送 Join VPN 1 訊息給
15
中，藉此完成 VPN list 更新的動作。而在 PE 2 方面，在 PE 2 收到 Leave 訊息之
後，PE 2 便會將 PE 1 從 VPN member list 中刪除，完成拆除 PW 的動作。
圖 2.5 延伸 Kompella VPLS 拆除 PW 流程範例
2.2.2 設計考量
延伸 BGP 來實現 VPLS 時，我們需要藉由 routing protocol 來獲取 Core
Network 的拓樸資訊，而在外層 Tunnel LSP 方面，由於我們建立的 VPLS 需要具
有保障 QoS 的能力，所以我們採用具有 Traffic Engineering 能力的 RSVP-TE，而
內層的 Pseudo-wires 則基於 Scalability 的考量，因而採用 BGP 來建立之。另外，
由於內外層 LSP 使用不同的 signaling protocol，因此必須要有額外的模組來擔任
兩者訊息協定之間的協調工作，這項工作我們則交由 VPN Manager 模組專門負
責之。
基於前述考量我們設計出如圖 2.6 的 control plane 架構，主要的元件包括：
 VPN Manager：
VPN Manager 主要用來儲存 VPN 的 tunnel label 與 PW label， 當網管人員
要設定 VPN 時，會下達指令給 VPN Manager，經過適當的處理和記錄後，VPN
17
圖 2.6 我們所設計 VPLS 系統的 Control Plane 架構
2.2.3 邊界閘道器協定之延伸
在我們的架構中，PE 首先必須發出 Join message 給 Border Router (BR)，而
BR 依照 VPN Manager 查找 VPN list 的結果來判斷需要直接建立 PW 或是轉送
Join message，圖 2.7 則是先以直接建立 PW 的情況來解說 BR 與 PE 的互動流程。
由於 PW 是由兩條單向的 LSP 所組成，因此必須要確認雙向的 LSP 都建立後，
PW 才算建立完成，在我們的系統設計中，這判斷的工作是交由 VPN Manager
來負責。在圖 2.7 中我們假設 PE 和 BR 為同一 VPLS 中的兩台 PE，彼此已經建
立 BGP session，接著網管人員開始下指令發出 Join Message 給 BR，而關於外層
tunnel 的建立，我們假設透過 RSVP-TE 建立，並且透過 VPN Manager 來確認
tunnel 和 PW 的搭配。詳細的流程說明如下：
 步驟 1 與 2：
在 PE 與 BR 之間已經建立 BGP session 的情況下，網管人員在 PE 透過 CLI
下發出 Join message 給 BR 的指令，而此指令會由 VPN Manager 接收，在判斷是
欲發出 Join message 的指令後，VPN Manager 會在 Join message 的 request 夾帶事
先設定的 BR IP address 和 VPN ID (用來識別不同的 VPLS) 這兩個參數傳給
BGP。
19
會將此一訊息告知 VPN Manager，使 VPN Manager 紀錄該 label 值為 Outgoing
label，並且記錄該 VPN member list 的成員資訊。
 步驟 10：
PE 端的 VPN Manager 請求 BGP 對 VPN 中的成員建立 PW。此外若 VPN
Manager 得知有多位成員需要建立 PW 時，則步驟 10~13 則會重複執行之。
 步驟 11 和 12：
PE 端 BGP 收到建立 PW 的請求時，會向 Label Manager 進行 label 的請求，
Label Manager 則 return label 給 BGP，由於 BGP 採取 downstream unsolicited label
distribution 方式，因此這個 label 是給遠端送 frame 到 PE 時所貼的 label，也就是
LSP 的方向是由遠端到 PE。
 步驟 13：
PE 端 BGP 將 Label Manager 回應的 label 值傳送給遠端，並且同時將 Label
Manager 回應的 label 值告知 VPN Manager 該 label 值為遠端的 Incoming label。
 步驟 14：
在 BR 端方面，BGP 收到來自 PE 端的 label Info 之後，將此一訊息告知 VPN
Manager，使 VPN Manager 紀錄該 label 值為 Outgoing label。
PE 端方面，由於 VPN Manager 此時已經收集 BR 端的 Incoming label 和
Outgoing label 資訊，若此時外層 RSVP-TE 所建立的 tunnel 也建好了，且 tunnel
和 PW 都已經搭配好了，則 VPN Manager 將會進行對底層寫入的動作。
 步驟 15：
BR 端的 VPN Manager 在收到 PE 的 Outgoing label 之後，VPN Manager 已經
收集 PE 端的 Incoming label 和 Outgoing label 資訊，若此時外層 RSVP-TE 所建
立的 tunnel 也建好了，且 tunnel 和 PW 都已經搭配好了，則 VPN Manager 將會
進行對底層寫入的動作。
21
值告知 VPN Manager 該 label 值為 PE 1 的 Incoming label 。
 步驟 7：
PE 1 的 BGP 在收到來自 PE 2 的 label Information 和 VPN member list 之後，
會將此一訊息告知 VPN Manager，使 VPN Manager 紀錄該 label 值為 Outgoing
label，並且記錄該 VPN member list 的成員資訊。
 步驟 8：
PE 1 的 VPN Manager 請求 BGP 對 VPN 中的成員建立 PW。此外若 VPN
Manager 得知有多位成員需要建立 PW 時，則步驟 8~11 則會重複執行。
 步驟 9 與 10：
PE 1 的 BGP 收到建立 PW 的請求時，會向 Label Manager 進行 label 的請求，
Label Manager 則 return label 給 BGP，由於 BGP 採取 downstream unsolicited label
distribution 方式，因此這個 label 是給遠端送 frame 到 PE 1 時所貼的 label，也就
是 LSP 的方向是由遠端到 PE 1。
 步驟 11：
PE 1 的 BGP 將 Label Manager 回應的 label 值傳送給遠端，並且同時將 Label
Manager 回應的 label 值告知 VPN Manager 該 label 值為遠端的 Incoming label。
 步驟 12：
在 PE 2 方面，BGP 收到來自 PE 端的 label Info 之後，將此一訊息告知 VPN
Manager，使 VPN Manager 紀錄該 label 值為 Outgoing label。
PE 1 方面，由於 VPN Manager 此時已經收集 PE 2 的 Incoming label 和
Outgoing label 資訊，若此時外層 RSVP-TE 所建立的 tunnel 也建好了，且 tunnel
和 PW 都已經搭配好了，則 VPN Manager 將會進行對底層寫入的動作。
 步驟 13：
PE 2 的 VPN Manager 在收到 PE 1 的 Outgoing label 之後，VPN Manager 已
經收集 PE 1 的 Incoming label 和 Outgoing label 資訊，若此時外層 RSVP-TE 所建
立的 tunnel 也建好了，且 tunnel 和 PW 都已經搭配好了，則 VPN Manager 將會
23
PE 1
Router ID 192.168.2.76
PE 2 BR 2
BR 1
Router ID 192.168.3.49
Router ID 192.168.5.254Router ID 192.168.2.95
圖 2.9 PC 平台測試環境
在開始自動搜尋機制與 Pseudo-Wire 建立之前，BGP peers 必須先建立 BGP
Session，藉由 OSPF 所得到的 routing 資訊使得四台電腦能夠互相和對方建立起
BGP session 如圖 2.10 所示。
在 BGP session 建立完成之後，我們在 BR 1 的 VPN Manager 輸入 br_join
vpn-id 1 來加入 VPN 1，並且輸入 show_vpls_pw_info 來觀察在 VPN 1 當中的成
員資訊如圖 2.11 所示，此時由於成員資訊只有本地端，因此只會看到有加入 VPN
1 而沒有成員資訊。接著我們進入 BR 2 的 VPN Manager 輸入 show_vpn_list_info
來觀察 VPN list 資訊，從圖 2.12 我們可以確認 BR 2 所記錄的 VPN list 的確是
BR 1 的 IP address，因而得知同步機制運作正確。
25
圖 2.12 BR 2 的 VPN list 資訊
接著我們在 PE 1 的 VPN Manager 中輸入 join 192.168.3.49 vpn-id 1 來對 BR
1 發出 Join VPN 1 的訊息，接著輸入 show_vpls_pw_info 來查看 VPN 成員資訊如
圖 2.13 所示，從圖中我們可以看出 PE 1 已經成功的和 BR 1 建立起 Pseudo-Wire。
當 BR 1 與 PE 1 之間的 Pseudo-Wire 建立完成之後，我們進入 PE 2 的 VPN
Manager 中輸入 join 192.168.5.254 vpn-id 1 使 PE 2 對 BR 2 發出 Join Message，
並且查看 VPN 中的成員資訊如圖 2.14 所示。從圖中我們可以看出藉由 BR 2 正
確的轉送 Join message，使得 PE 2 已經分別和 PE 1 和 BR 1 成功的建立起
Pseudo-Wires。
27
2.3 WMN QoS
在 802.11 wireless chain network 底下，若各個無線節點有上層 data 要傳給
gateway，且 data 需能正確地傳送到接送端，TCP 的機制便符合了這樣的需求。
然而，在底層環境為無線環境時，要在上層使用 TCP flow 傳輸封包便會引發一
些問題 [23]，例如由於無線節點距離 gateway 的遠近造成 throughput 的
unfairness。圖 2.15 是有三個節點的 wireless chain network 的 throughput 關係圖，
我們可以觀察到，某些節點所產生的 flow throughput 就有比例關係，比如當 node
1、node 2、node 3 有 TCP flow 要傳給 gateway 時，flow 2 的 hop counts 為 flow 1
的 2 倍，也就是同樣傳輸一個 packet 到 gateway 時，flow 2 需花 2 倍於 flow 1 的
時間，所以 flow 1 throughput 便為 flow2 throughput 的 2 倍。至於距離 gateway
較遠的 node 3，其 flow throughput便呈現 starvation的狀態。會產生 flow throughput
starvation 的原因是 node 3 MAC 層頻繁的 exponential backoff 造成的[24]，更確切
的說，當 node 1 要傳 packet 給 gateway 時，在未收到 CTS 的回應之前，node 3
也要經由 node 2 傳 packet 給 gateway 時，此時，會有很大的機率使得 node 3 無
法搶到通道先傳輸 packet 到 node 2，因而造成 throughput starvation。因此，我們
希望提出一個 TCP throughput fairness 的機制，藉此改善每個 flow throughput 公
平性。
29
表 2.1 為 ns2 參數設定表
Environment Parameter Value
channel type WirelessChannel
radio-propagation model TwoRayGround
MAC type 802_11
interface queue type DropTail/PriQueue
max packet in ifq 50 (packets)
routing protocol AODV
RXThresh 3.65262e-10 (250m)
CSThresh 1.55924e-11
packetsize 1000bytes
表 2.1 ns2 參數設定表
2.3.2 TCP效能公平性機制
由於我們所要做的是 TCP 效能公平性機制，因而在此之前我們會先訂出系
統傳輸封包時的最大 throughput (MaxTh)，然後再根據 flow 的數目來決定各個
flow所能分到的公平 throughput的值。MaxTh為Node1成功傳輸packet到 gateway
的最大 throughput，如圖 2.17 所示：
圖 2.17 系統傳輸的最大 throughput
底下為 MaxTh 的數學表示式：
在我們所提出的 TCP 效能公平性機制裡會使用到 delayed ack 的機制，而一
min( , )*cwnd awnd packetsize
MaxTh
RTT

31
圖 2.19 awnd=20 時，throughput 的結果
接下來，我們要針對如何使用 TCP throughput fairness 機制達到公平做個說
明。為了達到 throughput fairness，我們提出每條 flow 該如何公平的使用通道傳
輸它們的 packet，其情形如圖 2.20。此處RTT 1指的是Node 1成功傳輸一個 packet
到 gateway 所需的時間，則每條 flow 理想的公平傳輸情形是：flow 1 在花了一個
RTT 1 的時間傳一條 flow 1 的封包到 gateway 之後，便停下來開始等待其它 flow
的傳輸，接著 flow 2 先花一個的 RTT 1 的時間將其封包傳送到節點 1，然後再從
節點 1 花一個 RTT 1 的時間將 flow 2 封包傳到 gateway，跟著 flow 2 也開始等待
其他 flow 封包的傳輸，接下來換 flow 3 花一個 RTT 1 的時間傳輸 flow 3 封包到
節點 2，從節點 2 再花一個 RTT 1 的時間到節點 1，而後再從節點 1 花一個 RTT
1 的時間到 gateway，因此，在每條 flow 傳送一個封包到 gateway 時，總共會花
六倍 RTT 1 的時間，其中 flow 1 每傳一個封包就得延遲 5 倍的 RTT1 時間才能再
傳下一個封包，而 flow 2 則是延遲 4 倍 RTT 1 時間，flow 3 延遲 3 倍的 RTT 1
時間，依此延遲規則周而復始，便能達到公平性的機制。
33
HS (Hop Counts Sum):
RTTi: 第 i 個 node 傳輸一個 packet 到 gateway 所需的時間
DATj (Delayed Ack Time): 第 j 個 node 其 Delayed Ack 應設定的時間
FT(Fair Throughput ): 各個 node 所能得到的公平 throughput
2.3.3 Congestion window size的觀察
圖 2.22 為觀察三條 flows 到 gateway 的 average throughput，f1 (flow 1)的
throughput 大約是 f2 (flow 2) throughput 的兩倍，f3 (flow 3)的 throughput 幾乎是
零，而 TCP 的 congestion window 關係著 throughput 的變化，所以我們為了觀察
每條 flow 的 congestion window size 漲跌的情形，因此對 congestion window size
做了一些觀察與分析，如圖 2.23 所示。
1
N
i
H S H i


1*iRTT Hi RTT
1
1
*
N
i
i
RTT HS RTT


1
N
j i j
i
DAT RTT RTT

 
1
1*
N
i
i
packetsize MaxTh
FT
HSRTT

 

35
Flow1
Flow2
Flow3
圖 2.23 三條 flows congestion window size 變化的情形
2.3.4 Buffer長度的觀察
圖 2.24 與圖 2.25 是針對 node 1 與 node 2 interface queue 的變化所量測出來
的結果，在 ns2 裡各個 node 的 interface queue 預設值大小為 50 個 packets，從圖
圖 2.24 與圖 2.25 可以清楚看到 node 1 與 node 2 所暫存的封包最大個數也才接近
40 個而已，因此經由以上的結果清楚地透露出一件訊息，每個 node 的 queue 沒
有發生 buffer overflow，所以 throughput 無法隨著 congestion window size 的上漲
而增加並不是因為 buffer overflow 的原因而造成的。
37
既然不是 buffer overflow 的原因所造成的，那真正的原因為何呢？我們猜想
造成這樣的結果可能與 advertised window size 有關，但我們還不是很肯定它們之
間的關係。因此，我們根據 throughput、congestion window size與 advertised window
size 等關鍵字找尋相關的資料，我們得到一個 throughput、congestion window 與
advertised window 的關係式。關係式如式子(1)所示：
(1)
經由式子(1)，我們可以清楚地了解，無論 congestion window 再怎麼漲，只
要 receiver window (awnd)有個最大值限制，在 packet size與RTT (Round Trip Time)
固定的情況下，throughput 的值基本上就會被固定住。為了証實式子(1)的合理
性，我們從 ns2裡面去尋找設定 receiver window的參數，最後發現 receiver window
參數預設的值為 20 個 packets，經由模擬再量測出 flow 1 的 congestion window
超過 20 個 packets 時的 RTT 時間，其時間為 0.5 秒，而 packetsize 值為 1000bytes，
將以上參數值代入式子 1，可以得到 throughput 為 320kbps。
由 ns2 量測出來的 throughput 與式子 1 算出來的 throughput 的結果相當吻
合，對於 congestion window size 的上漲，而 throughput 卻維持一定值的解釋也因
此合理。
2.3.5 Advertised Window的影響
由式子 1 我們知道 min(cwnd,awnd)的值將影響著 throughput 的變化，而為了
要達成各個 node 所傳送的 TCP flow 其 throughput fairness，因此我們推測經由控
min( , )*cwnd awnd packetsize
Throughput
RTT

20*1000*8
320
0.5
Throughput kbps 
39
Flow1
Flow3
Flow2
圖 2.26 調整 awnd 之後三條 flows throughput 的結果
如圖 2.27 所示，在把 flow 1 awnd 的值調整到最小後(值為 1)，flow 3 的
throughput 仍舊沒有太大提升，於一開始僅些許的成長，而 flow 1、flow 2 的
throughput 還是很接近。雖然使用調整 awnd 值的方法來改善 throughput fairness
並沒成功，但經由觀察 flow 1 與 flow 2 的 throughput 得知，調整 awnd 的值還是
有一定的效果。
41
釐清它們之間的關係，因此我們提出了一個各條 flow throughput fairness 的傳輸
模型，並利用 ns2 的模擬証實了我們的想法。
Flow3
Flow1
Flow2
圖 2.28 新增 Delayed ack 機制後，三條 flows throughput 的結果
2.3.7 模擬結果與分析
本節將使用前面所提出的 TCP throughput fairness 公平性機制的式子來計
算，在 4 個節點及 3 條 TCP flows 時，每條 flow 所應該設定的 delayed ack time
值，並使用這些值經由 ns2 模擬証實後，每條 flow 的 throughput 確實會 fairness。
每條 flow 的 delayed ack time 值計算如下：
43
Flow1、Flow2、Flow3
圖 2.29 每條 flow throughput 單位時間變化的結果
圖 2.30 是平均 throughput 的結果，意思是在一段時間內平均成功接收到的
bit 數，從圖中可以看到其值大約為 113 (kbps)，而理論上經由公式計算出來的結
果其每條 flow 的 throughput 也是 113 (kbps)。
除此之外，我們從圖 2.29 和圖 2.30 throughput 的結果中發現其值有些許的
差距，這是因為計算的方式不同而造成的小差異。
45
Flow1、Flow2、Flow3
圖 2.32 cwnd 的結果
圖 2.33 為五個節點及四條 flows 時的模擬結果，其結果仍有達到 throughput
的公平性。
Flow1、Flow2、Flow3、Flow4
圖 2.33 五個節點及四條 flows 時的模擬結果
47
圖 2.36 為六個節點及五條 flows 時 RTT 的模擬結果。
Flow1、Flow2、Flow3、Flow4、Flow5
圖 2.36 六個節點及五條 flows 時 RTT 的模擬結果
討論至目前為止，以上所模擬出來的 throughput 結果，其使用的 Data rate
皆為 1 Mbps，此時如果將 Data rate 改變時會不會使得我們的公平性機制失去作
用呢？我們認為是不會的，為了証實答案，我們將 Data rate 改成 2 Mbps，並先
量測出其 MaxTh，然後算出其 delayed ack time 的時間，其時間的設定值，如表
2.5 所示。圖 2.37 及圖 2.38 所示，分別為 throughput 及 RTT 的結果。
Parameters NS-2 Default value Modified value
window (awnd) 20 (packets) 1
Interval (Delayed ACK) 100ms 38, 30.3, 22.7ms
表 2.5 調整過後的 delayed ack time 的值
49
第3章 成果自評
我們利用延伸 BGP 以 Unicast 的方式來實現 VPLS Autodiscovery，在安全性
方面，確實比 Kompella VPLS 中所採取 Broadcast 的方式來得安全。而就 Label
分配效率而言，我們採取 On demand 的方式來進行分配，也比 Kompella VPLS
預留 Label Block 的方式來得有效率。而在訊息傳遞的數量方面，假設一個 AS
中總共有 N 個 PE，其中有 M 個 PE 為 VPN 1 的成員 (N>M) ，當第 N+1 個 PE
要加入 VPN1 時，若以 Kompella 所提出的方式來傳遞，則總共需要傳輸 N+M 筆
訊息方能實現 VPLS；若以我們提出的的架構來進行傳輸，就訊息傳遞量最多的
情況來說 (BR 未參予 VPN 1)，則總共需要 2+2M 筆訊息來實現 VPLS。因此我
們得知，若我們架構中的訊息傳遞數量要較 Kompella 來的少(即 2+2M<N+M)，
則一個 AS 中必須至少有 2 個以上的 PE 未參與 VPN 1 (M<N-2)。綜觀上述，我
們提出的 Autodiscovery 架構延續了 BGP 在 Scalability 方面的優勢，就安全性和
Label 分配效率看來，確實有改善 Kompella VPLS 的效率及安全性問題，且在訊
息傳遞的數量方面，也能夠在一個 AS 之中，PE 總數至少比成員總數多出 2 個
以上的情況中，減少建構 VPLS 訊息的傳遞數量。
在 802.11 wireless chain network 環境中，當無線節點使用 TCP 傳輸 data 時，
節點位置與 gateway 的距離關係會導致各個節點的 flow 產生 throughput
unfairness，其中 throughput unfairness 問題包括不同節點 flow 的 throughput 成比
例關係與某些節點有 throughput starvation。因此我們提出 TCP throughput fairness
的機制，利用 delayed ack 的機制搭配 advertised window 來延遲封包傳送的時間，
使得各個節點到 gateway 的 TCP flow 的 throughput 達到公平。這個方法比前人提
出的在 gateway 作 per flow rate control 更為簡單且有效。
整體而言，在 VPLS 部分，我們以之前完成的完整的 QoS control (DiffServ、
Classification、DRR Scheduling 等)和 TE-FRR 的 MPLS 邊界/核心路由器之資料
平面為基礎，在本計畫第一年設計並完成實作控制平面的 Autodiscovery，這在
國內應該是獨一無二的努力與成就。本計畫的成果對於未來國內產業在這一方面
技術的研發應該有可供參考之處並且有鼓勵的效果。在 WMN QoS 部分，我們想
出用 Delayed ACK 解決此一領域的公平性問題，未來還有更多有趣的問題可以
作。
