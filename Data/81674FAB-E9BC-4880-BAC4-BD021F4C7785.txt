中英文摘要 
 
在數位時代，CAD/CAM 技術已經改變了傳統建築設計過程，同時產生新的數位建構方法。建築領域
希望 CAD/CAM 技術的設計過程標準化，如具代表性的 Gehry 事務所所開發的 Gehry Technologies 
(GT)，及歐洲 SmartGeometry Group 所開發的 Generative Components 系統。另一方面，研究領域中的
Mark Burry、Larry Sass、Branko Kolarevic、Schodek 等人也是積極的在探討 CAD/CAM 數位媒材在設
計過程中所扮演角色，除了認為 CAD/CAM 技術將成為未來新的建構方式外，也企圖整合出完整的
CAD/CAM 數位設計流程，或提出標準化的建議。 
 
然而，目前 CAD/CAM 技術對大多數設計者而言是仍然是一種新的設計媒材，尤其 CAD/CAM 輔助設
計仍然處於繁瑣的操作流程。對於這種新媒材該如何被運用及操作才會有效率，更精準，及讓空間形
體設計更自由，必須被探討。基於所提出的問題，本研究希望可以先深入瞭解這些新 CAD/CAM 技術
的特性及功能，提出 CAD/CAM fabrication 操作流程準則的建議。同時，本研究希望可以在 GT 高技術
門檻與現有設計環境的落差中找尋一種可執行的 CAD/CAM 標準流程，企圖讓目前大多數建築設計教
育與設計師利用 CAD/CAM 技術來創造更解放的設計。因此，本研究操作三大步驟的研究方法:1.媒材
實驗 2.流程自動化電腦運算 3.案例分析驗證流程可行性。結果分析出 CAD/CAM 技術操作中軟硬體最
佳轉檔流程及將重複性的操作步驟自動化，最後整合出一套可以提供給建築教育與專業設計師容易掌
握與操作的 CAD/CAM 數位建構標準流程。 
 
關鍵字： CAD/CAM 技術，數位構成，數位設計過程 
 
In digital era, CAD/CAM technology had changed the traditional design process and evolved a new design 
process and construction method. In the field of architecture professional, some commercial computer systems 
or software had been developed on purpose of standardizes the digital design process in using CAD/CAM 
fabrication, such as Gehry Technologies (GT) and generative components. In the other hand, researchers in the 
research field like Mark Burry, Larry Sass, Branko Kolarevic, Schodek, and others are enthusiastic about the 
exploration of the role of CAD/CAM fabrication as new design media in the design process. 
 
However, most of the designers still unfamiliar with CAD/CAM technology, especially they face to the 
complicated procedures of this new digital design media. Therefore it’s very essential to explore how to operate 
and apply CAD/CAM new media in the design process more efficiency and accurate, in order to produce a better 
digital design process. This research aims to understand deeply the characteristics and function of CAD/CAM 
technology and propose a general principle of CAD/CAM fabrication operation in design process. Moreover, the 
objective of this research is to bridge this gap and attempts to propose a better standardized CAD/CAM 
fabrication design process for the designers and architectural students to operate easily.Therefore, this research 
operates the three major steps of research approaches: 1.media experiment 2. automation computational 3. process 
validation-case study. The result concludes a standardize process of CAD/CAM fabrication which can easily 
operate by the architectural students as well as the architect and designer in the professional film. 
 
Keywords: CAD/CAM technique, digital fabrication, digital design process 
  
 二、問題、目標與研究方法 
 
CAD/CAM 新設計媒材改變了以往設計過程而產生新的建築設計與建造流程，專業領域及研究者也開
始企圖研究這種新媒材輔助下的標準化設計流程。然而，目前 CAD/CAM 技術對大多數設計者而言是
仍然是一種新的輔助設計媒材，對 CAD/CAM 技術也並不熟悉，因此對於這種新數位媒材，該如何被
運用及操作才會更有效的輔助設計過程，必須被探討。同時，雖然專業領域已經商業化的 GT 系統已
企圖將 CAD/CAM 設計流程標準化，然而，GT 是一種必須基於進階技術及高經費的環境下操作的系
統，對於多數建築設計教育與設計師的既有環境執行上具有困難，尤其是處於亞洲地區科技技術與經
費上都極具限制的環境，在使用 GT 系統時難免會出現落差。因此，本研究希望可以在 GT 高技術門
檻與我們現有設計環境的落差中找尋一種可執行的 CAD/CAM 標準流程，企圖讓目前大多數建築設計
教育與設計師利用 CAD/CAM 技術來創造更解放的設計。另外目前使用 CAD/CAM 輔助設計仍然處
於很繁瑣的流程，由於過程中必須使用到多種不同的軟硬體，而且在不同設備轉換格式中也會面臨許
多轉檔問題及導致誤差的產生。因此爲了解決這些問題，在使用 CAD/CAM 新設計媒材時是否具有讓
設計者容易操作的流程或準則? 此外 對於 CAD/CAM 新媒材可以輔助更自由的造型變化設計與建
造，這種自由形體設計的數位建構(digital fabrication)過程是否已經可以整合出一套標準的設計流程?
因此基於所提出的問題，本研究的目的希望延續 Lee(2005)所提出初步的自由形體製作數位建構流程，
再進一步深入分析，並提出最佳化的操作流程準則與建議。最後希望整合出利用 CAD/CAM 新媒材輔
助自由形體設計與建造的標準化流程。 
 
本研究針對所提出的問題，依序先進行媒材轉檔實驗，電腦運算等分析並整合出最佳化之標準流程，
最後再分析真實案例來驗證所提出流程之可行性，以下分別詳述此三個主要步驟的目的與操作方法： 
 
步驟一 媒材轉檔流程測試 
CAD/CAM 技術的操作流程牽涉到多種軟硬體之間的轉換，而且不同 CAD 系統有不同格式的設計數
位模型，如何才可以轉換成符合不同 CAM 機器所能接受的格式，簡化多種介面的轉換過程，降低轉
換之間所產生的誤差，將會在這個實驗中測試並整合一套容易操作的準則。主要的實驗方法是利用不
同 CAD 軟體所建造的數位模型，嘗試各別找出格式轉換的最佳操作方式(圖 1)。 
 
 
 
 
 
 
 
 
 
 
 
 
步驟二 流程自動化 
由於自由形體必須分割成單元製造，因此在這些過程中必然會有一些操作方法一直被重複執行。為了
3D max 
Maya 
FormZ 
.stl 
.cdr 
RP FDM 
Laser cutter 
CAD 數位模型格式 格式轉換過程 CAM 設備格式 
.3ds 3D scanner 
? 
? 
? 
圖 1 
以下詳細說明這些操作步驟。 
 
3D CAD 模型。 Maya 因具有多種建模方式，尤其完整的 Nurbs 建模功能，比其他 3D 軟體如 3Dmax, 
Rhino, FormZ 在自由形體設計的複雜曲面建模過程佔有較多的優勢。而各種不同 3D 軟體的模型都可
以用.OBJ 格式相互轉換。此格式主要支援多邊形(polygon)模型，同時也接受直線(lines)，表面(surfaces)
和自由形線(free-form curves)，轉換過程最穩定而資料損失的機率低。另外還有.IGES 格式，主要支援
曲面(Nurbs)模型，已被定義為基於 CAD/CAM 不同電腦系統之間的通用 ANSI 信息交換標準。 
 
骨架建構。 在骨架建構的過程，包含三個主要操作：「分割」、「骨架擠出」及「骨架修正」。首先，
對於「分割」的操作方式，是在曲面形體 3D 模型的頂視圖中畫出水平、垂直、或圓心的分割參考線，
再將這些參考線擠出(extrude)成垂直面板，接著將這些板與設計曲面進行相交切割(intersect)取出線
段，就可以得到骨架結構的中心線。取出骨架結構中心線後，畫出適當尺寸的斷面矩形，利用斷面矩
形及骨架中心線將「骨架擠出」。骨架製作完成後必須進行「骨架修正」，因為當形體曲面過於複雜將
導致在第一步水平垂直分割時，會有些骨架相互交錯形成不合理的骨架，因此必須進行修正。 
 
骨架卡接。 骨架製作及修正完後，必須將垂直與水平卡接的骨架「凹槽製作」。這個步驟在李元榮(2005)
研究中，主要以製作交卡參考物件與骨架進行布林運算(boolean)而切出凹槽。但本研究將改變此方
法，因為 3D 軟體的布林運算需耗很大的軟體資源，當遇到複雜形體時很常出現問題，尤其是 Maya
此功能常常會失效，因此會導致製作凹槽時不只是操作繁瑣，還會因指令失常而耗費更多的人力與時
間。本研究經多次測試，提出另一種製作凹槽的方式，主要以 Nurbs 相交切割(intersect)的方式來取出
凹槽位置。操作步驟先將水平與垂直向的骨架各往上與往下移 1/4 斷面寬度的位置，再將第一步的分
割垂直板與移位的骨架進行相交切割(intersect)，這樣就可以取出骨架外框與凹槽的線段。這種作法主
要都是在 Nurbs 進行，不用將曲面形體再轉成 polygon，因此可以得到更精確的骨架資料。 
 
2D 圖面製作。 完成了垂直水平骨架卡接凹槽製作之後，將所得到的 2D 骨架外框與凹槽位置線段，
匯出成.DXF 格式，再匯入 2D 軟體 AutoCAD 製作輸出的圖面。在 AutoCAD 包含兩個主要操作：「2D
骨架輪廓」及「排版編號」。由於從 3D 軟體匯入的骨架外框及凹槽位置線段不是完整的骨架圖面，因
此必須繼續作編修，製作完整的「2D 骨架輪廓」圖面。當骨架邊修完後，再進行「排版編號」。將編
修完的 2D 骨架輪廓編排於雷射切割可切割材料大小的版面上，並進行編號，以利骨架組裝時的識別。
最後為了組裝參考依據，必須製作骨架編號標示圖片。 
 
雷射切割輸出。 將在 AutoCAD 排版編號完成的骨架檔案輸出成.DXF 格式，再匯入雷射切割機的控
制軟體 Coreldraw。輸出前將線寬調到極細(0.001cm)，同時調整雷射切割輸出的火力(power)與速度
(speed)的參數，再放置需要切割的材料在雷射切割機中，就可以開始進行雷射切割。切割完的骨架單
元再進行組裝，最後按照編號標示圖完成骨架模型。 
                                         
b.折板表皮製作 
在折板表皮製作過程中，開始從目前 3D 建模軟體所建構的「3D CAD 模型」，在 3D 軟體進行「折版
建構」後、再轉檔到 2D 軟體進行「夾角計算」及「2D 圖面製作」的步驟，最後將檔案由「雷射切割
輸出」。以下詳細說明這些操作步驟。 
 
3D CAD 模型。 對於各 3D 軟體之間轉換格式與前述骨架製作之敘述相同。 
 
先必須在 3D 軟體中將模型調整至符合 STL 格式的條件，再轉換檔案至 FDM 快速成型控制軟體 Insight
設定輸出參數，最後才可以完整輸出 ABS 材質的 RP 模型。為了探討 FDM 快速成型操作轉檔步驟，
下列分析從目前 3D 建模軟體所建構的「3D CAD 模型」開始，進行「多邊形轉換」及「輸出前檢查」，
最後將檔案由「FDM 快速成型」輸出。 
 
3D CAD 模型。 在使用 RP 製作實體模型過程中，主要需透過 3D 軟體提供實體模型(solid model)，即
多邊形(polygon) 檔案的形式才能輸出 STL 格式至 RP 機器，目前的 3D 建模軟體 Maya, 3Dmax, FormZ, 
Rhino 等皆可提供此需求。 
 
多邊形轉換。 在將 3D CAD 模型製成可以由 RP 設備接受的檔案過程中，有五個主要操作：「Nurbs
轉 polygon」、「細緻化」、「厚度」、「模型切割」及「縫隙填補」。由於 STL 格式的需求必須將 Nurbs
轉成 polygon，在這過程中，為求 RP 模型可以細緻化，可以將模型的分佈線(UV)增加。此時模型是
無厚度的，為了實體模型所需的厚度需將面擠出(extrude face)。最後，如整體模型大小超出 FDM 快速
成型機器的輸出尺寸(20*20*30cm)，則需將模型切割。完成切塊分割後，必需將切割面的缺口封閉(fill 
hole/cap)，填補模型的縫隙，主要是因為 RP 設備只輸出每一層斷面都是完整封閉線段的模型。 
 
輸出前檢查。製作完成的多邊型模型在匯進 RP 設備前需先對模型進行檢查，主要進行四個操作：「三
角化」、「法向量檢查」、「封閉檢查」、「三角頂點檢查」。在 Maya 中為求輸出完整的 STL 檔案格式，
必須先將多邊形模型三角化(triangulate)，然後進行三項檢查：1.檢查法線向量（normals）是否一致朝
向外，2. 檢查模型是否確實為完全封閉面，3. 相鄰三角形間是否頂點接頂點。當模型檔案都檢查無
誤後，就可以直接匯出 STL 格式。 
 
FDM 快速成型。 當 STL 格式匯入 RP 設備，須經由設備軟體--Insight 的參數設定後才可輸出。主要
包含四個操作：「斷面分割」，「支撐材料建構」，「輸出路徑設定」及「製作時間及模型耗材體積計算」。
但在調整這些參數設定之前，必須調整模型的加工方位。接著就設定上述的加工參數，再使用鍵盤上
的 PgUp 和 PgDn，逐層檢查斷面是否封口，和輸出材料分佈的狀況，完成檢查後就可由機器輸出。輸
出完成的模型取出後需放到 prodigy plus 洗淨支撐材料，內添加清潔劑，運用超音波共振及化學溶解
的原理清除細部的支撐材。完成清潔之後，就可以將模型組裝成形。 
                             
從以上各過程操作與轉檔分析，最後歸納出應用於製作實體模型的「FDM 快速成型轉檔過程」(圖 3)。 
 
 
圖 3 FDM 快速成型轉檔過程 
 
3.3 攜帶式雷射掃描轉檔過程 
3D 雷射掃描為反向工程的技術，主要是可以將實體物件快速掃描成電腦 3D 模型資料。對於攜帶式小
型的 3D 雷射掃描機器(portable 3D scanner)，主要以雷射光來掃描物件，整個操作步驟主要先放置一
個「實體模型」，利用 3D 雷射掃描機器的控制軟體 TriD 先進行「掃描」，再對所掃描的數位模型進行
「接合」及「破面修補」，最後再轉換成目前 3D 軟體可以讀取的「3D CAD 模型」格式，以下以各操
作步驟分析其轉檔過程。 
匯入 2D 軟體操作「2D 骨架輪廓」編修及「排版編號」，以作為輸出圖面。由於過程中的「骨架修正」
步驟需要設計師決定與檢視，而在自動化過程中仍希望可以讓設計師掌控設計決定權而不只是被自動
化程式取代，因此不宜將整個過程都採取自動化模式。另外，在撰寫程式過程，由於 Maya MEL 已具
有很多開放資源的電腦運算直譯程式(script)可以取得，因此本研究除了對部分操作步驟撰寫程式，也
整合一些開放資源可應用的程式。以「骨架製作」的操作，主要將「分割」及「凹槽製作」兩個步驟
撰寫程式自動化，而「骨架擠出」步驟則直接應用所取得的外掛程式。以下對這些步驟加以說明。 
 
分割。 在設計骨架系統時，必須先於設計曲面上作分割取出製作骨架的中心線。在分割系統上，目
前常用的有三種：垂直水平分割、圓心分割、法向量分割。在 3D 軟體中，有三種分割曲面的操作方
法：投影分割法、相交分割法、取同位線分割法。本研究在曲面分割上採用相交分割法，在操作指令
上，必須先畫分割線，製作分割垂直板，再將垂直板與形體進行分割取出分割線。這些操作對設計分
割量很多的形體必須花費許多時間，因此希望可以將步驟自動化。由於分割系統決定於設計者，因此
設計者只需先畫出分割線，其餘交由程式來執行，即可以輕易得到曲面形體上的分割線段。另外，執
行此程式後，所建立的分割垂直板及所產生的分割線段將會置於指定的物件層(layer)中。 
 
骨架擠出。 骨架形體主要以擠出(extrude)功能來製作，操作方式先繪製骨架斷面矩形，再與所分割出
的骨架中心線擠出骨架形體。但由於 Maya 軟體指令功能限制，使擠出功能只能一次擠出一根骨架，
因此造成製作上很耗時，但目前可以取得的開放資源(open source)MEL script 外掛程式可以改良此功
能，讓操作上只需選一次斷面矩形與所有的中心線，就可以一次擠出所有的骨架形體。直接應用此外
掛程式讓骨架製作的操作更簡易而快速。 
 
凹槽製作。 在製作凹槽的過程中，本研究於 4.1 節已提出簡化而更有效的操作方法，主要利用 Nurbs
相交切割法(intersect)取出骨架外框與凹槽線段。這種作法可以讓骨架輪廓資料更精準，因為如果採用
polygon 以用布林運算切割凹槽的方法，將會使原由 Nurbs 製成的骨架形體在轉成 polygon 時產生變
形。在操作指令上，先將垂直水平骨架各位移骨架寬度的 1/4 位置來作切割，以得到骨架外框與凹槽
線段。骨架移位操作方式可由程式自動執行，但由於自由形體複雜而讓骨架相交位置並不一，每根骨
架的凹槽數量不一致，因此設計者必須先手自動選取要切割的骨架，再執行程式來自動切割及將骨架
外框與凹槽線段置入指定物件層。 
(自動化程式請詳見附錄一) 
 
4.2「折板表皮製作」自動化操作步驟 
「折板表皮製作」主要操作過程先在 3D 軟體中操作「分割」、「折板創建」、「夾角計算」、之後再匯入
2D 軟體操作「2D 展開」及「排版編號」，以作為輸出圖面。過程中「分割」的執行指令與骨架分割
一樣，可以共用前面的程式。而以「折板表皮製作」的操作，主要將繁瑣及常會因人為操作而出錯的
「夾角計算」及「2D 展開」兩個步驟撰寫程式。另外在折板編號標示過程中，當折板數量大時，需
要花很多時間製作編號圖面，另外也會因大量折板展開時造成編號錯誤。因此本研究建議在折板計算
角度與 2D 展開之前就先在 3D 環境中給予標示，可以避免操作失誤。除了撰寫前面重要的兩步驟，
也希望在將折板進行自動化的「折板編號」。以下對「折板編號」、「夾角計算」、「2D 展開」這些自動
化步驟加以說明。 
 
折板編號。 此步驟主要是可以讓三度空間中的折板都先標示編號，以作為折板展開輸出後可以參考
的依據。在 Maya MEL 程式撰寫中，利用對物件命名的方式來作標號標示，先將折板重新命名，再將
骨架擠出。 當設計者得到骨架中心線後，就繪製骨架斷面，希望可以由「骨架擠出」的外掛程式快
速將骨架形體擠出(extrude)。然而，卻出現骨架方向錯誤的問題，這是因為程式無法將斷面依非垂直
水平的骨架中心線法向量位置來擠出形體。從這步驟發現此程式有必要進行進一步改善，以適合非垂
直水平骨架的製作。 
 
凹槽製作。 此設計形體僅由主要垂直向的骨架組成，只有中間座位區域才有橫向骨架穿越，因此須
處理骨架之間的凹槽數量很少，但設計過程依然利用「凹槽製作」的自動化程式快速產生骨架外框與
凹槽位置的線段。 
 
接著這些線段匯入 AutoCAD，排版於 60*40cm 雷射切割材料大小的版面，並進行編號，同時也製作
編號標示圖面。最後組裝完成。從以上操作過程可知，雖然在製作骨架步驟必須以手動方式製作，但
分割骨架及製作凹槽的自動化程式已經讓設計者在操作過程中免於繁瑣的重複性操作，而且經設計者
計算，以自動化取代手動製作骨架，得以讓他節省 5 倍操作時間，而且也更精準。 
 
5.2 高第展場設計案 
高第展場設計案中設計了由不規則三角板製成的木作展示櫃。為了現場搬運與組裝，將 8m*9m 的 L
型三角板展櫃分割成九組櫃子單元來個別施作。以下敘述此展櫃單元在設計與建造過程中如何應用自
動化程式來輔助。 
 
分割。 為了讓三角板表皮可以在組裝時精準定位，在切割櫃子的骨架時，除了考慮骨架支撐功能外，
特別為每塊三角板的定位與固定位置來分割，主要作法於三角板接觸的頂點位置就切割一根骨架。因
此當櫃子三角板數量較多時，所切割的骨架數量也會增加。設計者依設計需求畫完設計分割線後，就
執行「分割」的自動化程式，得到骨架輪廓。這些骨架輪廓線直接匯出.DXF 檔案到 AutoCAD 標註尺
寸，排版編號以供裁切。 
 
折板編號。 由於每一組展櫃單元共有 50 幾片三角板，如需每一片手動編號需耗費大量時間，因此過
程中利用「折板編號」自動化程式將每塊三角板自動編號，並製作編號圖示圖，作為組裝時每塊三角
板位置可以對照的依據。 
 
2D 展開。 此設計主要材料為木作，施作上將每片折板以三角形切割。在操作過程中執行「2D 展開」
自動化程式，就可以將大量的三角板全部攤平於平面上，而且自動編號。 
 
接著將骨架輪廓與三角板檔案匯入 AutoCAD，編排入 122*244 夾板大小的範圍中，標註尺寸後進行
木作裁切。裁好的骨架與三角板在工廠進行組裝，此時編號圖示圖面扮演重要角色，每片具編號號的
三角板需根據圖面上所標示的位置依序組裝。最後組裝完成三角板展櫃。從各步驟分析可知，此設計
案無骨架凹槽設計，折板直接以三角形切割，不需計算角度，但因為所撰寫的程式以每一步驟作成指
令圖示，所以可以因應各種設計需求來應用，以此設計案為例，在部分步驟的需求下，也可以應用到
自動化程式的輔助，簡化製作過程。 
 
從上述兩個設計案例操作自動化步驟的結果，驗證出本研究初步撰寫的程式：分割、凹槽製作、折版
編號、2D 展開，皆可以滿足骨架與表皮設計操作的需求，但對於夾角計算的自動化程式只有做過多
次測試而在此兩設計案例中沒機會被應用到，因此仍需再未來做進一步驗證其應用性。此外對於骨架
參考文獻 
 
Bechthold, M., Griggs, K., Schodek, D. L. and Steinberg, M. (eds). 2000. New Technologies in Architecture: digital 
design and manufacturing techniques. Cambridge: Harvard Design School. 
Bier, H. 2004. Digital design strategies. 8th International Design Conference DESIGN 2004. Dubrovnik, Croatia. pp. 
123-128. 
Breen, J., Nottrot, R. and Stellingwerff, M. 2003. Tangible virtuality- perceptions of computer-aided and physical 
modelling. Automation in Construction. 12: 649-653. 
Burry, M. 2002. Rapid prototyping, CAD/CAM and human factors. Automation in Construction. 11: 313-333. 
Burry, M. 2004. The Sagrada Familia. Association for Computer Aided Design in Architecture (ACADIA): Digital 
Fabricator. Waterloo, Toronto. Coach House Press. pp. 10-15. 
Cache, B. 1995. Earth Moves: The furnishing of territories. Cambridge: The MIT Press. 
Cache, B. 2002. Gottfried Semper: Stereotomy, Biology and Geometry. Architectural Design (AD). 72(1): 28-33. 
Callicott, N. 2001. Computer-Aided Manufacture in Architecture. Oxford: Architectural Press. 
Castle, H. (ed). 2002. Contemporary Techniques in Architecture. Architectural Design (AD): 72 (1): John Wiley and 
Sons limited. 
Castle, H. (ed). 2003. Surface Consciousness. Architectural Design (AD): 73 (2): John Wiley and Sons limited. 
Ceccato, C. 2004. Digital fabrication vs digital practice. ACADIA: Evolving Tools. Waterloo, Toronto. pp. 38-40. 
Chang, C.-T. 2005. Some phenomena of touch in study model. Computer Aided Architectural Design in Asia 
(CAADRIA). New Delhi, India. pp. 277-287. 
Dritsas, S. 2004. Design Operators. Master thesis. Massachusetts Institute of Technology. 
Dritsas, S. 2004. Universal Design + Case driven computation. Design Computing and Cognition DCC'04. MIT, 
Cambridge, USA. pp. 19-27. 
Fischer, T., Burry, M. and Frazer, J. 2005. Triangulation of generative form for parametric design and rapid prototyping. 
Automation in Construction. 14: 233-240. 
Flutter, A. G. 1972. The POLYSURF System. Computer languages for numerical control. J. Hatvany (ed). Amsterdam. 
North-Holland Company: 403-415. 
Franken, B. 2003. Real as Data. Architecture in the digtal age: Design and Manufacturing. Upenn. Spon Press. pp. 
121-138. 
Friedman, M. (ed). 2002. Gehry Talks: Architecture + Process. New York, NY: Universe Publishing. 
Glymph, J. 2003. Evolution of the digital design process. Architecture in the digtal age: Design and Manufacturing. 
Upenn. pp. 101-120. 
Glymph, J. and Day, M. 2004. Digital project: Gehry Launches Catia-based Solution. AEC Magazine, October. 
Goulthorpe, M. 1999. Hyposurface: from Autoplastic to Alloplastic space. 2nd International Generative Art conference. 
Politecnio di Milano, Milan, Italy. pp. 
Groover, M. P. and Emory W. Zimmers, J. 1984. CAD/CAM Computer-aided design and manufacturing. Englewood 
Cliffs, New Jersey: Prentice-hall Inc. 
Hale, R. E. 1968. Experience of the use of computers during the design and production of components on a large scale. 
Information flow in the building process: Classification and coding for computer useOslo, Norway. Norwegian 
Building Research Institute. 
Hall, P. 2003. Bend the rules of structure. Metropolis Magazine. 
Hensel, M. and Sotamaa, K. 2000. Vigorous Environment. Architectural Design (AD). 72(1): 34-41. 
Mitchell, W. J. 1998. Articulate design of free-form structures. AI in Structural Engineering. Ascona, Switzerland. 
Springer. pp. 223-234. 
Mitchell, W. J. 1998. Change, Time and Speed. Thresholds: Dept. of Architecture, MIT. 16. 
Mitchell, W. J. 2001. Roll over Euclid: How Frank Gehry designs and builds. Frank Gehry, Architect. J. F. Ragheb (ed). 
New York. Guggenheim Museum Publications: 352-363. 
Mitchell, W. J. 2004. Beyond the Ivory Tower: Constructing complexity in the digital age. Science and Society. 303: 
1472-1473. 
Mitchell, W. J. and McCullough, M. 1991. Digital Design Media: A handbook for architects and design professionals. 
New York: Van Nostrand Reinhold. 
Mitchell, W. J. and McCullough, M. 1995. CH.18 Prototyping. Digital Design Media. New York. John Wiley & Sons. 
Mitchell, W. J. and McCullough, M. 1995. Digital Design Media. New York: John Wiley & Sons. 
Mori, T. (ed). 2002. Immaterial: architecture, design and materials: Harvard Design School. 
Murray, P. 2004. The saga of Sydney Opera House: The dramatic story of the design and construction of the icon of 
modern Australia. London: Spon Press. 
Oosterhuis, K., Bier, H., Aalbers, C. and Boer, S. 2004. ONL Architecture. ACADIA/AIA 2004. pp. 
Porter, T. and Neale, J. 2000. Architectural supermodels. Oxford: Architectural Press. 
Ragheb, J. F. 2001. Frank Gehry, Architect. New York: Guggenheim Museum Pubilcations. 
Rahim, A. (ed). 2000. Contemporary Processes in Architecture. Architectural Design (AD): John Wiley and Sons 
limited. 
Rosa, J. 2003. Next generation architecture: Folds, Blobs, and Boxes. New York: Rizzoli International Publications, 
Inc. 
Ryder, G., Ion, B., Green, G., Harrison, D. and Wood, B. 2002. Rapid design and manufacture tools in architecture. 
Automation in Construction. 11: 279-290. 
Sass, L. 2004. Digital design fabrication. Design Computing and Cognition DCC'04. MIT, Cambridge, USA. pp. 
Schmal, P. C. 2001. Digital Real--Blobmeister: first built projects. Basel, Boston, Berlin: Birkhauser. 
Schodek, D., Bechthold, M., Griggs, K., Kao, K. M. and Stenberg, M. 2005. Digital Design and Manufacturing: 
CAD/CAM Applications in Architecture and Design. Hoboken: John Wiley & Sons. 
Seely, J. C. 2004. Digital fabrication in the architectural design process. Master Thesis. MIT. 
Senosiain, J. 2003. Bio-Architecture. Oxford: Architectural Press. 
Simondetti, A. 1997. Rapid prototyping in early stages of architectural design. Master thesis. Massachusetts Institute of 
Technology. 
Simondetti, A. 2002. Computer-generated physical modelling in the early stages of the design process. Automation in 
Construction. 11: 303-311. 
Smith, A. C. 2004. Architectural model as machine: A new view of models from antiquity to the present day. Oxford: 
Architectural Press. 
Snoonian, D. 2003. New Gehry Technologies will enable many to boldly go where only Frank has gone before. 
Architectural Record Innovation, October. 
Spuybroek, L. 2004. NOX: Machining architecture. New York: Thames & Hudson. 
Steiner, R. 2003. Architecture - An Introductory Reader. The Square, Forest Row: Rudolf Steiner Press. 
Streich, B. and Weisgerber, W. 1996. Computergestutzter Architekturmodellbau. Basel, Berlin, Boston: Birkhauser. 
Tsao, S.-W. 2004. Forming Space with Gesture. Master Thesis. Hsinchu: National Chiao Tung University. 
Vitruvius. 1960. Ten Books on Architecture. New York: Dover Publications. 
附錄一 
 
骨架製作自動化操作步驟 
 
1. 分割 的程式碼如下： 
createDisplayLayer -name "L_ref_plane" -number 1 -empty; 
createDisplayLayer -name "L_ref_intersectline " -number 1 -empty; 
string $ref_planes[]; 
string $ref_intersectlines[]; 
string $selected[]=`ls -sl`; 
for ($i=1;$i<=size($selected);$i++){ 
string $ref_plane[0]= `extrude -name refplane1 -ch true -rn false -po 0 -et 0 -upn 0 -d 0 1 0 -length 10 
-rotation 0 -scale 1 -dl 1 $selected[$i-1]` ; 
$ref_planes[$i-1]= $ref_plane[0]; 
select -r ($ref_planes[$i-1]); 
layerEditorAddObjects L_ref_plane; 
string $ref_intersectline[0]= `intersect -n proline -ch true -fs 1 -cos 0 -tol 0.01 ($ref_planes [$i-1]) 
"loftedSurface1"` ; 
$ref_intersectlines[$i-1]= $ref_intersectline[0]; 
select -r ($ref_intersectlines [$i-1]); 
layerEditorAddObjects L_ref_intersectline; 
}; 
 
2. 骨架擠出 的程式碼如下： 
 createDisplayLayer -name "oa_extrude_A" -number 1 -empty; 
 for ($i = 1; $i < size($selected); $i++) { 
 string $curveShape[0] = `listRelatives -s $selected[$i]`; 
 int $degree = `getAttr ($curveShape[0] + ".degree")`; 
 rebuildCurve -kcp 1 -keepRange 0 -d $degree $selected[$i]; 
string $surface[0] = `extrude -ch true -rn false -po 0 -et 2 -ucp 1 -fpt 1 -upn 1 -rotation 0 -scale 1 -rsp 1 
-name ($profile[0] + "_" + $selected[$i] + "_extrude") $profile[0] $selected[$i]`; 
 $surfaces[$i - 1] = $surface[0];   
select -r ($surfaces[$i - 1]); 
layerEditorAddObjects oa_extrude_A; 
 if ($caps == 1) { 
  int $spans = `getAttr ($surface[0] + ".spansV")`; 
  select -r ($surface[0] + ".v[0]"); 
catch (`planarSrf -name ($surface[0] + "_cap1") -ch 1 –d 3 -ko 0 -tol 0.00393701 -rn 0 -po 0`); 
  select -r ($surface[0] + ".v[" + $spans + "]"); 
catch (`planarSrf -name ($surface[0] + "_cap2") -ch 1 –d 3 -ko 0 -tol 0.00393701 -rn 0 -po 0`); 
  parent ($surface[0] + "_cap1") ($surface[0] + "_cap2") $surface[0]; 
附錄二 
  
折板表皮製作自動化操作步驟 
  
1. 折板編號 主要程式碼如下： 
string $selected[]=`ls -sl`; 
for ($i=0; $i< size($selected); $i++) { 
rename $selected[$i] obj1; 
}; 
string $selected[]=`ls -sl`; 
for ($i=0; $i< size($selected); $i++) { 
float $XYZ[] = `objectCenter -l ($selected[$i])`; 
float $anno_x = $XYZ[0]; 
float $anno_y = $XYZ[1]; 
float $anno_z = $XYZ[2]; 
annotate -tx $selected[$i] -p $anno_x $anno_y $anno_z ($selected[$i]); 
string $r = $i+1; 
string $annotation_name[]={"annotation"+$r}; 
parent  ($selected[$i]) ($annotation_name) ;   
}; 
 
2. 夾角計算 主要程式碼如下： 
string $selected[]=`ls -sl`; 
for ($i=0; $i< size($selected); $i++) { 
select -r ($selected[$i] + ".vtx[0:3]"); 
string $selectedCV[] = `ls -sl -fl`; 
float $pos3[] = `pointPosition -w $selectedCV[3]`; 
float $point_a_1_0 = $pos3[0]; 
float $point_a_1_1 = $pos3[1]; 
float $point_a_1_2 = $pos3[2]; 
……………………………………………............ 
vector $plane_a_line_uv1=<<$point_a_2_0-$point_a_1_0, $point_a_2_1-$point_a_1_1, $point_a_2_2 - 
$point_a_1_2>>; 
vector $plane_a_line_uv2=<<$point_a_3_0-$point_a_1_0, $point_a_3_1-$point_a_1_1, $point_a_3_2 - 
$point_a_1_2>>; 
vector $plane_a_uv = << ($plane_a_line_uv1.y) * ($plane_a_line_uv2.z) - ($plane_a_line_uv1.z) * 
($plane_a_line_uv2.y), - (($plane_a_line_uv1.x) * ($plane_a_line_uv2.z) - ($plane_a_line_uv1.z) * 
($plane_a_line_uv2.x)), ($plane_a_line_uv1.x) * ($plane_a_line_uv2.y) - ($plane_a_line_uv1.y) * 
($plane_a_line_uv2.x)>>; 
……………………………………………............ 
float $a_dot_b = ($plane_a_uv.x) * ($plane_b_uv.x) + ($plane_a_uv.y) * ($plane_b_uv.y) + ($plane_a_uv.z) 
* ($plane_b_uv.z); 
