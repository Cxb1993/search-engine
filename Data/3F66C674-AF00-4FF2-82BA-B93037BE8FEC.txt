 II
 
中文摘要 
 
分子生物學上，由於高產量技術的發展，各種生物的蛋白質交互作用的資料大量產生，提
供系統生物學研究的基本資料。一個生物體內的蛋白質交互作用資料構成一個巨大的交互作
用網路，其節點數動則以千計。要深入分析這些資料需要將這些資料適當的視覺化。本計畫
的目的在於研究適合蛋白質交互作用網路圖的繪製方法與發展其軟體。目標在於建立一個繪
圖系統雛形與繪圖階層式架構演算法的設計與實做，這包括繪圖所需的基本操作功能、一個
網路圖的分割方法的實做、一個類樹狀圖與團塊圖的收縮演算法的實做與 spring-embedder 演
算法與一個樹狀圖配置演算法的實做。並探討實際圖形配置上引發的有限空間下，良好繪製
樹狀圖的問題。我們設立多個美學規則並將之量化為目標函數，因而將問題轉化為一個最佳
化問題，並設計一個基因演算法來解決此最佳化問題。實驗上在 100, 200, 300 節點的樹狀圖
在各種直角多邊形上其配置結果良好。 
 
 
Abstract 
 
Due to the development of high throughput technology, huge amount of protein-protein 
interaction data of various organisms are generated that form the basic data for the research of 
systems biology.  By taking a protein as a node and an interaction as an edge, the protein-protein 
interaction data of an organism forms a huge network with over thousands of nodes.  A 
visualization tool for those graphs is essentially needed to help the research work on these 
interaction data.  The goal of this project is to design and develop graph drawing methods and 
software for the protein-protein interaction networks. 
In this project, we have developed a prototype of network drawing system, which includes 
implementation of basic operations on network drawing, a network decomposition algorithm, a 
contraction algorithm for tree-like and clique-like subgraphs, and a basic spring-embedder 
algorithm for general graph and a drawing algorithm for tree network. Also, we investigate the tree 
network drawing problem within a restricted area.  For this problem, we transform it into an 
optimization problem through the design of objective functions of aesthetics rules and design a 
genetic algorithm to solve the optimization problem.  The drawing results are good in our test tree 
networks of 100, 200, and 300 nodes and many different shapes of rectilinear polygon.   
   
 
 2
討一個生物體生化上的整體運作。在此計畫
我們就是要研究設計一個圖形繪製系統，讓
使用者可以做全域性的觀察。 
 
2. 研究方法 
 
系統實做 
 一個巨大的網路圖其節點數與邊數龐
大，如果在螢幕上完全顯示出來，整個畫面
充滿節點與邊，就算有結構的呈現圖形也會
模糊不清，無法經由是覺得到資訊。通常在
節點數控制在兩三百點以內，而且有結構的
呈現圖形是視覺尚可接受的。對於這個問
題，我們使用兩種方式降低畫面上的節點
數，也同時降低可能的邊數。（一）我們發
現在蛋白質交互作用網路上有許多類似樹
狀圖（tree like subgraph）或是接近團塊圖
(complete subgraph)的子圖。在系統中我們
將這樣的子圖先收縮到其父節點。在圖形繪
製時，這兩種圖形的有配置良好的繪圖演算
法。（二）在經過（一）收縮程序後的圖形，
依其結構做適當階層式的分割，將分割後的
單元圖形以一個超節點來代替，形成一個階
層式的圖形表示以超節點的樹狀結構表
示。如下圖所示，圓形代表（二）中形成的
超節點，方塊表示（二）中的單元圖形，三
角形代表在（一）收縮的類樹狀圖或是團塊
圖。在圖形顯示時依據觀察者的需要，展開 
 
 
 
 
 
 
 
 
 
 
 
 
        圖 2. 顯示截面示意圖 
一部份細部的圖形，也顯示與超節點之間的
關係。粗橫虛線代表在階層式架構下要顯示
的圖形。有的部分只顯示其超節點，有的部
分顯示其單元子圖，有的部分將其收縮子圖
也展開來。圖形顯示的過程是漸進的，也就
是說，觀察者在過程中可以依據需要展開或
是收縮一個超節點。 
 我們首先發展一個繪圖的雛形系統以
支援這個階層式圖形顯示的想法，也作為各
種巨大圖形特性的觀察工作與後續發展新
的繪圖演算法的實驗平台。雛形系統的架構
如下圖，重要的包含繪圖模組、分析模組、
配置模組與操作介面這幾個模組。 
 
 
 
 
 
 
 
 
 
 
        圖 3. 系統結構圖 
 
繪圖模組:繪圖模組的工作是根據節點或邊
屬性不同給予不同的顯示。例如一般節點，
切點以不同顏色來顯示以分別。收縮點依其
代表的收縮子圖的大小用大小不同的圓點
來顯示。或是一個接近團塊圖的子圖，用其
補位圖（complement graph）來顯示。都是
繪圖模組的工作。 
  
      補位圖        收縮節點的顯示 
              圖 4. 
輸入輸出 
階層式結構 
繪圖 
模組 
繪圖 
平面 
分析模組 
配置模組 
操作介面 
 4
3. 切點集大小： 
其目標函數設為其集合大小 
| |C .                    (0.3) 
 
而總目標函數為以上三函數的加權和。權值
越小的分割代表其在單元子圖大小，平衡性
與切點集大小方面越符合期望。 
 分析模組可以採用其他的網路圖收縮
與分割的方法。 
 
配置模組：配置模組的工作是圖形的配置，
要處理階層式的各種顯示的圖形配置。依循
階層式顯示與網路收縮與網路分割的動
作，配置模組提供兩個圖形配置的方法。 
1. 經過收縮與分割後的網路圖的圖形配
置： 依據分割的階層式結構與欲顯示的
網路圖，將節點配置在顯示平面上。基
本的作法是先配置分割結構底層的單元
子圖。因其連結性高，需將其節點放置
在一起然後以 spring-embedder 演算法來
繪製其網路圖，再將幾個同層次的單元
子圖配置在相對接近的位置，再次用
spring-embedder 演算法繪製整個網路
圖，依此步驟繪製至整個欲顯示的網路
圖。在此步驟結束，所繪製的是收縮後
欲顯示的網路圖。以上在本系統中在每
一個小步驟所使用的繪製法是最基本的
spring-embbedder 演算法，由於節點在階
層式分割中以作適當的分類與集結，減
少許多不必要的邊交叉情形，使用
spring-embbedder 演算法相當合適。將來
也可以其他適當的繪製演算法取代。 
2. 在前一步驟繪製的網路圖上，下一步驟
勢將收縮的子圖展開並繪製。關於收縮
子圖的繪製，將團塊子圖視為一個超節
點，基本上可以將收縮子圖視為一個樹
狀圖。本系統提供一個繪製樹狀圖的演
算法。收縮子圖是一個有根樹狀圖。此
繪製方法是將離樹根相同距離的節點放
在同一水平線上，故配置出來的圖形深
度是固定的，圖形配置的目標是讓其寬
度越小越好。我們採用的方法，遞迴地
由樹葉做上來。在處理一個節點的各子
節點代表子圖的排列時，假設各子圖已
經配置好了，有各個階層的左右區間。
此時將每一個子節點 v 以兩個點 vleft與
vright分別代表其左半邊與右半邊。以
{vleft,vright|v 為所有的子節點}為節點集
建立一個圖。在此圖形中任意兩個子節
點 u 與 v, uleft, uright與 vleft, vright都有邊相
連，邊（uleft, vleft）上的值為 u 代表的子
圖配置的左邊與 v 代表的子圖的左邊相
鄰擺在一起時會縮小的寬度。邊（uleft, 
vright）,（uright, vleft）,（uright, vright）上的
值同理代表各個情形的縮小寬度。（uright, 
uleft）上的值設為一個極大的值。在此圖
形上，如果找到一個最大值的
hamiltonian path，此 path 即代表一個子
節點最好的排列讓整個樹狀圖有最小的
寬度，因為他有最大的寬度縮小總量。 
在得到最小寬度的樹狀圖配置後，將依其根
節點所在的位置，做適當的旋轉與縮放配置
進已有的圖形配置中。在此步驟引發兩個配
置上的問題。一是根據欲展開的收縮子圖的
大小與形狀，在第一步驟中在其根節點附近
預留適當的空間。二是在限制的空間中如何
良好的繪製樹狀圖。在此報告的後段我們將
詳細的報告我們對第二個問題的作法。 
 
 
 
 
 
 
 
 
 
 
 
 
                圖 5. 
 
V U
V.G U.G
深
Pare
…… …
left leftright right
 6
3. 邊的分離性（edge crossing）：圖形中邊
盡量不要有交錯的情況產生。如果有太多
交錯的邊存在圖形中，會使節點間的關係
無法清楚呈現。在圖 9(a), (b)中我們可以看
出在相類似的樹狀結構下，有產生邊交錯
的圖形明顯地讓圖形看起來比較混亂。 
 
   
(a)                (b) 
圖 9. 邊的分離性 
4. 節點與邊的間隔性（node-edge distance）: 
由於圖形中節點與邊是主要的元件，當
某節點與邊太過靠近時，容易造成此節
點跟邊所連結的兩個節點間關係的混
亂，因此節點與邊之間要保持一定的距
離。在圖 10(a)中節點和邊的距離太近，
會讓樹狀圖中節點間的關係不夠明確，
然而在圖 10(b)中由於節點和邊保持一
定的距離，樹狀圖中各節點的關係就比
較清晰。 
    
(a)                (b) 
圖 10. 點與邊的間隔性 
最佳化問題模型 
圖形繪製的問題會因為不同的問題需求而
有相對應的美學規則，因應電腦自動圖形繪
製，美學規則需要量化用以衡量一個圖形符
合此美學規則的程度。所謂美學規則的量化
通常是指為其設計一目標函數，將以圖形繪
製結果的函數值大小來決定符合美學規則
的程度。然後將各項美學規則所對應的目標
函數，應問題的需求做加權加總，進而將問
題轉換成一個加權加總目標函數的最佳化
問題。當此最佳化問題的目標函數極小值出
現時，所相對應的圖形配置即為所求。適當
的美學規則與適當的目標函數再透過適當
的加權才可以得到我們理想中優良的繪製
結果。 
美學規則的量化是解決圖形繪製最佳
化問題模型的第一步，我們曾經提到圖形的
繪製提到四項美學規則 1. 節點分佈的均勻
性（node distribution）2. 邊長的一致性（edge 
length）3. 邊的分離性（edge crossing）4. 點
與邊的間隔性（node-edge distance）。我們
在提出的演算法中使用八個美學規則，包括
前面提到的四個美學規則。 
 
規則一：邊的分離性 
一個圖配置的優劣很明顯的跟圖形結構
中邊之間交錯次數相關。產生交錯的邊
越多，圖形中節點的關係就看來越混
亂。此規則的目標函數 1A 定為邊與邊的
交錯次數。 
1A =邊與邊的交錯次數。 
規則二：邊與角多邊形之邊的分離性 
由於是將樹狀圖配置在一個限制的直角
多邊形之中，所以並不希望樹狀的邊和
直角多邊形的邊產生交錯的情形。此規
則的目標函數 2A 為邊與直角多邊形之
邊的交錯次數。 
2A =邊與直角多邊形之邊的交錯次數。 
規則三：節點分布的均勻性 
ㄧ樹狀圖的節點在直角多邊形中是否分
佈均勻，也就表示空間使用率的好壞。
TGDA 中令圖形中任兩節點之間皆存在
一個斥力，且距離越近斥力越大。此斥
力大小為 222
1
ji
ij
ww
d
×× ，其中 iw 與 jw
 8
 
圖 12. 直角多邊形的切割 
每項美學規則對配置的好壞都有其比
重，適應值函數即是根據這些比重和目標函
數的加權總和，然而在空間的使用效率由於
會因不同大小的樹狀圖和不同形狀的直角
多邊而產生不同的效果，因此我們設定前七
項美學規則分別乘上其權重值所得之和，乘
上 8A 倍當作我們的適應值函數。
)1(
7
1
8 ∑
=
+×=
i
ii AWAF   //其中 iiw A為 之權
重值。表 1 為 TGDA 所使用的美學規則以
及權重值的設定。 
 
 
表 1 美學規則的權重值 
我們所提出的直角多邊形內樹狀圖的
繪製演算法是結合力導向演算法和基因演
算法以便可以在有限空間中迅速繪製出清
楚的樹狀圖形。因為在樹狀圖節點數少的時
候，繪製的效果會比較好，不容易出現邊交
錯的情形。我們的繪製演算法採用階層式的
繪製法。首先不斷將樹狀圖的葉節點（leaf 
node）收縮至其相鄰節點，得到新的樹狀圖
後，在將新的樹狀圖的葉節點收縮，不斷重
複此步驟至到樹狀圖剩下一點或一邊為
止，然後在逐層的展開並使用族群基因演算
法作繪製，而圖形展開的動作是將原本被收
縮的節點展開至原來初始的配置座標上。  
 
圖 13. 階層式繪製流程圖 
 
基因演算法 
 
圖 14. 基因演算法流程圖 
基因演算法是由 Holland 於 1975 年
首先提倡[7]，仿效達爾文的進化論中適者生
存法則。在基因演算法中，我們將所要解決
的最佳化問題之可行解類比成生物界中的
 10
制，也是提供一個跳出目前搜尋空間避免落
入局部最佳解的方式。在 TGDA 中，突變
方式是採用單點突變的方法，也就是針對一
個點的點座標做突變，而點座標改變到某個
新座標的機率會依據目前在直角多邊形中
點分佈的密集度不同而有所調整，希望點座
標突變到一個點密集度低的區域會比突變
到一個點密集度高的區域機會來的高，這裡
所指的區域是在空間使用效率的美學規則
中我們切割直角多邊形，所產生的子多邊
形。 
 
終止條件： 
基因演算法之終止條件可以分為以下
兩種：(1)設定基因演算執行的世代數，當
達到規定的世代數，則停止基因演算法的運
作。此優點為能控制計算時間，但無法確定
是否收斂能夠找到最佳解。(2) 設定適應值
函數的目標值，若達到目標值則停止運作。
此方式能確保求解的品質，但是必須要先知
道目標值的範圍，否則演化永遠不會結束。 
TGDA 基因演算法的終止條件是設定經過
給定數目的世代演化後停止。 
 
在以上的演算法 TGDA 中，在美學規則的
目標函數、基因運算上可以作進一步的改良
以獲致較高的繪圖品質與較快的演算法。經
改良後的演算法稱為 ITGDA。 
 
美學規則目標函數的改良 
在之前 TGDA 對節點分佈的均勻性所
設計的目標函數，是令圖形中任兩節點之間
皆存在一個斥力，且距離越近斥力越大。樹
狀圖中節點的配置是必須受其他節點位置
的影響，這樣的想法雖然合理，但是在圖
16 中，假設點 a 為欲配置的節點，X 為距離
點 a 較近的節點集合，Y 為距離點 a 較遠的
節點集合，在圖形上點 a 原則上會受 X 集合
的斥力排擠而向 Y 集合移動，然而由於 Y
集合可能過於龐大所產生的斥力總和反而
大於 X 集合所產生的斥力，造成點 a 反而向
X 集合移動。因此比較合理的設計應該是距
離欲配置節點太過遙遠的點是不能影響此
節點的配置，只有在欲配置節點的某個距離
內的其他節點才會影響此節點的配置。故我
們替每一個節點建立其自己的勢力範圍，只
有當節點的勢力範圍中有其節點入侵時，才
會有斥力的產生。 
假設欲配置的樹狀圖的節點總數為 n，
且令 Area 表示直角多邊形的面積，因為每
一個節點的勢力範圍都以一個圓面積來表
示，因此勢力範圍的半徑 r 應是 
π
π
×≅
≅××
n
Arear
Areanr 2
 
 
 
圖 16. 美學規則示意圖 
 
   (a)                 (b) 
圖 17. 節點勢力範圍 
            
           圖 18. 圓形勢力範圍面積 
 12
       (a)                 (b) 
    
 (c)                (d) 
圖 21. 100 點配置圖的比較(2) 
在圖 21(a), (c)，我們可以發現直角多
邊形內除了有少數的空白區域沒有被使用
到外，在(a)中有些區域裡面雖然有節點分
佈，但卻分佈的相當稀疏，空間的使用上也
不夠理想。而(c)中我們覺得在靠多邊形左邊
的樹狀圖配置受限於多邊形的形狀而顯得
不夠自然。反觀圖 21(b), (d)我們所配置出來
的圖形就沒有上述的缺點。 
    
       (a)                 (b) 
  
(c)                  (d) 
圖 22.  200 點配置圖的比較 
TGDA 在繪製節點數目較多的樹狀圖
時，常會發現樹狀圖沿著直角多邊形的邊緣
擴張，如圖 22(a), (c)，雖然在視覺上，感覺
有把直角多邊形填滿，但相對的讓人覺得樹
狀圖的生長似乎受到多邊形的邊界的侷
限，而使得樹狀結構顯得不夠自然。圖 22(b), 
(d)中，是在相同的 200 點樹狀結構進行繪
製，我們所繪製出來的結果可以看出樹狀圖
沿著直角多邊形的邊緣擴張的情況明顯的
改善，配置的結果也感覺比較自然。這是因
為我們強調只有當節點的勢力範圍有其他
節點落入時，才會有斥力的產生，然而在
TGDA 中並沒有考慮勢力範圍的概念，任兩
節點間都會有斥力產生，造成樹狀圖最外層
的節點，會受內層所有節點所產生的斥力影
響，而往直角多邊形的邊緣貼近。 
   
       (a)                  (b) 
   
(c)                  (d) 
圖 23.  300 點配置圖的比較 
我們觀察 TGDA 所繪製的 300 點樹狀
圖，在圖 23(a)中，樹狀圖為了適應直角多
邊形的形狀，導致節點間的邊長並沒有保持
一致的長度，有過長的現象存在，然而在圖
23(b)我們所繪製出來的 300 點樹狀圖，邊長
的長度比較一致。圖 23(c)中的樹狀圖雖然
邊長沒有過長的現象，然而分佈上卻相當不
理想，尤其是我們所標記的分支，配置的情
況更是不自然，相較於圖 23(d)，我們所配
置的圖形明顯就比較適當。 
導入節點勢力範圍後的美學規則，讓
我們所繪製出來 100 點、200 點和 300 點樹
狀圖整體上都比 TGDA 繪製出來的結果
佳，尤其是在不同直角多邊形上，我們不僅
利用了多邊形中每塊空間，且樹狀圖在不同
多邊形的配置也比較自然。 
 
 14
 
         (a)                       (b) 
圖 27 我們交配方式所產生的子代樹狀圖(2) 
 
突變運算的改良 
TGDA 的突變方式是對一個節點的座
標位置作改變，而節點座標改變到某個新座
標的機率會依據目前直角多邊形中點分佈
的密集度不同而有所調整，節點座標突變到
一個點密集度低的區域會比突變到一個點
密集度高的區域機會來的高。這樣的想法雖
然合理，但是 TGDA 的突變方式沒有考慮
到此節點與其他的節點之間的連結關係，倘
若此節點的新座標位置離原本的座標太
遠，這樣的突變方式反而破壞原本的樹狀結
構。如圖 28(a)所示，我們只針對節點 3 做
突變，並未考慮與節點 3 相連的其他節點，
這樣的突變反而產生許多交錯的邊，如圖
28(b)。且僅針對單一節點做其座標位置的改
變，對於節點數目較多樹狀圖而言，改變的
幅度並不夠大。 
 
      (a)                 (b) 
圖 28. 突變後的樹狀圖 
為了讓樹狀圖可以藉由突變產生較大的變
異，且在突變時盡量不會破壞原本的樹狀結
構，因此我們希望可以同時針對較多節點的
座標位置做改變，且這些節點間彼此應該有
連通性的存在。所以我們仿照交配運算中選
擇子樹的方式，我們在圖 28(a)選取出一個
子樹來進行突變的動作，假設所選取的子樹
為節點編號 3，6，7，8 所形成的子樹，節
點 A 與其他相鄰的節點為 1，2，4，5，會
形成 4 個象限，並將直角多邊 
形切割成 4 塊子多邊形 4321 ,,, SSSS 。令 iA 表
示 iS 之面積， iN 表示 iS 內 
的節點數目。
i
i
i N
AW = 表示在子多邊形 iS
內，每一個節點所佔的面積。節點突變到 iS
的機率應與 iW 成正相關，則節點突變到 iS
的機率為
W
Wi ，其中 ∑
=
=
4
1i
iWW 。突變的方
式，是先將我們所選擇的子樹中與樹根 A
相連的節點，按照 iS 的機率進行單一節點的
座標位置改變，假設節點 3 原本座標為
( )yx, ，突變後節點 3 的座標為 ( )'' , yx ，計算
出所旋轉的角度 
後，將所選取的子樹依此角度所旋轉。突變
後的樹狀圖，如圖 29 所示。 
這樣的突變方式不僅可以讓樹狀圖產生較
大的變異，且所挑選出來的連通子圖在突變
時也比較不會破壞原本的樹狀結構。 
 
圖 29. 突變後的樹狀圖 
4.3.3 實驗結果比較 
為了比較我們所設計的交配以及突變
的方式跟 TGDA 所用的方式在樹狀圖演化
上的差異性。我們隨機產生 20 棵 100 點的
樹狀圖當作測試資料，並分別以不同的交配
 16
 
   表 8.  不同基因運算下的成功率比較(4) 
 
 
  表 9.  不同基因運算下的成功率比較(5) 
 
 
表 10.  不同基因運算下的成功率比較(6) 
 
     圖 31 為不同交配運算下在不同階層
時，交配的成功率比較。圖 32 為不同突變
運算下在不同階層時，突變的成功率比較。
圖 33 為不同基因運算下在不同階層時，適
應值的比較。 
 
圖 31.  交配運算成功率比較 
 
圖 32.  突變運算成功率比較 
 
圖 33.  適應值比較 
 
3. 結果與討論 
到目前為止已建立整個網路圖繪圖系統
的基本架構與雛形。一些基本的圖形操作功
能已經建立，這將使未來發展更進一步的繪
圖演算法時所需要的結果觀察會更加方便
容易。 
系統中兩個最重要的模組為分析模組
與配置模組，已分別有初步的演算法實做在
這兩個模組。在分析模組中圖形收縮的演算
法在效率上沒有問題，可是在網路圖分割方
面，雖然已提供一個分割方法，但在效率上
仍需要改進。另外，在圖形的分割上向有許
多其他因素與方法可以考慮，仍有很大的改
善空間。在圖形配置模組方面已提供了最基
本的 spring-embedder 演算法，需要再結合
圖形結構的分析產生吻合結構的起始配置
方可使圖形配置更加完善。在收縮類樹狀子
圖與團塊圖的展開上，兩個問題需要解決。
一個是展開空間的保留，另一個是發展新的
樹狀圖配置演算法。關於第一個問題應該在
可以在改良 spring-embedder 演算法著手，
關於第二個問題由於在實際情形下樹狀圖
或團塊圖的展開空間受到整個網路圖已有
的配置的影響將有其限制，因此我們探討有
空間限制下的樹狀圖配置問題。我們將配置
問題透過美學規則轉換成目標函數進而變
成一個最佳化問題並提出了一個基因演算
法來解決此一問題。透過初始化，目標函數
的精巧設計，與基因運算的改良，此基因演
