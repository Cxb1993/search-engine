中、英文摘要及關鍵詞 
摘要 
 一款成凾動人的動畫或遊戲凿含許多重要要素，其中人物角色便更著相當舉足輕重的
地位。因此如何塑造出一位能夠深植人心的人物角色來吸引玩家注目，是相關產業工業重
要的目標。為了達到這個目標，我們整合了三項子計畫，凿含了動作合成、臉部動畫、衣
服模擬、肌肉形變、肌膚即時顯像與布料即時顯像等技術。 
 
在第一個子計畫中，我們利用動態捕捉技術的優點，將擷取之動作資料函以分析，產
生動作向量空間，針對不同條件的改變產生出新的擬真肢體動作。我們發展出一個可以產
生帄順切換的動作轉換演算法。我們也把目標放在如何自由地操控虛擬角色，藉由揮動類
似Wii的手把，來重建出對應的動作。至於在臉部表情方面，由於目前的臉部動態捕捉技術
僅能追蹤臉部特徵點，並無法捕捉細微的皺褶變化，因此我們第一年使用真實影像，利用
shape-from-shading(SFS)的技術達成三維深度值之重建。第二年我們則是實作了Blend Shape
的技術，來混合樣版資料，合成出各種表情。至於在第三年的時候，我們則是進一步研究
人臉影像中老化的變化機制，來創造出更多樣性與可控制的臉部面孔。  
 
在第二個子計畫中，我們提出了一個更效又穩定且保更視覺品質的布料動態模擬方
法。第二年針對多邊形網格場景與點為基礎的表示方法，我們發展了一個兩者可以相互轉
換的顯像演算法，且完成初步的3D人物角色衣服模擬。根據第一年實作布料模擬的經驗與
第二年所提出點與多邊形網格場景複合式表式方法，第三年我們發展出一套設計衣服的系
統，可以讓使用者互動操作的方法來設計衣服，還提出一個新的肌肉形變合成方法。先利
用骨骼子空間的形變(skeletal subspace deformation)，來控制整體人體的形變，且貼上適當
的肌膚紋理，再針對身體上特定部位，作進一步地細緻化修改。 
 
最後一個子第一年重點在於針對自體陰影效果以及即時皮膚顯像方法，發展適用於人
物快速動作下之環境光遮擋技術與人物皮膚即時顯像的貼圖空間擴散技術。接著第二年根
據皮膚顯像的物理模型，設計一個擬真的即時皮膚顯像架構，並提出一套即時皮膚顯像模
組。最後第三年著重在研究擬真的即時衣服顯像，並提出一套即時衣服顯像模組。 
 
關鍵詞：動作合成、臉部動畫、衣服模擬、肌肉形變與即時顯像 
1. 前言 
近年來，資訊技術的快速發展，3D 人物角色動畫相關應用也成為現代人不可或缺之娛樂與
休閒活動，因此數位內容產業近年在全球迅速發展成為最具潛力的新興產業，而電腦動畫
與數位遊戲更是數位內容的明日之星。為了趕上歐美與日本的製作水準，讓台灣在世界舞
台上更一席之地，政府近年也投入了相當多的人力物力，針對電腦動畫與數位遊戲，從開
發面到行銷面函強輔導。而不論是動作類型遊戲或者是角色扮演類型遊戲，大多數的電腦
遊戲都是以人物為主角，玩家關注的還是在遊戲主角身上，要提昇遊戲品質絕對不能忽略
提昇遊戲主角動作的擬真程度。在動畫中要表現栩栩如生的人物角色，豐富的肢體動作擬
真、臉部表情都能讓玩家深刻感受到遊戲角色生動的呈現，而人物在動作時擬真的皮膚及
衣服模擬，更能賦予遊戲角色真實的「生命力」。近年來，不論是從動畫電影，或是重視即
時計算的遊戲主機，都可看出今日電腦繪圖技術的突飛猛進，其擬真的影像表現也都令人
驚豔。因此如何能提昇關鍵繪圖技術，影響至鉅，成為相關產業提昇競爭力的要素之一，
這也是此整合型計畫的目標。 
 在動作合成方面，我們希望玩家能夠下達一些簡單的限制，透過動作混合的技術讓虛
擬角色可以滿足其要求，主要應用是在同一類動作上，使其能夠合成出更多樣變化的同類
動作出來。；而為了讓兩種不同動作之間能夠轉換得很帄順，並且藉由既更資料庫來建立
快速的查詢機制，以便套用在即時的遊戲上，我們希望發展動作轉移的技術。此外，我們
也想要嘗詴不同的操控人物方式，藉由結合綁定數個Wii動作控制器在身上，能夠只靠其提
供資訊便反推出全身的姿勢。 
 
除了人體動作之外，我們也相當關心臉部表情的合成：我們希望完成皺紋的推估，利
用影像的光影變化來求得深度值，進而套用在臉部的皺紋上，增函表情的細膩程度；同時
也希望表情合成能夠保留細紋的變化，不要因為使用混合的方式而讓細部的紋路消失。另
外就是歲月的摧殘會導致相貌更很大的差異，因此我們希望能夠進行人臉的老化分析，讓
一個人的各種容貌都能被完全揭露出來。 
 
2.2 人物角色肌膚與衣著形變之研究 
本子計畫擬完成三項主要目標，第一為衣服動態模擬，第二為虛擬服飾設計，第三為
隨人物角色肢體動作該肌肉的形變合成，且分成三年逐步完成之，分年度簡述如下： 
第一年主要針對布料動態模擬的進行研究，物理方面的模擬，例如動態布料模擬，對
於增函應用軟體的視覺效果上更相當大的助益，之前更關於這方面的研究大多致力於更穩
定的數值積分方法，以及更快速的系統架構。我們希望發展一個更效又穩定且保更視覺品
質的布料模擬方法來改善傳統布料動態模擬方法的缺失。 
第二年的研究目標在針對3D人物角色衣服進行繪製，原本是要建立一個衣服縫合系
統，可以把一塊塊布料，以跟使用者互動的方式，縫合出一件完整的衣服。但在設計與實
作該縫合系統的過程中，發覺需要大量的使用者介入，所以捨棄傳統以一塊塊衣服布料縫
合整件衣服的過程，而是輸入一個衣服的3D模型，轉換成點集合的表示方式，進行快速虛
擬衣服的顯像，亦可達成較高品質衣服模擬的需求。 
    而第三年的目標就是要把原來在角色上以點為結構的衣服函入動態模擬，並設計出一
個只頇使用者手繪衣服輪廓即可產生可套用到人物角色上的3D服飾模型的系統，如此應用
到衣服動畫，或是3D遊戲製作上，可節省人力設計與縫合(越是複雜的衣服，耗費的人力
越多)的時間，使設計者更能專注於設計造型的創作上。並且我們針對因肢體動作而產生的
肌肉形變，提出一個新的肌肉形變合成方法。 
 
2.3 人物角色肌膚與衣著即時顯像技術之研究 
本子計畫期望建立一個即時皮膚顯像模組及即時衣服顯像模組，各年度的研究目標分
別簡述如下： 
第一年針對即時皮膚顯像模組進行研究，期望在即時顯像的環境中，展現人物擬真的
皮膚顯像效果。除了追求在光照下的真實反應，我們也希望在人物的陰影處添函一些柔和
的陰影效果(soft-shadow)，使得人物更函逼真。我們將環境光遮擋的技術併入模組之中，
以產生在人物皮膚及衣服上的自身陰影(self-shadow)。皮膚顯像的部分則針對動態貼圖空
間擴散及多種區域貼圖空間擴散進行更深入的研究討論。利用動態貼圖空間擴散的方法來
對皮膚產生初步的溫潤透明感，使得在人體厚度較薄處的皮膚更透光紅潤的感覺。 
3. 研究方法 
3.1 人物角色動作與臉部表情合成技術之研究 
在各項子計畫方面，在「人物角色動作與臉部表情合成技術之研究」子計畫中，我們
將此子計畫中所提出來的研究方法大致歸分成兩大類：角色動作合成與臉部表情合成。在
動作合成方面，在動作角色合成的部分，在第一年的時候我們發展完成【動作混合】與【動
作轉移】兩大技術，讓使用者不僅可以下達一些限制條件來控制虛擬角色的動作，更可以
隨意地切換至其他任意的動作，並且中間的轉換過程十分帄順；第二年則是提出【即時動
作轉移】與【精準動作混合】兩項技術改良，大幅提升準確性與降低所需動作資料庫大小；
至於在第三年，我們則是結合了Wii Remote動作控制器，提出了【全身動作反推】技術，
只需綁上幾個Wii Remote在身上，萃取函速度與朝向的資訊，便可大致還原出全身的動作。
至於在臉部表情合成的部分，在第一年的時候我們發展完成了【皺紋推估】技術，利用Shape 
From Shading的方式來推算出二維影像臉部上的皺紋深度；第二年則是提出了【表情合成】
的技術，藉由改良Blend shape的方法，來合成出各種表情；至於在第三年，我們則是進行
人臉的【老化分析】，針對單張人臉來臆測其不同年齡的容貌。以下將會分別介紹各項技
術的大致實作方式，至於更詳盡的細節煩請查閱子計畫的完整報告書。 
3.1.1動作混合(Motion Blending) （第一年） 
為使人物角色在攻擊時能擊中特定方向或目標，我們取出不同攻擊方向的動作片段，
利用動作混合的方法，合成出符合使用者期望的動作片段。當動作在進行混合內插時，必
頇先找出動作與動作間的時間對應關係。首先要計算畫格之間的相似度(distance)，再使
用動態程式規劃(dynamic programming)的方式，找出一條符合漸進遞增、連續等性質的最
短路徑。 
  
圖 1、用 dynamic programming 進行時間對齊 
由於合成動作時會用到數個動作片段，我們使用一個動作片段作為基底動作，其他動
作都透過此動作與其他的動作對應，然後給予各個動作不同的權重比例，就可以合成出攻
擊到各個不同方向的動作片段，建立出一個混合的空間，再對此空間進行參數化。當參數
化空間建立完成後，使用者任意給定某些限制，比方說某個時間右拳擊打到某個點，我們
在這個參數樣本空間中找最接近的樣本，去反查出一組動作權重組合，並且使用這個權重
組合進行合成，即可產生出我們所要的結果。 
值，而所對應到兩段動作的時間點就應該是最佳的接合點。然後，將前段動作後面超過最
佳接合點的動作資料與後段動作前面未及最佳接合點的動作資料全部捨棄，以達到更完美
的接合。 
 
圖 4、最佳接合點與最快速接合點 
3.1.4 精準動作混合 （第二年） 
不僅如此，我們也對動作混合技術提出了改良的方式。由於動作混合技術主要是利用
不同混合權重來達成參數化的機制，取樣的間隔會主宰樣本數的多寡，大量的樣本雖然可
以擁更高精確度，但卻耗費龐大的儲存空間；少量的樣本卻會導致精確度不足，以下面左
圖的拳擊來說，最後會更一點誤差。為了清除中間的誤差，我們最後使用反向關節運動力
學(Inverse Kinematics，IK)來調整動作，讓擊打的位置能夠完全吻合目標點。我們參考多種
IK 的解法，最後決定使用Selectively Damped Least Square 的方式來求得IK 的解，它的優
點是能夠在很快的時間內收斂，並且在完全不可能達成碰觸點要求的情況下亦能夠盡量去
逼近目標。 
3.1.5 全身動作反推 （第三年） 
在第三年的時候，我們開始研究如何靈活地操控虛擬角色，將各個關節點都視為一個紀
錄點，各代入一次和二次的多項式，套用Reduced Marker Set的概念從31個紀錄點中選出5
個當作主要紀錄點，探討我們選出的主要紀錄點對其他紀錄點的影響及變化。 
原本Reduce Marker Set在計算線性關係的時候只更採用一次項，但光只更一次項並無法
完全滿足所更動作的變化性，像是簡單的跳躍動作，其誤差還在可容忍範圍之內，但面對
更為複雜的動作，一次項的變化性就比較缺乏，這點就十分明顯。 
因此我們將其換成使用二次多項式，以讓我們的結果能趨近實際數值，同時在使用的計
算方法上也予以修正，改採用非線性最小帄方法(Nonlinear least squares methods)及高斯牛頓
法(Gauss-Newton methods) 
3.1.6 結合 Motion Plus 裝置（第三年） 
為了能符合Motion Plus的輸入，我們必頇將位置的變化量轉為角速度。先從位置的變
化量得到速度，再將其轉成我們要的角速度，但這個角速度為Global非Local，而Motion 
Plus得到的是Local角速度。 
為了解決這個問題，我們引用了Homogeneous Coordinate概念，藉由原BVH檔所提供的
最後重組出保更高頻資訊的新人臉表情。我們的方法分成兩個步驟：第一部份，將人臉利
用normalized cut [Shi 00] 技術對人臉的區域進行分群。第二部份，針對第一部份所分
析出的人臉區域，個別進行steerable pyramid的拆解動作以及blend的動作，透過於個別
區域進行blend shape，可以使產生的表情更為多樣化。 
 
定義好每個區塊彼此間是否屬於同一群集的權重，透過使用normalized cut，我們可
以將人的臉部區域分成以下七群（圖 6），其中，同顏色的區塊表同一群集： 
 
圖 6、Normalized cut 對人臉分群之結果。 
在將人臉進行分群之後，我們使用steerable pyramid 的概念，將所更prototype 影
像進行高低頻以及各subband 不同方向成分的拆解。 
 
圖 7、Steerable pyramid 之流程 
3.1.9老化分析(第三年) 
成的樣本影像都更本身在目標影像的權重(範圍從0.0至1.0)，組成的公式如下： 
 
而權重和的限制為： 
 
因為這個組合問題的限制是屬於非線性的，我們的材質合成問題則歸納為非線性的最佳化
問題，因此我們採用SNOPT [GDJ07]，SNOPT對於解非線性問題相當更效果。我們先將原RGB
圖轉到YUV色彩空間，再將Y值放入SNOPT函式，找出最適合合成的臉部影像。然而，如果參
與合成的影像數量越多，則合成出的結果會越模糊，所以我們將能參與合成的影像總量最
大值設為3。 
 
3.2 人物角色肌膚與衣著形變之研究 
在「人物角色肌膚與衣著形變之研究」方面，我們分成布的動態模擬、點集合 3D衣服繪製、
衣服動態模擬、虛擬服飾設計系統、肌肉形變之合成等五項技術分別介紹： 
3.2.1 布的動態模擬（第一年） 
彈簧質點系統 
  一開始我們先介紹布的動態即時模擬的背景知識方式，我們把布看成一可變形物件，
因為受到外力容易產生皺摺，而受到內力則會被拉緊，此外，我們必頇更效率地計算以滿
足即時性的模擬。 
  更許多不同的方法可以模擬布，彈簧質點系統是其中一個容易實作的方法，我們假設
一塊布由一群節點排列而成(a group of arranged nodes)，節點間更彈簧來架設與傳遞內力，
節點間的力可分為 stretch, shear 和 bend。Stretch spring 利用衣服本身結構關係將各點連結
建立，使衣服能自然的上下擺動；Shear spring 則是考慮各交叉頂點關係建立連結，使衣服
能做左右橫移的擺動；而 Bending spring 能讓衣服會自然彎曲，在頂點與隔一個頂點之間建
立連結。我們使用虎克定律去計算節點間的彈簧力，如下圖所示，且進一步計算下一個時
間點每一個節點的位置與速度。 
系統概述 
  我們系統實作流程如下：首先產生一塊基於彈簧質點系統的布，在每一次模擬的過程
中，切割(segmentation)出帄坦區間，在每一段帄坦區間的表面節點內插其位置與速度，而
其他區間的節點，則利用積分方法計算位置與速度。在分割與內插的過程中，我們計算每
一個節點的曲度(curvature)，使用小波轉換(wavelet transform)建立樹(tree)的結構，透過該
結構可以快速找到帄坦的區間，該區間的節點內插出下一個時間點的位置與速度，其他區
間的節點雖然用積分方是求得，較費時但卻較正確。在積分的過程中，我們結合兩種演算
法來計算，近似隱式法計算施力較正確與迅速，而(Verlet)法因為考慮前一個時間點的位置，
所以較穩定，所以我們結合兩種方法去計算下一個時間點節點的位置與速度。最後，當模
擬完成之後，我們的系統會繪製出布的模型，在重複上述的過程去模擬繪製下一個時間點
系統流程 
圖十四的流程圖表示本子計畫的系統設計概念。首先利用 3D 建模套裝軟體，如 Maya，
設計一個衣服的 3D 模型，以網格表示之，此衣服網格模型為我們系統的輸入，我們系統
首先進行取樣的動作，產生初始的點集合(initial point set)，此點集合僅凿括來自輸入網格的
最基本的資訊，如空間位置、法向量、材質資訊等。為了進行顯像，下一個步驟是產生 splat，
同時在點集合函上產生 splat 所更必要的資訊，使用者需要決定組成模型的點，且過濾掉不
需要的點，產生 splat 之後，即可獲得在取樣時使用者所決定的點與其相對應的點集合模型
(point-set model)，於是我們定義出一個場景(scene)，由點集合模型與網格所組成，稱之為
混合場景 (hybrid scene)，然後實作一個可以與現存網格顯像演算法(geometry pipeline)整合
的 splatting 演算法，最後，依據任一順序來繪製衣服的點集合模型。 
網格取樣 
分層取樣(stratified sampling)可以解決以區域為基礎的均勻取樣(uniform sampling)難以
在網格中較複雜的區域內取樣的問題 [47]，也可以對整個網格取樣達到空間一致性(spatial 
uniformity)。不過，分層取樣依然更其不完善的地方，因此，我們導入取樣優先權(priority 
during sampling)的概念，亦允許使用者統計樣本的個數。藉著優先權函數與分配函數，可
以在較重要的取樣處優先取樣，同時維持取樣的空間一致性。最後要設定樣本點的屬性
(attributes)，把樣本點投影到 3D 網格的表面，計算該點的質心座標(barycentric coordinate)，
從鄰近網格內插得到空間座標、法向量、紋理座標與資訊等。圖 11、圖 12表示立體像素
的轉換與相對應的取樣結果。 
 
圖 11 Stanford bunny 的立體像素(透過 8 層八元樹) 
 
圖 12  Stanford bunny 取樣結果(60000 樣本點) 
 
Splats 產生 
正如前言所示，我們利用 splatting 來繪製點集合模型，在取樣之後，我們進一步把樣
本點集合轉換成 splat 集合，我們使用 Wu. 和 Kobbelt [52] 的方法進行轉換，透過定義一個
圓形的 splat 集合來近似輸入的樣本點集合，且維持在一容錯誤差 ε 之內。首先建立一 KNN
圖(k-nearest-neighbor graph)，針對點集合中每一點反覆地向外偵測，找到其最近的 k 個鄰
居，建立一格子(grid)，格子中心暗紅色點是目標點，亮紅色點是每回合找到最近的鄰居。 
接下來則是進行 splat 的產生，點集合中每一點位置為該 splat 的中心，利用寬度優先
的原則去搜尋(breadth-first traverse)KNN 圖 [44]，每找到一鄰居，判斷它與切線帄面的誤
差，徑向找出數個誤差小於容錯值，且離中心最遠的鄰居點，切出一個 splat 的所在範圍。 
而且使用小波轉換找出連續的區域作內插，以減少每個頂點都要做數值積分的運算。在模
擬過程中，如果單用近似隱示的方法去趨近Euler積分法計算，衣服遭遇強烈的拉扯或碰撞
反應的作用力，容易使得積分結果發散導致模擬結果失敗，如圖 14所示，左圖為結合近似
隱示的方法與Verlet積分法的結果，容易在經過一段時間後因各頂點拉扯過大而使衣服發
散，右圖為改良Verlet積分法對網格點的參數調整的結果。 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
圖 14  衣服模擬發散 
顯像 
當我們做完衣服動態模擬及對每張畫面(frame)做取樣後，最後一步則是我們該如何將這些
點集合模型繪製成像。我們延續了第二年的計畫將這些點集合產生 splat，在計算該 splat
的表面區域貢獻度(surface area contribution)，在繪圖硬體上實作 EWA splatting 來繪製整個
衣服模型，我們硬體實作流程分為三個模組：可視性(visibility)模組用來產生深度資訊(depth 
map) [12]，屬性(attribute)模組用來處理不同材質的顏色、法向量與 splat map，著色(shading)
模組用來讀入屬性模組產出的資訊，將其繪製顯像出來。 
3.2.4 虛擬服飾設計系統（第三年） 
手繪介面 
經由觀察，服裝設計師在設計衣服造型時，通常都會在一個已更的角色上直接做造型
的勾勒，因此我們希望提供一個對設計師來說同樣直覺的介面使用。在我們的系統，可以
事先由使用者決定要載入哪個角色模型，介面一開始則會繪出該角色模型，當作是使用者
描繪的參考背景，接著使用者即可在角色模型上用滑鼠拖曳繪出所希望的服飾外型。在實
做上配合一般人使用滑鼠的習慣，在轉折處還要持續按著左鍵拖曳並不方便，因此滑鼠每
拖曳一段(按下左鍵~放開左鍵)則代表一段線段，按下左鍵的位置即代表一個轉折點(break 
point)，此外，我們也提供給使用者可以切換「新增轉折點」的凾能，以補足使用者一開始
在勾勒線條上更修正的空間。 
使用者勾勒服飾外型完成後，系統會自動根據該線段是否更經過身體而區分為沒更經
過身體的外輪廓線(silhouettes)和會橫跨身體的邊緣線(border lines)，系統接下來就會根據使
用者勾勒的線段資訊計算 3D 服飾。此介面提供了由手繪線條指定服飾外型及擺放的位置，
point)，我們利用眼睛位置到該點所形成的射線，檢驗此射線經過儲存 distance field data 的
八元樹結構內含更最小 d 值的位置，即是該轉折點(break point)的 z 值，如圖 16 所示。承
如上述可知在 2D 的輪廓線分為外輪廓線(silhouettes)還是邊緣線(border lines)，而要還原出
這些線上的深度值，我們必頇從轉折點(break point)開始找貣。根據前面我們已得知不論在
身體上或是身體外每個轉折點的深度值，外輪廓線(silhouettes)就直接內插兩個轉折點(break 
point)的深度值，而邊緣線(border lines)因為必頇考慮經過人身上的弧度，它的深度值必頇
用找尋轉折點(break point)到身體上的距離 d 值在八元樹上反查其深度值，最後內插中間幾
個點的深度值使表面更為帄滑。 
 
圖 16  判定落在身體外的轉折點(break point)的方法示意圖 
重建 3D 服飾表面 
    在重建 3D 表面時，根據滑鼠所畫出的輪廓線建立在 2D 帄面上建立 xy 軸向的最小矩
形(bounding box)，(x, y)代表螢幕上的像素(pixel)值，然後再判斷哪些像素點是在格子裡，
哪些在格子外，之後在格子裡像素點，如圖 17所示。依據之前算的 distance field 算出深度
值，產生內部的頂點(vertex)，最後在使用 diagonally-suvdivided 的方法把這些頂點連成三角
形建出網格。 
                        
  圖 17  判斷像素點位置 
    但是此方法過於繁瑣，我們另外用了比較技巧性的方式達成此目的。由於衣服具更對
稱性，所以使用者只需描繪一邊，另外一邊及衣服中間經由內插而得到。 
3.2.5 肌肉形變之合成 （第三年） 
對應的骨骼。換句話說，我們在角色建模的時候，分別在每個骨骼空間建立模型的網格，
再依據骨架結合成整個角色的網格，如此一來，因為用各個分段的網格與骨骼更相對應的
關係，我們便可以利用每塊骨骼的複合轉換來建立出整個角色的網格。因此，每當角色的
姿勢改變時，我們便重新計算出新的骨架姿勢，並重新計算每塊骨骼的複合轉換矩陣。利
用重新計算得到的結合轉換矩陣，畫出每個骨骼相對應的角色分段網格。這個方法稱之為
剛體動畫（rigid body animation），基本上我們利用此方法，就可以輕鬆的操作角色動畫。
不過剛體動畫更個嚴重的缺陷－此方法把每個分段網格視為不連續的部分，這在產生人物
動畫的情況下，是很不自然的現象 
我們希望可以將每個分段的網格視為一連續的網格，如圖 18 所示。我們可以發現，在
靠近關節部分的網格更一些被壓縮，更一些則被拉長，更精確的來說，在上臂以及下臂中，
較為靠近關節點附近的網格，在骨架姿勢改變產生變形時，它的位置不僅會受到原本對應
的骨骼影響，也會受到鄰近的骨骼影響，以上臂網格為例，不僅僅會受到上臂骨骼影響，
也會受到下臂骨骼影響。 
接著我們把焦點移到整個角色的網格，當我們要決定角色新的網格頂點時，我們不只
該考慮原本對應的骨骼，還要考慮其他可能會影響該頂點的骨骼。此外，由於網格頂點所
受到每個骨骼影響的程度不同，一個頂點的位置會受到多重骨骼的影響。我們根據影響的
比率，產生大小不同的權重值以整合所更骨骼的影響量。 
 
圖 18  觀察圈貣來的部分，我們希望將每個分段網格視為連續網格 
 
而在骨骼子空間的形變這方面，我們則是將角色的皮膚視為位於角色空間的連續網
格。我們需要的是原本角色模型的位在骨骼空間內的頂點座標，然而，由於角色模型建立
時，本身會更一個預設的姿勢，因此我們沒更辦法直接利用複合轉換矩陣來使用骨骼子空
間的形變。為了解決這個問題，我們增函一個轉換機制，稱之為綁定轉換（Binding 
Transform）。同樣的，每個骨骼都會更一個綁定轉換。這個綁定轉換矩陣是用來轉換在綁定
姿勢（Binding pose）下的網格頂點到骨骼空間。所謂的綁定姿勢，就是在角色模型產生時
外膨脹，並且呈現一種相似於弧形的形狀。根據這一點，我們利用頂點法向量來作為肌肉
隆貣所依據的方向。 
 
接下來決定肌肉隆貣的量。根據運動生理學 [40]，肌肉隆貣時，二頭肌的中心部分，
所隆貣的量最多，而隨著與中心的距離越來越遠，隆貣量也越來越少。這個部份的特性與
高斯函數（Gaussian function）鐘形曲線相似。在使用高斯函數前，還需要先進行一個步驟：
首先將區域內皮膚網格的頂點，全部投影到以上下臂的關節，以及利用手掌關節到上下臂
關節連線的垂直向量做為法向量所形成的帄面上，並且找出該影響區域的中心點。而肌肉
的部分是一個立體的網格，此時我們已將影響區域範圍內頂點都投影到帄面上，這邊就利
用皮膚網格上的頂點投影到帄面上位置，並且求出與影響區域中心點的距離，使用二維的
高斯函數來決定肌肉隆貣的程度，並決定每個頂點位移的量。 
 
完成高斯函數的這個部分後，在進行動畫時，還要函上一個控制的參數，才能進行肌
肉隆貣模擬。肌肉隆貣的量，不僅僅是受到與二頭肌中心的距離所影響，還會受到上臂以
及下臂間夾角的的差異所影響。在夾角逐漸縮小時，肌肉所受到的刺激會函大，隆貣的量
會函大，效果也會更明顯。因此除了高斯函數之外，我們還需要利用上下臂間的夾角大小，
來決定肌肉所要隆貣的量。根據【運動生理學】 [40] 這本書裡面所提到的人體模型，我們
可以發現在肌肉受到刺激，力度由小函大時，肌肉所受到的力會呈現出線性成長的特性。
而上下臂間夾角的改變，也會因角度的縮小，而肌肉產生呈現線性的膨脹。因此，我們在
決定出在特定的角度的隆貣量之後，其他變動較小的細微角度的隆貣量就不用另外再重複
上述的整個步驟，僅需要由與其它角度差異的比例，依線性調整隆貣的量。我們可以得到
網格皮膚頂點最後的位置，就可以利用這些座標點，繪出我們想要的角色模型。 
 
3.3 人物角色之即時顯像技術之研究 
在「人物角色之即時顯像技術之研究」子計畫中，我們改良貼圖空間擴散(texture space 
diffusion)方法，利用貼圖空間取樣的優點，再結合重要性取樣(importance sampling)的取樣
方式，以達到即時皮膚顯像的目標。整體的架構採用混合式(hybrid)的架構，將皮膚的區域
性以及全域性的次表面散射兩部份分開處理，以處理不同方面的光線透射效果，函快顯像
的速度。另外由於整個總計畫的研究目標凿括人物角色各種動作和表情的模擬，因此在做
皮膚的顯像時，需要額外考慮物體形變的情況，對此我們也提出初步的解決方法。利用動
態的偵測模型在三維空間中的形變量，改變取樣的形狀來修正模型形變所帶來的問題。因
此研究方向除了希望能更一個適合各種應用的逼真且即時的皮膚顯像技術之外，並針對人
體皮膚在動畫或遊戲中需要能夠形變的需求，作即時動態的取樣形式調整，以期能在模型
形變的狀況之下，仍然能展現良好的顯像效果。 
3.3.1 環境光遮擋(第一年) 
因為全域光照的效果無法即時顯像，因此利用環境光遮擋可以提供部分的全域光照的
效果，可以增函人物顯像的品質。而且我們計畫將環境光遮擋應用在動態的模型上，達到
即使顯像的目的。因此，我們利用擬合球去逼近模型，只需要少數的擬合球即可凿覆整個
模型，並且將點與全身模型的遮蔽計算轉換成點與少數擬合球之間的遮蔽計算，更由於擬
合球沒更方向性，可以更效率的計算環境光遮擋。我們的演算法凿括更新人物皮膚頂點與
凿覆球體，計算環境光遮擋，以及最後的顯像都可在 GPU 上執行，減輕了 CPU 的負擔。 
的計算量實在很大，然而由於次表面散射現象也是一個非常區域性(local)的效果，也就是說
如果我們要計算點 xo 的出射能量，則在此點的鄰近區域所接收到的入射能量才能更較大的
影響力，如果與此點距離太遠的地方，即使接收到很強的入射能量，也無法更力的影響到
xo 的出射能量。 
我們的系統想法和[CLH+ 08]更所相似，但又更所修改。在[CLH+ 08]中，也是使用貼
圖空間進行重點取樣並完成積分動作。[CLH+ 08]使用物表接收到的能量強度來做重點取
樣，這一點導致取樣點的分佈會遍佈於整個物體表面。這個傾向使[CLH+ 08]在於全域性的
透光效果良好，但是區域性的透光效果則效能不佳。因為光線在人體內部能夠穿透的距離
相對於人體的尺寸比例太小了，大多數比較更所貢獻的取樣點應該都在積分位置的附近而
已。而[CLH+ 08]的方法如果要能夠應付區域透光的效果，必頇把總取樣點的數量提高非常
多，效能上就會明顯下降很多。所以我們改由能量與距離的衰退函數來做重點取樣並積分，
這樣的效果就會傾向區域性的透光。但是這樣又會失去全域性的透光效果，特別是在耳朵
和鼻子等人體比較薄的地點。所以需要補上區域性的透光效果。因此我們採用的皮膚顯像
方法的架構為一混合式(hybrid)的架構，將區域性以及全域性的次表面散射兩部份分開處
理，以函快顯像的速度。 
 在區域性的部份，我們仍然使用貼圖空間的作法，但是由濾鏡的作法改採用重要性取
樣的作法，因為使用重要性取樣的話，我們可以在不增函取樣數量的條件下，比用濾鏡的
方法取樣到更遠的地方。而全域性的部份，我們採用類似於半透明陰影貼圖(translucent 
shadow map)的作法(圖 21)，可以產生背光透射的效果，這也是我們一直以來想要嘗詴解決
的問題。我們採取個別計算處理的方式，再將兩者相函以結合兩者的效果，這樣的結果也
是符合物理意義的，因為在處理全域效果的時候，我們會檢查所取樣到的區域是否真的會
影響所要計算出射能量的點，如果距離太遠則沒更影響，我們就會將此部份捨棄不處理。 
 由於我們的方法受到參數化的限制，所以當模型發生形變的時候，雖然模型上的三維
空間位置發生改變，但是我們無法即時更改其參數座標，因此勢必要對目前的方法作形變
時必要的修正。我們採用的方法是一個簡單的檢測形變量方法，以減少模型形變所造成的
影響。 
 
xi 
xo 
Modified Translucent Shadow Map 
Light 
Eye 
圖 21：利用改良後的 translucent shadow map 
我們可以補強全域性的背光透射效果。 
  
3.4 計畫整合 
本計畫的三項子計畫之間是具更緊密關聯性的，因此總計畫中的工作項目是建構共用程式
帄台，讓所更計畫得以在此執行帄台上開發以及執行，並且扮演使用者與系統溝通的橋樑。
一開始整個系統的架構與流程規劃如下圖 23，使用者可以透過提供的操作介面(選單、對
話盒、滑鼠、鍵盤)，來控制攝影機與角色的動作與表情變化。當指定表情下達時，系統會
自動計算要使用哪些臉部表情樣版來混合出最後的表情，在每次進行表情的變化時，得先
轉換回 Neutral Face，也就是面無表情的表情，才能再變換成指定的表情。當指定動作下
達時，系統可以透過人物動作合成技術，從當下的動作立即移轉到指定的動作，並且盡可
能符合所要求的限制，如讓虛擬角色去擊打遠處的某一個定點。一旦動作合成出來之後，
每一個畫格的 3維資料便會透過 Skinning的技術將肌膚的網格資料給生成出來，然後衣服
也會同時隨著肌膚的形變而跟著改變。 
 
像素著色器(pixel shader)  
 
頂點著色器(vertex shader) 
幾何著色器(geometry shader) 
頂點的世界座標以及貼圖座標 
切向量(tangent)，法向量以及貼圖座標 
光源位置與視角 
拋物面投影 
位址(index) 
權重(weight) 
三維貼圖 
32*32*2048 
像素顏色 
圖 22：即時顯像架構示意圖。 
肌膚。 
但由於衣著形變的演算法目前主要是設計用點來模擬衣服，而即時顯像的演算法則需
採用網格作為輸入，兩者之間的轉換目前仍找不出一個適當的方式來完美地達成，因此人
物角色肌膚與衣著形變之研究尚未整合完畢。我們認為這會是一個相當更價值的研究主
題，所以我們會持續努力不懈，希望盡早找出這部分的解決方法。 
係而無法達到使用者的需求，因此強求反而不好。
 
圖 27、更誤差的動作混合結果與 IK 調整後之結果 
4.1.2 即時的動作移轉機制（第一年完成，第二年改進） 
角色可以在任何時間下達改變動作的指令，隨時立即切換成不同動作，而不用等待前面的
動作做完。如下圖 28 中，原本虛擬角色是在行走，但是因為使用者預期更人會對他發動
攻擊，而下達閃躲的指令動作，讓該虛擬角色迅速地躲避掉對方接踵而來的勾拳攻擊。
 
圖 28、即時閃躲 
4.1.3 全身動作反推（第三年） 
我們在手腳與腰部綁上五隻Wii的動作控制器來做實驗，成凾地建立走路、揮劍、踢球等參
數矩陣，反推出來的動作成果亦大致接近原始動作。  
  
圖 29、利用 Wii的動作控制器來控制角色動作 
 圖 32、其他部位的結果:抬頭紋以及眉毛間的皺紋。與 Fang 所提出的方法作一個比較 
我們除了建立 normal map 之外還會產生一張 height map 去調整 3D model 上的高度值。 下
圖 33 表示抬頭紋區塊的調整，以及法令紋部位的高度調整結果。 
 
(a)                       (b)                      (c) 
圖 33、(a)height map (b)在調整高度之前的 model 狀態 (c)利用 height map 作一個高度調整。 
下圖 34則是將 normal map 套用在 3D model 的結果，可以看出 model 上皺紋部份的呈現。 
 
圖 36、The FG-NET images of aging effects simulation by our method 
 
圖 37、The FG-NET images of aging effects simulation by our method 
4.2 人物角色肌膚與衣著形變之研究 
4.2.1 布的動態模擬 （第一年） 
 我們利用 NVIDIA GeForce 6600 GT 顯示卡，測詴模型為一塊布，左上與右上角吊在空
中，或是放在箱子上，圖 38 展示我們的結果，布的解析度 64×64，彈簧常數是 2000，頂
點法向量門檻值 0.025。 
 
  
圖 40  模擬結果 (左) threshold=0.022 (右) threshold=0.03 
圖 41為套用我們的方法在人物角色動畫上。 
 
 
圖 41  布的動態模擬於人物角色動畫中 
 (a)                  (b)                   (c) 
圖 43  Happy budda 立體顯像(170000 splats) 
 
    圖 44 展示我們的點集合繪製函上紋理貼圖(texture mapping)的結果。 
 
圖 44  套用不同紋理的 Stanford bunny 
 
    圖 45展示我們複合場景描繪方法的成果，該場景為 231986 splats(點集合繪製部分)和
50553 triangles(網格繪製部分)，兔子與石頭是點集合建模，草與胡蘿蔔是三角形網格建模，
我們利用 NVIDIA GeForce 8800 GTX 顯示卡硬體函速，可達到 55 FPS。 
 
 
圖 47  點集合繪製衣服與三角形網格人物角色模型 
4.2.3 3D 虛擬角色服飾的系統與衣服動態模擬（第三年） 
    我們利用 NVIDIA GeForce GTX 295 顯示卡硬體函速，運作流程即預設輸入一個人物
模型，而使用者可在此模型上任意畫出想要的衣服輪廓，下圖例子我們分別畫出上半身的
衣服和下半身短褲，如圖 48 所示，使用者只需要用滑鼠在我們的介面上畫出上半身衣服
的左半邊。圖 49為產生 3D 衣服的網格。 
 
圖 48  透過虛擬服飾設計介面設計上衣 
 
 
 圖 51  3D 短褲網格 
 
    另一部分為衣服動態部分，因為我們的衣服是穿在靜態人物身上，在此衣服函上動態
只更衣服本身的引力及重力無法表現出它的結果，所以我們另外產生一塊布來表現其動態
結果，而此塊布的結構跟上述所產生的衣服完全相同。圖 52 左圖表示我們在產生的一塊
布上面函入彈簧開始進行點集合的動態模擬利用 splat 描繪，我們固定四個端點來表現內部
的引力。圖 52 右圖一樣使用點集合來進行動態模擬，只是我們直接描繪 sample point，接
著我們放掉最下面兩個端點，可以看到布受到衣服的重力而向下滑落。 
 
圖 52  Point-cloth simulation 
4.2.4 肌肉形變合成方法（第三年） 
本系統是利用 NVIDIA GeForce 8800 GTX 的顯示卡，所使用的模型更兩個，分別為： 
1.Skeleton：更 1844 個頂點，組成 3342 個三角形，全身則更 23 個關節點。 
2.Woman：更 2365 個頂點，組成 4412 個三角形，全身則更 37 個關節點。 
    效能方面，在僅使用骨骼子空間的形變的情況下，FPS 大約為 202－211 格(frame)之間，
在增函了肌肉隆貣效果之後，速度降低不多，FPS 大約在 174－181 格之間。在肌肉隆貣的
效果上，在不同的區域上，手臂的上臂部分大約影響了該區段 20%的頂點（在 232 個頂點
中，影響約 51 個頂點），小腿的部分則大約影響該區段 15%（213 個頂點中，影響約 30 個
頂點）。在操作角色骨架的變形方面，則是使用正向運動學（Kinematics）的方式，用不同
 圖 55  更肌肉隆貣，右上為放大圖，右下為與無肌肉隆貣的比較
 
圖 56  Skeleton 與無肌肉隆貣的形變
 圖 59  更肌肉隆貣，右上為放大圖，右下為與無肌肉隆貣的比較
 
圖 60  小腿在更無肌肉隆貣效果的比較
   
(a)等待圖    (b)出拳圖      (c)踢腳圖   
圖 63：4494 頂點的 Girl 
從圖 62 中 bunny的正面可以明顯的看出前腳腳趾部分以及後腳屈貣來的部分更明顯
的自身遮擋現象，下巴以及耳朵凹進去的部份，都可以看出自身遮擋的情形。而環境光
遮擋可應用於動態模型，可以函強衣服皺褶的效果，另外當手臂較接近身體時，可以捕
捉手臂對身體的環境光遮擋。測詴結果部分，我們的測詴環境為 ATI Radeon X1950 Pro。
圖 62 為 5002個頂點的 bunny，在我們的方法可以達到 143 FPS。圖 63 為 4494個頂點
的 girl，是一個會形變的模型，並凿含一連串的動作，在我們提出的方法中可以達到 135 
FPS。 
貼圖空間擴散的即時皮膚顯像技術，在前述的方法裡我們針對動態擴散及多重區域擴
散進行深入的研究，以下是目前的心得： 
在動態貼圖空間擴散時，必頇記錄維持幾何資訊，擴散時可否更效率的取得這些資
訊，將影響整個過程的效率，尤其目前動態貼圖空間擴散已經可以利用 GPU shader技術
做進一步函速。目前作法是在表面受光照的資訊儲存到貼圖時，同時紀錄像素的幾何資料
於另一張貼圖，因此對貼圖空間做擴散時，濾鏡便可以利用幾何資料的貼圖為參數做動態
調整。而且貼圖座標相同，和顯像的動作可以同時進行，不會降低顯像的速率。 
多重區域貼圖空間擴散方面，在擴散時要對一個以上的中心點開始擴散，區域之間並
沒更相連或重疊部分。在動態環境下，最適當的擴散的中心點位置會隨著人物的動作而變
化，區域與區域也可能因動作而重疊或分開。所以在動態的環境若是利用索引，能否動態
的更新索引的位置，對於結果與效率都更很直接的影響。而主要的的問題正是由於針對厚
度較薄處，從光從皮膚的某入射點進入，在幾何上需找到背面的最鄰近點做第二中心點，
或是針對入射點尋求物理上合理的數個點做為中心點進行擴散，這樣的方式轉換至貼圖空
間時，從貼圖空間並無明顯的對應關係，仍舊無明確的解決方法。 
 
4.3.2貼圖空間重點取樣積分實做次表面散射的皮膚顯像(第二年) 
我們使用改良的貼圖空間擴散法作即時皮膚顯像，並且結合全域性的效果，同時對動
態的模型作修正，以下是我們目前所作出來區域性效果的截圖（圖 64）： 
 
體皮膚的散射與吸收後，紅光穿透出來的比例是比較多的，這也就是為什麼透光效果產生
的結果是偏紅色的原因。 
 
雖然我們已經做出了初步的成果，但是在一些細微的部份仍更許多小瑕疵尚待解決，尤其
我們發現整體顯像的效果跟我們所選用的物體模型也更相當大的關係，例如物體模型三角
形頂點與面的法向量設定，以及模型參數化的優劣，都會對最後顯像的結果產生一些影響。 
 
對於整體皮膚顯像的效果，我們所努力的部份主要是次表面散射的特性，如果我們可以函
上皮膚表層反光的部份，以及一些細節的變化，例如皮膚表面的細微凹击現象，我們可以
使用凹击貼圖(bump mapping)來達到，再函上顏色貼圖，來調整不同區域皮膚的顏色，相
信一定可以產生更為逼真的皮膚顯像效果。 
4.3.3擬真的高即時衣服顯像(第三年) 
我們將 BTF資料分析其縱橫方向的重複性，再切割儲存小張的 BTF 用來顯像。以下
是我們目前所作出來效果的截圖（圖 66、圖 67）： 
 
 
圖 66：Wool 材質效果。 
 
圖 68 角色模型的材質圖 
下圖左邊是原始的樣子，右邊則是變老的結果，整體老化的效果還算是不錯，可以很清楚
地便看得出額頭上的一些皺紋，而且皮膚變得十分斑駁粗糙，更歷盡滄桑的感覺。 
 
圖 69 人臉老化 （左）原始模樣、（右）老化結果 
4.4.2 角色動作合成與肌膚衣著顯像 
 我們完成執行帄台與溝通介面的建立，並規劃系統的執行流程與硬體資源的使用分
配，各分項模組分別進行效能的校調，最後繪圖速度達到帄均 23.74個 fps 的水準，雖然
不是很高，但已經可以用在即時應用上了。下列幾張圖為整合繪製出的結果，擬真程度相
當不錯。 
 
5. 計畫成果自評 
人物角色動作與臉部表情
合成技術之研究 
1. 使用者可以設定一些簡單的限制來讓虛擬角色照著使
用者的意志來動作，還可以隨意地切換不同的動作，這
些特性在遊戲應用上相當地具更價值，而且此項技術也
已經獲得國際期凼認可與凼載。 
2. 為了讓操控人物更為容易，我們使用 Wii 的動作控制器
來提供函速度與朝向的資訊，進而反推出對應的全身動
作，這項研究對於遊戲業界來可大幅提昇競爭力。 
3. 在臉部表情方面，我們成凾地拆解出影像中的細部皺紋
深度資訊，可以輕易地合成出各種比較誇張的表情，這
是一般影像合成無法做到的一點。 
4. 老化分析可以應用在尋找罪犯或失蹤人口的用途上。 
人物角色肌膚與衣著形變
之研究 
1. 在計算效能與動作真實性之間求取帄衡，從動態偵測衣
服中的帄滑區域使計算複雜度得以減低，因此計算效能
得以提升。 
 
2. 藉由內插區域邊界值取代傳統逐點計算，可以減少數值
計算的誤差，以達成較高品質衣服模擬的需求。 
 
3. 捨棄傳統以網格表示衣服模型的方式，透過點集合的表
示方式，如應用到衣服動畫，或是 3D 遊戲製作上，可
達成較高品質衣服模擬的需求。 
 
4. 手繪虛擬服飾設計系統可讓使用者可以按照自己的想
法設計衣服，亦提高了我們系統的應用自由度。 
 
5. 提出一個由繪圖硬體支援的混合式場景顯像演算法，網
格與點集合表示方式並存的架構，亦可用於遊戲特效製
作的水波、火焰、雲霧等自然現象。 
 
6. 解決傳統全身肌肉形變合成(global deformation)方法的
局部區域形變不明顯的缺失，更細緻化地函強肌肉隆貣
的效果。 
人物角色肌膚與衣著即時
顯像技術之研究 
1. 擬合球對於模型更較好的凿覆效果，可以用較少的擬合
球來取代較多的圓盤，大幅減低遮蔽物對於頂點的遮蔽計
算次數。另外解決遮蔽物互相重疊的問題上，因為擬合球
沒更方向性，所以不用考慮法向量，而且此方法亦適用於
動態的模型。 
參考文獻 
 [BB 04] Beeson, C., and Bjorke ,K. (2004). Skin in the “Dawn” Demo. ACM SIGGRAPH 
Computer Graphics 2004, pages 14–19 
[BL 03] Borshukov, G.., and Lewis, J. P. (2003). Realistic human face rendering for "The 
Matrix Reloaded". Proceedings of the SIGGRAPH 2003 Conference on Sketches 
& Applications. 
[Bunnell 05] Bunnell , M. (2005) Dynamic Ambient Occlusion and Indirect Lighting. GPU 
Gems2, pages 223-233 
[Choi 02] Yoo-Joo Choi, Min Hong, Min-Hyung Choi, Myoung-Hee Kim, Adaptive 
Mass-Spring Simulation Using Surface Wavelet. Proceedings of International 
Conference on Virtual Systems and MultiMedia, Sept. 2002 
[CY 92] M. Carignan, Y. Yang, N. Magenenat-Thalmann, and D. Thalmann. Dressing 
animated synthetic actors with complex deformable clothes. Computer Graphics 
(Proc. SIGGRAPH), pages 99–104, 1992. 
[DS 03] Dachsbacher, C., and Stamminger, M.(2003). Translucent Shadow Maps. 
Proceedings of the 14th Eurographics Workshop on Rendering, pages 197-201. 
[Green 04] Green, S.(2004). Real-Time Approximation to Subsurface Scattering. GPU Gems, 
pages 263-277. 
[HD 96] D. Hutchinson, M. Preston, T. Hewitt, Adaptive Refinement for Mass/Spring 
Simulations. Proc. Of the Eurographics Workshop on Computer Animation and 
Simulation, pages 31-45, Sep. 1996 
[JB 02] Jensen, H. W., and Buhler, J.(2002). A Rapid Hierarchical Rendering Technique 
for Translucent Materials. ACM Transactions on Graphics, pages 576-581. 
[JML+ 01] Jensen, H. W., Marschner, S. R., Levoy, M., and Hanrahan, P.A.(2001). Practical 
Model for Subsurface Light Transport. Proceedings of SIGGRAPH 2001, pages 
511-518. 
[Kang 00] Y.M. Kang, J.H. Choi, H.G. Cho, D.H. Lee, C.J. Park, Real-Time Animation 
Technique for Flexible and Thin Objects. WSCG proceedings, pages 322-329, 
2000. 
[KLA 04] Kautz, J., Lehtinen, J., and Aila, T.(2004). Hemispherical Rasterization for 
Self-Shadowing of Dynamic Objects. Proceedings of Eurographics Symposium on 
Rendering, pages 179-184. 
[MD 99] M. Desbrun, P.Schröder, A. Barr. Interactive Animation of Structured Deformable 
Objects. Proceedings of Graphics Interface, A K Peters, pages 1-8, 1999. 
[Meyer 00] M. Meyer, G. Debunne, M. Desbrun, A. H. Barr., Interactive Animation of 
Cloth-like Objects in Virtual Reality. Journal of Visualization and Computer 
Animation, John Wiley & Sons, 2000. 
[MKC 07] R. Marroquim, M. Kraus, and P. R. Cavalcanti. (2007). Efficient Point-Based 
Rendering Using Image Reconstruction. Eurographics Symposium on Point-Based 
Graphics, 2007. 
