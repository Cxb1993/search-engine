 2
[10]，當發現感測器失效造成網路分離時，派
遣機器人佈置感測器到該區域，利用新的感
測器來填補空洞，使感測網路能繼續工作。
第二種方式是假設所有的感測器都是行動感
測器[4][5][6][7][13][13][15]，文獻[4]假設在
最初佈署感測器時節點會有分佈不均勻的現
象，這種現象可能會影響感測網路的存活時
間，因此利用行動節點可移動的特性，調整
分布不均勻的感測網路，藉此延長感測網路
的存活時間。第三種是週期性的派遣一台或
數台行動收集器到感測網路中去收集資料
[3][8][11][13][15][13][17]，每台行動收集器均
裝備足夠的記憶體，等收集完資料後再回到
匯集點將資料回報，減少靜態感測器的資料
傳送量，期望減少感測器能量消耗。 
文獻[8]指出越靠近基地台的感測器能量
耗盡越快，利用可行動的收集器週期變換位
置，藉此平衡感測器的能量消耗，並證明匯
集器在感測網路內移動能夠得到良好的效
能。文獻[12]提出一方法應用少量感測器來監
控廣大感測區域，在稀疏網路 (Sparse Net-
work) 部署數台 MULEs (Mobile Ubiquitous 
LAN Extensions)，利用 MULEs 可行動的特
性隨機的在感測網路中蒐集資料，並將這些
資料帶回去給匯集點，匯集點也有數台部署
在網路中。透過 MULEs 收集並傳遞資料可
節省感測節點的能源消耗，延長感測網路的
生命週期。然而 MULEs 是以隨機的方式移
動，這種移動收集方法較沒效率，會提高資
料的延遲時間 (data latency)。文獻[13]提到在
能量有限的情況下利用被動式感測器 (Pas-
sively Mobile Nodes) 收集資料是非常困難
的，因此提出不同的架構企圖延長感測網路
的工作週期。 
文獻[17]在網格(Grid-based)架構上提出
linear programming (LP) formulation，利用行
動的匯集器的位置變動，平衡感測節點傳輸
資料的能源消耗。首先針對固定匯集點對感
測節點的能源消耗的影響，實驗結果得到在
四個角落的感測節點能量剩餘相對多於中心
區域的節點，因此文獻認為行動匯集器應該
在感測網格中定期變換位置，並且在四個角
落的停留時間應該多於其他地方，利用匯集
器的位置變換使得感測節點的能源平均消
耗，延後第一個感測節點死亡的時間。但是
在此研究中沒有考慮到行動匯集器的移動時
間、感測網路如何得知行動匯集器的位置，
以及如何將資料正確傳送給行動收集器。 
目前大部分的研究[12][13]中，都致力於
提升感測器能源的有效運用，延長感測網路
的存活時間，以及事先假設感測器以分離網
路 (Partitions) 的方式布置，沒有考慮感測器
網路由於能源耗損變成分離網路的處理方
式，以及如何運用行動收集器使分離網路能
夠繼續運作且有效收集資料。如何建立資料
收集的結構及安排有效的行動資料收集器
(mobile collector or sink)排程是本子計畫第
二年探討的主要課題。 
三、研究方法及成果 
第二年的研究計畫主要探討 partitioned 
network control 的技術，在收集資料的過程
中，感測器會因為能源不足或者故障等問
題，造成節點死亡無法運作，使得感測網路
間的連結斷裂變成分離網路，因此第三年計
畫利用行動資料收集器，在網路發生分離的
情況下進行資料收集，充分利用已部署的感
測網路，與行動收集器的移動排程，期望延
長感測網路工作週期。 
本 計 畫 在 感 測 網 路 中 建 構 樹 狀
(tree-based)架構的傳送繞徑執行資料收集以
及匯聚，感測器將感測到的資料以多點跳躍
的方式傳至匯集點，收集樹的架構示意圖如
Figure 1(a)所示，在樹的架構中，越靠近根節
點的節點有較高的傳輸負載，因為在這些節
點的底下有許多的子節點要傳送資料到根節
點，這也將消耗這些節點更多的能源，導致
節點耗盡能源而死亡，無法繼續感測周圍的
資料與傳遞資料給父節點，而網路拓樸也將
分離形成 island [18]或區塊(Partition)，我們稱
這種情形為分離網路，分離網路會造成感測
資料收集不完全，例如：在 Figure 1(b)的樹
狀結構，節點 n1 與 n8 死亡後，將會導致網路
拓樸形成四個區塊網路，匯集點 s 將無法收
到該區域的資料，使得資料收集不完全。雖
然 n1 與 n8 沒有能源可以繼續運作，但是其他
分離網路的節點仍然還有電力可以繼續偵測
 4
當節點進入瀕死階段將發出瀕死訊息 
(near-death information) 包括節點資訊、位置
和目前的時間，此封包訊息將傳送至匯集點
以及瀕死節點的子節點，之後瀕死節點則不
再進行感測和傳送感測資料，但若有瀕死或
死亡訊息則幫忙傳送至匯集點，因為這種封
包所需消耗的能源很小。瀕死節點的子節點
收到瀕死訊息後，將負責暫存自己以及收到
子節點的感測資料，不再把感測資料封包傳
送給瀕死節點，若是有收到子節點的瀕死或
死亡訊息的話，則可將這些訊息傳給瀕死節
點。匯集點收到瀕死訊息，則將該節點的位
置設定為收集位置並排進行動收集器的收集
排程中，而行動收集器則會依據排程的順序
進行收集。 
當節點進入死亡階段將發出死亡訊息 
(death information) 包括節點資訊、位置和目
前的時間，此封包訊息將傳送至瀕死節點的
子節點，之後瀕死節點則不再傳送任何訊
息，因為此時該節點的能源幾乎用盡，死亡
訊息也是該節點的最後訊息。瀕死節點的子
節點在收到瀕死訊息後，將負責暫存感測資
料以及瀕死和死亡訊息，因為父節點已經不
能傳送任何封包，必須等行動資料收集器來
收取這些資料。 
接著，本計畫將依據收集到的瀕死節點
訊息進行排程，排列出行動資料收集器的移
動順序，並將針對 time-based scheduling, 
position-based scheduling, dynamic-based 
scheduling 三 種 排 程 策 略 進 行 探 討 。
Time-based scheduling 是匯集點利用節點的
瀕死時間依據先後順序來安排行動收集器的
移動順序；Position-based scheduling 是匯集
點依據瀕死節點與匯集點的距離，以距離近
的先收集為原則，排列行動收集器的移動順
序；Dynamic-based scheduling 是由行動收集
器自己安排行程以 position-based scheduling
為基礎，從尚未收集的位置集合中找到與距
離目前位置最近的收集位置，移動到該處進
行收集。當行動收集器收集到新的瀕死訊
息，則將該位置放進尚未收集的集合中，等
集合中的所有位置均收集過後，再回到匯集
點。 
本計畫將針對三種排程策略進行探討與
分析對感測網路的工作週期與收集效率的影
響。底下將針對排程策略進行討論： 
(1)  Time-based Scheduling (TBS) 
TBS 排程策略是匯集點依據瀕死封包的
發出時間為基礎，作為行動資料收集器的移
動先後順序。感測網路部署後，行動資料收
集器位於匯集點的鄰近並且不工作。等到匯
集點收到第一個瀕死訊息後，指派行動收集
器到該位置收集資料。之後瀕死訊息可能直
接傳送到匯集點或者由行動收集器帶回，行
動收集器在收集位置若無法接收到原先瀕死
節點的子節點，則表示該子節點已經死亡，
也必須將此子節點列入收集的排程中。當行
動收集器回到匯集點時，匯集點會將所有要
收集的地點依據瀕死時間先後順序進行排
列，再告知行動收集器，行動收集器將週期
性的依據排程進行收集。在 Figure 3 中，若
節點進入瀕死階段的順序是 n3 n1 n8，則
行動資料收集器 ms 的移動先後順序是 n3 
n1 n8 s。 
s
n5 n1
n4
n9
n13
n12
n8
n3n2
n7n11
n6
n10
ms
 
Figure 3：TBS 排程的移動路徑 
(2)  Location-based Scheduling (LBS) 
LBS 排程策略是以節點位置為基礎，匯
集點與行動資料收集器的計算排程與資料收
集的方式與 time-based 一樣，唯一不同的是
收集位置的排列順序，此方法是依照瀕死節
點與匯集點的距離，由於假設每個節點知道
自己的位置，或者在部署後匯集點知道所有
節點的位置，因此當匯集點收到瀕死封包後
即可知道要前往收集的位置。排程的設定條
件是收集位置越近，則越先收集。在 Figure 4
中，匯集點 s 收到 n1, n3 和 n8 的瀕死資訊後，
依據節點與匯集點的遠近進行排列，其中 n1
 6
TBS LBS DBS
11 000
11 500
12 000
12 500
13 000
D
ist
an
ce
m

LBA
GBA
 
Figure 7: ms 行走距離(Distance)的比較 
Figure 8 說明總需要傳遞資料的封包數
(Overheads)，由 GBA 與 LBA 可知，GBA 仍
需要較多的 Overheads 去通知 Sink 保有所有
dead nodes 的位置與資訊。此外，可以得知
愈複雜的導航技巧，也就會使用到更多的
Overheads，所以 Overheads 數量來說，DBS
較花 Overheads，LBS 次之，TBS 最少。 
TBS LBS DBS
0
500
1000
1500
2000
2500
3000
3500
O
v
er
he
ad
P
ac
ke
ts
LBA
GBA
 
Figure 8: 傳遞資料的封包數(Overheads)的比較 
對於所收集到感測的資訊，Figure 9 說明
部不管是利用何種導航的技術，LBA 所收集
到的感測資訊一定比 GBA 還來得多，由於
LBA 能量的利用率較高，也較具有可靠度。
TBS、LBS、DBS 變化情況並不明顯。 
TBS LBS DBS
6000
8000
10 000
12 000
14 000
16 000
18 000
Se
n
se
d
da
ta
P
ac
ke
ts
LBA
GBA
 
Figure 9: 收集到的感測資料(Sensed data)數的比較 
四、結果與自評 
我們提出的方法是透過建立一擴展樹收
集感測到的資料，當有節點快沒有電量時，
我們利用兩種方法 BGA 與 LBA 動態的紀錄
Partitioned Area (Subtrees)。當感測網路發生
分割時，為了有效率的收集所有可能可以感
測到的資料，我們利用一行動收集器 ms，利
用三種導航策略 TBS, LBS, and DBS 動態收
集資料。本子計畫的研究成果確實可以提昇
整體無線感測網路之效率，部分成果已發表
於 IFIP WD 2008 國際會議： 
T.-C. Chen, T.-S. Chen, and P.-W. Wu "Data Collection 
in Wireless Sensor Networks Assisted by Mobile Col-
lector," Proceedings of IFIP Wireless Days Conference 
2008, Track 2: Ad hoc and Sensor Networks, (IFIP WD 
2008), Dubai, United Arab Emirates, November 2008. 
五、參考文獻 
[1] M. Batalin and G. S. Sukhatme, “Coverage, Ex-
ploration and Deployment by a Mobile Robot and 
Communication Network,” in Proceedings of the 
2nd International Workshop on Information 
Processing in Sensor Networks, pp. 376-391, Apr. 
2003. 
[2] S. Ganeriwal, A. Kansal, and M. B. Srivastava, 
“Self-aware actuation for fault repair in sensor 
networks,” in Proceedings of the IEEE Interna-
tional Conference on Robotics and Automation 
(ICRA2004), Vol. 5, pp.5244-5249, Apr. 2004. 
[3] Y. Gu, D. Bozdag, E. Ekici, F. Ozguner, and C.-G. 
Lee, “Partitioning Based Mobile Element Sche-
duling in Wireless Sensor Networks,” in Proceed-
ings of Second Annual IEEE Communications So-
ciety Conference on Sensor and Ad Hoc Commu-
nications and Networks (SECON2005), pp. 386- 
395, Sep. 2005. 
[4] N. Heo and P. K. Varshney, “A Distributed Self 
Spreading Algorithm for Mobile Wireless Sensor 
Networks,” in Proceedings of the IEEE Wireless 
Communication and Networking Conference 
(WCNC), Vol. 3, pp.1597-1602, Mar. 2003. 
[5] N. Heo and P. K. Varshney, “An Intelligent Dep-
loyment and Clustering Algorithm for a Distri-
buted Mobile Sensor Network, Systems,” in Pro-
ceedings of the IEEE International Conference on 
Systems, Man and Cybernetics, Vol. 5, pp. 
4576-4581, Oct. 2003. 
[6] A. Howard, M. J. Mataric, and G. S. Sukhatme, 
“Mobile Sensor Network Deployment Using Po-
tential Fields: A Distributed, Scalable Solution to 
the Area Coverage Problem,” in Proceedings of the 
6th International Symposium on Distributed Auto-
nomous Robotics Systems (DARS02), pp. 299-308, 
Jun. 2002. 
 -1-
出席國際學術會議心得報告 
                                                             
計畫編號 NSC-96-2221-E-024-009-MY2 
計畫名稱 無線感測網路之空間資訊收集、彙集與查詢處理之設計與實作－子計畫四：無線感測網路資料彙集協定之研製 (第二年, 2/2) 
出國人員姓名 
服務機關及職稱 
陳宗禧 
國立臺南大學資訊工程學系 教授 
會議時間地點 Dubai, United Arab Emirates, November 24-27, 2008 
會議名稱 2008年 IFIP無線日國際會議 IFIP Wireless Days Conference 2008 (IFIP WD 2008) 
發表論文題目 Geographic Convergecast in Wireless Sensor Networks 
 
 
參加「2008年 IFIP無線日國際會議」 
IFIP Wireless Days Conference 2008 (IFIP WD 2008) 
出席國際會議報告 
November 24-27, 2008 
國立臺南大學資訊工程學系 
陳宗禧 教授 
2008/12/16 
 
一、 參加會議經過 
IFIP Wireless Days Conference 2008, Track 2: Ad hoc and Sensor Networks, (WD 2008), Dubai, 
United Arab Emirates, November 24-27, 2008，由 IFIP於杜拜舉辦的一個探討無線通訊與網路
的重要國際會議之ㄧ，也是 IFIP整合無線通訊領域中重要的國際會議之ㄧ。IFIP WD 2008會
議場面浩大，聆聽演講專家學者與貴賓十分踴躍。 
IFIP 2008投稿論文約 200多篇，錄取率約 40%。IFIP WD 2008共舉辦四天，共有五個
tracks: 
‧Track 1: Home Networking 
‧Track 2: Ad Hoc and Sensor Networks 
‧Track 3: Broadband Wireless 
‧Track 4: Signal Processing for Wireless Communications 
‧Track 5: Network Control "Special focus on wireless and mobility" 
以及多場國際知名學者演講，會議議程 overview 請參閱附件一。Parallel Technical Paper 
Sessions非常多，每一 Session約有 3~5篇論文發表，主題橫跨最新最熱門的無線通訊與網路
等重要研究議題。 
IFIP WD國際會議為第一年舉辦，其 Program Committee皆網羅國際知名的研究學者與
先進，也受到各國學者教授在該研究領域的重視，同時與會的專家學者也都是該領域的佼佼
者，因此該會議是具有學術地位的國際會議。該會議不僅使各國研究學者相互交換研究經驗，
也拓展各國在無線通訊網路之研究成果。該屆會議在杜拜舉辦 IFIP WD 2008國際會議，不僅
 -3-
Chair會場合照。 
 
         
           Dubai開會的會場                     Presenters與 Session Chair會場合照 
 -5-
10h30 
10h30 - 
12h10  
S2.7 
MANET Routing 
protocols 
 
S4.3 
Propagation, Antennas 
and Channel 
Characterization 
S5.3 
Network Optimization 
Lunch Break 
13h50 - 
14h40 
 S2.8 Energy conservation II  
S4.4 
Signal Separation and 
Interference Rejection 
T4 
New Generation 
Networks Traffic 
Theory 
14h40 - 
15h30 
Keynote  
R&D in Wireless - 
Industry or 
Universities 
15h30 - 
16h00 Coffee Break 
16h00 - 
18h00  
S2.9 
QoS support in MANET  
S4.5 
DSP Applications to 
Wireless Systems 
S5.4 
Services I 
Thursday 27 November 2008 
08h30 - 
09h00 Registration  
09h00 - 
10h00 Keynote 4: Cognitive Radio Systems (Matti Latva-Aho, University of Oulu, Finland)  
10h00 - 
10h30 Coffee Break 
10h30 - 
12h10  
S2.10 
Monitoring and Data 
collection in WSN 
 
S4.6 
Diversity Techniques and 
Equalization 
S5.5 
Services II 
Lunch Break 
13h50 - 
14h40 
 S2.11 Security   
T5 
WiMAX 
S5.6 
Applications 14h40 - 
15h45 
S4.7 
Multirate and Multicarrier 
Communications 
15h45 - 
16h15 Coffee Break 
16h15 - 
17h15 Keynote 5: The present and the future for the wireless area : Guy Pujolle and Reda Reda  
17h15 - 
18h00 Closing Session  
 
 
 
 
附件二： 
參加 IFIP WD 2008發表之論文 
T.-S. Chen, H.-W. Tsai, and Y.-H. Chang, "Geographic Convergecast in Wireless Sensor Networks," Proceedings of 
IFIP Wireless Days Conference 2008, Track 2: Ad hoc and Sensor Networks, (WD 2008), Dubai, United Arab 
Emirates, November 24-27, 2008. 
III presents VCCSR algorithm in detail. Section IV evaluates 
the performance of the VCCSR algorithm. VCCSR is 
compared with tree-based routing algorithms. Conclusions are 
presented in Section V. 
II. PROBLEM DESCRIPTION 
A. Situation Assumption 
In general, we usually use tree-based routing, that is the 
common structure-based algorithm, to collect data. The 
advantage of tree-based routing is to find the shortest routes 
between sink and sensors. However, a mobile sink needs more 
costs to reconstruct and maintain the routing tree when the sink 
moves. This is because that the sink needs to reconstruct a new 
tree to maintain the shortest routes dynamically. This consumes 
more communication cost and more energy while restructuring. 
Figure 1 shows that the mobile sink (MS) constructs a tree 
structure to collect data, and it maintains the routing tree during 
the movement. The MS has to reconstruct tree structure, while 
it moves and collects the continuous data from sensors. 
However, the reconstruction costs are very high, including 
energy consumption and communication load. In order to solve 
this problem, an adjustable routing tree is presented to decrease 
the reconstruction cost. The idea of the algorithm is that only a 
part of the tree is needed to reconstruct, and the route change is 
regular. 
 
Figure 1: The examples of tree-based routing for the mobile sink. 
 
Figure 2: An example for virtual structure of VCCSR. 
B. Virtual Structure 
The VCCSR algorithm builds a virtual structure to form the 
backbone of network composed of virtual circles and virtual 
straights. These backbone points are called cluster heads (CH) 
that are responsible for delivering the data of cluster to the MS. 
Figure 2 shows that a virtual structure is covered to the sensor 
field. Because sensor nodes are deployed at random, VCCSR 
algorithm finds and appoints some designated nodes as CHs on 
the virtual structure. These CHs follow the regularity of 
communication rules to form the virtual structure. 
C. Network Characteristics 
Here, three characteristics for sensor networks are assumed. 
First, the network is well-connected. The sensors are deployed 
densely in the network. Second, each node knows its location 
in the network. Last, the topology of sensor network is static. 
III. VCCSR ALGORITHM 
A. Assignment of Cluster Heads 
The VCCSR algorithm sets up a set of CHs to form the 
virtual structure, including i virtual circles and n virtual 
straights. The virtual circles are the concentric circles, and the 
circle radius is ri × , where r be the circle radius of minimum 
circle. The n virtual straights are from the center of circle to the 
circumference of maximum circle to divide the circle into n 
equal pieces. Figure 3 shows an example of virtual structure. 
 
Figure 3: The example for boundary points and cluster head points (n=8, i=1). 
In order to collect data and adjust the routing structure 
dynamically, the VCCSR algorithm is to set up n rendezvous 
points (RPs) on the intersection of the circle and the straights 
(Figure 3 (a)). The RP is the closest to the MS and responsible 
for constructing the whole backbone and collecting data from 
sensor network. The backbone of a RP forms a tree structure. 
Every RP constructs its own structure by the same method. 
When the MS is approaching to another RP, the routing tree 
has to be adjusted. In order to clearly understand which nodes 
can be adjusted, several boundary points (BPs) are set up on 
the virtual structure. The transmission is always along the 
shortest virtual routing. The communication routes (CRs) are 
constructed toward to the MS. The BP is located at the middle 
place of two routes to a RP. Figure 3 (a) shows that BP b1 has 
two shortest routes with the same length to R1 and all BPs for 
all RPs, where the BPs of R1 are b1~b8; the BPs of R2 are b8 and 
b9~b15. R1 and R2 have the same BP b8. 
Theorem 1: The location of BPs on the straights are on 
nrk /××π  away from the center of circle, where k is an integer, 
and π/0 nk << . The location of BPs on the circumference that 
Authorized licensed use limited to: IEEE Xplore. Downloaded on April 30, 2009 at 00:00 from IEEE Xplore.  Restrictions apply.
Proof:  The CHPs are on the straight, circumference and the 
centre of circle.  The number of CHPs on the straight is 
niK ×× ; the number of CHPs on the circumference is ni ×2 ; 
the number of CHPs on the centre of a circle is 1. Therefore, 
the total number of CHPs is 1)( ++×× iKin .□ 
For example, as in Figure 5, there are 145 CHPs. As in 
Figure 6 (a), each CHP sends its corresponding data to the RP 
R1 along its corresponding CR, respectively. The 
communication rules are as mentioned above. A CL is in the 
middle of two RPs. When the MS moves and does not pass the 
CL, only the CHP on the circumference of the maximum circle 
needs to adjust route. When the sink passed through the CL, a 
part of CHPs need to adjust their CRs. 
 
Figure 5: The appointed CHPs for E=300m, C=20m, n=8, i=3. 
Theorem 4: The number of CCHPs is )1(2 2 ++×× iiK . 
Proof: The CCHPs are on the straight, on the circumference 
and on the on the centre of a circle. The number of CCHPs on 
the straight is iK ×2 ; the number of CCHPs on the 
circumference is ( ) ( )111 22 −−−++− iiii ; the number of CCHPs 
on the centre of a circle is 1. The total number of CCHPs is 
)1(2 2 ++×× iiK .□ 
Figure 6 (b) shows the CCHPs and the changed 
communication routes (CCRs). There are 38 CCHPs in Figure 
6 (b). The CCHPs are selected by rule 2~rule 5. In adjustment 
phase, the RP sends the location information of MS to the 
CCHPs. The information is delivered along a regular updated 
path as shown in Figure 6 (c). The CHPs on the updated path 
are called updated cluster head points (UCHPs), and there are 
77 UCHPs. 
Theorem 5: The number of UCHPs is 22 )1()32( −−+× KiKi . 
Proof: The UCHPs are on the straight, the circumference and 
the centre of a circle. The number of UCHPs on the straight 
is KKiK 22 22 +−× ; the number of UCHPs on the 
circumference is )1(2 22 −×+ ii ; the number of UCHPs on the 
centre of a circle is 1. The total number of UCHPs is 
22 )1()32( −−+× KiKi .□ 
In other hands, the update information is delivered through 
%1.53145/77 =  of CHPs. After then we calculate the 
proportion of all UCHPs in our virtual structure. We find that 
the VCCSR algorithm is to save more reconstructing cost when 
more CHPs are used to collect in the proposed structure. 
 
(a)    (b) 
      
 (c) 
Figure 6: n=8, i=3, the tree adjustment of mobile sink moved. 
This paper presents the regular structure to construct and do 
communication. We can also use the same concept in the 
irregular structure. We find the communication rules to save 
the restructure cost. In additionally, we can also use the data 
aggregated way in our presented structure. 
IV. EXPERIMENTAL RESULTS 
In simulation, we use ns-2 to simulate the proposed 
algorithm. Sensors are randomly deployed at a 200m×200m 
region. All sensors have the same communication range and 
energy. The communication range is 20m. i virtual circles and 
n straights are used to evenly divide the circle into n equal 
pieces. In VCCSR algorithm, the distance between two 
neighboring CHs is nr /×π . This value is the closest to 20m 
when n = 4, 8, 16. Two hundred sensors are deployed in the 
sensing area. A MS is out of the sensing area and moves 
around the sensing area. The speed of MS is assumed 1 m/sec. 
We assume that the MS moves along counterclockwise and a 
stop every ten seconds. The period of stop is ten seconds. We 
simulate the VCCSR algorithm with three structures with n = 4 
and i = 4, n = 8 and i = 2, as well as n = 16 and i = 1. The 
number of data packets is from 1000 to 8000 packets or from 
2000 to 16000 packets. 
Figure 7 shows the average communication cost of each 
node. The VCCSR with n = 16 has the best performance. When 
n = 16, VCCSR have 16 straights evenly divide the circle into 
16 equal pieces. Therefore, there are 16 paths to send data 
packets from centre of a circle to the MS on the circumference. 
When VCCSR has more straights, it has more paths to select to 
send data packets along shorter route. Figure 8 shows the total 
cost of every node. Although VCCSR with n=4 has less 
restructuring cost, it has to spend more energy than n = 8 and n 
= 16 while the number of packets increases. When the number 
of packets is more than 3000, VCCSR with n=8 is 
outperformed better than VCCSR with n = 4. The VCCSR with 
Authorized licensed use limited to: IEEE Xplore. Downloaded on April 30, 2009 at 00:00 from IEEE Xplore.  Restrictions apply.
