 I 
 
	

 ! " #
$ % & ' ( ) * + , - . / 0 1 2 	
3 4 5 6  7 8 9 : ; ( 

< = > ? @  	
A B CD E C
! F  G H I J A B 
	K L M ( N O 	P Q R $ S 
 
/ T U V 9 ( W  % X Y Z [ \ ] ^ 	
 _ ` 	\ a b c
d e f g h i  G j k l m n 2 , o p  T q 8 9 b r s t 	u v . Z w
x y > z x y { N ! F S| } ~ X   t  _    !  k  u `        
 B H  	h i   f g       8      u . J A B 	
 o p  8 9 h i    ,   .   K L M ( N O 	   ,  \ 
  ¡   . h i ¢ £ f g ¤ ¥ ¦ § ¨ , ¢ ©  ª  W « k l  ¬ J ­ ®   ¯ ¨ n ­ °
±S 
 
² f g 	
< = > ? @  ³ } < = 3 ¦ ´ µ J A B 	
K L M ( N O 	¶ · ¸    ¹ # $ 1 2 	
3 4 5 6  H I º 
3 » . f g j ¼  b r  ½ ¾  H I ¿ À Á Â Ã   Ä Å 	
b r
8 9 Æ ( ! S 
 
Ç È É Ê	
C

 1 

   
   
   
     
 
As protein structures become increasingly available, structure analysis of proteins has been 
wildly adopted to extract information alongside protein sequence analysis (Watson, Laskowski et 
al. 2005). Although the rising quantity of structural data extends the applicability of 
computational tools for protein structure analysis, it also raises new challenges for rapidly 
processing rising data. This project develops a method of aligning protein local structures 
predicting protein-ligand binding sites according to a pre-defined template library from PDB 
(Protein Data Bank) (Berman, Westbrook et al. 2000). Accommodating the new release of PDB 
in reasonable time involves automating the library construction procedure, and developing an 
efficient structure alignment algorithm for querying the library. 
              
Many computational methods have recently been presented for template construction based on 
various facets of a protein’s tertiary structure: surface clefts (Ferre, Ausiello et al. 2004; 
Kinoshita and Nakamura 2004), residue conservation (Innis, Anand et al. 2004), chemical 
properties (Jambon, Imberty et al. 2003), and molecule interactions (Ivanisenko, Pintus et al. 
2004; Chang, Weng et al. 2006). However, these methods have great difficulty in providing 
binding information as specific as manually-labeled templates (Porter, Bartlett et al. 2004) based 
on expert knowledge and literature searches. For instance, templates built by computational 
methods generally introduce some surrounding information besides the small number of catalytic 
residues participating in the intended chemical reaction of an enzyme. Therefore, structure 
alignment algorithms that are not carefully designed to tackle the computational templates are 
prone to returning many false positive matches (Watson, Laskowski et al. 2005). 
  	 
  	 
  	 
  	 
  
Our recent study developed the Protemot web server, in which a template library based on 
automatically structure analysis has been constructed (Chang, Weng et al. 2006). Protemot 
achieved better prediction power than Catalytic Site Search (CSS) (Bartlett, Porter et al. 2002; 
Barker and Thornton 2003; Stark, Sunyaev et al. 2003; Porter, Bartlett et al. 2004), a web server 
that predicts catalytic sites based on a set of structural templates derived from the well-know 
CSA (Catalytic Site Atlas) (Porter, Bartlett et al. 2004). The superior performance of Protemot 
over CSS comes from the quantity advantage of automatically-extracted templates. However, 
Protemot has 564 false positive matches among 998 predictions, and needs significant 
improvement. This project develops CLoSA (Constraint-based Local Structure Alignment), a 
protein structure alignment algorithm with four physicochemical constraints. Three of the four 
 3 
 
Figure 2 shows the pseudo-code of the cavity identification process. The cavity identification 
process is based on SRKDE, which obtains an approximate probability density function that 
models the distribution of residues in the protein in the three-dimensional vector space. In our 
implementation, the structural alignment is conducted at the residue level, with each residue 
represented by the coordinate of its alpha carbon in the vector space. The SRKDE algorithm 
treats residues in a protein as a set of n samples },,,{ 21 nsss   randomly taken from a 
probability distribution in the three-dimensional vector space, and accordingly builds an 
approximate probability density function of the following form: 
 
 
=








−
−





⋅
=
n
i i
i
m
i
s
n
f
1
2
2
2
exp1)(ˆ
σσλ
β v
v  (1) 
 
Kernel density estimation based cavity identification 
Input A set },,,{ n21 sss =S  of samples in the vector space and parameters β1, β2, k, ρ1, 
and ρ2. 
Output Sˆ , a subset of S. 
Set SS ←ˆ . 
For each S∈is  do the following: 
 Compute )(ˆ isf  according to equation (S1) with 1ββ = . 
Set )}(ˆ{max
1 i
sfw
ni≤≤
← . 
For each S∈is  do the following: 
 If wf ⋅≥ 1)(ˆ ρis , then }{ˆˆ is−← SS . 
For each S∈is  do the following: 
 Compute )(ˆ isf  according to equation (S1) with 2ββ = . 
Set )}(ˆ{max
1 i
sfw
ni≤≤
← . 
For each S∈is  do the following: 
 If wf ⋅≤ 2)(ˆ ρis , then }{ˆˆ is−← SS . 
Return ( Sˆ ). 
Figure 2 The pseudo-code of the kernel density estimation based filtering cavity identification. 
 
where: 
1. v denotes a vector in an m-dimensional vector space, with 3=m  in this study. 
 5 
 Instance at which the value of the approximate probability density function does exceed the 
threshold in the first invocation of the efficient kernel density estimation algorithm. 
 Instance at which the value of the approximate probability density function does not exceed 
the threshold in first invocation of the efficient kernel density estimation algorithm. 
 Instance identified as in a cavity. 
 
(a) The effect after first invocation of the efficient kernel density estimation algorithm. 
 
(b) The effect after the second invocation of the efficient kernel density estimation algorithm. 
Figure 3 An example that illustrates the effect of the proposed kernel density estimation based 
filtering mechanism. 
 
The geometric hashing algorithm in computer graphics (Wolfson and Rigoutsos 1997) is then 
invoked to compare the crucial substructures in the proximity of a cavity of the query protein 
with the templates in the library. The alignment frames examined by the geometric hashing 
 7 
 
Figure 4 An example in which a template (a) is aligned onto a query protein (b) with five 
aligned residue pairs, of which only three are aligned correctly while considering the sequence 
order from the N-terminal to the C-terminal in the template and the query protein. 
 
In Figure 4, assume that the aligned residues of the query protein are 
}Lys,Phe,Tyr,Cys,Val{=s , based on the sequence order from the N-terminal to the C-terminal 
of the template. Then we will first re-order s to }Tyr,Phe,Lys,Cys,Val{=′s  based on the 
sequence order from the N-terminal to the C-terminal of the query protein. The next step is to 
employ the longest common subsequence (LCS) algorithm (Cormen, Leiserson et al. 2001) to 
obtain the longest common subsequence between s and s′ , which could be }Tyr,Cys,Val{ , 
}Tyr,Cys,Val{ , or }Lys,Cys,Val{  in Figure 4. In our implementation, the ratio of the length of 
the longest common subsequence to s is defined as sequence-order-conservation (SOC) ratio. 
Based on SOC ratio, another measure is defined as follows: 
 
 
22 MAX_RMSD)SOC1(RMSDSOCsRMSD ×−+×= , (2) 
 
where MAX_RMSD denotes the maximum distance between two aligned alpha carbons (i.e. the 
maximum of RMSD) and MAX_RMSD = 3Å in this study; sRMSD represents a heuristic 
measure to penalize order mismatches by assigning them larger RMSD values. The fourth 
constraint ensures that SOC ≥ 0.37 and sRMSD ≤ 1.6Å of the aligned alpha carbons. 
 
 9 
residues of the query protein ( },,,{ 21 nbbb  ). The second measure, which estimates the distance 
between the center of the predicted binding site and the ligand, is the distance from the geometric 
center of the aligned residues of the query protein to its closest ligand atom in the query 
protein-ligand complex. 
 
By assigning appropriate thresholds to these two measures, each predicted alignment can be 
categorized into three conditions. First, a prediction is said to be correct when the distance 
between the predicted binding site and the answer is shorter than a distance threshold. Second, a 
prediction is said to be incorrect when the distance between the predicted binding site and the 
answer is longer than the threshold. Third, no prediction is given if the query protein contains no 
substructures that can pass the matching criteria when compared with the template. In this 
experiment, the performance is evaluated by the false positive ratio defined as follows: 
 
 
sprediction  ofnumber  
sprediction incorrect   ofnumber  
ratio  positive  false = , (3) 
 
where the ‘number of predictions’ denotes the number of the alignments passing the matching 
criteria. 
 
Experimental results. Table 1 and Table 2 show the performance of Protemot and this work in 
locating binding regions. The false positive ratio of the present method in hitting the proximity of 
the protein-ligand binding site is in the range 14.9%–54.9%, depending on the distance threshold 
for defining the ‘proximity’. The adopted local structure alignment requires that the distance 
between the alpha carbons of two aligned residues be less than 3Å. This condition suggests that 
≤ 3Å could be a reasonable threshold for Table 1. Similarly, the template construction exploits 
the information from the region within 6.5Å to a ligand and an appropriate threshold for Table 2 
should be ≤ 6.5Å. Based on the two thresholds, the false positive ratios of the present method in 
locating the binding site are 22.2% and 15.2% in Table 1 and Table 2, respectively. Although the 
first measure seems to be more sensitive, the preferred measure should depend on the 
requirement of the application. Nevertheless, from Table 1 and Table 2, the proposed 
sequence-order constraint can reduce the false positive ratio in hitting the proximity of 
protein-ligand binding sites, regardless of the measure or threshold. 
 
 11 
 
Figure 5 Comparison between Protemot and this work in locating protein binding regions by 
sequence identity between the query protein and the template, where x-axis is the identity 
between the template and the query protein and y-axis is false positive ratio. (a) A protein-ligand 
binding site is considered to be successfully predicted if the distance between the geometric 
centers of the predicted and the real binding sites is within 3Å. (b) A protein-ligand binding site 
is considered to be successfully predicted if the distance from the geometric center of the 
predicted binding site to its closest ligand atom is within 6.5Å. 
 
Prediction of the enzyme class based on protein-ligand binding sites 
 
Experimental design. This section reports the experiment conducted to evaluate the prediction 
power of Protemot with and without the proposed sequence-order constraint as well as the 
prediction power of CSS in predicting enzyme class, which is the main evaluation index in the 
Protemot paper. The template library of Protemot contains a total of 1051 entries. Conversely, the 
web version of CSS uses only 147 templates derived from CSA entries. As shown in Table 3, for 
the majority of the templates in the CSS template library, we can find entries in the Protemot 
template library belonging to similar group in terms of EC numbers, SCOP families, and SCOP 
 13 
indexes and their harmonic mean were used to evaluate the performance of the predictors. In this 
study, we provide a more comprehensive analysis by introducing more indexes, especially on 
those ‘no predictions’. The ‘Prediction rate’ in Table 4 shows the probability that the method 
could success complete the prediction while processing a new testing enzyme. The ‘False 
positive ratio’ in Table 4 reveals the prediction performance once the method made a prediction. 
Otherwise, the accuracy represents an overall index of the prediction performance. Considering 
the lack of a template associated with the answer enzyme class in the library, whether a ‘no 
prediction’ is correct becomes a matter of opinion. The conventional accuracy (‘Accuracy’ in 
Table 4) regards such a ‘no prediction’ as incorrect since each of the 1000 testing enzymes is 
associated with an EC number. From an active view, these no predictions are correct (‘Active 
accuracy’ in Table 4). There is another view on these no predictions is that they are neither 
correct nor incorrect (‘Passive accuracy’ in Table 4). 
 
Table 4 Comparison between Protemot and this work based on four-digit EC numbers 
 Protemot This work CSS-L1 CSS-H2 
Total3 1000 1000 1000 1000 
Cover rate4 73.2% 73.2% 14.6% 14.6% 
Covered performance     
  I. Correct prediction5 408 515 81 75 
  II. Incorrect prediction6 310 90 61 8 
  III. No prediction7 14 127 4 63 
Uncovered performance     
  IV. No prediction8 14 123 65 777 
  V. Incorrect prediction9 254 145 789 77 
Prediction rate10 97.2% 75.0% 93.1% 16.0% 
False positive ratio11 58.0% 31.3% 91.3% 53.1% 
Accuracy12 40.8% 51.5% 8.1% 7.5% 
Active accuracy13 42.2% 63.8% 14.6% 85.2% 
Passive accuracy14 41.4% 58.7% 8.7% 33.6% 
1CSS with lower confidence, with the predictions classified by CSS as ‘unlikely’ treated as ‘no prediction’. 2CSS 
with higher confidence, with the predictions by CSS as ‘unlikely’ or ‘possible’ treated as ‘no prediction’ 3Number of 
testing enzymes. 4A testing enzyme is ‘covered’ if the template library contains a template extracted from a 
protein-ligand complex structure with the same four-digit EC number as the testing enzyme. 5The testing enzyme is 
covered, and the algorithm makes a correct prediction. 6The testing enzyme is covered, but the algorithm makes an 
incorrect prediction. 7The testing enzyme is covered, but the algorithm makes no prediction. 8The testing enzyme is 
not covered, and the algorithm makes no prediction. 9The testing enzyme is not covered, but the algorithm makes a 
prediction, which is certainly incorrect. 10Prediction rate = (I+II+V)/Total. 11False positive ratio = (II+V)/(I+II+V). 
12Accuracy = I/Total. 13Active accuracy = (I+IV)/Total. 14Passive accuracy = I/(Total–IV). 
 
 15 
Table 6 Statistics of the ‘no predictions’ filtered by the introduced sequence-order constraint 
 
Based on 
four-digit EC 
numbers 
Based on 
three-digit EC 
numbers 
Protemot makes a prediction, while this work makes 
no prediction 
222 222 
The testing enzyme is covered, and only Protemot 
makes a correct prediction, while this work makes 
no prediction1 
12 17 
The testing enzyme is covered, and Protemot makes 
an incorrect prediction, while this work makes no 
prediction2 
101 204 
The testing enzyme is uncovered, and Protemot makes 
an incorrect prediction, while this work makes no 
prediction3 
109 1 
1The ‘no predictions’ reported by this work were incorrectly filtered by the sequence-order constraint. 2The ‘no 
predictions’ reported by this work were innocent to the predictor, since it delivered an incorrect prediction without 
the sequence-order constraint. 3The ‘no predictions’ reported by this work were correctly filtered, since the testing 
enzyme is uncovered. 
 
Case study 
 
This section presents two testing examples to illustrate the effect of the sequence-order constraint. 
One testing case is chosen from the experiment of predicting binding location, and the other is 
chosen from the experiment of predicting enzyme class. Both cases are chosen from the weak 
homology region (sequence identity <25%) of the two experiments. 
 
The first case is the alignment between a phosphoserine aminotransferase from bacillus 
alcalophilus (PDB: 1W23) and a ptpase from bos taurus (PDB: 1DG9). The two complex 
structures have a common ligand, 4-(2-hydroxyethyl)-1-piperazine ethanesulfonic acid (HEPES). 
However, HEPES plays different roles in the two complexes: a buffer in 1W23, and a competitor 
of vanadate (which acts as an analogue of the transition state of the cleavage reaction) in 1DG9. 
For this case, Protemot reports an alignment with a RMSD of 1.66. However, this alignment has 
only three pairs sequentially in order out of five aligned residue pairs, resulting in a sRMSD of 
2.07. Therefore, introducing the sequence-order constraint filters this alignment. 
 
The second case is the alignment between two lipases (PDB: 1KU0 and 1HQD) having the same 
four-digit EC number (3.1.1.3). Accordingly, a predictor for functional inference should report 
that the two enzymes are highly likely to have the same function. PSI-BLAST is invoked to 
analyze the two proteins, and finds no significant similarity. Conversely, the present method 
 17 
 
	


Journal Papers: 
1. Ting-Ying Chien, Darby Tien-Hao Chang*, Chien-Yu Chen, Yi-Zhong Weng and 
Chen-Ming Hsu, “E1DS: catalytic site prediction based on 1D signatures of concurrent 
conservation,” Nucleic Acids Research, vol. 36, Web Server Issue, W291-W296, 2008. 
2. Ting-Ying Chien, Darby Tien-Hao Chang*, Chien-Yu Chen, Yi-Zhong Weng and 
Chen-Ming Hsu, “E1DS: catalytic site prediction based on 1D signatures of concurrent 
conservation,” Nucleic Acids Research, vol. 36, Web Server Issue, W291-W296, 2008. 
3. Darby Tien-Hao Chang*, Chih-Ching Wang and Jian-Wei Chen, “Using a kernel density 
estimation based classifier to predict species-specific microRNA precursors,” BMC 
Bioinformatics, 9(Suppl 12):S2, 2008. 
4. Darby Tien-Hao Chang*, Hsuan-Yu Huang, Yu-Tang Syu and Chih-Peng Wu, “Real value 
prediction of protein solvent accessibility using enhanced PSSM features,” BMC 
Bioinformatics, 9(Suppl 12):S12, 2008. 
Conference papers: 
5. Ting-Ying Chien, Chien-Yu Chen, Darby Tien-Hao Chang, and Chen-Ming Hsu, “Deriving 
Functional Signatures from Protein Sequences by Iterative Pattern Mining,” in proceedings 
of the Eleventh Annual International Conference of Research in Computational Molecular 
Biology, San Francisco Bay Area, 2007. 
6. Yen-Jen Oyang, Darby Tien-Hao Chang, Yu-Yen Ou, Hao-Geng Hung, and Chien-Yu Chen, 
“Prediction of Protein Secondary Structures with a Novel Kernel Density Estimator,” in 
proceedings of the 2007 International Conference on Machine Learning: Models, 
Technologies & Applications, Monte Carlo Resort, Las Vegas, Nevada, USA, 2007. 
7. Ting-Ying Chien, Darby Tien-Hao Chang, Chien-Yu Chen, Yi-Zhong Weng, and 
Chen-Ming Hsu, “E1DS: catalytic site prediction based on 1-dimensional signatures of 
concurrent conservation,” in poster Proceedings of the 16th Annual International Conference 
Intelligent Systems for Molecular Biology, Toronto, Canada, 2008. 
8. Ting-Ying Chien, Darby Tien-Hao Chang and Chien-Yu Chen, “Catalytic Site Prediction 
Using E1DS Server,” in poster proceedings of the 7th Annual International Conference on 
Computational Systems Bioinformatics, Stanford, California, 2008. 
9. Darby Tien-Hao Chang, Chih-Ching Wang and Jian-Wei Chen, “Using a kernel density 
estimation based classifier to predict species-specific microRNA precursors,” in proceedings 
of the 7th International Conference of Bioinformatics, Taipei, Taiwan, 2008. 
10. Darby Tien-Hao Chang, Hsuan-Yu Huang, Yu-Tang Syu and Chih-Peng Wu, “Real value 
prediction of protein solvent accessibility using enhanced PSSM features,” in proceedings of 
the 7th International Conference of Bioinformatics, Taipei, Taiwan, 2008. 
 19 
    	 
    	 
    	 
    	 
  
          ! " # $ % & ' ( )* + , - . / 	0 1 2
3 !  4 5 )* + , - * ' 6 7 8 9 : ; < = > ' ( ? @ . A B 0C ( D $ % & ' ( E
F G . H I J K   .  L 
 
1.  4 M / 	. N O P Q R + , - 0S T ' ( )* . U V W K $ % & ' ( )* X
 Y Z [ \ ] ^ J . _ ` 0a  $ % & b )* c d e f 0)a g D h  ; < = ?
@ . A B i 
2. j  k D l m E F G . )* n o 0p q Q r s t u v * (false positive match)w M
F  ' ( n : )* x y - X  z { * 7 8 ' ( . | } 0~ [ \  8 |  b 
) 0       7 8 ' (         . t u v * i 
3.        B 0      @   . $ % & 7 8 ' (        4 
x y C ( . $ % & n : ; < = 0 v n : )*    0   H I $ % & ¡ V D ¢ B
4 7 8  
 
 L £ H ¤ ¥ ¦ § ¨ © ª x y x 	7 8 ' ( )* + , - 0V « T ¬
­ ® ¯  ° $ % & ± ² . 7 8 ' ( |  ³ . x y  L   £´ $ % & ¡ V H I 
. µ ¨ © ª  ¨ ¶ 6 . · 0 ²   $ % & ; < = . ¸ ¹ º » .  L  
¼ 4  ½ ¾ ¿ À ² Á  © ª . ¼ 4 Â 0> ¬  Ã Ä ¨ Å 8 . x y U Æ ¢  L  
 
