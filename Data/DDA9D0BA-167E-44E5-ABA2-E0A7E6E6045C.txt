  3
點的位置及數目，再依核心點與三角點位置及數目作為分類依據；K. S. Fu[16]與Rao[17]
則利用指紋紋路的流向訂定一套文法規則來分析指紋特徵，再依此分析結果做為分類依
據；此外，也有使用傅利葉轉換後的頻域資料來做為分類依據，如P. Engler[18]與R. J. 
Green[19]。 
在比對方面，Hrechak 和Mchugh[20]以指紋的dot、ending 與bifurcation 為主要特徵
及配合spur、island、bridge、crossover 與short ridge 五個所組合構成的特徵，藉由每個
特徵點鄰近的特徵點個數及種類做為特徵向量來比對；Coetzee 和Botha[3]以各區塊內的
流向及頻域上之能量為特徵，以類神經網路來完成識別；Hsu和Wu[21]以所提出之演算法
將指紋細微特徵所形成之特徵點圖形進行比對。 
三、 影像前處理 
我們一開始針對影像的強化著重在提升整個指紋紋路細部資訊，使其也能在擷取辨
識特徵時也能有效的找出指紋分叉點及端點，有利於往後的辨識工作。如此便可大幅減
少整個系統運算所耗費的時間，我們的系統流程如圖3所示。 
指 紋 影 像 輸 入
G a b o r 方 向 強 化
二 值 化
細 線 化
指 紋 影 像
前 處 理
找 指 紋 特 徵 點
( 端 點 及 分 叉 點 )
指 紋 分 類
指 紋 資 料 庫 建 檔
( 比 對 )
特 徵 點 抽 取
特 徵 點 確 認
方 向 特 徵 抽 取
找 區 域 中 心 點
指 紋 分 類
紋 路 修 正
 
圖3 改良後的自動指紋辨識系統流程示意圖 
一開始我們先利用同時具有方向-頻率選擇特性的Gabor濾波器進行紋路強化，以移
除不需要的雜訊部份並保留真正的紋路結構。 
指紋影像強化處理的主要目的是幫助後續指紋特徵的抽取，直覺上若能將強化後影
像採以二值處理，則對於指紋特徵點的萃取程序上將簡易許多。從圖4(b)的結果顯示，指
紋紋路的對比經強化後已獲得明顯提昇，因此文中僅採用簡單的區域平均臨界值法
(Regional Average Thresholding, RAT) [22]進行二值化處理，以切割出影像中指紋山脊的
部分。指紋影像經過細化處理後，我們即可針對所有細化後指紋山脊點進行多種指紋特
徵點的偵測及方向特徵的擷取，圖4 (e)為最後細線化後的結果。 
  5
       
圖6 計算出每個骨幹附近的像素方向值 
     
圖7 從細化後圖形尋找像素方向值 
沿著骨幹全部計算完畢之後，再用5×5的遮罩從頭全部依序計算一次，把有含一
個方向值以上的5×5遮罩裡面的方向值平，然後賦予此遮罩一個方向值，執行完後方
向的特徵縮減為(height/5)*(width/5)個，如圖8為所擷取出來的方向特徵。 
     
圖 8 計算遮罩方向 
 
最後，再將整個方向特徵用一個 5*5 遮罩作平滑，為取 5*5 遮罩裡面的最多數方向
來取代遮罩中心的方向，做完後即為我們所使用的方向圖(direction image)，如圖 9。 
  7
六、 特徵參數擷取 
因為在我們所找到的中心點周圍部份其中在下半部是最能表現出指紋類型特徵的方
向特性，因此最後我們將擷取中心點的下半部八邊形的方向特徵作為我們分類的依據，
如圖12所示。圖13為所擷取的方向特徵區域。 
 
圖12 下半部八邊形遮罩 
   
圖 13 方向特徵擷取區域 
七、 指紋分類 
在分類器的選擇上我們應用了比較快速的C-Means分類器，由於它不需要訓練，運算
量不大，且收斂時間短，應用在我們所擷取的特徵向量上也有不錯的成果。 
本章節將說明本文所提的快速分類方法，並且以NIST 4[23]指紋資料庫作為實驗測
試，最後我們使用2000枚作測試，在沒有拒絕率並分四類的分類上，本文所提的分類系
統可以達到93.6%的正確率。 
特徵參數探討 
我們將方向特徵參數分成左右兩邊，以下就以指紋的四大類型討論其類型間中心點
周圍紋路的不同方向特性： 
(1) 弓形(Arch)：中心點上方與下方左右兩的邊紋路互相對稱，兩邊紋路的方向皆為
向下(由內向外)，如圖14。 
 
圖14 弓形(Arch)中心點周圍紋路走向 
(2) 左環線形(Left loop)：中心點上方紋路互相對稱，兩邊紋路方向向下，中心點下
方左右兩邊紋路方向皆為向左，如圖15。 
  9
除了上述特徵，我們發現在一部分的情況下，由於擷取的區域包含兩個以上的方向
特徵，會產生方向的混淆，而主要原因是因為在擷取區域裡面可能包含三角點及核心點，
因此為了避免之後由於有奇異點的出現而產生方向特徵的混淆而導致分類錯誤，我們在
第一階段先將包含三角點或核心點的情況分離出來，以下為四種包含三角點或核心點的
情況。 
 
圖 19 左環線形右邊包含了三角點且左邊的向右特徵在閥值以上 
 
圖 20 右環線形左邊包含了三角點且右邊的向左特徵在閥值以上 
 
圖 21 螺紋形(一)-左邊包含核心點且右邊向左特徵在閥值以上 
 
圖 22 螺紋形(二)-右邊包含核心點且左邊向右特徵在閥值以上 
 
八、 分類結果 
最後，我們以 BCB 程式來完成本實驗結果，我們使用的電腦設備為 Pentium 4 2.3GHz 
CPU、記憶體 256MB 及 Window XP 作業系統，軟體使用 Borland C++ Builder 設計程
式，指紋影像採用 NIST 指紋資料庫光碟，影像處理大小為 512x512，包含了 2000 枚指
紋，共 4000 張的指紋影像資料。 
下圖為軟體操作介面： 
L-score   
High      
L-score   
High    
  R-score 
     High 
R-score 
     High 
  11
    
圖25 所拒絕的影像品質低劣的影像 
表3 在不同的拒絕率下之系統效能 
Rejection Rate 0% 1.8% 8.5% 19.5% 
4-class  93.6% 95% 96.8% 98.3% 
 
最後我們比較了使用其他的方法的實驗結果，皆使用NIST4的資料庫來測試，表4為
與Sen和Wei的方法比較[24]，他們將中心點周圍分成7*7個方塊，計算每個方塊的平均角
度特徵，然後形成一個49維的特徵向量，作為分類依據，而表5則是與Anil K. Jain的方法
所比較的結果[25]，他們使用Gabor濾波的方法尋找中心點周圍的方向特徵，最後用類神
經分類，從NIST4資料庫取2000枚指紋訓練，使用剩餘2000枚測試。由上述比較結果可以
得知，本文所提出來的方法確實可以提升分類的正確率與系統效率。 
表4 與Sen和Wei的方法比較結果[24] 
Exp.  
True Whorl Left loop Right loop Arch 
Error rate 
(FRR) 
Proposed 
FRR 
Whorl 184 6 8 2 8% 8.9% 
Left loop 16 262 4 18 12.7% 3.5% 
Right loop 11 2 272 15 9.3% 3.6% 
Arch 0 15 9 176 12% 8.4% 
FAR (%) 12.8% 8% 7.2% 16.6% Accuracy 89.4% 
 
Proposed 
FAR 0.8% 12.2% 12.9% 2.6% 
 Accuracy 
93.6% 
 
表5 與Anil K. Jain的方法之比較結果[25] 
Rejection rate 1.8% 8.5% 19.5% 32.5% 
Multi-channel 94.8% 95.5% 96.6% 97.8% 
Proposed Method 95% 96.8% 98.3% N/A 
表6為系統執行運算所花費的時間，從前處理到分類，一千筆資料平均運時間每筆為
1.482秒。 
 
