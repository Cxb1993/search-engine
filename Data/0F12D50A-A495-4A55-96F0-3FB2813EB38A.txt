  1 
 自主視覺與控制之運算智能科技(2/2) 
Computational Intelligence of Autonomous Visual Perception and Control (2/2) 
 
計畫編號：NSC-94-2213-E-002-049 
執行期間：2005 年 8月 1日 至 2006 年 7月 31 日 
執行單位：國立台灣大學電機研究所 
計畫主持人：林巍聳  教授 
計畫參與人員：方俊雄 楊秉杰 塗家祥 田妍君 林建同 張良豪 莊明罡 
 
摘要-感知、學習、記憶蒐尋、決策、規劃和執行等智能的總合是人類行為表現的基礎，自主視知覺和自主行動控
制的能力即是源自這種智能，也是非常具有代表性的智能科技論題，而演算智能則隱然是實現神經與腦智能的最
適用科技。本研究的目的是以演算智能發展自主視知覺和自主控制系統的相關理論和技術，我們藉由實現視警覺、
視注覺和物體辨識來達成自主視知覺的功能，做為後續決策的根據。藉由模糊類神經網絡的自評自調設計法發展
出自主控制，使控制器可以自行從經驗中萃取對策，也可以針對受控體的未來傾向尋求優化的控制信號。相關的
研究成果已經著作五篇論文分別發表於國際學術期刊或會議，內容涵蓋理論的發展以及實驗驗證結果，本研究報
告僅敘述演算型視注覺和自評自調式模糊類神經網絡控制的核心技術，其餘細節請參考已發表的論文。  
 
關鍵詞-自主視知覺、演算智能、類神經網路、模糊系統、自評自調   
 
Abstract-Perception, learning, searching, decision-making, planning and acting are the underlying intelligent processes of 
human behavior. Autonomous visual perception and motion control is one of the most representative processes of such 
intelligence. Computational intelligence emerges to be the most potential technological solutions of the nervous and brain 
functions. The aim of this research is to develop the methods and technologies of autonomous visual perception and 
motion control with computational intelligence. The autonomous visual perception is obtained by implementing the 
computational models of visual attention, visual alerting and shape recognition for decision making. For autonomous 
motion control, an adaptive critic neuro-fuzzy control design has been developed to obtain the control by learning from 
scratch. Five papers have been published and the subjects touch the theory and experiment of applying computational 
intelligence in visual perception and motion control. This report describes simply the core technologies about 
computational visual attention and adaptive critic neuro-fuzzy control. It is advised to refer to the published papers for 
other results. 
 
Keywords-autonomous visual perception, computational intelligence, neural networks, fuzzy system, adaptive critic 
design 
 
Subject 1: Computational Model of Visual Attention 
under Intention 
Wei-Song Lin and Chun-Hsiung Fang 
 
Abstract-Human attention behavior relies not only on the 
natural contrastive information but also much top-down 
information in the mind. The intention represents 
preference or repugnance for specific image property 
undoubtedly affects the visual attention. By introducing 
the intentional features and the fuzzy inference system 
into the computational model, the Intention-oriented 
Computational Visual Attention (ICVA) is developed and 
shown able to combine the intention with the optical 
excitation to find the attentive spots. An intention about 
favorite colors, a desired object or even multiple desired 
objects is expressed as a combination of preference 
vectors and topological relationships. Referring to the 
preference vectors, the intentional features are extracted. 
According to the topological relationships, the linguistic 
rules of the fuzzy inference system are built to infer the 
results. Several experiments have been conducted and the 
results verify the feasibility of the proposed design. 
 
Keywords-visual attention, machine vision, feature 
extraction, computational intelligence 
 
1. Introduction  
Visual attention is an important perception and an 
essential ability of the early human visual system. It can 
automatically filter out the careless information and detect 
rapidly the salient parts in the scene. Human vision always 
relies upon this mechanism to focus on the interesting 
target instead of examining every detail in the view. This 
allows high-level vision, such as recognition and 
understanding, to proceed simply with the salient parts so 
as to relieve the burden in the brain process. Inspired by 
the autonomous perceptibility of human vision, 
Computational Visual Attention (CVA) has been 
developed a technological practice of this ability. The 
CVA needs image processing and feature extraction to 
derive some habitual features such as intensity, red-green, 
blue-yellow and orientations from the original image. 
Then, the center-surround mechanism, which is the most 
important technique behind the CVA [1] is applied to 
highlight the differences of features of a center point with 
respect to its surroundings. Consequently, a feature map is 
  3 
the last section. The required types and number of features 
are not constant but depend on the application. Usually, 
given a color image, the habitual features are chosen as 
the normalized intensity, two color-contrastive chromatic 
components RG and BY, and orientations. Normalization 
of the intensity feature is necessary to eliminate the 
influence of illumination. Based on the orthogonal 
property in the color space, the color-contrastive 
chromatic features RG and BY can uniquely identify a 
specific color. The orientation features are extracted from 
the intensity feature to present local orientations. To 
alleviate computation burden, the four local orientation 
features for }135,90,45,0{ oooo∈θ  are combined into a 
single orientation feature. Extraction of the intentional 
feature refers to the preference vectors defined by the user. 
B. The conspicuity mapping process 
In the conspicuity mapping process, each feature map is 
transformed into a conspicuity map in which the parts 
strongly different from their surroundings are highlighted. 
The detail of this process is illustrated in Fig. 2 (b). Firstly, 
a feature map is decomposed into an eight-scale Gaussian 
pyramid. The Gaussian pyramid is also a multi-resolution 
representation of the corresponding feature map. 
Generally, one intensity-feature Gaussian pyramid GauI, 
two color-feature Gaussian pyramids GauRG and GauBY, 
one orientation-feature Gaussian pyramid GauO, and at 
least one intention-feature Gaussian pyramid GauIN are 
computed. The center-surround mechanism is 
implemented with a Difference-of-Gaussian filter, DoG, to 
strengthen the local contrastive activities. 
δ+=−= cssGaucGausc         ,)()(),(DoG  (6) 
where }4,3,2{∈c  and }4,3{∈δ . In fact, (6) calculates 
the differential values between a fine scale c (center) and a 
coarse scale s (surround) feature maps. Computing the 
difference between a pair of fine- and coarse-scale feature 
maps obtains a sub-conspicuity map. For each feature, six 
sub-conspicuity maps are obtained and then combined by 
taking average to obtain a single conspicuity map. 
C. The fuzzy classification process 
In the fuzzy classification process, a fuzzy inference 
system takes the conspicuity maps as inputs to infer the 
attention map. Then attentive spots are found in the 
attention map by using threshold method. The linguistic 
rules in the fuzzy rule base define the way of combining 
the conspicuity maps to infer a consequence. With the 
intentional features, an intention can be easily expressed 
as the linguistic rules to characterize the satisfactory 
attentive spots. The fuzzy inference system enables the 
ICVA to take human preference and/or repugnance into 
account. The fuzzy inference system is composed of the 
fuzzifier, fuzzy rule base, fuzzy inference engine, and 
defuzzifier. 
1) Fuzzifier: Each point of the conspicuity map has a 
value called the strength which is the input of the 
fuzzy inference system. The universe of discourse of 
the strength is separated into several fuzzy sets and 
each is associated with a linguistic variable through a 
membership function. Fig. 3 shows an example of the 
strength is associated with two linguistic variables, L 
(low) and H (high), and the corresponding 
membership functions. Eventually, the fuzzifier 
transforms a conspicuity map into a linguistic 
conspicuity map. 
2) Fuzzy rule base: The fuzzy rule base contains a 
collection of IF-THEN rules. Each defines the logical 
and/or mathematical manipulations (premise part) and 
a consequence to infer an output from the linguistic 
conspicuity maps. Given the required linguistic 
conspicuity maps, the output of a rule is the 
confidence of the corresponding rule. Usually 1 and 0 
indicate strong and none confidence, respectively. 
Because of using the linguistic variables, the intention 
about the property of the attentive spots can be easily 
expressed by the IF-THEN rules. But the number of 
rules depends on the number of linguistic conspicuity 
maps and the number of linguistic variables for the 
strength. With five linguistic conspicuity maps and 
two linguistic variables for the strength, there will be 
25=32 rules. The required number of rules being 
dependent of the input dimension is known as the 
curse of dimension. In the ICVA, one would therefore 
like to keep the number of linguistic conspicuity maps 
and linguistic variables as few as possible. 
3) Fuzzy inference engine: The fuzzy inference engine 
combines the firing strengths of the associated 
membership functions by the fuzzy operation to infer 
a rule confidence. For classification, using Max-Min 
operator is simple and efficient. 
4) Defuzzifier: The defuzzifier combines and transforms 
the outputs of fuzzy rules into a crisp value. The 
center average defuzzifier is calculated as below. 
∑∑
==
=
J
j
jF
J
j
jFj mmmM jj
11
)()( µµ    (7) 
where J is the total number of the fuzzy rules, jm  is 
the output (rule confidence) of rule j, 
jFµ denotes 
the output membership function of rule j, and M is a 
crisp value between or equal 0 and 1. Large crisp 
value indicates high degree of attention and vice 
versa. 
Attentive spots are found as the areas with the degree of 
attention larger than a predefined threshold. The highest 
degree of attention appearing in an attentive spot 
determines its priority. Therefore changing the intentional 
features and/or their topological relationships may change 
the attentive spots as well as their priorities. Consequently, 
the ICVA system obtains the attentive spots by 
considering not only the habitual features but also the 
intention. 
 
4. Experimental results  
Three experiments are conducted to demonstrate the 
ability of the ICVA system. The first case shows an 
intention can be the favorite colors. For simplicity, this 
case is called the color-oriented visual attention. The 
second case shows an intention can be the characteristics 
of a desired object so that the ICVA will capture the 
object-like parts as the attentive spots. This is called the 
  5 
manual task needed an automated substitution.  
 
References  
[1]  L. Itti, C. Koch, and E. Niebur, “A Model of 
Saliency-Based Visual Attention for Rapid Scene 
Analysis,” IEEE Trans. on Pattern Analysis and 
Machine Intelligence, vol. 20, no. 11, pp. 1254-1259, 
1998.  
[2]  R. Milanese, T. Pun, S. Gil and J.M. Bost, 
“Exploiting dynamic aspects of visual perception for 
object recognition,” Proceedings of Perception for 
Action Conference, IEEE, pp.193-205, 1994.  
[3]  W.S. Lin, A.T. Liu, and C.H. Fang, “Computational 
autonomous visual perception using cellular neural 
networks,” International Conference on 
Computational Intelligence for Measurement 
Systems and Application, IEEE, pp. 198-202, 2005.  
[4]  S. Frintrop, B. Backer, and E. Rome, “Goal-directed 
search with a Top-down Modulated computational 
attention system,” Proc. Of DAGM 2005 Lecture 
Notes in Computer Science, 2005. 
[5]  N. Ouerhani, R.V. Wartburg, H. Hügli and R. Müri, 
“Empirical validation of the saliency-based model of 
visual attention,” Electronic Letters on Computer 
Vision and Image Analysis, pp. 13-24, 2004.  
[6]  Y. Chen and J.Z. Wang, “A Region-Based Fuzzy 
Feature Matching Approach to Content-Based Image 
Retrieval,” IEEE Trans Pattern Analysis and 
Machine Intelligence, vol. 24, no. 9, pp. 1252-1267, 
2002.  
-100 -80 -60 -40 -20 0 20 40 60 80 100
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1
α = 1
η
2d
 
Fig. 1  The profile of Cauchy function 
 
 
Fig. 3  Linguistic variables L (low) and H (high) and the 
corresponding membership functions 
 
 
Fig. 2  (a) Computational model of the ICVA, (b) detail of the conspicuity operator 
 
  7 
 
Table 1 The fuzzy rule bases of Experiment 3 for the m-object visual attention 
L: LOW,    H: HIGH,    A: ATTENTION,    U: UNATTENTION  
Fig.7 (a)  CM1: intensity,  CM2: red-green,  CM3: blue-yellow,  CM4: diskette = blue neigh. black,  CM5: doll = 
white neigh. blue 
RLUES:  If (CM1 is L) and (CM2 is L) and (CM3 is H) and (CM4 is H) and (CM5 is L) then (CLASS is A)  
If (CM1 is H) and (CM2 is L) and (CM3 is L) and (CM4 is L) and (CM5 is H) then (CLASS is A)  
Else (CLASS is U) 
Fig.7 (b)  CM1: intensity,  CM2: red-green,  CM3: blue-yellow,  CM4: diskette = blue neigh. black,  CM5: knife = 
yellow 
RLUES:  If (CM1 is L) and (CM2 is L) and (CM3 is H) and (CM4 is H) and (CM5 is L) then (CLASS is A)  
If (CM1 is L) and (CM2 is L) and (CM3 is H) and (CM4 is L) and (CM5 is H) then (CLASS is A)  
Else (CLASS is U) 
Fig.7 (c)  CM1: intensity,  CM2: ball = yellow neigh. blue,  CM3: phone = grey neigh. black,  CM4: knife = yellow 
RLUES:  If (CM1 is L) and (CM2 is L) and (CM3 is L) and (CM4 is H) then (CLASS is A)  
If (CM1 is L) and (CM2 is H) and (CM3 is L) and (CM4 is L) then (CLASS is A)  
If (CM1 is H) and (CM2 is L) and (CM3 is H) and (CM4 is L) then (CLASS is A)  
Else (CLASS is U) 
Fig.7 (d)  CM1: intensity,  CM2: ball = yellow neigh. blue,  CM3: phone = grey neigh. black,  CM4: knife = yellow 
CM5: doll = white neigh. blue 
RLUES:  If (CM1 is L) and (CM2 is L) and (CM3 is L) and (CM4 is H) and (CM5 is L) then (CLASS is A)  
If (CM1 is L) and (CM2 is H) and (CM3 is L) and (CM4 is L) and (CM5 is L) then (CLASS is A)  
If (CM1 is H) and (CM2 is L) and (CM3 is L) and (CM4 is L) and (CM5 is H) then (CLASS is A)  
If (CM1 is H) and (CM2 is L) and (CM3 is H) and (CM4 is L) and (CM5 is L) then (CLASS is A)  
Else (CLASS is U) 
 
 
Subject 2: Adaptive Critic Neuro-Fuzzy Control by 
Learning from Scratch 
Wei-Song Lin, Glorious Tien and Chia-Hsiang Tu 
 
Abstract-This paper presents an adaptive critic 
neuro-fuzzy control design, which enables learning from 
scratch to achieve the control objective. The learning 
algorithm is derived from the Dual Heuristic Programming 
(DHP) method to approximate optimal control. The 
learning structure contains the action, critic and 
verification neuro-fuzzy networks each corresponding to 
the first-order Sugeno fuzzy model. The critic and 
verification networks together forms a reinforcement 
learning scheme to estimate the future derivative Bellman 
function. The transparency of the network sensitivity 
function makes the update rule of the action network 
simple. Simulation results show that the adaptive critic 
neuro-fuzzy control system enables the motorized vehicle 
with simply two coaxial wheels learning from scratch to 
achieve velocity control while keeps the intermediate body 
in balance.  
 
1. Introduction 
In the adaptive critic design, the critic methodology uses 
computational entity to judge the performance of control 
actions so as to approximate optimal control. Currently, 
adaptive critic methods invoke dynamic programming to 
solve the optimization problem [1]. Dynamic 
programming was invented as a mathematical formalism 
                                                 
 
for designing optimal controller of nonlinear system [2]. 
But searching backward for all possibilities is 
time-consuming and not suitable for real applications. 
Dual Heuristic Programming (DHP), Heuristic Dynamic 
Programming (HDP) and Global Dual Heuristic 
Programming (GDHP) were developed as approximator to 
implement dynamic programming in the control system 
[3]-[5]. They are differentiated by the output of the critic 
entity [6]. Among them, DHP was shown to have a 
superior performance to HDP and no observable improved 
performance by GDHP [7], [8]. This paper presents an 
adaptive critic neuro-fuzzy design of control system. The 
learning algorithm is derived from the DHP method. The 
learning structure is mainly an integration of the action, 
critic and verification neuro-fuzzy networks each 
corresponding to the first-order Sugeno fuzzy model. The 
critic and verification networks together construct a 
reinforcement learning scheme to estimate the future 
derivative Bellman function. The transparency in the 
sensitivity function of the action network makes the 
parameter update rule very simple. 
A motorized vehicle with simply two coaxial wheels 
relies on differential drive to steer and balance. These 
wheels are in the longitudinal middle of the vehicle to 
allow turning on the spot. With a rider on board, it is 
basically like a mobile, inverted pendulum; drives in the 
direction where the Center of Gravity (CG) is falling; and 
movement of the CG is determined by the action of the 
rider. When the rider leans forward, the vehicle moves 
forward for keeping balance and vice versa [9], [10]. 
Without the rider, the CG may rest below the wheel axle; 
the main task of the control system becomes positioning 
 2 
)()()(
)( hxhm
hy
hJ A
j
A
iA
k
a ∂
∂
−= β    (8) 
where AjikK  is a consequent parameter of the action 
network, and aβ  is the learning rate. By satisfying 
Bellman recursion, the term )()/( hyhJ Ak∂∂  in (8) is 
calculated as 
( )
( ) ( ) ( ) ( )( )
( )
( )
( )
( )
( )hy
hR
hR
hJ
hy
)h(U
hJhU
hyhy
hJ
A
k
s
s s
A
k
A
k
A
k
∂
+∂
+∂
+∂
+
∂
∂
=
++
∂
∂
=
∂
∂
∑ 111              
1
γ
γ
   (9) 
where ( ) shRs ∀+ ,1  and k,s,hyhR Aks ∀∂+∂ )()1( are the 
predictive plant states and Jacobian quantities, 
respectively. In the DHP learning algorithm, the plant 
model is invoked to obtain these values; the critic network 
estimates the derivative terms ≈+ )1(hsoλ  
shR/hJ s ∀+∂+∂ ),1()1(  for solving (9). 
The critic network is designed to have network structure 
and consequent parameters identical to the verification 
network. The difference is that the verification network 
takes present plant states as inputs to estimate present 
derivative Bellman function ≈)(hsλ  shRhJ s ∀∂∂ ),(/)( . 
Since the critic network reports present derivative Bellman 
function as 
 )1()()()( ++∂∂≈ hhRhUhλ sss oo γλ    (10) 
An error measure to verify the estimation to present 
derivative Bellman function is [14], [15] 
∑=
s
ss hhhE
2))(-)(()( oλλ    (11) 
Denote the input and output of the verification network as 
)( VV y,x  and apply the gradient decent method to (11). 
The delta rule for correcting the consequent parameters in 
the verification network is 
 )(
)(
)(
)(
2)(
)(
2
)(
hK
h
h
hE
hK
hEhK V
jis
s
s
v
V
jis
vV
jis ∂
∂
∂
∂
−=
∂
∂
−=∆ λλ
ββ
 
 ( ) )()()()( hxhmhh VjVissv oλλβ −−=    (12) 
where VjisK  denotes a consequent parameter in the 
verification network and vβ  is the learning rate. 
 
3. Dynamics of the two-wheel vehicle 
The considered vehicle has simply two coaxial wheels 
for moving, steering and balancing. It is composed of 
three rigid bodies as the Intermediate Body (IB), the left 
wheel and the right wheel. The free body and kinematics 
diagram of the two-wheel vehicle is illustrated in Fig. 2. In 
deriving the dynamic equations by Lagrange formalism, 
we assume: 1) The IB is a single rigid body and its CG 
locates above the wheel axle on the vertical plane 
equidistant from the two wheels; 2) The wheels are always 
in contact with the ground and in a no-slip condition; 3) 
The vehicle performs on a horizontally planar surface and 
the rolling motion is not allowed; 4) The model does not 
take the internal dissipation into account, such as the 
friction in the bearings. With these assumptions, the 
dynamic motion of the two-wheel vehicle has three 
degrees of freedom: the forward linear movement 
described by forward velocity v , the rotational movement 
around the yaw axis described by rotational velocity φ& , 
and the movement to tilt the IB about the pitch axis 
described by pitch angle ψ  and angular pitch rate ψ& . It 
has been proved in [11] that, under the mentioned 
assumptions, the trajectory tracking problems and the 
stability of the IB about the pitch axis could be completely 
controlled by two differentially driven wheel motors 
(torques lwτ , rwτ ). 
    
 (a) free body diagram,      (b) kinematics diagram 
Fig. 2. Illustration of the two-wheel vehicle, Rv ,,φ&  are 
linear velocity, rotational velocity, and radius of the wheel, 
respectively 
 
For the two-wheel vehicle, the states are observable and 
there are suitable sensors to represent it. Thus the vehicle 
can be described as a nonlinear dynamical system with 
precisely defined differential equations [16]. 
( ) ( ) ( )[ ]ttt uRR ,Φ=&    (13) 
where ( )tR  denotes the state of the system at time t  for 
tt <0 , u  denotes the input over the interval )[ 0 t,t . In 
the adaptive critic neuro-fuzzy control system, the 
following set of first-order difference equations is used to 
approximate the vehicle dynamics. 
( ) ( ) ( )hThh RRR &∆+=+1    (14) 
where Trwlw hhhhh )](),(),(),([)( ψψθθ &&&=R , 
[ ]Trwlw hhh )()()( ττ=u , T∆  denotes a small sampling 
period and h is the time index, respectively. Based on (14), 
the predictive states ( )1+hR  and plant Jacobian 
quantities can be evaluated. 
Define the following notations: ψbJ  the moment of 
inertia of the IB with respect to pitch axis, φJ  the 
moment of inertia of the vehicle with respect to the yaw 
axis, wJ  the moment of inertia of the wheel, bM  the 
mass of the IB, wM  the mass of the wheel, R  the radius 
of the wheel, L the distance between the CG and the 
wheel axle, W the distance between the wheels, gµ the 
coefficient of friction between the wheel and the ground. 
The model equations in (14) are obtained as follows: 
( ) ( ) ( )11 +∆+=+ hThh lwlwlw θθθ &&&&    (15) 
( ) ( ) ( )11 +∆+=+ hThh rwrwrw θθθ &&&&    (16) 
( ) ( ) ( ) ( ) ( )1
2
111 2 +∆−+∆+=+ hThThh ψψψψ &&&    (17) 
( ) ( ) ( )11 +∆+=+ hThh ψψψ &&&&    (18) 
where sec01.0=∆T  is taken for simulations presented in 
the next section. Using Lagrange formalism [10], [17], the 
second order derivative terms are obtained as follows: 
 4 
The trajectories of the two wheels are indicated with the 
thick dotted lines. The responsive velocities during the 
tracking control are shown in Fig. 5 (b). The results show 
that the pitch angle is nicely under control; the linear 
velocity tracking is accurate; except the small rotational 
velocity error in the acceleration and deceleration stages is 
not corrected. It seems the vehicle system does not 
respond to small rotational velocity command. The cause 
is that when the reference rotational velocity is set with 
zero, no rotational dynamics of the vehicle is excited for 
learning the rotational velocity control. In other words, the 
25 learning epochs in Simulation 1 is lacking of learning 
patterns for rotational velocity around zero. On the 
contrary, the actions to balance the IB generate a variety of 
patterns for learning the linear velocity control; even when 
the reference linear velocity is set with zero. 
Simulation 3: Tracking ramp velocity profiles 
Following the 25 learning epochs in Simulation 1, the 
vehicle system demonstrates the learning result by 
tracking ramp velocity profiles shown in Fig. 6. Both 
linear and rotational velocities are requested to start from 
zero to reach their target values in 10 sec with constant 
acceleration. The results show that not only the linear 
velocity but also the rotational velocity tracking are 
accurate. This clarifies the inefficiency in the rotational 
velocity control around zero in Simulation 2 occurs simply 
due to lacking of learning patterns. Generally speaking, 
the two-wheel vehicle system is undoubtedly able to learn 
from scratch to track the velocity command while keeps 
the IB in balance. 
 
5. Conclusion 
An adaptive critic neuro-fuzzy controller has been 
developed for self-learning control of dynamic systems. 
The learning algorithm was derived from the DHP method. 
The DHP learning controller was mainly consisting of the 
action network to produce the control efforts, and the 
critic and verification networks to estimate the derivative 
bellman function by reinforcement learning. The 
neuro-fuzzy structure of the first-order Sugeno fuzzy 
model made the practice of the adaptive critic controller 
easy. Simulation results of applying the adaptive critic 
neuro-fuzzy controller to the two-wheel vehicle have 
verified the design and shown the capability of learning 
from scratch to run the vehicle while keep the IB in 
balance. 
 
References 
[1]  P.J. Werbos, “Approximate dynamic programming 
for real-time control and neural modeling,” Hand 
Book of Intelligent Control: Neural, Fuzzy and 
Adaptive Approaches, D. A. White and D.A. Sofge, 
eds., Van Nostrand Reinhold, New York, NY, USA, 
1992, pp. 493-525. 
[2] R.E. Belllman, Dynamic Programming, Princeton 
Univ. Press, 1957. 
[3] D. Prokhorov, D. Wunsch, “Adaptive critic designs,” 
IEEE Trans. Neural Networks, 1997, 8, pp. 
997-1007. 
[4]  D. Prokhorov, L. Feldkamp, “Analyzing for 
Lyapunov stability with adaptive critics,” IEEE Trans. 
Systems, Man, and Cybernetics, 1998, 2, pp. 
1658-1661. 
[5] T.T. Shannon, G.G. Lendaris, "Adaptive critic based 
approximate dynamic programming for tuning Fuzzy 
controllers," in Proceedings of IEEE-FUZZ 2000, 
IEEE Press, San Antonio, TX, USA, May, 2000. 
[6]  G. Lendaris, C. Paintz, T. Shannon, “More on 
training strategies for critic and action neural nets in 
dual heuristic programming method”, in Proceedings 
of the 1997 IEEE Conference on Systems, Man and 
Cybernetics, Orlando, October 1997. 
[7] D. Prokhorov, R. Santiago, and D Wunsch, 
“Adaptive critic designs: a case study for 
neurocontrol,” Neural Networks, 1995, 8, pp. 
1367-1372. 
[8] NW Computational Intelligence Laboratory, Portland 
State University. Available: 
http://www.nwcil.pdx.edu/. 
[9] Segway. Available: http://www.segway.com 
[10] M. Baloh, M. Parent, “Modeling and model 
verification of an intelligent self-balancing 
two-wheeled transporter for an autonomous urban 
transportation system,” International Conference on 
Computational Intelligence, Robotics and 
Autonomous Systems, Singapore, Dec 15, 2003. 
[11] A. Salerno and J. Angeles, “On the nonlinear 
controllability of a quasiholonomic mobile robot,” in 
Proceedings of IEEE Int. Conf. Robotics & 
Automation, Taipei, Taiwan, September 2003. 
[12] F. Grasser, A. D'Arrigo, S. Colombi, and A.C. Rufer, 
“JOE: a mobile, inverted pendulum,” IEEE Trans. 
Industrial Electronics, vol. 49, Feb 2002, pp. 107 – 
114. 
[13] J.-S. R. Jang, “ANFIS: adaptive-network-based fuzzy 
inference system,” IEEE Trans. System Man and 
Cybermatics, June 1993, 23, pp. 665-685. 
[14] G.G., Lendaris, T.T. Shannon, "Designing 
(approximate) optimal controllers via DHP adaptive 
critics neural networks", invited chapter in The 
Handbook of Applied Computational Intelligence, 
Karayiannis, Padgett & Zadeh, eds., CRC Press, 
1998. 
[15]  G. Lendaris, T. Shannon, “Application 
considerations for the DHP methodology,” in 
Proceedings of the 1998 IEEE International Joint 
Conference on Neural Networks, Anchorage, 1998, 
pp 1013-1018. 
[16] K.S. Nanrendra and K. Parthasarathy, “Identification 
and control of dynamical systems using neural 
networks,” IEEE Trans. Neural Networks, Mar 1990, 
1, (1), pp. 4-27. 
[17] S.H. Crandall, D.C. Karnopp, E.F. Kurtz and D.C. 
Pridmore-Brown, Dynamics of mechanical and 
electromechanical systems. Malabar, Florida: Robert 
E. Krieger publishing company, 1968, pp. 115-135. 
[18] Y-S. Ha and S. Yuta, “Trajectory tracking control for 
navigation of the inverse pendulum type 
self-contained mobile robot,” Robotics and 
Autonomous Systems, 1996, 17, pp. 65-80. 
 
