目         錄 
一、 中英文摘要……………………………………………………  1 
二、 分年階段性目標……………………………………………….  2 
三、  各年度已完成項目...................................................................  3 
四、 結語.............................................................................................. 27 
五、 參考文獻...................................................................................... 27 
 
附件一  國際期刊論文 
附件二  國際研討會論文 
附件三  美國專利 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
1Management System, Foundry Service Management System, Assembly/Test Management System, etc. All these
subsystems serve as the guidelines for the Design and Implementation of Engineering-Chain Data Exchange
Schemes (Sub-project 2), Design and Implementation of Engineering-Chain Product Yield and Life-Cycle
Management Systems (Sub-project 3), and Simulation and Performance Evaluation of an Engineering-Chain
Management System (Sub-project 4). The functions of the proposed subsystems of Sub-project 1 are as follows.
The Design Management System is in charge of the management of the life cycle of various IC products,
management of IP circuit-block information, management of manufacturing processes and efficiency parameters,
generation of GDS-II files for mask house, collection of yield data from masking house, foundry service,
assembly and testing house. IP/Library Management System is mainly for managing masking processes,
providing process information such as layer number of a mask, specification of each layer, or any special
requirements, and supervising and collecting yield data of mask processes. Foundry Service Management
System is responsible for supervising and tracking the status of WIP, providing inline data, collecting data of IC
acceptance test and yield. And, Assembly/Test Management System is in charge of collecting the verified
electrical parameters and specification data of IC, supervising and tracking the IC processing status, collecting
and providing yield data of assembly and test. For annual planning, in the first year, we are going to design and
implement the generic communication agent that will be inherited by all the subsystems implemented in the
second year. In the third year, the project will focus on the integration and on-line tests of all the subsystems.
Research topics for the Sub-project 1 are as follows:
1) Researching and acquiring the related techniques of realizing the Engineering-China Management System for
semiconductor industry;
2) Outlining the development procedures of Engineering-Chain Management System;
3) Designing the Generic Communication Agent;
4) Implementing the Communication Manager with the Generic Communication Agent served as the kernel;
5) Implementing the Design Management System and the interactive framework messages in-between with
outer applications;
6) Implementing the IP/Library Management System and the interactive framework messages in-between with
outer applications;
7) Implementing the Mask Management System and the interactive framework messages in-between with outer
applications;
8) Implementing the Foundry Service Management System and the interactive framework messages in-between
with outer applications;
9) Implementing the Assembly/Test Management System and the interactive framework messages in-between
with outer devices;
10)Completing the preparation for integration test under simulated environment.
11)Performing integration tests among the main project and sub-projects;
12)Performing on-line tests and performance evaluation.
Key Words: Engineering Chain, Engineering Chain Management System (ECMS), Design Cycle,
Time-to-Market, First-Pass Design, Design Collaboration
二、分年階段性目標
本計畫之分年階段性目標如下：
第一年部份：
完成半導體工程鏈管理系統之通用通訊代理人(Generic Communication Agent)之設計與實作：
1) 研究並取得建構半導體工程鏈管理系統之實現技術。
2) 建構半導體工程鏈管理系統之系統發展程序。
3) 設計通用通訊代理人(Generic Communication Agent)。
4) 實作通用通訊代理人(Generic Communication Agent)元件。
3除了利用上述所提的五種觀點作為思考系統發展與設計的切入點外，UML 定義了九種型態的圖形，分別
是使用案例圖(Use Case Diagram)－強調系統靜態時的使用案例觀點、類別圖(Class Diagram)－強調系統靜
態的設計觀點、物件圖(Object Diagram)－強調系統的靜態設計觀點及靜態行程觀點、活動圖(Activity
Diagram)－強調的是系統的動態觀點、循序圖(Sequence Diagram)－強調訊息的時間順序，以及系統的動
態觀點、合作圖(Collaborations Diagram)－強調收送訊息物件間的結構組織、狀態圖(State Diagram)－強調
系統的動態觀點、元件圖(Component Diagram)－強調系統中靜態的實作觀點、部署圖(Deployment Diagram)
－強調系統架構的靜態佈署觀點。
1.2 Web Services 及其相關技術
Web Services所涉及的技術範圍包括XML、簡單物件存取協定(Simple Object Access Protocol, SOAP)、網
路服務描述語言(Web Service Description Language, WSDL)、通用描述、發現、與整合協定(Universal
Description, Discovery, and Integration Protocol, UDDI)及HTTP傳輸協定等技術。這些技術分別說明如下：
1.2.1 XML
以下針對XML基本語法的簡要說明：
1) 元素(elements)
XML 語法中的元素(elements)是用來建構 XML 標示區塊的基礎，可以包含屬性、其它元素、字元資料、
字元參照、實體參照、註解(comments)、處理命令(processing instructions, PIs)、和 CDADA 區段，除
了註解、處理命令、與空白字元外，所有的 XML 資料都要置於元素之中。
元素使用起始標籤與結束標籤來區隔，假如元素沒有內容，則可稱做空元素，可用一對起始標籤/結束
標籤或是用空元素標籤來表示，每個標籤皆包含元素型別名稱，以成對的< >包夾。
2) 屬性
若是要在元素上附加一些資訊，可透過屬性來完成。每個屬性都是以名稱與值成對出現，起始標籤與
空元素標籤皆可包含屬性。屬性值必須是個字串，可用單引號或雙引號來當分隔符號。其餘簡單的
XML 語法以表 1、表 2、及表 3 說明之。
表 1 簡單的 XML 標籤形式[4]
範例 說明
<tagname> 元素起始標籤。
</tagname> 元素結束標籤。
<tagname attr=”value”> 包含屬性的元素起始標籤。
<tagname/> 空元素標籤。
<tagname arrt1=”value 1” attr2=’value2’/>
包含兩個屬性的空元素標籤，並且使用兩種不同的字串
分隔符號。
表2 XML 實體參照[4]
範例 說明
&#666; 使用十進位值字元參照。
&#x03A9; 使用十六進位值字元參照。
&entity_ref; 參照一個已定義的實體。
5圖 2 說明了 WSDL 檔案在 Web Services 的互動中所扮演的角色。(1)當 Web Services 一旦被公佈，Web
Services 供應者便會在 XML 註冊器(XML Registry)或是 WSDL 貯藏庫(WSDL Repository)中貼出其所提供
的 Web Services 的 WSDL 文件；(2)當應用程式找尋到自己所需的服務後，client 便會存取存在於在 XML
註冊器或是 WSDL 貯藏庫中的 WSDL 文件，取得 Web Services 的相關資訊，以及與 Web Services 溝通的
SOAP 訊息架構；(3)最後，使用 WSDL 文件所包含的資訊，client 便可以呼叫其 Web Services。
1.2.4 UDDI
UDDI的核心元件是UDDI註冊器，利用XML文件來描述企業及其所提供的Web Services。在UBR所提供的
資訊中可歸類為三大部份：
1) 白頁(white page)：提供企業的一般性資訊，包括了企業名稱、地址、及聯絡方式等。
2) 黃頁(yellow page)：將各企業依照產業別、產品、服務、以及地區等條件，整理成一套分類目錄。例
如，某家軟體公司被歸類為系統工程的目錄下。黃頁允許使用者依循適合自己的分類來尋找適合的產
品或服務。
3) 綠頁(green page)：包含了有關企業產品、服務、以及Web Services的技術性資訊。這些資料允許服務
需求端繫結至其Web Services，因為這些資訊定義了服務需求端應如何去呼叫並使用Web Services。綠
頁中的資訊通常也包含參考到服務的WSDL文件，文件中描述了如何與Web Services進行互動的資訊。
UDDI 規範包含了幾份相關文件和一份 XML schema，用來定義 SOAP 的註冊與發現 Web Services 的協定。
圖 3 是由 UDDI.org 中所描述的 UDDI 規範、XML schema、及 UBR 中心集群之間的關係，UBR 中心集
群替 Web Services 供應者提供了「一次註冊，到處發佈」的功能。
UDDI 規範和 schema 主要是用來在網際網路上建立起發現服務的功能。這些功能提供了一致的發佈介
面，使得使用者能透過介面進行發現的動作。服務供應者可以透過 UDDI 註冊其想發佈的 Web Services，
服務供應者也可以透過 UBR 的 Web 介面，或是符合 UDDI API 標準的工具，將資訊加入到 UBR 中。UBR
中心在邏輯上是集中的，但實際上卻是分散的，由多個 UBR 所組成，彼此間按照一定的規則進行資料更
新。當一個 Web Service 在某個 UBR 中進行註冊後，其註冊資訊會自動地被複製到其他的 UBR 中，因此
可以被各方的服務需求者探尋並使用。
1.2.5 傳輸協定
HTTP是目前在Internet上最普遍被利用的傳輸協定，所以大多數的電腦系統都可以接受並且處理HTTP的
傳輸。也因而逐漸演變成為SOAP訊息的主要傳送機制。除了HTTP之外，SOAP訊息也可連結至其它的傳
輸協定，例如HTTPS(Hypertext Transfer Protocol Secure)及SMTP(Simple Mail Transfer Protocol)。HTTPS主
要是由HTTP加上SSL而形成，所以基本上比HTTP要來的安全。SSL 是一個協定，主要是將欲傳送的資
料進行加密，來避免第三者危及資訊的完整性。
圖 3 UDDI 架構[6]
Web Service Client
XML Registry or
WSDL Repository
(3) Call
(1) Publish WSDL
document
(2) Get WSDL
document
圖 2 在 Web Services 互動中 WSDL 的角色[5]
7相關資訊，進行整體性需求分析，並且蒐集相關領域知識。根據系統的實際需求，可定義出問題的範圍、
需求功能、應用關係、基本假設與系統性能，並提出解決的方法架構。
第二階段通訊管理元件與 ECMS 元件架構設計，先根據第一階段所分析出之特性與需求，建構出抽象之
物件模型；在該模型中萃取出通用元件(Generic Agent)，作為所有元件可繼承的基礎，該階段重點在於建
構通用通訊代理人(GC Agent)；接著定義 GC Agent 中的元件之間溝通行為架構與準則程序，以符合元件
的通用屬性需求；最後完成 GC Agent 的設計與實作。
第三階段是依照第二階段設計 GC Agent 同樣的方式來設計與實作 ECMS 各伺服系統中的所有 AP，首先
設計這些後端 AP 的通用元件(即在製品管理代理人、良率管理代理人及設計規則確認代理人)及一些特定
的功能元件，然後定義 ECMS 的伺服系統間所有可能通訊的架構訊息，最後整合所有後端 AP 與繼承 EC
Agent，以完成各伺服系統前端的通訊管理元件(Communication Manager)。這些元件之設計程序需要往復
地修正，以達到 ECMS 的整體定義與需求。
第四階段為應用系統建構，建立功能元件之間的存在、協調、組合與合作關係，使其組成一 ECMS 完整
的系統。除了經由總計畫所提之 ECMS 系統架構來進行各子計畫工作的分配及督導外，子計畫一所實作
的 ECMS 各伺服系統將透過通訊管理元件(Communication Manager)與子計畫二所建構之工程鏈資訊通訊
元件(EC Agent)相互整合連接，然後透過子計畫三來規劃產品生命週期的管理，並結合子計畫四進行系統
的整合模擬性能測試。
第五階段為全系統整合與測試，將所擬定的功能作完整的整合測試，以進行可行性及實際效能評估。
9主題四：實作通用通訊代理人(Generic Communication Agent)元件
在每個伺服系統中，其應用元件僅需專注於負責發展各自的功能，至於與各個應用元件間之資訊傳遞，
則由通用通訊代理人 (Generic Communication Agent, GC Agent)來負責傳輸。而各通訊管理元件
(Communication Manager)在收到傳遞進來的資訊時，只要交由 GC Agent 對訊息資料做分配及傳遞給特
定的應用元件即可，因此每個伺服系統中訊息即可有效地整合、共享與運用。以下將分別描述 GC Agent
各功能之初步構思與建構方法：
4.1 建立 SOAP 通訊骨幹
建立通訊骨幹即是建立雙方以 SOAP 溝通前的初始狀態設定，當雙方要初始化 SOAP 通訊協定時，就會
啟動此功能。圖 8 所示為初始化 SOAP 通訊協定的訊息架構圖，說明如下：
1) Application Component呼叫Communication Kernel中關於初始化 SOAP 的功能來設定欲使用的服務資
訊。
2) 接著 Communication Kernel 再使用 SOAP Interface的設定服務資訊功能來設定網路位址與服務名稱的
相關資訊。
3) Communication Kernel 呼叫 SOAP Interface 的功能來設定 SOAP 訊息，其中包括使用 SOAP 通訊協定
的相關繫結(Binding)屬性。
4) Communication Kernel 在得到使用服務的繫結相關資訊後，得以呼叫 SOAP Interface 的功能來實際呼
叫到遠端系統元件提供的服務。
4.2 使用 UDDI 註冊機制
在初始化 SOAP 協定後，當要使用此 UDDI 註冊機制搜尋或註冊系統元件，就會啟動此功能。以下將分
別說明其搜尋與註冊程序：
圖 9 搜尋系統元件的訊息架構
圖 7 Generic Communication Agent (GC Agent)示意圖
11
4.4 使用 XSLT 機制轉換 XML 標準資料格式
由於每一伺服系統中所有的應用元件(AP)會提供各種不同格式的原始資料或 XML 文檔，因此需要有
XSLT 機制將所有的資料轉換成統一的 XML 格式，就會啟動此功能。圖 12 為使用 XSLT 機制的訊息架
構圖，說明如下：
1) Application Component 呼叫 Communication Kernel 使用 XSL 的功能。
2) Communication Kernel 傳送欲轉換的 XML 檔或原始資料給 XSLT Mechanism 物件。
3) XSLT Mechanism 向資料庫讀取欲轉換 XML Schema 的 XSL 檔。
4) XSLT Mechanism 得以進行 XSL Transform 動作。
5) 在轉換成功後，XSLT Mechanism 將轉換後的 XML 檔儲存至區域資料庫。
本子計畫一以 Microsoft .NET 為系統發展平台，並以 C#做為開發語言來設計的 GC Agent。值得注意的
是，目前 Microsoft .NET 架構已支援二十多種程式語言，並且得以互相繼承，如此一來即可實現設計 GC
Agent 的目標。所以不論欲使用 GC Agent 的系統元件是以何種程式語言開發，皆可繼承本子計畫一所開
發的 GC Agent，或是依本子計畫一的物件導向分析即可進行設計，以使系統元件間得以互相溝通。
圖 13 為 GC Agent 初步的類別圖，用來顯示其內各功能間的靜態關係，共分為 CommunicationKernel、
SOAPInterface、UDDIRegistryMechanism、DataClassificationMechanism、XSLTMechanism 及 LocalDatabase
六大類別。其中，CommunicationKernel 負責所有機制對外的界面(Boundary)。SOAPInterface 負責伺服
系統對內及對外的通訊協定。UDDIRegistryMechanism 負責對伺服系統各應用元件的服務註冊及發佈。
DataClassificationMechanism 負責將各應用元件的原始資料(Row Data)進行分類。XSLTMechanism 負責利
用 XSLT 將 XML 文檔或 Row Data 轉化為其他 XML 目的文檔。LocalDatabase 負責暫存工程資料，如
XML-based data。由圖 13 可知，Communication Kernel 將通用通訊代理人(GC Agent)內各個物件的運作
連繫起來，所以其他的系統元件只要繼承 Communication Kernel，即具有使用 GC Agent 內所有物件的能
力。
圖 11 使用資料分類機制的訊息架構
13
圖 15 查詢在製品良率的訊息架構圖
圖 16 使用者簽入系統的訊息架構圖
1) External User 向 Yield Manager 需求創造一個 Yield 物件。
2) Yield Manager 產生一個 Yield 物件。
3) Yield 物件從 OpenAccess Persistent Store 取得 Inline data。
4) Yield 物件從 OpenAccess Persistent Store 取得 Wafer Acceptance Test data。
5) Yield 物件從 OpenAccess Persistent Store 取得 Chip Probing Yield data。
6) Yield 物件從 OpenAccess Persistent Store 取得 Chip Assembly Yield data。
7) Yield 物件從 OpenAccess Persistent Store 取得 Chip Final Test Yield data。
5.2 查詢良率(Query Yield)
當使用者查詢某一條件下的在製品良率時，Yield 物件將根據使用者的特定條件去計算良率的檢索結果，
然後該良率結果將被備份在共用資料庫中，最後所查詢的在製品良率結果將傳送給使用者。圖 15 所示
為查詢在製品良率的訊息架構圖，說明如下：
1) External User 向 Yield Manager 要求查詢在製品
良率。
2) Yield Manager 向 Yield 物件要求取得一特定在
製品的 Yield 資料。
3) Yield 物件根據特定條件計算在製品良率的檢
索結果。
4) Yield 物件備份在製品良率結果至 OpenAccess
Persistent Store。
5) Yield 物件送在製品良率結果至 Yield Manager。
6) Yield Manager 傳回在製品良率結果至 External
User。
5.3 使用者簽入系統(User Login System)
該功能提供針對不同使用者具有系統簽入後的不同權限。如此可識別使用者並提供不同的授權(如 Wafer
Detect Analysis, Fab-wide Analysis 等)，以確保系統的安全。圖 16 所示為使用者簽入系統的訊息架構圖，
說明如下：
1) External User 透過 User Interface 輸入使用者個人資訊。
2) User Interface 送出使用者個人資訊至 Yield Manager。
3) Yield Manager 檢查該使用者的授權範圍。
4) 一旦檢查過後，Yield Manager 賦予 User Interface 在授權範圍內的 Wafer Detect Analysis 功能。
5) 一旦檢查過後，Yield Manager 賦予 User Interface 在授權範圍內的 Fab-wide Analysis 功能。
6) 一旦檢查過後，Yield Manager 賦予 User Interface 在授權範圍內的查詢功能。
本子計畫一將各個類別設計的結果做整理，歸納出物件導向設計階段的類別圖，如圖 17 所示。在本主題
所計的通用的良率管理代理人 (Yield Management Agent)除了可以供本主題的設計管理系統 (DMA
Management System)中的良率管理應用元件所繼承外，也可以提供給光罩管理系統(MS Management
System)、晶圓製造管理系統(FS Management System)及封裝/測試管理系統(ATS Management System)等其
他伺服系統的應用元件(AP)來繼承而形成良率管理應用元件(Yield Management AP)。而其它功能，像是建
立一個具 OpenAccess API 的 Yield 物件、查詢在製品良率等，則在良率管理代理人(Yield Management Agent)
15
圖 19 DH 向 ATS 取得 IC 封裝的生命週期資訊
一產品資訊。
b. Foundry Service 的 FS Communication Manager 傳送一接收者確認的通知至 Design House 的 DMA
Communication Manager。
c. Foundry Service 的 FS Communication Manager 回應一產品資訊的結果至 Design House 的 DMA
Communication Manager。
d. Design House 的 DMA Communication Manager 傳送一接收者確認的通知至 Foundry Service 的 FS
Communication Manager。
2) DH 向 ATS 取得 IC 封裝的生命週期資訊 (流程參照 RosettaNet PIP 2A6) (如圖 19 所示)：
目的：讓產品買方(如設計公司 DH)要求檢索賣方(如封裝/測試廠 ATS)的產品生命週期資訊，及允許賣
方送出這資訊及接受確認。
a. Design House 的 DMA Communication Manager 向 Assembly/Test Service 的 ATS Communication
Manager 檢索一產品生命週期資訊。
b. Assembly/Test Service 的 ATS Communication Manager 傳送一接收者確認的通知至 Design House 的
DMA Communication Manager。
c. Assembly/Test Service 的 ATS Communication Manager 回傳一產品生命週期資訊的結果至 Design
House 的 DMA Communication Manager。
17
圖 21 DH 向 FS 下達加工在製品
IP
Communication
Manager
DMA
Communication
Manager
EC AgentEC Agent
DMZ DMZInternet
Internet (SOAP/XML)
IP ProviderDesign House
1. request
Subscription Request Action
2. Receipt Acknowledgement
Notes:
All arrows are secure transport
required.
3. Response
Subscription Confirmation Action
4. Receipt Acknowledgement
SOAP Message Exchange
圖 22 DH 向 IP 取得電路方塊資訊描述
d. Foundry Service 的 FS Communication Manager 傳回一接收者確認的通知至 Design House 的 DMA
Communication Manager。
4) DH 向 FS 下達加工在製品(流程參照 RosettaNet PIP 3D8) (如圖 21 所示)：
目的：賦予發佈一在製品(Work In Process)通知對元件生產的執行。
a. Design House 的 DMA Communication Manager 要求 Foundry Service 的 FS Communication Manager 進
行某在製品加工。
b. Foundry Service 的 FS Communication Manager 傳回一接收者確認的通知至 Design House 的 DMA
Communication Manager。
5) DH 向 IP 取得電路方塊資訊描述(流程參照 RosettaNet PIP 1B1) (如圖 22 所示)：
目的：指示工程鏈夥伴與支援這些活動間確認有關產品創造、更新及取消等資訊的描述。
a. Design House 的 DMA Communication Manager 向 IP Provider 的 IP Communication Manager 索取一 IP
電路方塊資訊描述。
b. IP Provider 的 IP Communication Manager 傳送一接收者確認的通知至 Design House 的 DMA
Communication Manager。
c. IP Provider 的 IP Communication Manager 回應一 IP 電路方塊資訊描述的結果至 Design House 的 DMA
Communication Manager。
d. Design House 的 DMA Communication Manager 傳送一接收者確認的通知至 IP Provider 的 IP
19
圖 24 MH 向 DH 要求變更產品生命週期資訊
一旦完成所有 Communication Manager 互動的架構訊息，最後實作 Communication Manager，並繼承 GC
Agent，以完成矽智財管理系統(IP Management System)。
主題七：建構光罩管理系統元件及其與外部元件互動的架構訊息
本主題根據主題五設計良率管理應用元件(Yield Management AP)的相同方式，將可逐一設計與實作光罩管
理系統(MS Management System)中之其他 AP 亦能依照該設計方式逐一來實作。包括 DRC AP、OPC AP、
WIP Management AP、Shop Floor AP 及 GDS II Database Management AP。
一旦完成光罩管理系統(MS Management System)中所有的 AP 設計之後，這些 AP 所提供的服務將被整合
到 Communication Manager。接下來繼續定義 Communication Manager 與外部其他 Communication Manager
互動的架構訊息，亦即定義出 Communication Manager 之間透過 SOAP 傳輸訊息的流程，這些流程將做為
整合測試的腳本（Scenario）。所有伺服系統之間通訊的流程皆由各伺服系統中的 Communication Manager
來負責。並且在通訊過程中皆賦予資料安全傳輸的需求，這部份的需求會在子計畫二中的 EC Agent 的設
計中會有詳盡的說明，因此在訊息架構圖中簡化 EC Agent 之資料安全流程的描述步驟。
本主題將針對光罩管理系統 (MS Management System) 的 Communication Manager 與外部其他
Communication Manager 之間預期相互通訊的功能需求，訂定其相關的行為架構訊息，初步規劃說明如下
(以下的設計公司、矽智財供應商、光罩廠、晶圓代工廠及封裝/測試廠分別以 DH、IP、MH、FS 及 ATS
來表示)：
1) MH 向 DH 要求變更產品生命週期資訊(流程參照 RosettaNet PIP 2B5) (如圖 24 所示)：
目的：提供產品賣方(如光罩廠 MH)向買方(如設計公司 DH)發佈產品生命週期資訊的變更及確認核準。
a. Mask House 的 MH Communication Manager 向 Design House 的 DMA Communication Manager 要求變
更產品生命週期資訊。
b. Design House 的 DMA Communication Manager 傳回一接收者確認的通知至 Mask House 的 MH
Communication Manager。
c. Design House 的 DMA Communication Manager 回應所變更產品生命週期資訊的確認至 Mask House 的
MH Communication Manager。
d. Mask House 的 MH Communication Manager 傳回一接收者確認的通知至 Design House 的 DMA
Communication Manager。
2) MH 向 DH 要求同意工程變更(流程參照 RosettaNet PIP 2C4) (如圖 25 所示)：
目的：要求一具決策權的工程鏈夥伴同意一個工程變更。
a. Mask House 的 MH Communication Manager 向 Design House 的 DMA Communication Manager 要求同
21
圖 26 MH 向 DH 發佈產品品質事件資料
圖 25 MH 向 DH 要求同意工程變更
主題八：建構晶圓製造管理系統元件及其與外部元件互動的架構訊息
本主題根據主題五設計良率管理應用元件(Yield Management AP)的相同方式，將可逐一設計與實作晶圓製
造管理系統(FS Management System)中之其他 AP 亦能依照該設計方式逐一來實作。包括 WIP Management
AP、Shop Floor AP 及 Equipment AP。
一旦完成晶圓製造管理系統(FS Management System)中所有的 AP 設計之後，這些 AP 所提供的服務將被
整合到 Communication Manager。接下來繼續定義 Communication Manager 與外部其他 Communication
Manager 互動的架構訊息，亦即定義出 Communication Manager 之間透過 SOAP 傳輸訊息的流程，這些流
程將做為整合測試的腳本（Scenario）。所有伺服系統之間通訊的流程皆由各伺服系統中的 Communication
Manager 來負責。並且在通訊過程中皆賦予資料安全傳輸的需求，這部份的需求會在子計畫二中的 EC
Agent 的設計中會有詳盡的說明，因此在訊息架構圖中簡化 EC Agent 之資料安全流程的描述步驟。
本主題將針對晶圓製造管理系統 (FS Management System)的 Communication Manager 與外部其他
Communication Manager 之間預期相互通訊的功能需求，訂定其相關的行為架構訊息，初步規劃說明如下
(以下的設計公司、矽智財供應商、光罩廠、晶圓代工廠及封裝/測試廠分別以 DH、IP、MH、FS 及 ATS
來表示)：
1) FS 向 DH 要求變更產品技術資訊 (流程參照 RosettaNet PIP 2B4) (如圖 27 所示)：
目的：提供賣方(如代工廠 FS)向買方(如設計公司 DH)發佈一產品技術變更的資訊及確認核準。
23
圖 29 FS 向 ATS 要求工單製造
圖 30 ATS 向 DH 檢索產品的技術規格
3) FS 向 ATS 要求工單製造(流程參照 RosettaNet PIP 7B5) (如圖 29 所示)：
目的：賦予通知啟動工單製造的能力。
a. Foundry Service的FA Communication Manager向Assembly/Test Service的ATS Communication Manager
要求工單製造通知。
b. Assembly/Test Service 的 ATS Communication Manager 傳回一接收者確認的通知至 Foundry Service 的
FA Communication Manager。
一旦完成所有 Communication Manager 互動的架構訊息，最後實作 Communication Manager，並繼承 GC
Agent，以完成晶圓製造管理系統(FS Management System)。
主題九：建構晶圓製造管理系統元件及其與外部元件互動的架構訊息
本主題根據主題五設計良率管理應用元件(Yield Management AP)的相同方式，將可逐一設計與實作封裝/
測試管理系統(ATS Management System)中之其他 AP 元件。包括 Assembly AP、Test AP、WIP Management
AP 及 Shop Floor AP。
一旦完成封裝/測試管理系統(ATS Management System)中所有的 AP 設計之後，這些 AP 所提供的服務將
被整合到 Communication Manager。接下來繼續定義 Communication Manager 與外部其他 Communication
Manager 互動的架構訊息，亦即定義出 Communication Manager 之間透過 SOAP 傳輸訊息的流程，這些流
程將做為整合測試的腳本（Scenario）。所有伺服系統之間通訊的流程皆由各伺服系統中的 Communication
Manager 來負責。並且在通訊過程中皆賦予資料安全傳輸的需求，這部份的需求會在子計畫二中的 EC
Agent 的設計中會有詳盡的說明，因此在訊息架構圖中簡化 EC Agent 之資料安全流程的描述步驟。
25
a. Assembly/Test Service 的 ATS Communication Manager 向 Design House 的 DMA Communication
Manager 發佈半導體測試資料的通知。
b. Design House 的 DMA Communication Manager 傳回一接收者確認的通知至 Assembly/Test Service 的
ATS Communication Manager。一旦完成所有 Communication Manager 互動的架構
訊息，最後實作 Communication Manager，並繼承 GC Agent，以完成封裝/測試管理系統(ATS Management
System)。
圖 32 ATS 向 DH 發佈半導體測試資料的通知
主題十：完成模擬環境下之整合測試準備
在模擬環境的整合測試方面，本子計畫一之主要目的為完成實作一半導體工程鏈管理系統，並提供給子
計畫四進行系統的模擬建置，因此整合測試之方法為依據總計畫所規劃之各項訊息溝通流程的檢核來進
行模擬環境下的整合測試。
第三年部份：
主題十一：進行總計畫與各子計畫間之全系統整合測試
本子計畫一之半導體工程鏈管理系統實體架構將根據總計畫所制定之全系統檢核項目，進行系統
的整合測試，以驗證工程鏈管理系統之資訊整合架構的運作效能。
主題十二：實際上線測試及性能評估與比較
為了驗證與實現本整合型計畫的成效與目標，本計畫將洽一半導體設計商(如 ATI Technologies Inc)、
無工廠供應商協會(FSA)或台積電(TSMC)之同意，以該公司為案例，當作半導體工程鏈管理系統上的一
個成員(公司)，實際建構一套虛擬製造的環境，並該公司的生產線上(即為所謂的實際工程鏈管理系統)連
線測試，俾便進行性能評估與比較。
（四）預期完成之工作項目及具體成果
本子計畫一預期完成之工作項目為：
第一年度
1. 完成半導體工程鏈管理系統特性與需求分析。
2. 完成確認建構半導體工程鏈管理系統之所需技術需求。
3. 完成半導體工程鏈管理系統之通用通訊代理人(Generic Communication Agent)通用元件之架構
設計。
4. 完成通用通訊代理人(Generic Communication Agent)之設計與實作。
第二年度
1. 完成設計管理系統與其他元件互動的架構訊息設計。
2. 完成矽智財管理系統與其他元件互動的架構訊息設計。
27
3. 美國專利
[1] J. Y.-C. Chang and F.-T. Cheng, System and Method of Manufacturing Management, USA Patent Pending
(10/463,801), Filing Date: August 10, 2006.
四、結語
到目前為止，本計畫己如期完成所有工作目標，亦己投稿三篇 SCI 國際期刊論文、發表兩篇國際研討會
論文以及申請一項美國專利。本計畫已如期地達成所欲完成之所有研究主題與工作項目。
參考文獻
[1] Gartner, Inc. Press Release. September 13-14, Fairmont San Francisco.
http://www4.gartner.com/5_about/press_releases/asset_101627_11.jsp
[2] Karen Jou, IC Design House Survey 2004, EE Times, Taiwan.
http://www.eetasia.com/SURVEYS/EETT_ICD_TW04.PPT
[3] Rajeev Madhavan, “Changing Economics of Chip Design”, FSA presentation, 2004.
[4] FSA, “What Are the Challenges and Opportunities in Semiconductor IP?”, Semiconductor Venture Fair III,
May 12, 2004
[5] Design for Manufacture, DFM, http://pdesinc.aticorp.org/glossary.html
[6] Steven E. Schulz, Electronic Design and Solution Fair 2005,
http://techon.nikkeibp.co.jp/article/NEWS/20050203/101419/
[7] Richard Goering, SEMI's Oasis provides respite from GDSII, EE Times,
http://www.eedesign.com/article/printableArticle.jhtml?articleID=10806053
[8] OpenAccess Specification, http://www.si2.org/
[9] SEMI, P10 - Specification of Data Structures for Photomask Orders, 2003.
[10] SEMI, P1 - Specification for Hard Surface Photomask Substrates, 2001.
[11] SEMI, P2 - Specification for Chrome Thin Films for Hard Surface Photomasks, 1998.
[12] Norihiko Miyazaki, N. Iriki, M. Homma, T. Sato, M. Mori, Tadashi Imoriya, Toshio Onodera, T.
Matsuda, Hidehiro Higashino, K. Okuda, Iwao Higashikawa, and Nobuyuki Yoshioka, The guideline of
reticle data management version 1.0, Japan Electronics and Information Technology Industries
Association (JEITA), 2004.
[13] SEMI, P41 - Specification for Mask Defect Data Handling with XML, Between Defect Inspection Tools,
Repair Tools and Review Tools, 2004.
[14] SEMI, P42 - Specification of Reticle Data for Automatic Reciprocal Transfer to Wafer Exposure
System, 2004.
[15] Norihiko Miyazaki, JEITA Reticle Management Subcommittee Activity, Japan Electronics and
Information Technology industries Association, SEMICON WEST 2004.
[16] RosettaNet Standard, http://www.rosettanet.org
[17] Paul Tearnen, RosettaNet, 2004, http://xml.coverpages.org/rosettaNet.html
[18] D.R. Cottrell, QuickData as RosettaNet PIP 2A9, Silicon Integrated Initiative (Si2), August 2000.
[19] TI, Avnet implement RosettaNet automated design processes, 2004,
http://www.eetasia.com/ART_8800353513_0_c6a8c61c_no.HTM
[20] J. Y.-C. Chang, F.-T. Cheng, “Engineering Chain Requirement for Semiconductor Industry”, submitted
to the 2005 IEEE International Conference on Automation Science and Engineering, Edmonton, Canada,
August 2005.
[21] Unified Modeling Language, UML, http://www.uml.org/
[22] Service Oriented Architecture, SOA, http://www.dmreview.com/resources/glossary.cfm
[23] Web Services Specification, http:// www.w3c.org/
[24] eXtensible Markup Language(XML) Specification, http://www.w3c.org/
[25] R. Jones, “B2B Integration,” IEE Manufacturing Engineer, pp. 165-167, Aug. 2001.
[26] Simple Object Access Protocol (SOAP) Specification, http://www.w3c.org/
[27] Web Services Description Language (WSDL) Specification, http://www.w3c.org/
附件一 國際期刊論文
[1] J. Chang, F.-T. Cheng, and T.-L. Wang, "New CIM Scope and
Implementation for Supporting a Novel Semiconductor Business Model –
Engineering Chain for the Semiconductor Industry," submitted to IEEE
Transactions on Automation Science and Engineering.
[2] F.-T. Cheng, W.-H. Tsai, T.-L. Wang, J. Chang, and Y.-C. Su, "An Advanced
e-Manufacturing Model in the Semiconductor Industry," to appear in IEEE
Robotics and Automation Society Magazine.
[3] M.-H. Hung, T.-L.Wang, S.-W. Wu, F.-T. Cheng, and Yen-Yun Feng, “An
Efficient Data Exchange Scheme for Semiconductor Engineering Chain
Management System,” to appear in Robotics and Computer-Integration
Manufacturing, 2010.
1NEW CIM SCOPE AND IMPLEMENTATION FOR SUPPORTING A NOVEL
SEMICONDUCTOR BUSINESS MODEL –
ENGINEERING CHAIN FOR THE SEMICONDUCTOR INDUSTRY1
Jonathan, Chang Yung-Cheng 2
Member, IEEE
Institute of Manufacturing
Engineering
National Cheng Kung
University
Tainan, Taiwan, R.O.C.
P9893101@ccmail.ncku.edu.tw
Fan-Tien Cheng
Senior Member, IEEE
Institute of Manufacturing
Engineering
National Cheng Kung
University
Tainan, Taiwan, R.O.C.
chengft@mail.ncku.edu.tw
Tsung-Li Wang
Student Member, IEEE
Institute of Manufacturing
Engineering
National Cheng Kung
University
Tainan, Taiwan, R.O.C.
peterw@super.ime.ncku.edu.tw
July 20, 2006
ABSTRACT
The foundry business model was first developed by TSMC in 1985. A foundry should
provide customers with IC manufacturing services. Those customers include IC design houses,
integrated device manufacturers (IDM), and system suppliers. However, most electronic
products are consumer products, and their life cycle has been reducing with time. An IC
design house needs to continuously develop ICs with new functions to meet the current
market demand for consumable products. Meanwhile, to support customers for high speed
and low cost end product development, foundry service providers must also continue
developing new process technologies, from 0.25um down to 32nm. Unfortunately, advances
in new manufacturing process technologies also create difficulties in new IC design. These
advances increase the IC design failure rate. Currently, no effective working model and
system exists to solve this problem. To formulate this high IC design failure problem, this
work proposes a novel Engineering-Chain (EC) business model. This work also proposes an
Engineering Chain Management System (ECMS) to help achieve the goals of EC, such as
improving IC design success rate, reducing IC design cycle time, lowering IC design costs,
and increasing revenue. To accommodate the EC requirements, it is required to extend the
existing Computer-Integrated-Manufacturing (CIM) scope of a foundry from single factor
operating control to the cross-industry operating control. A systematic approach has been
adopted to design and implement the ECMS framework and the novel CIM platform. It is
believed that this work can contribute to efforts in the semiconductor industry to increase IC
design productivity and fulfill market demand for new-era IC product manufacturing.
Keywords – Engineering chain (EC), engineering chain management system (ECMS),
computer integrated manufacturing (CIM), IC design house, foundry, design
cycle.
1. The authors would like to thank the National Science Council of the Republic of China for financially
supporting this research under Contract No: NSC-95-2221-E006-347-MY3.
2. The corresponding author (e-mail: P9893101@ccmail.ncku.edu.tw).
3In the semiconductor industry new collaborative working model, a single IC design
company cannot complete a new IC design task without considering manufacturing capability.
An IC design is only completed and qualified when it is fully proved for manufacturability in
a foundry production line.
Fig. 1. IC design success rates.
Most IC design companies believe that the greatest challenges in the IC design cycle are
cost and cycle time [5]. In the next generation of process technology, mask cost will increase
100% [6]. Mask costs are doubled following each failure of the first IC design. The IC design
company must pay reworking costs and the new project is left idle while waiting for second
and even third rework results. The IC design cycle is extended and design costs are increased.
Increasing first design success rate not only reduces design costs and IC design cycle time,
but also increases revenue via earlier market entry. Considering IC design and
mass-production costs, the profits from IC product X can be calculated as follows:
Profit (x) = Revenue (x) – Design cost (x) – Production cost (x) (1)
The overall profit from IC product X is extracted from the sales revenue of product X after
deducting the design and production costs. In the case of successful IC product design, long
product lifetime is closely correlated with IC product revenue. IC product revenue can be
expressed as follows:
Revenue (x) = Daily revenue (x) * Product life cycle (x) (2)
Early release of mass production and early market entry will increase overall revenue because
of the long product life cycle. Higher prices can be achieved through earlier time to market.
Because the proposed model measures the effect of earlier release date and the cost impact of
design failure, this study ignores the price change during the overall product life cycle. The
overall IC design cost can be obtained as:
Design cost (x) = [Mask cost (x) + Pilot run cost (x)] * [1 + Rework (x)] (3)
5operations; yield improvement; and final release for mass-production [13]. Figure 2 compares
supply chain (SC) and EC in the semiconductor industry [11].
Fig. 2. Comparison of Supply Chain and Engineering Chain [11].
During the mass-production phase after successful IC design, SC manages the entire
operation from order input to wafer delivery. On the other hand, during the
product-development phase, EC plays the role of managing IC design operation from IC
design to the release of mass production. Both SC and EC management systems should
operate efficiently within the new collaborative operation model among all stakeholders to
complete IC design and IC manufacturing. EC supports product development; while SC
supports mass production.
The novel EC component and traditional SC component for inter-company operation were
combined with the intra-company MES (manufacturing execution system) component and
EES (equipment engineering system) component to create a new comprehensive
e-manufacturing scope in the semiconductor industry, as illustrated in Fig. 3 [12, 13]. The
proposed semiconductor e-manufacturing concept focuses not only on SC “order-to-delivery”
for timely and economical delivery of desired products [7][8]; but also emphases
e-manufacturing support to a fast design cycle to reduce EC “time-to-market” because some
IC design cycles are longer than their corresponding mass-production cycles [5] [6] [12].
7Fig. 4. Supply-chain system in a foundry.
Besides developing a SC system, several communication standards have also been
developed in this industry to support heterogeneous operations involving various parties in the
overall IC manufacturing cycle. RosettaNet organization defined SC standards and methods
for producing several business values for [9]:
1. Reducing cycle time
2. Reducing inventory costs
3. Improving productivity through standardized and simplified business processes
4. Obtaining measurable SC return on investment.
Seven partner-interface-process (PIP) clusters are defined in RosettaNet standards [24].
These PIPs include cluster 1 for partner product and service review, cluster 2 for product
information, cluster 3 for order management, cluster 4 for inventory management, cluster 5
for marketing information management, cluster 6 for service and support, and cluster 7 for
manufacturing.
Existing SC systems developed in last decade are equipped with comprehensive system
architectures and interface standards. This business automation can help improve overall
efficiency in a mass-production cycle from order to delivery.
4. Introduction to the Engineering Chain Management System
Traditional electronic devices have a long product life cycle that is composed of a short
design phase and a long mass-production phase. However, in the present new digital
consumer era, which is characterized by short product life cycle and advanced process
technologies, the current IC mass-production cycles may even be shorter than their design
cycles. The SC management system mentioned in Section 3 can handle “order-to-delivery”
cycle but cannot support the EC requirements for reducing “time-to-market”.
The first challenge faced by an IC design house in initiating an IC design is to ensure that
the submitted design has a high success rate. The importance of first IC design success is
more crucial than before because IC design failure can easily spoil an entire project due to the
market becoming unprofitable.
The fact that sub-wavelength manufacturing cannot apply image-corrected processing
9designs might not be able to enter this mass-production phase owing to high IC design failure
rates. As such, like the existing SC management system, which can increase mass-production
efficiency, a novel Engineering Chain Management System (ECMS) is also required for
boosting product-development efficiency.
Traditional computer-integrated-manufacturing (CIM) functions in the semiconductor
industry focus on intra-factory operation support, including planning, scheduling,
manufacturing execution control, SPC (statistic process control), APC (advanced process
control), AEC (advanced equipment control), yield management, and so on [14]. All these
CIM functions are designed based on the operations of a single semiconductor company.
Due to the evolution of the new business model, as depicted in Fig. 7, different from IDM’s
(integrated design and manufacturing) operations, current IC design, wafer manufacturing, IC
assembly and test are handled by a new collaborative working team – fabless design house,
foundry service provider, and assembly service provider. Consequently, the traditional CIM
scope needs to be enhanced for including the supply chain management system (using
RosettaNet framework for example) and the ECMS to produce a new comprehensive CIM
architecture for supporting this new e-manufacturing operation [12, 13]. Figure 8 shows this
new CIM scope.
Fig. 7. New semiconductor business model.
11
In the overall EC environment, collaborative design needs the participation of various
parties located around the world. Therefore, an application in each member of EC should
be capable of distributed computing.
 Integration Capability
Each distributed application not only has individual functions but also integrates together to
achieve the same objective – fast and successful first design for mass-production release of
new devices. Different applications of the ECMS cannot fulfill their expected functions
without data exchange among other distributed applications of internal/external service
parties. This integration capability provides both business and engineering integration.
 Security Control
IP/library, design files, yield information, WIP information and process data are highly
sensitive to every member inside the EC. Unnecessary information disclosure may invoke
revenue loss, or even worse, legal problems. Security control of data exchange thus is
essential for the success of the ECMS.
 Efficient Data Exchange Mechanism
The data volume for current process technologies and IC design recently has increased
significantly. International technology roadmap for semiconductor (ITRS) predicts that a
typical mask file size is as large as 100 Gbytes in 2006. Daily wafer processing data and
yield data also need a well-designed mechanism to efficiently support data exchange to
ensure the information integrity of a successful design cycle.
 Reliable Data Exchange Mechanism
Large volume data exchange requires stable infrastructure. Any interruption of frequent
transfer of large bodies of data delays data fulfillment. This interruption may also impact
yield improvement opportunities when yield data are delayed.
 Real-time Co-work Capability
During any stage of the EC design cycle, pure data exchange alone cannot support a
complete and concurrent working model for IC design. A real-time co-working capability is
required for various parties in the ECMS to discuss, review, investigate, and modify design
issues.
 Interoperability
Each application within the ECMS should not only possess the integration capability but
also the interoperable capability. This interoperability allows any new application to be
easily adopted into the ECMS. This function can also support internal integration with
other intra-company applications – such as ERP (enterprise resource planning), MES, and
so on.
 Product Life Cycle Management and Project Management Capability
The ECMS is designed to achieve successful product development. Therefore, besides the
design-related capabilities, the ECMS shall also possess the capabilities of product life
cycle management and project management, including project resource management,
project schedule control, project communication mechanism and risk management
mechanism.
 Cross-boundary Knowledge Management
Each IC design should consider particular know how for specific process technology used
to manufacture IC during the design phase to ensure there is no design error that causes
manufacturing defects. Also each IC design should deliver tightened manufacturing
13
Therefore, transparent information sharing is essential to significantly improve design
efficiency and assure the first-pass tape out of an IC design.
Figure 10 [13][19] illustrates the operating scenarios and functional groups of EC. These
operating scenarios are fundamental for completing IC design. Each operating scenario should
be designed in the ECMS to optimize operating efficiency to support an effective IC design.
The design house serves as the central coordinator to complete this whole IC design cycle
from layout design, masking preparation, manufacturing qualification, assembly and testing to
mass-production release.
First, design house kick offs the project to design a new device using descriptive language;
meanwhile, it also includes some simulation functions to ensure design accuracy. However,
this device then includes an IP/library from SIP (silicon intelligence property) suppliers and a
design rule definition from a foundry service company for completing the first stage and
generating a GDS II (graphic design system II) file for a mask house.
The mask house then establishes a secure channel to receive the design file and initiates
design verification before the physical mask preparation because of the high cost of mask.
The GDS II file size easily reaches 1 GB and even 100 GB with the advance of process
technology. An efficient and secure channel is critical for this data transfer. Once the
masking-preparing job is done and the mask is manufactured, the mask will be delivered to
the foundry service provider and the next stage of the EC is initiated.
Foundry service is the main process to convert the IC design into a real physical product.
Billions of IC cells are produced in this wafer fabrication process. It was not possible to wait
for the final wafer yield data till the end of the pilot run of wafer manufacturing to revise
device design because a complicated wafer manufacturing process flow involving hundreds of
stages usually requires 1-2 months. The daily wafer process history and wafer process
specification can provide design partners with daily possible yield improvement opportunities
rather than single final yield data feedback after long process time. The data quality fulfilled
during this stage is also the key for a successful device design. When a wafer passes the final
wafer acceptance test, the device yield needs to be tested for expected functionality before
shipping to the assembly house.
This yield data need to be transferred back to the design house and forwarded to the
assembly house for IC package assembly operation. According to the wafer map, which
contains the test results of all the dies, each good die is packed to become an IC. Each IC is
then sent to the test house for the final device test. Finally, this final test yield is delivered
back to the design house and good devices are sent to the end customer, which uses the new
devices for application development. Following a successful EC operation, the new device
can be released for mass-production.
15
mass-production quality? The functions of the ECMS are designed using several process
performance management databases. Once a design is proved to be successful, the
process performance specification is defined and shared with all service partners in the
form of production specification.
The objectives of the EC operation include “First Tape Out Success”, “Design Cost
Reduction”, “Design Cycle-Time Reduction”, “Empowerment Agility”, “WIP Visibility”,
“Asset Utilization” and “Time to Market”. With the generic protocol, common system
architecture and operation standards, the ECMS can provide an effective design environment
for all design partners to improve IC design success rate for minimizing time-to-market and
design cost.
6. Implementation of the Engineering Chain Management System
Supporting the above EC operating scenarios in the ECMS architecture requires
exchanging considerable engineering data. Currently, there is no industrial standard (as what
the semiconductor industry did for logistics data) for EC engineering-data exchange in the
semiconductor industry. This work adopts the new generation distributed objected-oriented
technology with web services [23] as the enabling technology of the ECMS framework.
6.1 Applying the Concept of Framework to Design the ECMS
The ECMS enhances the first-pass (passing the qualification at the first design) possibility
in the IC design cycle through coherent operation by efficient and effective design
information sharing. Without the ECMS, several fragmental system applications exist for
partial implementation of EC operations. Notably, no standard exists for implementing
applications to support the EC operations.
Existing EC applications that are not based on the framework concept eventually become
legacy systems, which cannot be easily integrated with other applications in each service
partner of the EC. Even worse, various applications for the same function may be established
owing to the adoption of different information exchange mechanisms among service partners.
For example, a single design house must maintain different yield information exchange
platforms with all engaged foundry service suppliers that do not use the same platform.
Consequently, when a single design project is initiated in a design house with numerous
possible service providers, separate interfaces must be established with various IP/library
service providers, mask houses, foundry service providers and assembly/test houses owing to
the lack of a framework design and standard protocols.
A framework design in the ECMS provides several benefits for all CIM managers in an EC
environment [16]. With the advance of the application of Internet and information
technologies to e-manufacturing, a framework design based on these two technologies can
enhance IC design productivity in EC operations. Therefore, the ECMS framework, which
fulfills the key requirements of the EC, can remarkably improve the efficiency of design
collaboration in EC.
6.2 Implementation of the ECMS Framework
To support the ECMS requirements, the ECMS framework should possess four key
functionalities:
A. EC Operating Capability
The ECMS should be equipped with five levels of EC operating capabilities:
17
Fig. 11. ECMS framework.
As depicted in Fig. 11, each of the ECMS servers possesses a communication manager
responsible for engineering data management operations – including data request, data
classification and XLST (XML Stylesheets) data format conversion. These common functions
can then be identified and designed in a generic communication component, called the generic
communication agent (GC agent). Afterwards, each communication manager (of all the
ECMS servers) can be constructed by inheriting the GC agent and adding specific functions
for this communication manager.
Figure 12 illustrates the functional blocks of the GC agent. The GC agent is basically
designed to support several common functions of the ECMS: GC communication kernel,
SOAP (Simple Object Access Protocol) communication interface, UDDI (Universal
Description, Discovery, and Integration) registry mechanism, data classification mechanism,
XSLT mechanism, and local database.
19
the associated framework messages among and in-between all of the functional servers to
enable interoperability and collaboration. Owing to lack of space, only the framework
messages of yield data exchange between the design house and foundry service are illustrated.
Figure 14 shows a framework-message example for a design house requesting yield reports
from its engaged foundry service provider. The detailed scenarios are described below:
1. Foundry production tool generates wafer process data.
2. The shop floor control application sends the process data to the WIP management
application.
3. By mapping to each wafer, the process performance of each wafer is sent to the yield
management application.
4. Yield data are generated according to the defined specifications.
5. Yield data are stored in the local database.
6. The design house yield management application requests yield data for specific wafers.
7. The WIP management application of the design house (with the GC agent) requests
authentication and authorization via the EC agent of the design house.
8. Via web-services protocols (SOAP/WSDL), the design house’s EC agent communicates
with the foundry’s EC agent to obtain authorization and authentication.
9. The EC agent of the foundry responds with the authorization and authentication results to
the EC agent of the design house for security certification.
10. The design house EC agent forwards the certification results to the WIP management
application.
11. If the security certification is passed, the WIP management application requests a yield
report from the foundry via the EC agent.
12. The EC agent of the design house communicates with the EC agent of the foundry to
request yield data.
13. The EC agent of the foundry dispatches the data request to the local yield management
application.
14. The foundry yield management application requests the yield report from the local
database.
15. The local database provides the yield report.
16. The foundry yield management application provides the yield report to the EC agent for
data transfer.
17. The EC agent of the foundry transfers the yield report to the EC agent of the design
house.
18. The EC agent of the design house sends the yield report to the WIP management
application.
19. The WIP management application sends the yield report to the yield management
application.
20. The design house yield management application stores the yield report in the local
database for yield analysis.
21
0
5000
10000
15000
20000
25000
30000
1M 10M 100M 1G 10G 100G
(Bytes)
(S
ec
on
ds
)
T-WS LDT-WS FTP
Fig. 15 Comparison of Data-Transmission Performance
6.5 Operation Integration through Industry Leveraging
The degree of improvement of this proposed new CIM scope for supporting IC design
cannot be evaluated based simply on internal laboratory simulation. Given comprehensive
system analysis and demonstration of the implementation of the ECMS in the Autolab of the
Institute of Manufacturing Engineering at National Cheng Kung University (NCKU), this
study also initiated industry leveraging for overall system integration with physical operation
to evaluate the ECMS performance. Currently, the Business Management System (BMS) in
the Fabless Semiconductor Association (FSA) [22] has engaged with NCKU to support the
development and performance evaluation of this project. Several IC design houses and
foundry service providers are reviewing this overall plan for possible participation. Based on
current research results and on-going operational integration with industry, the following three
results are expected:
 Comprehensive EC operating scenarios: Although this study has presented an
operating-scenario example for IC design, given rapid changes in design technologies
and increased requirements for engineering data to improve first IC design success
rate, the operating scenarios will be updated continuously. Future studies should
produce and follow comprehensive IC design operating scenarios.
 Industry standards for supporting EC operating scenarios: Essential industry standards
should be defined, similar to the RosettaNet operation standards [24] supporting SC
operating scenarios. These standards could include operating-scenario standards, data
transfer standards, and exception handling standards.
 System architecture and implementation: Comprehensive system architecture should
be developed to include all IC design operating scenarios and standards. A system
architecture and software package will be designed with all necessary capabilities
identified in this work to assure effective design.
The ECMS improves IC design efficiency by providing a plug-and-play framework for
considerable engineering data exchange among all EC members. In the event of quality
concerns, design houses can easily engage with a new service supplier for design
collaboration without barriers to information exchange. The cycle time required to integrate a
23
improvement in IC Design productivity with the ECMS. For example, Petri nets may
be applied to assess overall performance.
To ensure the successful development of the ECMS for supporting the IC design
challenge in the semiconductor industry, overall ECMS simulation and performance
evaluation are also performed as part of this project. Future research will examine ECMS
simulation and performance assessment.
7. Summary and Conclusions
The IC design failure rate is increasing as the semiconductor industry lacks the ability to
manage the new manufacturing challenges associated from new process technologies (from
90nm down to 32nm), which support new IC devices with low cost and high device
performance. The IC design process is also difficult for the FABless companies and foundry
service industry because no collaborative working platform and standards exist to support
critical information exchange to ensure successful process and device development. This
study proposes effective EC operation scenarios for improving the design productivity,
through faster design cycle and higher product yield. This study also develops a collaborative
platform – the ECMS. The framework of this platform is designed to support the coherent
collaboration of the EC. The ECMS framework with comprehensive EC operating scenarios,
EC operation standards, and system architecture can successfully resolve the problem of
information integration among cross-network, cross-platform, and heterogeneous systems of
all applications in the ECMS. Additionally, the ECMS is loosely coupled owing to the nature
of framework design. Moreover, inheriting the GC agent and EC agent, and then adding their
specific functions can easily and efficiently design the ECMS system components.
The informatics research and design used in a collaborative IC design environment
presented here can achieve a higher IC design success rate with precise design flow control
and information integration. Because the new ECMS can bring significant benefits for the
overall semiconductor industry, industry associations are also invited to engage with this
study.
Compared to the average .13um mask cost and investment cost involved in the ECMS
implementation, the ECMS investment can be recouped through increased revenue and
reduced costs for a single new .13um product design with the ECMS support. Regardless, the
ECMS is applied to support long-term design operation and gain increased benefits from
more successful IC design supported by the ECMS. It is believed that the ECMS framework
can be applied to develop any information communication platform involving all EC design
partners, and to enhance the design productivity for the semiconductor and other industries.
25
[20] F.-T. Cheng, C.-F. Chang, and S.-L. Wu, "Development of Holonic Manufacturing
Execution Systems," Journal of Intelligent Manufacturing, Vol. 15, No. 2, pp. 253-267,
April 2004.
[21] F.-T. Cheng, H.-C. Yang, and J.-Y. Lin, "Development of Holonic Information
Coordination Systems with Failure-Recovery Considerations," IEEE Transactions on
Automation Science and Engineering, Vol. 1, No. 1, pp. 58-72, July 2004.
[22] BMS, FSA, [Online]. Available: http://www.fsa.org/committees/bms/index.asp/
[23] M.-H. Hung, F.-T. Cheng, and S.-C. Yeh, "Development of a Web-Services-based
e-Diagnostics Framework for the Semiconductor Manufacturing Industry," IEEE
Transactions on Semiconductor Manufacturing, vol. 18, no. 1, pp. 122-135, February
2005.
[24] Rosettanet, Rosettanet Implementation Framework: Core Specification, Version:
Validated 02.00.00, 13 July 2001, [Online]. Available: http://www.rosettanet.org.
[25] W3C / SOAP Message Transmission Optimization Mechanism, [Online]. Available:
http://www.w3.org/TR/soap12-mtom/.
[26] WSE 3.0 / What's New in Web Services Enhancements 3.0, [Online]. Available:
http://msdn.microsoft.com/webservices/webservices/building/wse/default.aspx?pull=/libr
ary/en-us/dnwse/html/newwse3.asp.
[27] Understanding DIME and WS-Attachments, [Online]. Available:
http://msdn.microsoft.com/archive/default.asp?url=/archive/en-us/dnarxml/html/dimewsa
ttch.asp.
1To appear in IEEE Robotics and Automation Society Magazine
An Advanced e-Manufacturing Model in the Semiconductor Industry1
Fan-Tien Cheng2, Fellow, IEEE, Wen-Huang Tsai2, Student Member, IEEE,
Tsung-Li Wang3, Member, IEEE, Jonathan Yung-Cheng Chang2, Member, IEEE, and
Yu-Chuan Su4, Member, IEEE
2Institute of Manufacturing Engineering
National Cheng Kung University
Tainan, Taiwan, R.O.C.
3 Department of Digital Technology &
Game Design
Shu-Te University
Kaohsiung, Taiwan, R.O.C.
4Department of Computer Science and
Information Engineering
Far East University
Tainan, Taiwan, R.O.C.
March 16, 2009 accepted
ABSTRACT
E-Manufacturing is advanced manufacturing that takes advantage of the information and
Internet technologies to integrate all functional components of a factory. An e-Manufacturing
hierarchy was presented by the international SEMATECH (ISMT). However, this ISMT
e-Manufacturing model does not consider the functions of engineering chain (EC) which deals with
the time-to-market issues. This paper presents an advanced e-Manufacturing model based on a
decades-long creation of knowledge and practical experience of developing
semiconductor-manufacturing-automation (SMA) systems at the Institute of Manufacturing
Engineering, National Cheng Kung University, Taiwan, R.O.C. The advanced e-Manufacturing
model has four core components, including manufacturing execution system (MES), supply chain
(SC), equipment engineering system (EES), and EC. The definition, mission, primary issues and the
feasible implementation frameworks of each component are described in this paper. With this
advanced e-Manufacturing model, the characteristics and requirements of the semiconductor
industry can be comprehended and the missions of SMA can be accomplished.
Index Terms – Overall equipment effectiveness (OEE), order-to-delivery (O2D),
time-to-market (T2M), manufacturing execution system (MES), equipment engineering system
(EES), supply chain (SC), engineering chain (EC), semiconductor manufacturing automation
(SMA), e-Manufacturing.
--------------------------------------------------------------------------------------------
1. The author would like to thank the National Science Council of the Republic of China for financially supporting this research under contracts No:
NSC95-2221-E-006-347-MY3, NSC96-2221-E-006-279-MY3, and NSC96-2221-E-269-021-MY3.
2. Fan-Tien Cheng, Wen-Huang Tasi, and Jonathan Yung-Cheng Chang are with the Institute of Manufacturing Engineering, National Cheng Kung
University, Tainan 70101, Taiwan, R.O.C. (e-mail: chengft@mail.ncku.edu.tw; wh_tsai@super.ime.ncku.edu.tw; jonathan@super.ime.ncku.edu.tw).
3. Tsung-Li Wang is with the Department of Digital Technology & Game Design, Shu-Te University, No.59, Hengshan Rd., Yanchao, Kaohsiung
County 82445, Taiwan, R.O.C. (e-mail: peterw@mail.stu.edu.tw).
4. Yu-Chuan Su is with the Department of Computer Science and Information Engineering, Far East University, Tainan County 744, Taiwan, R.O.C.
(e-mail: aitom@cc.feu.edu.tw).
3Figure 2 shows the e-Manufacturing hierarchy created by the international SEMATECH
(ISMT) [4]. This hierarchy can be divided into the manufacturing portion and the engineering
portion. In Figure 2, MES is a core system in the manufacturing portion that connects its upper
factory-to-factory modules and lower equipment modules to dominate the overall manufacturing
management. The highest (company-to-company) layer in the manufacturing portion is mainly for
the purpose of SC. On the other hand, EES takes charge of the engineering portion that deals with
equipment health monitoring, real-time quality control, and maintenance scheduling (e.g.
e-diagnostics [23-24]).
Figure 2. ISMT e-Manufacturing hierarchy [4].
According to Zhang et al. [22], e-Manufacturing is a modern interdisciplinary investigation
area that combines information systems and decision technologies. Moreover, in the semiconductor
manufacturing industry, Tag and Zhang [21] defined e-Manufacturing as the complete electronic
integration of all factory components using industry standards. Another e-Manufacturing model was
also proposed in [21] and shown in Figure 3. This e-Manufacturing model extends from
equipment-to-equipment automation systems to the MES/YMS/EES (manufacturing execution
system/yield management system/equipment engineering system) and to the ERP (enterprise
resource planning).
5implementation of the manufacturing portion of the advanced e-Manufacturing model is also
presented.
Figure 4. Four core components for the advanced e-Manufacturing model.
2. Manufacturing Execution System (MES)
The MES is a shop floor control system which includes either manual or automatic labor
and production reporting as well as on-line inquiries and links to tasks that take place on the
production floor. The MES provides links to work orders, receipt of goods, shipping, quality control,
maintenance, scheduling, and other related tasks [25]. The mission of MES is to increase
productivity and yield.
Figure 5 presents the MES operation procedures in semiconductor manufacturing. In Figure
5, a front opening unified pod (FOUP), containing 25 wafers, is processed via lithography, etching,
and implantation. After finishing its procedures in the lithography process, the FOUP is prepared
for the etching process by the MES. First, the MES client requires a material control system (MCS)
to move the FOUP to the process equipment. When the FOUP arrives at the etching equipment, the
equipment manager sends a message to notify the MES, reads the information of work in process
(WIP), acquires a recipe for this FOUP from the recipe management (RM) system, and initiates
fabrication. Next, the equipment manager sends the process data of each wafer under fabrication to
the statistical process control (SPC) server for quality monitoring. Eventually, the equipment
manager updates the WIP information when the etching process completes, and asks the MCS to
move the FOUP from the etching equipment to the implantation equipment.
7framework. For these reasons, the authors adopted the concepts of holon and holarchy to propose a
holonic manufacturing execution system (HMES) framework that is also suitable for industrial
application [3] (Figure 7). The HMES framework not only owns the characters of open-distributed
system and object technologies, but also has the properties of failure recovery and security
certification.
Figure 7. The HMES framework.
A systematic approach was proposed for developing the HMES framework of the
semiconductor industry (Figure 7) [3]. This systematic approach starts with a system analysis by
collecting domain requirements and analyzing domain knowledge. The HMES holarchy is designed
through the following processes: 1) constructing an abstract object model based on the domain
knowledge; 2) partitioning the application domain into functional holons; 3) identifying the generic
parts among functional holons; 4) developing the generic holon (GH); 5) defining the holarchy
messages and holarchy framework of HMES; and finally, 6) designing the functional holons based
on the GH. The HMES framework includes many functional holons, such as the material holon,
WIP holon, equipment holon, scheduling holon, etc., and is open, modularized, distributed,
configurable, interoperable, collaborative, and maintainable [3].
3. Supply Chain (SC)
The SC is defined as a network of facilities and distribution designed to perform tasks, such
as procuring materials, transforming materials into intermediate and finished products, and
9Purchase-Order Process
When a purchase order (PO) is placed by a customer, the PO is received and forwarded to the ATP
mechanism by the order-management mechanism. After receiving the information pertaining to the
PO, the ATP mechanism determines the amount of CASD to be booked and the ATP production to
be consumed. Next, the ATP mechanism sends the information pertaining to the booked CASD to
the allocation-management mechanism. Once the booked CASD is received, the
allocation-management mechanism adjusts the initial CASD accordingly. Meanwhile, the ATP
mechanism also sends information pertaining to the consumed ATP production to the
output-planning mechanism. With the consumed ATP production received from the ATP
mechanism and the capacity plan from the capacity-modeling mechanism, the output-planning
mechanism can generate a master production schedule (MPS) accordingly, which is sent to the
manufacturing planning subsystem for shipping the product to the customer.
Another SC architecture example is shown in Figure 9. It is designed for the
prediction-based optimization of a semiconductor SC, using an adaptive real time work-in-progress
(WIP) tracking system [28]. As stated in the abstract of [28], the WIP tracking system receives WIP
updates from semiconductor supply chain vendors and generates a WIP tracking report in which the
volume of WIP is measured in expected good parts. In one variation, rather than reporting the WIP
currently located at each step of a vendor’s process, the WIP tracking report reflects the WIP
located at various stages of the semiconductor manufacturing process, where the vendor's steps are
mapped to a fewer number of stages. This WIP tracking system can be used to coordinate a
semiconductor supply chain. The WIP tracking receives WIP updates from semiconductor supply
chain vendors and generates advanced notices based on an analysis of the WIP updates and
predetermined rules. The advanced notices are delivered to downstream vendors to reduce
semiconductor manufacturing cycle time and unpredictability between different semiconductor
manufacturing phases.
11
Figure 10. Functional-block diagram of the holonic supply-chain system.
4. Equipment Engineering System (EES)
The EES is defined as the physical implementation of the equipment engineering
capabilities (EECs), which are applications that address specific areas of equipment engineering
(EE), such as fault detection & classification (FDC), predictive maintenance (PM), virtual
metrology (VM), run-to-run (R2R) control, etc. [4], [6].
An EES framework is required to support the EECs [4]. Therefore, ISMT proposed an EES
conceptual framework as shown in Figure 11 [4]. In the ISMT EES framework, three
interfaces,(Interface A, Interface B, and Interface C) are defined for different purposes. Interface A
is an equipment data acquisition interface for getting more and better data from the equipment [29].
Interface B defines interfaces among EE applications and creates a connection between the MES
and EES [30]. Interface C describes the external access to e-diagnostics [31], [24].
13
Figure 12. The proposed EES framework.
Among the above-mentioned EES applications, VM is an emerging technology [32]. VM is
a method to conjecture the manufacturing quality of a process tool based on the data sensed from
the process tool and without physical metrology operation [33]. Among all VM schemes proposed
by the authors [34-36], the dual-phase VM scheme [36] that considers both promptness and
accuracy is recognized as the most mature one. As shown in Figure 13 [36], Phase I emphasizes
promptness, which means to immediately calculate and output the Phase-I VM value (denoted VMI)
of a wafer once the entire process data of the wafer are completely collected. Phase II improves
accuracy, which means not to re-calculate and output the Phase-II VM values (denoted VMII) of all
the wafers in the FOUP until an actual metrology value (required for tuning or re-training purposes)
of a wafer in the same FOUP is collected. Besides, in this scheme, the accompanying reliance index
(RI) and global similarity index (GSI) of each VMI and VMII are also generated. The RI and GSI are
applied to gauge the degree of reliance. If the reliance level of a VM value is lower than the
threshold, this VM value may not be adopted [37].
15
5. Engineering Chain (EC)
International technology roadmap of semiconductor (ITRS) proposed the concept of EC to
cope with the problems aroused from design collaboration in the semiconductor industry [10], [15].
In the semiconductor industry, the EC is defined by the authors as a network of facilities and
distributed services that performs device design, verification of design, manufacturing pilot run,
assembly and test operations, yield improvements, and final release for mass production [14].
Figure 15 compares the supply chain (SC) and the EC in the semiconductor industry [10].
Figure 15. Comparison of Supply Chain and Engineering Chain.
In the mass-production phase after a successful IC design, the SC manages the entire
operation from order input to wafer delivery. On the other hand, in the product-development phase,
the EC plays the role of managing IC design operation from IC design to the release of mass
production. Both the SC and EC management systems should operate efficiently within the new
collaborative operation model among all stakeholders to complete IC design and IC manufacturing.
However, the EC supports product development, while the SC supports mass production.
The novel EC component and the traditional SC component for inter-company operation are
combined with the intra-company MES component and EES component to create a new
comprehensive e-Manufacturing scope in the semiconductor industry as illustrated in Figure 4. The
proposed semiconductor e-Manufacturing concept focuses not only on the SC O2D for timely and
economical delivery of desired products [7-8], but also on the e-Manufacturing support to achieve a
faster design cycle for reducing the EC T2M since some IC design cycles are longer than their
corresponding mass-production cycles [39].
17
Design Management
Server
ECMS Framework
Engineering Chain Agent
Engineering Chain Agent
Internet (SSL/SOAP/WSDL)
Design House
IP/Library anagement
Server
Engineering Chain Agent
IP/Library House
Masking
Management Server
Masking House
Engineering Chain Agent
Foundry House
Engineering Chain Agent
Assembly/Test House
Foundry
Management Server
Assembly/Test
Management Server
Figure 16. Engineering-chain-management system framework.
19
Figure 17. Testbed for the HMES+HSCS frameworks.
Figure 18. Various GUIs for all the nodes in the testbed of the HMES+HSCS frameworks.
21
Appendix A – Abbreviation List
AGV Automated Guided Vehicle
AMHS Automated Material Handling System
APC Advanced Process Control
AS/RS Automated Storage/Retrieval System
ATP Available-to-Promise
CASD Capacity-Allocated-Support Demand
CD Critical Dimension
CIM Computer-Integrated Manufacturing
CMP Chemical Mechanical Planarization
CORBA Common Object Request Broker Architecture
DMA Design Management Application
DWH Data Warehouse
EC Engineering Chain
ECMS Engineering-Chain-Management System
EE Equipment Engineering
EEC Equipment Engineering Capability
EES Equipment Engineering System
e-Diag e-Diagnostic
EQP Equipment
ERP Enterprise Resource Planning
ESCM Electronic Supply Chain Management
FB Feedback
FDC Fault Detection and Classification
FF Feed-forward
FOUP Front Opening Unified Pod
GED Generic Embedded Device
GEM Generic Equipment Model
GH Generic Holon
GSI Global Similarity Index
GUI Graphical User Interface
HMES Holonic Manufacturing Execution System
HSCS Holonic Supply-Chain System
HSMS High-Speed Message Services
ISMT International SEMATECH
IC Integrated Circuit
IP Intellectual Property
ITRS International Technology Roadmap of Semiconductor
L2L Lot-to-Lot
MCS Material Control System
MES Manufacturing Execution System
MPS Master Production Schedule
23
REFERENCES
[1] CIM Framework Specification 2.0, SEMATECH. [Online]. Available:
http://www.sematech.org.
[2] F.-T. Cheng, E. Shen, J.-Y. Deng, and K. Nguyen, "Development of a system framework for
the computer-integrated manufacturing execution system: a distributed object-oriented
approach," International Journal of Computer Integrated Manufacturing, vol. 12, no. 5, pp.
384-402, Sept./Oct. 1999.
[3] F.-T. Cheng, C.-F. Chang, and S.-L. Wu, "Development of holonic manufacturing execution
systems," Journal of Intelligent Manufacturing, vol. 15, no. 2, pp. 253-267, Apr. 2004.
[4] Equipment Engineering Capabilities (EEC) guidelines, v2.5, International SEMATECH, July
2002. [Online]. Available: http://ismi.sematech.org/emanufacturing/docs/eecguidebook.pdf.
[5] L. Rist, "e-Manufacturing/EEC standards – from e-Mfg workshop at SEMICON West," in
Proc. 1st Symposium on Current SEMI Standards Information and Control Activities, 2002.
[6] Y.-C. Su, F.-T. Cheng, M.-H. Hung, and H.-C. Huang, "Intelligent prognostics system design
and implementation," IEEE Transactions on Semiconductor Manufacturing, vol. 19, no. 2, pp.
195-207, May 2006.
[7] R. Ganeshan and T. P. Harrison, An Introduction to Supply Chain Management, Penn State
University. [Online]. Available: http://silmaril.smeal.psu.edu/misc/supply_chain_intro.html.
[8] Performance Indicators in Logistics, IFS Publications / Springer-Verlag,
NEVEM-workgroup, 1989.
[9] F.-T. Cheng, H.-C. Yang, and J.-Y. Lin, "Development of holonic information coordination
systems with failure-recovery considerations," IEEE Transactions on Automation Science
and Engineering, vol. 1, no. 1, pp. 58-72, July 2004.
[10] ITRS Factory Integration: Factory Information and Control Systems, International
Technology Roadmap of Semiconductor (ITRS), 2003. [Online]. Available:
http://public.itrs.net/Files/2003ITRS/LinkedFiles/Factory/2003/Backup.ppt.
[11] Definition of Engineering Chain, INITIA Business Terms Dictionary, 2004. [Online].
Available: http://www.initiaconsulting.co.jp/archives/dictionary/a_e.html.
[12] J. Chang and F.-T. Cheng, "Engineering-chain requirements for semiconductor industry," in
Proc. 2005. IEEE International Conference on Automation Science and Engineering,
Edmonton, Canada, Aug. 2005, pp. 381-386.
[13] J. Chang and F.-T. Cheng, "Framework development of an
Engineering-Chain-Management-System for the semiconductor industry," in Proc. the 3rd
International IEEE Conference on Industrial Informatics– INDIN’05, Perth, Western
Australia, Aug. 2005, pp. 306-311.
[14] J. Chang, F.-T. Cheng, and T.-L. Wang, "Novel semiconductor business model – Engineering
Chain for the semiconductor industry," in Proc. 2007 IEEE International Conference on
Robotics and Automation, Roma, Italy, Apr. 2007, pp. 1597-1602.
25
[30] SEMI Interface B Standard: E133, Web Site of Semiconductor Equipment and Material
International (SEMI). [Online]. Available: http://www.semi.org.
[31] Interface C Requirements of e-Diagnostics Guidebook (version 2.1), International
SEMATECH, 2005, [Online]. Available: http://www.sematech.org/.
[32] A. Weber, “Virtual metrology and your technology watch list: ten things you should know
about this emerging technology,” Future Fab International, issue 22, section 4, pp. 52-54,
Jan. 2007.
[33] J. Chang and F.-T. Cheng, "Application development of virtual metrology in semiconductor
industry," in Proc. 31st Annual Conference of the IEEE Industrial Electronics (IECON 2005),
Raleigh, North Carolina, U.S.A., Nov. 2005, pp. 124-129.
[34] Y.-C. Su, M.-H. Hung, F.-T. Cheng, and Y.-T. Chen, "A processing quality prognostics
scheme for plasma sputtering in TFT-LCD manufacturing," IEEE Transactions on
Semiconductor Manufacturing, vol. 19, no. 2, pp. 183-194, May 2006.
[35] M.-H. Hung, T.-H. Lin, F.-T. Cheng, and R.-C. Lin, "A novel virtual metrology scheme for
predicting CVD thickness in semiconductor manufacturing," IEEE/ASME Transactions on
Mechatronics, vol. 12, no. 3, pp. 308-316, June 2007.
[36] F.-T. Cheng, H.-C. Huang, and C.-A. Kao, "Dual-phase virtual metrology scheme," IEEE
Transactions on Semiconductor Manufacturing, vol. 20, no. 4, pp. 566-571, November 2007.
[37] F.-T. Cheng, Y.-T. Chen, Y.-C. Su, and D.-L. Zeng, "Evaluating reliance level of a virtual
metrology system," IEEE Transactions on Semiconductor Manufacturing, vol. 21, no. 1, pp.
92-103, February 2008.
[38] J. Moyne, E. del Castillo, and A.M. Hurwitz, Run-to-Run Control in Semiconductor
Manufacturing. Boca Raton, FL: CRC, 2001.
[39] R. Madhavan, “Changing Economics of Chip Design”, FSA Presentation, 2004.
[40] E. Huang, F.-T. Cheng, and H.-C. Yang, "Development of a Collaborative and Event-Driven
Supply Chain Information System Using Mobile Object Technology," in Proc. 1999 IEEE
International Conference on Robotics and Automation, Detroit, Michigan, U.S.A., pp.
1776-1781, May 1999.
1An Efficient Data Exchange Scheme for Semiconductor
Engineering Chain Management System
Min-Hsiung Hung*1, Ssu-Wei Wu1, Tsung-Li Wang2, Fan-Tien Cheng2, and Yen-Yun Feng2
*The corresponding author: Phone: +886-3-3809991 Ext. 160; Fax: +886-3-3801407; Email: mhhung@ndu.edu.tw .
1Department of Electrical and Electronic Engineering, Chung Cheng Institute of Technology, National Defense University,
Dashi, Taoyuan 335, Taiwan, R.O.C.
2 Institute of Manufacturing Engineering, National Cheng Kung University, Tainan 70101, Taiwan, R.O.C. (Email:
chengft@mail.ncku.edu.tw).
November 9, 2008
Abstract
When IC production enters into the nano-meter generation, many yield problems are related to design.
The semiconductor industry is eager to have engineering chain management systems (ECMSs) to tightly
share engineering data among cooperative semiconductor companies, such as IC Design House,
Mask-Fabrication Company, Foundry-Service Company, and Assembly/Test Company, via Internet for
increasing the yield, reducing production cost, and decreasing time to market for a new IC. Traditionally,
cooperative semiconductor companies exchange data through FTP that is activated manually. In recent
years, the Web Services technology has provided a new and excellent approach for automatically
exchanging and integrating data among heterogeneous systems on the Internet. In this paper, an ECMS
framework for semiconductor industry is presented. Also, an efficient Web-Services-based data exchange
scheme is developed to solve three core problems of data exchange in ECMS: the convenience of data
exchange and integration, the security protection of data transmission, and the efficiency of transmitting
data, in particular large binary data. Experimental test results show that the proposed EC data exchange
scheme can fulfill the desired functional requirements and demonstrate a superior performance over the
traditional data transfer methods. It is believed that the proposed data exchange scheme can be an
effective solution to the data exchange problem of ECMS.
Keywords: Engineering Chain Management System (ECMS), Data Exchange Scheme, Web Services,
Message Transmission Optimization Mechanism (MTOM), Multi-Threading
3member in the design cycle via collaboration, an Engineering Chain Management System (ECMS)
should be built. According to those EC requirements of the work [3], an ECMS framework and the
related framework messages were proposed in the previous work [4]. However, no further detailed design
and implementation of the ECMS framework were accomplished, especially for the data exchange
scheme.
Traditionally, the most common method for exchanging data among cooperative semiconductor
companies is through FTP (File Transfer Protocol) [5]. FTP is a method that adopts the client/server
model to transfer files of data between computers located at different sites. FTP is efficient and reliable.
However, the transmission of FTP needs to be activated manually. Thus, FTP can not integrate with
customized applications to transfer data files automatically to achieve interoperability among distributed
systems.
In recent years, the Web Services [6] technology has been developed for overcoming the
shortcomings of the traditional distributed object technologies, such as DCOM (Distributed Component
Object Model) [7], RMI (Remote Method Invocation) [8], and CORBA (Common Object Request
Broker Architecture) [9] in communication among distributed software components across Internet. As
defined by W3C (World Wide Web Consortium), a Web Service is a software system designed to support
interoperable machine-to-machine interaction over a network. The interface of a Web Service is
described in a machine-processable format, such as WSDL (Web Services Description Language) [10].
Other systems can interact with the Web Service using SOAP (Simple Object Access Protocol) [11]
messages according to the description in a loosely-coupled manner. Besides, a Web Service can use
HTTP (Hypertext Transfer Protocol) as the transfer protocol, allowing its messages to easily penetrate
through firewalls. Thus, it’s easy for Web Services to automatically exchange data and achieve
interoperability among distributed and cross-platform systems over the Internet.
Although the Web Services technology is now a preferred communication approach for distributed
applications to exchange data or integrate systems across the Internet, its performance may be much
inferior to the tightly-coupled counterparts. This is because the communication of Web Services is
5designed to efficiently, securely, and automatically transfer large data between distributed systems in
ECMS. Finally, a prototype ECMS is constructed and experimented to validate the effectiveness and
efficiency of the proposed data exchange scheme.
The rest of the paper is organized as follows. Section 2 describes the proposed ECMS
framework and data exchange scheme. Section 3 depicts the design of the engineering chain
agent (EC Agent), which is in charge of data exchange operations in the ECMS. The design of the
TurboMTOM method is presented in Section 4. The experiments and associated testing results, together
with performance evaluations, are shown in Section 5. Finally, the summary and conclusions are
made in Section 6.
2 Framework of Engineering Chain Management System (ECMS)
The proposed ECMS framework is shown in fig. 1, which comprises five main servers, including the
IC Design Management Server, IP/Library Management Server, Masking Management Server, Foundry
Management Server, and Assembly/Test Management Server. The functional applications of each server
are described below.
The design management server of an IC design house is responsible for IC design product life cycle
management, IP/library data request and management, design rule file request and management, process
specification request and management, process parameter request and management, GDSII file and mask
management, and yield data request and management. The IP/library management server includes an
IP/library management application, a patent version management application, and a customer
management application.
The masking management server in a masking service house includes a design-rule-checking
management system, optical process correction application, work-in-progress (WIP) application, shop
floor management application, and yield management application. A foundry management server
installed in a fab incorporates a shop floor control system, WIP management application, scheduling
application, equipment management application, and yield management application.
73 Design of Engineering Chain Agent
To satisfy the requirements of data exchange in the ECMS, the following three major issues need to
be tackled in the design of the data exchange scheme: the protection of system and data security, the
capability of efficiently and automatically transferring both large and small data, and the mechanism of
manipulating complex business processes among cooperative companies. Accordingly, the functional
blocks of the EC agent which is the core of the data exchange scheme in the ECMS is designed as shown
in Fig. 2. The function of Security Logging can monitor and record the operations of the EC agent to
provide evidences for security auditing. The Certificates Management functionality can manage
certificates used in data encryption/decryption and digital signature in the ECMS.
In additional to protecting messages in transport layer using SSL technology, the EC agent can also
use XML signature and XML encryption to safeguard the security of the in-transit data in message layer
across Internet. XML signature can ensure the integrity of SOAP messages transmitting in Internet.
Besides, the receiver of a signed SOAP message can authenticate the sender’s identity through
authenticating the XML signature in the message. Also, XML signature technology can be applied to
achieve non-repudiation property of the signed SOAP messages for the sake of security auditing. Because
the body of a signed SOAP message may still exist in plain-text format, once unlawful parties intercept
the SOAP message, they can easily understand and use the content in the message. Therefore, XML
encryption technology can be applied to encrypt the body of the SOAP message. The application of XML
encryption can not only ensure the confidentiality of the message content, but also assure that only the
properly authorized receiver can utilize the message.
The EC agent also contains the functions of user policies and profiles management, which can
collectively manage the information and authorization of the system users. Besides, the EC agent
possesses the function for providing the system with a unified mechanism of user authentication and
authorization with single sign-on (SSO) capability. Consequently, the maintenance cost is reduced and
the security is enhanced. The detailed design of the above security-related functions can be referred to the
work [15].
9times per data exchange method. The transmission time of each file, which is from the time when PC 1
starts transmitting the file to the time when PC 2 finishes receiving the file, was recorded, and the average
transmission time was computed.
When Web Services are used to transmit data, the data need to be loaded in a memory buffer first and
then be packed in the SOAP format. To avoid that a large amount of memory is consumed so as to
degrade the computer’s performance, a large-size file should be partitioned into several smaller pieces to
be transmitted separately. To test the effect of the size of the partitioned piece on the total transmission
time, the partitioned size was adjusted between 500 Kbytes and 50 Mbytes. Of the tested partitioned sizes,
10 Mbytes resulted in the best transmission performance. Thus, in this test, if a file to be transmitted has
a size over 10Mbytes, it was partitioned into smaller pieces of 10 Mbytes except that the last piece may be
smaller.
Because MTOM also loads the file to be transmitted into a buffer first and then converts the data to a
XOP package for transmission, the above file-partitioning rule of transmitting large files is applied to
MTOM as well. For testing FTP, RaidenFTPD V2.4 was used as the FTP server and global SCAPE
CuteFTP 7.0 was the FTP client. The transmission time of a file was counted based on the lapse of time
shown in the GUI of CuteFTP.
The average transmission times of six binary files with sizes of 1 Mbytes, 5 Mbytes, 10 Mbytes, 20
Mbytes, 100 Mbytes, and 1 Gbytes, respectively, using three data exchange methods: Web Services,
MTOM, and FTP are shown in Table 1. The top row is the file sizes, and the first column lists the data
exchange methods. In the second column, Tw, TM, and TF denote the transmission times using Web
Services, MTOM, and FTP, respectively. As we can see in the table, Web Services have the worst
transmission performance among the three methods, and its transmission time of a 1GB file is about 4
minutes and 13 seconds. By contrast, FTP has the best transmission performance, its transmission time of
a 1GB file is about 1 minute and 42 seconds. The transmission performance of MTOM is in the middle, it
takes about 2 minutes and 50 seconds to transmit a 1GB file from PC 1 to PC 2.
11
The network transmission throughput by MTOM using four threads is shown in Fig. 5 and shows a good
performance close to that by FTP, shown in Fig. 3. Thus, based on MTOM and multi-threading
techniques, an efficient Web-Services-based large data transfer mechanism, called TurboMTOM, is
proposed for transferring large data, which will be described in the following subsection.
4.2 The Proposed TurboMTOM Method
In this subsection, the proposed TurboMTOM method is depicted in details. The design of
TurboMTOM is based on the following ideas: (1) partitioning the large file into smaller data blocks of
proper sizes that may result in the best transmission performance; (2) adopting Web Services as the
peer-to-peer transmission mechanism so as to be capable of automatically exchanging data between
communicating systems across Internet and Intranet; (3) employing MTOM to convert XML messages
into XOP packages for preventing the binary data from inflation by Base64Binary encoding right before
transmission and thus reducing the transmission time; and (4) utilizing multiple threads, instead of just on
thread, to transmit data in parallel for increasing the throughput of network transmission.
The algorithm of TurboMTOM in the form of UML activity diagram is shown in Fig. 6, which
depicts transferring a data file from EC agent 1 (ECA-1) to EC agent 2 (ECA-2). For ease of explanation,
the symbols used in the TurboMTOM algorithm are depicted in the Table 2. The TurboMTOM algorithm
is described in details below.
ECA-1 (EC agent 1):
(1) The user selects the GDSII file called FN with a pathname FP in ECA-1.
(2) ECA-1 computes the size FS of FN and then sends FS, FN, and FP to ECA-2.
ECA-2 (EC agent 2):
(3) ECA-2 creates the target file whose name, size, and pathname are set as FN, FS, and TP, respectively.
(4) ECA-2 determines NT, BS, NB, and RS according to the algorithm listed in the attached note of Fig. 6,
where NT is the number of threads, BS is the buffer size, NB is the total number of data blocks to be
transferred, and RS is the size of the last data block. It is noted that each data block of the file FN will be
loaded from the disk and stored in the buffer whose size is BS before being transmitted, and each
13
(7) The starting position Pi of the data block to be transferred by Threadi in the original file is computed
as Pi =TicketBS. Also, Ticket is incremented as Ticket=Ticket+1.
(8) If Ticket==NB, meaning that the data block to be transferred is the last one, then BS is set to equal RS.
(9) The Threadi sends Pi and BS to ECA-1 requesting data transfer.
ECA-1：
(10) ECA-1 creates a byte array, called Buffer, with a size of BS .
(11) ECA-1 reads the data block with a size of BS from the position Pi of the file FN into Buffer.
(12) ECA-1 generates a hash value HV1 of Buffer using the MD5 hash algorithm.
(13) ECA-1 returns Buffer and HV1 to ECA-2 using MTOM.
ECA-2：
(14) ECA-2 generates a hash value HV2 of received Buffer by the MD5 hash algorithm.
(15) If HV2≠HV1, meaning that the received Buffer is different from the original one, then go back to
the activity (9) to request resending the data block.
(16) If HV2==HV1, implying that the received Buffer is correct, then go to the activity (17).
(17) If Latch==True, then let Threadi sleep for a random period of time and go back to the activity (17)
again. Otherwise, Latch is set to equal True to prevent the target file from being written by other
threads.
(18) ECA-2 writes Buffer into the target file, starting from the position Pi of the target file.
(19) Latch is set to equal False to allow the target file to be written by other threads.
(20) Increment the Counter, i.e. Counter=Counter+1, signifying that a transfer of a data block from
ECA-1 to ECA-2 is done.
15
The software development and deployment in the experiment are described as follows. Microsoft
Visual Studio.NET 2005 is the integrated development tool. The programs are coded in the C# language
and run on the Microsoft .NET Framework 2.0. The Web Services are hosted on Microsoft Internet
Information Services. The MTOM implementation is provided by using Microsoft Web Services
Enhancement 3.0 [19].
For testing the performances of Web Services, MTOM, FTP, and TurboMTOM in transferring large
data, six GDSII files with sizes of 100 Mbytes, 500 Mbytes, 1 Gbytes, 5 Gbytes, 10 Gbytes, and 100
Gbytes, respectively, are transmitted from ECA-1 to ECA-2 five times per data exchange method, except
that the GDSII file with 100 Gbytes size is transferred only once per method due to its huge size. The
same rules of the best partitioned size and the optimal number of threads as in Section 4.1 are used in the
transmission tests. That is, if a file being transmitted has a size over 10 Mbytes, it is partitioned into
smaller pieces of 10 Mbytes except that the last piece may be smaller. Also, four threads are used in the
TurboMTOM method. The transmission time of each file is recorded, and then the average transmission
time is computed.
The average transmission times of six large GDSII files with sizes of 100 Mbytes, 500 Mbytes, 1
Gbytes, 5 Gbytes, 10 Gbytes, and 100 Gbytes, respectively, using Web Services, MTOM, FTP, and
TurboMTOM are shown in Table 3. The top row is the file sizes, and the first column lists the data
exchange methods. The data in Table 3 contain the average transmission times in seconds with associated
standard deviations, except that the file with 100 Gbytes size has no standard deviations. As we can see in
the table, the proposed TurboMTOM has the best transmission performance among these four data
exchange methods, while FTP is the second best, MTOM is the third best, and Web Service is the worst.
To illustrate the performance differentials of the four methods, the testing results of the 100 Gbytes
file are used as a comparative sample. The transmission time of TurboMTOM in transferring the 100
Gbytes file is about 2.84 hours. By contrast, Web Services, MTOM, and FTP take about 7.17 hours, 4.70
hours, and 3.63 hours, respectively, in transferring the same file. As shown in Table 4, the average
transmission time ratios of TurboMTOM, FTP, and MTOM with respect to Web Services are about
17
Steps 4, 5 & 6: The EC agent of the assembly house sends the WIP data to the EC agent of the design
house, and then the WIP data is forwarded to the WIP management application and saved into the
local database in the design house.
Steps 7 & 8: The WIP management application in the design house may preprocess the WIP data and
store the preprocessed WIP data into the local database.
Step 9: The users in the design house can then query and use various WIP data for desired applications.
To test the efficiency of the proposed data exchange scheme in delivering small data, the above Steps
2 to 6 are used as the testing scenario. The WIP data in this research contain two-month volume and are
obtained from our cooperated assembly house. In the test, one piece of 100-Kbytes WIP data per hour is
delivered from the local database of the assembly house to the local database of the design database
through the prototype ECMS. By performing the above scenario several times, the data transmission time
can always be less than 1 second. Thus, the proposed data exchange is also efficient in transferring small
data.
6 Summary and Conclusions
In this paper, the concept of engineering chain (EC) is introduced. Then, an Engineering Chain
Management System (ECMS) framework for the semiconductor industry is presented. The functional
components of the ECMS framework are explained as well. In addition, an efficient data exchange
scheme is designed to achieve secure, good-quality, and efficient data exchange to support an IC design
cycle in an EC environment. Particularly, the problem of how to efficiently, securely, and automatically
transfer large data between distributed systems in ECMS using Web Services is tackled and investigated.
The transmission performances of Web Services, MTOM, and FTP are tested and analyzed first. The
testing results show that MTOM can achieve significant improvement in transmission time over Web
Services, but it is still inferior to FTP. By contrast, FTP has the best performance, but it is hard to
integrate with other systems for automatic data exchanges. Thus, by combining the techniques of file
partitioning, Web Services, MTOM, and Multi-Threading, a novel Web-Services-based large data
transfer mechanism, called TurboMTOM, is designed for solving three core problems of data exchange
19
[7] R. Sessions, COM and DCOM: Micrsoft's vision for distributed objects, John Wiley & Sons, 1997.
[8] R. Cattell, J. Inscore, and E. Pa, J2EE Technology in Practice: Building Business Applications with
the Java, Addison-Wesley, 2001.
[9] H. Balen, Distributed Object Architectures with CORBA, SIGS BOOKS, 2000.
[10] WSDL specification. http://www.w3c.org/tr/wsdl/.
[11] SOAP specification. http://www.w3c.org/tr/soap.
[12] M. Gudgin, N. Mendelsohn, M. Nottingham, and H. Ruellan, “Message Transmission
Optimization Mechanism,” 2005. http://www.w3.org/TR/soap12-mtom/.
[13] M. Gudgin, N. Mendelsohn, M. Nottingham, and H. Ruellan, “XML-binary Optimized
Packaging,” 2005. http://www.w3.org/TR/xop10/.
[14] Jim Buchanan, "The GDSII Stream Format," June 1996.
http://www.buchanan1.net/stream_description.shtml
[15] S.-W Wu, Development of a Web-Services-based Data Exchange Scheme for Semiconductor
Engineering Chain, Master Thesis, Chung Cheng Institute of Technology, National Defense
University, Taiwan, R.O.C., August 2008.
[16] T.-L. Wang, M.-H. Hung, S.-W. Fan, and F.-T. Cheng, ”Development of an Data Exchange
Scheme for Semiconductor Engineering Chain,” Proceedings of The Sixteenth Conference on
Automation Technology (Automation 2008), Kaohsiung, Taiwan, R.O.C., pp. 93-99, June 2008.
[17] M.-H. Hung, T.-H. Lin, F.-T. Cheng, and R.-C. Lin, “A Novel Virtual Metrology Scheme for
Predicting CVD Thickness in Semiconductor Manufacturing,” IEEE/ASME Transactions
on Mechatronics, Vol. 12, No. 3, pp. 308-316, June 2007.
[18] D. Sprott and L. Wilkes, “Understanding Service-Oriented Architecture,” 2004.
http://msdn.microsoft.com/architecture/soa/default.aspx?pull=/library/en-us/dnmaj/html/aj1soa.asp.
[19] Web Services Enhancements 3.0 for Microsoft .NET. http://msdn.microsoft.com/
21
Fig. 3 Network throughput chart of transmission by FTP.
Fig. 4 Network throughput chart of transmission by MTOM.
Fig. 5 Network throughput chart of transmission by MTOM using four threads.
23
Fig. 7 Trend curves of transmission times versus file sizes using Web Services, MTOM, FTP, and
TurboMTOM. All transmissions are protected by SSL at the transport layer.
1.Save WIP data
into the database
2.Get WIP data
periodically
6.Store
WIP data
9.Query
WIP data
8. Store
Preprocess
data 5.Forward
WIP data
7. WIP data
Preprocess
4.Send WIP data
to Design House
(HTTPS)
3.Send WIP
data to ECA
Fig. 8 Scenario of delivering WIP data periodically from Assembly House to IC Design House.
25
Table 3 Average transmission times of six large GDSII files with sizes of 100 Mbytes, 500 Mbytes,
1 Gbytes, 5 Gbytes, 10 Gbytes, and 100 Gbytes, respectively, using Web Services, MTOM, FTP,
and TurboMTOM. All transmissions are protected in the transport layer with SSL. (Unit:
Second)
Table 4 Performance comparison of Web Services, MTOM, FTP, and TurboMTOM in
transmitting a file of 100 Gbytes.
File Size
Method
100
MB
500
MB
1
GB
5
GB
10
GB
100
GB
Web Services Mean 20.1 101.9 232.4 1174.8 2544.8 25799.7
SD 0.1 6.7 6.3 2.0 35.7 ---
MTOM Mean 12.3 59.6 157.1 848.9 1609.1 16933.9
SD 0.5 0.5 2.4 58.5 11.9 ---
FTP Mean 13.0 66.4 135.0 681.2 1342.4 13054.0
SD 0.0 0.5 0.8 1.6 71.6 ---
TurboMTOM Mean 11.1 48.8 103.9 506.8 1018.1 10237.6
SD 0.2 1.3 1.3 1.4 4.0 ---
Compared Method Web Services MTOM FTP TurboMTOM
Transmission Time
in seconds
25799.7
(7.17 hour)
16933.9
(4.70 hour)
13054.0
(3.63 hour)
10237.6
(2.84 hour)
Average Transmission
Time Ratio 100% 65.64% 50.60% 39.68%
 [1] M.-H. Hung, S.-W. Wu, Z.-L. Wang, F.-T. Cheng, and Y.-Y. Feng, 
"Development of an Efficient Web-Services-based Data Exchange Scheme 
for Semiconductor Engineering Chain," in Proc. of the 10th International 
Conference on Automation Technology (Automation 2009), Tainan, Taiwan, 
R.O.C., June 27, 2009. 
 
 
 
 
 
Usually, an IC-design house needs to send GDSII files to 
mask companies for mask fabrication. The size of a GDSII 
file is very huge, usually over 100 Gbytes in current advanced 
manufacturing process. Thus, how to efficiently and 
automatically transfer large data between distributed systems 
over network using Web Services is thus an important issue 
for developing an ECMS.  
In this paper, an ECMS framework for semiconductor 
industry is presented first. Then, the functional components 
of the ECMS are explained. Further, by adopting the 
techniques of file partitioning, Web Services, MTOM, and 
Multi-Threading, a novel Web-Services-based data exchange 
method, called TurboMTOM, is designed to efficiently, 
securely, and automatically transfer large data between 
distributed systems in ECMS. Finally, a prototype ECMS is 
constructed and experimented to validate the effectiveness 
and efficiency of the proposed data exchange scheme. 
II. ENGINEERING CHAIN MANAGEMENT SYSTEM (ECMS) 
FRAMEWORK 
Fig. 1 reveals that the ECMS framework comprises five 
main servers, including the IC Design Management Server, 
IP/Library Management Server, Masking Management 
Server, Foundry Management Server, and Assembly/Test 
Management Server. The functions of each server are 
described below. 
The design management server of an IC design house is 
responsible for IC design product life cycle management, 
IP/library data request and management, design rule file 
request and management, process specification request and 
management, process parameter request and management, 
GDS II file and mask management, and yield data request and 
management. 
The IP/library management server includes an IP/library 
management application, a patent version management 
application, and a customer management application. 
Meanwhile, the masking management server in a masking 
service house includes a design-rule-checking management 
system, optical process correction application, 
work-in-progress application, shop floor management 
application, and yield management application. A foundry 
management server installed in a fab incorporates a shop floor 
control system, WIP management application, scheduling 
application, equipment management application, and yield 
management application.   
Most assembly/test operation service providers provide 
both services in the same factory. Their assembly/test 
management server includes a WIP management application, 
a shop floor management application, an assembly operation 
management application and a test operation application. 
An Engineering Chain (EC) agent is deployed in the 
Extranet of each company for being in charge of data 
exchange operations among cooperative companies. The 
ECMS is built on top of the Internet with firewalls 
constructed in each company. The ECMS should adopt 
mainstream network protocols, which can directly pass 
through the firewall. Thus, the new-generation, text-based 
distributed system integration technology, Web Services, is 
adopted to construct the communication infrastructure of the 
ECMS. Consequently, the information components in the 
ECMS can communicate with each other using SOAP 
messages, which may be protected by information security 
technology, such as SSL (Security Socket Layer). Besides, 
the functional Web Services in the ECMS can be described by 
WSDL for easily being accessed and incorporated in 
constructing related applications. 
 
Fig. 1. ECMS framework.
290
 
 
 
 
 
For further illustrating the above algorithm, three 
executing examples are given below. Example 1: if FS 
=57Mb, then NT =4, BS =10Mb, NB =6, and RS =7 Mb; 
Example 2: if FS =20Mb, then NT =4, BS =5Mb, NB =4, 
and RS =5Mb; and Example 3: if FS =7Mb, then NT =1, 
BS =7Mb, NB =1 and RS =7Mb. 
(5) ECA-2 sets Ticket=0, Latch=False, and Counter=0. 
Ticket is the task ticket number, a nonnegative integer 
started from zero, for assigning data blocks to each 
thread to transfer. For example, if NB==5, then the 
thread assigned with Ticket=0 is responsible for 
transmitting the first data block; the thread with Ticket 
=1 needs to transmit the second data block; and the 
thread with Ticket =4 will transmit the fifth data block. 
Although multiple threads can transfer data 
simultaneously, they cannot write data into the same 
target file at the same time. Thus, the flag Latch is 
employed to control whether data are allowed to be 
written into the target file or not. Before beginning to 
write the data, each thread will check the value of Latch. 
If Latch==False, meaning that no other threads are 
writing data into the target file, then the current thread 
can proceed to write the data. If Latch==True, meaning 
that the target file is being written by another thread, 
then the current thread is not allowed to do data writing. 
Finally, the Counter is a counter used to count the 
number of data blocks that has been successfully 
transferred. 
(6) In addition to the main thread with the index i=0, 
ECA-2 turns on other NT threads with the index i=1~NT, 
respectively. Each thread except the main one performs 
the activities (7)~(9), and (14)~(21), while the main 
thread executes the activity (22). Activities (10)~(13) 
are taken care by ECA-1. 
(7) The starting position Pi of the data block to be 
transferred by Threadi in the original file is computed as 
Pi =Ticket × BS. Also, Ticket is incremented as 
Ticket=Ticket+1. 
(8) If Ticket==NB, meaning that the data block to be 
transferred is the last one, then BS is set to equal RS. 
(9) The Threadi sends Pi and BS to ECA-1 requesting data 
transfer. 
ECA-1：  
(10) ECA-1 creates a byte array, called Buffer, with a size of 
BS . 
(11) ECA-1 reads the data block with a size of BS from the 
position Pi of the file FN into Buffer. 
(12) ECA-1 generates a hash value HV1 of Buffer using the 
MD5 hash algorithm. 
(13)  ECA-1 returns Buffer and HV1 to ECA-2 using 
MTOM. 
ECA-2： 
(14) ECA-2 generates a hash value HV2 of received Buffer 
by the MD5 hash algorithm. 
(15) If HV2≠HV1, meaning that the received Buffer is 
different from the original one, then go back to the 
activity (9) to request resending the data block. 
(16) If HV2==HV1, implying that the received Buffer is 
correct, then go to the activity (17). 
(17) If Latch==True, then let Threadi sleep for a random 
period of time and go back to the activity (17) again. 
Otherwise, Latch is set to equal True to prevent the target 
file from being written by other threads. 
(18) ECA-2 writes Buffer into the target file, starting from 
the position Pi of the target file. 
(19) Latch is set to equal False to allow the target file to be 
written by other threads. 
(20) Increment the Counter, i.e. Counter=Counter+1, 
signifying that a transfer of a data block from ECA-1 to 
ECA-2 is done.  
(21) If Ticket < Ns, meaning that at least one data block has 
not been transferred yet, then go back to the activity (7) 
for transferring one of the remaining data blocks. 
Otherwise, if Ticket==NS, meaning that all of data 
blocks have completely been transferred, then 
terminate Threadi. 
(22) In the main thread, if Counter < NB, then continue to 
execute the main thread until Counter == NB. 
 
BS = RS
Select a GDSII file called 
FN with Pathname = FP
Compute the file size FS
of FN and send FN and FS
to ECA-2
ECA-1 ECA-2
Decide NT, BS, NB, and RS
according to the algorithm 
shown on the left
Send  Pi and  BS
to ECA-1
Create a byte array called
Buffer with Length = BS
Read the byte stream of FN, from 
Position = Pi , Length = BS , into Buffer
Generate the hash value HV1 of Buffer 
using the MD5 algorithm 
Return Buffer and HV1 to 
ECA-2 through MTOM [Latch == True]
[Latch == False ]
Let Thread i sleep
for a random time
Generate the hash 
value HV2 of the 
received Buffer
Write Buffer into the target file 
from Position = Pi
Counter = Counter + 1
[ HV2 == HV1]
[ HV2 ≠ HV1]
Latch = True
Latch = False
[Ticket < NB]
Create the target file 
called FN with Size = FS
and Pathname = TP
Ticket = 0; Latch = False; 
Counter = 0 ;
[Ticket == NB]
[Counter < NB]
[ Ticket ==  NB ]
[ Ticket <  NB ]
[Turn on Threads i, i = 1~NT ][Main Thread, i = 0]
[Counter == NB]
NT = 4 ;
if FS ≥ NT  x 10Mb  then
BS = 10Mb ;
else if FS ≥ NT  x 5Mb  then
BS = 5Mb ;
else if FS ≥ NT  x 2Mb  then
BS = 2Mb ;
else {
BS = FL ;
     NT = 1 ; }
RS = FS % BS ; % : Remainder
NB = FS  / BS ; / : Quotient
if  RS ≠ 0   then
    NB = NB + 1 ;
else
RS = BS;
Pi =  Ticket  x  BS
Ticket  =  Ticket + 1
(1)
(2) (3)
(13)
(12)
(11)
(10) (9)
(8)
(7)
(6)
(5)
(4)
(14)
(19)
(18)
(17)
(16)
(15)
(21)
(20)
(22)
Fig. 3. Algorithm of TurboMTOM in the form of UML 
activity diagram. 
292
 
 
 
 
 
B. Experiment on Periodically Delivering Small WIP Data  
WIP data management is one of important applications in 
the ECMS. For example, the IC design house can acquire 
WIP data from its outsourcing vendors, such as Foundry and 
Assembly House, through the ECMS. Then, various virtual 
production (VP) applications may be developed based on the 
acquired WIP data. One possible VP application is that the IC 
design house can query and display historical throughput to 
monitor whether the production of the outsourcing vendor 
achieves the contracted capacity or not. Another VP 
application is that the IC design house may query the 
quantities of the current inventory final products and check 
whether the future shipping plans can be satisfied or not. 
A scenario of periodically delivering WIP data from an 
assembly house to an IC design house is shown in Fig. 5 and 
described as follows.  
Step 1: The shop floor application in the assembly house 
continuously saves WIP data into the local database. 
Steps 2 & 3: The WIP management application in the 
assembly house periodically, such as per hour, gets 
the WIP data from the local database and sends them 
to the local EC agent. 
Steps 4, 5 & 6: The EC agent of the assembly house sends the 
WIP data to the EC agent of the design house, and 
then the WIP data is forwarded to the WIP 
management application and saved into the local 
database in the design house. 
Steps 7 & 8: The WIP management application in the design 
house may preprocess the WIP data and store the 
preprocessed WIP data into the local database. 
Step 9: The users in the design house can then query and use 
various WIP data for desired applications. 
1.Save WIP data 
into the database
2.Get WIP data 
periodically
6.Store
WIP data
9.Query 
WIP data
8. Store 
Preprocess 
data 5.Forward
WIP data
7. WIP data 
Preprocess
4.Send WIP data  
to Design House
(HTTPS)
3.Send WIP 
data  to ECA
 
Fig. 5 Scenario of delivering WIP data periodically from 
Assembly House to IC Design House. 
To test the efficiency of the proposed data exchange 
scheme in delivering small data, the above Steps 2 to 6 are 
used as the testing scenario. The WIP data in this research 
contain two-month volume and are obtained from our 
cooperated assembly house. In the test, one piece of 
100-Kbytes WIP data per hour is delivered from the local 
database of the assembly house to the local database of the 
design database through the prototype ECMS. By performing 
the above scenario several times, the data transmission time 
can always be less than 1 second. Thus, the proposed data 
exchange is also efficient in transferring small data. 
V. CONCLUSION 
In this paper, the concept of engineering chain (EC) is 
introduced. Then, an Engineering Chain Management System 
(ECMS) framework for the semiconductor industry is 
presented. The functional components of the ECMS 
framework are explained as well. By combining the 
techniques of file partitioning, Web Services, MTOM, and 
Multi-Threading, an efficient Web-Services-based data 
exchange scheme, called TurboMTOM, is developed to solve 
three core problems of data exchange in ECMS: the 
convenience of data exchange and integration, the security 
protection of data transmission, and the efficiency of 
transmitting large data.  
To validate the effectiveness and good performance of the 
proposed data exchange scheme, a prototype ECMS is 
constructed according to the presented ECMS framework. 
Testing results show the proposed TurboMTOM is superior 
to Web Services, MTOM, and FTP in terms of the data 
transmission time. Besides, the TurboMTOM can easily 
integrate with other systems for automatic data exchange. The 
testing results also show that the prototype ECMS is efficient 
in transmitting small data, such as 100-Kbytes WIP data. It is 
believed that the proposed ECMS framework and the 
developed data exchange scheme can be a useful reference 
for constructing semiconductor engineering chain 
management systems. 
REFERENCES 
[1] International Technology Roadmap for Semiconductor 2005 
Edition, ITRS, Dec. 2005. http://public.itrs.net/  
[2] J. Y.-C Chang, F.-T. Cheng, and T.-L. Wang, “Novel 
Semiconductor Business Model - Engineering Chain for the 
Semiconductor Industry,” 2007 IEEE International Conference 
on Robotics and Automation, Roma, Italy, April 2007. 
[3] Web Services. http://www.webservices.org. 
[4] WSDL specification. http://www.w3c.org/tr/wsdl/. 
[5] SOAP specification. http://www.w3c.org/tr/soap. 
[6] M. Gudgin, N. Mendelsohn, M. Nottingham, and H. Ruellan, 
Message Transmission Optimization Mechanism, 2005. 
http://www.w3.org/TR/soap12-mtom/. 
[7] M. Gudgin, N. Mendelsohn, M. Nottingham, and H. Ruellan, 
XML-binary Optimized Packaging, 2005. 
http://www.w3.org/TR/xop10/. 
[8] File Transfer Protocol, 2007.  
      http://en.wikipedia.org/wiki/File_Transfer_Protocol. 
[9] S.-W Wu, Development of a Web-Services-based Data 
Exchange Scheme for Semiconductor Engineering Chain, 
Master Thesis, Chung Cheng Institute of Technology, National 
Defense University, Taiwan, R.O.C., August 2008. 
[10] T.-L. Wang, M.-H. Hung, S.-W. Fan, and F.-T. 
Cheng, ”Development of an Data Exchange Scheme for 
Semiconductor Engineering Chain,” Proceedings of The 
Sixteenth Conference on Automation Technology (Automation 
2008), Kaohsiung, Taiwan, R.O.C., pp. 93-99, June 2008. 
[11] M.-H. Hung, T.-H. Lin, F.-T. Cheng, and R.-C. Lin, “A Novel 
Virtual Metrology Scheme for Predicting CVD Thickness in 
Semiconductor Manufacturing,” IEEE/ASME Transactions on 
Mechatronics, Vol. 12, No. 3, pp. 308-316, June 2007. 
[12] D. Sprott and L. Wilkes, Understanding Service-Oriented 
Architecture, 2004. http://msdn.microsoft.com/  
294
  Fig. 2. Comparison of Supply Chain and Engineering Chain [9]. 
achieving a successful IC design using sub-wavelength 
technologies (<0.13um). Moreover, the required distributed 
collaborative working environment for new IC design also 
increases the difficulty of information communication among all 
design and manufacturing parties, comprising IC design houses, 
foundry services providers, IP/Library services providers, and 
test/assembly services providers. As such, a new 
Engineering-Chain (EC) business model is essential for integrating 
new process technologies into the above-mentioned collaborative 
working environment to achieve a higher IC design success rate. 
This study takes the initiative to propose a novel and effective EC 
business model and an EC management system (ECMS) to ensure 
a successful and effective IC design cycle by dealing with 
distributed working environment and advanced process design 
challenges.   
II. CONCEPT OF ENGINEERING CHAIN 
 
ITRS proposed the concept of Engineering Chain (EC) to cope 
with design collaboration in the semiconductor industry [9]. In a 
previous study by the present author, EC in the semiconductor 
industry was first defined as a network of facilities and distributed 
services that performs device design; verification of design; 
manufacturing pilot run; assembly and test operations; yield 
improvement; and final release for mass-production [11]. Figure 2 
compares supply chain (SC) and EC in the semiconductor industry 
[9].   
During the mass-production phase after successful IC design, 
SC manages the entire operation from order input to wafer delivery. 
On the other hand, during the product-development phase, EC 
plays the role of managing IC design operation from IC design to 
the release of mass production. Both SC and EC management 
systems should operate efficiently within the new collaborative 
operation model among all stakeholders to complete IC design and 
IC manufacturing. EC supports product development; while SC 
supports mass production.  
The novel EC component and traditional SC component for 
inter-company operation were combined with the intra-company 
MES (manufacturing execution system) component and EES 
(equipment engineering system) component to create a new 
comprehensive e-manufacturing scope in the semiconductor 
industry, as illustrated in Fig. 3 [10][11]. The proposed 
semiconductor e-manufacturing concept focuses not only on SC 
“order-to-delivery” for timely and economical delivery of desired 
products [6][7]; but also emphases e-manufacturing support to a 
fast design cycle to reduce EC “time-to-market” because some 
IC design cycles are longer than their corresponding 
mass-production cycles [4][5][10]. 
 
III. INTRODUCTION TO THE ENGINEERING CHAIN 
MANAGEMENT SYSTEM  
 
Traditional electronic devices have a long product life cycle that 
is composed of a short design phase and a long mass-production 
phase. However, in the present new digital consumer era, which is 
characterized by short product life cycle and advanced process 
technologies, the current IC mass-production cycles may even be 
shorter than their design cycles. The SC management 
system can handle “order-to-delivery” cycle but cannot 
support the EC requirements for reducing 
“time-to-market”. 
The first challenge faced by an IC design house in 
initiating an IC design is to ensure that the submitted design 
has a high success rate. The importance of first IC design 
success is more crucial than before because IC design 
failure can easily spoil an entire project due to the market 
becoming unprofitable. 
The fact that sub-wavelength manufacturing cannot 
apply image-corrected processing brings new challenges 
for new process technologies [8]. A new technology known 
as optical proximity correction (OPC) is required for IC 
circuit design. Without OPC operation, a circuit cannot 
perform as expected for delivering the plan function. In 
0.13um process technologies, masks for 52% of layers 
must be implemented with OPC operation. In 90nm process 
technologies, more than 70% of photo layer designs must be 
completed via OPC operation.  
After the adoption of OPC design technology in IC design, IC 
design data size has been significantly increased. Basically, OPC is 
applied to improve the design success rate; however excessive 
quantities of OPC data may increase the design difficulty in this 
remote collaborative design environment, which lacks a feasible 
system architecture and communication standards.   
When IC design is completed and the designed product enters 
the mass-production phase, SC plays the key role to assure smooth 
order-to-delivery operation. However, certain IC designs might not 
be able to enter this mass-production phase owing to high IC design 
failure rates. As such, like the existing SC management system, 
which can increase mass-production efficiency, a novel Engineering 
Chain Management System (ECMS) is also required for boosting 
product-development efficiency. 
Traditional computer-integrated-manufacturing (CIM) functions 
in the semiconductor industry focus on intra-factory operation 
support, including planning, scheduling, manufacturing execution 
control, SPC (statistic process control), APC (advanced process 
control), AEC (advanced equipment control), yield management, 
and so on [12]. All these CIM functions are designed based on the 
Engineering Chain
(EC)
Supply Chain
(SC)
e-Manufacturing
Manufacturing 
Execution System 
(MES)
Equipment 
Engineering System
(EES)
Internet
Inter-Company
Intra-Company
 
Fig. 3. e-Manufacturing scope and components. 
WeE10.4
1598
 9) Cross-boundary Knowledge Management  
10) Design Performance Evaluation 
Based upon the above-mentioned requirements, ECMS is 
proposed for supporting comprehensive EC operation. Each 
member of the EC possesses an EC agent and a local database. The 
EC agent is responsible for secure, accurate, and efficient 
engineering-data exchange among all of the EC members. Besides, 
the design house, IP/library house, masking house, foundry, and 
assembly/test house own the design management server, IP/library 
management server, masking service server, foundry service server, 
and assembly/test service server, respectively. 
Coherent IC design operations among many heterogeneous 
companies are the operating model of the EC. Enormous quantities 
of data, including design files, mask data, process specifications, 
and yield data, need to be exchanged among all the members of the 
EC. Therefore, transparent information sharing is essential to 
significantly improve design efficiency and assure the first-pass tape 
out of an IC design. 
Figure 6 [11][15] illustrates the operating scenarios and 
functional groups of EC. These operating scenarios are fundamental 
for completing IC design. Each operating scenario should be 
designed in the ECMS to optimize operating efficiency to support an 
effective IC design. The design house serves as the central 
coordinator to complete this whole IC design cycle from layout 
design, masking preparation, manufacturing qualification, assembly 
and testing to mass-production release.  
Figure 6 addresses key operations for an IC design cycle. The 
figure includes several key considerations for reaching higher IC 
design success rate and fast IC design cycle. However, several issues 
may be still encountered and result in IC design failure.  
The objectives of the EC operation include “First Tape Out 
Success”, “Design Cost Reduction”, “Design Cycle-Time 
Reduction”, “Empowerment Agility”, “WIP Visibility”, “Asset 
Utilization” and “Time to Market”. With the generic protocol, 
common system architecture and operation standards, the ECMS 
can provide an effective design environment for all design partners 
to improve IC design success rate for minimizing time-to-market 
and design cost. 
 
V. IMPLEMENTATION OF THE ENGINEERING CHAIN 
MANAGEMENT SYSTEM  
 
Supporting the above EC operating scenarios in the ECMS 
architecture requires exchanging considerable engineering data. 
Currently, there is no industrial standard (as what the semiconductor 
industry did for logistics data) for EC engineering-data exchange in 
the semiconductor industry. This work adopts the new generation 
distributed objected-oriented technology with web services [18] as 
the enabling technology of the ECMS framework. 
 
A. Applying the Concept of Framework to Design the ECMS 
 
The ECMS enhances the first-pass (passing the qualification at 
the first design) possibility in the IC design cycle through coherent 
operation by efficient and effective design information sharing. 
Without the ECMS, several fragmental system applications exist for 
partial implementation of EC operations. Notably, no standard exists 
for implementing applications to support the EC operations. 
Existing EC applications that are not based on the framework 
concept eventually become legacy systems, which cannot be easily 
integrated with other applications in each service partner of the EC. 
Even worse, various applications for the same function may be 
established owing to the adoption of different information exchange 
mechanisms among service partners. For example, a single design 
house must maintain different yield information exchange platforms 
with all engaged foundry service suppliers that do not use the same 
platform. Consequently, when a single design project is initiated in a 
design house with numerous possible service providers, separate 
interfaces must be established with various IP/library service 
providers, mask houses, foundry service providers and 
assembly/test houses owing to the lack of a framework design and 
standard protocols. 
A framework design in the ECMS provides several benefits for 
all CIM managers in an EC environment [13]. With the advance of 
the application of Internet and information technologies to 
e-manufacturing, a framework design based on these two 
technologies can enhance IC design productivity in EC operations. 
Therefore, the ECMS framework, which fulfills the key 
requirements of the EC, can remarkably improve the efficiency of 
design collaboration in EC. 
 
B. Implementation of the ECMS Framework 
 
To support the ECMS requirements, the ECMS framework 
should possess four key functionalities: 
1) EC Operating Capability: The ECMS should be equipped 
with five levels of EC operating capabilities: 
i Remote access and remote collaboration  
ii Data collection and debugging 
iii Data analysis 
iv IC design operating- scenario-management capability  
v Project and product management.   
2) Data Security: Data transfer via the Internet in the ECMS is 
critical, and may even be a determinant of the success of a new 
device design. Data security thus is the main consideration of the 
ECMS implementation.  
3) EC Application Service Registration and Publication: 
Overall, the EC is constructed by many applications located in 
various member companies for completing a specified design 
project. A service registration mechanism should be constructed to 
enable various members to register available applications and 
services corresponding to specific design projects. 
4) Communication Protocol: The ECMS is built on top of the 
Internet with a firewall constructed in each company. The ECMS 
should adopt mainstream network protocols, which can directly pass 
through the firewall. Consequently, the new-generation distributed 
object technology, known as web services, is adopted to construct 
the communication infrastructure of the ECMS. 
Figure 7 reveals that the ECMS framework comprises five main 
servers, including the IC design management server, IP/library 
management server, masking service server, foundry service server, 
and assembly/test service server, the functions of which are 
described below. 
The design management server of an IC design house is 
responsible for IC design product life cycle management, IP/library 
data request and management, design rule file request and 
management, process specification request and management, 
process parameter request and management, GDS II file and mask 
management, and yield data request and management. 
The IP/library management server includes an IP/library 
management application, a patent version management application, 
and a customer management application. Meanwhile, the masking 
service server in a masking service house includes a 
design-rule-checking management system, optical process 
correction application, work-in-progress application, shop floor 
management application, and yield management application. A 
foundry service server installed in a fab incorporates a shop floor 
control system, WIP management application, scheduling 
application, equipment management application, and yield 
management application.    
Most assembly/test operation service providers provide both 
WeE10.4
1600
 framework-message example for a design house requesting yield 
reports from its engaged foundry service provider.  
The above framework messages only demonstrate the scenarios 
for yield-report request operations. Similarly, the framework 
messages of other operations, such as remote job view for masking 
data preparation, design pattern debugging, and so on, can also be 
defined. 
To ensure the successful development of the ECMS for 
supporting the IC design challenge in the semiconductor industry, 
overall ECMS simulation and performance evaluation are also 
performed as part of this project. Future research will examine 
ECMS simulation and performance assessment. 
 
VI. SUMMARY AND CONCLUSIONS 
 
This study proposes effective EC operation scenarios for 
improving the design productivity, through faster design cycle and 
higher product yield. This study also develops a collaborative 
platform – the ECMS. The framework of this platform is designed to 
support the coherent collaboration of the EC. It is believed that the 
ECMS framework can be applied to develop any information 
communication platform involving all EC design partners, and to 
enhance the design productivity for the semiconductor and other 
industries.   
REFERENCES 
 
[1]   G. E. Moore, “Cramming More Components onto Integrated 
Circuits, Electronics”, April 19, 1965. [Online]. Available: 
ftp://download.intel.com/research/silicon/moorespaper.pdf 
[2]  D. Decker, “Outlook on the Global Fabless Semiconductor 
Industry”, Fabless Semiconductor Association (FSA), 2004. 
[Online]. Available: http://www.fsa.org/  
[3] “What Are the Challenges and Opportunities in Semiconductor 
IP?”, FSA, Semiconductor Venture Fair III, May 12, 2004. 
[Online]. Available: 
http://fsa.org/resources/presentations/SVF_III_051304.pdf  
[4]  K. Jou, “IC Design House Survey 2004”, EE Times. [Online]. 
Available: 
http://www.eetasia.com/SURVEYS/EETT_ICD_TW04.PPT 
[5]   R. Madhavan, “Changing Economics of Chip Design”, FSA 
Presentation, 2004. 
[6]   R. Ganeshan and T. P. Harrison, “An Introduction to Supply 
Chain Management”, Penn State University, [Online]. 
Available: 
http://silmaril.smeal.psu.edu/misc/supply_chain_intro.html  
[7]   Performance Indicators in Logistics, IFS Publications / 
Springer-Verlag, NEVEM-workgroup, 1989.  
[8]   Web site of the Synopsys. [Online]. Available: 
http://www.synopsys.com/    
[9]   International Technology Roadmap for Semiconductor 2005 
Edition, ITRS, Dec. 2005. [Online]. Available: 
http://public.itrs.net/  
[10] F.-T. Cheng, “Researching Strategy and Development 
Proposal,” Automation Division of National Science Council, 
Taiwan, R.O.C, October 2004. 
[11] J. Y.-C and Chang, F.-T. Cheng, “Engineering Chain 
Requirement for Semiconductor Industry,” 2005 IEEE 
International Conference on Automation Science and 
Engineering, Edmonton, Canada, August 2005.  
[12] SEMI E81, Provisional Specification for CIM Framework 
Domain Knowledge, June 1999.  
[13] SEMI E93, Guide for CIM Framework Technical 
Architecture, 2003.  
[14] SEMI, E102, Provisional Specification for CIM Framework 
Material Transport and Storage Component, March 2000.  
[15] J. Y.-C. Chang and F.-T. Cheng, “Framework Development 
of an Engineering-Chain-Management-System for the 
Semiconductor Industry,” 3rd International IEEE Conference 
on Industrial Informatics, Perth, Western Australia, August 
2005. 
[16] F.-T. Cheng, C.-F. Chang, and S.-L. Wu, "Development of 
Holonic Manufacturing Execution Systems," Journal of 
Intelligent Manufacturing, Vol. 15, No. 2, pp. 253-267, April 
2004. 
[17] F.-T. Cheng, H.-C. Yang, and J.-Y. Lin, "Development of 
Holonic Information Coordination Systems with 
Failure-Recovery Considerations," IEEE Transactions on 
Automation Science and Engineering, Vol. 1, No. 1, pp. 
58-72, July 2004. 
[18] M.-H. Hung, F.-T. Cheng, and S.-C. Yeh, "Development of a 
Web-Services-based e-Diagnostics Framework for the 
Semiconductor Manufacturing Industry," IEEE Transactions 
on Semiconductor Manufacturing, vol. 18, no. 1, pp. 
122-135, February 2005. 
Fig. 10. Framework messages for design house requesting yield reports from foundry service. 
WeE10.4
1602




 1 
出席國際學術會議心得報告 
計畫編號 NSC 95-2221-E-006-348-MY3 
計畫名稱 
發展半導體工程鏈管理系統 ─ 子計畫一： 
工程鏈管理系統之設計與實作(3/3) 
出國人員姓名 
服務機關及職稱 
鄭芳田 
國立成功大學製造工程研究所教授 
會議時間地點 May 12-17, 2009, Kobe, Japan 
會議名稱 2009 IEEE International Conference on Robotics and Automation 
發表論文題目 “Developing a Product Quality Fault Detection Scheme” 
 
一、參加會議經過： 
此次芳田所參與之國際學術會議為 2009 IEEE International Conference on 
Robotics and Automation （ICRA 2009），會場位於日本神戶市，共有 46個國
家的代表參加。 
本次會議共有 1,626篇論文及 36部影片投稿，但審查結果，僅接受其中之
696篇論文（42.8%）及 16部影片(44.4%)於本大會發表。本國際學術會議，國
內的專家學者參加者有：台大資訊系傅立成教授、台大電機系羅仁權教授、台
大資訊系王傑智助理教授、交大電控系胡竹生教授、交大電控系楊谷洋教授、
國防大學電機電子系主任洪敏雄教授、成大機械系藍兆杰等人。總計國內共約
10人參加本國際學術會議。 
本次大會利用 3天之時間將所有 696篇論文分成 149個 Sessions發表；並另安
排 26個Workshops/Tutorials。另外，大會亦接受 16部影片安裝於 DVD之 Video 
Proceedings內。 
