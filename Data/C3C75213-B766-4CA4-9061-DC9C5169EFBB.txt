行政院國家科學委員會補助專題研究計畫
█ 成 果 報 告
□期中進度報告
運用 Grassmann space 和重新參數化解決 NURBS 曲面
中 unclamping 的權重是零問題以及其和 CAD 軟體的應用(I)
計畫類別：█ 個別型計畫 □ 整合型計畫
計畫編號：NSC 94-2213-E-212-012
執行期間：2005 年 08 月 01 日至 2006 年 07 月 31 日
計畫主持人：鄧志堅
共同主持人：
計畫參與人員：高天暉，楊復勝
成果報告類型(依經費核定清單規定繳交)：█精簡報告 □完整報告
本成果報告包括以下應繳交之附件：
□赴國外出差或研習心得報告一份
□赴大陸地區出差或研習心得報告一份
█出席國際學術會議心得報告及發表之論文各一份
□國際合作研究計畫國外研究報告書一份
處理方式：除產學合作研究計畫、提升產業技術及人才培育研究計畫、
列管計畫及下列情形者外，得立即公開查詢
□涉及專利或其他智慧財產權，□一年□二年後可公開查詢
執行單位：大葉大學 工業工程與科技管理學系
中 華 民 國 九十五 年 八 月 三 日
2Linear Relationship of the Original Control Points of Bézier Curve Suitable for Degree
Reduction : a Tridiagonal Matrix Approach
Jyh-Jeng Deng1 and Tei-Hui Kao2
1 Da-Yeh University, jdeng@mail.dyu.edu.tw
2 Da-Yeh University, lono23@gmail.com
ABSTRACT
The conversion of a B-spline curve in different domains of degree through the degree raising or
degree reduction is common when transferring the B-spline from one computer system to another.
This study explores further degree reduction in Bézier curve by use of tridiagonal matrix
approach. We establish the linear relationship of the original control points of Bézier curve of
degree 1n which is suitable for degree reduction. This approach is easier to understand than
the previous one and can express the geometric relationship of control points before degree
reduction.
Keywords: Degree reduction, Degree elevation, Blossom, B-spline, Bézier curve.
1. INTRODUCTION
While many computer systems have the B-spline capacity each system may be configured
differently; thus it may be necessary to convert from one type of B-spline to another type through
the degree raising or degree reduction. There are other practical reasons for applying the B-spline
conversion. One could apply degree raising to increase the flexibility of manipulation of the
curve; whereas degree reduction can conserve the memory in storing the curve.
It is standard operation to perform degree raising in the B-spline[7],[9-10] , and many different
ways can be used to apply degree reduction. We focus our scope on the degree reduction on a
special type of B-spline, Bézier curve, because it is the easiest form of the B-spline. By studying
the characteristics of the reduction in the Bézier curve a better understanding can be gained on the
geometric relationship among the control points before degree reduction.
1.1 Objectives of Research
Since degree reduction is only an approximation for most cases, it is necessary to find a
condition among the original control points which can perform degree reduction to match the
original curve. In addition, the geometric relationship among the original control points will be
investigated in that condition.
1.2 Literature Review
Before discussing the concept of degree raising and its reverse process, degree reduction, we will
describe the B-spline. The B-spline can be defined in two ways: one is by the Cox and De-Boor
recursive algorithm, the other is by the blossoming approach. The latter gives a better geometric
interpretation of the curve and is faster in computation than the former.
1.2.1 Cox and De-Boor Algorithm
The theory of B-spline was firstly introduced by Schoenberg [12] in the form of divided
difference. Later Cox and De-Boor [1-2], transformed it into the recursive form individually for
the sake of reliable computation. Consider the B-spline curve of order k and control points iP
0
( ) ( )
n
k
i i
i
s t PN t

 (1.1)
42 1,2, , 1( ) [ , ];
1, 2, ,
r r k r
i i
r k
d t b t T
i I k I k I r
         

 (1.5)
  1 11 1 1 1,2, , 1( ) 1 ( ) ( ) ( ) ( ); 1, 2, ,
r k r r k r r
i i i i i
r k
d t u t d t u t d t
i I k I k I r
   
  
         

 (1.6)
where 0 ( )j j jd t d P  and 1 ( )k riu t is the local parameter in the interval 1 [ , , ]k ri r i k iT t t    .
That is, 1 ( )
k r r i
i
k i r i
t t
u t
t t
 

 


.
1.2.3 Bézier Curve
The Bézier curve is a special form of B-spline curve. The curve always passes through the first
and last control points. If the first and last k knots are equal to 0 and 1 respectively, then the
thi B-spline blending function of degree 1k is identical to the thi Bézier blending function.
Hence, the Bézier blending functions are special cases of B-spline blending functions, therefore
Bézier curves are special cases of B-spline curves. In general, a Bézier curve of degree n can be
expressed as [6]
1
0
0
( ) ( | )
( )
n
n
i i
i
n
n
i i
i
s t PN t u
PB t







(1.7)
where u is the knot sequence associated with the B-spline and ( )niB t is the blending function
of Bézier curve, and it can be shown that 1( | ) ( )n ni iN t u B t
  with
( ) (1 ) =0,1, ,n i n ii
n
B t t t i n
i
 
 (1.8)
One can use the concept of blossoming to construct Bézier curve. One can evaluate the Bézier
curve by the de Casteljau algorithm as [6]
1 1
1
1, 2, ,
( ) (1 ) ( ) ( )
0,1, ,
r r r
i i i
r n
b t t b t tb t
i n r
 

    

 (1.9)
where 0 ( )i ib t b , which is iP in our discussion, are the control points of the Bézier curve and
the Bézier curve is represented as 0 ( )
nb t .
2. METHODOLOGIES
Degree reduction is the reverse process of degree elevation. The purpose of degree reduction is to
reduce possible redundancy in a curve representation. It would be better to say that we write a
given curve of degree 1n as one of degree n . General speaking, degree reduction can be
viewed only as an approximation by another curve of lower degree. Here we will focus our
attention on a special case of the B-spline, the Bézier curve.
2.1 Degree Reduction
Before discussing the concept of degree reduction in Bézier curve, we discuss degree elevation in
Bézier curve succinctly. Suppose that we are looking for a Bézier curve of degree 1n with
control points (1) (1) (1)0 1 1, , , nb b b  that describes the same Bézier curve of degree n with original
control points as 0 1, , , nb b b , then one has the relationship [6]
(1)
0 0
(1)
1
(1)
1
1 ; 1,2, ,
1 1
.
i i i
n n
b b
i i
b b b i n
n n
b b



       

 (2.1)
6One considers the inverse of a tri-diagonal matrix [3]
1 1
2 2 2
1 1 1
ˆ
j j j
m m m
m m
b c
a b c
A a b c
a b c
a b
  
 
 
 
 
  
 
 
 
  
  
  
(2.7)
The second-order linear recurrences are defined as
1 1 2 2,3, ,i i i i i iz b z a c z i m      (2.8)
where 1 0 1 10, 1,z z z b    , and
1 1 2 ; 1, 2, ,1j j j j j jy b y a c y j m m        (2.9)
where 2 10, 1m my y   , m my b . The inverse matrix 1 ,ˆ { }i jA   (1 ,i j m  )can be
expressed as
,
2 2
1 1
1 1
1
j j
j j
j j j j j
j j
z y
b a c a c
z y

 
 
 

 
(2.10)
where 1, 2, ,j m  , 1 0a  , 0mc  and
1,
,
1
1,
1i
i i j
i
i j
i
i i j
i
z
c i j
z
y
a i j
y






 
 
(2.11)
By equations (2.6) and (2.7), 1 0c  , 2 0c  … 1 0mc  and by the upper part of equation (2.11),
, 0i j  for i j . This means the entries above the diagonal of 1ˆA are zeros. Furthermore by
the equation (2.10)
,
1
j j
jb
  (2.12)
where 1, 2, ,j m  . At this point, all the values in the upper triangle of 1ˆA have been
calculated. The entries below the diagonal of 1ˆA are now sought.
By equation (2.9), 1j j jy b y  where 1, 2, ,1j m m    and then changing the index from j
to i :
1 1i
i i
y
y b
  (2.13)
Note that m my b , thus by equation (2.13), jy can be calculated in a successive way, where
1, 2, ,1i m m    . Substituting equation (2.13) into the lower part of equation (2.11) results in
1
, 1,
1,
i
i j i i j
i
i
i j
i
y
a
y
a
b
 






(2.14)
Thus, the entries below the diagonal of 1ˆA can be found by equation (2.14). In sum, for a
matrix of Aˆ in equation (2.6), its inverse 1 ,ˆ { }i jA   is
8Now focusing on the jth item on the right side of equation (2.22) provides
(1)
1
(1)
1
(1)
1 1
( 1)!
( 1)
( )!( 1)! 1
!
( 1)
( 1)!( 1)!
( 1)
m j
j
m j
j
m j m
j j
m m
b
m j j m j
m
b
m j j
C b





 
 
   
 
  

(2.23)
So equation (2.23) can be rephrased as
1
(1) 1 (1)
0
( 1)
m
m j m
m j j
j
b C b



  (2.24)
The end result of this degree reduction approach is identical to Eck’s work [5]. Eck’s work, based 
on the Chebyshev polynomial and modified Chebyshev polynomials, present the degree reduction
condition. Here the linear relationship among original control points is from the inverse of
tri-diagonal matrix.
2.2 The Geometric Relationship between Control Points
In order to find the relationship between control points, equation (2.24) can be further
investigated by looking at a few examples. Assume that 4m firstly, first yields
(1) 3 4 (1) 2 4 (1) 1 4 (1) 0 4 (1)
4 0 0 1 1 2 2 3 3
(1) (1) (1) (1)
0 1 2 3
( 1) ( 1) ( 1) ( 1)
4 6 4
b C b C b C b C b
b b b b
   
   
(2.25)
Fig. 1: The geometric relationship for 4m .
The Fig. 1 shows the geometric relationship between control points for 4m . Here (1)2b is
assumed to be the original point, and the (2.25) is reduced to
   (1) (1) (1) (1)0 4 1 31 42 2b b b b   (2.26)
The equation (2.26) states that under the assumption of (1)2b being the origin, the coordinate of
the middle point of (1)0b and
(1)
4b is four times that of the coordinate for that of
(1)
1b and
(1)
3b . It
implies that (1)2b , the middle point of
(1)
1b and
(1)
3b , and the middle point of
(1)
0b and
(1)
4b are
collinear.
Next is another example for 3m . By the equation (2.24)
(1) (1) (1) (1)
3 0 1 23 3b b b b   (2.27)
Rearranging the equation (2.27) yields
 (1) (1) (1) (1)3 0 2 13b b b b   (2.28)
10
2000.
[10] Prautzsch, H.: Degree elevation of B-spline curves. , Computer Aided Geometric Design,
1(2), 1984, 193–198.
[11] Ramshaw, L.: Blossoming: A Connect-the-Dots Approach to Splines, Technical report,
Digital System Research Center, Palo Alto, Ca, 1987.
[12] Schoenberg, I. J.: Contribution to the problem of approximation of equidistant data by
analytical functions, Quarterly Applied Mathematics, 4, 1946, 45-99, 112-141.
 Computer-Aided Design & Applications, Vol. 4, Nos. 1-4, 2007, pp xxx-yyy 
 
2 
building the B-spline. By the constraint of the effective knots, it is clear that the relationship between k  and n  is 
1k n  . The blending function ( )kiN t  is defined in recurrence formula [1-2] 
 
 
 
 
 
1 1
1
1 1
( ) ( ) ( )i kik k ki i i
i k i i k i
t tt t
N t N t N t
t t t t
 

   

 
 
 (1.2) 
where the basis function 1( )iN t  is defined as [4] 
 
 
 
 
11
11
if  
1         
                            
0           otherwise
else                                        
1         
          
0           otherwise
n k
i i
i
i i
i
t t
t t t
N t
t t t
N t




   
   
          
end
 (1.3) 
Formulae (1.1) through (1.3) clearly show that there are ( 2)n k   segments on the B-spline. Based on the definition 
of the B-spline, the two ending knots, 0t  and n kt  , do not influence the shape of the B-spline. Their functions are 
limited to constructing the blending function; thus they can be regarded as the auxiliary knots. Therefore for any knot 
sequence, such as 0 1 1 1{ , , , , , , }n n n k n kt t t t t t   K K , the equivalent knot in constructing the same curve will be 
1 1 2 3 1 1 1{ 1, , , , , , , , , 1}n n n k n kt t t t t t t t     K K . Here the first knot 0t  is replaced by the second knot subtracts 1; and 
the last knot n kt   is substituted by the last second knot pluses 1. The transformation from ordinary knot sequence to its 
equivalent form makes the condition n kt t   impossible, the basis function is reduced to its simple form as 
  
11
1         
0           otherwise
i i
i
t t t
N t
   
 (1.4) 
 
1.2.2 Blossoming Algorithm 
Lyle Ramshaw [11] developed the blossoming as a popular method for constructing the B-spline. We link the concept 
of blossoming with the Cox and De-Boor algorithm and use the identical notation on the degree, knot sequence and 
control points so that those who are familiar with the Cox and De-Boor algorithm can easily adapt the blossoming 
algorithm. The following notations are adopted from [6]. 
Suppose that we want to construct a B-spline of degree 1k   with control points ,   0,1, ,iP  i n K  by the blossoming 
approach. The knot sequence is 1 2 1{ , , , }n kt t t  K  and the effective knot interval is 1 1[ , , , ]k k nt t t K . For each segment 
of B-spline we need 2( 1)k   knots to perform the construction of the curve. Since there are ( 2)n k   segments on 
the B-spline with effective knots as 1 1[ , ]k nt t  , we can construct the B-spline segment by segment. Assume one is 
working on the construction of the segment interval 1[ , ]I It t   where I  could be 1, , ,k k n K , then the corresponding 
control points will be 1 2, , ,I k I k IP P P    K  with  1 2 3 2 3 4 1[ , , , ], [ , , , ], ,I k I k I k I I k I k I k IP b t t t P b t t t             K K K  
1 2 1[ , , , ]I I I I kP b t t t    K , thus the corresponding knots used in constructing the segment are 2 3 1[ , , , ]I k I k I kt t t     K . 
The segment in the curve is represented by 1 1 1( ) [ ] ( )
k k
I ks t b t d t
   
    where 1[ , ]I It t t  . 
 2
1,2, , 1                      
( ) [ , ];    
1, 2, ,
r r k r
i i
r k  
d t b t T
i I k I k I r
   
         
K
K
 (1.5) 
   1 11 1 1
1,2, , 1                      
( ) 1 ( ) ( ) ( ) ( );   
1, 2, ,
r k r r k r r
i i i i i
r k  
d t u t d t u t d t
i I k I k I r
   
  
           
K
K
 (1.6) 
where 0( )j j jd t d P   and 1 ( )
k r
iu t

  is the local parameter in the interval 1 [ , , ]
k r
i r i k iT t t

   K . That is, 
1 ( )
k r r i
i
k i r i
t t
u t
t t
 

 



. 
 Computer-Aided Design & Applications, Vol. 4, Nos. 1-4, 2007, pp xxx-yyy 
 
4 
 
(1)
0
0
(1)
(1)
1
1
1
1 1
2 1
1 1
1
1 1
1
n
n
n
n
bn n
n b
n n
b
bn
bn n 
 
 
 
 
      
                                       
               
 
  
M
MO  (2.2) 
One can abbreviate as 
 (1)AB B  (2.3) 
where A  is a 2n   by 1n   matrix, the given constants are (1)B  and, unknown variables are B . Note that the 
empty entries in A  are zeros and there is a square matrix above the dash line in matrix A . 
Equation (2.2) may have no solution, so one needs the least squares method [8] to solve this question. But the 
least squares method can arrive at an approximation curve, and sometimes the exact original curve. In addition to the 
drawback of getting only approximation curve in most cases by the least squares method, the geometric meaning 
among the control points that renders an exact curve by degree reduction is not clear. To clarify the geometric 
relationship, the rectangular matrix A  is divided into a square matrix Aˆ  and a row vector so that equation (2.3) is 
decomposed into two equations: one is a square matrix Aˆ  of 1n   with 1n   unknown control points B  and given 
control points (1)Bˆ , the other is a limiting equation (1)1n nb b  . We denote them as 
 (1)ˆ ˆAB B  (2.4) 
where 
 
(1)
0
(1)
1(1)
(1)
ˆ
n
b
b
B
b
 
 
 
 
   
 
 
 
  
M
 (2.5) 
and when 1m n  , one obtains [8] 
 
1
1 1
2 2ˆ
1 1
m
m m
m
A
m m
m
m m
 
 
  
 
 
    
 
 
 
  
  
O
 (2.6) 
Here Aˆ  is a tri-diagonal matrix. Now the question that must be considered is (1)ˆ ˆAB B , where the objective is to 
solve B . One multiplies equation (2.4) with 1Aˆ  in both sides result in 1 (1)ˆ ˆB A B  where (1)Bˆ  is known control 
points, so one shall confine attention to find 1Aˆ . 
One considers the inverse of a tri-diagonal matrix [3] 
 Computer-Aided Design & Applications, Vol. 4, Nos. 1-4, 2007, pp xxx-yyy 
 
6 
For a particular j  in the lower triangle of 1Aˆ , the values of i  for i j  could range from 1, 2, ,j j m  K . Then for 
the column j , the entries in the lower triangle of 1Aˆ  can be determined as follows 
 , ,
1
( )
k
j l
j k j j j
j ll
a
b
 

   (2.16) 
The inverse matrix  1 ,ˆ i jA    can be summarized as 
 
,
,
           , ,
1
0  for                                                       
1 1
                              1 1
( )  1,2, ,                    
i j
j j
j
k
j l
j k j j j
j ll
i j
m
m jb m j
m
a
k m j
b


 

 
     
    K
 (2.17) 
Now 1Aˆ  is found, the unknown variable B  can be obtained as  
 1 (1)ˆ ˆB A B  (2.18) 
Recall that the limiting equation is (1)1m mb b  , The value of 1mb  must be found to verify that the limiting equation is 
valid. 
 (1) (1) (1) (1) (1)1 ,1 0 ,2 1 , 1 , 1 2 , 1m m m m j j m m m m m mb b b b b b              K K  (2.19) 
By the equation (2.17), one gets 
  
1
1 2 3
,1 1,1
1 2 31
1
1
1 2 1
     1 1 2 1
     
m
l m
m
l ml
m
a a a a
b b b b
m
m m m
m m
m m m
 




                                        
                                             
 K
K
  11 m 
 (2.20) 
In similarly way, the values of ,2m , ,m j , , 1m m   and ,m m  can be found to yield 
 
1 (1) 2 (1) (1)
1 0 1 1
(1) (1)
2 1
( 1)!
( 1) ( 1) ( 1)
( )!( 1)! 1
( 1)
          
2
m m m j
m j
m m
m m
b b m b b
m j j m j
m m
b m b
  
 
 

         
   
        
K K
 (2.21) 
but (1)1m mb b  , so 
 
(1) 1 (1) 2 (1) (1)
0 1 1
(1) (1)
2 1
( 1)!
( 1) ( 1) ( 1)
( )!( 1)! 1
( 1)
          
2
m m m j
m j
m m
m m
b b m b b
m j j m j
m m
b m b
  

 

         
   
        
K K
 (2.22) 
Equation (2.22) states that the requirement of the original control points of Bézier curve of degree m  are suitable for 
degree reduction. 
Now focusing on the jth item on the right side of equation (2.22) provides 
 
(1)
1
(1)
1
(1)
1 1
( 1)!
   ( 1)
( )!( 1)! 1
!
( 1)
( 1)!( 1)!
( 1)
m j
j
m j
j
m j m
j j
m m
b
m j j m j
m
b
m j j
C b





 

 
   
  
  
 
 (2.23) 
So equation (2.23) can be rephrased as 
 Computer-Aided Design & Applications, Vol. 4, Nos. 1-4, 2007, pp xxx-yyy 
 
8 
 
Fig. 2: The geometric relationship for 3m  . 
By the Fig. 2, one can observe that the connecting line of (1)1b  and 
(1)
2b  is parallel to the connecting line of 
(1)
0b  and 
(1)
3b . 
Also, that the vector of (1)0b  to 
(1)
3b  is three times the vector of 
(1)
1b  to 
(1)
2b . 
There is no further knowledge on 5m   because the equation becomes complex. We suggestion, therefore, that trying 
to establish the result of 5m   could be the subject for future research. 
 
3. CONCLUSIONS AND FUTURE WORKS 
Degree reduction is the reverse process of the degree elevation. Degree reduction can conserve the memory in storing 
the curve. The previous works only arrive at an approximation curve with the possibility of reaching an exact matched 
curve, and the conditions of the exact match are specified by the Chebyshev polynomial approach, however nothing is 
mentioned on the geometric relationship among control points of exact match. This paper presents a degree reduction 
approach that specifies the condition of matching the original curve by the inverse of tri-diagonal matrix and expresses 
the geometric relationship between control points. That is, the geometric relationship from the control points before the 
degree reduction can be seen and one can understand whether the curve is suitable for reduction or not. 
In terms of degree reduction, we have expressed the geometric relationship between control points, but we only 
explained the geometric relationship for 4m  . Up to this point, there has not been sufficient information to express 
the geometric relationship for 5m  , thus more research on this is required. 
 
4. ACKNOWLEDGEMENTS 
This research was supported in part by the NSC grant under the project NSC-94-2213-E-212-012. 
 
5. REFERENCES 
[1] Cox, M. G.: The numerical evaluation of B-splines, Journal of Institute of Mathematics and Its Application, 10, 
1972, 134-149. 
[2] De Boor, C.: On calculating with B-Splines, Journal of Approximation Theory, 6, 1970, 50-62. 
[3] Deng, J.-J.: Right-angled Triangle Property in Inversion of General Tridiagonal Matrices, Journal of the Chinese 
Institute of Engineers, 27(1), 2004, 79-90. 
[4] Deng, J.-J.: Theory of a B-spline basis function, International Journal of Computer Mathematics, 80(5), 2003, 
649-664. 
[5] Eck, M.: Degree reduction of Bézier curves. Computer Aided Geometric Design, 10(3-4), 1993, 237-251. 
[6] Farin, G.: Curves and Surfaces for CAGD: A Practical Guide, 5th ed., Academic Press, San Diego, 2002. 
[7] Liu, W.: A simple, efficient degree raising algorithm for B-spline curves, Computer-Aided Design 14, 1997, 693–
698. 
[8] Lutterkort, D.; Peters J.; Reif U.: Polynomial degree reduction in the L2-norm equals best Euclidean 
approximation of Bézier coefficients. Computer Aided Geometric Design, 16, 1999, 607–612. 
[9] Prautzsch, H.; Boehm W.; Paluszny W.: Bézier and B-spline Techniques, Springer, Berlin, 2000. 
[10] Prautzsch, H.: Degree elevation of B-spline curves. , Computer Aided Geometric Design, 1(2), 1984, 193–198. 
[11] Ramshaw, L.: Blossoming: A Connect-the-Dots Approach to Splines, Technical report, Digital System Research 
