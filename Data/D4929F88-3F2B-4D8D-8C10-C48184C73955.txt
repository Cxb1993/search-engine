一、緣由與目的
Because neural networks possess
characteristics of fault-tolerance,
parallelism and learning, and fuzzy
systems have characteristics of linguistic
information and logic control [1-4],
many researches [4-7] combining them
have been developed to improve the
efficiency of nonlinear system modeling.
Traditionally, the fuzzy systems or/and
neural networks are trained by using the
gradient-based methods. Such
techniques suffer from difficulties such
as the choice of starting guess,
convergence, etc. Therefore, some
researchers have been trying to use
genetic algorithms (GAs) to overcoming
such difficulties [8-10].
GAs are nature's search algorithms
of selection and genetics. The mechanics
of a GA can be conceptually divided into
four simple parts: (1) keep a population
of solutions coded as artificial
chromosomes, (2) choose the better
solutions for recombination of the
mating chromosomes, (3) perform
mutation and other variation operators
on the chromosomes, and (4) use these
offspring to replace poorer solutions and
obtain a new generation. Much work has
shown that GAs lead to global optimum
solutions in many problem domains,
such as control system synthesis, image
recognition, robot learning, etc. For
optimal design of fuzzy systems, theory
and empirical results have demonstrated
that GAs are good candidates for
selecting and generating fuzzy IF-THEN
rules [11-12]. However, traditional GAs
have some limitations such as the
performance of GAs closely related with
the population size. Since
deoxyribonucleic acid (DNA) is that
living things in nature have their own
inherent code, and encode genetic
information that determines the
characteristics of individual, some
researchers have been trying to use the
biological DNA to improve the
limitations of traditional GAs [13-19].
However, in most studies of mobile
robots, regardless of the DNA-based
evolution method or the traditional GAs,
the learning of mobile robots requires a
significant amount of time and a precise
simulator to adapt their actions to a real
and complex environment [20-21]. In
general, obtaining a precise simulator is
very difficult, and some methods that do
not need a precise simulator should be
developed.
Robot learning approach, such as
reinforcement learning [22-23], can be
applied a robot for achieving a task in a
real environment. Q-learning is as the
type of reinforcement learning, and is a
computational method with simple
learning mechanism and requiring no
environment model, and its basic
principle is that if an action causes the
positive reward of the environment, the
possibility that the action would be taken
will he increased, and if an action causes
the negative reward of the environment,
the possibility of the action will be
method, a DNA chromosome represents
a fuzzy logic system. Each gene of the
DNA chromosome represents the whole
information of an angle, and each amino
acid is interpreted as a design parameter.
The corresponding relationship between
a DNA chromosome and the angle is
given in Fig. 1.
Fig.1. The DNA-based encoding of a
DNA chromosome.
Table 1:The corresponding relationship between codons and amino acids
T Amino
acids
C Amino
acids
A Amino
acids
G Amino acids
T TTT Phe TCT Ser TAT Tyr TGT Cys T
TTC TCC TAC TGC C
TTA Leu TCA TAA Stop TGA Stop A
TTG TCG TAG TGG Trp G
C CTT CCT Pro CAT His CGT Arg T
CTC CCC CAC CGC C
CTA CCA CAA Gln CGA A
CTG CCG CAG CGG G
A ATT Ile ACT Thr AAT Asn AGT Ser T
ATC ACC AAC AGC C
ATA ACA AAA Lys AGA Arg A
ATG Met ACG AAG AGG G
G GTT Val GCT Ala GAT Asp GGT Gly T
GTC GCC GAC GGC C
GTA GCA GAA Glu GGA A
GTG GCG GAG GGG G
Since each amino acid has its own
role, we develop a translation
mechanism shown as Fig. 2 to represent
the corresponding relationship between
amino acids and the design parameter
values of the evolution fuzzy-neural
networks. Specifically, the design
parameter values of the evolution
fuzzy-neural networks can be created
from the DNA chromosome according to
the translation mechanism. The amino
acids have more codons, and then the
design parameters use the value with
higher possibility. In order of symmetry,
we assume that the Thr and Trp
correspond to the same value of the
design parameters. In Fig. 2, the design
parameter values range from within the
intervals min max[ ]D D D , where the minD
and maxD are selected according to
Q-value is updated. Finally, based on the
Q-value adopted as fitness function, the
operations of GAs are performed,
including selection, crossover and
mutation.
E. Experiment results
An experiment has been performed on
the Spunik robot [26] shown as Fig. 4 so
as to demonstrate to the effectiveness of
the proposed approach of integrating
DNA-based evolution fuzzy-neural
networks and Q-learning. The Spunik
robot has six infrared range
sensors 1 6~IR IR and three ultrasonic
sensors 1 3~UL UL , as shown in Fig. 5.
Besides, a CCD camera is mounted on
the Spunik robot to detect the goal. Note
that the CCD camera is used to find the
direction of the goal rather than detect
the obstacles and walls. The objective of
the experiment is to design a controller
so that the Spunik robot in a real
environment shown in Fig. 6 can avoid
to crash into the obstacles and walls, and
reach the goal.
Fig. 4. The Spunik robot
1UL
2UL
3UL
1IR
2IR 3IR
4IR
5IR 6IR
Fig. 5. Distance sensors distribution on
the Spunik Robot
Fig. 6. Real learning environment with
obstacles
A trial of a chromosome starts from
the beginning position to any place and
ends when the Spunik robot crashes into
the obstacle or wall, or reaches the goal.
After N trials are finished where N
represents the population size, the three
operations of GAs are performed,
including selection, crossover and
mutation.
After the Spunik robot performs an
action, the environment will send a
reward to the robot. The reward is
designed as follows.
White, “Multilayer feedforward 
networks are universal
approximators,” Neural Networks,
no.2, pp.359-366,1989.
[2] L.X. Wang and J.M. Mendel,
“Fuzzy basis functions, universal
approximation, and orthogonal
least squares learning,” IEEE Trans.
Neural Networks, vol. 3, no. 5,
pp.807-814, 1992.
[3] C.H. Wang, W.Y. Wang, T.T. Lee,
and P.S. Tseng, “Fuzzy B-spline
membership function (BMF) and
its applications in fuzzy-neural
control,” IEEE Trans. Syst. Man,
Cyber., vol. 25, no. 5, pp.841-851,
1995.
[4] L.X. Wang, Adaptive fuzzy systems
and control: design and stability
analysis, Englewood Cliffs,NJ:
Prentice-Hall, 1994.
[5] S. Horikawa, T. Furuhashi, and Y.
Uchikawa, ”On fuzzy modeling 
using fuzzy neural networks with
the back-propagation algorithm,”
IEEE Trans. Neural Networks, vol.
3, no.5, September 1992.
[6] C. T. Lin and C. S. George
Lee, ”Neural-network-based fuzzy
logic control and decision system,” 
IEEE Trans. Computer, vol. 40, no.
12, pp.1320-1336, December 1991.
[7] W.Y. Wang, T.T. Lee, and C.L. Liu,
“Function approximation using 
fuzzy-neural networks with robust
learning algorithm,” IEEE Trans.
Syst. Man, Cyber. Part B, vol. 27,
no. 4, pp.740-747, 1997.
[8] Chi-Hsu Wang, H.L. Liu, and C.T.
Lin, “Dynamic optimal learning
rates of a certain class of fuzzy
neural networks and its
applications with genetic
algorithm,”IEEE Transactions on
Systems, Man and Cybernetics,
Part B, Vol. 31, No. 3, pp.467–475,
June 2001.
[9] Wei-Yen Wang, Tsu-Tian Lee,
Chen-Chian Hsu, and Yi-Hsum Li,
“GA-based learning of bmf
fuzzy-neural network,”
Proceedings of the 2002 IEEE
International Conference on Fuzzy
Systems (FUZZ-IEEE'02), vol. 2,
pp. 1234-1239, 2002.
[10] W.A. Farag, V.H. Quintana, and G.
Lamberttorres, "A Genetic-Based
Neuro-Fuzzy approach for
modeling and control of dynamical
systems,” IEEE Transactions on
neural networks, Vol. 9, No. 5,
Sept. 1998.
[11] Y. Yuan, and H. Zhuang, "A
genetic algorithm for generating
fuzzy classification rules," Fuzzy
Sets and Systems, vol. 84, no. 1, pp.
1-19, November, 1996.
[12] T.L. Seng, M.B. Khalid, and R.
Yusof, "Tuning of a neuro-fuzzy
controller by genetic algorithm,"
IEEE Trans. Syst. Man, Cyber.
Part B, vol. 29, no. 2, pp.226-236,
1999.
[13] Y. G. Leu, "DNA-based evolution
fuzzy-neural networks," 2005 The
13th National Conference on Fuzzy
