 1
1. 前言 
隨著網際網路的普及與電腦軟硬體系統的快速發展，目前網際網路上的 Web 應用也
越來越多樣化，使用者透過瀏覽器就可以讀取 E-mail、編輯檔案等。這些應用使得使用者
可以在不同的電腦上工作，也因此使用者對於檔案存取的需求也越來越多元化，如何有效
管理自己的資料，可以方便的在每一個電腦上存取自己的檔案，已是使用者經常會面對的
議題。 
一個分散式檔案系統 (Distributed File System，DFS) 整合網路上的分散式儲存設備，
將檔案分散儲存在各個檔案伺服器中；它同時提供使用者一個共通的平台，讓使用者可以
在任何時間、任何地點，透過網路來遠端讀取、寫入檔案。此外，一個分散式檔案系統也
可以讓多位使用者共用這個檔案系統上所儲存的檔案。早期最具代表性的分散式檔案系統
就屬 SUN 公司所開發的網路檔案系統 (Network File System，NFS) ，它也廣為許多網路檔
案系統所使用。如 Figure 1 所示，是原始的分散式檔案系統架構。對使用者而言，在分散
式檔案系統上存取檔案就如同使用自身電腦上的檔案系統一樣的方便。 
 
Figure 1. 分散式檔案系統 (Distributed File System) 
分散式檔案系統因為整合了網路上分散的檔案伺服器，因此使用者所儲存的檔案，有
可能都分散儲存在不同的檔案伺服器中；所以分散式檔案系統必須先解決檔案的命名問題
(Naming)。命名將邏輯物體與實體物體之間形成一個對應關係；透過命名，使用者只看到
檔名，至於這一個檔名所對應到的實際檔案存在網路中何處的細節則被隱藏起來。使用者
透過分散式檔案系統操作讀取、寫入檔案的動作，就如同在操作本機端檔案系統一樣。一
個分散式檔案系統的命名需滿足以下的特性，以滿足通透性 (Transparency) 的性質。 
 位置透明性 (Location Transparency)：使用者使用檔案時，並不會知道所使用的檔
案存放那一個檔案伺服器中。 
 位置獨立性 (Location Independence)：儲存於檔案伺服器的檔案的位置受到改變
時，檔案的名字並不會改變。 
面對電腦軟硬體系統的快速發展，目前的分散式檔案系統大部份都針對以下幾個需求
來進行改善： 
 效能 (Performance)：隨著網際網路上的應用越來越多樣化，目前檔案系統的檔案
數目與不斷的增加，檔案的大小也越來越大。面對這些變化，檔案系統 I/O 效能
也必須提升。如何提高整體分散式檔案系統的 I/O 效能則是一個相當重要的議題。 
 可靠性 (Reliability)：隨著分散式檔案系統的普及，同一時間，可能有上千個使用
者在使用同一個分散式檔案系統所提供的服務。因此，當系統損壞、無法運作時，
所影響的層面將非常的大。所以一個分散式檔案系統不僅要提高檔案的可靠性，
還要提高服務的可靠性。 
Internet 
File ServersClient 
 3
過網路來存取遠端檔案的需求與日俱增。在這樣的需求之下，分散式檔案系統的概念一一
的被提出來 – 如Network File System (NFS)[7]和Andrew File System (AFS)[4]。Network File 
System 的功能在於提供不同的電腦可以透過網路來進行檔案分享與共用，它在後來也逐漸
發展成為分散式檔案系統的一個標準。而 Andrew File System 是以分散式檔案系統的延展
性為目標所開發的系統，它能夠支持數百個節點。Andrew File System 也使用於 Client 端設
置 Cache 的機制，使 Client 即使在網路斷線狀況下也能存取檔案；這種作法提高了系統的
可用性。而同一時期的 Sprite File System[6]與前面兩種分散式檔案系統有著不同的特性，
系統於Server端與Client端都採用Cache的機制來提高系統的可靠性。而Coda File System[1]
也是以 Andrew File System 為基礎，同時更加提高檔案的可用性。因為早期的分散式檔案
系統都受到硬體與 CPU 運算速度的限制，所以目標都朝向於提高存取的速度；這些早期所
採用的分散式檔案相關存取技術，後來也都已成為分散式檔案系統的基礎。 
隨著硬碟儲存容量的增加，儲存設備的成本也逐漸降低。許多應用於大型分散式運算
的儲存架構系統一一的被提出，這些系統有 xFS[8]、Tiger Shar[5]等。xFS 是一個 Server-less 
File System，它主要透過 N-Chance 的方法，提供 Client 端之間合作 Cache 的機制來取代傳
統集中於 Server 端的 Cache；以這樣的作法來減少讀取檔案的延遲時間；同時對 Client 端
儲存空間的利用，也使整個系統有較好的效能。此外，針對多媒體應用，IBM 公司也開發
了 Tiger Shark 檔案系統，它採用了多種技術來提高多媒體檔案傳輸頻寬與穩定性。 
 
Figure 2. Google File System 系統架構 
Google File System(GFS)[3]是一個適用於大規模分散式數據處理的分散式檔案系統；為
Google 專門為了計算與儲存大量網頁搜尋資料所開發的檔案系統。Google File System 是由
許多廉價普通的硬體設備所組成，所以 Google File System 中硬體故障為正常的情況。在
Google File System 中，檔案系統儲存資料量都高達數 GB。因網路數據資料大部分是添加
與讀取，依照資料的操作特性，Google File System 重新設計了 I/O 操作與檔案區塊的大小，
系統也採用檔案傳輸與控制訊息傳輸分開，來充份利用網路的頻寬。其系統架構圖如 Figure 
2 所示。 
Lustre File System[9]，提供了標準 POIX 介面，是一個高性能、高容錯的 Cluster File 
System。他也同樣採用檔案與 Metadata 分開傳輸的機制，能夠充分利用儲存空間。Lustre
也提出了 Object 的觀念，Object 由檔案與 Metadata 組成。整個系統由 Metadata Server、
Client、Object Storage Servers (OSS)所組成，透過 Shared Storage 機制來提供 OSS 的容錯機
 5
作。為了提高 Metadata Server 的可靠性，Metadata Server 在本系統分成兩台，分別為 Active
與 Standby；Active Server 會定期將系統 Metadata 完整備份到 Standby Server，當 Standby 
Server 發現 Active Server 無法提供服務時，Standby Server 會取代 Active Server 提供查詢
Metadata 的服務。 
當一個使用者存取檔案時，可以由離它最近的一台 Access Server 發出檔案存取要求，
Access Server 會透過使用者所提供的檔案路徑，與 Metadata Server 溝通取得檔案相關的
Metadata。 Access Server 透過讀取 Metadata 取得檔案屬性以及檔案區塊位置後，Access 
Server 會分別同時從儲存這個檔案的 Data Servers 取得部分的檔案區塊；同時從不同的 Data 
Servers 取得檔案區塊後再進行檔案合併以及比對檔案校驗值，完成後再將完整檔案傳送給
使用者。如此，使用者存取本分散式檔案系統中的檔案，就如同在存取本地端檔案系統一
樣。 
 
Figure 4. Access Server 系統架構 
Figure 4 為 Access Server 的系統架構。檔案處理以及讀取 Metadata、Partition information
都必須透過 Access Server 來進行；因此 Access Server 是本計畫所提檔案系統的核心。在本
系統中，我們將 Access Server 以分散式的架構來建置，防止 Access Server 成為整個系統效
能的瓶頸。每一個 Access Server 由 File Interface、File Manager、Distributed Storage Manager、
Dissemination/Aggregation、FTP Client 所組成，以下將一一介紹這些模組。 
 File Interface 
File Interface 提供了一個使用者存取檔案的介面，藉由這個介面使用者可以像存取
Local File System 上的檔案。使用者能透過這個介面進行檔案的讀取、新增、修改、刪
除、移動等。 
 File Manager 
File Manager 負責與 Metadata Server 溝通取得儲存於 Metadata Server Partition 
information 及 Metadata 相關的資訊。再透過讀取這些資訊由 Dissemination/Aggregation
模組來進行檔案處理。以下介紹 Partition information 與 Metadata 所儲存的相關資訊。 
Partition information 
Partition information描述整體檔案系統有哪一些Partition，並紀錄這些Partition
由哪一些 Data Server 所組成。它同時也記錄每個 Partition 擁有的儲存容量、檔案
目錄和這些檔案目錄中擁有了哪些檔案。 
Metadata 
FTP 
Distributed Storage Manager 
Dissemination/Aggregation 
FTP Client 
FTP 
FTP 
FTP
FTP 
FTP
Metadad Servers 
Partition info. Metadata
File Interface 
File Manager 
 7
Server 之間溝通更為快速與容易；這也能讓使用者只要將一般電腦硬體設備設定成 FTP 
Server 就能輕鬆、快速加入整個分散式檔案系統的儲存空間，使整體檔案系統的容量
能快速增加。 
5. 結論 
我們已如計畫書所規劃，完成了此一分散式檔案系統。在完成了本計畫所提的分散式
檔案系統後，我們進行了以下的實驗以了解本系統的效能。 
我們的實驗環境使用了 1 台配備 Intel(R) Xeon™ 3.20GHz 處理器、512MB 記憶體的伺
服器當 Metadata Server，4 台 Intel Core™ Duo E4500 2.20GHz 處理器、2GB 記憶體的伺服
器當 Data Servers、2 台 Intel(R) Xeon™ 3.00GHz 處理器、1GB 記憶體的伺服器當 Access 
Servers。檔案區塊大小設為 100MB、每個檔案複製品設為 4 份。為了減少網路中訊息傳遞
的延遲影響，我們將實驗設備都透過 1 台 Gigabit Switch 連接，形成一個小型的區域網路來
進行效能測試實驗。 
我們針對系統存取效能進行相關實驗以及透過實驗證明 Dissemination/Aggregation 的
效能偵測模組能讓系統效能在某些儲存空間負載太高的情況下不受到影響。以下分別說明
此兩個實驗的結果。 
 系統存取效能實驗 
在系統存取效能實驗方面，我們針對 Access Server 存取檔案的效能進行實驗，實驗資
料我們取數個不同大小的檔案，分別為 100MB、200MB、400MB、800MB、1000MB。我
們測量系統在進行檔案讀取以及寫入所花費的總時間 (這時間包括讀取 Metadata、合併及
分割檔案、比對校驗值的運算時間)。 
Figure 5 是 Access Server 分別對不同大小檔案讀取以及寫入的總時間。我們可以從
Figure 5 得知寫入檔案總時間相對於讀取檔案的時間多許多。這個原因在於，寫入檔案時系
統必須依照使用者定義的檔案複製品數量，將整塊檔案完整的寫入到每一個 Data Server
中，而系統在讀取檔案時可透過不同的 Data Server 取得檔案區塊在進行合併後就能完成檔
案讀取的動作，所以本系統整體檔案寫入時間會比讀取時間長。 
0
20
40
60
80
100
120
140
100 200 400 800 1000
Ti
m
e(
Se
c)
Size
Read
Write
 
Figure 5. 系統存取效能 
 9
[3] S. Ghemawat, H. Gobioff, and S.-T. Leung , “The Google File System,” Proceedings of the 
nineteenth ACM symposium on Operating systems principles(SOSP’03), vol. 37, Issue 5, 
Dec. 2003. 
[4] J.H. Howard ,“An Overview of the Andrew File System,” Proceedings of the USENIX 
Winter Technical Conference, USENIX Association, Dallas, US, pp. 23-26 , Feb. 1988. 
[5] R. Haskin and F. Schmuck, “The Tiger Shark File System,” Compcon '96.'Technologies for 
the Information Superhighway' Digest of Papers, Santa Clara, CA, pp. 226-231, Feb. 1996. 
[6] J. Menon, D. A. Pease, R. Rees, L. Duyanovich, B. Hillsberg, “IBM Storage Tank—A 
heterogeneous scalable SAN file system,” IBM Systems Journal, vol. 42, No. 2, 2003. 
[7] S. Shepler, B. Callaghan. “RFC 3530: Network File System (NFS) version 4 Protocol ,” Sun 
Microsystems Inc. , Apr. 2003. 
[8] R. Y. Wang and T. E. Anderson. ,“xFS: A Wide Area Mass Storage File System,” In 
Proceedings of the Fourth Workshop on Workstation Operation Systems, pp. 71 - 78, Oct. 
1993. 
[9] Lustre File Ssystem : High-Performance Storage Architecture and Scalable Cluster File 
System , SUN microsystems White Paper, 2003 
[10] Hadoop, The Apache Software Foundation, Available at http://hadoop.apache.org/core/ 
[11] HDFS Architecture, The Apache Software Foundation, Available at 
http://hadoop.apache.org/core/docs/current/hdfs_design.html 
[12] Object Storage Architecture, Panasas White Paper, http://www.panasas.com, Oct. 2003. 
 
 2
“On Thousands-core Scale Parallel Numerical Algorithms for Scientific Computing” 及  Dr. 
Nicholas Christakis 所演講的 “On the Modelling of Complex Systems - Methodologies and 
Applications”。 
其中 Prof. Albert Y Zomaya 在演講中提到預計於 2015 年在設備耗能上的成本將超越資
訊設備本身的成本；且目前電腦的 CPU 效能已超過大部份工作的需求。因此，在排程的研究
中他們積極的將 CPU 的資源管理也納入排程的考量。當有些工作比較沒有時間的急迫性時，
就可以將 CPU 切換到較低的時脈，以節省能量的消耗。因此在排程上考量 CPU 的時脈將可
以符合目前節能減碳的需求。 
本次國際會議聚集世界各地從事有關 Distributed / Parallel Applications、Distributed / 
Parallel Algorithms、Grid Computing、System Architectures、Software Tools and Environments for 
Distributed or Parallel Platform、Intelligent Transportation、E-Business 及 Information Security 等
領域中的專家學者。相關專家學者齊聚於此會議中交換各類議題的研究心得以及最新知識。經
由與會學者的報告與討論，可得知現在世界各地學者所研究的方向及趨勢。對於我自己或是陪
同前往的學生皆有莫大的助益。 
三、考察參觀活動(無是項活動者略) 
無。 
四、建議 
在本次的會議中，經由與會學者的報告與討論，對於我自己或是陪同前往的學生皆有莫
大的助益。建議學校能夠鼓勵與補助學生參與國際研討會並上台報告。這樣不只能夠培養學生
的國際觀，增加學生的英文報告能力，對於學校在國際舞台上的地位也十分重要。 
五、攜回資料名稱及內容 
參與本次的國際會議，攜回資料名稱及內容如下: Proceedings of The Ninth International 
Symposium on Distributed Computing and Applications to Business, Engineering and Science 
( DCABES 2010 )。 
 
image-spam by using the decision tree method. In [13], the 
system first filters the image-spam by using five high-level 
features. If there are some uncertain cases, these images 
enter the next layer for further analyzing by using the low 
level feature. The low-level feature used in [13] is the color 
histogram. 
III. THE SYSTEM ARCHITECTURE 
In this section, we discuss the proposed system. In order 
to gain the strengths from different image-spam filtering 
mechanisms, the proposed system is a multi-layer image-
spam filtering system. As it was shown in Figure 1, the 
proposed system contains three layers. They are the Mail 
Header Classifier, the Image Header Classifier and the 
Visual Feature Classifier. In the following of this section, we 
discuss these three classifiers. 
 
Figure 1.   System architecture. 
A. The Mail Header Classifier  
For each incoming mail, the mail header is extracted by 
the mail parser and the mail header enters the Mail Header 
Classifier for analyzing. First, the header features are 
extracted by the header feature extraction module. After the 
features are extracted, this mail will be filtered by using the 
Bayesian Classifier. If the output value of the Bayesian 
Classifier is greater than the threshold T1, the system outputs 
the final result for the input mail. Otherwise, the attached 
image will enter the next layer for further analyzing. The 
threshold T1 is defined after a series of experiments. It will 
be discussed in Section IV. 
The threshold in this layer is based on the value outputted 
by Bayesian classifier. It is because that the property of the 
probability distributions in Bayesian theorem will help us 
easily observing the uncertain case in this layer to adjust the 
parameters.  
Since spammers like to falsify faked mail header to hide 
their identification, the main idea of this layer is to analyze 
the header field for estimating an incoming mail is spam or 
not. By analyzing the data set in [20], we conclude that 
“some header fields appear in normal (or spam) mails with 
high probabilities, but appear in spam (or normal) mails with 
low probability.” In the proposed system, we use all thirty-
four fields that the percentages of appearance between ham 
and spam are different. In Table I, we only show first ten 
fields. 
TABLE I.  FIRST TEN HEADER FIELDS USED IN LAYER 1 
Fields Ham Spam Gap 
Precedence 84.15% 3.44% 80.71% 
List-Help 82.54% 2.73% 79.81% 
Sender 61.05% 3.87% 57.18% 
Errors-To 59.27% 3.48% 55.79% 
X-Mailer 20.97% 71.64% 50.67% 
In-Reply-To 47.22% 0.1% 47.12% 
X-Priority 5% 51.7% 46.7% 
Delivered-To 41.86% 1.1% 40.76% 
X-MimeOLE 10.09% 50.51% 40.42% 
Content-Transfer-
Encoding 69.44% 33.76% 35.68% 
 
In this layer, we also verify the routing information 
recorded in the mail header. Such a verification method 
already used in many spam detection technologies. The 
detection method that we use is as follows. (1) The system 
checks if the domain name in the mail header is correct or 
not. (2) The system checks if the header information in the 
mail header is consistency or not. 
B. The Image Header Classifier  
The layers after the mail header classifier focus on 
analyzing the features of image. The Image Extraction 
module extracts the attached image from the incoming mail. 
If the incoming mail cannot be judged by the first layer, the 
attached image enters the Image Header Classifier for 
analyzing. First, the high-level features of image are 
extracted. Then, the SVM Classifier uses these high level 
features as input and decides the incoming image is an image 
spam or not. We apply the SVM classifier in this layer 
because SVM classifier is able to minimize the impact of 
classification results if the number of samples in each 
category is inconsistent [16]. 
The result is divided into the following three cases. (1) If 
the result of the classification is the same as that in the first 
layer, the system outputs the final result for the incoming 
mail. (2) If the result of the classification is not the same as 
the result in the first layer, but the output value of previous 
layer is smaller than the threshold T2, the system chooses the 
result of this layer as the final result for the incoming mail. 
In such a case, the probability value outputted by Layer 1 is 
too low. We choose the output of this layer because this layer 
analyzes the features of image. (3) Otherwise, the attached 
image enters the next layer for further analyzing.  
We select eighteen image headers for experimenting. 
These eighteen image headers are file name, width, height, 
aspect ratio, image format, file size, image area, 
compression, flags, frame dimension list, palette, pixel 
446
TABLE II.  THE DATA SETS USED IN EXPERIMENTS 
 Mail Header Classifier 
Image Header 
Classifier / Visual 
Feature Classifier 
Experiment 
1 
Training Set 50% of TREC and Sansone  
Testing Set 50% of TREC and Sansone  
Experiment 
2 
Training Set 50% of TREC and Sansone  
Dredze and Image 
Spam Hunter  
Testing Set 50% of TREC and Sansone  
B. Threshold Decision 
The thresholds T1 and T2 play an important role in the 
proposed system. They will affect both the system 
performance and the accuracy. In the following of this 
subsection, we discuss the experiments for defining these 
two thresholds. 
• Threshold T1. 
The threshold T1 is composed of T1-Ham and T1-Spam. 
The output of Bayesian classifier contains a decision 
(ham or spam) and a probability value. If the decision is 
ham (or spam) and the associated value is greater than T1-
Ham (or T1-Spam), the proposed system outputs the final 
result.  
In the experiment, we have to decide the both values, 
T1-Ham and T1-Spam. Thus, we fix one value (viz., T1-Ham) 
and adjust another one (viz., T1-Spam).  
 
 
Figure 2.  The variation of the false positive rate. 
 
Figure 3.  The variation of the false negative rate. 
From the experiment, we observe that the variation of 
false positive rate and false negative rate is large when 
the value of T1-Ham is between 0.65 and 0.95. In Figures 2 
and 3, we show the variations of the false positive rate 
and false negative rate respectively. From the figures, we 
observe that the false positive rate and false negative rate 
have the same trend for different T1-Ham. The goal of the 
proposed system is to reduce both the false positive rate 
and false negative rate. However, from Figures 2 and 3, 
as the value of T1-Spam increases, the false positive rate 
decreases and the false negative rate increases. If T1-Spam 
is between 0.75 and 0.85, the false positive rate has the 
largest gap. If T1-Spam is between 0.85 and 0.95, the false 
negative rate has the largest gap also. Thus, T1-Spam is 
defined as 0.85. 
After T1-Spam is defined as 0.85, we may decide the 
value of T1-Ham. Table III shows the false positive rate and 
false negative rate of different T1-Ham values. From the 
table, we observe that both the false positive rate and 
false negative rate have bigger gaps between 0.85 and 
0.95. Thus, T1-Ham is defined as 0.95. 
TABLE III.  THE FP/FN RATE (T1-SPAM = 0.85) 
T1-Ham 0.65 0.75 0.85 0.95 
The FP rate 0.1005 0.101 0.1042 0.0936 
The FN Rate 0.047 0.0468 0.0468 0.038 
 
• Threshold T2. 
The threshold T2 is used if the outputs of Layers 1 and 
2 are conflict. As it was mentioned in Section III, we use 
T2 to decide if we can trust the output of Layer 1. If the 
output of Layer 1 is smaller than T2, we do not have to 
consider the output of Layer 1. The system makes the 
final decision and uses the output of Layer 2 as the final 
result. Otherwise; the system makes the final decision 
based on the output of Layer 3.  
The threshold T2 is also composed of T2-Ham and T2-
Spam. We have two sets of training sets. Thus, in this 
paper, we obtain two sets of thresholds after 
experimenting on these two sets of training sets. The 
experiments to decide threshold T2 is the same as the 
experiment to find T1. The result of these two 
experiments is in the following table. 
TABLE IV.  THE THRESHOLD T2 OF TWO EXPERIMENTS 
 T2-Ham T2-Spam 
Experiment 1 0.87 0.84 
Experiment 2 0.87 0.82 
 
C. Experiment results 
After we train the proposed system by using the training 
sets listed in Table II, we take two experiments by using the 
testing sets listed in Table II. The experiment result is in 
Table V. 
448
無衍生研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
無 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
