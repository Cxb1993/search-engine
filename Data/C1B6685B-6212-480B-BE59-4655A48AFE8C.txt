2 
 
以拘束為基底之巨集模組生成 
 
 
摘要 
在產品設計的過程中，設計者經常會因為顧客所提出的需求，必須進行客製化的設計。
然而在設計變更的過程中，往往需要消耗大量的時間在處理類似的操作流程。所以要如何減
少設計變更的時間，成為設計者主要的課題。  
本研究針對減少客製化與設計變更所需的時間，提出一個以拘束為基底的電腦輔助系
統。此拘束模組以現有在文獻中已被提出的方法為基礎重新定義與強化發展而成。這個定義
將比文獻中所提出的適用條件範圍更廣更完善，使用者透過拘束條件的設定，可以快速的完
成更改圖面設計的目的。 
本研究以此拘束為基底的輔助系統，發展出一套巨集指令產生器。巨集指令產生器裡面
也提供了參變數修改功能，使用者只需利用此系統編繹出巨集檔案，再透過變數修改的功能
即可產生出各種不同的設計變更之結果。 
關鍵字：拘束、電腦輔助設計、巨集 
 
一、前言 
    在現代化的產業中，CAD/CAM 系統被廣泛的運用在產品的設計與製造上。而隨著科技
不斷進步，CAD/CAM 系統的功能也越來越齊全。設計者在產品設計時，往往會因客製化的
需求做設計變更。而在設計變更的過程中，是需要耗費大量的時間更改圖面。所以如何減少
設計變更的時間成為設計者重要的課題。 
    為了減少設計變更時所消耗的大量時間，本論文提出了一個以圖元邊界拘束的設定，透
過錨座(Anchor)拉伸改變圖元尺寸的方法。這個方法目前用於 2D 圖面上，使用者可以透過不
同的拘束設定，將一個基底圖面作多種不同的變化。最後，本論文開發一套巨集指令產生器，
透過巨集與拘束模組結合，讓使用者在設計變更時能夠降低時間，並且使用者在設計變更時
有更豐富的選擇。 
    利用拘束條件修改圖面的方法已經有部分的學者提出了相關的文章。在 Hu 等人[1]的文
4 
 
    在 CAD/CAM 系統中，使用者可以用各種不同的方法達成設計變更的目的。本研究中以
Lai[11]所提出的拘束模組作為基礎，在這篇文獻中提出在零件的邊界上給予適當的拘束條
件，接著改變錨座的尺寸，零件會因拘束條件的限制而改變尺寸，拘束的用意在於零件與錨
座的距離保持不變。拘束模組主要的優點在於大幅縮短設計變更的時間。下列介紹拘束模組
的重要定義： 
1.開啟拘束模式：拘束模式關閉時是正常之 CAD/CAM 系統，在拘束模組中顯示拘束條
件的符號與圖示。 
2.指定錨座：指定基板設定為錨座，並且對錨座命名。 
3.刪除錨座：刪除基板上的錨座設定。 
4.連結錨座：將錨座與零件連結。 
5.切斷錨座：將錨座與零件的連結切斷。 
6.設定拘束條件：設定零件上的拘束條件及作用方向。 
7.清除全部設定：將所有的拘束條件全部清除。 
    本系統中每一種拘束條件都會搭配相關的符號與圖案，讓使用者可以直接了解圖面上各
個零件所具備的拘束條件。 
 
(二)拘束條件規劃 
    在本系統的拘束模組中，我們可以設定上下左右四個方向的拘束條件，在設定時首先要
了解作用方向。作用方向亦即拉伸方向，雖然在設定時我們可以選擇一個或多個作用方向，
但是實際拉伸時只有單一方向拉伸，所以當作用方向與拉伸方向同向時零件會改變，反之當
不同向時零件不會改變，在本研究中主要探討左右邊的拘束。 
 
表 1. 文獻中所提出的六種情況 
 右側拘束 右側拘束鬆解 右側無拘束 
左側拘束 左側拘束 右側拘束 
左側拘束 
右側拘束鬆解 
左側拘束 
右側無拘束 
左側拘束鬆解  左側拘束鬆解 右側拘束鬆解  
左側無拘束 左側無拘束 右側拘束  
左側無拘束 
右側無拘束 
6 
 
 
圖 2. 兩側邊界拘束 
 
    拘束鬆解的定義在文獻中的解釋由於並不明確，所以我們提出了新的定義為零件鬆解回
原來的尺寸長度，我們可以由下圖 3.與 4.觀察出來。 
 
 
圖 3. 右側拘束鬆解 
 
 
圖 4. 左側拘束鬆解 
 
 
(三)範例說明與討論 
8 
 
    
圖 7. 雙向拉伸(拉伸前)  圖 8.雙向拉伸(拉伸後，左圖為先右後左，右圖為先左後右) 
    圖 8.為雙向拉伸的結果，從上圖可以看出兩個圖是一樣的，所以拉伸方向的先後順序並
不影響結果。另外左右邊拉伸的長度不同時，拉伸順序互換其結果也是相同的。 
 
三、巨集系統架構 
    巨集是可以將一連串的命令執行，甚至是按鈕、功能表與鍵盤的操作全部紀錄下來，由
程式來重新播放或執行。本文提出了一個可以自動產生巨集指令的系統，巨集指令系統的開
發主要是前面所介紹的拘束模組為基礎而建立，巨集指令系統也包含了 CAD 與 CAM 的指
令，首先先介紹本系統的巨集指令，如表 3 所示。 
 
表 3. 巨集指令 
巨集指令 功能介紹 
' 註解符號 
line 直線繪製指令 
rect1 矩形繪製指令 
arcR 圓弧繪製指令（給定圓心與
半徑） 
? 變數詢問指令 
cal 計算指令 
join 圖元結合指令 
setdir 加工方向設定指令 
contour 循邊加工指令 
10 
 
9 作用方向向上 是:1 否:0 
10 作用方向向下 是:1 否:0 
11 作用方向向左 是:1 否:0 
12 作用方向向右 是:1 否:0 
13 圓弧鎖定 是:1 否:0 
 
格式：setConstraint;上方拘束;下方拘束;左方拘束;右方拘束;上方拘束鬆解;下方拘束鬆解;左方
拘束鬆解;右方拘束鬆解;往上作用;往上作用;往左作用;往右作用;圓弧鎖定 
範例：setConstraint;0;0;1;1;0;0;1;1;0;0;1;1;0 
(四)開啟拘束條件 
    顯示本系統中拘束條件的設定，當巨集檔案中出現一次為開啟，出現第二次為關閉。 
格式：constraint 
 
四、巨集產生器程式設計架構 
首先介紹本系統程式設計的流程圖，如圖 9 所示。 
 
圖 9. 程式設計流程圖 
 
    本程式是以 Visual Studio 2008 所設計的，在圖 10 中上排為下拉式功能表，使用者點選下
拉式功能表即可選取需要使用的的功能。中間為巨集指令編輯區，編輯區是以 RichTextBox
建立的。而程式下方也提供了鎖定編輯模式與語言切換的功能，鎖定編輯模式是為了讓使用
者不要隨意去變動巨集檔案所設計，而語言切換功能提供了中文與英文的介面。 
 
系統測試 系統維護與管理 
環境設計 
表單設計 
資料庫 
程式設計 
12 
 
 
圖 12. 主表單與副表單關係圖 
 
圖 13 為加工方向的輸入視窗，使用者只需要勾選加工方位以及行進方向即可產生出加
工方向的巨集指令。 
      
圖 13. 加工方向輸入視窗                    圖 14. 循邊加工輸入視窗 
 
    圖 14 為循邊加工的輸入視窗，使用者需要點選加工的樣式以及輸入刀路相關設定值即可
產生循邊加工的巨集指令。 
 
主表單 
Main Form 
線段繪製 
DrawLin 
矩形繪製 
DrawRect 
圓弧繪製 
DrawArc 
變數詢問 
VariadleAsk 
變數計算 
Calculate 
循邊加工 
ContourForm 
進出刀設定 
Lead_in_out 
變數檢查 
VariableCheck 
加工方向 
Direction 
拘束設定 
Constraint 
14 
 
(四)預防 
程式設計者在開發階段就必須注意到未來有可能的變數，所以在開發階段就要將這
些變數考量進去，往後在維護時會更加便利。 
    系統的維護並不只侷限於技術上的維護，同時需要搭配系統的管理，才能確保系統本身
的品質與維護工作的效率。系統管理必須對所提出的問題進行分析，並且針對修改後可能帶
來的影響提出評估，確保系統在修改過程的正確性。 
 
五、範例說明與應用 
    研究者針對實例應用設計了一個遊戲屋，遊戲屋主要由四塊零件組合而成，由於有兩塊
零件是重複的，所以下面的圖 17 只顯示兩塊零件。板材的選用使用厚度 6mm 的板件裁切。 
        
圖 17. 遊戲屋圖元編號            圖 18. 遊戲屋拘束條件設定 
 
接下來以拘束模組與變數修改的方式對娃娃屋做設計變更，拘束模組的部份拉伸錨座增
加長度 40，變數修改的部分也修改長度從 200 增加到 240，變更後長度的條件一樣，拘束條
16 
 
目前本研究的拉伸為 1D 方向拉伸，X 軸方向與 Y 軸方向是獨立的，未來的研究可以整合 X
與 Y 軸達到 2D 方向拉伸。 
 
參考文獻 
[1]  Hu, S. M., Li, Y. F., Ju, T. ＆ Zhu, X. (2001). Modifying the shape of NURBS surfaces with 
geometric constraints. Computer-Aided Design, 33, 903-912. 
[2]  Meiden, H. A., ＆ Bronsvoort, W. F. (2006). A constructive approach to calculate parameter 
ranges for systems of geometric constraints. Computer-Aided Design, 38, 275-283. 
[3]  Martínez, M. L., ＆ Félez, J. (2005). A constraint solver to define correctly dimensioned and 
over dimensioned parts. Computer­Aided Design, 37, 1353­1369. 
[4]  Buchanan, S. A., ＆ Pennington, A. (1993). Constraint definition system: a computer algebra 
based approach to solving geometric problems. Computer­Aided Design, 25, 740­750. 
[5]  Gao, X. S., ＆ Chou S. C. (1998). Solving geometric constraint problems. II. A symbolic 
approach and decision of re­constructibility. Computer­Aided Design, 30, 115­122. 
[6]  Kondo, K. (1992). Algebraic method for manipulation of dimensional relationships in 
geometric models. Computer­Aided Design, 24, 141­147. 
[7]  Essert­Villard, C., Schreck, P. ＆ Dufourd, J. F. (2000).Sketch­based pruning of a solution 
space within a formalgeometric constraint solver. Artificial Intelligence, 124, 139­159. 
[8]  Lamure, H., ＆ Michelucci, D. (1996). Solving geometric constraints by homotopy. IEEE 
Transactions on Visualization and Computer Graphics, 2, 28­34. 
[9]  Mullineux, G. (2001). Constraint resolution using optimization techniques. Computers and 
Graphics, 25, 483­492. 
[10] Ge, J. X., Chou, S. C. ＆ Gao, X. S. (1999). Geometric constraint satisfaction using 
optimization methods. Computer­Aided Design, 31, 867­879. 
[11] Lai, Y. L. (2009). A constraint-based system for product design and manufacturing. Robotics 
and Computer-Integrated Manufacturing, 25, 246-258. 
[12] Yang, J., ＆ Dou, W. F. (2008). Synchronized collaborative design with heterogeneous CAD 
systems based on macro semantic commands. Computer Supported Cooperative Work in 
Design, 12, 183-188.  
[13] Pratt, M. J. (1998). Extension of the Standard ISO10303 (STEP) for the exchange of parametric 
and variational CAD models. CDROM Proceedings of the Tenth International IFIP WG 5.2/5.3 
Conference PROLAMAT98. 
[14] ISO TC184/SC4/WG12 N189. (1998). Parametric Representation and Exchange: Preparatory 
knowledge about history based parametric model on the World Wide 
Web:http://www.nist.gov/sc4/wg_qc/wg12/n189/ 
[15] Pratt, M. J. (1997). Provision of an Explicit Constraints Schema in the STEP Standard. 
Geometric Modeling: Theory and Practice Springer-Verlag. 
[16] ISO/CD 10303-108: Product data representation and exchange: Integrated application resource: 
Parameterization and constraints for explicit geometric product models. (2001). 
18 
 
 
 
 
 
 
比利時、中國、印度等。會議從 3月 31日至 4月 2日於美國/洛杉磯Wilshire Grand Los 
Angeles舉行，三天共有 26個場次的論文發表會，分別在三個會議廳進行，大約 90篇文
章。本次會議除了有正式宣讀之論文，也同時有壁報展示之報告論文，本人於 3 月 31
日下午 1:00-3:00場次宣讀論文，三天期間聆聽多個場次的論文發表並與各國學者交流。
發表文章主要由各領域與工業應用相關之原創性論文發表為主，本論文是在 Intelligent 
Systems Symposium之 Intelligent Manufacturing之中，會議論文將收錄在 EI文獻中。 
 
二、與會心得 
    本次研討會在每個時段安排三個場次同時進行，因此必須抓住機會方可以聽到每一
較有興趣場次的論文演講。會議中有多元化學界的學術論文，例如有一篇來自德國 Hauck
博士所發表的論文頗吸引本人，論文題目為「Software Architecture, Knowledge Compiler 
and Ontology Design for Cognitive Technical Systems Suitable for Controlling Assembly 
Tasks」，這篇文章討論公司處於高工資國家地區都面臨著所謂的 polylemma 生產狀況。
它包括了兩個難題。第一個困境是價值與規劃取向和規模面對範圍。為了減少的困境規
劃與價值取向的認知技術系統是一個有希望的方法。闡述認知行為的技術系統已納入了
廣泛的知識基礎。本文討論了軟件體系架構的這樣一個系統的概念，知識的編譯是能夠
把不同的知識表示 formalisms 和設計的本體本身就是知識基礎。來自日本 Tozawa 博士
所發表的論文題目為「Integration of Bills of Material towards a Communication Tool」，這
篇文章討論在設計與製造的過程中，大多數製造企業會有多種材料清單（物料清單）在
一個單一的公司存在或是相同的資訊儲存在多個地方的多材料清單的公司。保持完整的
材料清單已經成了需要面對的問題，在同一時間保持更新至最新的多種材料清單。歷史
管理與一些材料清單制定了不同部門的需要，多方面因素所起的作用下，BOM表已經漸
變成各部門所支持的重要溝通工具，集成多種材料清單是理想的一種方式。本文闡明了
障礙之處，將材料清單明確地成為不同的意見之設計工程師和工廠的工程師的角色，在
共存多個視圖於一個單一的溝通成本成為可能。另外在 Yoshikawa 博士所發表的論文
中，結合基因法則找出最佳路徑也非常吸引我，論文題目為「Car Navigation System based 
on Hybrid Genetic Algorithm 」，這篇文章討論一種新的路徑選擇演算法，特別是重點如
下：混合基因遺傳算法與 Dijkstra 演算法技術相結合的介紹，以實現高效率品質的路線
指導。建議之汽車導航系統，在到達最終目的地之前可以找到一條具有若干通過點的建
議路徑。新的遺傳操作汽車導航系統，介紹了不會產生致命基因的方式導致無效解，實
驗也證實使用地圖數據的有效性，可有效使用在建議汽車導航系統。 
  
 
optimal one, i.e. the permutation for placing the pieces 
into the sheet.   
There is no predefined rule as to the method for 
simplifying the outer shapes for both the piece and 
sheet. Instead, the key is how to express the 
irregularity for the piece.  Cheng and Rao [2] applied 
the compact neighborhood algorithm (CNA) which 
uses the cluster method to force the irregular shaped 
pieces through hexagonal force-entry method into the 
hexagonal nesting. Drawback for this method is that if 
the corners of the pieces are too sharp or the shape is 
too flat, it would negatively impact the output result.  
As for the nesting placement algorithm, Jakobs [3] 
proposed in 1996 with the B-L(bottom-left)placement 
algorithm integrating with the genetic algorithm. In 
1999, Hooper and Turton [4] proposed 炷bottom left 
fill炸. Lui and Teng [5] in 1999 also proposed I-B-L 
(Improved Bottom Left) as well.  Bruke, Kendall and 
Whitewell in 2004 proposed Best-Fit [6].  
  Lastly, by using the search algorithm to locate the 
most optimal location for the piece on the sheet is also 
introduced. Commonly seen algorithms are mountain-
climbing, ant colonies system [7], genetic algorithm, 
Tabu search [8], simulated annealing [9] and evolution 
algorithm [10].  Additionally, there are many pieces of 
documentation which incline to integrate two different 
algorithms as the way to acquire the most optimal 
solutions [11]. In the past few years, there are births of 
new algorithms and technologies continuously [12] 
with considerable achievements. According to the 
speed of development, these methods also are applied 
in other area of research, like neural network [13] and 
floor planning [14], etc.  
 
3. Area-Decomposition (AD) 
 
This section is primarily to explain the principle of 
area-decomposition by starting to describe the 
interference situation from two pieces of profile A and 
B. With further classification, then the procedures of 
piece placement for area-decomposition method is 
illustrated with examples as well.   
For two rectangles A and B, as depicted in Figure 1, 
these two profiles interfere with each other on 
overlapping area. And the parameters 
),,,( 1111 RLBT and ),,,( 0000 RLBT  are the coordinates for 
A and B respectively (Top, Bottom, Left, Right). In 
addition, suppose A is the sheet area and B is the area 
for pieces. There are a total of 16 different 
combinations. We took one of the four types for 
example烉 0101 , BBTT ! . 
When the value 1T  on the Y axis of the rectangle A 
is less than that of 0T  for B rectangle, and 1B  is greater 
than 0B , there are four sub-types to be discussed, as 
depicted in Figure 2. 
 
 
Figure 1. Profile for the geometric shapes 
 
 
          
(a) 
0101 , RRLL                (b) 0101 , RRLL !  
           
 
(c) 0101 , RRLL !!           (d) 0101 , RRLL !  
Figure 2. One of the interference categories for AD 
 
The proposed Placement algorithm method and 
symbols are described as follows. The decomposed 
area symbols for the sheet to be placed are expressed 
as “ ),,,( hwyxGn ” whereas the x and y values represent 
decomposed area respectively corresponding to the X 
and Y axes values at the lower left corner, and the w 
and h are separately representing the width and height 
for the decomposed area to be placed. The initial area 
for the sheet is set as 0G  and portion of the area is 
expressed with dotted lines signifying that this 
decomposed area is included within other decomposed 
areas to be placed. 
The piece P placed inside the lower left corner of 
the area AG  and the area to be placed is decomposed 
into two pieces of BG , CG . Symbols are recorded as烉
AG ɦ( BG , CG ) and when two decomposed areas are 
452
Cost function represents the competence for the 
current solution. In general, the popular cost function 
is usually the Fitness value function within the genetic 
algorithm, as expressed in equation 1. It is the inverse 
of trimlossvalue (See Eq. 2).  And the trimlossvalue 
must be less than 1. When it is 0, it signifies that all on 
the sheet is fully placed. Conversely, the bigger the 
value for the fitness value, the better it would be. In 
addition, the trimlossvalue could be 0, therefore in 
order to prevent this oddity from occurring; an 
extremely small value İ is added as result.   
Fitnessvalue(ʌ)ɨ
)(
1
SH lueTrimlossva
                (1) 
 
Within it, İɨ2.2204×10-16 Ȑor any extremely small 
trivial valueȑ 
 
Trimlossvalue = 
objectmain   theof area
pieces placed of areas of sumobject-main   theof area    (2) 
 
But there is a drawback for the Fitness function 
value, that is when two pieces of identical sheet with 
the same category and the same number of pieces 
placed, and the placement sequence and placed 
location are different, as depicted in Figure 4, then it 
will acquire the same fitness function value.  This way, 
there is no way to determine the nesting competence.  
Therefore, an effected area function (Eq. 3) was 
introduced. In order to facilitate the programming 
planning, the fitness function is defined as Eq. 4.  
 
  
Figure 4. Identical pieces placed according to different 
sequences 
 
Effective value= 
area effective total
pieces placed of areas of sum    (3) 
 
Fitness value(ʌ)= 
objectmain   theof area
pieces placed of areas of sum   (4) 
 
First, according to the judgment of fitness function 
for each set of chromosomes, those with the higher 
function values do not participate to the crossover and 
mutation process and wait till the next generation. And 
the reproduction rate for the population, i.e. the 
quantity for the chromosome reproduction is based on 
Eq. 5.  
 
1  onreproductimutationCrossover            (5) 
 
Suppose there is a population with the number of 
population setting as 20, mutation rate of 0.4, and 
crossover rate of 0.4, Then,  the mutation number for 
chromosome would be 0.4×20ɨ 8, the number for 
chromosome crossover would be 0.4×20ɨ8, with the 
chromosome reproduction number 0.2×2 ɨ 4 and 
algorithm generation of 5.   
    
 
5. Tests and comparisons 
 
In reference the documentation from Bruke [6] and 
Hopper in addition to this research proposed AD and 
the GA, the results are divided into two teamsǺ One 
is the scenarios that the pieces do not rotate, another is 
pieces do rotate.  In addition, cross reference two 
methods listed in documentation with the data. As for 
the example types for the testing, they have a total of 8 
typesǺȐC1-C4ǴN1-N4ȑ.   
 
Table 2. Altered sheet size 
Type C1 C2 C3 C4 
Initial 20x20 40x15 60x30 60x60 
Modified 20x30 40x22.5 60x45 60x90 
     
Type N1 N2 N3 N4 
Initial 40x40 30x50 30x50 80x80 
Modified 40x60 30x75 30x75 80x120 
  
With the premise of having all the pieces placed 
inside the sheet, we increased the height up to certain 
ratios which add 50% of the sheet height with no 
alteration at width.  Hence, the height of the size is 
different from that of original sheet size. The altered 
size is listed in Table 2.  
In order to prove this research does have the 
capability to generate practical applications in industry, 
the documentation examples from Christofides [14], 
Hopper [15], Soke [16], et al., will be selected for 
comparison with CAD/CAM software AlphaCAM 
which is commonly used in industry in the area of 
nesting functionalities. There were a total of 10 set of 
examples.  Each set with piece quantity different from 
each other is selected, and the quantity for piece varies 
454
