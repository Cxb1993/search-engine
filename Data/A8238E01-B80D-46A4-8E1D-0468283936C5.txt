可供推廣之研發成果資料表 
□ 可申請專利  □ 可技術移轉                                      日期： 年 月 日 
國科會補助計畫 
計畫名稱： 
計畫主持人：         
計畫編號：             學門領域： 
技術/創作名稱  
發明人/創作人  
中文： 
 
 
（100~500 字） 
技術說明 英文： 
可利用之產業 
及 
可開發之產品 
 
技術特點 
 
推廣及運用的價值 
 
※ 1.每項研發成果請填寫一式二份，一份隨成果報告送繳本會，一份送 貴單位
研發成果推廣單位（如技術移轉中心）。 
※ 2.本項研發成果若尚未申請專利，請勿揭露可申請專利之主要內容。 
※ 3.本表若不敷使用，請自行影印使用。 
附件二 
model with sequential. Cook and Wolf [5] later added four matrices (entropy, event type counts, 
periodicity, and causality) to model concurrent behavior.  Agrawal et al.[1] applied process 
mining in the context of workflow management.  For process mining, Van der Aalst et al. [2, 6, 
18, 19] presented eleven challenges for process model mining. Some of these challenges remain 
unsolved.  
The α-algorithm is based upon the relationship, which be classified into four basic patterns: 
sequent, concurrence, alternative, and loop [7, 20], of activities and represents the process in Petri 
net language. The α-algorithm has been applied in supporting security efforts at various levels, 
ranging from low-level instruction detection to high-level fraud prevention [16].  Recently, Van 
der Aalst et al.[17] used the α-algorithm to capture concurrency in business processes.  Many 
algorithms have been developed as extensions of the α-algorithm.  Van der Aalst et al.[7] 
improved the α -algorithm to the α+-algorithm for handling short-loops. Two kind of 
dependencies between activities, explicit and implicit, were considered in [24, 25] and the α
++-algorithm was developed for dealing with more complex problem such as non-free-choice 
constructs. The process mining software “Little thumb” was proposed by [18] to handle loop and 
noise, by considering the direct and indirect successors. Huang et al. [10] developed an algorithm 
for capturing a process in execution according to Synchro-Net. The Synchro-Net is a 
synchronization-based model of workflow logic and workflow semantics. Huang’s algorithm can 
deal with problems such as hidden tasks and short-loops. Other related work can be found in 
Schimm et al. [13, 14], Herbst et al. [8, 9], Cook et al. [4], Van der Aalst et al. [12, 19, 20], 
Wainer et al. [23], Van der Aalst [21], and De Medeiros et al. [2,15]. Most the proposed 
algorithms can handle the simple relationships of activities like simple sequent, concurrence, 
alternative, and loop, but none of them can deal with option properly. 
A relationship involves concurrence and alternative simultaneously is called an “option”.  Here, 
option means one or more activities could be selected to be performed concurrently and the 
number of the selected activities is not a constant. An option is rather common in practice but is 
difficult to be identified in most existing algorithms.  
Our objective here is to propose an understandable process model which is able to incorporate all 
traces contained in event logs and be able to deal with the problem of option in particularly. And 
this paper is organized as follows. Our proposed method is introduced in Section 2 with detailed 
descriptions. An example to illustrate the proposed method is presented in Section 3.  
Discussion and comparisons with other existing algorithms are given in Section 4.  Section 5 
provides conclusion and future work. 
2. PROPOSED METHOD 
“Option” is very common in practice. It simultaneously involves two patterns of the relationship 
of activities, concurrence and alternative. The α-algorithm has been applied in the business field, 
but it does not work well for option.  In this study, we modify the α-algorithm to improve the 
ability of handling complex relationship involving concurrence and alternative. The resulting 
model is able to catch all traces from the event logs.  Our proposed process model is represented 
the relationship of activities.  This has been just discussed above in this section.  
Step 4: Set up an Sxn ×+ )(  Transition-place matrix based on the first two columns in the 
relationship table: “Predecessors” and “Places”. The (i,j)-th element in the 
Transition-place matrix, ijA , is the position from activity ia  to place jS , with 
 ⎩⎨
⎧=
                                                          . otherwise ,0
; place after thedirectly  is activity   theif  ,1 jj
ij
Sa
A   
Step 5：Set up an )( xnS +×  Place-transition matrix based on the last two columns in the 
relationship table: “Places” and “Successors”.  The (i,j)-th element in the Place-transition 
matrix, ijP , is the position from place iS to activity ja , and ijP  is defined as: 
⎩⎨
⎧=
                                                          . elsewise ,0
;activity  after thedirectly  is  place  theif  ,1 ji
ij
aS
P  
Step 6: Develop a graphical process model by Petri nets language according to the 
Transition-place and Place-transition matrices obtained in step 4 and 5. 
3.1 A Detailed Description for the Construction of Relationship Table 
The relationship of activity table consists of three columns, “Predecessors”, “Places”, and 
“Successors”.  A start-activity and an end-activity need to be known in the beginning. A 
start-activity is the one whose column sum is minimal in the From-To table, while an end-activity 
is the one whose row sum is minimal in the From-To table.  
Suppose activity pa  is a predecessor of activities ia  and ja . The following expression will be 
used:  
z })}{({ jip aaa → ; when the activity between ia  and ja  is a simple concurrence;  
z ip aa → , ji aa → , ij aa → ; when the activity between ia  and ja  is a simple loop;  
z })}{({ jip aaa → , ji aa → , ij aa → ; when the activity between ia  and ja  is a 
concurrence & loop. 
For each non-zero entry in modified From-To table in Step 2, we generate one row in the 
Relationship table for both Predecessors (From) and Successors (To) elements, taking into 
account of the above classification. After this is completed, we next compress the relationship 
table by merging those rows with identical Predecessors. Accordingly, the corresponding 
successors will be integrated as well. Special care is needed for merging involving with 
concurrence; a fictitious activity (say, no- pa ) will be required when a concurrence only appears 
in some cases. Finally, we assign the places (the middle column in the relationship table). The 
number of braces in the set of successors is the number of places we have assigned to each row of 
the Places column. 
3. AN ILLUSTRATION EXAMPLE 
In this section, we will illustrate our method by an example. The event logs of this example 
include 5 cases and 7 different activities as shown in Table 1.  The performance of mining a 
process model is as follows:  
Step 1：Convert the data from the event logs into the From-To table as shown in Table 2. 
  
 
 
Table 4(d) The table for the final step  
to establish relationship of activities 
Table 5(a) Transition-place matrix 
From\to S0 S1 S2 S3 S4 S5 S6 S7 S8 End 
S 0 1 0 0 0 0 0 0 0 0 
SBCX  0 0 1 1 0 0 0 0 0 0 
B 0 0 0 0 0 1 0 0 0 0 
C 0 0 0 0 0 0 1 0 0 0 
NC 0 0 0 0 0 0 1 0 0 0 
D 0 0 0 0 1 0 0 0 0 0 
E 0 0 0 0 0 0 0 1 0 0 
F 0 0 0 0 0 0 0 0 1 0 
BCEX  0 0 0 0 1 0 0 0 0 0 
G 0 0 0 0 0 0 0 0 0 1 
Table 5(b) Place-transition matrix 
From\to S SBCX  B C NC D E F BCEX  G 
S0 1 0 0 0 0 0 0 0 0 0 
S1 0 1 0 0 0 1 0 0 0 0 
S2 0 0 1 0 0 0 0 0 0 0 
S3 0 0 0 1 1 0 0 0 0 0 
S4 0 0 0 0 0 0 1 0 0 0 
S5 0 0 0 0 0 0 0 0 1 0 
S6 0 0 0 0 0 0 0 0 1 0 
S7 0 0 0 0 0 0 0 1 0 0 
S8 0 0 0 0 0 0 1 0 0 1 
Table 4(a) The table for the original  
relationship of activities 
Predecessors Places (name) Successors 
  S 
S  {B}{C} 
S  D 
{B}{C}  E 
D  E 
E  F 
F  E 
F  G 
G   
Table 4(b) The table for the first step  
to establish relationship of activities 
Predecessors Places (name) Successors  
  S 
S  {({B}{C}), D }
{({B}{C}), D }  E 
E  F 
F  {E, G} 
G   
Table 4(c) The table for the second step  
to establish relationship of activities 
Predecessors Places (name) Successors 
  S 
S  { SBCX , D }
SBCX   ({B}{C,NC})
{( BCEX , D }  E 
({B}{C,NC})  
BCEX  
E  F 
F  {E, G} 
G   
Predecessors Places (name) Successors 
 S0 S 
S S1 { SBCX , D }
SBCX  S2, S3 ({B}{C,NC})
{( BCEX , D } S4 E 
({B}{C,NC}) S5, S6 
BCEX  
E S7 F 
F S8 {E, G} 
G End  
The contribution of this study is to develop an algorithm for mining a process model based on the 
most confined data. Specifically, we partition the relationships of activities into three different 
kinds, simple concurrence, simple alternative, and complex concurrence & alternative.  
Compared with other existing algorithm, the α-algorithm the α+-algorithm and the α
++-algorithm, only our proposed algorithm is able to handle problems involving option (for 
which complex concurrence and alternative occur simultaneously). The proposed algorithm in 
this paper is able to catch all the traces in the event logs with more complex relationship of 
activities involving option. 
The search of “optimal” process model is rather primitive in the literature.  Besides 
computational complexity, one optimality criterion currently under consideration is the “minimal 
process model” for which the resulting process model can not only capture all events in event 
logs, but also generate least amount of additional flow. This is currently under study. Another 
interesting problem is how to develop the process mining for event logs with noises.  Cook et al. 
[4] and Van der Aalst et al. [12, 19, 20] presented a heuristic approach to construct workflow nets 
based on counting frequencies of dependencies between activities. Besides heuristic solution, 
there should exist more approaches for this problem for the future research. 
REFERENCE 
1. Agrawal R, Gunopulos D, Leymann F. Mining process models from workflow logs. Lecture Notes in 
Computer Science 1998; 1337:469.DOI:10.1007/BFb0100972 
2. Alves de Medeiros AK, Weijters AJMM, Van der Aalst WMP. Genetic process mining: a basic approach 
and its challenges. In BPM 2005 Workshops. LNCS 3812, Bussler C et. al. (eds.). Springer-Verlag Berlin 
Heidelberg, 2006; 203-215. 
3. Cook JE, Wolf AL. Automating process discovery through event-data analysis. ACM ICSE ’95 1995; 
73-82. 
4. Cook JE, Wolf AL. Discovering models of software processes from event-based data. ACM Transactions 
on Software Engineering and Methodology 1998; 7: 215-249. 
5. Cook JE, Wolf AL. Event-based detection of concurrency. ACM SIGSOFT Software Engineering Notes , 
Proceedings of the 6th ACM SIGSOFT international symposium on Foundations of software engineering 
SIGSOFT ‘98/FSE-6 1998; 35 – 45. 
6. De Medeiros AKA, Van der Aalst WMP, Weijters AJMM. Workflow mining: Current status and future 
directions. In CoopIS/DOA/ODBASE 2003. LNCS 2888, Mccrsman R et. al. (eds.). Springer-Verlag 
Berlin Heidelberg, 2003; 389-406. 
7. De Medeiros AKA, Van Dongen BF, Van der Aalst WMP, Weijters AJMM. Process mining: Extending 
the α-algorithm to mine short loops. 
http://fp.tm.tue.nl/beta/publications/working%20papers/Beta_WP113.pdf [1 August 2007] 
8. Herbst J, Karagiannis D. Integrating Machine Learning and Workflow Management to Support 
Acquisition and Adaptation of Workflow Models. 
http://citeseer.ist.psu.edu/cache/papers/cs/25888/http:zSzzSzhome.t-online.dezSzhomezSzjoachim.herbst
zSzijisafm00.pdf/herbst98integrating.pdf. [1 August 2007] 
9. Herbst J, Karagiannis D. Workflow mining with InWoLvW. Computers in Industry 2004; 53: 245-264. 
DOI: 10.1016/j.compind.2003.10.002. 
10. Huang XQ, Wang LF, Zhao W, Zhang SK, Yuan CY. A workflow process mining algorithm based on 
synchro-net. J. Comput. Sci. & Technol 2006; 21: 66-71. 
11. Humphrey WS, Kellner MI. Software process modeling: principles of entity process models. ACM 1989; 
331-342. 
12. Maruster Laura, Weijters AJMM, Van der Aalst WMP, Van den Bosch A. Process mining: Discovering 
direct successors in process logs. In DS 2003. LNCS 2534, Lange S, Satoh K, Smith CH (eds.). 
Springer-Verlag Berlin Heidelberg 2002; 364-373. 
13. Schimm G. Mining exact models of concurrent workflows. Computers in Industry 2004; 53: 265-281. 
DOI:10.1016/j.compind.2003.10.003 
14. Schimm G. Mining Most Specific Workflow Models from Event-Based Data. In BPM 2003. LNCS 2678, 
出席國際會議心得報告書 
報 告 人 姓 名 陳雲岫 所屬系所 工業工程與管理研究所 
會議時間地點 Paris, France 
June 24-26, 2009 
會 議 名 稱 ICBIS 2009 : "International Conference on 
Business Information Systems" 
發表論文題目 A Simplified and Effective Algorithm Used to 
Mine Similar Processes: An Illustrated Example 
報告內容應包括下列各項： 
一、 參加會議經過 
會議報到是在巴黎時間七月二十四日早上進行，地點是在巴黎的Holiday inn的
二樓。由於報告的時間是在下午四點十五分至六點的場次，所以利用早上和下午
的空檔時間旁聽了一些有興趣的題目，這一天的報告題目多是關於消費者行為研
究的主題，例如，Market Structure, Efficiency and performance of 
Banking Industry in Sri Lanka, The Consumer Private Space: What is
and How It Can Be Approached without Affecting the Consumer’s 
Privacy以及Evaluation of risks in new product innovation，我們平時所
受的訓練多是以定量的角度進行分析，而從這些研究中，可以看出還有許多不同
的分析觀點可以進行評估，幫助我們更瞭解消費者。 
而第二天的報告內容則是偏向管理、決策等技術性分析的研究，其中令人印象較
深刻的有，Hiring Criteria: A Comparison of Chinese, Russian, and US 
Perceptions of Importance, An Empirical Analysis of Earnings 
Management in Australia, Analysis of Air Quality in the Outdoor 
Environment of the City of Messina by an Application of the Pollution
Index Method等研究，對於台灣產業的發展而言，雇用不同國家的員工是勢在
畫作為主要欣賞目標。最後一天，二十七日則是參觀了巴黎近郊的凡爾賽宮。
 
四、 建議 
會議報到是在巴黎時間七月二十四日早上進行，地點是在巴黎的 Holiday inn
的二樓。由於場地並不大，雖然來賓可以分區自行領取名牌，但是領取名牌的地
點並未標示清楚，加上動線的配置並不順暢，所以整個會場相當的混亂，而且會
議報到時間拖延許久，第一場會議開始時，仍有許多人尚未完成報名，這是這次
會議較美中不足的地方。 
 
五、 攜回資料名稱及內容 
會議的光碟資料 
 
六、 其他 
 
 
World Academy of Science, Engineering and Technology 54 2009
41
World Academy of Science, Engineering and Technology 54 2009
43
World Academy of Science, Engineering and Technology 54 2009
45
