 1
ABSTRACT 
 
Warehousing is one of the most important functions in logistics management. Warehouse 
managers always face a challenge how to improve efficiency in warehouse operations. 
Traditional wisdoms always focus on how to improve operation efficiency for individual activity.  
In practice, warehousing involves many functions with different activities and equipment.  In 
order to synergize the entire warehouse operation, we need to collaborate different activities.  In 
this study, we apply a mobile-agent technique to integrate picking and shipping activities in order 
to improve the warehousing efficiency.  The developed mobile-agent-based system utilizes 
characteristics of autonomy, social ability, reactivity and pro-activity so as to streamline picking 
and shipping operations.  The developed mobile-agent system is implemented in a local 
warehouse.  Results suggest that the developed approach can integrate picking and shipping 
activities using feedback and information sharing mechanism. 
 
Keywords : Warehousing, Agent-Based Technique, Logistics. 
 
 3
1. Introduction 
The warehouse manager always faces challenges of how to effectively plan warehouse 
activities for improving the warehouse efficiency.  The activities of warehousing include 
receiving, put-away, storage, picking, packing, and shipping.  Conventionally, most of studies 
on warehouse efficiency focuses on individual activity and searches for sub-optimum solution.  
However, many evidences from practical experiences suggest that the relationships among those 
activities are highly interrelated.  For instance, each activity might share common information 
and feed back the outputs to each other in order to streamline the whole operations.  Hence, how 
to implement an integrated system to streamline these activities is a demanding task deserved to 
investigate. 
The technology of agent-oriented programming is a new generation of programming design 
method, which possesses an advantage of modularization and object-orientation.  This 
technology provides an opportunity to apply to an environment with highly dynamics and 
uncertain situations, particularly, the situations where both cooperation and competition exist 
among agents to compete scattered information in order to obtain solutions of the target problem.  
In a warehouse, activities and the associated information are scattered and treated dynamically 
and individually.  Hence, in warehousing we need an integrated system to link up and coordinate 
each activity and provide a feedback mechanism in order to improve efficiency. 
In order to synchronize the whole warehouse operation, agent-based technique is applied to 
integrate these activities and hope to improve the warehousing efficiency.  The proposed 
integrated system takes an advantage of agent-based technique, such as mobility to move to an 
assigned position to execute responsibility, autonomy to response automatically when receiving 
information, cooperation to assist agents to take cooperation when conflicts occur between 
operations, and reactivity to supervise operations and to make correction.  The proposed system 
can be helpful for warehouse managers when an integrated warehouse operations system is 
available to coordinate each operation in warehousing. 
In this study, the proposed integrated system is devised by an agent-oriented programming 
method and can be operated on IBM Aglet platform.  The framework consists of flow control  
system, order system, picking system, delivery system, and coordination system and provides 
flow control agent, message agent, order control agent, picking control agent, picking inference 
agent, delivery control agent, delivery inference agent, and coordination inference agent.  The 
developed agent-based planning system will be implemented in a local warehouse. The results 
obtained will show that the developed integrated system can have a substantial contribution to 
improving warehouse operation performances. 
 
 5
strategy as random storage, class-based storage, and within-aisle volume-based storage. Their 
results suggest that simple traversal is the best policy for reducing picker’s total traveling distance.  
Ratliff and Rosenthal (1983) applied dynamic programming technique to solve for optimal pick 
path design problem in a warehouse with cross-aisle layout.  Vaughan and Petersen (1999) 
studied the effect of cross-aisle design on the picking operation efficiency.  Roodbergen and 
Koster (2001) developed a combined heuristic for solving optimal picking path problem under 
multi-cross aisle situation.  Result shows that their combined heuristic outperforms among other 
methods.  Hall (1993) obtained a similar result from his study. 
 
2.2 Agent-Based Technique 
Agent-based technology is one of the rapid advanced techniques in computer science. 
Shoham (1993) firstly proposed this new generation programming design method.  Ferber (1999) 
defined agent-based technique as: an agent is an actual or virtual entity that possesses the 
following characteristics: can move in an environment; can directly communicate directly with 
other agents; can be triggered by a group of agents; possess its own resources; can respond to its 
surrounding environment; can be represented by part of environment; possess skill and offer 
service; can clone itself; tend to meet its goal.  Wooldridge and Jennings (1995) stressed that the 
agent-based techniques is kind of software or computer system, which provides properties of 
autonomy, social ability, reactivity, and pro-activity.  Nwanna (1996) considered that an agent 
must possess at least three properties: autonomy, cooperation, and learning.  He classified agents 
into four types: collaborative agents, collaborative learning agents, interface agents, and smart 
agents.  Harrison and Caglayan (1997) divided agent functions into: task level skills, knowledge, 
and communication skill and thereby agents can be divided into information agent, cooperation 
agent, and transaction agent.  They also pointed out that agent-related research areas can be 
divided into computational intelligence, software engineering, and human interface.  
 
3. Framework Of Agent-Based Warehouse Operations 
3.1 Integrated Framework by Agent-Based Technique 
In this study, methods of agent-oriented analysis and design are applied to construct the 
integrated framework for warehouse management.  In this framework, the agent-based system is 
used to simulate the operations in real world and help planner to define the role in a system and to 
construct a complex system.  How to analyze the real situation and the role in a system is the 
key to apply this methodology to developing the integrated warehousing system.  The integrated 
framework can be constructed using the following two-phase procedure. 
Phase 1: Analyze the real situation. 
 7
informing logic referencer.  The information receiver can be very interactive with 
information sender and logic inferencer. 
● Logic inferencer (assistant director)  
The logic referencer will perform logic operations and send the results of logic operations 
back to the information receiver when he obtain the assignment from information receiver.  
Hence, the logic inferencer plays only role of inference and interacts with the information 
receiver. 
● Information coordinator (program planner)  
The information coordinator will perform coordination with other agents and get the 
feedback to the information sender when he receives order information.  Hence, the 
information coordinator plays only role of coordination and interacts with the information 
sender. 
● Information sender (secretary)  
The information sender follows the process controller’s command to send order 
information to the information receiver and wait for the reply   Then, he sends back the 
results to the process controller.  Hence, the information sender plays three roles of 
sending information, receiving information, and feedback information and interacts with 
information receiver and process controller. 
Step 3: Generate the interactive model for the roles. 
The purpose of this step is to describe the interaction among different agents. .Then the 
interactive model is constructed using some coordination.  The coordination used in this 
study refers to a series of some executive processes performed by agents. 
Step 4: Transform the analysis role into a physical programmable agent. 
Table 1 shows this transformation of those analysis roles into physical programmable agents.  
Its associated conceptual system process is depicted in Figure 1. 
Table 1. Roles and associated agents in a system. 
Role  Number Agent  
Process Controller 1 Process Control Agent  
Information Receiver 4 Information Receive Interface Agent  
(order, picking, shipping, coordination)  
Logic Inferencer  2 Logic Inference Agent  
(picking, shipping)  
Communication Coordinator  1 Coordination Agent  
Information Sender many Information Sending Agent  
 
  
Fig 2 Execution procedures 
 
Step 1: Integrate order information 
This step is mainly to integrate order information from order system and shipping system. 
The information generated from picking system include picking time and sequence for each 
customer order and the information from shipping system include delivery routes and loading 
sequence for each customer order.. 
Step 2: Calculate order picking and loading time. 
Sum up the entire orders needed to be picked and shipped to obtain the total order picking and 
loading time. 
Step 3: Estimate demand for pickers and loaders 
Apply the following formula to estimate the demand for pickers and loaders given the 
calculated total order picking and loading time, 
Demand for pickers = Total order picking time ÷ order picking completed time 
Demand for loaders = Total order loading time ÷ order loading completed time 
Step 4: Determine the picking and loading sequence for each order 
The purpose of this step is to coordinate order picking operation and order shipping operation 
 9
The behaviors of the Aglet object performed on the AgletContext platform include Create, 
Clone, Dispatch, Retract, De-active, Active, and Dispose.  These seven behaviors constitute the 
entire life cycle for the Aglet objects, as shown in Figure 4. 
   
 
Fig.4 The life cycle diagram for the Aglet objects. 
 
The mechanism of the life cycle for the Aglet object can be described as follows.  The 
Aglet object can generate a new life object by Create behavior and Clone behavior.  Then the 
generated new object can be sent by the Dispatch behavior to the distance computer system for 
fulfilling its assigned job.  The De-active behavior can suspends this new generated object’s 
action and store it in the system device if it is necessary.  Once the system needs the new 
generated object, it can be activated by the Active behavior.  After the job is finished, this new 
generated object should be disposed by the Retract behavior and the Dispose behavior.   
In the Aglets application kits, an interface called Tahiti can be used to manage those agents.  
The Tahiti interface is displayed in Figure 5.  From this Figure, we can see the way how to 
manage multi-Aglets on this platform.  Each agent appeared in this interface contains its 
identification number for the convenience of communication with other agent. 
 
 
Fig.5 Tahiti interface  
 
4.2 Development of System Architecture 
According to the proposed integrated system architecture, we design five systems to be used 
in the agent environment.  These five systems are: flow control center system, order system, 
picking system, delivery system, and coordination system.  The definition and role of these five 
systems are described as follows.  
 11
Task: Permanently station on shipping platform to receive assignment from other agents and 
make inference. 
Accountability: To inform the consigned agent of inference result. 
8. Coordination Inference Agent; CIA 
Task: Permanently station on the coordination platform to resolve the problem resulting 
from the conflict objectives of picking system and shipping system and perform 
communication and coordination for coordination agents 
Accountability: To receive assignment, make inference, and send to the consigned agent. 
 
 
Fig. 6. System operation mechanism. 
 
In order to implement the developed integrated system, four major interfaces 
are constructed.  There are order agent interface, picking agent interface, 
shipping agent interface, and coordination agent interface.  The functions of 
these interfaces are stated as follows. 
1. Order Agent Interface: Its communication Port code is 4410. This interface can provide user 
to key in order data, including amount of orders, picking list, and shipping list. This 
information will b sent to process control center for picking operation and shipping operation.  
Figure 7 displays the order agent interface. 
 
 13
 
Fig. 9 Shipping agent interface 
 
4.3 Case Study 
The developed integrated warehousing system is implemented and tested by collecting real 
world data from a local distribution center owned by a freight company.  The customer orders 
send to the freight company via fax, email, or EDI.  Once the freight company receives and 
collects customer orders, these order data are stored in the databank and sent to the controller 
agent in the process control center.  Then the controller agent creates three information agents 
and sends these order information to picking system for picking plan, shipping system for 
shipping plan, and coordination system for communication and coordination, respectively.   
When the picking system receives order information, the system calculate an optimal 
picking path, the associated picking time and the demand for pickers using the information of 
order items, item location, order and quantity.  Then, the system sends back these results to the 
process control center. 
When the shipping system receives order information, the system calculate an optimal 
delivery routes, the associated loading time and the order loading sequence using the information 
of customer location, item weight, item volume, delivery time, street distance, limits on driving, 
and truckload.  Then, the system sends back these results to the process control center. 
When the controller agent receives picking information and shipping information, he will 
check the order picking sequence and the order shipping sequence.  If the conflict problem 
occurs, both the order picking sequence information and the order shipping sequence information 
will be sent to the coordination system.  The coordination agent will resolve this conflict 
problem using coordination mechanism to provide optimal picker number, order picking 
sequence, order shipping sequence, and shipping time.  Then the coordination agent send back 
these results to the controller agent.  Finally, the controller agent informs these final results to 
the picking division for picking operation and shipping division for shipping operation, 
 15
 17
Journal of Operational Research Society, 30(8), 711-720. 
Elsayed, E.A. and R. G. Stern, (1981). Computer algorithms of order processing in automated 
warehousing systems. International Journal of Production Research, 21(4), 579-586. 
Ferber, J. (1999). Multi-agent systems: an introduction to distributed artificial intelligence. New 
York: Addison-Wesley. 
Frazelle, E. H. and J. M. Apple. (1994). Warehouse operations in the distribution management 
handbook McGraw-Hill Book Company. 
Gademann, A.J.R.M., P. V. D. B. Jeroen, and H. V. D. H. Hassan. (2001). An order-batching 
algorithm for wave picking in a parallel-aisle warehouse. IIE Transactions, 33, 385-398. 
Gibson, D.R., and G. P. Sharp. (1992). Order batching procedures. European Journal of 
Operational Research, 58, 57-67. 
Goetschalckx, M., and H. D. Ratliff. (1998). Order picking in an aisle. IIE Transactions, 20, 
53-62.Hall, R. W. (1993). Distance approximations for routing manual pickers in a warehouse. 
IIE Transactions, 25(4), 76-87. 
Harrison, G. and A. K. Caglayan. (1997). Agent sourcebook - A complete guide to desktop, 
internet, and intranet agents. John Wiley & Sons, Inc. 
Nwanna, H.S. (1996). Software agents: An overview. Knowledge Engineering Review, 11(3), 
205-244. Petersen, C.G. (1997). An evaluation of order picking policies for mail order 
companies. Production and Operations Management, 9(4), 319-355. 
Petersen, C.G. and R. W. Schmenner (1999). An evaluation of routing and volume-based storage 
policies in an order picking operation. Decision Sciences, 30(2), 481-501. 
Petersen, C.G. (2000). An evaluation of order picking policies for mail order companies. 
Production and Operations Management, 9(4), 319-335. 
Petersen, C.G. (2002). Considerations in order picking zone configuration. International Journal 
of Operations and Production Management, 22(7/8), 793-805. 
Petersen, C. G. and G. Aasa. (2003). A comparison of picking, storage, and routing policies in 
manual order picking. International Journal of Production Economics, 231-243. 
Ratliff, H.D. and A. S. Rosenthal. (1983). Order-picking in a rectangular warehouse: A solvable 
case of the traveling salesman problem. Operations Research, 31(3), 507–521. 
Roodbergen, K. J., and R. D. Koster. (2001). Routing order pickers in a warehouse with a middle 
aisle. European Journal of Operational Research, 133(1), 32-43. 
Sharp, G..P., K. Choe, and C.S. Yoon. (1991). Small parts order picking: Analysis framework 
and selected results. In Progress in material handling and logistics, Ga Tech. 
Shoham, Y. (1993). Agent-oriented programming. Artificial Intelligence, 60(1), 51-92. 
Tompkins, J.A., J. A. White, Y. A. Bozer, E. H. Frazelle, J. M. Tanchoco, and J. Trevino. (1996). 
