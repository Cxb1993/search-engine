1行政院國家科學委員會專題研究計畫成果報告
雙目標模擬最佳化問題之篩選與比較機制(I)
Screening and Comparison Procedures for Bi-Objective
Simulation Optimization Problems
計 畫 編 號：NSC 97-2221-E-327-023
執 行 期 限：97年 08月 01日至 98年 10月 31日
主 持 人：郭幸民 國立高雄第一科技大學運籌管理系
計畫參與人員：林怡君、張雅媚、侯智偉 國立高雄第一科技大學運籌管理系
一、中文摘要
近年來，演化式演算法已經成為求解多目標
最佳化問題的常用方法，但是如果目標函數是經
由模擬實驗所估算，由於模擬運算耗時以及隨機
誤差的干擾，演化式演算法可能因為不夠精確而
失去實用性。因此，模擬最佳化的主要挑戰是在
於如何兼顧模擬實驗的準確度以及演算法的搜尋
過程，而多目標的模擬最佳化問題在求解速度與
品質上有更高的難度。本計劃的研究方向著重於
如何引導演算法進行更有效率的搜尋，在不犧牲
求解品質的前提下加速求解過程。本計劃在演化
式演算法產生新的子代後，在兼顧多元性的條件
下，利用距離與 crowding distance的概念篩選掉明
顯較差的子代，再進行模擬評估。實驗結果顯示
本研究發展的篩選機制可減少運算時間，卻不影
響演算法效能。計畫的第二階段是發展兩階段的
模擬實驗方式，當模擬評估子代解時，先進行第
一階段的實驗，運用統計方法選出初步結果較佳
的子代解，再進行第二階段的模擬評估以獲得更
準確的數值，減少比較時誤判的情形。本計畫的
研究成果將可填補模擬最佳化理論與應用之差
距，使模擬成為更有力之應用工具。
關鍵詞：模擬最佳化、雙目標演化式演算法、篩
選機制
Abstract
Evolutionary algorithms are popular in solving
multi-objective optimization problems. However,
applying evolutionary algorithms to simulation
optimization problems is difficult because it maybe
too expensive or time-consuming to perform
thousands of functional evaluations via simulation
runs. This project proposes a bi-objective
evolutionary algorithm which targets primarily on
“expensive” simulation-based optimization problems.
The first part of the algorithm contains a screening
mechanism that can save computational effort by
screening out less promising offspring solutions
before they are evaluated via simulation runs. After
generating offspring solutions, we measure the
promising index of each offspring solution based on
its distance to the current Pareto set and other
metrics. Then we simulate only solutions with high
values of promising index. Experimental results
suggest that using screening mechanism can speed
up the algorithm significantly without compromising
quality of solutions. Next we develop a two-stage
procedure for ranking and selecting quality solutions
subject to simulation errors. Uncompetitive
solutions are screened out after the first stage of
simulation experiment. Surviving solutions are
then simulated for more replications to obtain
accurate results. This research will help bridging
the gap between simulation and optimization and
make simulation an even more powerful tool in real
world applications.
Keywords: Multi-objective evolutionary algorithms,
Simulation optimization, Screening Mechanism
I. Introduction
The main body of this research is a bi-objective
evolutionary algorithm which targets primarily on
“expensive” simulation-based optimization problems.
The most significant feature of the algorithm is a
filtering mechanism that can save computational
effort by filtering out less promising offspring
solutions before they are evaluated via simulation
runs. After generating offspring solutions, we will
evaluate each offspring solution based on its distance
to the current Pareto set. It is also possible to use
any existing approximation as a quick indicator of
3the supporting theory. They claim that commercial
applications employing deterministic optimization
procedures fail to account for randomness in the
simulation results, meaning that their progress may
be no better than a random search if the variability is
high. Joines et al.[7] state several challenges for
simulation optimization process. First, there is no
analytical expression of the objective function,
which eliminates differentiation, or exact calculation
of local gradients. Secondly, the stochastic nature
of the simulation presents another challenge because
the performance measure is not crisp but rather is
described by a probability distribution.
One way to improve the optimization process is
to carefully select solutions to simulate in order to
save computation time and/or maximize the
improvement. Shang et al.[13] uses RSM and the
Taguchi method to optimize the design of a supply
chain system. Rosen and Harmonosky[11] present
a simulated annealing approach to discrete parameter
simulation optimization, which incorporates
statistical knowledge of the response to improve its
convergence rate. The algorithm performs repeated
searches for multiple local optimal solutions by
using learned knowledge of the response surface,
instead of blindly searching throughout the feasible
region.
III. RESEARCH DESIGN
We describe major steps of the evolutionary
algorithm, followed by the discussion of key features
that fine tune the algorithm.
Step 0. Select a set of system configurations
arbitrarily to be initial population. Simulate
all systems in the initial population.
Step 1. Compare all systems and construct the
non-dominated solution set S0. Set i=1.
Step 2. For iteration i, construct reference sets from
current population and solutions in Si-1.
Step 3. Cross over members from different reference
sets to create new system configurations.
Perform mutation and/or random selection to
create more offspring systems.
Step 4. Screen out unpromising systems based on the
normalized distance to the current
non-dominance set Si-1.
Step 5. Simulate all systems in the remaining
offspring population for n1 replications.
Step 6. Screen out less competitive systems and
simulate remaining systems for additional n2
replications.
Step 7. Identify non-dominated solutions and update
the non-dominance set as Si.
Step 8. Stop if the current result meets specified
criteria. Otherwise, set i←i+1 and go to
step 2.
The most important feature of the algorithm is
to screen out unpromising solutions in the offspring
population. We propose to screen out offspring
solutions with large Euclidean distances to the Pareto
optimal front to save simulation time. This approach
requires knowledge about the true Pareto optimal
front, which seems to contradict the problem itself.
Our solution is to start the screening mechanism
once we have a representative set of non-dominated
solutions after five or more generations. This is
similar to the concept of warming up for steady state
simulation. The accuracy of the estimated Pareto set
is less critical because we are not using it to search
for solutions that maximize the “expected 
improvement”. The shape of the Pareto set is 
updated after each generation using the new
non-dominated set.
This research uses the following performance
measures to evaluate the algorithm.
1. Convergence metric measures the extent of
convergence to the actual Pareto-optimal set.
Define || || as the Euclidean distance between
any two solutions. We use the following metric
*
1M proposed by Zitzler et al.[16].



''
*
1 }*;||'min{|||'|
1
Yd
Yddd
Y
M (1)
2. Diversity metric measures the extent of spread
achieved among the obtained solutions.
Assuming that there are N solutions in Y', the
following metric  is defined in NSGA-II:
dNdd
dddd
lf
N
i
ilf
)1(
||
1
1





 (2)
where df and dl are the Euclidean distances
between the extreme solutions of Y and the
boundary solutions of Y', di is the distance
between adjacent solutions in Y', and d is the
average.
3. Bosman and Thierens[3] find that an
approximation set with a good convergence
value does not imply that a good diverse
representation of the Pareto optimal set has been
obtained, since the convergence metric only
reflects how far away the obtained points are
from the Pareto optimal front. They advocate the
reverse of the convergence metric which
includes the goal of diversity and serves as a
better guideline for evaluating MOEAs. They
call it the balance metric.
 
 
 
S
F
PZ
SZ
S
SP ), zd(zP
(S)D
1
0
10min
1 (3)
5We next present a simulation example. A
typical tandem system with blocking consists of
several stations in series and operates like a flow line.
Each station has a single server and a buffer of finite
capacity. All jobs are processed on FCFS basis.
Once the buffer is full, it will block any job from
leaving the upstream station. The blocking ends as
soon as a buffer space is available at this station.
Let K denote the number of stations and bi
buffer capacity at station i. The optimization problem,
formulated as (5), is to identify all buffer allocations
such that no other allocation has larger throughput
and less or equal WIP.
KiforLb
Lb
tosubject
bbWIPMin
bbThroughputMax
i
i
i
K
K
,...2,1
),...,(:
),...,(:
2
1
2
2


(5)
Several metrics have been proposed for
evaluating the performance of multi-objective
optimization algorithms. However, most of these
metrics require the knowledge of the true Pareto set.
Therefore, we decide to use a simulation
optimization package Optquest with ARENA
simulation software to solve the following
sub-problem with varying values of R. Thus we
can obtain an estimate of the true Pareto set. We vary
R in equation (11) with a step size of 0.01, the
estimated Pareto set thus contains only a fraction of
non-dominant solutions.
RbbThroughput
KiforLb
Lb
tosubject
bbWIPMin
K
i
i
i
K



),...,(
,...2,1
),...,(:
2
2
1
2
(6)
We test our algorithm using a four-station
system and a six-station system with exponential
service times. Since the motivation behind this study
is that simulation runs are expensive, we limit the
population size to 18 and the number of generations
to 50. We also adjust simulation settings so that
initial bias is minimized and simulation errors are
within 1%. The experiment is then repeated 10
times using different random numbers.
We also construct another filtering mechanism
utilizes knowledge of the system and is based on an
approximation procedure revised from Lee and
Pollock[10]. The concept is simply to estimate
station 2,…, station K as M/M/1/K queues with
revised arrival rates and service rates. The
approximation is fast and quite accurate for evenly
distributed buffer allocations but errors can grow up
to 5%~10% for other buffer allocations. In addition,
it has some nice properties such as throughput
increases as any buffer capacity increases. Its
structure also favors an evenly distributed buffer
allocation to improve throughput rate. We will use
it to approximate the performance of each offspring
solution and then apply the definition of dominant
rank from NSGA-II to screen out less competitive
solutions before simulation runs.
The following describes results of the
six-station system. Decision variables are buffer
sizes for station 2 to station 6. However, we
restrict each buffer size to be no lager than 10 and
the sum of buffer sizes cannot be larger than 46.
All processing times are assumed to be exponentially
distributed with mean 1.
Estimated Pareto-optimal front
0
5
10
15
20
25
30
0.6 0.65 0.7 0.75 0.8 0.85
Throughput rate
WIP
Figure 4: Estimated Pareto-optimal front for six-station
systems
We conduct the experiment with population
size of 18 and 36 without filtering, denoted as P18
and P36. Then we fix population size at 36 and
screen out one-half of the population using the
filtering mechanisms based on distance to the Pareto
set (Filtering_distance) and based the approximation
procedure (Filtering_estimate). Table 3 list means
and standard deviations of performance metrics of
these experiments. Both filtering methods
perform very close to P36 and have smaller values of
dominated ratio. This suggests that the algorithm
can identify better non-dominated solutions with
filtering mechanism. Figure 5 shows the
non-dominance sets from one of the replications with
the estimated Pareto set.
Table 3: Performance measures for tandem queues
Conv. StdDev. Bal.
Std.
Dev.
D-
ratio
Std.
Dev.
P18 0.2619 0.0429 0.1164 0.0308 0.2733 0.0636
P36 0.2309 0.0296 0.0861 0.0106 0.2057 0.0396
Filtering_D 0.2526 0.0301 0.0865 0.0216 0.1810 0.0393
Filtering_E 0.1790 0.0194 0.0923 0.0322 0.1676 0.0516
