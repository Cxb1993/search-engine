Another important feature of this method is the low cost of update 
processing. Without index rebuilding, it can support update 
operations defined in W3C XQuery Update Facility 1.0 by making 
small changes on the index structures. 
 
 
2 
 
 
  
4 
 
英文摘要 
Due to the wide-spread deployment of business-to-business (B2B) E-commerce, 
XML has become the standard format for data exchange in the Internet. Therefore, 
how to process queries efficiently on rapidly increasing XML documents is an 
important research issue. Without efficient indices, XML query languages, such as 
XQuery and XPath, using label paths to traverse the semi-structured data can be quite 
time-consuming due to exhaustive traversal on XML data.  
Various indexing techniques have been proposed in the literature. However, they 
suffer from some of the following problems in various degrees. First, some indexing 
methods require huge size of index structures, which could be bigger than the original 
XML document. Second, some of them require lots of time to build the index in order 
to minimize the size of index structures. Third, some of them cannot support complex 
queries efficiently. Finally, efficient and dynamic updates, such as insertion, deletion, 
and modification, are not supported in most of the published indexing methods. 
To overcome the aforementioned problems, we propose a novel indexing method 
which uses hash-based tables and array to build indices. The proposed method not 
only compresses XML documents with high compression rate but also supports 
various queries efficiently without accessing the original XML documents. Another 
important feature of this method is the low cost of update processing. Without index 
rebuilding, it can support update operations defined in W3C XQuery Update Facility 
1.0 by making small changes on the index structures. 
 
 
 
Keywords： XML indexing, Structural summary index, XML Query, XML 
update operations. 
  
6 
 
在查詢的效能方面，也較傳統的 XSLT 方式快速。2006 年利用 Summary Index
的概念提出一個含有結構索引（Structure Index）及內容索引（Content Index）的
路徑群聚（Path Clustering）索引方法－PCIM (Path Clustering Indexing Method) [2, 
26]。PCIM 除了有效的壓縮索引所需的空間外，因採用 Hash-based tables 儲存群
聚的節點，在查詢效率上有很好的改善。同時除了可支援結構關係查詢外也支援
多樣化的內容查詢。而 2007 年所提出的 NCIM (Node Clustering Indexing Method) 
[3, 4] 則是同時考量索引的「建構時間」、「空間」以及「查詢效能」三方面，取
得較佳的處理方式。NCIM 將 XML 具有相同標籤名稱群聚在一起，使用
Hash-based tables 儲存索引，以提高查詢的效率。實驗的結果顯示，建構索引的
時間不易受到XML資料集的複雜度和深度的影響，實驗的資料集都可以在30 秒
內完成索引的建構，而文件壓縮的比率平均有 66.6%，同時可以支援多樣化的查
詢，查詢上也有極佳的效率。 
雖然本研究團隊在索引的「建構時間」、「空間」及「查詢效能」上都有不錯
的成果，但是要導入 XML 資料庫管理，仍有許多問題需要解決，例如 XML 文
件及索引的儲存方式，以及資料更新的支援和成本評估等。由於標示語言的特性，
XML 文件通常會以樹狀結構來表示，因此在建立索引時，必須考量樹狀分支結
構（包含節點的位置及標籤名稱）以及實際資料的內容值。文獻上有關 Structural 
Summary Indices 的研究大多在建構索引時，只強調文件結構部份，忽略文件內
容值的部份 [10,11,13,14,15,16]。查詢時，先利用索引找到所要查詢的資料於
XML 文件上的位址，再進入 XML 文件取得相對應的資料。因此支援索引所需
要的空間將會是 XML 文件加上索引的大小。相較於關聯式資料庫使用表格的形
式儲存資料，明確的定義每個欄位的名稱，XML 的文件中，相當於欄位名稱的
標籤（tag）則會重複出現。根據往年研究的觀察，XML 文件中表示結構的標籤
（含 "<" 和 ">"）與表示內容值的字串平均各約佔原 XML 文件的一半。然而在
建立索引時，通常已經記錄了文件的結構，如標籤名稱及其在文件中的位置，因
此若能以索引取代 XML 文件，勢必能節省相當可觀的儲存空間。 
因此本研究計畫的目的在於建立一個支援更新機制的 XML文件壓縮與索引
方法。這個索引結構適合應用於 XML 資料庫管理的儲存及索引結構，可以取代
原來的 XML 文件，必要時也可以轉換為 XML 文件。在空間需求上，達到有效
壓縮文件的目的。在查詢上，可以透過索引達到快速及多樣的查詢。在更新上，
以最小的成本完成資料的新增、修改與刪除。同時具有上述特性的文件儲存架構，
未來將可應用於許多儲存空間低且 CPU 的運算能力不高的手持設備，如手機、
PDA（Personal digital assistant），PND（Portable Navigation Device）等。 
 
8 
 
很難從原來已經產生的索引結構加以維護，必須重新建立索引結構。 
為了改善 DataGuide 的缺點，陸續有文獻提出各種改進的方法。Index Fabric 
[12] 由 B. F. Cooper 等人於 2001 年提出，將 XML 文件視為樹狀結構，並走訪並
記錄所有根節點到葉節點(root-to-leaf)的路徑（稱為 raw paths），然後再透過編碼
技術，將每條 raw path 編碼為一字串。再利用 Patricia trie 結構來儲存這些字串以
建立索引結構，查詢時必須用英文字母將查詢語句編碼為字串，然後以編碼後的
字串為 key 到 Patricia trie 結構找尋跟查詢字串相同的字串。Index Fabric 支援了
內容值的查詢，但是和 DataGuide 一樣使用樹狀結構儲存索引，每次查詢都需從
根節點開始比對，部份結構查詢（Partial matching Query）效率不高，同時分支
查詢必須參考到原來的 XML 文件，否則可能有誤判的情形。由於 DataGuide 和
Index Fabric 都不支援部份結構查詢，APEX [13] 基於 DataGuide 的架構，提出
圖形結構加上 Hash table 的索引方法來索引 XML 文件。而 Hash Table 是用來儲
存 XML 圖形索引結構中每一個節點的資料，並記錄最多 2 個節點的階層結構關
係，如此即可做 partial match 的查詢，不過若 partial match 的查詢語句大於 2 個
節點以上，則還是需要做 join 運算。 
2.1.2  Structural Join Indices 
Structural join indices 主要著重在查詢階段的效率，一般的作法會先將 XML
文件的節點依所在的位置進行編碼，再依標籤名稱進行群聚。查詢時先將查詢分
解為多個單一路徑的子查詢，分別處理得到部份的結果，最後使用 merge-join 將
部份的結果整合為最終的結果。這種方法可以有效的處理分支結構的查詢，缺點
是在處理查詢的過程中，會產生很多中間結果，而這些中間結果並不一定會屬於
最後結果的一部份，因此加重了merge-join階段的成本。後續有關這方面的研究，
就著重在於如何有效的暫存子查詢的結果，以及事先過濾掉不必要的比對，以加
速 merge-join 的執行[19, 20, 28, 30, 31 ]。 
Structural Join [29] 是將 XML 文件做編碼分別記錄了文件編號、深度優先搜
尋（Depth-First Search）去程的開始編號、回程的結束編號，以及節點位於樹狀
結構中的階層。接著將節點做簡單的群聚，稱為 Potential target nodes，執行查詢
時，先將查詢柝解為二元的「父－子」或「祖－孫」關係基本查詢，例如 
//A[//B]/C//D 柝解為 A//B、A/C、,C//D，要處理 A//B 子查詢時，分別讀取 PTN(A)
和 PTN(B)，並比對開始編號和結束編號以確定是否有「祖－孫」關係。三個基
本查詢各別執行得到子結果後，再合併為最終結果。Structural Join 可以支援分
支查詢，但在執行查詢過程中所產生的中間結果很多，而且合併的成本太高，是
最主要的缺點。 
TwigList [31]主要是為了在 merge 階段所需要的成本，而提出以多個 List 來
暫存中間的結果（圖 2）。。執行查詢時是由下而上，先將查詢的葉節點的 Potential 
target nodes PTN(d)放入 D-List，再檢查 PIN(c)中符合 C//D 的節點放入 C-List，
10 
 
 
(a)             (b)           (c)             (d)          (e) 
圖 3：1-index and D(k)-index Update: (a) Data graph and a new edge, (b) 1-index,  (c) 
Updated 1-index, (d) D(k)-index, and (e) Updated D(k)-index 
由於Structural Summary Index 和Structural Join Index 一開始都會先對XML
文件的節點進行編碼，代表各節點在文件中的位置。而選擇的編碼方式，則會影
響到更新的效率。J.K. Min 等人 [32] 將目前常見的編碼方式分成三類，第一類
是 Region numbering scheme，每一個節點使用一組數字（start, end）代表其所在
的位置，主要是利用深度優先搜尋（Depth First Search，DFS），走訪每個節點時
依序加一，去程給予開始編號（start），回程給予結束編號（end），利用節點所
指開始編號和結束編號數值當成區間，如果某個節點的開始編號和結束編號涵蓋
另個節點的開始編號和結束編號，表示這兩個節點存在有「祖－孫」關係。這種
編碼方式在文件更新時，會有大幅度重新編碼的問題，如圖 4(a) 中，節點 a 要
新增在節點(7,8)之下，包括節點(7,8)、其祖先節點(6,19)、(1,22)，以及開始編號
大於 7 的所有節點都必須重新編碼。刪除的情況也類似，因此這類的編碼方式更
新的成本相對較高。 
第二類是 Prefix labeling scheme，每個節點的編號，前面會再加上父節點的
編號，例如 Dewey 編碼。其優點是藉由比對兩個節點的編號，可以很容易判斷
是否為「父－子」或「祖－孫」關係。這種編碼方式在文件更新時，需要重新編
碼的範圍較小。要重編的節點是以新增節點的父節點為根節點的 sub-tree，排列
在新增節點之後的所有子孫節點。如圖 4(b)中節點 a 要新增於節點(1,3,1)之下，
父節點為(1,3,1)，因為是葉節點，沒有其他的子孫節點，所以沒有需要重編的節
點。新增節點 b 為節點(1,3)的子節點，且位於(1,3,1)及(1,3,2)之間，則填色的範
圍是需要重編的節點。雖然 Prefix labeling scheme 對於更新的支援較佳，但缺點
是需求的儲存空間較大，尤其當樹狀結構很深時，其底層節點的編號會過於冗
長。 
12 
 
 
圖 6：Worst case of insert  
2.3 Branch Map 的編碼方法 
為了改善現有的編碼方法，在 XML 文件更新時，需要重新編碼的缺點，本
研究計畫提出「Branch Map」的編碼方法，這是一個 "local nested" 的編碼原則，
"Local" 表示在索引樹中，只記錄了在 data tree 中「父－子」節點之間分支對應
關係。"Nested" 是指如果一個父節點，其子節點的標籤名稱都不重複，那麼「父
－子」節點就會保持「1:1」的實例關係。若父節點有兩個以上的子節點具有相
同的標籤名稱，那麼子節點就會分割為多個儲存單位，而「父－子」節點就會形
成「1:n」的實例關係。 
例如圖 7(a) 為一個 XML 文件的樹狀圖，橢圓代表文件的標籤，ai 表示標
籤名稱「a」在文件中第 i 次出現，標籤名稱之前再加上「＠」代表屬性的標籤，
長方形代表標籤相對應的內容值。圖 7(b) 表達了在索引樹中，branch map 編碼
的方式，例如第二層的節點 A 的文件中出現 3 次，則 A 的 branch map 為 (111)。
而 A的子節點 B出現 4次，其中第 a3 之下有兩個 B 的子節點，則 B 的 Branch Map
為(11(11))，以 nested的方式呈現 a3 和 b3、b4的對應關係。依此類推往下編碼，
當第四層的 c3 之下並沒有 D 的子節點時，則 D 的 Branch Map 對應的位置以 0
來表示。 
 
圖7: (a) A data tree D2   (b) Relationship of branch maps 
上述的編碼方式可能會出現連續多個 1 或 0 的情況，為了進一步壓縮空間，
14 
 
例如樹狀結構來記錄索引，不但空間需求較大，查詢時必須從 root 開始，
效率也較差，只此本研究採用 hash tables 來群聚相同標籤名稱的節點，達到節省
空間及快速取得資料的優點。在 hash tables 中，我們記錄了以下的資訊：label 是
索引節點的 Dewey 編碼，代表該節點在索引樹結構中的位置，根節點的 Dewey
編碼設為 1。Branch 是指 Branch Map，而根節點的 branch 設定為 1。count 代表
相同位置的節點在 XML 文件中出現的次數。children 記錄子節點的標籤名稱。
由於節點所對應的內容值無法如路徑般被合併，因此另外使用一個 hash table 來
記錄，以 Dewey 編碼為 key，使用 linked list 將內容值串連在一起。另外再使用
一個對照表記錄 Label-Tag 的關係，主要用來加速包含部份結構的分支查詢。圖
9 為 D2 建構完整的 UCIS-X。 
 
圖9：The UCIS-X of D2 
3.2. 文件的查詢 
使用 UCIS-X 進行查詢分為兩階段進行，第一階段採用 TwigList 的方法，找
出符合查詢結構的所有節點，第二階段比對符合節點中的 branch map，過濾出符
合的實例。例如要查詢單一路徑 " //C//E " (圖 10)，先執行 TwigList 找出符合的
索引節點為(C, E) ={(1.0.0.0, 1.0.0.0.1.0), (1.1, 1.1.0.0)}兩組，因為是單一路徑，每
一個子節點中的實例，在原始 data tree 中，一定會有一個相對應的祖先存在，因
此只要檢查符合查詢的葉索引節點中的 branch maps，如第一組的有四個實例，
第二組的有一個實例，就可以得知在原始文件中共有五個子結構符合查詢。 
16 
 
等。本研究計畫所提出的索引結構除了可以取代原來的 XML 文件，同時也可以
有效率的支援上述更新的功能。由於更新最主要的是新增與刪除，其他的運算式
都可以利用新增及刪除的組合達成，因此以下介紹這兩種功能的執行方式。 
3.3.1. 新增 
新增可以分為三種情況，並於圖 12 中以例子說明。(1) 索引中有相同的結
構，且索引節點中有保留位置(branch map 記錄為 0)，只要將 0 更新為 1，並將
count 加 1 即完成。例如在 c4 之後增加 d' 節點，他們在索引中的 branch map 分
別為{(11(11))}和{(11(0(11)))}，因為 c4 在 branch map 中位於第三個位置，對應到
D 的 branch map 中是第三位，記錄為 0，因此將它更新為 1 即可，索引節點
D(1.0.0.0.1)的 count 由 4 更新為 5。(2) 索引樹中有相同的結構，但索引節點中沒
有保留位置(branch map 記錄為 1)，這時必須增加一個 nested 的記錄，將這個位
置分割為 2，並用()表示。例如在 d2 之後增加 e' 節點為第一個節點，他們在索引
中的 branch map 分別為{(11(1(11)))} 和{(11(0(11)))}。因為 d2 (位於第二個位置)
所對應的 E 已經記錄為 1，因此必須進行分割，更新後的 E(1.0.0.0.1.0) 其 branch 
map 為 {(1(11)(0(11)))}， count 為 5。由於 E 節點之後還有子孫節點 F，因為 F
也必須同步更新。(3) 索引樹中有相同的結構，必須新增一個索引節點。例如在
在 a1 之後增加 f' 節點以及它的內容值 "Vf'"，在索引中沒有對應的節點，因此新
增一個 F(1.0.1)節點，由於它的父節點 A 次數為 3，而新增的 f' 位於第一個 a 之
後，因此F(1.0.1)的branch map為(100)。利用F的Dewey編碼 1.0.1在Content index 
table 增加一個 linked list 儲存內容值"Vf'"，並更新 A 的 children，增加 F。 
 
圖12: The Examples of Insertion 
 
a1
b1
d1
c1
e1
f1
g1
@h1
a2
b2
d2
c2
e2
f2
@h2
a3
b3
d4
c4
e4 g2
b4
d5
c5
g3
@h3
r
Va1 Va3
Vf1
Vg1
Vh1
Vf2
Vg2 Vg3Ve4
Vh2 Vh3
18
d3
c3
e3
Ve3
Vc3
e5
f3
Vf3
d’
e’
D
E
F
1.0.0.0.1
(11(1(11)))
E,G
1.0.0.0.1.0
(1(11)(0(11)))
F
1.0.0.0.1.0.0
(1(01)(0(01)))
1.1.0
1
E
1.1.0.0
1
5
1
1
Part of the Path-index Table
Part of the Content-index Table
1.0.0.0.1.0 Ve4
(a) A Data Tree (b) Part of UCIS-X after Insertion
C
1.0.0.0
(11(11))
E,G
4
5
3
f ’
Vf ’
1.0.1
(100) 1
1.0.1 Vf ''
A
1.0
(111)
B, F
3
1
2
3
18 
 
4. 實驗結果與討論 
4.1. 系統環境架構與資料集 
本研究所使用的程式語言為 JAVA 及開發工具為 NetBeans，測試環境為
Windows 7，CPU 為 Intel i7-2600 3.4GHz，RAM 為 16GB。為了比較本研究所提
出的方法在空間及查詢效率執行的情況，我們實作了本文所提出的 UCIS-X 以及
OrdPath [27]編碼方式應用於 TwigList [31]的方法。在測試資料集方面，本研究使
用了 DBLP、SWISSPROT 以及 XMARK 三個測試資料集，各資料集的特徵如表
1 所示。 
表 1：XML 實驗資料集 
Dataset 
Name 
Size 
(MB) 
Max 
depth 
Num. of 
Elements 
Num. of 
Attributes 
Total 
DBLP 127 6 3,332,130 404,276 3,736,406 
XMARK 111 12 1,666,315 381,870 2,048,193 
Nasa 23.88 8 476,646 56,317 532,963 
 
4.2. 索引所需空間的比較 
TwigList 將相同名稱的節點經編號後（在此實驗採用 OrdPath 的編號方式）
群聚在一起，而 UCIS-X 則先將相同結構合併後，採用 branch map 來記錄節點。
由於 OrdPath 要使用三組數字來記錄節點（開始編號、結束編號、層級），而 branch 
map 則使用一個字元（0 或 1）來記錄節點，因此空間的使用相對較小。我們實
作 TwigList 時，與 UCIS-X 一樣採用了 Hash-based tables 來儲存節點資訊，表 2 
列出了三個資料集分別使用兩種方法做索引時，Hash key 的數量、在 linked list
內節點總數、節點壓縮率、索引空間大小、空間壓縮率等。兩種方法都將相同名
稱的節點群聚在 hash table 內，因此 Hash key 的數量一樣，但是因為 UCIS-X 先
將結構做合併，因此 linked list 內節點總數明顯減少很多。將 UCIS-X 所需的索
引節點數除以 TwigList 所需的索引節點數，可以得到 UCIS-X 的索引節點分別在
DBLP、XMark、Nasa 中，只有 TwigList 的 0.004%、0.027%、0.021%。代表在
執行查詢時，UCIS-X 需要比對的節點數相對較少。 
為了進一步比較索引的大小，我們將兩種方法所建構的 hash-tables 中，hash 
key和 linked list內的資料寫入文字檔案中，並比較檔案的大小。我們發現TwigList
採用 OrdPath 編碼（平時只使用單數編碼，預留雙數為新增節點時使用）比原始
編碼方法（不保留雙數）所需的空間還要大。但 UCIS-X 使用 branch map 編號，
20 
 
表 3：XPath 查詢語句 
Query Dataset Path expression Matched 
D1 DBLP //article/title 111609 
D2 DBLP /dblp//phdthesis/title 72 
D3 DBLP //inproceedings//title[//i]//sub 58 
D4 DBLP /dblp/mastersthesis[author][school] 5 
D5 DBLP //article[//volume][//cite//@label]//journal 404 
D6 DBLP /dblp/article[author][//title][//url][//ee]//year 24,550 
X1 XMark /site/regions/africa/item/location 550 
X2 XMark //item//mailbox//from 20946 
X3 XMark //item[location]//description//keyword 20946 
X4 XMark //people//person[//address/zipcode]/profile/education 3241 
X5 XMark //item[location][//mailbox/mail//emph]/description//keyword 8492 
X6 XMark //people//person[//address/zipcode][@id]/profile[//age]/education 1648 
N1 Nasa //reference/source/other/date/year 286 
N2 Nasa //datasets//textFile//para 1164 
N3 Nasa //history[//staff]//day 182 
N4 Nasa //revisions/revision[//creator]/date/year 833 
N5 Nasa //tableHead[/tableLinks/tableLink/title]//fields/field[definition]/name 60663 
N6 Nasa //dataset[/reference][//keyword][//description/para]//@subject 1463 
 
 
圖 14：查詢時間比較(ms) 
 
4.4. 更新效率的比較 
在更新的部分，我們比較了新增節點和刪除節點所需的時間。在執行更新時，
必須先查詢到要更新的節點，再進行新增或刪除，因此同樣的使用表 3 的查詢語
句，在新增的部分，先查詢新增的目標節點，再新增一個節點在目標節點之下；
刪除時，則同樣先查詢要刪除的目標節點，再將其之下的子結構刪除。表 4 和表
5 分別顯示兩種方法新增及刪除所需的時間，包括查詢，新增／刪除，以及整個
更新完成所需的合計時間。 
1 
10 
100 
1000 
10000 
D1 D2 D3 D4 D5 D6 X1 X2 X3 X3 X5 X6 N1 N2 N3 N4 N5 N6 
Ti
m
e
(M
s)
 
TwigList(OrdPath) UCIS-X 
22 
 
在新增的部分，由於 TwigList(OrdPath)必須先新增一個雙數的虛擬節點，再
將要新增的節點放置在虛擬節點之下，而且要新增的數量為查詢的筆數，也就是
每一個查詢的目標節點之下都會新增一個節點。而 UCIS-X 只需要在符合的索引
節點之下各新增一個節點，及修改branch map，因此相對的新增所需的時間較少。
由於 TwigList(OrdPath)在查詢的時間花費太大，因此整體新增所需時間比
UCIS-X 明顯慢很多。 
在刪除的部分，只需要找到目標節點，刪除以目標節點為 root 的子結構，
沒有變更編碼的問題。TwigList(OrdPath)主要是受到查詢結果筆數多寡的影響，
而UCIS-X主要是受到編碼 nested層數的影響，在刪除的時間上，兩者互有消長，
不過因為 TwigList(OrdPath)所需查詢的時間較長，因為整體刪除所需時間比
UCIS-X 較慢。 
 
5. 結論 
本研究計畫提出一個新的文件編碼方法，branch map，可以使用最小的空間
記錄節點間相對應的結構關係。同時採用採用 Structural summary index 的方法將
XML 文件壓縮，再使用簡單的資料結構 Hash table 群聚相同標籤名稱的節點，
達到節省空間及快速取得資料的優點。這個索引結構可以取代原來的 XML文件，
支援各種型態的查詢時，不需要再參考原來的文件。不管查詢的速度還是更新的
速度都比 TwigList 方法使用 OrdPath 的編碼快速。 
 
6. 計畫成果自評 
本計畫之研究成果，已達到計畫書中所預期提到的：(1) 壓縮索引結構所需
的空間；(2) 加速查詢的速度；(3) 有效的支援文件與索引同步的更新。目前正
將成果撰寫成英文論文，投稿至 SCI 期刊。 
本研究之成果尚有一篇論文發表於 2011 數位生活科技研討會 [5]，也有一
本碩士論文 [6]。另外有兩篇論文已投稿，目前正在審稿中，其中 "CIS-X: A 
Compressed Index Scheme for Efficient Query Evaluation of XML Documents" 投稿
至 SCI 期刊 Information Sciences，以及"Supporting Efficient XML Query Evaluation 
Using Double Indexes" 投稿至 EI的研討會 The 26th IEEE International Conference 
on Advanced Information Networking and Applications (AINA-2012)。 
24 
 
Proceedings of the 2002 ACM SIGMOD international Conference on Management 
of Data (SIGMOD '02), Madison, Wisconsin, June 03 - 06, 2002, ACM, New York, 
NY, 2002, pp.121-132. 
14. R. Kaushik, D. Shenoy, P. Bohannon, and E. Gudes, “Exploiting Local Similarity to 
Efficiently Ordex Paths in Graph-Structured Data,” Proceedings of the 18nd 
international Conference on Data Engineering, ICDE, IEEE Computer Society, 
Washington, DC, 2002, pp.129-140. 
15. Q. Chen, A. Lim, K. W. Ong, and J. Tang, “D(k)-index: An adaptive structural 
summary for graph-structured data”, Proceedings of the 2003 ACM SIGMOD 
international Conference on Management of Data (SIGMOD '03), San Diego, 
California, June 09 - 12, 2003, ACM, New York, NY, 2003, pp.134-144. 
16. Q. Chen, A. Lim, and K. W. Ong, “Enabling structural summaries for efficient 
update and workload adaptation,” Data and Knowledge Engineering, 64, 3, 2008, 
pp.558–579. 
17. S. Brenes, “Structural summaries for efficient XML query processing,” 
Proceedings of the 2008 EDBT Ph.D. Workshop, Nantes, France, March 25 - 25, 
2008, S. Müller, W. Lindner, and G. Raschia, Eds. Ph.D. '08, 326, ACM, New York, 
NY, 2008. pp. 65-73. 
18. H. Wang, J. Li , and H. Wang, “Clustered Chain Path Index for XML Document: 
Efficiently Processing Branch Queries,” World Wide Web, 11, 1, 2008, pp.153-168. 
19. S.Y. Chien, Z. Vagena, D.Zhang, V.J. Tsotras, and C.Zaniolo, “Efficient structural 
joins on indexed XML documents, ”Proceedings of the 28th international 
Conference on Very Large Data Bases (VLDB), Hong Kong, China, August 20 - 23, 
2002, Endowment, pp.263-274. 
20. H. Jiang, H. Lu, W. Wang, & B. C. Ooi, “XR-Tree: indexing XML data for efficient 
structural joins,” Proceedings of the 19nd international Conference on Data 
Engineering(ICDE), IEEE Computer Society, Washington, DC, 2003, pp.253-264. 
21. B. Catania, B. C. Ooi, W. Wang, and X. Wang, “Lazy XML Updates: Laziness as a 
Virtue of Update and Structural Join Efficiency,” Proceedings of the 2005 ACM 
SIGMOD international Conference on Management of Data (SIGMOD '05), 
Baltimore, Maryland, June 14 - 16, 2005, ACM, New York, NY, 2005, pp.515–526. 
22. S. Sheu & N. Wu, “XCut: Indexing XML Data for Efficient Twig Evaluation,” 
Proceedings of the 22nd international Conference on Data Engineering (ICDE), 
April 03 - 07, 2006, IEEE Computer Society, Washington, DC, 2006, pp.127-127. 
23. H. Wang, S. Park, W. Fan, and P.S. Yu, “ViST: A dynamic index method for querying 
XML data by tree structures,” Proceedings of the 2003 ACM SIGMOD 
international Conference on Management of Data (SIGMOD '03), San Diego, 
California, June 09 - 12, 2003, ACM, New York, NY, 2003, pp.110-121. 
26 
 
http://www.w3.org/TR/2005/WD-xquery-20050404 , 2005, Accessed 28 Dec. 
2009. 
35. W3C Recommendation, “XML Path Language (XPath) Version 2.0,” 
http://www.w3.org/TR/2005/WD-xpath20-20050404 , 2005, Accessed 28 Dec. 
2009. 
36. W3C Recommendation, “XSL Transformations (XSLT) Version 2.0,” 
http://www.w3.org/TR/2005/WD-xslt20-20050404 , 2005, Accessed 28 Dec. 
2009. 
37. J. Robie, J. Lapp, and D. Schach, “XML Query Language (XQL),” 
http://www.ibiblio.org/xql/xql-proposal.html ,1999, Accessed 28 Dec. 2009. 
38. W3C Recommendation, “XQuery Update Facility 1.0,” 
http://www.w3.org/TR/2009/CR-xquery-update-10-20090609/, Accessed 28 Dec. 
2009. 
 
Dear Mr. Liao, 
 
We are pleased to announce that your abstract “An Indoor Location Based Service Using 
Access Points as Signal Strength Data Collectors” has been accepted for an oral presentation 
at the 2010 International Conference on Indoor Positioning and Indoor Navigation (IPIN). 
Your presentation is scheduled for: 
 
Place: Campus Science City ETH Zurich (Hoenggerberg), Building HCI, Room G7 
Date: Thursday, 16 September 2010   
Time: 09:30 – 09:45 
Session: 3 WLAN RSS (Signal Strength Based Methods), Fingerprinting 
 
We have received more than 200 abstracts and even after a strict review, we still have a 
large number of presentations. So please don’t be offended if your preferred presentation 
type could not be granted. The full conference program is available 
at http://www.geometh.ethz.ch/ipin/program. We will keep this site up‐to‐date.   
 
Our guidelines for an oral presentation can be found 
at: http://www.geometh.ethz.ch/ipin/papers/oral_presentation. Your time slot for your oral 
presentation is 15 minutes.   In order to let the chairman introduce you and also to allow 
questions after your presentation, please don't exceed 10 minutes of presentation. 
Important: As a presenting author, you need to register for the IPIN conference until 30 June 
2010. Otherwise your presentation will be removed from the program.   
 
You are now qualified for a full paper contribution (max. 10 pages A4). The last date for full 
paper submission is 14 September 2010. Please read the IPIN Paper Instructions carefully 
at http://www.geometh.ethz.ch/ipin/papers/paper_instructions. Note that your paper will 
be reviewed and therefore needs to be of high quality. The reviewers are advised to reject 
papers that need changes (in particular those concerning the use of English language). An 
opportunity for manuscript revision cannot be given due to time constraints. 
 
We have assigned four rooms for demonstrations and encourage you to bring your own 
indoor positioning system and demonstrate it! Further details can be found here. 
 
Please do the following three actions until 30 June 2010: 
1. Register for IPIN at http://www.geometh.ethz.ch/ipin/registration. 
2. Provide us with a short CV (max. half an A4 page or max. 200 words, PDF or DOC). This CV 
is only for the session chairman to introduce you and will not be published.   
2010 International Conference on Indoor Positioning and Indoor Navigation (IPIN), 15-17 September 2010, Zürich, Switzerland 
An Indoor Location-Based Service Using Access 
Points as Signal Strength Data Collectors 
 
Kuo-Fong Kao*, I-En Liao**, and Jia-Siang Lyu**  
* Dept. of Information Networking Technology, Hsiuping Institute of Technology, Taiwan.  
Email: kfkao@mail.hit.edu.tw 
** Dept. of Computer Science and Engineering, National Chung Hsing University, Taiwan.  
Email: ieliao@nchu.edu.tw, s9856010@cs.nchu.edu.tw 
 
Abstract—WLAN location determination algorithms can be 
classified into client-based approach and infrastructure-based 
approach. This paper proposes an infrastructure-based indoor 
location determination algorithm using access points (APs) as 
received signal strength (RSS) data collectors. Beside the role 
of RSS data collector, the APs can simultaneously play the 
role of communication. In the proposed system, each AP runs 
OpenWrt, Kismet, and MySQL client for collecting signal 
strength data from mobile devices. The location server builds a 
Nearest Neighborhood estimation model based on RSS 
measurements of the mobile device. In the example 
application, the system manager can easily collect training 
data and input location-aware contents using a web page. 
Once a mobile device enters the area with location-aware 
services, the AP will collect the RSS and IP of this device. 
Then when the mobile device connects to the web page 
provided by our system, the system will locate this device and 
show the location –based services to the user. The proposed 
system has the features of low deployment costs without 
additional hardware and a web-based interface for location-
aware service content provider. Once the system is deployed, 
the content provider can easily create the location-aware 
services. 
 Keywords—Indoor Localization, Received Signal Strength, 
Access Points, OpenWrt, Kismet 
I. INTRODUCTION 
With increasing demand for location-aware services, 
location determination systems have become a popular 
research topic. Examples of useful services utilizing this 
technology include: printing documents on the nearest 
printer, displaying maps of one's immediate surroundings, 
and so on. This study implements another service: a 
location aware web page, which, during conferences or 
school lectures, can provide useful information relevant to 
user location at the time. 
Most conferences will have a web page which lists the 
conference schedule including the titles of the talks, 
names of the speakers, time, locations and related files. 
However, when the number of papers is large, finding 
information on the papers of interest becomes difficult and 
time-consuming. Therefore, a location-aware service that 
predicts the location of a conference attendant and shows 
the events and related files to the user would be very 
helpful. 
The WLAN-based location determination system can 
be modeled as a classification problem. The system 
typically works in two phases: off-line training and on-line 
location determination. During the off-line phase, the 
system gathers Received Signal Strength (RSS) levels 
using a mobile device over a pre-defined area and 
constructs the radio map. The constructed radio map 
contains the coordinates of the surveyed area and the RSS 
levels at each location. The RSS levels are used as 
features to determine the location, and the locations are 
regarded as class labels in a classification problem. In the 
on-line phase, the real-time signal received by the mobile 
device is compared with the RSS levels stored in the radio 
map, and a suitable match location is returned as the 
estimated location. 
WLAN location determination algorithms can be 
classified into client-based approach and infrastructure-
based (server-side) approach. The proposed system is an 
infrastructure-based indoor localization system, which 
means that the system is run on administrator-deployed 
machines and does not require the installation of client-
side hardware or software for location determination. The 
system uses access point (AP), one of the most common 
wireless network devices, as the signal strength data 
collector. Beside the role of data collector, the APs can 
simultaneously play the role of communication. Hence, 
the cost of the system is low, and the deployment of the 
system can be very fast. 
A location-based service which provides timely class 
notes in a university environment is presented in this 
paper to show a possible application of the proposed 
technique. The rest of this paper is organized as follows: 
Section II is the related work. Section III summarizes the 
system architecture. Section IV presents the estimation 
algorithm. Section V describes the implementation detail. 
The experiments are presented in Section VI. The 
conclusions are finally drawn in Section VII. 
 
II. RELATED WORK 
 Studies focusing on localization systems using RF 
methods can be classified into two categories depending 
on whether they are assisted by dedicated hardware or not. 
The systems in the first category, such as the Active 
Bat[1], Cricket[2], PinPoint[3] and the RFID 
systems[4,5,6] have all adopted specialized hardware. 
The systems in the second category, such as the RADAR 
system[7,8] developed by Microsoft, Nibble[9] from 
UCLA, the CMU system[10] from Carnegie Mellon 
University, Horus system[11] from University of 
Maryland, the system from National Chung Hsing 
University[12] in Taiwan, and systems based on 
calibration-free technique[13,14,15,16,17] have all 
utilized the underlying wireless network without extra 
2010 International Conference on Indoor Positioning and Indoor Navigation (IPIN), 15-17 September 2010, Zürich, Switzerland 
communication role. The first method is to plug two 
wireless cards in an AP, and each card plays one role 
independently. The second method is to use only one 
wireless card, but two interfaces are created on the 
hardware equipment by setting the wireless configuration 
file in the path /etc/config. The proposed system adopted 
the second method for saving cost, and the setting in the 
wireless configuration file is listed in Figure 2. After the 
setting is finished, a user can use the command, iwconfig, 
to check whether the two interfaces are available. 
config 'wifi-device' 'wifi0' 
        option 'type' 'atheros' 
        option 'disabled' '0' 
        option 'diversity' '0' 
        option 'channel' '1' 
        option 'hwmode' '11g' 
 
config 'wifi-iface' 
        option 'device' 'wifi0' 
        option 'network' 'lan' 
        option 'mode' 'monitor' 
        option 'ssid' 'dmlab1_monitor' 
config 'wifi-iface' 
        option 'device' 'wifi0' 
        option 'network' 'lan' 
        option 'mode' 'ap' 
option 'ssid' 'dmlab1' 
Figure 2.  Network configuration file with two interfaces 
C. Modification of RSS-monitoring Software: Kismet 
The next procedure of the proposed positioning system 
is to detect the signal strength of the mobile device. One 
benefit provided by good expansibility of OpenWrt is that 
we don’t need to write a RSS-monitor application from 
scratch. Kismet [21] is adopted as our RSS detector. 
Kismet is a well-known 802.11 layer2 wireless sniffer 
system, and can passively collecting packets from any 
wireless card which supports RFMON mode. The source 
code of Kismet version 2010-07-R1 was slightly modified 
to record RSS and IP information to a database server at a 
fixed frequency. The modified kismet was crosscompiled 
and installed in the APs of the proposed system.  
 
D. Table Design of MySQL Database  
The MySQL database system was installed in the 
localization server. The database contains three important 
tables: TrainingRSS, OnlineRSS, and Schedule. Once the 
modified Kismet program was started in the AP with 
OpenWrt firmware, the detected RSS were continuously 
written into the OnlineRSS table. The pre-collected 
training data was stored in TrainingRSS table for running 
of the location determination algorithms. In addition, a 
Schedule table is used to store the location and time 
information for the class notes system described in a later 
section. The attributes of all three tables are listed in the 
Table I. 
 
 
 
TABLE I.  ATTRIBUTES LIST OF TRAININGRSS, ONLINERSS, AND 
SCHEDULE TABLES 
Table name 
TrainingRSS OnlineRSS Schedule 
RecordID RecordID ScheduleID 
APSSID APSSID Room 
RSS RSS Date 
ReceivedTime ReceivedTime StartTime 
Location IPAddress EndTime 
 IPPort Event 
  Speaker 
  File 
 
E. Getting Client IP in Location Aware Web Page 
One popular method to get the client IP from the web 
browser is to get the environment variable 
REMOTE_ADDR. The above scheme can work when the 
client use a public IP. However, many organizations 
assign private IP to wireless devices. These private IP will 
be transformed to a public IP using a NAT device, causing 
the IP detected by the AP to be different from the IP 
recorded by the web server. Hence, in our location aware 
web page, a function using Java Servlet was embedded in 
location-aware web page. This script uses the 
getLocalAddress() and getHostAddress()  functions of 
Java socket object to get the real client IP. This method 
works well in most machines with Java environment. 
 
VI. EXPERIMENTS 
In this section, the experiments performed in this 
research are explained in three parts: experimental test-
bed, an example application, and accuracy analysis. 
A. Experimental Test-bed 
The experiments were performed on the seventh floor of 
the Science Building at the National Chung Hsing 
University in Taiwan. The experimental area has 
dimensions of 62.5m×15.5m, and includes 8 classrooms 
and the main hallway, as shown in Figure 3. 
 
 
 
Figure 3.  Layouts of 7th and 8th Floor of the Science Building at 
NCHU 
The experimental test-bed had three APs (ASUS 
WL500W with Atheros wireless card), given as AP1, AP2, 
and AP3. The APs for the experiments were placed on the 
ceiling which was about three meters off the ground. The 
 
2010 International Conference on Indoor Positioning and Indoor Navigation (IPIN), 15-17 September 2010, Zürich, Switzerland 
input the correct location. Then after the user pushes the 
start button, the system will estimate the user’s location 
using the algorithm described in section 3 and compare 
the estimated location and the correct location. The 
estimation runs once every five seconds, and the 
verification program automatically stop when the number 
of estimations reach a preset number, which is 200 in our 
experiments. The experiments were first executed with the 
center of classrooms on 7th and 8th floor taken as the 
training and testing locations. The accuracy for each 
classroom is shown in Figure 8. 
 
 
Figure 8.  Accuracy of experiments on the centers of classrooms 
 
The experimental results show that the average 
accuracy for the classrooms on the 7th floor is about 98% 
and for the classrooms on the 8th floor the average 
accuracy is about 93% even though there is no AP 
deployed on the 8th floor. In particular, the accuracy of 
classroom 802 is lower than those of room 801 and 803. 
This is due to the instability of signal strength received by 
AP1 and AP2 for the mobile device located at room 802.  
The second experiment is to evaluate the accuracy on 
the corner locations of classrooms, and the third 
experiment is to evaluate the accuracy on the center 
locations of classrooms using different mobile device, 
ASUS EeePC 8G-W001. The second and third 
experiments are carried out on the 7th floor, and the results 
are shown in Table II. 
TABLE II.  ACCURACY OF EXPERIMENTS ON ROBUSTNESS 
Room 
Number 
On center of 
class rooms 
On corners of 
class rooms 
On center 
with different 
device 
701 100% 95% 94% 
702A 95% 90% 92% 
702B 100% 93% 82% 
703 100% 90% 98% 
721 94% 94% 98% 
722 99% 86% 100% 
723 99% 92% 100% 
Average 98% 91% 95% 
 
 
From Table II, we can see that the average accuracy for 
corner locations and different devices are 91% and 95%, 
respectively. It shows that the proposed system is simple 
in terms of the number of training locations, and it is also 
robust under different testing locations and different 
mobile devices. 
VII. CONCLUSIONS 
In this paper, we proposed a non-client reading model 
for indoor location determination using access points as 
signal strength data collectors. Beside the role of data 
collector, the APs can simultaneously play the role of 
communication. A location-based service which provides 
timely class notes in a university environment is also 
presented in this paper to show the possible applications 
of the proposed concept. In the proposed system, no 
additional hardware is needed, and neither is the 
installation of client software. The system also provides a 
web-based interface to location-aware service content 
provider for easily setting up location-aware services. 
In the future, we will work on the impact of 
communication performance of the proposed system and 
adopting more sophisticated prediction algorithm. An 
important advantage of the WLAN-based location 
determination system is that it can add a location 
determination function to existing APs. However, the 
location determination system should set the APs to listen 
to all packages. It should affect the device's ability to 
communicate. The impact of communication performance 
will be studied in our further work. 
 
REFERENCES 
[1] A. Ward, A. Jones, A. Hopper, A new location technique for the 
active office, IEEE Personal Communications 4(5) (1997) 42–47. 
[2] N. B. Priyantha, A. Chakraborty, H. Balakrishnan, The cricket 
location-support system, in: Proceedings of the 6th Annual 
International Conference on Mobile Computing and Networking, 
2000, pp.32–43. 
[3] J. Werb, C. Lanzl, Designing a positioning system for finding 
things and people indoors, IEEE Spectrum 35(9) (1998) 71–78. 
[4] Y.-W. Lee, E. Stuntebeck, S. C. Miller, MERIT: Mesh of RF 
sensors for indoor tracking, in: SECON2006: Proceedings of the 
Third Annual IEEE Communications Society Conference on 
Sensor, Mesh, and Ad Hoc Communications and Networks, 2006, 
pp.545–554. 
[5] L. M. Ni, Y. Liu, Y. C. Lau, A. P. Patil, LANDMARC: Indoor 
location sensing using active RFID, Wirel. Netw. 10(6) (2004) 
701–710. 
[6] V. Seshadri, G. Zaruba, M. Huber, A bayesian sampling approach 
to in-door localization of wireless devices using received signal 
strength indication, in: PerCom 2005: Proceedings of the Third 
IEEE International Conference on Pervasive Computing and 
Communications, 2005, pp. 75–84. 
[7] P. Bahl, V. N. Padmanabhan, Enhancements to the RADAR user 
location and tracking system, Tech. Rep. MSR-TR-2000-12, 
Microsoft Research (February 2000). 
[8] P. Bahl, V. N. Padmanabhan, RADAR: An in-building RF-based 
user location and tracking system, in: Proceedings of IEEE 
Infocom, 2000, pp. 775–784. 
[9] P. Castro, P. Chiu, T. Kremenek, R. R. Muntz, A probabilistic 
room location service for wireless networked environments, in: 
Proceedings of the 3rd International Conference on Ubiquitous 
Computing, 2001, pp.18–34. 
[10] A. Smailagic, D. P. Siewiorek, J. Anhalt, D. Kogan, Y. Wang, 
Location sensing and privacy in a context aware computing 
environment, IEEE Wireless Communications 9(5) (2002) 10–17. 
[11] M. Youssef, A. Agrawala, The Horus WLAN location 
determination system, in: MobiSys '05: Proceedings of the 3rd 
International Conference on Mobile Systems, Applications, and 
Services, 2005, pp. 205–218. 
 
無研發成果推廣資料 
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
無 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
