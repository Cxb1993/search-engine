2目錄 page
1.摘要 .....................................................................................................3
2. Introduction ........................................................................................3
3. The Proposed method……………………………………….……..… 3
4. Watermark embedding .........................................................................3
5 Watermark Extraction ..........................................................................4
6. Experimental results ........................................................................4
6. Conclusion ..........................................................................................5
7. 參考文獻 ..........................................................................................5
8 計畫成果自評 ....................................................................................7
4T is a fixed integer, TI and E is a positive integer. In our
experiments, E is chosen 1 or 2 for consideration of image
quality and robustness of the watermark.
In order to keep the quality of the video and the
robustness of the watermark, we define two parameters R
and O. R is the times of a watermark bit to be embedded
repeatedly. O is the offset of each embedded coding blocks.
We can embed one watermark bit, Wj, into R coding blocks.
Also, we can just select the first coding block to embed a
watermark bit in every O coding block.
2.2. Watermark extracting
To extract the watermarkWˆ , the original watermark W is
not needed. At the H.264 decoder, one watermark bit WEjr,
which denotes the jth watermark bit in the rth time, can be
extracted from a 4x4 coding block by the sign of the
corresponding coefficients Zi, iI. Considering the noise
effect, we need to count the number of positive and
negative coefficients Zi, iI. Let Np be the number of
positive Zi and Nn be the number of negative Zi, iI, the
watermark is extracted as





0orif0
0andif1
NnNpNnNp
NpNnNp
WEjr ,
where 0<rR.
As we have discussed, one watermark bit may be
embedded several times continuously. The watermark bit
can be decided by a majority rule such that


  
.0
;if1ˆ
1
otherwise
THRWW
R
r
Ejr
j
where 10 TH . The watermark capacity, Wcp,
depends on parameters O and R. We can get the watermark
capacity by:
OR
FrameSize
OR
FrameSize
Wcp 




16
16)
1616
(
.
3. EXPERIMENTAL RESULTS
We implement the proposed watermarking method with the
H.264/AVC reference software version 10.2[7] in Microsoft
Visual C++ .NET 2003. We use four standard test video
sequences for simulation. They are Foreman (CIF-size),
Football (CIF-size), News (CIF-size), and Stefan (CIF-size).
The four video sequences are coded at 15 frames/second
with rate distortion optimization and CABAC entropy
coding. A small 22x18 grayscale image as the watermark is
used for our experiments. Figure 1 shows the original
watermark and the extracted one with and without being
attacked. We measure the robustness by the normalized
correlation between the original watermark and the
extracted one as
W
WW
NC
W
j
jj 

)ˆ(
, where Wj is the original watermark
bit and jWˆ is the extracted watermark bit. W is the size of
watermark.
The quality of video sequences after being
watermarked just decrease a little. The experiments show
that the decrease of PSNR from the unmarked one to the
marked one is about 0.32dB to 0.95dB. Figure 2 shows
some example of the 1st frame of Foreman before and after
being watermarked. Table 1 shows the detail of the four test
video sequences marked with different (O, R) pairs.
Table 2 shows the compression time of the H.264
encoder with and without watermark embedding. We got
the compression time for 200 frames. Comparing to the
original encoder, the encoding time increase by 2% - 3%.
To do the simulation on robustness, we make three
kinds of video attacks to the marked video sequences. They
are transcoding with various QPs, bit-rates and common
signal processing. In transcoding with various QPs, we
decode the marked video sequence which was encoded with
QP=28 and re-encode it with different QPs. Table 3 shows
the detailed normalized correlation and the extracted
watermark. If QP is smaller than the original it doesn’t 
cause any damage to the extracted watermark; otherwise we
can still extract a good watermark when QP doesn’t exceed 
the original QP, QP=28 in this case, by 6.
In transcoding with bit-rate controlled, we embed the
watermark into those four standard video sequences at 15
frames/second at 768 kbits/s, 512 kbits/s and 396 kbits/s,
and then re-encode them at 1/2 and 1/3 bit-rate, respectively.
Table 4 shows the detailed normalized correlation and the
extracted watermark. The extracted watermark is still
looking good.
In common signal processing attack, we make attacks
to the video sequences embedded with the watermark at 768
kbits/s, 512 kbits/s and 396 kbits/s respectively. The four
attacks we used are 5x5 Gaussian low- pass filter, circular
averaging filter, unsharpened contrast enhancement and
additive Gaussian noise with mean=0 and variance=5. Then,
we re-encode those attacked video sequences and extract
the watermark. Table 5 shows the detailed normalized
correlation and the extracted watermark of these attacks.
The averages of the normalized correlations are more than
0.70, which shows that the extracted watermark is visually
acceptable.
4. CONCLUSION
A fast and robust watermarking method is proposed. The
sign information of some quantized AC coefficients in a
6forman football news stefan
QP
unmark (2 , 2) (4 , 1) unmark (2 , 2) (4 , 1) unmark (2 , 2) (4 , 1) unmark (2 , 2) (4 , 1)
26 38.533 38.035 38.305 37.545 37.294 37.489 39.883 39.285 39.649 37.24 36.956 37.227
28 37.655 37.202 37.409 36.666 36.426 36.591 38.73 38.254 38.541 36.32 36.089 36.301
30 36.74 36.248 36.467 35.793 35.507 35.699 37.469 37.043 37.28 35.287 35.117 35.299
32 35.956 35.468 35.688 35.006 34.692 34.894 36.635 36.102 36.365 34.411 34.245 34.431
34 35.356 34.835 35.068 34.336 33.97 34.179 35.887 35.361 35.623 33.614 33.401 33.593
Table 1. PSNR(dB) of the four video sequences with and without the watermark under different (O, R) and different QP.
ms / 200frames %
unmarked 60008forman
marked 61492
2.49%
unmarked 60824football
marked 62203
2.27%
unmarked 60018news
marked 61542
2.54%
unmarked 60795
stefan
marked 62084
2.12%
Table 2. The execution time of the H.264/AVC encoder
with and without the proposed watermarking
method. The increase percentages due to
watermarking are shown on the right.
QP Forman Football News Stefan
26 1.00 1.00 1.00 1.00
27 1.00 1.00 1.00 1.00
28 1.00 1.00 1.00 1.00
29 1.00 1.00 1.00 1.00
30 1.00 1.00 1.00 1.00
31 1.00 1.00 1.00 1.00
32 0.99 0.99 0.99 0.96
33 0.99 0.99 0.99 0.94
34 0.99 0.99 0.99 0.90
35 0.98 0.97 0.92 0.88
36 0.72 0.68 0.69 0.67
Table 3. The robustness, under transcoding attack with
various QP, measured by normalized correlation.
Video Bit-rate No Attack
To 1/2
Bit-rate
To 1/3
Bit-rate
768 1.00 0.85 0.67
512 1.00 0.87 0.60Forman
396 1.00 0.95 0.60
768 1.00 0.89 0.60
512 1.00 0.98 0.60Football
396 1.00 0.82 0.81
768 1.00 0.97 0.60
512 1.00 0.98 0.60News
396 1.00 0.87 0.60
768 1.00 0.94 0.91
512 1.00 0.99 0.98Stefan
396 1.00 1.00 1.00
Average 559 1.00 0.93 0.71
Table 4. The robustness, under transcoding attack with
various bit-rate, measured by normalized
correlation.
