program. All things required is to set the 
information of code section location, and determine 
Checkpoint (Data Replication) in the user tasks or 
let the system backup automatically. One issue is 
that the data redundancy adds some processing time 
and occupies memory space in computer system. 
Otherwise, the memory is managed by the ARM.  When 
one DSP need to backup the data of task, it would ask 
ARM for memory.  The DSP could ask ARM for the memory 
addresses of backup region, and then return the 
normal. 
英文關鍵詞： Multi-Core Processor Platform, Embedded system, open 
software, MicroC/OS-II 
 
 2
 
行政院國家科學委員會專題研究計畫成果報告 
 
基於 PAC Duo 之異質性多核心嵌入式作業系統開發 
 
計畫編號：NSC 99-2220-E-006-009 
執行期限：2009/08/01 ~ 2010/07/31   
主持人：楊中平 教授 國立成功大學資訊工程學系 
   
 
1 摘要	
隨著資訊系統的進步，當今時代對於電腦
的可靠度需求逐漸增高，要如何修復或是
處理錯誤的發生在過去一直是資訊領域中
的重要議題，由於系統的複雜度提升，未
來也更會是如此。本計畫的主要目的在於
實作出冗餘性多核心晶片的容錯機制，針
對冗餘性核心設計容錯的功能，包括錯誤
偵測，錯誤處理以及工作回復的機制。在
此計畫之前，我們已將即時作業系統核心
MicroC/OS-II 建立於多核心系統晶片 PAC 
Duo，使各個冗餘硬體核心皆擁有多功處理
的能力。資料備份是容錯系統的基礎，為
了達到工作回復的能力，我們提供的功能
有資料備份應用編程介面  (Check Point 
API)、MicroC/OS-II 工作回復點 (Recovery 
Point) 以及 MicroC/OS-II 行程搬移機制 
(Task Migration)。資料備份應用編程介面
讓使用者在我們架構的系統上開發應用程
式時，可以自行決定資料備份的時機，或
是讓系統週期性自動的做資料備份。
MicroC/OS-II 工作回復點使核心能夠自上
一個備份點 (Check Point) 重新啟動。行程
搬移機制可以使 MicroC/OS-II 上的行程在
硬體核心發生無法修復的錯誤時，搬移至
其他核心並且持續的運作。 
在此計畫，我們讓 ARM 透過 IPC 去管理
DSP 端備份的記憶體。在 DSP 端備份資料
時，必需向 ARM 要求記憶體以備份現行任
務的資料。在 DSP 發生錯誤後，重新啟動
後，可以向 ARM 要求所有備份的資料以回
復錯誤之前的狀態。 
 
 
關鍵詞：多核心處理器平台、嵌入式系統、自由軟體、MicroC/OS-II 
 4
Pattern Generation) [3] is a procedure used in 
semiconductor electrical testing with the 
input patterns required to check a device for 
faults are automatically generated by a 
program. In this thesis, we do not focus on 
these problems that during SoC manufacture 
time. We direct problems at on-line testing 
methodology and our fault recovery 
procedure issues. 
On the other hand, according to Amdahl's 
Law [4], we can see an inflection point in the 
computing landscape. The chip designer 
tends to increase performance by multi-core 
architecture rather than focusing on 
efficiency in the one core [5] [6]. It is not 
only enhancement the computation capability, 
but also provided the redundant operation 
setting as well as error recovery 
opportunities. At this vision, we decide to 
design a fault tolerance mechanism on the 
multi-processor architecture. 
In this work we presented fault tolerance 
mechanisms, which are based on 
heterogeneous multi-processor architecture 
and we have implemented it on the PAC Duo 
SoC [7], which comprise an ARM-based 
General Purpose Processor (GPP) and two 
digital signal processor PAC DSPs. We have 
been established heterogeneous multi-core 
system on this SoC. Our fault tolerance 
mechanisms includes data replication API, 
on-line software-based self-test methodology, 
task resume and task migration when the 
processor core get into abnormal. User 
application based on our system does not 
need to comprehend the operation behind 
user level program, the only one thing to do 
is determined what time they want to use the 
checkpoint API (Data replication), or even 
let the system backup automatically. 
2 計畫緣由與目的	
 
本計畫(子計畫二)的目的是要主要目
的在於實作出冗餘性多核心晶片的容錯機
制，針對冗餘性核心設計容錯的功能。 
並與子計畫三整合，使 ARM 和 DSP
可以互相溝通。讓 ARM 可以管理備份資
料。 
3 研究方法	
本報告敘述本計畫之研究進度及成果 
 
3.1 Fault	tolerance	mechanisms	based	
on	MicroC/OS‐II	on	the	PAC	Duo	 	
本子計劃的目的是在異質性多核心系統晶
片上，建立容錯機制，主要包括: 
 Check point API 
 Recovery point 
 Task Migration 
 
3.1.1 	 Check	point	API	
程式具有系統備分之能力，使用者可
以依照需求在程式碼中插入還原點，還原
點使用概念之虛擬碼如圖 1，亦或讓系統週
期性地自動進行資料備份。 
 6
進行資料備份時，系統除了會備份靜態記
憶體區塊和動態記憶體區塊，還會另外紀
錄 MicroC/OS-II 工作控制資訊區塊內容，
在進行工作轉移時，會回復已備份之資料
區塊，並且將該工作區塊新增至目標處理
器上，以繼續執行原先之工作狀態。工作
轉移之概念如圖 4 所示 
圖 3 :資料回復點運作概念之虛擬碼 
 
 
  圖 4 工作轉移之概念圖 
 
3.1.4 動態記憶體管理機制 
DSP 備份所需的記憶體是由 ARM 端管
理。每顆 DSP 在使用 Checkpoint API 進行
資料備份之動作時，需透過 IPC 向 ARM 要
一塊特定的大小的記憶體，ARM 則會尋找
一塊適合的記憶體區域給 DSP 使用，流程
如圖 5。 
在 DSP 因錯誤而重新啟動後，或由另一顆
正常的 DSP 接手任務時，可以向 ARM 詢
問之前所備份資料的記憶體區塊位址，藉
由之前備份好的資料來回復到錯誤之前的
狀態，流程如圖 6。 
 
 
Void RecoveryPoint (void) 
{ 
Identify Backup area location 
If (Backup area located in on-board 
memory ) 
{ 
Restore all Tasks Data from backup area 
Restore the Stack Pointer to DSP 
registers 
Pop all Contexts from stack 
Resume the status and return to task 
execution 
} 
Else 
{ 
Send a message for MPU to restore all 
Tasks Data from backup area 
Restore the Stack Pointer to DSP 
registers 
Pop all Contexts from stack 
 
Resume the status and return to task 
execution 
} 
} 
 8
Recovery Point is failure, task migration can 
ensure the work be carried out continuously. 
 
5 計畫成果自評	
 
本計畫在既有之多核心系統平台上，建立
容錯機制，當系統出現異常時，透過此機
制可以讓系統更穩定的執行與運作，另外
提供記憶體動態配置，支援更為彈性化的
記憶體管理，讓使用者在開發應用程式的
過程中能夠應用程式的需求，調整至最佳
系統狀態。 
 
6 參考文獻	
\[1] R. Dorsch, R.-H. Rivera and H.-J. 
Wunderlich et al., "Adapting an SoC to ATE 
concurrent test capabilities," in Test 
Conference, 2002. Proceedings. International 
on, 2002, pp. 1169-1175. 
[2] S. Dasnurkar and J. Abraham, 
"Real-time dynamic hybrid BiST solution for 
Very-Low-Cost ATE production testing of 
A/D converters with controlled DPPM," in 
Quality Electronic Design (ISQED), 2010 
11th International Symposium on, 2010, pp. 
562-569. 
[3] Z. Liang, I. Ghosh and M. S. Hsiao, "A 
Framework for Automatic Design Validation 
of RTL Circuits Using ATPG and 
Observability-Enhanced Tag Coverage," 
Computer-Aided Design of Integrated 
Circuits and Systems, IEEE Transactions on, 
vol. 25 issue 11, pp. 2526-2538, Nov. 2006. 
[4] M. D. Hill and M. R. Marty, "Amdahl's 
Law in the Multicore Era," Computer, vol. 
41 issue 7, pp. 33-38, July 2008. 
[5] W. Wolf, "The future of multiprocessor 
systems-on-chips," Proceedings of the 41st 
annual Design Automation Conference, San 
Diego, CA, USA, 2004. 
[6] W. Wolf, A. Jerraya and G. Martin, 
"Multiprocessor System-on-Chip (MPSoC) 
Technology," Computer-Aided Design of 
Integrated Circuits and Systems, IEEE 
Transactions on, vol. 27 issue 10, pp. 
1701-1713, Oct. 2008. 
[7] "PAC Duo SoC Specification," 
http://pac.itri.org.tw/Default.aspx 
[8] J. Chen, C.-P. Young and D.-W. Chang 
et al., "Building Multi-kernel Embedded 
System on PAC Multi-core Platform," in 
Quality Software (QSIC), 2010 10th 
International Conference on, 2010, pp. 
465-472. 
[9] J. D. George Coulouris, Tim Kindberg, 
"Distributed systems: concepts and design," 
Addison-Wesley Publishers, New York, 
2005. 
[10] P. Jalote, "Fault tolerance in distributed 
systems," PTR Prentice Hall Publishers, 
Englewood Cliffs, 1994. 
[11] A. Paschalis, Y. Zorian and D. 
Gizopoulos, "Embedded processor-based 
self-test," Kluwer Academic Publishers, 
London, 2004. 
[12] N. Bonvin, T. G. Papaioannou and K. 
Aberer "A self-organized, fault-tolerant and 
scalable replication scheme for cloud 
 10
issue 4, pp. 461-475, Apr. 2005. 
[27] M. Psarakis, D. Gizopoulos and E. 
Sanchez et al., "Microprocessor 
Software-Based Self-Testing," Design & 
Test of Computers, IEEE, vol. 27 issue 3, pp. 
4-19, May 2010. 
[28] G. Xenoulis, D. Gizopoulos and N. 
Kranitis et al., "Low-cost, on-line 
software-based self-testing of embedded 
processor cores," in On-Line Testing 
Symposium, 9th IEEE, 2003, pp. 149-154. 
[29] A. Paschalis and D. Gizopoulos, 
"Effective software-based self-test strategies 
for on-line periodic testing of embedded 
processors," Computer-Aided Design of 
Integrated Circuits and Systems, IEEE 
Transactions on, vol. 24 issue 1, pp. 88-99, 
Jane. 2005. 
[30] C.-H. Chen, C.-K. Wei and T.-H. Lu et 
al., "Software-Based Self-Testing With 
Multiple-Level Abstractions for Soft 
Processor Cores," Very Large Scale 
Integration (VLSI) Systems, IEEE 
Transactions on, vol. 15 issue 5, pp. 505-517, 
May 2007. 
[31] A. M. K. Cheng, "Real-time systems: 
scheduling, analysis and verification," 
Hoboken, Wiley-Interscience Publishers, 
2002. 
[32] Q. Li and C. Yao, "Real-time concepts 
for embedded systems," CMP Books 
Publishers, San Francisco, 2003. 
[33] A.-C. Shaw, "Real-time systems and 
software," New York, John Wiley Publishers, 
2001. 
[34] J.-J. Labrosse, "MicroC/OS-II: the 
real-time kernel," San Francisco, CMP 
Books Publishers, 2002. 
 
 
 II 
目的 
此次出席 2011 International Conference on Circuits, System and Simulation 有下列  
之目的: 
1. 發表本團隊最近在多核心嵌入式軟體之研究成果。 
2. 觀察系統或模擬相關領域之最新研究狀況與發展趨勢，並與專家學者切磋
討論，期能激發並創新未來之研發方向。 
3. 結識同領域之學者，進而尋求國際合作與研究之契機。 
 
一、過程 
2011 年電路、系統與模擬國際研討會(2011 International Conference on Circuits, 
System and Simulation, ICCSS 2011)，舉辦之日期為 2011年 5月 28日(星期六)至 5
月 29日(星期日)，地點在泰國曼谷，由 International Association of Computer Science 
& Information Technology 主辦，本會議為一綜合性的研討會，探討任何關於電路、
系統及模擬之開發及研究，總共有五十一篇論文發表於 12 個 session。 
 
本次會議有兩場開幕的 Plenary speech，演講者 Prof. Jun Wang, The Chinese 
University of Hong Kong, China 及 Prof. Subhas C. Misra, Indian Institute of 
Technology, Kanpur, India。 
 
本人在 5月 29日下午口頭發表論文，題目為「汽車應用之異質性多核心嵌入式
平台之開發」“Development of Heterogeneous Multi-core Embedded Platform for 
Automotive Applications,” Ting-Ying Wei, Zhi-Liang Qiu, Chung-Ping Young and 
Da-Wei Chang，此次本人發表之論文主要是應用於汽車之異質性多核心嵌入式軟
體平台之開發，主要是基於工研院所開發之 PAC Duo 處理器所建構在不同處理器
核心上之不同的嵌入式作業系統及兩者間之溝通機制，以滿足不同的功能需求，
未來因應其他基於多核心處理器之嵌入式系統開發，在系統之管理控制及多媒體
資料處理亦可以此架構移植實現。 
 
由於此研討會之議程較為緊湊，所以演講者的發表時間都嚴格控制，且提問之
時間亦頗為侷限，僅能利用 coffee break 或中午用餐時間與其他學者討論或交換聯
繫方式。我的論文發表報告結束後有聽眾提問關於硬體平台及汽車應用之實驗細
節，在時間限制下僅能概略地回覆，但是個人覺得此次會議的報告及會後與其他
學者的問題討論可謂收穫豐富。此外會議中有數篇論文與本計劃發展方向符合，
對未來之開發與執行有相當之助益，所以在會議中較為注意，會後也與講者稍作
交談。 
 
A Design & Implementation of Collision Avoidance System (CAS) for Automobiles using Embedded 
 IV 
 
Development of Heterogeneous Multi-core Embedded 
Platform for Automotive Applications 
 
Ting-Ying Wei, Zhi-Liang Qiu, Chung-Ping Young+ and Da-Wei Chang 
Department of Computer Science and Information Engineering 
National Cheng Kung University, Tainan, Taiwan 
 
Abstract. Car electronics dominates the functionality of a modern automobile. To meet the 
requirements of low cost, high performance, compact size and versatile operation, multi-core 
system-on-chip (SoC) embedded systems play an important role for system architecture and development. 
To accommodate a variety of control and computation requests of embedded systems, a heterogeneous 
multi-core processor can satisfy different types of computational tasks. However, such architecture brings 
software development more complexity and challenges. Dual-kernel embedded software was developed 
for PAC Duo, which consists of one ARM processor and two PAC DSPs developed by Industry 
Technology Research Institute (ITRI), Taiwan, with Linux on ARM processor and μC/OS-II on PAC 
DSP. An inter-processor communication (IPC) mechanism, which takes advantages of hardware features, 
was developed to fulfill the heterogeneous multi-core interconnection. The real-time process migration 
between DSPs was realized for load balancing enhancement. Therefore, the heterogeneous multi-core 
system software will be suitable for automotive applications.  
 
Keywords: Automotive, heterogeneous multi-kernel, system-on-chip, PAC 
99 年度專題研究計畫研究成果彙整表 
計畫主持人：楊中平 計畫編號：99-2220-E-006-009- 
計畫名稱：嵌入式多核心平台開放系統與應用軟體開發(III) (嵌入式系統軟體技術開發分項)--子計
畫二:基於 PAC Duo 之異質性多核心嵌入式作業系統開發 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 3 3 100%  
博士生 1 1 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 1 1 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
