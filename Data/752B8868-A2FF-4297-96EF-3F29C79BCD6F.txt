中文摘要
(關鍵詞: 子空間追蹤技術, 盲目等化器)
本報告目的是說明及檢討本計畫執行之結果。 本計畫目的是探討建立一串接次系統聯合設計 方法及其在通訊
系統與訊號處理的應用。 本計畫執行已二年, 計畫成果是我們使用此設計方法, 提出通訊系統中盲目等化器離線式
(Off-line) 及適應式 (On-line) 式的新設計方法。 由於本計畫的執行, 使我們對通訊系統的盲目等化器, 有更加清楚
的認識。 也使我們對使用子空間技術的掌握更有信心。 因此我們針對如何使用子空間技術及串接次系統聯合設計方
法, 推導及設計通訊系統中盲目等化器與模擬結果, 為此總結報告的主要內容。
1
報告內容: 使用子空間技術之離線與適應性盲目等化器之設計, (Design of Off-Line
and Adaptive Blind Equalizers in Communication Systems Using Sub-
space Approach)
abstract
In wireless communication systems, equalization is often required in order to suppress the intersymbol
interference (ISI) caused by multipath channels. Conventional approaches use training sequences for equal-
izer design which wastes the bandwidth. The blind equalizer can perform equalization in no need of the
training sequences and thus achieves more efficient channel bandwidth usage. In this report, we presents
new methods based on the subspace approach for computing fractionally spaced blind equalizers in single
input multiple output (SIMO) systems. We first present a new oﬄine method using the properties of the
channel matrix structure and the ideal of mutually referenced filters. This method is later used to de-
velop an adaptive blind equalizer by employing the orthogonal projection approximation subspace tracking
(OPAST) algorithm and the bi-iteration singular value decomposition. We also use the idea of mutually
reference filters to develop a new blind equalizer design using the iterative least squares method. Finally,
simulation are performed to demonstrate the better performance of the proposed algorithms compared to
existing approaches.
1 Introduction
In wireless communication systems, equalization process is often necessary in order to suppress the inter-
symbol interference (ISI) caused by channels with multi-path phenomena. The conventional equalization
design is usually performed by using the information known in a priori contained in a training sequence.
Since the communication channels are usually time varying, the training sequence must be sent periodically.
Hence, much bandwidth is wasted by sending the training sequence. The equalizer designed in no need of
the training sequence, referred to as the blind equalizer, draws much research interest in recent years in
order to obtain a more efficient channel bandwidth [1], [2].
Early blind equalizer is designed using a symbol-rate sampled mono-channel transmission model in
terms of second order or high order statistics of the received signals [1]-[4]. The corresponding adaptive
methods are classically designed via the stochastic gradient descent scheme for minimizing one designed
cost function. Lately, the use of either the fractionally spaced samples in one sensor or multiple sensors
reception arrays is employed for the design of blind equalizer mainly for two reasons. One is that some
high order statistics methods such as the constant modulus algorithm (CMA) can be shown to be globally
convergent in this scheme and the other is that the blind equalizer is shown to be achievable in this scheme
merely based on the second order statistics of the received signals [5].
Based on the multiple FIR channel model and second order statistics of the channel outputs, many
methods for blind equalizer design have been proposed. Some methods perform the blind channel identi-
fication first, then the equalizer is designed from the obtained channel. Some methods, such as the linear
prediction-based approach [6], require partial channel information; these methods are robust to channel
order overestimation but the performance will be degraded by the error in channel estimation.
Recently, the subspace approach is an important technique for blind equalizer design because the
closed form solution can be derived via this approach. This approach, in noise-free condition, yields perfect
channel estimation using only a finite number of data. The subspace algorithms decompose the received
data into two mutually orthogonal subspaces, namely the signal subspace and the noise subspaces. The
orthogonality between the signal and nose subspace enables direct channel identification or even direct
estimation of input symbols [1]-[4].
There are also some other methods that use neither channel estimation nor the structure of channel
matrix, like mutually referenced equalizers (MREs) [5]. In these cases, these methods requires nonlinear
optimization, which may affect their convergence speed and lager number of computations.
3
the T -sampled impulse of the i-th channel, xi(n) the baud-rate signal measured at the output of the i-th
channel, ni(n) the corresponding noise sequence, and L the number of channels.
Figure 1: Baud-rate digital multiple sensor model
Collecting all L channel measured outputs, channel responses, and measured noise together as vectors,
we have
x(n) =
 x0(n)...
xL−1(n)
 , h(n) =
 h0(n)...
hL−1(n)
n(n) =
 n0(n)...
nL−1(n)

The vector form of (2) can be obtained as below
x(n) =
∞∑
m=−∞
smh(n−m) + n(n). (3)
Since we assume that h(t) is causal and of finite duration, then all channel response hi(n) is finite. Assume
that the maximum length of hi(n) is of order M , then the equation (3) can be represented in a matrix
5
Table 1: Matrix Size
matrix size type
H NL× (N +M) block Toeplitz matrix
s(n) (N +M)× 1 vector
nN (n) NL× 1 vector
xN (n) NL× 1 vector
Note that the above equation (6) is in the same form as (2); hence the received data obtained by oversam-
pling on a single sensor can be expressed in the identical form as the received data from multiple sensors
when the oversampling factor L is equal to the number of sensors. Similar relations can be obtained
straightforwardly by combining both the oversampling and multiple sensors; that is, given K sensors and
the oversampling factor P , the received data can be expressed in the same form as (5) when L = KP.
2.4 Zero-Forcing Equalizer
The channel matrix H in (5) is of size LN×(M+N). Let LN ≥M+N and assume H is full rank, the zero-
forcing equalizer can be obtained from the pseudoinverse of the channel matrix H which is (HHH)−1HH
where the superscript H denotes the hermitian operation. Multiplying (5) on the left by (HHH)−1HH ,
we obtain
sˆ(n) = (HHH)−1HHxN (n) = s(n) + (HHH)−1HHnN (n) (7)
Clearly, sˆ(n) = s(n) for noise-free condition. Note that the zero-forcing equalizer cannot be obtained
directly in practice because the channel matrix is unknown. The reason we list the result here is that
most blind equalizer design via subspace approach can be seen as a way to obtain the pseudoinverse of
the channel matrix. The pseudoinverse of the channel matrix is called the equalization matrix denoted as
below
Z = (HHH)−1HH =
 z
H
0
...
zHM+N−1
 (8)
Note that any row of the equalization matrix Z can be realized as an FIR equalizer as shown in Fig. 2,
where gi(n) for i = 0, 1, . . . , L− 1 is the component of the d-th row of Z where d can be either one chosen
from 0 to N +M − 1. That is,
zd =
[
g0(0) . . . gL−1(0) . . . g0(N − 1) . . . gL−1(N − 1)
]H (9)
The output of this equalizer, denoted as sˆd(n), is obtained as below
sˆd(n) = zHd xn(n) (10)
which will approximate sn−d, the d delayed input data.
2.5 Subspace Blind Equalizer
In this section, we present shortly how the subspace approach is used to design a blind equalizer. The
subspace approach needs first to obtain the information of the autocorrelation matrix R0 of the received
signal vector xN (n), given by
R0 = E(xN (n)xHN (n)) (11)
7
Table 2: Subspace Matrix Size
matrix size
Λ1 = Λ+ σ2nI (M +N)× (M +N)
Λ2 = σ2nI (LN −M −N)× (LN −M −N)
S LN × (M +N)
N LN × (LN −M −N)
2.7 Blind Equalizer Matrix
When the noise is assumed free, we then obtain
R0 = σ2sHH
H = SΛ1SH (15)
Given R0 and its subspace decomposition, for noise-free condition, we may estimate the channel matrix as
below
Hˆ = cSΛ1/21 Q
H (16)
where c is an unknown scale constant and Q is also an unknown orthonormal matrix. Therefore, we can
obtain via the subspace decomposition the estimate of the channel matrix up to an unknown orthonormal
matrix and an unknown scale constant. Note that the design of single-input single-output blind equalizers
inevitably results in an ambiguity of a scale constant; hence we assume the constant c equal to 1 in the
sequel, that is, Hˆ = SΛ1/21 Q
H . The critical step in the design of blind equalizers using the subspace
approach then lies in how to determine the unknown matrix Q; several approaches will be discussed in this
thesis.
The equalization matrix in (8) can be obtained using (16) and assuming c = 1, yielding
Z = (HˆHHˆ)−1HˆH
= QΛ−1/21 S
H
(17)
The equalized output after the operation of equalization matrix can be shown below to be white:
ZR0Z
H = I (18)
The above result means that the equalized output for any orthonormal matrix Q will be white; the whitened
output, however, is not enough to assure the equalizer performance. Hence, extra criteria will be required
to determine an adequate design of the matrix Q.
3 Subspace Off-Line Equalizer Design
In this section, we present the off-line design methods of blind equalizers using the subspace approach shown
in previous section. The first section illustrates the approach proposed in [1] which uses the crosscorrelation
matrix to determine the matrix Q. Then, in second and third section, we present two design methods to
compute Q.
9
which can be shown directly from (25). One way to choose the best delayed equalizer in the equalizer
matrix Z is to minimize the following constant modulus index
D(d) = E{(∣∣zHd xN (n)∣∣2 − 1)2} (29)
The equalizer having the smallest D value will be considered as the best delayed equalizer.
In summary, the channel output whitening algorithm for direct equalization is listed in following:
1. Define the equalizer length N, which should be used reasonably large to satisfy the condition LN ≥
(M +N).
2. Compute the correlation matrix R0 and R1 in (11) and (23).
3. Estimate the signal subspace of rank M +N by computing the subspace decomposition of R0.
4. Compute R2 (25) and its SVD.
5. Estimate Q according to (28), and compute the equalization matrix Z (17).
6. Choose the best delayed equalizer in Z according to (29)
3.2 Estimate Q with Channel Matrix structure Method
This method exploits the idea of mutually referenced filters (MREs) and the special property Toeplitz
structure of the channel matrix to design the blind equalizer. Instead of estimating all equalizers in a
equalization matrix, the method proposed Here estimates one equalizer with the delay d = int((M +N)/2)
which, as commonly done in equalizer design, results in good performance.
We observe that the channel matrix H is a Toeplitz structure of LN × (M + N); excluding the first
row of H yields Hr as below
Hr =

0 h(0) h(1) . . . h(M) 0 . . . 0
...
...
. . . . . . . . . . . . . . .
...
0 . . . 0 h(0) h(1) . . . h(M) 0
0 . . . 0 0 h(0) h(1) . . . h(M)
 (30)
Since the channel matrix H is assumed full rank ofM +N, the rank of Hr, of course, isM +N −1 because
of the existing first zero column in Hr. ¿From (16) H = SΛ
−1/2
1 Q
H and define F = SΛ−1/21 ; it follows that,
H = FQH (31)
Also define Fr obtained from F by truncating its first row; we obtain the following equation:
Hr = FrQH (32)
Again using QH = [q0, . . . ,qM+N−1] in (32), we obtain
Frq0 = 0 (33)
Therefore, the vector q0 can be obtained as the eigenvector of FHr Fr corresponding to the zero eigenvalue;
equivalently, q0 can be obtained from the SVD of Fr. The solution of q0 can also be obtained from the
following optimization problem
min
q0
qH0 F
H
r Frq0 s.t. ‖q0‖ = 1 (34)
11
3.3 Estimate Q with Iterative Least Square Method
We observe that to estimate the equalizer matrix Z usually needs to compute the auto-correlation and cross-
correlation matrices of received signals. Here we present one new algorithm similar to that of mutually
referenced filters (MREs) to derive equalizer matrix; this approach only uses the autocorrelation matrix of
received signals.
As discussed above, given q0, we can obtain q1 and qi for i > 1 recursively. Denote AN as below
AN =

yHN
yHN+1
...
yH2N+M−2
yH2N+M−1
...

(44)
where the row number of AN is greater than the rank of channel matrix H (rank(H) =M +N). Let BN
obtained by excluding the first low of AN and adding the last received signal yHnew in the last row as below
BN =

yHN+1
...
yH2N+M−2
yH2N+M−1
...
yHnew

, (45)
The MRE (39) enables us to write the following equation
ANqi = BNqi+1 for 0, . . . ,M +N − 2 (46)
Since the row numbers of AN and BN are greater than the rank of channel matrix H, we can assume that
both AN and BN are full rank, thus both AN and BN have pseudoinverse matrices,
A†N =
(
AHNAN
)−1
AHN (47)
B†N =
(
BHNBN
)−1
BHN (48)
Multiplying (46) by B†N on the left yields
B†NANqi = qi+1 for 0, . . . ,M +N − 2 (49)
Hence, the equation (49) enables us to obtain from an initial q0 to compute qi i ≤ 1 as shown in the flow
path below
q0 −→ q1 −→ . . . −→ qM+N−2 −→ qM+N−1
Similarly, the same operation (39) can be reversed; multiplying (39) by A†N we obtain
qi = A
†
NBNqi+1 for M +N − 2, . . . , 0 (50)
Given qM+N−1 we can obtain qi via (50) as shown in the flow path below
q
′
0 ←−q
′
1 ←− . . .←− q
′
M+N−2 ←− q
′
M+N−1
13
Table 3: PAST Algorithm
q(t) = 1αZ(t− 1)y(t)
y(t) =WH(t− 1)r(t)
γ(t) = 1
(1+yH(t)q(t))
p(t) = γ(t) (r(t)−W (t− 1)y(t))
Z(t) = 1αZ(t− 1)− γ(t)q(t)q(t)H
W (t) =W (t− 1) + p(t)qH(t)
where we know the fact that WH(t − 1)p(t) = 0 from PAST algorithm, and define x , ‖p(t)‖q(t).
Therefore
(
WH(t)W (t)
)−1/2
= I +
1
‖x‖2
 1√
1 + ‖x‖2
− 1
xxH (54)
= I + τ(t)q(t)q(t)H (55)
where
τ(t) , 1‖q(t)‖2
 1√
1 + ‖p(t)‖2 ‖q(t)‖2
− 1
 .
Exploiting (53), (55) and the iterating of W (t), we can have
W (t) =
(
W (t− 1) + p(t)Hq(t)) (I + τ(t)q(t)q(t)H) (56)
=W (t− 1) + p′(t)qH(t) (57)
where
p
′
(t) , τ(t)W (t− 1)q(t) +
(
1 + τ(t) ‖q(t)‖2
)
p(t).
The OPAST algorithm can be rewritten as the PAST (Table 3) combined with that shown in Table 4.
Table 4: OPAST Algorithm
W (t) =W (t− 1) + p′(t)qH(t)
τ(t) = 1‖q(t)‖2
(
1√
1+‖p(t)‖2‖q(t)‖2 − 1
)
p
′
(t) = τ(t)W (t− 1)q(t) +
(
1 + τ(t) ‖q(t)‖2
)
p(t)
15
Table 5: Modified Algorithm
q(t) = 1αZ(t− 1)y(t)
y(t) =WH(t− 1)r(t)
γ(t) = 1
(1+yH(t)q(t))
p(t) = γ(t) (r(t)−W (t− 1)y(t))
Z(t) = 1αZ(t− 1)− γ(t)q(t)q(t)H
τ(t) = 1‖q(t)‖2
(
1√
1+‖p(t)‖2‖q(t)‖2 − 1
)
p
′
(t) = τ(t)W (t− 1)q(t) +
(
1 + τ(t) ‖q(t)‖2
)
p(t)
W (t) =W (t− 1) + p′(t)qH(t)
C(t) = αC(t− 1) + r(t)r(t)H
(W (t),Σ(t)) = C(t) orthogonalize (W (t))
Table 6: Bi-Iteration Algorithm
QA(t = 0) = IM+N for t = 1, 2, 3, . . . for each time step do
B(t) = Fr(t)QA(t− 1)
B(t) = QB(t)RB(t) : L(N − 1)× (M +N) QR-factorization
A(t) = Fr(t)HQB(t)
A(t) = QA(t)RA(t) : (M +N)× L(N − 1) QR-factorization
Define Rd = E{xN (n)xN (n+ dg)H}; the computation of Rd can be obtain below
Rd(n) = αRd(n− 1) + xN (n)xN (n+ de)H (65)
where α is forgetting factor chosen between (0, 1]. Therefore, Rdg also can be rewritten as
Rdg(n) = Λ
−1
1 F
HRd(n)FΛ−11 (66)
Combining all iterating algorithms together we obtain the adaptive equalizer which is shown in Table 7.
17
• the MRE algorithm in [5] (MRE) for estimating equalizers with all passible delays;
• the subspace algorithm [3] (TXK) for channel identification and equalization;
• the linear prediction-based algorithm in [6] (PS) for adaptive equalization.
5.1 Criteria of Performance Measure
As a performance measure, we estimate the residual intersymbol interference (ISI) over 100 Monte Carlo
runs as done in most other measurements. Let the “overall” channel impulse response be
c(n) =
L−1∑
i=0
N−1∑
j=0
gi(j)hi(n− j). (67)
The residual ISI is defined as
ISI =
∑
n |c(n)|2 −maxn |c(n)|2
maxn |c(n)|2
(68)
We also estimate the signal-to interference-and-noise ratio (SINR) of the equalizer output, which may be
more suitable for studying the noise performance
SINR =
σ2s maxn |c(n)|2
σ2s
(∑
n |c(n)|2 −maxn |c(n)|2
)
+ σ2n
∑
i
∑
j |gi(j)|2
(69)
where σ2s is the variance of the transmitted symbols.
For all simulations, the signal-to-noise ratio (SNR) is for the input to the equalizer
SNR =
E
{
|x(n)− n(n)|2
}
E
{
|n(n)|2
} . (70)
For each experiment, we use an i.i.d. input sequence drawn from a 16-QAM constellation. The noise is
drawn from a white Gaussian distribution at a varying SNR. The channel is drawn from Table 9 [2].
Table 9: Channel Coefficients [2]
h(0) h(1) h(2) h(3) h(4)
−0.049 + 0.359i 0.482− 0.569i 0.556 + 0.587i 1 −0.171 + 0.061i
0.443− 0.0364i 1 0.921− 0.194i 0.189− 0.208i −0.087− 0.054i
−0.221− 0.322i −0.199 + 0.918i 1 −0.284− 0.524i 0.136− 0.190i
0.417 + 0.030i 1 0.873 + 0.145i 0.285 + 0.309i −0.049 + 0.161i
The number of subchannels is L = 4, the channel order is M = 4, and chooses N = 4 to let the delay
be d = 4. In addition to above channel model [2], we also use the channel impulse response in [3] that is an
approximation of two-ray multipath environment and the channel is obtained from delayed raised consine
pulses. A single pulse is described by ct(t, β) where β is a roll-off factor. The channel impulse response is:
h(t) = (0.2c(t, 0.11) + 0.4c(t− 0.25, 0.11))W6T (t) (71)
where W6T (t) is a square window of duration 6 symbol interval and is shown in Fig. 3
19
−4 −3 −2 −1 0 1 2 3 4−3
−2
−1
0
1
2
3
4
Received Data
Real
−4 −3 −2 −1 0 1 2 3 4−4
−3
−2
−1
0
1
2
3
4
Channel Output Whitening Method (Howard Fan)
Real
Figure 4: Signal constellations for 500 symbols at SNR=25dB. (a) Without equalization. (b) After equal-
ization using Fan’s method.
−4 −3 −2 −1 0 1 2 3 4−4
−3
−2
−1
0
1
2
3
4
Channel Structure Method
Real
−4 −3 −2 −1 0 2 4 3 4−4
−3
−2
−1
0
1
2
3
4
Iterative Least Square Method
Real
Figure 5: After equalization using Channel Structure and Iterative Least Square method.
0 10 20 30 4010
−6
10−4
10−2
100
102
SNR (dB)
ISI Comparison
 
 
Channel Structure Method
Fan
Iterative Least Square Method
TXK
MRE
0 10 20 30 4010
−6
10−4
10−2
100
102
SNR (dB)
ISI Comparison
 
 
Channel Structure Method
Fan
Iterative Least Square Method
TXK
MRE
Figure 6: ISI Performance for different SNRs. ( (a) 250 and (b) 750 symbols)
squares approach to for design the blind equalizer. Simulations are also performed to demonstrate that
our algorithms yield better performance with respect to the measures of ISI and SINR.
21
5 10 15 20 25 30 35 40
SNR (dB)
SINR of Equalizer Output
 
Channel Structure Method
Fan
Iterative Least Square Method
TXK
MRE
5 10 15 20 25 30 35 40
SNR (dB)
SINR of Equalizer Output
 
Channel Structure Method
Fan
Iterative Least Square Method
TXK
MRE
Figure 11: SINR performance versus SNR using TXK channel with 500 symbols. ( (a) N=5 and (b) N=7)
500 1000 1500 2000
Data Length
ISI Comparison
 
Channel Structure Method
Fan
Iterative Least Square Method
TXK
MRE
250 500 750 1000 1250 1500 1750 2000
Data Length
ISI Comparison
 
Channel Structure Method
Fan
Iterative Least Square Method
TXK
MRE
Figure 12: ISI performance versus symbol number using TXK channel with SNR=25dB. ( (a) N = 5 and
(b) N = 7)
250 500 750 1000 1250 1500 1750 2000
Data Length
SINR of Equalizer Output
 
Channel Structure Method
Fan
Iterative Least Square Method
TXK
MRE
250 500 750 1,000 1,250 1,500 1,750 2000
Data Length
SINR of Equalizer Output
 
Channel Structure Method
Fan
Iterative Least Square Method
TXK
MRE
Figure 13: SINR performance versus symbol number using TXK channel with SNR=25dB. ( (a) N = 5
and (b) N = 7)
References
[1] X. Li and H. Fan, “Direct Blind Equalization with Best Delay by Channel Output Whitening,” IEEE
Trans. Signal Processing, Vol. 49, pp.1556-1563, July 2001.
[2] E. Moulines, P. Duhamel, J.F. Cardoso, and S. Mayrargue, “Subspace Methods for the Blind Identi-
fication of Multichannel FIR Filters,” IEEE Trans. Signal Processing, Vol. 32, pp.516-525, Feb. 1995.
[3] L. Tong, G. Xu, and T. Kailath “Blind Identification and Equalization Based on Second-Order Statis-
tic: A Time Domain Approach,” IEEE Trans. Information Theory, Vol. 40, pp.340-349, March 1994.
[4] A.A. Farid, Z.Q. Luo, and Z.Ding “Blind Channel Equalization Based on Second Order Statistics,”
IEEE Int. Conf. Acoust, Speech, and Signal Process, vol. 3, pp. 557-560, March 2005.
23
0 500 1000 1500 2000 2500 300010
−3
10−2
10−1
100
101
SNR (dB)
ISI Comparison
 
 
Adaptive Channel Structure Method
Linear Prediction
0 500 1000 1500 2000 2500 3000−10
−5
0
5
10
15
20
25
SNR (dB)
SINR of Equalizer Output
 
 
Adaptive Channel Structure Method
Linear Prediction
Figure 17: ISI and SINR performance versus symbol number of adaptive algorithm using TXK channel
with N=7 and 30dB.
0 10 20 30 4010
−3
10−2
10−1
100
101
SNR (dB)
ISI Comparison
 
 
Adaptive_Channel Structure Method
Linear Prediction
0 10 20 30 40−5
0
5
10
15
20
25
SNR (dB)
SINR of Equalizer Output
 
 
Adaptive Channel Structure Method
Linear Prediction
Figure 18: ISI and SINR performance versus SNR of adaptive algorithm using TXK channel with N=7
and 1500 symbols.
[8] K.A. Meraim, A. Chkeif, and Y. Hua, “Fast Orthonormal PAST Algorithm,” IEEE Trans. Signal
Precessing, vol. 7, pp. 60-62, March 2000.
[9] P. Strobach, “Bi-Iteration Recursive Instrumental Variable Subspace Tracking and Adaptive Filter-
ing,” IEEE Trans. Signal Precessing, vol. 46, pp. 2708-2725, Oct. 1998.
[10] J. Yang, H. Xi, F. Yang, and Y. Zhao, “RLS-Based Adaptive Algorithms for Generalized Eigen-
Decomposition,” IEEE Trans. Signal Precessing, vol. 57, pp. 1177-1188 , April 2006.
[11] J. Fang, A.R. Leyman, and Y.H. Chew, “Blind Equalization of SIMO FIR Channels Driven by Colored
Signals with Unknown Statistics,” IEEE Trans. Signal Precessing, vol. 54, pp. 1998-2008 , June 2006.
[12] G.B. Giannakis and S.D. Halford, “Blind Fractionally Spaced Equalization of Noisy FIR Channels:
Direct and Adaptive Solutions,” IEEE Trans. Signal Precessing, vol. 45, pp. 2277-2292 , Sept. 1997.
[13] P. Balaban and J. Salz, “Optimum Diversity Combining and Equalization in Digital Data Transmission
with Applications to Cellular Mobile Radio. I. Theoretical Considerations,” IEEE Trans. Comm., vol.
40, pp. 885-894 , May 1992.
[14] G.H. Golub and C.F. Van Loan, Matrix Computations, Baltimore, MD: Johns Hopkins Univ. Press,
1983.
[15] Z.ding and Y. Li, Blind Equalization and Identification, Marcel Dekker, Inc., 2001.
25
