communication architecture based on MIH Information service 
(MIH-IS) to supporting continuous multimedia services, such as 
VoIP and VoD, in NGN. The architecture supports these features as 
follows: 1) multimedia service guarantee based on user profile, 2) 
motion detection based on MIH-IS and optimal seamless handover, 
3) path information of point to point based on MIH-IS, 4) optimal 
multipath selection, 5) high performance multipath or parallel 
transmission service, 6) high performance and incentive based rate 
allocation, 7) continuous multimedia service. 
To maintain high quality multimedia services, we propose an MIH-
IS based intelligent user motion detection sensor to support power 
economical seamless handoff. Through motion-awareness, mobile 
MTs can reduce power consumption of network discovery 
procedure during a handoff and maintain high quality services. 
Furthermore, we present a novel paradigm called Incentive-based 
Hierarchical Rate Allocation (IHRA) that source allocate fairly 
uploading bandwidth to multi-mode MTs to prevent free riding 
problem.  
When multi-mode MTs communicate, they can exploit the 
concurrent transmission paths existed between them for improving 
transmission throughput. In this research, we investigate a cross 
layer model between application layer, transport layer and MAC 
layer to optimize end-to-end throughput while achieving a stable 
and low management cost TCP connection service. 
 
 
 2 
亦是一個重要的議題。本年度計畫延續上一年度的研究，如何透過MIH讓兩通訊終端間在點對點的通
訊會議中建立最少與最穩定的傳輸路徑(Concurrent Multipath Transfer；CMT)，以增加系統的傳輸量
(Throughput)。在本年度計畫中，針對多終端間多個傳輸路徑的傳輸資源分配，本系統將提出數個跨通
訊的資源分配機制。利用MIH所提供的網路品質資訊，系統可有效且快速的調整通道(CMT Path)的連
線數、滑動窗大小、及多媒體資料的傳輸通道配置，以增進多通訊終端間的公平性資源分配、傳輸量
與效能。 
本研究使用 IMS/SIP 架構，作為多媒體服務建立與中斷控制、QoS 協調與連續不斷的服務的信令
控制機制。在多模行動終端之間、或多模行動終端與應用伺服器建立連線的過程中，所提出情境感
(context-aware)的 QoS控制機制，根據使用者描述檔與服務的描述檔，執行 QoS 協調與信令控制。在
連線建立過程中，根據通訊使用者雙方(多方)所定義的服務品質需求、耗電量、通訊費用、與安全性，
負責控制連續不斷服務的 IMS Service Continuity 應用伺服器(Domain SelectionFunction)，將透過所設計
的數種跨通訊層平行傳輸的資源分配演算法，配置資源符合通訊使用者雙方(多方)的最公平性。透過所
提出的跨通訊層的連續不斷的多媒體服務平台架構，本研究可提供高品質的網路語音服務與多媒體影
音服務。 
4. 研究方法 
本年度計畫完成多模行動終端的多媒體通訊系統並設計數種演算法，以提升在多模通訊下多路徑
平行傳輸系統的效能，包括(A) 4.1. 跨通訊層平行傳輸的資源分配最佳化演算法，(B) 4.2. 跨通訊層平
行傳輸的動態資源配置快速演算法。 
 
4.1.跨通訊層平行傳輸的資源分配演算法 
4.1.1. 激勵性資源分配最佳化 
使用者透過對等式網路串流技術享受高品質的多媒體服務，然而網路存在著不合作、不貢獻的使
用者，將造成多媒體服務使用的不公平性與降低網路最大資源的使用率。因此，每個使用者的資源分
配必須符合一個公平性、激勵性的機制。本研究將資源分配問題轉換為一個最佳化的問題。首先，在
無線網路環境下，假設有 N個使用者正跟來源端 S要求頻寬下載資料，且來源端 S擁有M個無線介面
網卡並假設每個無線介面網卡的最大頻寬為
1 2
,  ,  ...,  Mb b b 。因此，令 sB 為來源端S最大可用頻寬的總和(假
設
1
M
s i
i
B b
=
= ∑ )，N 個使用者各最大可用頻寬的總和亦同此模式假設。此資源分配問題忽略行動裝置本身
存在著有限資源的限制條件(例:電力 power、能源 energy等)，且行動裝置可自行設定所要分享的上載
頻寬大小。定義與來源端 S要求檔案下載的 N個使用者為 1 2,  ,  ...,  Nu u u ，且來源端 S根據使用者的貢獻
度來配置對應的上載頻寬。假設每個使用者 ru 的貢獻度為 rc ，並定義 N 個使用者的貢獻向量為
1 2[ , ,..., ]Nc c c c= 。假設使用者之間分享的移動對等式網路是由一個連結(link)集合 {1,2,..., }L l= 所組成的，每
個連結的頻寬大小為 lC  ( 0lC ≥ )，而使用者之間建立的多條路徑 {1,  2,  ...,  }P p= 是由一連續的連結所組成。
假設 rx 為來源端 S 分配給使用者 ru 的上載頻寬大小，並定義 N 個使用者分配到的上載頻寬向量為
1 2[ , ,  ..., ]Nx x x x= 。再來，根據平行 TCP機制，來源端 S可將上載頻寬 rx 透過建立多條 TCP連線 rpn 於路
徑 p P∈ 配置給各使用者 ru。令 ( )r rpn n= 為來源端S服務使用者 ru 在路徑 p P∈ 所建立的所有TCP連線數，
且定義來源端 S與 N個使用者所建立的總 TCP連線向量為 1 2 [ , ,..., ]Nn n n n= 。假設 maxpn 為每條路徑 p P∈ 中
可建立的最大連線數上限， py 為路徑 p P∈ 中的每條 TCP連線的最大資料傳輸量，且定義各路徑 p P∈ 中
TCP連線的資料傳輸向量為 1 2[  ,  ,  ...,  ]Py y y y= 。並假設任何可行的資料傳輸量 y必須滿足兩個限制條件: 
1) 傳輸路徑上最大瓶頸頻寬限制 ,  p p ln y C l L≤ ∀ ∈ ；2) 使用者 ru 接收的上載頻寬限制 r rp p
p P
x n y
∈
≤ ∑ 。最後，
每個使用者 ru 的策略定義為 ( , )r rx n ，而 rx 表示來源端 S 配置給使用者 ru 的可用上載頻寬， rn 表示來源
端 S與使用者 ru 彼此間建立的總 TCP連線數。 
令每個使用者 ru 各自擁有一個報酬(utility)函數 ( )r rU x 和一個懲罰(penalty)函數 ( )r rnΩ ，報酬函數表
示為使用者 ru 接收來源端 S配置的上載頻寬 rx 的滿意程度，懲罰函數 ( )r rnΩ 表示為來源端 S與使用者 ru
 4 
r rp p
p P
x n y∗
∈
≤ ∑  
r rp
p P
n n
∈
= ∑  
1
(0, ],
N
rp p r
r
n n p P∗
=
∈ ∀ ∈∑  
1
,
( )
, arg max  
1
p p
n y p p
p P
n y
n y w nα
−
∗ ∗
∈
=
−∑  
provided     p p ln y C≤  
1
N
p rp
r
n n
=
= ∑  
 
在此，頻寬向量 rx 與連線數向量 rn 是每個使用者 ru 的決定變數。然而 IHRA是一個 NP-hard問題，因此，
我們本計畫中提出一個整合 Lagrangian與α -資源分配機制，名稱為 LG_α_RA的方法來解決 IHRA的
問題。然而，因為α -資源分配機制需要較高的時間複雜度，因此，我們利用上年度的研究成果多重平
行 TCP連線(MPTC)能快速求得多重路徑中每條路徑的最大連線數，並將 MPTC與 Lagrangian整合，
名稱為 LA_MPTC的方法來解決 IHRA的問題適用於一般的網路上。有識於問題數學模型的可分解性，
數學規劃法(Mathematical programming approaches)，如拉氏釋限法(Lagrangian Relaxation)，在求解可分
解的(decomposable)最佳化問題時，擁有計算速度上的優勢。拉氏釋限法屬於一類原始-對偶(primal-dual)
之求解演算法，而次梯度(Subgradient)佳化方法則被用來佳化拉氏乘數(Lagrangian Multiplier)與對偶函
數。因此，當透過MPTC獲得每條路徑的最佳連線數 pn∗與每條 TCP連線的最佳傳輸率 py∗後，我們利用
原始-對偶分解的機制與次梯度的方法來解決 IHRA最佳化的問題。而 IHRA的問題即可重新簡化定義
為如下 
1
max ( log(1 ) )
N
r r p rp
r p P
c x nβ
= ∈
+ −∑ ∑  
1
given 
N
r s
r
x B
=
≤∑  
r rp p
p P
x n y∗
∈
≤∑  
 , andr rp
p P
n n
∈
= ∑  
1
N
rp p
r
n n∗
=
≤∑  
4.2. 激勵性動態資源配置快速演算法 
由於對 IHRA 的決策問題所提出的最佳化機制 LG_α_RA 與 LG_MPTC 時間複雜太高，因此，我
們在本計畫另外提出一個低複雜度、動態與次佳解的資源配置快速演算法，名稱為資源配置連數調整
(RACT)。而 RACT快速演算法分成兩個主要的步驟如下 
步驟一:初始化配置(Initial Allocation; IA) 
      首先假設第 thr 使用者能使用 rP 條路徑，此 rP 條路徑是可被調整以確保使用者在移動時路徑的變
化，因此，初始化配置的流程如下 
(1) 首先計算取得每條路徑 p的瓶頸頻寬 vb  
(2) 選擇一個周期時間 t來監測路徑瓶頸頻寬的變化 
(3) 透過MPTC來計算時間 t中每條路徑的最佳連線數 ( )pn t∗ 與每條連線的最佳傳輸率 ( ),p ry t p P∗ ∀ ∈  
 6 
5: Lsit C: record the sum of variation of satisfied value , 'ip jpS∆  
6: do 
7:     while 
1
N
r s
r
x B
=
≤∑  do 
8:           if 0 ip ipn n≤ − ∆  then 
9:               List A ,ip iS p P←∆ ∀ ∈  
10:           end if 
11:           if ' ' 'jp jp jpn n n
∗+ ∆ ≤  then 
12:               'List B , 'jp jS p P←∆ ∀ ∈  
13:           end if 
14:           if  and (-1) 0i ji j x x≠ ⋅∆ + ∆ ≤  then 
15:            , 'List C ip jpS←∆  
16:         end if 
17:         select maximal value max, '  ip jpS∆  in List C  
18:         ' ' ' ,ip ip ip jp jp jpn n n n n n= − ∆ = + ∆  
19:          ,i i i j j jx x x x x x= − ∆ = + ∆  
20:          ( 1)remain remains s i jB B x x= + − ⋅∆ + ∆  
21:          if 0remainsB < ,  then 
22:          end if 
23:     end while 
34: while ( , ' 0ip jpS >  and 0
remain
sB ≥ ) 
 
4.2.1. 初步模擬分析 
針對多模行動終端之間的跨通訊層平行傳輸的資源分配，效能函數的研究成果和參數的設定已經
進行大量的模擬。模擬的結果顯示網路環境在適當的參數設定下，本研究提出的三種方法 LG_α_RA
與 LG_MPTC與 RACT_MPTC之間做比較，圖 2、3與 4所示，三者之間的頻寬分配中，以 LG_α_RA
配置的結果差意度最大，因為 LG_α_RA 配置的方法最為樂觀，對於來源端 S 的上載頻寬使用率為最
高；相對之下，LG_MPTC與 RACT_MPTC比較符合實際網路環境的配置，但是 RACT_MPTC配置的
結果為次佳解，與 LG_MPTC 最佳化的配置方法有百分之 10-25%之間的差異，但 RACT_MPTC 只須
要較低時間複雜度 2( log )r rO NP P P+ 即可得知配置結果。註:在此假設 P 等於系統中的單一來源端 S 與所
有客戶端所有建立的路徑的總合 
1
N
r
r
P P
=
= ∑ 。 
 8 
5.1.本年度工作項目 
 開發多模行動終端的高效率與省電的異質性網路無縫換手機制 
i 以多重解析為基礎的行動裝置移動偵測MIH-IS服務 
 開發多模行動終端間最佳化資源分配 
i 開發數種激勵性最佳化資源配置演算法 
ii 開發低複雜度、動態配置快速演算法 
 建制 IMS實驗平台與開發應用伺服器控制元件 
i 建制以 OpenIMS為主的 IMS實驗平台 
 開發 IMS上的多媒體應用 
i IMS上跨通訊層的智慧型 VoIP通訊軟體 
 發表研究成果於國際會議與期刊 
5.2.具體貢獻 
 設計多模行動終端的高效率與省電的異質性網路無縫換手機制，包括 
i 以機率類神經網路為基礎的智慧型行動裝置移動偵測演算法 (已完成) 
 開發多模行動終端間最佳化資源分配 
i 開發數種激勵性最佳化資源配置演算法 (已完成) 
ii 開發低複雜度、動態配置快速演算法 (已完成) 
建制 IMS實驗平台與開發應用伺服器控制元件 
i 建制以 OpenIMS 為主的 IMS實驗平台 (已完成) 
 開發 IMS上的多媒體應用 
i IMS 上跨通訊層的智慧型 VoIP通訊軟體 (已完成) 
 論文發表：本計劃執行期間，共發表會議論文二篇，已發表期刊一篇，投稿期刊論文四篇  
已發表會議論文 
1. Tein-Yaw Chung, Cheng-Li Hsieh, Hsiao-Yi Wang, Chung-Yu Hsu and Fong-Ching Yuan, "A Fast 
Channel Switching System for IPTV based onMulti-channel Preview," in Proc. The 2011 
International Conference on Computer Games, Multimedia and Allied Technology (CGAT'4), April 
2010. 
2. Tein-Yaw Chung, Miao-En Chien, Yu-Lun Shih, Chung-Yu Hsu and Fong-Ching Yuan, " An Efficient 
Peer Selection Algorithm for Fast Channel Switching on Internet TV," in Proc. The 2011 
International Conference on Computer Games, Multimedia and Allied Technology (CGAT'4), April 
2010. 
已發表期刊 
1. Shih-Ho Chen, Tein-Yaw Chung and Yung-Mu Chen, " Game Theoretical Approaches for Transport 
Aware Channel Selection in Cognitive Radio Networks," EURASIP Journal on Wireless 
Communications and Networking, vol. 2010, Article ID 598534, 14 pages, 2010. 
已接受期刊 
1. Tein-Yaw Chung, Hao-Chieh Chang, and Hsiao-Chih Lee, "A Novel Cross-layer Mesh Router 
Placement Scheme for Wireless Mesh Networks," Accepted, to appear in EURASIP Journal on 
Wireless Communications and Networking, 2011. 
已投稿期刊 
1. Tein-Yaw Chung, Yung-Mu Chen, and Shao-Chien Tang, "A Hybrid System Integrating Signal 
Hindawi Publishing Corporation
EURASIP Journal on Wireless Communications and Networking
Volume 2010, Article ID 598534, 14 pages
doi:10.1155/2010/598534
Research Article
Game Theoretical Approaches for Transport-Aware Channel
Selection in Cognitive Radio Networks
Shih-Ho Chen, Tein-Yaw Chung, and Yung-Mu Chen
Department of Computer Science and Engineering, Yuan Ze University, 135 Yuan-Tung Road, Chung-Li 32003, Taiwan
Correspondence should be addressed to Tein-Yaw Chung, csdchung@saturn.yzu.edu.tw
Received 29 April 2010; Revised 12 October 2010; Accepted 24 October 2010
Academic Editor: Sayandev Mukherjee
Copyright © 2010 Shih-Ho Chen et al. This is an open access article distributed under the Creative Commons Attribution License,
which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.
Eﬀectively sharing channels among secondary users (SUs) is one of the greatest challenges in cognitive radio network (CRN). In
the past, many studies have proposed channel selection schemes at the physical or the MAC layer that allow SUs swiftly respond to
the spectrum states. However, they may not lead to enhance performance due to slow response of the transport layer flow control
mechanism. This paper presents a cross-layer design framework called Transport Aware Channel Selection (TACS) scheme to
optimize the transport throughput based on states, such as RTT and congestion window size, of TCP flow control mechanism. We
formulate the TACS problem as two diﬀerent game theoretic approaches: Selfish Spectrum Sharing Game (SSSG) and Cooperative
Spectrum Sharing Game (CSSG) and present novel distributed heuristic algorithms to optimize TCP throughput. Computer
simulations show that SSSG and CSSG could double the SUs throughput of current MAC-based scheme when primary users
(PUs) use their channel infrequently, and with up to 12% to 100% throughput increase when PUs are more active. The simulation
results also illustrated that CSSG performs up to 20% better than SSSG in terms of the throughput.
1. Introduction
As wireless technology advances, radio spectrum becomes a
scarce and precious resource. However, a recent investigation
by Federal Communications Commission (FCC) discovered
that the radio spectrum is being used ineﬃciently and tem-
poral and geographical utilization of the assigned spectrum
vary from 15% to 85%. This finding initiates a new area of
access network technology called Cognitive Radio network
(CRN) [1–4].
Allocating an infrequently used spectrum to primary
users and employing channel hopping to improve spectrum
utilization are the main concepts of CRN. In CRN, cognitive
radio users monitor the spectrum and then select channels
based on the monitored information. Thus, CRN is also
called a Dynamic Spectrum Access Network, in which radio
users are cognitive to their environment and dynamically
switch radio channels to exploit available spectrum holes.
Such a channel selection enables the so-called spectrum
sharing [5–7] that constitutes the core of CRN.
The spectrum sharing is designed for acquiring better
bandwidth for each CRN users without interfering with
the PUs. As time passes, the state of radio spectrum changes
whenever interference temperature [6, 8] and limitations
of the level of interference perceived by the PUs [9] vary.
Therefore, CRN users (a. k. a secondary users: SUs) must
periodically sense the nearby environment to collect channel
usage information and find a better channel within the
spectrum while avoiding the interference with PUs as shown
in Figure 1. SUs have to leave a channel immediately when
PUs want to use the channel.
The foremost issue for spectrum sharing in a fluctuating
CRN spectrum is to select an appropriate channel for SUs’
temporally use. Another issue to be considered is when an
SU must change the channel being used. In the past, many
studies perform spectrum sharing by using power control
game [10–13] or by taking statistical sensing approach by
a MAC scheduler [9]. These schemes have the merit of fast
channel hopping in response to any changes in the spectrum
state and thus may help SUs achieve a large bandwidth.
However, as the physical layer or the MAC layer quickly
switches channels, the transport users may not be able to
enjoy the full link bandwidth. This is mainly because the flow
control mechanism employed in the transport layer cannot
EURASIP Journal on Wireless Communications and Networking 3
Radio environment
Spectrum sharing Spectrum sensing
Spectrum analysis
Channel capacity
Transmitted signal
RF stimuli
Common control channel
Information on spectrum
holes and transport layer
Figure 2: Cognitive cycle in TACS.
Application layer
Transport layer
Network layer
Link layer
Physical layer
Flow control mechanism,
Scheduling
Spectrum
sensing
Spectrum
sharing
TACS
round-trip delay information
Figure 3: Network communication functionality of the Cross-Layer
Design.
3. Transport Aware Cognitive Radio Network
This section first presents the network model and assump-
tion of our proposed Transport Aware Channel Selection
(TACS) in Section 3.1 and then describes two TACS games,
selfish spectrum sharing game (SSSG), and cooperative
spectrum sharing game (CSSG) based on whether it concerns
its inference to other SUs or not. Decentralized algorithms to
implement them are also presented.
3.1. TACS Architecture and Network Model. The model of
CRN we consider comprises a set of M transceiver pair of
SUs and a set of N channels, each designated to a PU. SUs
can access the spectrum with idle channels when their PUs
are inactive. Each SU estimates its transport throughput by
CW and RTT of a TCP connection, periodically broadcasts
the TCP information and channel information to the control
channel, and does the channel selection based on the TACS
according to the transport information received from the
control channel every Δt.
While using a channel, the SU keeps monitoring the
behavior of PUs. Once it detects existence of a PU in the
channel it is using, it hops to a new channel based on the
current transport information; otherwise, it continues to
access the channel with 802.11 MAC protocol until next
decision time. Figure 2 summaries the cognitive cycle in
TACS, in which each SU performs three key functions as
follows.
(i) Spectrum Sensing: Monitoring the available spec-
trum and spectrum holes and gathering the required
information [11] from the monitored spectrum.
(ii) Spectrum Analysis: Analyzing spectrum holes from
the spectrum sensing and the transport information
from the control channel.
(iii) Spectrum Sharing: Choosing a channel according to
the spectrum analysis.
The protocol architecture of TACS is shown in Figure 3.
We employ the parameters of flow control mechanism using
TCP for channel selection at the MAC layer. A transport
aware channel selection (TACS) agent is used to advertise the
transport information to the common control channel and
issues channel hopping commands to the MAC layer so as to
maximize our defined utilities that could reflect the transport
layer capacity of SUs.
While the issues in CRN are very complex, this study
focuses on the performance of TACS andmakes the following
simplifying assumptions for the underlying environment.
(i) Assume SU only uses TCP to communicate with one
partner at a time and the communicating users make
channel decision synchronously.
(ii) Assume the transmission delay between SUs over the
common control channel does not aﬀect the timeli-
ness of transport information because the transport
information report is very short and the number of
SUs is usually small.
(iii) Assume all SUs are located in a homogeneous spec-
trum usage area, and thus the sender and receiver can
make the same decision in TACS, given the transport
information used is the same. This is reasonable
because a wireless LAN covers only a small area.
(iv) Assume that TCP in all SUs uses the same packet
size and SUi is using channel n. Let CWi,n(t) and
EURASIP Journal on Wireless Communications and Networking 5
0
200
400
600
800
1000
1200
1400
1600
1800
0 1 2 3 4 5 6 7 8 9 10
A
gg
re
ga
te
th
ro
u
gh
pu
t(
kb
ps
)
Numbers of communicating pairs
CSSG
SSSG
POMDP
Figure 6: Aggregate throughput. Channel 1: β = 1.0. Channel 2:
β = 1.0. Channel 3: β = 1.0.
0 1 2 3 4 5 6 7 8 9 10
Numbers of communicating pairs
CSSG
SSSG
POMDP
0
100
200
300
400
500
600
700
800
900
1000
T
h
ro
u
gh
pu
t(
kb
ps
)
Figure 7: Average Throughput; Channel 1: β = 1.0; Channel 2: β =
1.0; Channel 3: β = 1.0.
3.2.1. SSSG Game. In SSSG, a SUi is selfish [11] and looks
for channel hopping strategies to maximize its throughput,
without considering other SUs. Every SU looks for a channel
that could provide the best throughput. The utility function
of SSSG is defined as follows:
U1i
(
s′i , s−i
) = Ui
(
s′i , s−i
)−Ui(si, s−i), (3)
where Ui(s′i , s−i) and Ui(si, s−i) denote the utility value of SUi
if channel s′i and si, respectively, is used. We use two TCP
parameters of RTT and CW to define the utility function.
Because a PU has a nonzero probability to use its primary
0
200
400
600
800
1000
1200
1400
1600
1800
A
gg
re
ga
te
th
ro
u
gh
pu
t(
kb
ps
)
0 1 2 3 4 5 6 7 8 9 10
Numbers of communicating pairs
CSSG
SSSG
POMDP
Figure 8: Aggregate throughput; Channel 1: β = 0.8; Channel 2:
β = 1.0; Channel 3: β = 1.0.
0 1 2 3 4 5 6 7 8 9 10
Numbers of communicating pairs
CSSG
SSSG
POMDP
0
100
200
300
400
500
600
700
800
900
1000
T
h
ro
u
gh
pu
t(
kb
ps
)
Figure 9: Average Throughput; Channel 1: β = 0.8; Channel 2: β =
1.0; Channel 3: β = 1.0.
channel, a channel may not be usable at all the time. Let
the long-term average opportunity of spectrum holes for
channel si is P(si), then Ui(s′i , s−i) and Ui(si, s−i) are defined
as follows:
Ui
(
s′i , s−i
) = Cis′i (t)× P
(
s′i
)
,
Ui(si, s−i) = Cisi(t)× P(si).
(4)
In SSSG, the strategy of an SU is to choose a channel that
maximizes its utility function. SSSG is greedy. Each SU only
EURASIP Journal on Wireless Communications and Networking 7
600
800
1000
1200
1400
1600
1800
A
gg
re
ga
te
th
ro
u
gh
pu
t(
kb
ps
)
0 1 2 3 4 5 6 7 8 9 10
Numbers of communicating pairs
POMDP, β1 = 0.8, β2 = 1, β3 = 1
POMDP, β1 = 0.5, β2 = 1, β3 = 1
POMDP, β1 = 0.2, β2 = 1, β3 = 1
Figure 14: Aggregate throughput of POMDPwith 1 channel having
PU’s interference.
SSSG, β1 = 0.8, β2 = 1, β3 = 1
SSSG, β1 = 0.5, β2 = 1, β3 = 1
SSSG, β1 = 0.2, β2 = 1, β3 = 1
POMDP, β1 = 0.8, β2 = 1, β3 = 1
POMDP, β1 = 0.5, β2 = 1, β3 = 1
POMDP, β1 = 0.2, β2 = 1, β3 = 1
1 2 3 4 5 6 7 8 9 10
Numbers of communicating pairs
0
10
20
30
40
50
60
70
80
90
100
110
120
130
140
150
160
170
180
C
SS
G
ex
ce
ed
ed
(%
)
Figure 15: Various cases compare with CSSGwith 1 channel having
PU’s interference.
increment in the aggregate transport capacity of all SUs in si
and s′i whenever it is beneficial, that is, U1i(s
′
i , s−i) > 0. With
this strategy, every SU intends to make channel selection that
can result in a larger aggregate transport throughput and
thus, the overall aggregate transport throughput is improved.
When SUi hops from channel si to another channel
s j , j /= i, si, will have one less number of SUs to share with
and hence SU j staying in si should have its own current
0 1 2 3 4 5 6 7 8 9 10
Numbers of communicating pairs
0
200
400
600
800
1000
1200
1400
1600
1800
A
gg
re
ga
te
th
ro
u
gh
pu
t(
kb
ps
)
CSSG, β1 = 0.8, β2 = 0.8, β3 = 1
CSSG, β1 = 0.8, β2 = 0.5, β3 = 1
CSSG, β1 = 0.8, β2 = 0.2, β3 = 1
CSSG, β1 = 0.5, β2 = 0.5, β3 = 1
CSSG, β1 = 0.2, β2 = 0.2, β3 = 1
Figure 16: Aggregate throughput of CSSG with 2 channels having
PUs’ interference.
0 1 2 3 4 5 6 7 8 9 10
Numbers of communicating pairs
0
200
400
600
800
1000
1200
1400
1600
1800
A
gg
re
ga
te
th
ro
u
gh
pu
t(
kb
ps
)
SSSG, β1 = 0.8, β2 = 0.8, β3 = 1
SSSG, β1 = 0.8, β2 = 0.5, β3 = 1
SSSG, β1 = 0.8, β2 = 0.2, β3 = 1
SSSG, β1 = 0.5, β2 = 0.5, β3 = 1
SSSG, β1 = 0.2, β2 = 0.2, β3 = 1
Figure 17: Aggregate throughput of SSSG with 2 channels having
PUs’ interference.
bandwidth share C
j
si plus some extra bandwidth. Thus, the
aggregate bandwidth utility value for SUs remained in si can
be computed as follows:
UOi(si, s−i) =
m∑
j /= i, j=1
(
C
j
sj + Gi j
)
f
(
si, s j
)
∀i = 1, 2, . . . ,m; ∀ j = 1, 2, . . . ,m,
(6)
EURASIP Journal on Wireless Communications and Networking 9
1 2 3 4 5 6 7 8 9 10
Numbers of communicating pairs
0
10
20
30
40
50
60
70
SSSG, β1 = 0.8, β2 = 0.8, β3 = 1
SSSG, β1 = 0.8, β2 = 0.5, β3 = 1
SSSG, β1 = 0.8, β2 = 0.2, β3 = 1
SSSG, β1 = 0.5, β2 = 0.5, β3 = 1
SSSG, β1 = 0.2, β2 = 0.2, β3 = 1
POMDP, β1 = 0.8, β2 = 0.8, β3 = 1
POMDP, β1 = 0.8, β2 = 0.5, β3 = 1
POMDP, β1 = 0.8, β2 = 0.2, β3 = 1
POMDP, β1 = 0.5, β2 = 0.5, β3 = 1
POMDP, β1 = 0.2, β2 = 0.2, β3 = 1
C
SS
G
ex
ce
ed
ed
(%
)
Figure 19: Various cases compared to CSSG with 2 channels have PUs’ interference.
nsi =
∑m
j=1 f (si, s j). Similarly, the average RTT on s
′
i and si at
time t are RTTs′i (t) and RTTsi(t), respectively, and are defined
as RTTs′i (t) =
∑m
j=1 RTT j,s j (t) f (s
′
i , s j)/ns′i and RTTsi(t) =∑m
j=1 RTT j,s j (t) f (si, s j)/nsi . The average CW on s
′
i and si at
t, denoted as CWs′i (t) and CWsi(t), respectively, are defined
as CWs′i (t) =
∑m
j=1 CW j,s j (t) f (s
′
i , s j)/ns′i and CWsi(t) =∑m
j=1 CW j,s j (t) f (si, s j)/nsi , where CW j,s j (t) denotes the CW
of SU j at t. Similarly, let Cs′i (t+Δt) and Csi(t+Δt) denote the
expected average channel capacity on s′i and si at t+Δt. If SUi
jumps from si to s′i at time t, users on s
′
i and si, respectively,
will reach the average ofCs′i (t+Δt) =
∑m
j=1 C
j
sj (t) f (s
′
i , s j)/(1+
ns′i ) and Csi(t + Δt) =
∑m
j=1 C
j
sj (t) f (si, s j)/(ns′i − 1) at t + Δt.
3.2.4. Evaluation of Gji. The average channel capacity would
decrease after a new user joins the channel. Therefore, the
average RTT in s′i would become longer after SUi joins as
more users are competing for the channel. Assume that
the flow control makes TCP throughput for all users in s′i
balanced after Δt seconds. To estimate the new average RTT
after SUi has joined s′i , we separately define Gji for the pure
CA, pure SS, and hybrid state.
Basically, we assume that all the users behave similarly
in an interval Δt. For example, if SUi is in the pure SS state
in interval [t, t + Δt] after it jumps to s′i , all other nodes
in s′i would also increase their CW exponentially and reach
an equilibrium congestion window size CWs′i (t + Δt) or an
average capacity, Cs′i (t + Δt), at t + Δt. Likewise, in the pure
CA, all users increase their CW by one, respectively, for each
RTT and obtain an average capacity at t + Δt. With this
assumption, the CWs of all users keep increasing, and thus
the RTT of all users also increases due to the “self-clocking”
of TCP behavior.
To accurately estimate the loss of users in s′i at t + Δt, we
first use current sample RTTs to predict CWs′i (t+Δt) and then
calculate a new average RTT∗ at t + Δt based on a predicted
Cs′i (t + Δt) as defined previously. With RTT
∗, we then re-
compute a more accurate congestion window size CW j,s′i (t +
Δt) and loss Gji for SU j using channel s′i .
(a) Pure Congestion Avoidance. Each TCP connection
increases its CW by one for every window’s acknowledge-
ment packets at the pure CA state. RTT may increase after a
user joins the channel s′i . Hence, we can predict a new RTT
∗
at t + Δt as follows:
RTT∗s′i =
CWs′i (t + Δt)
Cs′i (t + Δt)
, (14)
where windows′i (t + Δt) = CWs′i (t)+ΔCWs′i (t + Δt) is a
predictive average window size of users on s′i at t+Δt, CWs′i (t)
is the average window size of users at time t, and ΔCWs′i (t +
Δt) is a predicted window size increases for user s at t+Δt. As
stated previously, we first use current RTT sample, RTTs′i (t),
to predict ΔCWs′i (t + Δt). Because CW increases by one for
each RTT interval,
ΔCWs′i (t + Δt) =
⌊
Δt
RTTs′i (t)
⌋
. (15)
Based on RTT∗s′i given by (14), the approximate loss Gji
for s′i can be obtained as follows:
Gji =
CW j,s′i (t + Δt)− CWs′i (t)
RTT∗s′i
, ∀ j, j /= i = 1, 2, . . . ,m,
(16)
where CW j,s′i (t + Δt) is a new predicted average window size
of SU j in channel s′i at t+Δt, and CWj,s′i (t+Δt) = CW j,s′i (t)+
EURASIP Journal on Wireless Communications and Networking 11
MAC Protocol steps for SSSG
A transmitter i transfers data to receiver over a channel si.
(1) Transmitter i receives channel capacity Cisi (t)∀i = 1, 2, . . . ,m; si ∈ N given by (3) from the control
channel in every Δr.
(2) Choose the channel without any CRN user and primary
user if any and transmit data when Δt is expired.
(3) Otherwise, transmitter i uses channel s′i given by (5).
Algorithm 1: The MAC scheduler for SSSG.
Theorem 1. The NE is globally stable in CSSGwhen all players
use best response to play the game.
Proof. Without loss of generality, assume all channels have
the same capacity and packet loss rate. (27) can then be
reduced as follows:
s′i = arg max
s j∈[c1,...,cn]
{
pc
(
nsi − 1
)− pc
(
nsj + 1
)
> 0
}
. (28)
Because pc is continuous, concave, and nondecreasing, (28)
will lead to a stable S as time goes to infinity and hence is glo-
bally stable.
4. Heuristic Algorithm for Games
In order to ensure convergence for our proposed solutions
on channel selection, an adaptive scheduler ought to be
deployed. Most existing works on resource allocation using
cooperative transmission are based on centralized control.
In this paper, we propose a decentralized channel selection
scheme using a CR that performs frequency tracking every
Δt. In order to evaluate our proposed solution, we design
SSSG and CSSG at the MAC layer using the selfish and coop-
erative utilities, respectively. Channel hopping is triggered
either when PUs occupy the channel or when a channel is
found to be better than current one.
The initialization is identical for both of the games. At
the beginning of each time slot, an SUi stays on channel si
which is not occupied by a PU. In the following sections, we
introduce SSSG and CSSG in detail.
4.1. Selfish Spectrum Sharing Game. In the game theory
approach, each SU periodically performs frequency tracking.
An SSSG SU reports its TCP parameters and receives capacity
update from other SUs through the common control channel
every Δr. Each SU with the highest probability chooses an
idle channel. If such an idle channel is not available, it
competes with other SUs with the utility defined in SSSG.
The protocol for the Selfish Spectrum Sharing Game (SSSG)
is shown in Algorithm 1.
A detailed channel selection of SSSG is presented in
Figure 4. An SU senses the available channels which have
neither SUs nor PUs at first and hops to such a channel if
it exists. If there is no idle channel within the spectrum, the
SU tries to get the most appropriate channel by the selfish
utility given by (5) and hops to a new channel obtained from
MAC Protocol steps for CSSG
A transmitter i transfers data to receiver over a channel si.
(1) Transmitter i receives TCP parameter updates CWi, si (t),
RTTi,si (t) ∀i = 1, 2, . . . ,m; si ∈ N from the control
channel every Δr.
(2) Choose the channel without any CRN user and primary
user if any and transmit data when Δt is expired.
(3) Otherwise, transmitter i uses channel s′i given by (12).
Algorithm 2: The MAC scheduler for cooperative utility.
its selfish utility. If there is neither an available channel nor
more appropriate channel for an SU, it continues to use the
current channel. It alsomeans that the original channel is still
better than others from the user’s prospective.
4.2. Cooperative Spectrum Sharing Game. The Cooperative
Spectrum Sharing Game (CSSG) is very similar to the SSSG
except the used utility function and the parameters are
diﬀerent. To compute the utility function, each SUmust now
advertise the CW and RTT values to all other SUs for decision
making. Thus, CSSG possesses a larger messaging overhead.
The protocol of CSSG is presented in Algorithm 2, and the
detailed work flow of CSSG is shown in Figure 5.
In CSSG, an SUi tries to get a list of appropriate channel
by U1 function shown in (3). If there is neither channels
available nor more appropriate channel by U1 function,
it continues to use its original channel. This means that
the original channel si is still better for SUi than others
under consideration. Otherwise, it chooses a better channel
obtained by the utility in (12) and hops to a new channel
computed from the utility, if the list of channel obtained by
U1 function has a value greater than zero.
4.3. Stability and Overhead Analysis. In SSSG, an SU always
chooses a channel to maximize its utility value. When
several SUs hop to the same channel almost at the same
time for maximizing their utilities, they may suﬀer severe
collision in competing channel access. These SUs may later
simultaneously hop to another channel. Thus, it can be
readily seen that such a selfish channel selection strategy may
lead to channel hoping oscillation and severely damage the
overall network throughput.
To prevent the channel hopping of SUs from oscillating
at all the time, we can make each SU selects channels
asynchronously by taking Δt as a random value. With such
a scheme, SUs that have large Δt make channel selection late
and have good chance to choose a channel based on new
transport states. Consequently, the probability of channel
oscillation can be minimized and hence better network
performance can be achieved.
To perform SSSG, every SU must broadcast periodically
its estimated TCP throughput over the control channel.
When Δt is expired, it performs SSSG to make a channel
hoping. In each broadcast, the message must include the SU’s
identifier, the channel identifier and the TCP throughput.
Since the message is short, the broadcast overhead depends
EURASIP Journal on Wireless Communications and Networking 13
and the MAC layers so as to improve end-to-end transport
throughput for SUs. We proposed two utilities of selfish and
cooperative function and developed two Game Theoretic
approaches, SSSG and CSSG, respectively, to choose the
best channel for each SU. In SSSG, each SU hops among
channels to maximize its own transport throughput, while
in CSSG, SUs maximize the global utilization instead of
only considering themselves. In SSSG and CSSG, an SU
advertises CW and RTT of its TCP connection to a common
control channel periodically for other SUs to make their
channel selection. Simulation results show that the TACS
has a better performance for transport throughput than
that of a conventional MAC-based POMDP for a cognitive
radio network. Furthermore, the cooperative scheme CSSG
outperforms the selfish scheme SSSG. The results illustrate
that TCP users cannot fully explore the link bandwidth
variation when the MAC layer follows the channel hopping
based only on the link bandwidth. This is mainly because
the response time of a TCP connection to link bandwidth
change is limited by its round trip time, CW size, and the
flow control state. The results show that by incorporating
these three factors into the utility function of TACS games,
the overall TCP throughput can be increased substantially.
Although TACS has shown its capability to increase
end-to-end transport through cross-layer design, this paper
only studies the case where one SU only sets up one TCP
connection with another one at a time and no other type
traﬃc such as UDP traﬃc is presented. Thus, we are looking
into transport aware schemes to consider parallel TCP, one-
to-many communication, and real-time traﬃc, instead of
just the throughput of a single-TCP connection.
Acknowledgments
The authors would like to thank Professor Dharma P.
Agrawal at Department of Computer Science, University of
Cincinnati, OH, USA for helpful discussions and comments.
This study was supported by the National Science Council,
Taiwan, R.O.C. under Contract nos. NSC98-2221-E-155-031
and NSC 99-2221-E-155-040.
References
[1] J. Mitola III and G. Q. Maguire Jr., “Cognitive radio: making
software radios more personal,” IEEE Personal Communica-
tions, vol. 6, no. 4, pp. 13–18, 1999.
[2] S. Haykin, “Cognitive radio: brain-empowered wireless com-
munications,” IEEE Journal on Selected Areas in Communica-
tions, vol. 23, no. 2, pp. 201–220, 2005.
[3] P. Papadimitratos, S. Sankaranarayanan, and A. Mishra, “A
bandwidth sharing approach to improve licensed spectrum
utilization,” IEEE Communications Magazine, vol. 43, no. 12,
pp. S10–S14, 2005.
[4] C. Ghosh, B. Xie, and D. P. Agrawal, “ROPAS: cross-layer
cognitive architecture for mobile UWB networks,” Journal of
Computer Science and Technology, vol. 23, no. 3, pp. 413–425,
2008.
[5] Y. Xing, R. Chandramouli, S. Mangold, and N. S. Shankar,
“Dynamic spectrum access in open spectrum wireless
networks,” IEEE Journal on Selected Areas in Communications,
vol. 24, no. 3, pp. 626–637, 2006.
[6] I. F. Akyildiz, W.-Y. Lee, M. C. Vuran, and S. Mohanty, “NeXt
generation/dynamic spectrum access/cognitive radio wireless
networks: a survey,” Computer Networks, vol. 50, no. 13, pp.
2127–2159, 2006.
[7] S. Srinivasa and S. A. Jafar, “The throughput potential of cog-
nitive radio: a theoretical perspective,” IEEE Communications
Magazine, vol. 45, no. 5, pp. 73–79, 2007.
[8] Federal Communications Commission (FCC), “ET docket
no. 03-222 notice of proposed rule making and order,”
December 2003, http://hraunfoss.fcc.gov/edocs public
/attachmatch/FCC-03-222A1.pdf.
[9] Q. Zhao, L. Tong, A. Swami, and Y. Chen, “Decentralized
cognitive MAC for opportunistic spectrum access in ad hoc
networks: a POMDP framework,” IEEE Journal on Selected
Areas in Communications, vol. 25, no. 3, pp. 589–599, 2007.
[10] Z. Ji and K. J. R. Liu, “Cognitive radios for dynamic spec-
trum access—dynamic spectrum sharing: a game theoretical
overview,” IEEE Communications Magazine, vol. 45, no. 5, pp.
88–94, 2007.
[11] B. Wang, Y. Wu, Z. Ji, K. J. R. Liu, and T. C. Clancy, “Game
theoretical mechanism design methods: suppressing cheating
in cognitive radio networks,” IEEE Signal Processing Magazine,
vol. 25, no. 6, pp. 74–84, 2008.
[12] Z. Yajun, W. Wei, P. Tao, and W. Wenbo, “A non-cooperative
power control game considering utilization and fairness in
cognitive radio network,” in Proceedings of the International
Symposium on Microwave, Antenna, Propagation and EMC
Technologies for Wireless Communications (MAPE ’06), pp. 31–
34, Hangzhou, China, August 2006.
[13] J. Li, D. Chen, W. Li, and J. Ma, “Multiuser power and channel
allocation algorithm in cognitive radio,” in Proceedings of the
36th International Conference on Parallel Processing (ICPP ’07),
p. 72, Xi’an, China, September 2007.
[14] T. V. Lakshman and U. Madhow, “The performance of
TCP/IP for networks with high bandwidth-delay products and
random loss,” IEEE/ACM Transactions on Networking, vol. 5,
no. 3, pp. 336–350, 1997.
[15] D. X. Wei, C. Jin, S. H. Low, and S. Hegde, “FAST TCP: moti-
vation, architecture, algorithms, performance,” IEEE/ACM
Transactions on Networking, vol. 14, no. 6, pp. 1246–1259,
2006.
[16] S.-L. Wu, Y.-C. Tseng, C.-Y. Lin, and J.-P. Sheu, “A multi-
channel MAC protocol with power control for multi-hop
mobile ad hoc networks,” The Computer Journal, vol. 45, no.
1, pp. 101–110, 2002.
[17] N. Nie and C. Comaniciu, “Adaptive channel allocation
spectrum etiquette for cognitive radio networks,” Mobile
Networks and Applications, vol. 11, no. 6, pp. 779–797, 2006.
[18] A. M. R. Slingerland, P. Pawełczak, R. V. Prasad, A. Lo, and
R. Hekmat, “Performance of transport control protocol over
dynamic spectrum access links,” in Proceedings of the 2nd
IEEE International Symposium on New Frontiers in Dynamic
Spectrum Access Networks (DySPAN ’07), pp. 486–495, Dublin,
Ireland, April 2007.
[19] J. Padhye, V. Firoiu, D. Towsley, and J. Kurose, “Modeling
TCP throughput: a simple model and its empirical validation,”
Computer Communication Review, vol. 28, no. 4, pp. 303–314.
[20] Z. Han, C. Pandana, and K. J. K. Liu, “Distributive oppor-
tunistic spectrum access for cognitive radio using correlated
equilibrium and no-regret learning,” in Proceedings of the
IEEE Wireless Communications and Networking Conference
(WCNC ’07), pp. 11–15, Hong Kong, March 2007.
Photographȱ©ȱTurismeȱdeȱBarcelonaȱ/ȱJ.ȱTrullàs
Preliminaryȱcallȱforȱpapers
The 2011 European Signal Processing Conference (EUSIPCOȬ2011) is the
nineteenth in a series of conferences promoted by the European Association for
Signal Processing (EURASIP, www.eurasip.org). This year edition will take place
in Barcelona, capital city of Catalonia (Spain), and will be jointly organized by the
Centre Tecnològic de Telecomunicacions de Catalunya (CTTC) and the
Universitat Politècnica de Catalunya (UPC).
EUSIPCOȬ2011 will focus on key aspects of signal processing theory and
li ti li t d b l A t f b i i ill b b d lit
OrganizingȱCommittee
HonoraryȱChair
MiguelȱA.ȱLagunasȱ(CTTC)
GeneralȱChair
AnaȱI.ȱPérezȬNeiraȱ(UPC)
GeneralȱViceȬChair
CarlesȱAntónȬHaroȱ(CTTC)
TechnicalȱProgramȱChair
XavierȱMestreȱ(CTTC)
Technical Program CoȬChairsapp ca ons as s e e ow. ccep ance o su m ss ons w e ase on qua y,
relevance and originality. Accepted papers will be published in the EUSIPCO
proceedings and presented during the conference. Paper submissions, proposals
for tutorials and proposals for special sessions are invited in, but not limited to,
the following areas of interest.
Areas of Interest
• Audio and electroȬacoustics.
• Design, implementation, and applications of signal processing systems.
l d l d d
ȱ ȱ
JavierȱHernandoȱ(UPC)
MontserratȱPardàsȱ(UPC)
PlenaryȱTalks
FerranȱMarquésȱ(UPC)
YoninaȱEldarȱ(Technion)
SpecialȱSessions
IgnacioȱSantamaríaȱ(Unversidadȱ
deȱCantabria)
MatsȱBengtssonȱ(KTH)
Finances
Montserrat Nájar (UPC)• Mu time ia signa processing an co ing.
• Image and multidimensional signal processing.
• Signal detection and estimation.
• Sensor array and multiȬchannel signal processing.
• Sensor fusion in networked systems.
• Signal processing for communications.
• Medical imaging and image analysis.
• NonȬstationary, nonȬlinear and nonȬGaussian signal processing.
Submissions
ȱ ȱ
Tutorials
DanielȱP.ȱPalomarȱ
(HongȱKongȱUST)
BeatriceȱPesquetȬPopescuȱ(ENST)
Publicityȱ
StephanȱPfletschingerȱ(CTTC)
MònicaȱNavarroȱ(CTTC)
Publications
AntonioȱPascualȱ(UPC)
CarlesȱFernándezȱ(CTTC)
I d i l Li i & E hibi
Procedures to submit a paper and proposals for special sessions and tutorials will
be detailed at www.eusipco2011.org. Submitted papers must be cameraȬready, no
more than 5 pages long, and conforming to the standard specified on the
EUSIPCO 2011 web site. First authors who are registered students can participate
in the best student paper competition.
ImportantȱDeadlines:
P l f i l i 15 D 2010
n ustr a ȱ a sonȱ ȱ x ts
AngelikiȱAlexiouȱȱ
(UniversityȱofȱPiraeus)
AlbertȱSitjàȱ(CTTC)
InternationalȱLiaison
JuȱLiuȱ(ShandongȱUniversityȬChina)
JinhongȱYuanȱ(UNSWȬAustralia)
TamasȱSziranyiȱ(SZTAKIȱȬHungary)
RichȱSternȱ(CMUȬUSA)
RicardoȱL.ȱdeȱQueirozȱȱ(UNBȬBrazil)
Webpage:ȱwww.eusipco2011.org
roposa sȱ orȱspec a ȱsess onsȱ ȱ ecȱ
Proposalsȱforȱtutorials 18ȱFeb 2011
Electronicȱsubmissionȱofȱfullȱpapers 21ȱFeb 2011
Notificationȱofȱacceptance 23ȱMay 2011
SubmissionȱofȱcameraȬreadyȱpapers 6ȱJun 2011
Proc. of the 4th Annual International Conference on Computer Games, Multimedia and Allied Technology (CGAT 2011)
these techniques will also advance the service quality in other 
P2P live streaming applications.
The rest of this paper is organized as follows. Section 2 
provides an overview of our researches on the peer selection 
scheme of P2P TV. Section 3 defines schemes and parameters 
of live stream distribution of P2P TV system. Section 4 shows 
our simulation results in various combinations of parameters 
and scenario. Section 5 concludes the paper.
II. RELATED WORKS
In the past, many researches have been focused on PPS in 
P2P streaming. PeerCast [4,5], OverCast [6], Scattercast [6], 
AnySee [7] and PPlive [8] are some good examples. The 
author in [1] classified PSS into three different types: 1) 
Robustness of System and Load Balance oriented (RSLB), 2)
Streaming Quality oriented (SQ), and 3) Network Topological 
Conglomeration oriented (NTC).
RSLB mainly adopts the random PSS, which selects one or 
several peers at random. PeerCast [4-5] is an example. The 
random PSS is simple and can guarantee the robustness of 
system and network load balance. However, the Random PSS
does not consider the capability of peers in resource sharing.
Therefore, the streaming service quality can not be guaranteed.
SQ aims at improving the streaming quality of the system. 
With theSQ PSS, every peer receives a list of neighboring
peers for P2P exchange. Two main factors are considered 
important in streaming quality of peers: the capabilities of 
neighbor peers and the transmission bandwidth between each 
other. The parameters of capability generally include
bandwidth, delay, drop rate, etc. The SQ method considers 
fully theheterogeneous and dynamic feature of peers and thus 
can provide good quality of services. However, it does not
consider the stress of transmission network and hence may 
cause heavy load to ISP. OverCast and Scattercast [6] are two 
good examples that use the SQ scheme.
NTC considers the resource of the whole P2P system in 
distributing data. AnySee [7] and PPLive [8] are two 
examples. In NTC, all peers in the same channel form an 
overlay network on the application layer. PSS decides the 
architecture of the overlap network and the way how to
distribute data between peers. Consequently, NTC can 
improve the network topological conglomeration, reduce the
traffic through out the backbone network and assist the 
utilization of network.
The above researches show that current algorithms of peer 
selection only improve one aspect of performance of the 
whole system. For these reasons, we propose an EPSA which 
improves streaming service quality, as well as the topological 
conglomeration, and most of all, reduces channel change time 
over P2PTV.
III. EPSA
The main characters in our P2PTV model include: 1) 
Tracker Server: a server that consists of active source peer list 
and recommendation list which contains recommended peer 
sets (RPSs) of a specific channel. 2) Source Peer: a peer 
which provides live streaming of one channel to other peers.
We assume that the source peers in our system are cooperative 
peers. 3) Client Peer: a peer which requests to download 
channel streaming from others, and becomes a source peer 
after it enters a watching mode.
In our P2PTV system model, many tracker servers are 
used to keep the IP addresses of those peers which can serve 
as a peer server for some channel. When a peer requests to 
watch a certain channel, the tracker server provides the 
addresses of a set of source peers, so that the client peer can 
create connection and receive live streaming of a channel from 
the selected source peers.
The strategies of EPSA are composed of three components 
1) Source Tuning and Refining, 2) Recommendation of Server 
Sets , and 3) Selection before Switching.
A. Source tuning and refining
In order to improve streaming quality, each client peer 
frequently requests for more source peer candidates from its 
serving tracker server, and reports their quality Q by Eq. (1) as 
considered in [10]. Once the client peer discovers a source 
peer which obtains higher quality credits than any one of the 
source peer currently being used, the client peer replaces one 
of currently used peer servers by the better one. The process is 
executed periodically until the system reaches a certain 
threshold Qt of streaming quality. An example is shown in 
Figure 1 and Figure 2. This source refining has shown to be an 
effective scheme to achieve better quality through simulation 
results.
Fig. 1 Initialization of EPSA system
The quality Q formulation is defined as follows:
max max max
1
( ) ( ) ( ) (1 ) ( )
U
T
U
T
LB P
Q
RTT B L P
D E J D E J u  u  u     u (1)
where 0 , , 1D E J  , and 1D E J  d . The variables and 
some properties involved in the potential function are defined 
as shown in Table 1. Note that the quality Q considers the
distance between peers, i.e., RTT, the living time of peer’s L,
the upload capacity of the source peer B and the transmission 
rate of the source peer P in one specific channel.
TABLE I. NOTATION DEFINITIONS
Symbol Meaning
RTT The round-trip time delay between a source peer and its 
Q(0.12)
Q(0.73)
Q(0.53)
Client Peer 1
Client Peer
Tracker Server
List
Recommendation
38
Proc. of the 4th Annual International Conference on Computer Games, Multimedia and Allied Technology (CGAT 2011)
A. Simulation environment 
Both EPSA and Random models generate 150 peer nodes 
within a period of 600 seconds. Each active peer has an 
opportunity to issue a request. To reduce simulation 
complexity, we measure the round-trip time delay between a 
source peer and its client peers based on their location vector 
distance.
B. Simulation results
To simulate and compare start-up delay between EPSA 
and Random models, peers can decide whether to join the 
P2PTV network by uniform distribution, between 0 to 600 
seconds. Once a peer joins the network, it randomly decides 
whether to leave the P2PTV about twice a second.
Figure 3 illustrates the start-up time for both EPSA and 
Random PSS. We observe that the performance of EPSA was 
about the same with that of the random PSS initially due to the 
lack of feedback information in recommendation list when the 
system just started. Only after a while, may some peers switch
channels, and report their peer sources as a recommendation
set to the tracker server. EPSA helps clients, who are newly on 
the channel, to utilize those recommendations. When the time 
goes to 300 sec, the system is getting more stable and has
more peer source recommendations. The simulation result 
illustrates that we can successfully reduce the start-up time by 
using EPSA.
In the Random PSS, the client peers change channel 
without recommending their source peer set to the tracker 
server, while EPSA supports the Recommendation mechanism, 
which enables new peers to connect to the sources that are
more reliable and credible through previous user experience,
though, we also observe that more peers with the random PPS 
finishes their star-up time than that of EPSA in the beginning, 
which is probably because of using the Random PSS has 
better load balance property.
The result in Figure 4 shows that the channel change time 
of EPSA is better than that of the Random PSS. Due to the 
refining and recommendation mechanism, the channel change 
time with EPSA does perform better.
Fig. 3 Start-up time with EPSA and Random PSS
Fig. 4 Channel change time with EPSA and Random PSS
IV. CONCLUSIONS
This paper proposed an efficient peer selection algorithm
(EPSA) to reduce the channel change time and start up time in 
P2PTV. In EPSA, we consider both streaming quality and 
network conglomeration, whiles prior PSS’es only enhance 
one aspect of the system. The simulation result shows that 
EPSA indeed can reduce channel change time for many peer 
clients. However, the result also shows that EPSA seems 
unfair in peer selection. In the future, we will improve the 
fairness of EPSA by integrating some randomness property in 
EPSA for load balance.
ACKNOWLEDGMENT
The authors would like to thank the National Science 
Council, Taiwan, R.O.C. for financially supporting this 
research under Contract No. NSC 99-2221-E-155-040.
REFERENCES
[1] L. Chuntao, Z. Huyin and S. Lijun, "Research and Design On Peer 
Selection Strategy of P2P Streaming," IEEE WiCom. pp. 1-4, 2009.
[2] X. Shen, G. Ding, Y. Chen and J. Wnag, "Adaptive-Push Peer-to-Peer 
Video Streaming System Based on Dynamic Unstructured Topology," in 
Proc. IEEE IAS, pp. 697-700, 2009.
[3] OMNeT++, http://www.omnetpp.org/
[4] PeerCast, http://www.peercast.org/
[5] H. Deshpande, M.Bawa and H. Garcia-Molina, “Streaming Live Media 
over Peers,” Tech. Rep. 2002-21, Stanford University, March, 2002.
[6] M. Heffeeda, A. Habib, B. Botev, D. Xu and B. Bhargava, "PROMISE: 
Peer-to-Peer Media Streaming Using CollectCast," ACM Multimedia, 
pp.45-54, Nov, 2003.
[7] X. Liao, H. Jin, Y. Liu, L. M. Ni and D. Deng, "AnySee: Peer-to-Peer 
Live Streaming," IEEE INFOCOM, pp.1-10, April, 2006.
[8] Y. Liu, L. Guo, F. Li and S. Chen, “A Case Study of Traffic Locality in 
Internet P2P Live Streaming Systems,” IEEE ICDCS, pp. 423-432, 2009.
[9] P2PTV-wikipedia, http://en.wikipedia.org/wiki/P2PTV
[10] T. Y. Chung, Y.H. Chang, K. H. Chen and Y. M. Chen, “High 
Performance Overlay File Distribution by Integrating Resource 
Discovery and Service Scheduling,” Journal of ISAE, vol.25, no.3, pp. 
861-875, May, 2009.
40
Proc. of the 4th Annual International Conference on Computer Games, Multimedia and Allied Technology (CGAT 2011)
II. RELATED WORKS
In the past, researchers have proposed channel change 
acceleration mechanisms in IPTV such as Instant Channel 
Change (ICC) [11], or a buffering technique on channel 
changing servers to reduce the channel change delay. The ICC 
solution provides a unicast stream with only I-frame so that 
Set-top Box (STB) can receive data fast. When a STB receives 
the first I-frame, it can start to display video. However, this 
solution requires extra bandwidth when channel change 
happened. Moreover, it increases the management overhead in 
acceleration mechanisms. 
The other solution is to provide Picture-in-Picture (PIP) 
stream from neighboring nodes to a STB. Users can watch a 
full quality video and also a low quality video simultaneously. 
And this PIP solution has acceptable bandwidth overhead since 
the PIP streams require very small bandwidth. However, the 
drawback of PIP stream is that it has a limited number of 
channels to watch at the same time. 
Compared with these above methods, our design provides a 
novel mechanism HPMP to allow user to preview many 
channels with low quality video. It can reduce the frequency of 
channel switching and channel hop distances. 
III. HPMP FOR P2P MULTIMEDIA STREAMING SYSTEM 
In HPMP, channels are classified into M types, i.e., 
{ | 0 }iA A i M  d . For example, Figure 1 illustrates the M 
types channel on the left of the interface and each channel type 
iA  includes N related channels 
{ | 0 ,0 }ijB B i M j N  d d d . When a client peer joins the 
system on the preview mode and chooses channel type iA , 
HPMP will select C (we assume C=4 in the following 
description) channels from
ijB  and shows them in the main 
screen. Note that tKHUH DUH ³EDFN´ DQG ³IRUZDUG´ EXWWRQV
below the main screen to change channel fast. 
Figure 2 shows the operation process of the HPMP system. 
There are three operational modes in HPMP: 1) Wait mode: in 
this mode, users wait to choose the channel that client peer 
wants to see after it joins the system, 2) Preview mode: In this 
mode, HPMP provides C low quality streams to a client peer 
to choose what it wants to watch. Once a client peer on the 
preview mode presses the ³back´ or ³forward´ button, it will 
come back to the wait mode and rejoin the next preview 
channel tree. 3) Watch mode: in this mode, users start to watch 
a channel in a full screen. It will be back to the preview mode 
when a client peer wants to select some other channels.
Fig. 2 The operation process of HPMP system  
To reduce the overhead for channel preview, we presented 
a novel method named Timed Forest Scheme (TFS) for group 
preview. By this way, HPMP can help clients finding fast the 
channel they want to watch and use their bandwidth efficiently. 
Figure 3 shows an example for the architecture of the 
HPMP system, in which the status of a client peer is either in 
the Watch mode or the Preview mode when it joined the 
HPMP system. Here, we focus on the design of the Preview 
mode and construct generally a mesh-based topology on the 
Watch mode using gossip [12] for P2P message exchange. All 
client peers on the Watch mode will calculate their own 
quality value Q by Eq. (1) periodically and send the value to
the tracker server. The tracker server keeps a source peer list 
{ | 0 ,0 }ijS s i M j N  d d d , which is periodically updated 
and sorted based on the value Q. 
Fig. 3 The architecture of HPMP System 
Now, we propose a design of TFS when the system is in 
the Preview mode. The concept of TFS is shown in Figure 4. 
Fig. 4 Timed Forest Scheme on Preview mode to change 
channel 
In the preview mode, three mechanisms are used: 1) 
Preview Tree Feeding (PTF), 2) Preview Peer Joining (PPJ), 3) 
Preview Tree Maintenance (PTM). The TFS scheme creates a 
tree based topology when client peers join the preview mode 
of the HPMP system. When a client peer joins HPMP on the 
Preview mode and becomes a leader peer (or root of a TFS
tree), the Preview Tree Feeding process is executed. In PTF, 
the tracker server will transmit sub-lists s S  with C different 
channels to the new root. After that, the leader peer will 
calculate the R value by Eq. (2) and choose source peers with 
the minimal R value on C different channels in sub-lists s S , 
and then push streams down to their leaves. The R represents 
42
Proc. of the 4th Annual International Conference on Computer Games, Multimedia and Allied Technology (CGAT 2011)
Algorithm 3 Tree maintenance when parent node leaves in 
TFS 
1: min_ depth
peerC : save a peer with minimal depth in preview tree 
2: num
childC : the current number of children supported by 
min_ depth
peerC
3: max
childC : the maximal number of children supported by 
min_ depth
peerC
4:
_c listC : a list of children of 
min_ depth
peerC
5: depth
rootC : the depth of root 
6: listleader : the list of current leader 
7: D : the maximal deep set by the HPMP system 
8: current
depthp : the tree depth of current preview peer 
9: min_ depth
peerC  peer with minimal depth on the same  
channels C in listleader
10:    if min_ depthpeerC does not exist then
11:        join the list of listleader
12:        create a new preview tree 
13:    end if 
14:    else 
15:      if currentdepthp +
depth
rootC t D then  
16:          join the list of listleader
17:          create a new preview tree 
12:      end if 
13:      else
14:         while num
childC  = 
max
childC do
15:              min_ depthpeerC  peer with minimal depth in _c listC
16:         end while  
17:         send a connection request to peer min_ depthpeerC
18:         connect to peer min_ depthpeerC
19:      end else 
20:   end else
How a leader peer selects the most stable source peer on
the watch mode is important. So we design a model to 
calculate the quality Q of a watch peer and the value R of a 
preview peer by Eq. (1) and Eq. (2) respectively to find the 
stable peers in the HPMP system. Here, the quality Q and 
value R are denoted as follows. 
max
U
T
UMax T
LB
Q
B L
D E  (1) 
(1 )R Q RTTD E    (2) 
where 0 , 1, 1D E D E   d . The variables and some 
properties involved in the potential function are defined as 
shown in Table 1. Note that the quality Q considers the 
distance between peers, i.e., the upload bandwidth B, the 
living time of SHHU¶VL, in one specific channel. For Eq. (1), 
the first term considers the source peer with lower upload
bandwidth utilization and the second term considers the source 
peer with the longest online time. We merge the above-
mentioned model to find stable source peers. 
TABLE I. NOTATION DEFINITIONS
Symbol Meaning 
RTT 
The round-trip time delay between a source peer and 
leader peers on the preview mode. 
BU the upload bandwidth has been used in the watch mode. 
BUMax The maximal upload bandwidth of each peer on the watch 
mode. 
LT The living time of each peer on the watch mode in the 
system. 
LTmax
The longest living time of peers on the watch mode.
When a peer joins the watch mode, it calculates its own
quality Q periodically and reports to the tracker server. In this 
way, the tracker server will save better peers in the source list. 
On the preview mode, a leader will take the source list
from the tracker server and calculate the value R to choose a 
source peer with minimal value R. If the source peer leaves 
the system, the leader peer will find another source peer and 
keep all its tree structure without change. In other word, it 
reduces the connection time if all peers are made reconnect to 
another tree. 
IV. SIMULATION RESULTS
In this section, we perform extensive simulations to study 
the performance of the HPMP system. We simulate 
distributions with different upload bandwidth using network 
simulator OMNeT++ [13]. We use a full quality video stream 
whose rate is 2 Mbps and the rate of low quality of preview
stream is 128 Kbps. The number of channels is 20. The 
incoming access link bandwidth for all peers is set to 2 Mbps 
so that each peer can easily receive the full quality rate of a 
video. The number of total peers joining the HPMP system is 
200. And Figure 6 shows the time distribution of peers joining 
system and favorite channel of each peer is randomly selected 
between 1 to 20. In the HPMP system, the period T of preview 
channel auto-switching is 8 seconds. Each time users can
watch C preview channels and C is set as 4. In the traditional 
scheme, a user needs to change channel by himself/herself, 
and each time a full quality video is presented. We set that 
every user starts to change channel in order from Channel 1 up 
to his/her favorite channel because they do not know 
beforehand what the content of each channel is. 
Fig. 6 The distribution of Peers joining the HPMP system 
44
Proc. of the 4th Annual International Conference on Computer Games, Multimedia and Allied Technology (CGAT 2011)
[6] PPStream, http://www.ppstream.com/. 
[7] Y. Zhu, W. Liu, L. Dong, W. Zeng, and H. Yu, ³+LJK 3HUIRUPDQFH
Adaptive Video Services based on Bitstream Switching for IPTV 
6\VWHPV´in Proc. IEEE CCNC, pp. 1-5, 2009. 
[8] C. H. Chang, P. J. Wu anG&1/HH³6PDUW-Fit: Peer-to-Peer Topology 
Construction Strategy for Live Video Streaming Toward Minimal 
'HOD\´in Proc. ICS, Nov. 2008. 
[9] Windows Media Server, 
http://www.microsoft.com/windows/windowsmedia/
[10] Real Player Service, http://www.realnetworks.com/
[11] D. Banodkar, K. K. Ramakrishnan, S. Kalyanaraman, A. Gerber, and O. 
spatscheck, "Multicast instant channel change in IPTV systems," in Proc. 
COMSWA, pp. 370-379, 2008. 
[12] 0=DKDULD DQG 6 .HVKDY´*RVVLS-based Search Selection in Hybrid 
Peer-to-Peer Networks,´in Proc. IPTPS, 2006. 
[13] OMNET++, http://www.omnetpp.org/ 
46
  
99 年度專題研究計畫研究成果彙整表 
計畫主持人：鍾添曜 計畫編號：99-2221-E-155-040- 
計畫名稱：在多模通訊中以媒體獨立換手為基礎的連續不斷的多媒體服務之研究 (2/2) 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 1 1 100%  
博士生 1 1 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 1 1 100%  
研究報告/技術報告 0 0 100%  
研討會論文 2 2 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
國科會補助專題研究計畫成果報告自評表 
請就研究內容與原計畫相符程度、達成預期目標情況、研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）、是否適
合在學術期刊發表或申請專利、主要發現或其他有關價值等，作一綜合評估。
1. 請就研究內容與原計畫相符程度、達成預期目標情況作一綜合評估 
■達成目標 
□未達成目標（請說明，以 100 字為限） 
□實驗失敗 
□因故實驗中斷 
□其他原因 
說明： 
2. 研究成果在學術期刊發表或申請專利等情形： 
論文：■已發表 □未發表之文稿 □撰寫中 □無 
專利：□已獲得 □申請中 ■無 
技轉：□已技轉 □洽談中 ■無 
其他：（以 100 字為限） 
3. 請依學術成就、技術創新、社會影響等方面，評估研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）（以
500 字為限） 
<學術成就部分> 
本計畫研究成果探討多模網路技術，研究以下相關議題並將問題定義成最佳化，而提出對
應方法解決。 
(1) 多行動端點間資源分配 
結合行動終端的貢獻程度與服務網路品質而定義如何使來源端達到最佳的資源分配問題。
 
<技術創新部分> 
針對上述議題，技術方面分別使用以下創新方法來解決 
(1)提出多個最佳化資源分配策略 LG_α_RA、LG_MPTC 與 RACT_MPTC，從理論上的最佳化與
實際動態環境下各別分析策略的好壞，希望使連線品質更好，以提升行動終端間的資料傳
輸量技術。 
提出一個最佳化終點對終點通訊路徑選擇策略 ABNC，ABNC 同時考慮兩通訊行動終端連 
接的服務網路，使連線品質與價格更好。 
 
<社會影響部分> 
隨著 4G 無線技術發展，行動終端支援多模無線通訊技術而提供高品質多媒體服務是未來
業界發展趨勢。本計畫設計一個多媒體服務平台，解決多模行動終端資源分配的議題，能
有效提 
