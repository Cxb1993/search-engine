a large gap between tag｀s identification time and 
tag｀s response time in the protocol CTI. We trade-
off tag identification time for the sake of reducing 
the memory space. By using the well-known time-
memory-trade-off techniques, we can obtain this goal. 
With a performance analysis, we show that the memory 
space of our modified protocol can be reduced by a 
factor t compared to that of CTI where the number of 
hash operations for one tag｀s identification is 
O(t2). Via a case study, we show that our modified 
protocol is able to save about 89% fraction of memory 
space of CTI in some practical setting of RFID 
systems while increasing the tag identification time.
 
英文關鍵詞： RFID, security, privacy, tag, time-memory-trade-off 
 
 II 
目錄 
一、中文摘要及關鍵詞 ........................................... III 
二、英文摘要及關鍵詞 ............................................ IV 
三、報告內容 ..................................................... 1 
1. Introduction and Related Works ............................ 1 
2. Preliminaries ............................................. 3 
2.1 RFID System Model ..................................... 3 
3. The Constant-Time-Identification Protocols ................ 3 
3.1 Privacy and Security of CTI and Performance Analysis .. 4 
4. The Space-Efficient Scheme via Time-Memory Trade-off ...... 5 
4.1 Applying Time-Memory Trade-off on Database Setup of CTI   
 .......................................................... 8 
4.2 CTI/TM() Protocol .................................... 8 
4.3 Security, Privacy and Performance of CTI/TM() ........ 9 
5. Case Study ................................................ 9 
6. Conclusions .............................................. 11 
四、References .................................................. 11 
五、Appendix: Security and Privacy Definitions .................. 13 
A.1 Adversarial Model ....................................... 13 
A.2 Security and Privacy Definitions ........................ 13 
五、計畫成果自評 ................................................ 17
 IV 
二、英文摘要及關鍵詞 
 
We study hash-based identification protocols in RFID systems which obtain privacy 
against active adversaries who can perform compromised attacks. Here, an active adversary 
can track a tag via successful or unsuccessful identifications with legal or illegal 
readers. In IEEE Transactions on Parallel and Distributed Systems, Alomair, Clark, Cuellar 
and Poovendran proposed a novel hash-based RFID identification protocol called 
constant-time-identification (CTI) protocol. Their protocol is provably against active 
adversaries who can perform compromise attack. However, in order to obtain high privacy 
in their protocol, the database in CTI is required to have quite large memory space. 
 
In this research, we try to reduce the memory complexity of the database in CTI while 
preserving the same level of privacy. We discover that there is a large gap between tag's 
identification time and tag's response time in the protocol CTI. We trade-off tag 
identification time for the sake of reducing the memory space. By using the well-known 
time-memory-trade-off techniques, we can obtain this goal. With a performance analysis, 
we show that the memory space of our modified protocol can be reduced by a factor t compared 
to that of CTI where the number of hash operations for one tag's identification is O(t2). 
Via a case study, we show that our modified protocol is able to save about 89% fraction 
of memory space of CTI in some practical setting of RFID systems while increasing the 
tag identification time. 
 
 
Keywords: RFID, security, privacy, tag, time-memory-trade-off 
other is located in the right side of his tag in the tree. In this situation, the adversary is able
to distinguish these two tags and this breaks the privacy in the model of Juels and Weis.
Another approach for solving scalability and keeping privacy simultaneously is to use
hash chains to update the internal state of the tags. Ohkubo, Suzuki, and Kinoshita propose
a protocol (called OSK) in which the identifier of the tag is modified each time it is queried
by a reader such that the identifiers can be recognized by legal readers. In the identification
phase, the tag uses its identifier as an input of a hash function and sends the output to
the reader. Then a legal reader can easily find out the tag from the received hash value.
After completing identification, the tag and the database both update the identifier by using
another hash function. The problem in OSK is that the tag can be interrogated by other
illegal readers, its identifier is updated by the tag each time it is queried, but the legal
database does not update it. This gives rise to a synchronizing issue. So, in order to identify
a tag, the database computes a sequence of hash values from the current identifiers stored
in the database and checks if the received hash value is equal to one of these hash values.
This increases the time complexity of identification. In [3], Avoine and Oechslin use a time-
memory trade-off technique to reduce the identification complexity of OSK. By using this
technique, the modified protocol increases the storage of the database and decreases the
identification time.
However, OSK is vulnerable against attacks of denial of service. To improve it, Alomair
Clark, Cuellar, and Poovendran propose a novel privacy-preserving protocol in which each
tag owns a reusable pseudonym and a counter with maximum value C. For convenience,
we call their protocol CTI. The main idea of CTI is that each tag uses a pseudonym and
a counter value to compute a hash value and the database can identify the tag easily from
this received hash value if these hash values are pre-stored in the database. As a result, tag
identification can be obtained with constant time [6]. However, the level of privacy which
CTI obtains is bounded by the maximum counter value C. In order to obtain higher privacy,
one must increase the space for storing the hash values in CTI. Moreover, in CTI, the ability
to be against compromise attacks depends on the number of available pseudonyms. In order
to have higher privacy against compromise attacks, the back-end database should increases
the set of pseudonyms. However, this also increases the memory cost of the database.
1.1 Our Contributions
In this work, we use time-memory trade-off techniques to reduce the memory complexity of
the database in CTI. We discover that there is a large gap between tag’s identification time
and tag’s response time in the protocol CTI. So, our idea is to trade-off tag identification time
for the sake of reducing the memory space. By using the time-memory-trade-off technique
[8, 14], we can obtain this goal. We show that the memory space of our modified protocol is
about O(1/t) of that of CTI where the number of hash operations for one tag’s identification
is O(t2). Via a case study, we show that the modified protocol is able to save about 89%
fraction of memory space of CTI in some practical setting of RFID systems.
Compared to [3], our protocol increases tag identification time and decreases the memory
space of CTI while the protocol of Avoine and Oechslin in [3] increases the memory space
2
Setup: Each Tag, each reader, and the database have random number generators and share
a hash function h. There are NT tags and a set of N pseudonyms Ψ = {ψ1, . . . , ψN} where
N = 2NT . Each tag has a pseudonym ψ, a key k, and a counter whose value is less than C.
The back-end database is preloaded with a table H which records all NC values h(ψ, c) for
ψ ∈ Ψ and c ∈ {0, 1, . . . , C − 1}. The slot with the value h(ψ, c) has a pointer which points
to the tag with the pseudonym ψ.
Identification Process: The identification process goes as follows.
1. The reader requests the tag and sends a random string r to it.
2. The tag uses its secret key k, pseudonym ψ and counter value c to compute h(ψ, c)
and r′ = h(0, ψ, c, k, r). Next the tag increments c as c + 1 and sends the two hash
values to the reader which passes them to the database.
3. By the value h(ψ, c), the reader can access the database to identify the tag labeled
by the pseudonym ψ within constant time and can obtain the information about the
tag including its pseudonym ψ, its secret key k, and a new pseudonym ψ′ which is
randomly selected from Ψ and used to update the tag. The reader responds the tag
with h(1, ψ, k, r′)⊕ ψ′ and h(2, ψ′, k, r′).
4. With h(1, ψ, k, r′)⊕ψ′, the tag can obtain the new pseudonym ψ′. With h(2, ψ′, k, r′),
the tag authenticates the reader and checks the integrity of the new pseudonym ψ′.
5. After authenticating the reader, the tag sets its counter to zero, updates its secret key
as k′ = h(k), and changes the pseudonym as ψ′.
3.1 Privacy and Security of CTI and Performance Analysis
The security and privacy of CTI is guaranteed in [6].
Lemma 1. [6] The protocol CTI is a secure mutual authentication protocol based on the
random oracle model.
Lemma 2. [6] The protocol CTI obtains forward privacy.
Lemma 3. [6] The protocol CTI obtains C-privacy.
To show that CTI is against compromise attacks, we assume that an adversary can com-
promise a tag in the system. Let q be the number of protocol runs an adversary has performed
with the system using compromised tags. In [6], the authors observe that the advantage of
distinguishing between two tags is at most the fraction of pseudonyms collected by the ad-
versary. In addition, they show that the expected number of different pseudonyms collected
by the adversary is N(1− (1− 1/N)q). From this, they show that the advantage to perform
a successful compromise attack is at most
1− (N − 1
N
)2q.
4
and only stores the starting point SPi = Xi,0 and the value Xi,t as the corresponding end
point EPi. Thus, after doing that, we obtain the following virtual table.
X1,0
f1−→ X1,1 f2−→ X1,2 f3−→ . . . ft−→ X1,t
X2,0
f1−→ X2,1 f2−→ X2,2 f3−→ . . . ft−→ X2,t
X3,0
f1−→ X3,1 f2−→ X3,2 f3−→ . . . ft−→ X3,t
. . .
Xmt,0
f1−→ Xmt,1 f2−→ Xmt,2 f3−→ . . . ft−→ Xmt,t
In addition, the method sorts the stored values according to the end points. Clearly, only
2mt memory slots are required since the method only stores the starting and the end points
(SPi = Xi,0, EPi = Xi,t). The resulting table is the output of the off-line preprocessing
phase. Now let’s take a look at the online searching phase.
Online Searching Phase: Assume that the database receives the function value C = F (z).
The goal of the database is to find an input z′ such that F (z′) = C. The database takes the
following procedure:
1. It applies the reduction function Rt to get Y0 = Rt(C) and see whether Y0 = EPi
for some i. If Y0 = EPi, then he computes Xi,t−1 from the starting point Xi,0 by
sequentially applying function fj from j = 1 to t − 1. Either F (Xi,t−1) = C or
F (Xi,t−1) 6= C. For the first case, he outputs Xi,t−1. Again, we refer to the latter case
as a false alarm.
2. For the j-th iteration, let Yj = (ft−j+1 ◦ . . . ◦ ft)(Y0). If Yj = EPi for some i, then the
database computes Xi,t−j−1 and see whether F (Xi,t−j−1) = C. Once F (Xi,t−j−1) = C,
the algorithm stops and outputs Xi,t−j−1. Otherwise Yj is not one of the end points or
a false alarm occurred. In this case, the cryptanalyst proceeds next iteration if j < t−1
and output ”NONE” if j = t− 1.
Probability of success of the rainbow table for the function F : {0, 1}k → {0, 1}s is defined
as follows:
PS
def
=
number of different inputs in the table
2k
.
In [14], Oechslin shows that the success probability of the rainbow table is
PS = 1−
t∏
i=1
(
1− mi
2k
)
where m0 = mt and ms+1 = 2
k
(
1− e−ms2k
)
. To solve the recurrence, we use the following
result due to [2].
Lemma 4. [2] mj ≈ 2mt2kmtj+2k+1 for sufficiently large j where m0 = mt and 2k = mt2.
6
4.1 Applying time-memory trade-off on Database Setup of CTI
We apply the above time-memory trade-off on the setup of the database of the protocol
CTI. We follow a similar way of [3] to adapt the time-memory trade-off to our case. Let
ψ0, . . . , ψN−1 be an enumeration of the pseudonyms in Ψ. We define the function F : ZN ×
ZC → {0, 1}s by
F (i, j) = h(ψi, j).
We also need many reduction functions Ri : {0, 1}s → ZN ×ZC . These functions can be de-
fined as follows. Let {pii : i = 1, . . . , s} be a family of permutations on the set {1, . . . , s} and
{Πi : i = 1, . . . , s} be a family of functions from {0, 1}s to {0, 1}s defined by Πi(x1, . . . , xs) =
(xpii(1), . . . , xpii(s)) for each i. Ri(x) defined by Ri(x) = (Π
i(x) modN, bΠi(x)
N
cmodC) are
appropriate reduction functions.
Let m, t be integers such that NC = mt2. To obtain (1 − ε) probability of success, the
database precalculates log9/4(1/ε) mt× t tables and stores the start and end points for each
tables. For the database, the number of hash operations used in its preprocessing time is
NC log9/4(1/ε) and it only needs to store at most 2NC(log9/4(1/ε))(log2(NC))/t bits. In
particular, if ε = (4/9)30, the database precalculates 30 tables by using 30NC hash operations
and stores at most 60NC(log2(NC))/t bits. In the case that ε = 0.001, the database
precalculates 9 tables by using 9NC hash operations and stores at most 18NC(log2(NC))/t
bits.
4.2 CTI/TM(ε) protocol
Now we describe the proposed protocol CTI/TM(ε).
The Protocol CTI/TM(ε):
Setup: The tag setup is the same as the setup of CTI except that the tag can use another
hash function g such that g(·, k) is a permutation on {0, 1, . . . , C − 1} with high probability
by choosing k uniformly due to the hardness of finding collision of hash functions. The setup
in the back-end database is implemented via the time-memory-trade-off method with success
rate (1− ε) described in the previous subsection.
Identification Process: The database can identify the tag by the following procedure.
1. The reader requests the tag and sends a random string r to it.
2. The tag uses its secret key k, pseudonym ψ and counter value c to compute c˜ = g(c, k),
h(ψ, c˜), and r′ = h(0, ψ, c˜, k, r). Next the tag increments c as c+ 1 and sends the two
hash values to the reader which passes them to the database.
3. After receiving r′ = h(ψ, c˜), the database uses the time-memory-trade-off method
to search the corresponding pair (ψ′, c′), retrieves the secret k, and checks if r′ =
h(0, ψ′, c′, k, r).
4. The remaining processing is the same as the procedure of CTI.
8
Table 1: Comparison between the randomized hash-lock protocol, CTI, and CTI/TM(ε) where
the number of hash operations used for one tag identification is (log9/4(1/ε))t(t− 1)/2.
Protocol Identification time Database memory Success probability
(number of hash operations) (bits)
Randomized hash-lock O(N) O(N) 1
protocol [16]
CTI [6] O(1) NC log2(NC) 1
CTI/TM(ε) (log9/4(1/ε))t(t− 1)/2 2(log9/4(1/ε))NC log2(NC)/t 1− ε
(This paper)
CTI/TM(0.001) 9t(t− 1)/2 18NC log2(NC)/t 0.999
(This paper)
CTI/TM((4
9
)30) 15t(t− 1) 60NC log2(NC)/t 1− 2−35
(This paper)
The first assumption is based on the approximation by a dual-core processor operating at
1.83 GHz released in 2007 and we refer the reader to [11] (Section 7). The second assumption
is due to the fact that a passive EPC tag responds to request of a reader in the order of 4
milliseconds [6, 17].
From the above assumptions, when identifying one tag, the number of hash operations
performed by single computer is 217. Thus, in CTI/TM(0.001), the number of hash operations
used for identifying one tag is required that
T0.001 = 9t(t− 1)/2 ≤ 217.
So if t = 29/3 then this requirement can be fulfilled. As a result, the memory complexity
of CTI/TM(0.001) is 27/256 times less memory space than that of CTI. So, CTI/TM(0.001)
saves at least 89.5% storage space. We give some concrete examples for comparison.
The number of tags NT is assumed to be 10
9 and the number of pseudonyms N is
2 ·109. Suppose the maximum counter value C = 106. In this case, CTI has space complexity
approximately 13 Petabytes while CTI/TM(0.001) has space complexity about 1.3 Petabytes.
On the other hand, if the number of pseudonyms and the memory space of CTI/TM(0.001)
and CTI are all equal, then CTI/TM(0.001) obtains approximately 10C-privacy while CTI
obtains C-privacy. Let us see the following example. Typically, the response time of EPC
tags is about 4ms [17]. As explained in [6], when C = 106, the adversary must interrogate
the tag for about 1.11 consecutive hours in order to find the correlation of its responses.
If the number of pseudonyms and the storages of CTI/TM(0.001) and CTI are 2 · 109 and
13 Petabytes respectively, then the maximum counter value in CTI/TM(0.001) can be 107.
Thus, the adversary must spends about 11.1 consecutive hours to trace a tag.
10
[5] Basel Alomair and Radha Poovendran. Privacy versus scalability in radio frequency
identification systems. Computer Communications, Vol. 33, No. 18, pages 2155–2163,
2010.
[6] Basel Alomair, Andrew Clark, Jorge Cuellar, and Radha Poovendran. Scalable RFID
systems: a privacy-preserving protocol with constant-time identification. IEEE Transac-
tions on Parallel and Distributed Systems, pages 1536–1550, Volume 23, Issue 8, August
2012.
[7] Basel Alomair, Loukas Lazos, and Radha Poovendran. Securing Low-cost RFID Sys-
tems: an Unconditionally Secure Approach. In The Asia Workshop Procedings on Radio
Frequency Identification System Security-RFID-Sec’10, pages 1–17, 2010.
[8] M. E. Hellman. A cryptanalytic time-memory trade-off, IEEE Transactions on Infor-
mation Theory page401–406, No.26 (4), 1980.
[9] Ari Juels. RFID security and privacy: a research survey. IEEE Journal on Selected
Areas in Communications, 24(2): pages 381–394, February 2006.
[10] Ari Juels and Stephen Weis. Defining strong privacy for RFID. ACM Transactions on
Information and System Security, Volume 13, Issue 1, Article No. 7: pages 7:1–7:23,
October 2009.
[11] Kaleb Lee, Juan M. G. Nieto, and Colin Boyd. Improving the Efficiency of RFID Au-
thentication with Pre-Computation. In Proceedings of the Tenth Australasian Informa-
tion Security Conference (AISC 2012), Melbourne, Australia, pages 91–100, 2012.
[12] David Molnar and Wagner. Privacy and security in library RFID: issues, practices, and
architectures. In Proceedings of the 11th ACM conference on Computer and communi-
cations security, pages 210–219, 2004.
[13] P. Najera and J. Lopez. RFID: Technological issues and privacy concerns. In Digital Pri-
vacy Theory, Technologies, and Practices, A. Acquisti, S. Gritzalis, C. Lambrinoudakis,
and S. D. C. diVimercati Eds, pages 285–306, December, 2007.
[14] P. Oechslin. Making a faster cryptanalytic time-memory trade-off, In Proceedings of
Crypo 2003, in LNCS, vol. 2729, Springer-Verlag, 2003, pp. 617-630.
[15] Daniel Sleator and Robert Tarjan. Amortized efficiency of list update and paging rules.
Communications of the ACM, 28(2), pages 202–208, 1985.
[16] Stephen Weis, Sanjay Sarma, Ronald Rivest, and Daniel Engels. Security and privacy
aspects of low-cost Radio Frequency Identification Systems. In Proceedings of Interna-
tional conference on security in pervasive computing - SPC 2003, pages 454–469, 2003.
12
2. A calls the oracles Query, Send, and Execute using T and R for learning.
3. A stops learning and notifies C.
4. A uses the oracle Send and Query to impersonate a tag and a reader, respectively.
5. If A is authenticated as a valid tag or a legal reader, then A wins the game.
We define the adversary’s probability of authentication as the probability that A wins the
above game.
Definition 1. An RFID mutual authentication protocol is said to be secure if it satisfies the
following conditions:
1. No information about the secret keys of the tag is revealed by observing messages ex-
changed in protocol runs.
2. If the protocol run is honest, the tag-reader pair must authenticate each other with
probability one.
3. The probability of authentication when the protocol is not honest is negligible in the
security parameter.
Next, we give formal definitions for the RFID privacy. For privacy, we have two notions:
c-privacy and forward privacy.
A RFID protocol is c-private if an active adversary cannot track a tag based on its re-
sponses to multiple interrogation even if the tag has not been able to accomplish mutual
authentication with an authorized reader. Privacy is modeled by the following experiment
between a RFID system C and a polynomial-time adversary A.
c-Privacy:
Setup Phase:
1. GEN(k)→ (k1, . . . , kn).
2. Initialize the reader R with (k1, . . . , kn).
3. Set each Ti’s key to ki.
Learning Phase:
1. A can do the following in any interleaved order:
(a) A can communicate with R and tags {Ti}.
(b) A can reset new keys for at most n− 2 tags.
Challenge Phase:
14
3. C selects a random bit b and sets T = Tb and send T to A.
4. A makes queries of T and R using the oracle Reveal.
5. A outputs a bit b′, and wins the game if b′ = b.
We define the adversary’s advantage of identifying the tag in the above game as
Advfw(A) =
∣∣∣∣Pr[b′ = b]− 12
∣∣∣∣ .
Definition 3. An RFID system S obtains forward privacy if Advfw(A) is negligible in the
security parameter for any polynomial-time adversary A.
16
 18 
International Conference on Genetic and Evolutionary Computing, Shenzhen, China.  
7. Jen-Chun Chang, I-Te Tsai, Hsin-Lung Wu (2010, Oct). Efficient decoding algorithms 
for constant composition codes. 2010 IEEE International Symposium on Information 
Theory and its Applications, Taiwan.  
8. Jen-Chun Chang, Hsin-Lung Wu (2009, Sep). A hybrid RFID prootocol against tracking 
attacks. 2009 International Conference on Intelligent Information Hiding and 
Multimedia Signal Processing, Kyoto, Japan.  
9. Jen-Chun Chang, Hsin-Lung Wu (2009, Jun). Distance-increasing mappings from binary 
vectors to constant composition vectors. 2009 IEEE International Symposium on 
Information Theory, Seoul, Korea.  
 
 1 
行政院國家科學委員會補助參與國際會議報告 
                                              101 年 9 月 19 日 
報告人姓名 張仁俊 
服務 
機構 
國立台北大學資訊工程學系 職稱 教授 
中文：2012 第六屆遺傳及進化計算國際研討會 
會議正式名稱 英文：2012 The Sixth International Conference on Genetic 
and Evolutionary Computing 
會議時間 
自 101 年 8月 25 日 
至 101 年 8月 28 日 
地點（國、州、城市） 日本、北九州 
 
報告內容： 
 
一、 參加會議經過： 
2012 年 8 月 23 日我以及一位我所指導的碩士班學生李楊國由桃園機
場出發前往日本北九州(Kitakyushu, Japan)，參加 2012 The Sixth 
International Conference on Genetic and Evolutionary Computing 
(2012 ICGEC) 國際會議。此行我們主要的目的是發表論文『An Efficient 
Fragile Watermarking Scheme for Pixel-wise Tamper Detection』。由
於會議前我要順道拜訪一位日本朋友，所以我們航班是先到大阪，隨後再
前往北九州。會場是為於北九州國際會議中心 2F，我們抵達位於附近下榻
的旅館之後，在會議前一天先到北九州國際會議中心去認識一下環境。 
正式會議之議程於 8 月 25 日開始，每日議程開始均有 Keynote 
 3 
選一個 session 參加。我們參與的 Sessions 包括：  
 SA01 Innovative Intelligent Multimedia Computing 
 SB05 Multimedia and Cloud Computing Security 
 SC09 Advances in Information Security (II) 
 MC03 High Speed Computation and Applications in Information     
     Security Systems 
 MB05 Intelligent Computing and Its Applications in  
     Multimedia (I) 
 MB08 Intelligent Computing and Its Applications in  
     Multimedia (I I) 
 TB02 Intelligent Video Processing 
以上每一個 session 均有 5至 6篇論文發表。我們的論文『An Efficient 
Fragile Watermarking Scheme for Pixel-wise Tamper Detection』被
排在 MB05 Intelligent Computing and Its Applications in Multimedia 
(I) 這個 session 的第 1 順位，大約有 15 分鐘讓我們進行簡報發表論文
並與其他學者互相討論。 
因為會議最後一天 8月 28 日的議程排到下午，會議結束後我們搭車回
到博多當地飯店已經晚了，所以我們是隔天早上(8 月 29 日)搭乘中華航空
班機離開日本，結束了日本北九州之 2012 第六屆遺傳及進化計算國際研
討會的行程，回到台灣。 
 5 
研討會經常會在歐美舉辦 (例如本會議明年在捷克舉辦、IEEE ISIT 2013
在土耳其舉辦、Crypto 2013 在美國舉辦、Eurocrypt 2013 在希臘舉辦)，
機票費用相對而言昂貴許多。因此經費問題是一大隱憂，希望未來國科會
與計畫審查委員能盡量給予論文發表者增加經費，以鼓勵研究人員盡力爭
取在世界知名的國際會議上發表研究成果的機會。 
 
五、 其他 
  此次攜回物品為 Final Program Handbook (紙本)、Conference 
Proceedings CD (電子檔之會議論文集，內容為所有 ICGEC 2012 會議所收
錄之論文)，相當具有參考價值。 
 
 
99年度專題研究計畫研究成果彙整表 
計畫主持人：張仁俊 計畫編號：99-2221-E-305-008-MY3 
計畫名稱：RFID 安全性與隱私性之深入研究：理論與實作 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 1 1 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 1 2 50%  
研究報告/技術報告 0 0 100%  
研討會論文 8 8 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
