 1
中文摘要 
本計畫共由四個子計畫所組成為期三年，擬透過各子計畫間之合作，針對實體層、資
料連結層、網路層、傳輸層及應用層研發與實作，並整合感測網路與無線通訊兩領域的相
關技術，以提供『室內服務跟隨』與『戶外環境感測與自動修復』之應用服務。 
在計畫第二年中，子計畫一完成設計的一個簡單的時間同步方法，可達到節點的
Multi-hop 時間同步。同時也設計一個在無線感測網路中使用六角虛擬座標的繞徑協定，讓
傳送封包的路徑可以分散，避免過於集中造成過度損耗某些節點的電量，藉以達到負載平
衡而延長網路壽命的目的。子計畫二完成發展一錯誤位置偵測及修正的技術，對於感測器
因受外在環境影響而產生記錄錯誤的位置，加以偵測並予以修正，以提高繞徑的效能。此
外也發展一分散式繞徑演算法，使其在模糊位置資訊之下仍可將封包正確的傳送至目的
地。在克服障礙物的部份，發展一克服障礙物的廣播演算法，以減少代傳點的數目與克服
未知的障礙物，進而達到節省感測器電量、網路頻寬、以及高度封包到達率。上述協定亦
製作於 TinyViz 模擬器之中。子計畫三針對感測網路理論部份的省電效率的提昇、ad-hoc
網路中 QoS 傳輸保證與網路位置自動設定，完成三個研究結果，分別為(1) C-MAC (An 
Energy-Efficient MAC Scheme Using Chinese-Remainder-Theorem) 有效省電協定，使感測網
路運作的壽命更長，同時又可以具有 low latency 的特性、(2) 在 ad-hoc 網路上利用 MIMO
技術提出了 “Bow-Based QoS Routing Protocol”，提昇 ad-hoc 網路在傳輸方面的效率，克服
bottleneck 的 問 題 ， 使 整 體 網 路 傳 輸 表 現 變 好 、 (3) 提 出 了 ”Ring-based Address 
Autoconfiguration Protocol”來解決 ad-hoc 網路位址取得的問題，使 ad-hoc 網路上的節點可
以有效率的自動取得與設定網路位址，使網路位址分配效率提高。另外，在實作研究成果
方面，則完成自行開發出能夠自動飛行的 UAV，使直昇機可以自動根據感測資料前往事件
發生地點進行資料詳細感測，快速找出問題點，減少災害的損失。子計畫四完成針對多匯
點感(multiple-sink)測器網路，結合了資料彙集和擁塞避免的概念提出了一個新的資料傳輸
方法：分散式輪廓到匯點資料遞送(Distributed Contour-to-Sink Forwarding)，簡稱 DCSF，利
用近似最佳覆蓋二階層(two-tier)感測網路架構，在高密度的感測器網路中，僅有少部分的
感測器維持於活躍(active)狀態，而讓其他感測器進入休眠狀態以節省電力，延長網路壽命。 
關鍵詞: 感測點、無線感測網路、服務跟隨、時間同步、繞徑協定 
 3
Address Autoconfiguration Protocol” to solve the problem of assigning address in ad-hoc 
networks and make each node can efficiently automatic get and configure an address to itself. 
Otherwise, in practical research result, we finished implementing an autopilot helicopter named 
“Unmanned Aerial Vehicle (UAV).” This helicopter can automatically fly to the location where 
sensors detected events according to the reported information of sensors. In this way, we can 
quickly find out the problem and decrease the damage of disaster. 
In the forth sub-project, we proposed a new method of data transmission which combined 
the ideas of data aggregation and congestion avoidance in multiple-sink wireless sensor networks. 
The method is named “Distributed Contour-to-Sink Forwarding (DCSF).” We use a two-tier 
sensor network architecture of approximate optimal overlay in high density sensor networks. In 
this way, only few sensor nodes keep in active state, but others are enter to power-saving state to 
achieve saving energy and extending the network lifetime.  
Keywords: Sensor node, wireless sensor networks, context-aware service, time synchronization, 
routing protocol 
 5
子計畫四之第二年計畫目的，將延續第一年的研究，嘗試在達到完全的覆蓋率及連結
維持的情況下，達成可容忍感測器 faulty reading 的事件感知(Event detection) 共識決定
(Consensus decision)技術，我們將探討如何達成較低誤報機率(False alarm probability)及較高
偵測機率(Detection probability)的方式。 
一、 研究方法 
子計畫一： 
在子計畫二的第二年中，我們在無線感測網路的研究中，提出兩個研究結果，以下分
別說明之： 
1. Ratio-based Time Synchronization Protocol (RSP) 
(此研究成果已被接受並發表 The 2nd Workshop on Wireless, Ad Hoc, and Sensor Networks, 
WASN 2006 會議) 
我們完成設計的一個在無線感測器網路中設計與實作一個以比率為基礎之時間同步協
定，命名為 Ratio-based Time Synchronization Protocol (RSP)。目前時間同步應用範圍相當廣
泛，已經有許多學者提出時間同步的方法分，別為 RBS[1]、TPSN[2]與 FTSP[3]。在無線感
測網路中，因為有限的電量、運算資源限制以及環境因素，影響時間同步的效能。如何在
節省資源同時，能夠有效的達到時間同步。我們提出了一個設計的方法簡稱為 RSP。利用
簡單的計算，少量的封包傳送，達到同步的功能。我們也實作此方法於由美國柏克萊大學
所發展的 MICAz 感測器，並設計實驗驗證時間同步誤差值；實驗結果可看出時間同步誤差
較 FTSP 較低，效能較好。我們假想節點的個別的 clock 時間為固定的頻率，不考慮震盪器
所產生時間的誤差，故兩個節點間的 clock drift 為固定的比值；節點利用此項假設，算出與
參考點的換算公式，以達成與參考點時間同步的效果。 
我們經由實際的實驗來驗證我們的演算法具有極佳的成效，我們利用五個節點，拓樸
如下圖一，每個節點只能跟左右兩個節點進行通訊，以節點 0 為參考點，設定每隔 30 秒或
5 分鐘重新同步一次，實驗時間為一個小時。藉此觀察在每增加一個 hop count 個數，同步
誤差值累計的情況。 
 
 
0 1 2 3 4  
 每 30s 重新同步 每 5 分鐘重新同步
 誤差平均
值(μs) 
誤差最大
值(μs) 
誤差平均
值(μs) 
誤差最大
值(μs) 
N1 0.44 2 1.53 7 
N2 0.57 3 1.96 12 
N3 0.75 4 2.26 11 
N4 0.88 4 3.83 16  
圖一. 實驗之節點拓樸 表一. 實驗之誤差 
 
我們將以上實驗進行統計，將所有誤差平均值整理如上表一。N1 代表節點 1，其他以
此類推。節點誤差平均值，代表該節點與參考節點 0 時間誤差值全部總和平均，節點誤差
最大值同理為所有與節點 0 誤差資料之最大值。以 30 秒為同步週期，節點 1 和節點 4 之誤
差平均值分別僅有 0.44μs 與 0.88μs，最大誤差值為 2~4μs 之間。平均增加一個節點其誤差
最多增加 1μs。以 5 分鐘為同步週期，誤差較大，所有節點平均誤差介於 1.53μs~3.83μs，
最大誤差值發生節點 4，其值為 16μs。可以從數據中得知，若距離參考節點越遠，則因同
 7
另外在 Routing 的效能方面，我們和先前的文獻 GPSR[5]演算法做比較，發現 GPSR 的
平均 Path length 是 24.6 個 hops，而我們的平均 Path length 是 25.54 個 hops。雖然我們平均
多走了 0.94 個 hops，但是我們的演算法卻可以做到 Share load 的功能，並延長整體網路的
Lifetime。為了證明我們的演算法較 GPSR 演算法可達到 Share load 的功能，我們利用下圖
四來表示。 
  
圖四. 左方為使用 GPSR 演算法，右方為使用我們的演算法的 Load blance 示意圖
 
圖四中每個點皆有各自代表不同 Load 程度的顏色，顏色所分別代表的意義是: 綠色 
(5-7 transit paths)、粉紅色 (8-10 transit paths) 、紅色 (11-13 transit paths)和黑色 (≧ 13 transit 
paths)，且兩圖中間是一個洞，所以中間並無任何節點存在。很明顯地在圖四右方使用我們
演算法的圖中只有 3 的代表 Load 最重的黑色點。然而在圖四左方使用 GPSR 演算法的圖
中，卻有高達 14 個黑色點。因此，很明顯地使用我們的演算法，可達到 Share load 的效果。 
 
子計畫二： 
在子計畫二的第二年中，在理論部份是提出錯誤位置偵測及修正的技術。此外，我們
也發展一分散式繞徑演算法。首先，我們在模糊位置資訊的環境下，針對 Sensor 因移動而
記錄錯誤的位置資訊進行偵測與修正，透過 Sensors 主動察覺不同時間點鄰居的變化，並利
用這些變化來達到錯誤位置偵錯及更正的目的。在這個部份，我們並針對同一時間單一
sensor 移動及群體移動之場景進行分析[6]，並設計出分散式的判斷與修正法則，使每個
sensor 均能維護其正確的模糊位置資訊。此外，我們亦研發一分散式繞徑演算法，使其可
運作在模糊位置資訊之環境下，研發許多限制式使 Sensor 可利用少量的封包轉送將封包正
確的傳送至目的地。在克服障礙物的議題方面，我們針對障礙物對 Zone-based Broadcasting 
Protocol 的影響進行分析，並提出克服障礙物之廣播演算法，藉由動態的座標系統，讓每個
Sensor 知道自己與 Sink node 之間的相對位置，之後透過障礙物對廣播的影響進行分析，並
動態規劃封包廣播的排程，分散式地選出少量的 Sensor Node 幫忙封包代傳，以減少代傳點
的數目與克服未知的障礙物，進而達到節省 Sensor 電量、網路頻寬、以及高度封包到達率。 
 
實作模擬程式- 模糊位置下繞境演算法的效能 
爲了檢視我們所提出的錯誤位置偵測與修正技術及分散式繞徑技術的效能(LARP)，在
網路初始化之後，隨機的讓環境中的 sensor 將感測資料傳至 Sink。並且利用我們所提出的
方法與 GPSR[5]、Flooding 等方法比較。如圖五所示，除了當點數 300 時因為網路有 partition
的情況造成 99%的 delivery ratio 之外，其他點數的情況皆能夠將封包正確的送達至 Sink。
 9
  
圖七. Example of C-MAC 圖八. Performance of power consumption 
 
2. Bow-Based QoS Routing Protocol 
(此研究成果已接受將發表在 ACM International Wireless Communications and Mobile 
Computing Conference, Hawaii, August 2007.) 
在第二個研究成果中，我們在 ad-hoc 網路上，利用 MIMO 的技術，提出了 Bow-based 
QoS 路由繞徑協定，我們稱之為 BowQR。 在網路傳輸中，常常會發生因為某些路徑上的
節點是唯一，導致網路傳輸都必須通過該網路節點，該網路節點即形成了網路效率的
bottle-neck。我們利用 MIMO 技術中的 diversity gain (range-link)的方式，建立出 multi-path 
structure 以進行傳輸，我們稱之為 bow，藉由 bow 的建立，克服了網路效率的 bottle-neck。
同時，因 range-link 具備了長距離傳輸的特性，更可以使傳輸路徑整體縮短，所以利用 bow
所建立的傳輸路徑，因整體的 hop 數更少，而達到更快傳輸完成的現象。根據這兩個特性，
讓我們可以在 ad-hoc 網路上利用 MIMO 技術而提出網路傳輸品質服務的保證，Bow-based 
QoS routing protocol，實驗結果證明比[9]的結果更提高 throughput 與提供 QoS 服務的成功
率，有明顯的改進。 
圖九. Example of BowQR 圖十.Throughput vs. Ratio of the range-link
 
3. Ring-based Address Autoconfiguration Protocol 
(此研究成果已被接受並發表在國際期刊 Wireless Personal Communications, 2007) 
 11
Forwarding)的資料傳輸方法，我們目標是儘量使用多匯點感測器網路的資源和優點，做到
資料及時回報。DCSF 主要的概念如下所述：當形成連續區域的事件發生時，只有事件區
域輪廓線附近的感測節點需要傳送資料，這些節點會依照相鄰節點對於事件的感測狀況進
行判斷，以遠離事件區域的方向，選擇最近的匯點傳送資料，就如同依照匯點數目將事件
區域輪廓切成數個區段，每個區段都有一個對應的匯點，而每個區段附近的節點則將資料
傳送給不同的對應匯點(如圖十五)。當擁塞發生時，DCSF 則配合以偶聽方式，由擁塞節點
漸次向資料來源節點傳遞擁塞訊息以減低資料回報率解決擁塞問題。DCSF 僅僅讓輪廓線
附近的節點傳送資料，能夠達到相當的資料減量功能，但是又不影響匯點針對事件的進一
步處理(如事件範圍偵測、事件強度計算與目標追蹤等)。DCSF 利用對輪廓線上的節點進行
分割，並決定資料需要傳送到哪一個匯點，使得針對單一匯點的資料量減少，降低匯點周
圍網路擁塞的可能性，同時將感測資料傳給多個匯點除了能達到即時回報之外，同時也使
得單位時間內匯點能接受的資料量增加，發揮多匯點感測器網路的優點。 
 
圖十五. 事件區域輪廓線的切割與對應資料傳送匯點 
二、 結果與討論 
子計畫一： 
在子計畫一的第二年中，我們提出一個名為 Ratio-based Time Synchronization Protocol 
(RSP)之時間同步協定，利用週期性送出傳送之時間封包，及簡易的運算式來維護整個網路
的同步，此同步效果使得在此網路中執行的應用程式，不致受到影響。而且任何在其上運
作的應用程式或系統，皆可將此同步技術融入其中運行。我們並將 RSP 實作於 MICAz 無
線感測器，以每 30s 同步一次之實驗結果，其同步誤差值比 FTSP 表現較好；另一方面，我
們在實作的時候，將考慮網路拓樸改變等因素，可能造成誤差值變大，設計了特別的機制
處理類似的情形，有效提高同步效能，降低同步誤差值。根據實驗所得到的數據，可觀察
出 RSP 方法誤差值極小，且能讓網路持續保持同步，進而達成相當程度之容錯能力。 
子計畫二： 
在子計畫二的第二年中，我們提出一錯誤位置偵測、修正以及繞徑的技術，並且針對
有障礙物的環境中，研發有效率的克障廣播機制。對於 sensor 因受外在環境影響而產生記
錄錯誤的位置，加以偵測並予以修正，以提高繞徑的效能。此外，所發展一克服障礙物的
廣播演算法，以減少代傳點的數目與克服未知的障礙物，進而達到節省 Sensor 電量、網路
頻寬、以及高度封包到達率。上述協定亦製作於 TinyViz 模擬器之中。 
子計畫三： 
在子計畫三的第二年中，在理論部分: (1)我們提出了具有高效率省電的C-MAC protocol 
