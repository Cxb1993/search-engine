I 
 
目錄 
一、  前言 ....................................... 3 
二、  研究目的 .................................. 10 
三、  文獻探討 .................................. 12 
四、  研究方法 .................................. 19 
五、  結果與討論 ................................ 49 
六、  計畫成果自評 .............................. 80 
七、  成果列表 .................................. 81 
八、  可供推廣之研發成果資料表 .................. 83 
九、  附錄 ...................................... 84 
 
 
2 
 
英文摘要 
In NCP (Networked Communications Program) IMS (IP Multimedia Subsystem) project, ITRI 
(Industrial Technology Research Institute)/NCTU (National Chiao Tung University) has 
deployed an effective IMS platform and the platform will be integrated with Femtocells. 
However, there are no test cases and tools designed for the conformance test and the 
interoperability test of this IMS-enabled Femtocell platform. Based on the above requirements, 
we propose a“Conformance Test Technologies on an IMS-enabled Femtocell Platform” project. 
This project designs the test cases based on 3GPP (Third Generation Partnership Project) 
TS24.228 specification, develops the test system by using TTCN-3 tool, and performs the 
conformance/interoperability tests for the IMS platforms deployed in NCTU and NIU (National 
I-lan University). Moreover, this project will develop an automatic test case generator to 
effectively create IMS test cases. Finally, this project will cooperate with ITRI to submit the 
results (i.e., test cases and test tools) to OMA (Open Mobile Alliance) and assist the mobile 
operators to evaluate their IMS platforms. 
Keywords：CSCF、IMS、OMA、SIP、TTCN-3 
  
4 
 
以上之資料顯示行動數據服務是未來通訊產業應積極推動的方向，為促進行動數據服
務之發展，關鍵點除了手機功能的增強及電信業者 3G 網路的升級外，互通性將是一
重要的因素。以往由於電信網路的封閉性及行動手機的特性(如螢幕大小、記憶體、中
央處理器計算能力等)不同，不同廠商所推出的應用伺服器及手機之間的互通性較差，
無法與在固網上以個人電腦為主要使用平台的應用服務相比。然而隨著 3G 網路頻寬
的增加、手機各方面功能的增強，藉由行動網路來提供/獲取數據服務的需求將日益增
加，All-IP 電信網路時代的來臨也將使電信網路技術更加的開放。因此在手機與行動
電信業者所提供之應用服務伺服器間、電信業者與電信業者所提供之應用服務伺服器
間，甚至於手機與手機間，訂定一個共同的服務標準規範，使得不同廠牌的手機能在
隨心所欲的使用各家電信業者所提供之應用服務及內容，使電信數據服務產業能早日
蓬勃發展。 
OMA (Open Mobile Alliance)組織的目的，就是希望能制定更開放且互通性佳的應用服
務。目前 OMA 所制定之應用服務規範包括 Browsing、Client Provisioning、Digital Rights 
Management (DRM)、Domain Name Server (DNS)、Download、Instant Message and 
Presence Service (IMPS)、Multimedia Messaging Service (MMS)、Push-to-Talk over 
Cellular (PoC)、Game 等。OMA 不僅制定應用服務的技術標準，更進一步為互通性也
制訂了一致性測試(Conformance Test)及互通性測試(Interoperability Test)的規範，並將
由世界性認證組織依 OMA 所制訂之測試規範進行手機應用服務功能之認證。OMA 預
6 
 
            
 
 
 
TTCN-3 based UE 為在 TTCN-3 所開發之手機軟件，OpenIMS SERVER 為測試符合性
之對象，而符合性驗證(如圖二)所示，其驗證流程為(1)首先 TTCN-3 based UE 發送 SIP 
圖二、在 TTCN-3 驗證通過結果 圖三、在 TTCN-3 驗證未通過結果 
圖四、驗證符合性未通過的原因 
8 
 
 
 
SIP 通話建立是由發話端 (originator) 與受話端 (terminator) 雙方之 UA (User Agent)共同
完成。發話端 UA 扮演 UAC (User Agent Client) 角色，負責向受話端發送通話建立請求，
並由受話端 UA 扮演 UAS (User Agent Server) 角色，用以回覆 UAC 之請求。SIP 基本通
話建立訊息流程如圖五所示，包含以下步驟： 
步驟 1. UAC 傳送 INVITE 訊息向 UAS 發送通話建立請求，並由核心網路轉送至 UAS。此訊
息包含初始語音會期的 SDP 資訊，用以向 UAS 提供 UAC 的語音會期處理能力。 
步驟 2. 當核心網路接收到 INVITE 訊息時，會立即回傳 100 Trying 來指示已接收 INVITE 訊
息，避免 UAC 因等待回覆過久而重送訊息。 
步驟 3. 在 UAS 收到 INVITE 訊息後，即開始振鈴通報其使用者，並回傳 180 Ringing 訊息至
UAC。另一方面，當 UAC 收到 180 Ringing 訊息時，會立即產生回鈴音 (ringback tone) 
提示使用者。 
步驟 4. 若 UAS 使用者接受此通話請求，UAS 將透過 200 OK 訊息來告知 UAC。此訊息夾帶
圖五、基本通話建立訊息流程 
10 
 
二、 研究目的 
定義於第三代行動通訊 3GPP 的標準中的 IP 多媒體子系統(IMS)，近來已逐漸成為整
合行動通訊、無線網路以及寬頻網路提供多媒體服務的基礎架構。在電信國家型計畫
的建置案中，工研院與交大合作建置出一套高效能的 IMS 平台，而目前工研院正在發
展 Femtocell 相關的研究，包含 IMS 與 Femtocell 整合系統等等。本計畫以 3GPP 標準
TS 24.228 為主，採用電信標準測試工具 TTCN-3 開發基於 IMS 與 Femtocell 整合之
符合性測試系統以及效能測試。本計畫考量到目前標準 (eg., 3GPP TS 24.228 目前版本
為 24228-5f0 )仍然正在修訂中隨時會更新版本，所以本計畫在開發過程中，先將目前
標準為主撰寫為 TTCN-3 之測試模組，並且能夠使 TTCN-3 自動產生相對應測試模組 
(eg.,TTCN-3 扮演客戶端接受來自於伺服器回應，並且可以自動產生相對應之要求)，
藉此完成符合性測試之驗證。一但標準有更動，只需更改 TTCN-3 測試模組中參數，
依然可以達到前述效果。此一系統完成後，無論標準在日後修訂新版本以及 TTCN-3
扮演是手機端或是 IMS 端皆可使用，並且可提供學界研究與廠商應用，以提升我國電
信應用服務之測試能力。也可與工研院合作，將此成果於國際標準組織 OMA 中推廣。 
在效能實作測試方面，VoIP 為現行最重要的網路服務之一，此服務建置於 3GPP IP 多
媒體子系統及 IETF SIP 網路架構上。為了在此兩種網路架構中評估 UE 與核心網路
之間的服務效能，本計畫對 UE 於不同無線網路、不同傳輸協定、有無啟用身份認證、
QoS 協商與 TLS 安全機制下的撥號後延遲(Post Dialing Delay，簡稱 PDD)進行測量。
12 
 
三、 文獻探討 
3G and IMS 方面 
 
1. Y.-B. Lin, W.-E. Chen and C.-H. Gan. “Effective VoIP Call Routing in WLAN and Cellular 
Integration”. IEEE Communications Letters. Volume 9, Issue 10, Oct. 2005 Page(s): 874 – 876. 
2. W.-E. Chen, Y.-B. Lin and A.-C. Pang. “An IPv4-IPv6 Translation Mechanism for SIP Overlay 
Network in UMTS All-IP Environment”. IEEE Journal in Selected Areas on Communications. 
Volume 23, Issue 11, Nov. 2005 Page(s): 2152 – 2160. 
3. W.-E. Chen, C.-Y. Su and Y.-B. Lin. “NCTU SLT: A Socket-layer Translator for IPv4-IPv6 
Translation”. IEEE Communications Letters. Volume 9, Issue 10, Oct. 2005 Page(s): 865 - 867 
4. Vincent W.-S. Feng, L.-Y. Wu, Y.-B. Lin, and W.-E. Chen. “WGSN: WLAN-based GPRS 
Support Node with Push Mechanism”. The Computer Journal Special Issue on Mobile and 
Pervasive Computing. 47 (4): 405-417 (2004) 
5. W.-E. Chen, Q. Wu, and Y.-B. Lin. “Design of SIP Application Level Gateway for IPv6 
Translation”. Journal of Internet Technology (JIT) Special Issue on IPv6. Vol. 5 No. 2, 2004. 
6. P. Lin, Y.-B. Lin., C.-H. Gan and J.-Y. Jeng, Credit Allocation for UMTS Prepaid Service. IEEE 
Transactions on Vehicular Technology. Volume 55, Issue 1, Jan. 2006 Page(s): 306 – 316. 
7. W.-E. Chen, Y.-H. Sung, and Y.-B. Lin, SIPv6 Analyzer: An Analysis Tool for 3GPP IMS 
Services, Wireless Communications and Mobile Computing Journal. Volume 8 ,Issue 2, 
February 2008 Page(s): 245-253. 
8. W.-E. Chen, C.-H. Gan and Y.-B. Lin, Design of Monitoring System and Conference System on 
NTP VoIP Platform, WSEAS Transactions on Communications, 5 (5), May 2006 Page(s): 
877-883. 
9. S.-I. Sou, Y.-B. Lin, Q. Wu, and J.-Y. Jeng, Modeling Prepaid Application Server of VoIP and 
14 
 
19. W.-E. Chen and Q.-C. Wu. “Development and Deployment of IPv6-based SIP VoIP Networks”. 
IEEE SAINT 2005, Italy. 
 
符合性測試方面 
 
1. Y.-B. Lin, C.-F. Liang, K.-H. Chen, H.-Y. Liao. NTP-SIOT: A test tool for advanced mobile 
services. Network, IEEE Volume 21, Issue 1, Jan.-Feb. 2007 Page(s):21 – 26.  
2. Y.-B. Lin, C.-C. Wang, C.-H. Lu, M.-R. Hsu. NTP-PoCT: a conformance test tool for 
push-to-talk over cellular network. Wireless Communications and Mobile Computing. Volume 
8 ,  Issue 5, June 2008 ISWCS'2006 Page(s): 673-686 
3. L.Grittner,; C. Kleiner,; D. Kadenbach. Implementing OMA DRM Using Web Services: An 
Approach to Integrate OMA DRM and Web Services on Mobile Units. Mobile Data 
Management, 2007 International Conference on 1-1 May 2007 Page(s):393 – 397. 
4. S. Zhong, C. Dolwin, B. Steinke, A. Droege. A OMA DM based Software Defined Radio 
Proof-of-Concept Demonstration Platform. Personal, Indoor and Mobile Radio 
Communications, 2007. PIMRC 2007. IEEE 18th International Symposium on 3-7 Sept. 2007 
Page(s):1 – 5. 
5. S.H. Maes. Service Delivery Platforms as IT Realization of OMA Service Environment: Service 
Oriented Architectures for Telecommunications. Wireless Communications and Networking 
Conference, 2007.WCNC 2007. IEEE 11-15 March 2007 Page(s):2883 – 2888. 
6. 3GPP.Technical Specification Group Services and System Aspects; IP Multimedia 
Subsystem (IMS); Stage 2.  TS 23.228. 
7. Rosenberg J, Schulzrinne H, Camarillo G,et al. SIP: Session Initiation Protocol . IETF RFC 
3261, June 2002. 
16 
 
the Open IMS Core. Vehicular Technology Magazine, IEEE, March 2007 Page(s): 28 – 34. 
3. D. Waiting, R. Good, R. Spiers, and N. Ventura, “Open Source Development Tools for IMS 
Research,” 2008 4th International Conference on Testbeds and Research Infrastructures for the 
Development of Networks and Communities, March 2008. 
4. fring. http://www.fring.com/ 
5. Nokia N95. http://en.wikipedia.org/wiki/Nokia_N95 
6. T. Dierks and C. Allen. The TLS Protocol Version 1.0, RFC 2246, Internet Engineering Task 
Force, January 1999. 
7. Y.-H. Chan. Thesis: VoIP Quality Measurement for Multiple Codecs. NCTU Thesis, July 2007. 
8. B. Campbell, J. Rosenberg, H. Schulzrinne, C. Huitema and D. Gurle, Session Initiation 
Protocol (SIP) Extension for Instant Messaging, RFC 3428, December 2002. 
9. 3GPP. 3rd Generation Partnership Project; Technical Specification Group Core Network and 
Terminals; Communication HOLD (HOLD) using IP Multimedia (IM) Core Network (CN) 
subsystem. Technical Specification 3G TS 24.610 version 8.3.0 (2009-03), 2009. 
10. 3GPP. 3rd Generation Partnership Project; Technical Specification Group Core Network and 
Terminals; Explicit Communication Transfer (ECT) using IP Multimedia (IM) Core Network 
(CN) subsystem. Technical Specification 3G TS 24.629 version 8.2.0 (2009-03), 2009. 
11. P. Srisuresh and M. Holdrege. IP Network Address Translator (NAT) Terminology and 
Considerations. RFC 2663, IETF, August 1999. 
12. J. Rosenberg. A Session Initiation Protocol (SIP) Event Package for Registrations. RFC 3680, 
Internet Engineering Task Force, March 2004. 
13. J. Rosenberg and Schulzrinne. H. Reliability of Provisional Responses in Session Initiation 
Protocol (SIP), RFC 3262, Internet Engineering Task Force, June 2002. 
14. J. Rosenberg, R. Mahy, P. Matthews, and D. Wing. Session Traversal Utilities for NAT (STUN). 
RFC 5389, Internet Engineering Task Force, October 2008. 
18 
 
27. The Sippy RTPproxy. http://www.rtpproxy.org/ 
28. JRTPLIB. http://research.edm.uhasselt.be/~jori/page/index.php?n=CS.Jrtplib 
29. International Telecommunication Union. Service Quality Assessment for Connection Set-up and 
Release Delays. Recommendation E.431, Geneva, 1992 
30. J. Franks, P. Hallam-Baker, J. Hostetler, S. Lawrence, P. Leach, A. Luotonen, E. Sink and L. 
Stewart. HTTP Authentication: Basic and Digest Access Authentication, RFC 2617, Internet 
Engineering Task Force, June 1999. 
31. Niemi, J. Arkko, and V. Torvinen. Hypertext Transfer Protocol (HTTP) Digest Authentication 
Using Authentication and Key Agreement (AKA), RFC 3310, Internet Engineering Task Force, 
September 2002. 
32. 3GPP. 3rd Generation Partnership Project; Technical Specification Group Services and System 
Aspects; 3G security; Security architecture. Technical Specification 3G TS 33.102 version 8.2.0 
(2009-03), 2009. 
33. S. Kent and K. Seo. Security Architecture for the Internet Protocol, RFC 4301, Internet 
Engineering Task Force, December 2005. 
34. The Open Source IMS Core project. http://www.openimscore.org/ 
35. Wireshark. http://www.wireshark.org/ 
  
20 
 
P-CSCF為使用者接入IMS核心網路的第1個連接點，負責處理和接收註冊請求並且轉
送至S-CSCF。S-CSCF為使用者進行SIP會議的控制和註冊，處理以及回應使用者所發
出之請求。S-CSCF負責接受並完成SIP註冊請求，轉送SIP請求至其他營運商的IMS
服務，並且支援緊急呼叫功能及請求HSS (Home Subscriber Server)以獲得I-CSCF所提
供使用者的名稱，HSS則為儲存使用者資料的資料庫。I-CSCF負責分配S-CSCF給使
用者註冊，處理其他營運商的IMS網路連入的SIP請求，轉發SIP資訊給服務使用者的
S-CSCF，最重要的是提供IMS核心網路內部拓撲隱藏功能，防止被攻擊。 
由IMS核心層來看，3個負責處理SIP資訊的CSCF元件扮演了不可或缺的角色，所處
理的SIP資訊更是不能有所差錯。如P-CSCF所負責的SIP資訊若有問題，則可能無法
註冊至IMS核心網路；S-CSCF處理的SIP資訊若有問題，則有可能將SIP資訊轉送至非
預期的營運商，而造成非預期的損失。所以在建置IMS服務時，驗證每一個CSCF元
件是否達到標準所定的規範，以及是否能正確處理或轉送SIP資訊，這是第一道必須
嚴格把關的關卡。因此計畫採用電信測試標準TTCN-3，研發CSCF Conformance Test 
Tool符合性測試平臺(簡稱 CSCF-T)。使用TTCN-3 測試語言，為目前歐美通信廠商
測試通信協定的標準，支援任何的黑箱測試作業，可進行多種通信介面上的各種測試。
TTCN-3可以用於多種類型的測試，例如一致性測試、互通性測試、完整性測試、系
統和整合測試，提供通信製造業、服務供應商、測試研究單位等最佳解決的方案。而
CSCF-T的設計遵循3GPP所定的標準TS 24.228，支援發送SIP信令至待測物，並且支
援MD5及AKAv1-MD5驗證方法。CSCF-T主要功能為測試UE及CSCF，以及CSCF元
件之間的符合性。宜蘭大學CSCF-T平臺建置測試環境如圖六所示。 
 
 
22 
 
效能測試之實驗環境如圖六所示，主要包含了 UAC、核心網路軟體 (Open IMS Core) 與
UAS 三個元件。本計畫使用 CHT 9100 智慧型手機做為實驗 UE 來執行 SIP/IMS UA 軟體，
負責扮演 UAC 角色。CHT 9100 智慧型手機規格如表一所示，採用 Samsung™ 400MHz
處理器以及 128MB ROM 與 64MB RAM，使用的作業系統為 Microsoft Windows Mobile® 
5.0，並內建 IEEE 802.11 b/g 無線網路。本實驗使用開放原始碼 Fraunhofer FOKUS Open 
IMS Core 做為核心網路軟體，並安裝於 Ubuntu 9.10 作業系統上。Open IMS Core 以 3GPP 
IMS 網路架構為主，並能同時服務 IETF 所規範的 SIP UA，提供了後續實驗所需的各種功
能。為了減低 UAS 與 Open IMS Core 之間傳遞封包的延遲，本實驗以 Linux 作業系統版
本之 SIP/IMS UA 來擔任 UAS 角色，並與 Open IMS Core 安裝於同一部電腦設備中。Open 
IMS Core 與 UAS 使用之電腦設備規格如表二所示，硬體使用 Intel® Core™ 2 2.13GHz 處
理器、1GB 記憶體以及 Realtek RTL8111B Gigabit Ethernet 網路介面控制器 (Network 
Interface Controller; 簡稱 NIC)。 
表一：實驗設備 – UAC (CHT 9100) 
CPU  Samsung™, 400 MHz 
Memory 128 MB ROM, 64 MB SDRAM 
OS Microsoft Windows Mobile® 5.0 
NIC IEEE 802.11 b/g Compatible WiFi 
Software SIP/IMS UA (Windows Mobile Version) 
 
  
24 
 
(C). 本計畫首先將 3GPP TS 24.228 標準為主利用語法分析器(例如:Parse、Perl)將訊
息流程關鍵字搭配相對應之訊息 Content 轉成文件檔或是 XML (eXtensible Markup 
Language)供自動化測試模組所用。 
(D). 再來由 TMC (使用者)挑選所需要之測試案例(如 UE to P-CSCF 訊息流程)，根據
所選之測試案例關鍵字(UE to P-CSCF)對照先前所分析好的文件檔，自動產生測試案
例的 Template 參數，Template 參數包含測試案例所需的訊息 Content，利用此參數去
驗證待測物(SUT，System Under Test)所傳送之訊息 Content 或是發送訊息 Content 至
待測物。 
(E). 本計畫接著會先以圖七(1)、(10)作為初步測試對象，以 TS24.228 所描述之
REGISTER 為例，當TTCN-3 扮演 IMS 用戶端(CSCF-T)要去測 IMS 的P-CSCF 時，
首先在 TTCN-3 挑選測試案例(UE to P-CSCF)，這時程式將會依照關鍵字 UE to 
P-CSCF 自動對照先前所分析好的文件檔，並且自動產生所需要的參數以供註冊驗證
所用。 
3. 確認自動化測試模組正確性 
為了能夠確認本計畫所開發之自動產生測試模組為正確性，能夠自動產生測試模組，
本計畫以 OpenIMS 系統為初步測試標的測試自動化測試模組，並且將產生結果與 TS 
24.228 做比較以求正確性。 
26 
 
 
圖八 IMS 註冊流程示意圖 
I-CSCF 伺服器收到 SIP 註冊資訊後，透過 Cx 介面圖八 (3)，利用公有身份及私有身
份與 HSS 確認使用者身份是否在資料庫中。若有，根據公有身份以及私有身份查詢
使用者所設定的服務(如來電答鈴與多媒體影音簡訊服務等)並將符合這些服務的
S-CSCF 伺服器資訊(sip:scscf.home.net)回傳給 I-CSCF 伺服器。I-CSCF 伺服器將根據
收到的資訊自動替使用者挑選適合的 S-CSCF 伺服器後，便將 SIP 註冊資訊轉送至所
挑選的 S-CSCF 伺服器圖八 (4)，而客籍網路識別(P-Visited-Network-ID)則是當使用
者在漫遊的時候，告訴 HSS 所使用的客籍網路名稱，供 S-CSCF 伺服器拜訪及轉發
SIP 資訊至客籍 IMS 核心網路所用。 
 
28 
 
CSCF-T 符合性測試平臺架構 
CSCF-T (CSCF Conformance Test Tool)的開發以 TTCN-3 為基礎，遵循 3GPP 所訂定的標準
TS 24.228 所進行設計，支持發送 SIP 信令並且支援 MD5 及 AKAv1-MD5 驗證。而 CSCF-T
系統架構如圖九所示，主要包含測試管理與控制元件(1)、 TTCN-3 可執行元件(2)、待測
系統轉換器(3)、平臺轉換器(4)、待測系統(5)、 TTCN-3 控制介面(圖九 A)、TTCN-3 運行
時介面 (圖九 B)以及測試系統介面(圖九 C)。  
1）測試管理與控制組件負責控制以及管理測試案例和測試結果，包含以下 3 個組件: 
 測試管理元件(6)負責整個測試系統的管理工作。測試系統經過初始化之後測試
系統便會啟動，由測試管理元件負責導入 TTCN-3 模組至 TTCN-3 可執行組件。 
 測試結果記錄元件(7)，負責記錄執行測試案例所產生的結果，如與 SUT 的資料
傳輸的記錄，以供開發人員偵錯使用，此動作是由 TE 向 TL 發出記錄的要求。 
 外部編解碼元件(8)，提供額外編碼及解碼元件讓 TTCN-3 可執行元件(TE)使用。
編解碼運作流程為 TE 選擇適當的編碼器將 TTCN-3 的值編碼為二進位封包格式
送至 SUT，或是 TE 選擇適當的解碼器將 SUT 所傳送的二進位封包格式解碼成
TTCN-3 的值。外部編解碼元件會在後面描述如何使用，通常為 JAVA 程式語言
開發，較容易與測試系統互相作用。 
 
圖九 CSCF-T 系統架構圖 
30 
 
的通信，傳送 TTCN-3 執行模組的要求以及 SUT 所回傳的行為。待測系統轉接器也
會通知 TTCN-3 可執行組件任何有關於 SUT 發生的事件。圖十一為 SA 與 TE 互通流
程圖，SA 主要利用 TRI 介面與 TE 互通。TE 呼叫 TRI 函式將測試元件連接埠對應至
TSI 介面的連接埠，以及通過呼叫 TCI 函數引起 ECD 元件 SIP Codec 替傳送或接收到
的資訊編解碼圖十一 (1)。由圖中可以知測試元件連接埠 sip_port 圖十一 (2)對應到在
SA 的 UDP_socket 圖十一 (3)，然後 SA 將 UDP_socket 結合 TSI 連接埠 5060 使能夠
與 SUT 通信。所以 CSCF-T 測試系統所產生的 SIP 請求由 SA 負責傳送到 SUT 透過
sip_port.send 函式，SA 利用 sip_port.receive 函式通知 TE，SUT 有收到資料並且放入
queue 圖十一 (4)等待解碼，TE 這時就會找適當的解碼器進行解碼動作。 
 
圖十一、SA 與 TE 互通流程圖 
平臺轉接器(Platform Adapter)，可以分為外部函式(External Functions)與計時器(Timers)
兩部分，分別處理須適應於各種不同平臺的通信、計時器控制與設定的功能。 
4）TCI 介於 TMC 及 TE 之間，並且提供 4 個子介面，分別為 TCI 測試管理介面
(TCI-TM)，支援測試可執行性操作管理，提供模組可用參數以及產生測試事件資訊。
TCI 測試紀錄介面 (TCI-TL)，主要為擷取執行測試案例的資訊，以及記錄接收於 SUT
32 
 
解碼完的字串至 TE。而在這一個程式碼內若是沒有符合的解碼器時，便會回傳第 8
行告知 TE。 
5）TRI 介於 TE 以及 SA/PA 之間，提供 TTCN-3 ETS 和 SUT 之間通信的支援，
包含了 2 個子介面，分別為 triCommunication 及 triPlatform。triCommunication 子介面
支援 ETS 與 SUT 的溝通連接，利用 SA 來初始測試系統介面(TSI)，建立 SA 和 SUT
的聯機和處理之間溝通的資訊及程式，另外 triCommunication 子介面也提供重新啟動
SA 的操作。triPlatform 用以轉換 ETS 到特定的平臺，支持啟動、結束以及讀取計時
器狀態，能夠針對計時器逾時作出警告措施，另外 triPlatform 子介面也提供了呼叫
TTCN-3 外部函式以及重新啟動 PA 的操作。而在 CFCS-T 中，TRI 是由 JAVA 程式所
實作， CSCF-T TestAdaper 程式碼如下所示。 
 
程式第1行為 triMap函式，主要功能為將測試元件連接埠對應到測試系統連接埠。
34 
 
 State 1 (Start testcase)代表測試案例已經由TE執行，並且將RegState參數設為 1，
通過 RegState 參數等於 1 使 TE 傳送未帶有認證的註冊資訊至 SUT 觸發註冊流
程，將狀態由 State 1 改為 State 2。 
 State 2 為傳送註冊資訊至 SUT 後，計時器會啟動並且等待 SUT 所回應的 401 挑
戰資訊。若接受到的資訊不為 401 挑戰資訊，則不是所預測的狀況發生，測試失
敗，State 2 改為 State 3。若超過等待時間，且沒有收到任何回應，則不一致性情
況發生，State 2 改為 state 4。若接 
收到的資訊為 401 挑戰資訊，測試通過，State 2 改為 State 5。 
 State 3 為測試失敗的狀態，一旦到了 State 3 將會結束此次驗證的流程。 
 State 4 為不符合性的狀態發生，一旦到了 State 4 將會結束此次驗證的流程。 
 State 5 為測試成功的狀態，若 RegStart 此時為 1 時，則 RegState 更改為 2，並且
State 5 改為 State 1。在 State 1 中透過 RegState 參數等於 2 使 TE 傳送帶有認證的
註冊資訊至 SUT，並將 State 1 改為 State 2，但是等待 SUT 所回應的資訊由 401
挑戰資訊改為 200 OK 的回應資訊。若 RegState 此時為 2 時，則測試通過，並將
狀態由 State 5 改為 State 6 代表驗證流程結束，並且通過驗證。 
 State 6 為驗證流程及測試結束。RegisterClient test case 代碼如下： 
36 
 
 
驗證符合性步驟為測試人員挑選 CSCF-T 測試案例(RegisterClient)並且執行，在執行
之前 TE 會先初始化 SA 以及 PA 圖十三 (2)確保測試過程正確無誤。初始之後 TE 將
會執行測試人員所挑選的測試案例圖十三 (3)。  
 
圖十三、執行測試流程呼叫的函式 
執行測試案例後，TE 首先會將主要測試元件連接埠對應到測試系統連接埠 sip_port 
(RegisterClient test case 代碼第 2 行)，這是為了使 SUT 能夠透過 sip_port 與 TE 互通，而
此動作為執行 TRI 介面的函式 triMap 圖十三 (4)。接下來 TE 會先將 TTCN-3 所定好的形
態資訊，挑選適當的編碼器將資料編成二進位封包格式，此動作為執行 TCI 介面的函式
tciEncode 圖十三 (5)。若 TTCN-3 內部編碼器並無法將資料編成二進位封包格式時，TE
將會使用外部編碼器代為編碼。接著會將編碼好的資料傳送至 SUT (RegisterClient test case
代碼第 3 行)，此動作為執行 TRI 介面的函式為 triSend 圖十三 (6)。SA 將編碼後的資料傳
送至 SUT 觸發註冊圖十三 (7)，接著 TE 便會要求 PA 啟動時間計時器(RegisterClient test 
case 代碼第 4 行)，此動作為執行 TRI 介面的函式 triStartTimer 圖十三 (8)。而啟動時間計
38 
 
完成符合性測試與驗證後，本計畫進行效能測試，在此我們敘述了主要的幾種 SIP 通
話建立信令流程。而在「基本通話建立與 PDD」中敘述撥號後延遲 (Post Dialing Delay; 
PDD) 的定義。接著向後延伸至幾種不同的功能程序。為了著重於 UA 訊息收送與
PDD 的說明，流程中簡化了核心網路內部伺服器間訊息交換的敘述。 
基本通話建立與 PDD： 
 
 
圖十四、基本通話建立訊息流程 
 
SIP 通話建立是由發話端 (originator) 與受話端 (terminator) 雙方之 UA 共同完成。發話端
UA 扮演 UAC (User Agent Client) 角色，負責向受話端發送通話建立請求，並由受話端
UA 扮演 UAS (User Agent Server) 角色，用以回覆 UAC 之請求。SIP 基本通話建立訊息流
程如圖十四所示，包含以下步驟： 
步驟 6. UAC 透過 INVITE 訊息向 UAS 發送通話建立請求，並由核心網路轉送至 UAS。
此訊息包含初始語音會期的 SDP 資訊，用以向 UAS 提供 UAC 的語音會期處理能力。 
40 
 
 
使用 TCP 傳輸協定建立通話 
 
圖十五、通話建立流程 – UAC 與核心網路間使用 TCP 傳輸協定 
 
SIP 可透過 UDP 或 TCP 協定來傳輸訊息。UDP 為 SIP 基本的傳輸協定，是一種非連線導
向與非可靠型的傳輸方式，提供較簡易與快速的封包收送。而 TCP 是一種連線導向 
(connection oriented) 的可靠型傳輸方式。TCP 在傳送訊息前，必須先以三向交握 (3-way 
handshake) 來建立收發兩端的連結，並在連線建立完成後才可開始收送訊息。接收端也須
回應 (acknowledgement) 訊息的接收，來確保傳輸的可靠性。圖十五展示了 UAC 與核心
網路之間使用 TCP 協定傳輸的通話建立流程。此流程中，PDD 增加了 TCP 三向交握 (圖
十五○A ) 與回應訊息接收所等待的時間。 
42 
 
步驟 1. 與圖十四之步驟 1 相似，但在 INVITE 訊息的 SDP 敘述中，UAC 必須再提供自
己目前的資源狀態與期許的資源需求給 UAS。 
步驟 2. 當核心網路收到 INVITE 訊息時，會立即回傳 100 Trying 來指示已接收 INVITE
訊息，避免 UAC 因等待回覆過久而重送訊息。 
步驟 3. 在 UAS 收到 INVITE 訊息後，會利用 183 Session Progress 訊息來回覆自己目前
的資源狀態與期許的資源需求給 UAC，並指示 UAC 在完成資源保留時，必須向 UAS 發
出確認通知。 
步驟 4. UAC 從 183 Session Progress 訊息中得到 UAS 對媒體能力需求的答覆，此時 UAC
開始與核心網路進行資源保留。在資源管理機制下，為了確保訊息的可靠度，當 UAC 收
到 183 Session Progress 訊息時，必須回傳 PRACK 訊息，用於回覆接收確認。 
步驟 5. 若 UAS 收到 PRACK 訊息，會發送 200 OK 訊息做為確認回應。同時 UAS 開始
與核心網路進行資源保留。 
步驟 6-7. 當 UAC 完成資源保留時，會立即透過 UPDATE 訊息發送資源保留確認 
(reservation confirmation) 至 UAS。另一方面，UAS 接收 UPDATE 訊息後，會以 200 OK
訊息回應 UPDATE 訊息。 
步驟 8. 若 UAS 完成資源保留，並且已收到 UAC 完成資源保留的確認，此時 UAS 即可
振鈴通報使用者，同時傳送 180 Ringing 訊息至 UAC。UAC 在收到 180 Ringing 訊息後，
將產生回鈴音提示使用者。 
 
44 
 
除了註冊時要求 UAC 進行認證外，在 UAC 建立通話前也會再次要求認證。啟用認證機
制的通話建立訊息流程如圖十七所示，步驟如下： 
 
步驟 1. UAC 對 UAS 發起通話建立請求，傳送 INVITE 訊息至核心網路。 
步驟 2. 若核心網路為 IMS，則 IMS 核心會由 UAC 所指派的 P-CSCF 來轉送 INVITE 訊
息給服務 UAC 的 S-CSCF。接著由 S-CSCF 來進行認證查問 (authentication challenge)。在
P-CSCF 等待 S-CSCF 回覆時，必須先回應 100 Trying 訊息給 UAC，避免 UAC 因等待回
應過久而重送 INVITE 訊息。 
步驟 3. 核心網路會以 407 Proxy Authentication Required 訊息夾帶 realm (如 host.com)、
algorithm (如 MD5) 與 nonce 等參數，傳送至 UAC 進行認證查問。 
步驟 4. UAC 在收到認證查問的 407 Proxy Authentication Required 訊息後，會隨即發送
ACK 訊息來結束此次通話請求。 
步驟 5. UAC 將所接收的認證查問參數，依據 HTTP Authentication: Basic and Digest 
Access Authentication (RFC 2617)的推算方式求出認證回覆值(authentication response)，並利
用新的 INVITE 訊息將此值傳送至核心網路進行驗證。若 UAC 通過核心網路的驗證，則
核心網路將繼續進行通話建立程序，轉送此 INVITE 訊息至目的端。後續的步驟與基本通
話建立程序相同。除此之外，基於安全考量，核心網路在轉送此 INVITE 訊息前，可能會
移除訊息中認證相關的資料再進行傳送。 
步驟 6, 7. 與圖十四步驟 2 與 3 相同。 
46 
 
明 UAC 與核心網路之間使用 TLS 安全機制進行傳輸的通話建立流程。由於 TLS 建置於
TCP 連線之上，所以 UAC 與核心網路必須先以 TCP 三向交握建立兩端的連結 (圖十八步
驟 1)，接著才使用 TLS 交握程序來建立安全連線 (圖十八步驟 2)。 
 
TLS 交握程序 
Finished
Finished
Client
(UAC)
Client Hello
Server Hello
Server 
(SIP/IMS Core)
Server Hello Done
Certificate
Certificate Request 
Certificate
Client Key Exchange
Certificate Verify
Change Cipher Spec
Change Cipher Spec
1
3
2
4
For Client Authentication
 
圖十九、TLS 交握程序 
 
TLS 交握程序包含了客戶端與伺服器兩種角色，由發起安全連線的一方扮演客戶端，另一
48 
 
加密的 Finished 訊息，告知客戶端完成協商。 
在 TLS 交握過程中，若採取「伺服器與客戶端相互認證」的方式，伺服器需要多傳送一
個 Certificate Request 訊息向客戶端要請求認證，客戶端也需多傳送 Certificate 與 Certificate 
Verify 訊息給伺服器。當 UAC 與核心網路之間的安全連線建立完成，後續訊息將會由發
送方加密並包裝成 TLS Application Data 訊息傳送，再由接收方負責解密。如圖十八步驟 3
至 5，其 TLS Application Data 訊息分別包裝了 SIP 之 INVITE、100 Trying 與 180 Ringing
訊息加密後的結果。UAC 在 TLS 安全機制下，PDD 會多出 TCP 三向交握、TLS 交握以
及上述步驟 3 至 5 訊息加解密所使用的時間。 
本計畫利用以上五種通話建立流程來進行效能測試。 
在測試實驗項目上，本計畫共設計五種實驗，實驗 1 至 5 皆使用可控制的 802.11g 無線區
域網路來進行測試。在實驗過程中，每個實驗項目程序將被連續執行 500 次，由 UAC 來
測量與記錄每次所測得之 PDD 數值，同時於 Open IMS Core 設備上執行 Wireshark 封包分
析器記錄收送封包的內容。最後，從測量結果中計算收送封包大小，及 PDD 之最小值、
平均值、最大值與標準差。 
 
 
  
50 
 
 
圖二十二、SIPv6 Analyzer 繪製註冊流程圖 
在討論完符合性測試後，本計畫進行效能測試的部分： 
實驗 1：開啟與關閉 3GPP Profile 對 PDD 之影響 
 
1. INVITE
2. 100 Trying
3. 180 Ringing
UAC
PDD
Open IMS Core
INVITE
180 Ringing
UASP-CSCF
#1
S-CSCF
#1
INVITE
100
S-CSCF
#2
P-CSCF
#2
INVITE
INVITE
100
100
180
180180
D1
 
圖二十三、實驗 1 訊息流程 
     
實驗 1 以「基本通話建立」描述之通話建立程序，研究 UAC 開啟與關閉 3GPP Profile 對
PDD 之影響。圖二十三為實驗 1 之訊息流程，在本計劃的實驗環境中，UAC 與 UAS 發送
52 
 
表三：實驗 1 之 UAC 收送訊息與 SIP 標頭 
RFC SIP Header 
3GPP Profile 選項 
關閉 開啟 
圖二十三步驟 1: UAC  P-CSCF (INVITE) 
3261 Call-ID, Contact, Content-Length, Content Type, 
CSeq, From, Max.-Forwards, Require, Route, 
Supported, To, Via, Allow, User-Agent 
有 有 
3323 Privacy 無 有 
3325 P-Preferred-Identity 無 有 
3455 P-Access-Network-Info 無 有 
圖二十三步驟 2: UAC  P-CSCF (100 Trying) 
3261 Call-ID, Content-Length, CSeq, From, Server, To, 
Via, Warning 
有 有 
圖二十三步驟 3: UAC  P-CSCF (180 Ringing) 
3261 Call-ID, Contact, Content-Length, CSeq, From, 
Record-Route, Require, To, Via, Allow, User-Agent
有 有 
3455 P-Asserted-Identity (由 Open IMS Core 產生) 有 有 
 
如表三所示，在關閉 3GPP Profile 時，UAC 發送的訊息皆為 RFC 3261 所規範的 SIP 標頭。
若開啟 3GPP Profile，則 UAC 除了建構既有 RFC 3261 規範的 SIP 標頭外，會再建構 3GPP 
IMS 服務所需的延伸標頭。如步驟 1 INVITE 訊息會建構 P-Preferred-Identity、Privacy 與
P-Access-Network-Info 標頭。此外，由於實驗使用 Open IMS Core 做為核心網路軟體，所
以無論 UAC 是否啟用 3GPP Profile，步驟 3 收到 Open IMS Core 所轉送的 180 Ringing 訊
息中，皆會包含 Open IMS Core 產生的 P-Asserted-Identity 延伸標頭。表四為實驗中 UAC
開啟與關閉 3GPP Profile 時收送訊息的比較，說明如下。 
 
54 
 
實驗 1 之 PDD 測量結果與分析 
分析本實驗 1 之 PDD 測量結果。PDD 測量結果如表五所示，此表格包含以下欄位，由左
至右依序為： 
Test Item：依據實驗項目之特性所給予的簡稱，例如在 UDP 傳輸協定下的基本通話實驗
項目 (關閉 3GPP Profile) 簡稱為 UDP-Basic，而啟用 3GPP Profile 的實驗項目簡稱為
UDP-3GPP。 
PDD：實驗所測量之 PDD 數據，單位為 ms。PDD 數據包含了最小值 Min，平均值 Avg，
最大值 Max，以及標準差 StD。 
表五：實驗 1 之 PDD 測量結果 
Test Item 
PDD (ms) 
Min Avg Max StD 
UDP-Basic 19.36 29.60 52.95 8.44
UDP-3GPP 19.65 29.72 53.59 8.15
 
表五測得 UDP-Basic 與 UDP-3GPP 之平均 PDD 分別為 29.60 與 29.72 ms。本計劃將
「P-CSCF 從收到 UAC 的 INVITE 發話請求開始，至傳送 180 Ringing 振鈴回覆給 UAC
所經過的時間」定義為 D1 (參見圖二十三)，並利用 D1 來輔助驗證 PDD 正確性。表六為上
述項目測量結果比較，說明如下。 
 
 
56 
 
實驗 2：基本通話建立在 UDP 與 TCP 協定下對 PDD 之影響 
1. INVITE [PSH, ACK]
3. 180 Ringing [PSH, ACK]
b.  [SYN, ACK]
a. [SYN]
PDD
c.  [ACK]
1.1.  [ACK]
2. 100 Trying  [PSH, ACK]
D2
[…]
TCP
UAC Open IMS Core(P-CSCF)
TCP 3-way handshake
New Message
TCP Flags
SIP Message
TCP Message
D1
 
圖二十四、實驗 2 訊息流程 – UAC 與核心網路間使用 TCP 協定建立通話 
實驗 2 以「基本通話建立」與「使用 TCP 傳輸協定建立通話」描述之通話建立程序，研
究通話建立時，UAC 與核心網路間使用 UDP 與 TCP 傳輸協定對 PDD 的影響。本計畫於
實驗 1 已說明 UDP 傳輸協定下的通話建立流程，而圖二十四為 UAC 與核心網路間使用
TCP 傳輸協定的流程。在測量 TCP 傳輸協定時，由於 TCP 為連結導向的傳輸模式，所以
每次測量都須完全中斷 TCP 連結後才可繼續下個測量，確保每次測量均會重新建立 TCP
連結。 
 
 
58 
 
分析本實驗 2 之 PDD 測量結果，並與前 UDP-Basic 測量結果進行比較。PDD 測量結果如
表八所示。 
表八：實驗 2 之 PDD 測量結果 
Test Item 
PDD (ms) 
Min Avg Max StD 
UDP-Basic 19.36 29.60 52.95 8.44 
TCP-Basic 26.65 36.23 46.59 2.43 
表八中，本計劃簡稱 UAC 與 Open IMS Core 間使用 TCP 協定傳輸訊息的基本通話建立測
量為 TCP-Basic，測得平均 PDD 為 36.23 ms。為了探討 UDP-Basic 與 TCP-Basic 的 PDD
差異，除了實驗 1 所定義的 D1 外，本計畫再將「TCP 三向交握延遲」定義為 D2 (參見圖
二十四)。表九為 UDP-Basic 與 TCP-Basic 上述項目測量結果比較。 
表九：實驗 2 各項目測量結果比較 
Test Item PDD D1 D2 
UDP-Basic 29.60 3.81 - 
TCP-Basic 36.23 3.88 6.23 
Diff (UDP-Basic, TCP-Basic) 22.399% 1.837% - 
單位: ms 
表九測量出TCP-Basic之D1平均值為3.88 ms，相較於UDP-Basic的3.81 ms，差異1.837%。
表九也測量出 TCP-Basic 之 TCP 三向交握延遲 D2 平均值為 6.23 ms。為了驗證 D2 的正確
性，本實驗另外以程式在此實驗環境下進行 TCP 三向交握 100,000 次，測得總平均延遲為
6.19 ms。D2 與此值誤差 0.04 ms，誤差在可接受範圍，故推論 D2 為合理值。 
經由以上分析，本實驗觀察到 UAC 在此網路環境下建立通話，使用 TCP 協定會較使用
60 
 
實驗 3：QoS 協商機制在 UDP 與 TCP 協定下對 PDD 之影響 
 
 
圖二十五、實驗 3 訊息流程 – UAC 於 UDP 協定下協商 QoS 資訊 
實驗 3 以「具資源管理機制之通話建立流程」描述之通話建立程序，研究通話建立時若啟
用 QoS 協商，在 UDP 與 TCP 協定下對 PDD 的影響。圖二十五為 UAC 於 UDP 協定下協
商 QoS 資訊的訊息流程。由於 QoS 資源保留程序不在本計畫探討的範疇，因此本實驗僅
分析 UA 雙方使用 SIP 與 SDP 協商 QoS 資訊的部份，不包括資源保留信令。所以當 UAC
62 
 
表十：實驗 3 之 UAC 收送訊息比較 
Step Direction Message Type 
Packet Size (bytes) 
UDP TCP Increment 
a UAC  P-CSCF TCP SYN - 66 66 
b UAC  P-CSCF TCP SYN,ACK - 66 66 
c UAC  P-CSCF TCP ACK - 60 60 
1 UAC  P-CSCF SIP INVITE 849 875 26 
1.1 UAC  P-CSCF TCP ACK - 60 60 
2 UAC  P-CSCF SIP 100 546 558 12 
3 UAC  P-CSCF SIP 183 990 1002 12 
3.1 UAC  P-CSCF TCP ACK - 60 60 
4 UAC  P-CSCF SIP PRACK 853 865 12 
5 UAC  P-CSCF SIP 200 626 638 12 
5.1 UAC  P-CSCF TCP ACK - 60 60 
6 UAC  P-CSCF SIP UPDATE 859 885 26 
7 UAC  P-CSCF SIP 200 606 618 12 
8 UAC  P-CSCF SIP 180 653 665 12 
Total 5982 6478 496 
 
由表十可知，TCP 協定下的通話建立流程會多出 TCP 三向交握 (步驟 a 至 c) 與額外三個
TCP ACK 回應訊息 (步驟 1.1、3.1 與 5.1)。而原有 SIP 訊息標頭長度也皆增加 12 bytes 的
傳輸協定標頭差距。在步驟 1 INVITE訊息與步驟 6 UPDATE訊息中，UAC會於 SIP Contact
標頭內夾帶傳輸協定資訊「;transport=TCP」14 bytes，所以此兩訊息長度將增加 26 bytes。
總計 UAC 在 UDP 協定下共收送訊息 5982 bytes，而在 TCP 協定下收送 6478 bytes，一共
增加了 496 bytes。 
 
 
64 
 
實驗 4：通話認證機制在 UDP 與 TCP 協定下對 PDD 之影響 
 
圖二十七、實驗 4 訊息流程 – UAC 於 UDP 協定下進行通話認證 
實驗 4 以「具認證機制之通話建立流程」描述之通話建立程序，研究通話建立時若對 UAC
進行身份認證，在 UDP 與 TCP 協定下對 PDD 的影響。圖二十七為 UAC 於 UDP 協定下
進行通話認證的訊息流程。在 3GPP TS 24.229 提到 IMS 核心網路中，當服務 UAC 的
S-CSCF 收到 UAC 建立通話的 INVITE 訊息時，若 S-CSCF 欲進行身份認證，則 S-CSCF
須繼續延用 UAC 先前註冊認證時所用的認證參數，不再向 HSS 要求提供 UAC 的認證參
數 (認證參數請參見「具認證機制之通話建立流程」說明)。因此 S-CSCF 會直接回覆 407 
Proxy Authentication Required訊息，並夾帶先前記錄的認證參數，經由 P-CSCF 轉送至UAC
66 
 
表十三：實驗 4 之 UAC 收送訊息比較 
Step Direction Message Type
Packet Size (bytes) 
UDP TCP Increment 
a UAC  P-CSCF TCP SYN - 66 66 
b UAC  P-CSCF TCP SYN,ACK - 66 66 
c UAC  P-CSCF TCP ACK - 60 60 
1 UAC  P-CSCF SIP INVITE 683 709 26 
1.1 UAC  P-CSCF TCP ACK - 60 60 
2 UAC  P-CSCF SIP 100 546 558 12 
3 UAC  P-CSCF SIP 407 876 888 12 
3.1 UAC  P-CSCF TCP ACK - 60 60 
4 UAC  P-CSCF SIP ACK 433 445 12 
4.1 UAC  P-CSCF TCP ACK - 60 60 
5 UAC  P-CSCF SIP INVITE 943 969 26 
5.1 UAC  P-CSCF TCP ACK - 60 60 
6 UAC  P-CSCF SIP 100 546 558 12 
7 UAC  P-CSCF SIP 180 627 639 12 
Total 4654 5198 544 
由表十三可知，TCP 協定下的通話建立流程會多出 TCP 三向交握 (步驟 a 至 c) 與額外四
個 TCP ACK 回應訊息 (步驟 1.1、3.1、4.1 與 5.1)。而原有 SIP 訊息標頭長度也皆增加 12 
bytes 的傳輸協定標頭差距。在步驟 1 與步驟 5 的 INVITE 訊息中，UAC 會於 SIP Contact
標頭內夾帶傳輸協定資訊「;transport=TCP」14 bytes，所以兩訊息長度皆增加了 26 bytes。
總計 UAC 在 UDP 協定下共收送訊息 4654 bytes，而在 TCP 協定下收送 5198 bytes，一共
增加了 544 bytes。 
 
 
 
68 
 
 回顧實驗 1 至 4 的測量結果，本計畫另外發現在 802.11g 實驗環境中，雖然實驗項目
於 TCP 協定下測得的 PDD 平均值皆較 UDP 協定下大，但 PDD 標準差卻皆較 UDP 協定
小。表示此實驗環境下 TCP 協定產生的 PDD 分佈較 UDP 協定平均。 
  
70 
 
先以 TCP 三向交握 (圖二十九○A ) 及 TLS 交握 (圖二十九○B ) 來建立安全連結。本計畫在
實驗 2 已說明 TCP 三向交握，所以在此後續將接著探討未說明的 TLS 交握部份。 
TLS 交握與 PDD 之測量 
「啟用 TLS 安全機制之通話建立流程」敘述 TLS 交握的認證方式有「只認證伺服器身份」
與「伺服器與客戶端相互認證」兩種，因此本實驗分成此兩種方式來測量。首先本實驗分
析「只認證伺服器身份」的 TLS 交握，並簡稱使用此認證方式建立通話的實驗項目為 TLS-A。
TLS-A 的 TLS 交握訊息如表十六所示。 
表十六：實驗項目 TLS-A 之 TLS 交握訊息 
Step Direction Message Type 
Packet Size 
(bytes) 
1 UAC  P-CSCF TLS Client Hello 148 
1.1 UAC  P-CSCF TCP ACK 60 
2 UAC  P-CSCF 
TLS Server Hello, 
Certificate, 
Server Hello Done 
2169 
(1514+655) 
2.1 UAC  P-CSCF TCP ACK 60 
3 UAC  P-CSCF 
TLS Client Key Exchange,
Change Cipher Spec, 
Finished 
252 
3.1 UAC  P-CSCF TCP ACK 60 
4 UAC  P-CSCF TLS Change Cipher Spec,
Finished 
113 
4.1 UAC  P-CSCF TCP ACK 60 
Total 2922 
表十六中，步驟 1 為 UAC 發送給 P-CSCF 的 Client Hello 訊息，長度 148 bytes。步驟 2 為
P-CSCF 發送給 UAC 的封包，此封包由 Server Hello、Certificate 與 Server Hello Done 三訊
72 
 
表十七：實驗項目 TLS-B 之 TLS 交握訊息 
Step Direction Message Type 
Packet Size 
(bytes) 
1 UAC  P-CSCF TLS Client Hello 148 
1.1 UAC  P-CSCF TCP ACK 60 
2 UAC  P-CSCF 
TLS Server Hello, 
Certificate, 
Certificate Request, 
Server Hello Done 
2308 
(1514+794) 
2.1 UAC  P-CSCF TCP ACK 60 
3 UAC  P-CSCF 
TLS Certificate, 
Client Key Exchange, 
Certificate Verify, 
Change Cipher Spec, 
Finished 
2450 
(1514+936) 
3.1 UAC  P-CSCF TCP ACK 60 
4 UAC  P-CSCF TLS Change Cipher Spec,
Finished 
113 
4.1 UAC  P-CSCF TCP ACK 60 
Total 5259 
將表十七與表十六比較，表十七在步驟 2 封包中多夾帶了 Certificate Request 訊息 275 bytes，
使封包總長度增至 2308 bytes。此外，表十七在步驟 3 封包中也多夾帶 Certificate 與
Certificate Verify 兩訊息，造成封包總長度增至 2450 bytes。此封包大小因為超出 MTU 限
制而被分段成長度 1514 與 936 bytes 兩個封包發送。總計 TLS-B 在 TLS 交握過程共收送
封包 5259 bytes，較 TLS-A 多出 2337 bytes。本計畫接著測量 TLS-A 與 TLS-B 之 PDD，
如表十八所示。 
 
 
74 
 
的實驗數據。而啟用 TLS 安全機制的項目上，由於 TLS-A 與 TLS-B 只有 TLS 認證方式不
同，TLS-A 在 TLS 交握的封包總傳輸量與延遲都較 TLS-B 小，所以本實驗選擇用 TLS-A
來進行分析。將 TCP-Basic 與 TLS-A 比較，兩項目在發送 SIP 訊息前皆會先進行 TCP 三
向交握，接著 TLS-A 再進行 TLS 交握，後續兩項目收送的訊息如表二十所示。  
表二十：實驗項目 TCP-Basic 與 TLS-A 收送訊息比較 
Step Direction Message Type
Packet Size (bytes) 
TCP-Basic
TLS-A 
(Encrypted) 
Increment 
1 UAC  P-CSCF SIP INVITE 709 749 40 
1.1 UAC  P-CSCF TCP ACK 60 60 0 
2 UAC  P-CSCF SIP 100 558 589 31 
3 UAC  P-CSCF SIP 180 639 670 31 
Total 1966 2068 102 
TLS-A 在建立 TLS 安全連線後，UAC 與 P-CSCF 之間的 SIP 訊息都將被加密成 TLS 訊息
傳送，使用的加密機制為 TLS 交握協商結果 TLS_RSA_WITH_AES_256_CBC_SHA。所
以表二十的 SIP 訊息在加密後，步驟 1 INVITE 長度增加 40 bytes，步驟 2 的 100 Trying
與步驟 3 的 180 Ringing 也皆增加 31 bytes。總計 TLS-A 在此部份共收送封包 2068 bytes，
較 TCP-Basic 多出 102 bytes。 
表二十一將 TCP-Basic 與 TLS-A 的 PDD 進行比較。此表格計算出 TCP-Basic 與 TLS-A 之
PDD 差異為 206.731%，代表 UAC 若於 TCP 協定中啟用 TLS 安全機制，PDD 將增加
206.731%的延遲。 
 
76 
 
雙向認證方法比較  
1. INVITE [PSH, ACK]
7. 180 Ringing [PSH, ACK]
2. 100 Trying [PSH, ACK]
TLS handshake
TCP 3-way handshake
3. 407 Proxy Authentication 
Required [PSH, ACK]
4. ACK [PSH, ACK]
3.1. [ACK]
4.1.  [ACK]
5. INVITE [PSH, ACK]
6. 100 Trying [PSH, ACK]
5.1. [ACK]
PDD
TLS
[…]
For SIP Authentication
TCP Flags
TLS Message
TCP ACK
1.1. [ACK]
Open IMS Core
(P-CSCF)UAC
 
圖三十、實驗 5 訊息流程 – TLS-A 結合 SIP 通話認證 
通話建立時，UAC 與核心網路若要認證彼此身份的真實性，除了可使用 TLS 交握的雙向
身份認證 (參見 TLS-B)，也能在 TLS 交握時先認證核心網路身份 (參見 TLS-A)，再結合
「具認證機制之通話建立流程」的 SIP 通話認證來認證 UAC (簡稱 TLS-A+SIP Auth)，達
到相互認證的效果。後續將比較上述兩種雙向認證方法。 
78 
 
表二十三：雙向認證方法之封包傳輸量 
Message 
Packet Size (bytes) 
TLS-B TLS-A+SIP Auth Increment 
TCP 3-way handshake 192 192 0 
TLS handshake 5259 2922 -2337 
INVITE to 180 Ringing 2068 5238 3170 
Total 7519 8352 833 
由表二十三可知 TLS-B 的封包總傳輸量為 7519 bytes，而 TLS-A 結合 SIP 通話認證為 8352 
bytes，較 TLS-B 多出 833 bytes。表二十四為此兩種方法的 PDD 測量結果。 
表二十四：雙向認證方法之 PDD 測量結果 
Test Item 
PDD (ms) 
Min Avg Max StD 
TLS-B 135.51 162.98 212.75 14.61 
TLS-A+SIP Auth 161.73 202.92 267.15 21.11 
表二十四測量出TLS-A結合 SIP通話認證之平均 PDD為 202.92 ms，較TLS-B的 162.98 ms
大。而由表二十三的計算已知 TLS-A 結合 SIP 通話認證的封包傳輸量比 TLS-B 大，所以
TLS-A 結合 SIP 通話認證產生的 PDD 較 TLS-B 大為合理的結果。 
在實驗 4 與 5 的分析中，本計畫觀察到在單向認證的比較下，SIP 通話認證無論使用 UDP
協定 (UDP-Auth) 或TCP協定 (TCP-Auth)，所表現出的PDD皆較TLS認證的TLS-A小。
但在雙向認證上，TLS-A 結合 SIP 通話認證所產生的 PDD，卻比雙向皆使用 TLS 認證的
TLS-B 還大。 
本計畫分析了不同傳輸協定以及啟用通話認證、QoS 協商與 TLS 安全機制下的通話建立
信令程序。並於可控制無線區域網路與實際行動通訊網路下進行測量，研究與分析這些程
80 
 
六、 計畫成果自評 
國科會補助專題研究計畫成果報告自評表 
請就研究內容與原計畫相符程度、達成預期目標情況、研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）、是否適
合在學術期刊發表或申請專利、主要發現或其他有關價值等，作一綜合評估。
1. 請就研究內容與原計畫相符程度、達成預期目標情況作一綜合評估 
■ 達成目標 
□ 未達成目標（請說明，以 100 字為限） 
□ 實驗失敗 
□ 因故實驗中斷 
□ 其他原因 
說明： 
 設計與 OpenIMS 之測試案例，產出設計報告 
 以 TTCN-3 開發自動化測試程式，產出自動化測試系統 
 完成一致性測試（Conformance Test），產出一致性測試報告 
 完成互通性測試（Interoperability Test），產出互通性測試報告 
 整理研發成果發表學術論文 
2. 研究成果在學術期刊發表或申請專利等情形： 
論文：■已發表 □未發表之文稿 □撰寫中 □無 
專利：□已獲得 □申請中 ■無 
技轉：□已技轉 ■洽談中 □無 
其他：（以 100 字為限） 
3. 請依學術成就、技術創新、社會影響等方面，評估研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）（以
500 字為限） 
本計畫研究之雛形系統可針對 IMS 伺服器進行驗證及分析比較 Femtocell 下各種 SIP/IMS
信令的效能，成果有機會移轉給工研院或國內電信業者，協助於研究與廠商測試其 IMS 與
Femtocell 整合系統，未來也可與工研院合作推廣成為 OMA 測試標準。參與本研究計畫之
學生可以學習使用 TTCN-3 來開發測試、IMS 運作流程與建置、IMS 互通機制與驗證方法，
以及瞭解如何設計測試案例。藉由與工研院的合作，也可讓參與的學生有更多實際業界的
研發經驗，藉此培育通訊技術國際測試驗證之人才。 
 
82 
 
 A Performance Study on ROHC for 802.11a/b/g WirelessVoIP Environments. Ming-Hsing 
Tsai, Shih-Yuan Cheng, W.-E. Chen.  2010 Cross-Strait Conference on Information 
Science and Technology. CSCIST 2010. Qinhuangdao, China, July 9-11, 2010. 
 Shiann-Tsong Sheu, Chih-Cheng Yang, W.-E. Chen, Shih-Yuan Cheng. An Interference 
Minimization (IM) scheme for IEEE 802.16 network. 2009 The 11th Cross-Strait 
Information Technology Conference (CSIT-2009), Jhongli, Taiwan. December 6-10, 2009.  
 
 
 
  
84 
 
九、 附錄 
期刊論文： 
Whai-En Chen and Pin-Jen Lin. A Performance Study for IPv4-IPv6 Translation in IP 
Multimedia Core Network Subsystem. International Journal of Communication 
Systems. Published Online: Oct 30 2009. (SCI) 
 
Whai-En Chen, Ya-Lin Huang, Yi-Bing Lin. An Effective IPv4-IPv6 Translation 
Mechanism for SIP Applications in Next Generation Networks. International Journal 
of Communication Systems. Published Online: Aug 20 2009. (SCI) 
 
 
930 W.-E. CHEN AND P.-J. LIN
1. INTRODUCTION
Third-generation Partnership Project (3GPP) defines Internet Protocol (IP) Multimedia Core
Network Subsystem (IMS) to support multimedia services [1]. In IMS, Internet Protocol version
6 (IPv6) is employed to provide large address space and new features such as mobility, security,
Quality-of-Service (QoS), and plug-and-play. However, in the early stage of IPv6 deployment,
many Voice-over-IP (VoIP) networks still support Internet Protocol version 4 (IPv4) only. There-
fore, the IMS-Application Level Gateway (IMS-ALG) and the Transition Gateway (TrGW) are
proposed to provide IPv4–IPv6 translation between the IPv6-based IMS and the IPv4 Session
Initiation Protocol (SIP)-based VoIP networks. An interworking example of the IPv6-based IMS
and the IPv4 VoIP network is given in Figure 1.
In Figure 1, a User Equipment (UE; see Figure 1(a)) connects to the Radio Access Network
(RAN; see Figure 1(b)) and the General Packet Radio Service (GPRS) network (Figure 1(c)). The
IMS (Figure 1(d)) is located between the GPRS network and the packet data network (specifically,
the IP network). In the IMS, the Call Session Control Function (CSCF; see Figure 1(e)) can be
viewed as a SIP server, which is responsible for call control.
The IPv4 SIP network (Figure 1(h)) contains SIP servers (Figure 1(i)) and SIP User Agents
(UAs; see Figure 1(j)). The SIP registrar function of a SIP server stores the contact information
of each SIP UA [2]. The proxy function of the SIP server forwards SIP messages to a SIP UA
according to the routing policy and the information stored in its registrar database. Via SIP, two
UAs exchange the codec and the session information to set up a Real-time Transport Protocol
(RTP) session [3].
In IPv6-based IMS, the UE utilizes IPv6 exclusively to access the IMS services. If the IPv6-
based IMS connects to the IPv4 networks, it requires IPv4–IPv6 translation for SIP applications.
The IMS-ALG (Figure 1(f)) and the TrGW (Figure 1(g)) perform IPv4–IPv6 translation for SIP
and RTP packets, respectively. For example, when the UE sends an IPv6 SIP message (e.g. an
INVITE message) to the SIP UA, the message passes through the RAN, the GPRS network, the
CSCF, the IMS-ALG, the IPv4 SIP Server, and the SIP UA, where the IMS-ALG is responsible
for translating the IPv6 SIP message into IPv4. The SIP message translation details are given
in [4]. After the RTP session has been established between the UE and the SIP UA, the IPv6
RTP packets sent from the UE to the SIP UA pass through the RAN, the GPRS network, the
TrGW, and the SIP UA. The TrGW is responsible for translating the IPv6 RTP packets into IPv4.
Naptd-TrGW and Portaone-TrGW are the only two existing well-known solutions that readers can
Figure 1. Interworking between the IPv6-based IMS and the IPv4 VoIP networks.
Copyright q 2009 John Wiley & Sons, Ltd. Int. J. Commun. Syst. 2010; 23:929–944
DOI: 10.1002/dac
932 W.-E. CHEN AND P.-J. LIN
1. INVITE sip:ua@sip.ipv4.nctu.edu.tw
c=IN IP6 2001:f18:113::4
m=audio 9002 RTP/AVP 0
2. Send IPv6 address/port of UE
([2001:f18:113::4]:9002)
4. INVITE sip:ua@sip.ipv4.nctu.edu.tw
c=IN IP4 140.113.131.13
m=audio 1052 RTP/AVP 0
6. 200 OK
c=IN IP4 140.113.131.11
m=audio 9000 RTP/AVP 0
7. 200 OK
c=IN IP6 2000:ffff::140.113.131.11
m=audio 9000 RTP/AVP 0
8. ACK sip:ua@sip.ipv4.nctu.edu.tw
10. IPv4 RTP Stream
3. Reply mapped IPv4 address/port 
(140.113.131.13:1052)
10. IPv6 RTP Stream
5. INVITE sip:ua@140.113.131.11
c=IN IP4 140.113.131.13
m=audio 1052 RTP/AVP 0
6. 200 OK
c=IN IP4 140.113.131.11
m=audio 9000 RTP/AVP 0
8. ACK sip:ua@sip.ipv4.nctu.edu.tw
9. ACK sip:ua@140.113.131.11
UE
2001:f18:113::4 IMS-ALG
Naptd-TrGW
NAT-PT Prefix: 2000:ffff::/96
IPv4 Address Pool: 140.113.131.13-22
SIP UA
140.113.131.11
IPv4 SIP Server
sip.ipv4.nctu.edu.tw
[2001:f18:113::4]:9002140.113.131.13:1052
IPv4 Address/Port IPv6 Address/Port
IPv4-IPv6 Mapping Table
Figure 2. SIP message flow with Naptd-TrGW.
(2001:f18:113::4) of the UE is provided in the c field (c= IN IP6 2001:f18:113::4) and the port
number (9002) of the UE is specified in the m field (m =audio 9002 RTP/AVP 0).
Step 2: When the IMS-ALG receives the IPv6 INVITE message, it retrieves the UE’s IPv6
address from the Contact header field and learns that the UE resides in the IPv6 network. The
IMS-ALG retrieves the domain name (sip.ipv4.nctu.edu.tw) from the Request-URI and obtains
the IPv4 address of the SIP server. By IP version comparison, the IMS-ALG determines that the
INVITE message should be translated from IPv6 to IPv4. The IMS-ALG then retrieves the IPv6
address and port number of the UE from the c/m fields and sends this information to the TrGW.
Step 3: The TrGW assigns a free IPv4 address (140.113.131.13) and a port number, e.g. 1052,
to the UE and creates an entry (140.113.131.13:1052, [2001:f18:113::4]:9002) in its IPv4–IPv6
mapping table. Then the TrGW returns the mapped IPv4 address and port number to the IMS-ALG.
Step 4: The IMS-ALG generates a new IPv4 INVITE message and fills the IPv4 address and port
number (140.113.131.13:1052) into the c/m fields of the IPv4 INVITE message. The Request-URI
in the new IPv4 INVITE message is copied from the IPv6 INVITE message. The IMS-ALG then
sends this new IPv4 INVITE message to the IPv4 SIP server according to the IPv4 address of the
IPv4 SIP server obtained at Step 2.
Step 5: Upon receipt of the IPv4 INVITE message, the IPv4 SIP server retrieves the IPv4
address of the SIP UA (140.113.13.11) from its registrar database and modifies the Request-URI
to sip:ua@140.113.131.11. Then the IPv4 SIP server forwards the IPv4 INVITE message to the
SIP UA.
Step 6: When the called user picks up the handset, the SIP UA sends an IPv4 200 OK message
to the IMS-ALG. This message specifies the IPv4 address and port number of the SIP UA
(140.113.131.11:9000) in the c/m fields.
Copyright q 2009 John Wiley & Sons, Ltd. Int. J. Commun. Syst. 2010; 23:929–944
DOI: 10.1002/dac
934 W.-E. CHEN AND P.-J. LIN
Figure 3. Naptd-TrGW architecture.
2.2. The Portaone solution
This section describes the Portaone IPv4–IPv6 translation solution. We first describe the SIP
message flow with Portaone-TrGW for establishing IP/port mapping information. Then we describe
how an RTP packet is translated at Portaone-TrGW.
2.2.1. Message flow. Portaone-TrGW is assigned an IPv4 address and an IPv6 address. The source
address of an IPv6 RTP packet from the UE is replaced by the IPv4 address of the TrGW, and
the source address of an IPv4 RTP packet from the SIP UA is replaced by the IPv6 address of
the TrGW. Portaone uses the same IPv4/IPv6 addresses but different port numbers for different
RTP sessions. In our example, the IPv4 address and the IPv6 address are 140.113.131.12 and
2001:f18:113::3, respectively. The message flow is described in the following steps (see Figure 4):
Step 1: The UE sends an IPv6 INVITE message to the IMS-ALG.
Step 2: When the IMS-ALG receives the IPv6 INVITE message, it performs IP version compar-
ison, and determines that the INVITE message should be translated from IPv6 to IPv4. The
IMS-ALG then retrieves the IPv6 address and port number of the UE from the c/m fields and
sends this information to the TrGW.
Step 3: The TrGW stores the UE’s IPv6 address and port number and creates an IPv4 UDP socket
(to be described in Section 2.2.2), which is bound to the TrGW’s IPv4 address (140.113.131.12)
and an unused port number (35000). Then the TrGW replies its IPv4 address (140.113.131.12)
and the port number (35000) to the IMS-ALG.
Copyright q 2009 John Wiley & Sons, Ltd. Int. J. Commun. Syst. 2010; 23:929–944
DOI: 10.1002/dac
936 W.-E. CHEN AND P.-J. LIN
Steps 10 and 11: Upon receipt of the IPv6 200 OK message, the UE sends an IPv6 ACK
message to the SIP UA to complete the session setup process.
Step 12: The RTP session is established between the UE and the SIP UA through Portaone-
TrGW. The UDP sockets created at Steps 3 and 8 are responsible for receiving packets from the
IPv4 and the IPv6 networks.
Note that the mapping entry for Portaone in Figure 4 is different from that for Naptd. Naptd-
TrGW only maintains the IPv4–IPv6 mappings for the UE. Portaone-TrGW maintains the mappings
for both the UE and the SIP UA.
2.2.2. The RTP packet translation at Portaone-TrGW. This subsection describes how an RTP
packet is translated at Portaone-TrGW. Through SIP signaling at Steps 2 and 3 in Figure 4,
Portaone-TrGW obtains the IPv6 address and port number of the UE. At Steps 7 and 8 in Figure 4,
Portaone-TrGW obtains the IPv4 address and port number of SIP UA. Portaone-TrGW then estab-
lishes an IPv4/IPv6 mapping entry. At Step 12 in Figure 4, Portaone-TrGW uses the mapping entry
to translate the RTP packets transmitted between the UE and the SIP UA. In our example, the source
IPv6 address/port of the RTP packets sent from the UE is [2001:f18:113::4]:9002, and the desti-
nation IPv6 address/port of these packets is TrGW’s IPv6 address/port [2001:f18:113::3]:35000.
Like Naptd, Portaone is a user-level daemon on Linux as shown in Figure 5. For every RTP
session, Portaone creates an IPv6 UDP socket (Figure 5(e)) and an IPv4 UDP socket (Figure 5(f))
at the Linux kernel (Steps 3 and 8 of Figure 4). When a socket is created, a file descriptor (FD)
number is assigned to this socket for RTP packet delivery. The FD table (Figure 5(c)) records
the FD number and the state of the socket for one direction of each active RTP session. The
state of a socket can be idle (no packet in the socket buffer) or active (one or more packets
are in the buffer). For each RTP session, the RTP session table (Figure 5(a)) records the FD
numbers of two sockets created for this RTP session (in the FD field), and records the IP/port
information of the UE and the SIP UA (in the remote address field). The Portaone procedure
(Figure 5(b)) configures the FD table and the RTP session table, and uses the tables to perform
IPv4–IPv6 translation for RTP packets. When the UE at the IPv6 network (Figure 5(g)) sends
an IPv6 RTP packet to the TrGW, the IPv6 protocol stack checks the format of this packet
and then passes the packet to the corresponding IPv6 UDP socket. This IPv6 packet is copied
to the user-level daemon for translation into IPv4. The IPv6-to-IPv4 translation is described as
follows:
Step 1: The Portaone procedure periodically invokes the poll system call (Figure 5(d)) to see if
any packets for the RTP sessions have arrived.
Steps 2 and 3: From the FD table, the poll system call identifies the UDP sockets for the RTP
sessions. Then it checks if there are packets in the socket buffer of each UDP socket. In our
example, no packet is found in the socket buffer of the IPv4 UDP socket (with FD number 8).
There are packets in the socket buffer of the IPv6 UDP socket (with FD number 10).
Step 4: The poll system call updates the FD table. Specifically, the state of the IPv6 UDP socket
(with FD number 10) is set to ‘active’, and the state of the IPv4 UDP socket (with FD number 8)
is set to ‘idle’.
Step 5: After the poll system call has updated the states of the sockets, it returns to the Portaone
procedure.
Step 6: The Portaone procedure sequentially checks the states of the sockets in the FD table,
and finds that the socket with index 1 (FD number 10) is active.
Step 7: The Portaone procedure retrieves a packet from the socket buffer with FD number 10.
Copyright q 2009 John Wiley & Sons, Ltd. Int. J. Commun. Syst. 2010; 23:929–944
DOI: 10.1002/dac
938 W.-E. CHEN AND P.-J. LIN
140.113.131.12:35000). The destination of this packet is translated into the SIP UA’s IPv4
address/port 140.113.131.11:9000. Then the IPv4 RTP packet is transmitted to the IPv4 network
(Figure 5(h)).
The Portaone procedure repeats Steps 7–9 to receive packets from the IPv6 UDP socket until all
buffered packets are processed. Then it returns to Step 6 to check the next active socket recorded
in the FD table. After the Portaone procedure has scanned all sockets, it returns to Step 1 to invoke
the poll system call to update the FD table. Unlike Naptd, the packets of different RTP sessions
are buffered in different UDP sockets in Portaone.
3. THE NICI SOLUTION
This section describes the NICI IPv4–IPv6 translation solution. The NICI solution can be imple-
mented based on either Naptd or Portaone. Since RFC 4215 recommends that NAT-PT should not
be used or be used under strict conditions for security reasons [10], we developed NICI-TrGW
based on the Portaone solution. The SIP message flow for establishing IP/port mapping information
at NICI-TrGW is the same as that for Portaone-TrGW (see Figure 4).
In the Naptd-TrGW and the Portaone-TrGW solution, each incoming packet is copied from
the Linux kernel to the user-level daemon to perform IPv4–IPv6 translation. After IPv4–IPv6
translation, the translated packet is copied from the user-level daemon to the Linux kernel to send
out. However, the memory-copy operations significantly increase the processing delay. In NICI-
TrGW, the IPv4–IPv6 translation is performed at the kernel level in order to avoid the unnecessary
memory-copy operations between the user-level daemon and the Linux kernel. Furthermore, the
header length of an IPv6 packet is longer than that of an IPv4 packet. Thus, when an IPv4 packet
is translated into an IPv6 packet, a new memory space should be allocated for the IPv6 packet
and the payload of the IPv4 packet, which is not modified, should be copied to the allocated
space. In NICI-TrGW, we adjust the header room of kernel-level packet buffer for each packet
to reserve more space for IPv4-to-IPv6 packet translation. In the proposed solution, we prevent
the unnecessary memory-copy operations for the payload. The NICI-TrGW architecture and the
detailed IPv4–IPv6 translation operations at NICI-TrGW are described as follows.
3.1. The RTP packet translation at NICI-TrGW
NICI-TrGW consists of a user-level configuration daemon, an IPv4–IPv6 mapping table and
a kernel-level translation module as shown in Figure 6. The user-level configuration daemon
(Figure 6(a)) configures the address mappings in the IPv4–IPv6 mapping table (Figure 6(b)). The
NICI IPv4–IPv6 mapping table in the Linux kernel is the same as that of Portaone except that
NICI-TrGW looks up the table by hashing, while Portaone-TrGW looks up the table by indexing.
Like Portaone-TrGW, at Steps 2 and 3 in Figure 4, the configuration daemon obtains the IPv6
address/port of the UE (e.g. [2001:f18:113::4]:9002 in our example) for sending RTP packets
from the TrGW to the UE. At Steps 7 and 8 in Figure 4, the configuration daemon obtains the
IPv4 address/port of the SIP UA (140.113.131.11:9000) for sending RTP packets from the TrGW
to the SIP UA. The configuration daemon then establishes a mapping entry between the UE’s
IPv6 address/port and the SIP UA’s IPv4 address/port, and inserts this entry into the IPv4/IPv6
mapping table. At Step 12 of Figure 4, the translation module (Figure 6(c)) translates the RTP
packets transmitted between the UE and the SIP UA by utilizing the IPv4–IPv6 mapping table.
Copyright q 2009 John Wiley & Sons, Ltd. Int. J. Commun. Syst. 2010; 23:929–944
DOI: 10.1002/dac
940 W.-E. CHEN AND P.-J. LIN
4. PERFORMANCE EVALUATION
This section evaluates the performance of the three IPv4–IPv6 translation solutions (Naptd,
Portaone, and NICI) implemented in the TrGW.
4.1. The test environment
According to the test architecture defined in RFC 2544 [11], Figure 7 illustrates our test environment
for IPv4–IPv6 translation, which consists of three components: a SmartBits 600B (Figure 7(a))
[12], a test controller (Figure 7(b)), and the device under test (DUT, Figure 7(c)). The SmartBits
600B is the traffic generator that simultaneously transmits and receives the RTP packets. The test
controller is a desktop computer, which invokes the SmartLib functions to control the SmartBits,
and is responsible for producing the measured results. The DUT is the TrGW with the IPv4–IPv6
translation software (Naptd, Portaone, or NICI). The TrGW is a desktop computer running Linux
2.6 with Intel Pentium 4 3.00 GHz CPU and 1.5 GB SDRAM. These network components are
connected through the following Network Interface Cards (NICs): NIC1 (in the test controller),
NIC2, NIC3, NIC4 (in the SmartBits), NIC5, and NIC6 (in the DUT).
For Naptd-TrGW, the NAT-PT parameters such as the IPv4 interface name (e.g. eth2 associated
with the IPv4 address 140.113.131.12), the IPv6 interface name (e.g. eth1 associated with the
IPv6 address 2001:f18:113::3), the NAT-PT prefix (e.g. 2000:ffff::/96), and the IPv4 address pool
range (e.g. 140.113.131.13-22) are specified beforehand and recorded in a configuration file. When
Naptd-TrGW is initiated, the configuration file is read to set these parameters. For Portatone-TrGW,
configuration parameters such as the IPv4 address (e.g. 140.113.131.12) and the IPv6 address (e.g.
2001:f18:113::3) to be listened on by the TrGW are specified as command line arguments when
Figure 7. The test environment for IPv4–IPv6 translation.
Copyright q 2009 John Wiley & Sons, Ltd. Int. J. Commun. Syst. 2010; 23:929–944
DOI: 10.1002/dac
942 W.-E. CHEN AND P.-J. LIN
Figure 8. The packet loss rate: (a) IPv6-to-IPv4 translation and (b) Naptd IPv4-to-IPv6 and IPv6-to-IPv4.
The packet loss rate and the maximum throughput of IPv4-to-IPv6 translation are the same as
those of IPv6-to-IPv4 translation for both Portaone-TrGW and NICI-TrGW. Figure 8(b) illustrates
the Naptd-TrGW packet loss rates for IPv4-to-IPv6 and IPv6-to-IPv4 translations. This figure
shows that the maximum throughputs for IPv4-to-IPv6 and IPv6-to-IPv4 translations are 603 and
478 concurrent calls, respectively. That is, IPv4-to-IPv6 translation performs better than IPv6-to-
IPv4 translation in terms of the packet loss rate and the maximum throughput. We will explain
this phenomenon in Section 4.2.2.
4.2.2. Average latency. Figure 9(a) illustrates the average latency for IPv6-to-IPv4 translation. This
figure shows that the average latency for NICI-TrGW is the shortest among the three translation
solutions. The average latency for Naptd-TrGW is, e.g., about 78% higher than that for NICI-TrGW
when the number of concurrent calls is 400. The average latency for Portaone-TrGW is much
higher than that for Naptd-TrGW. Compared with NICI-TrGW, the high latencies of Naptd-TrGW
and Portaone-TrGW are due to the fact that both translation solutions translate packets at the user
level. That is, every incoming packet is copied from the Linux kernel to the user-level daemon.
After the packet is translated, it is copied again from the user-level daemon to the Linux kernel.
For NICI-TrGW, the translation module is implemented at the kernel level. Therefore, it avoids
these memory copies and thus can process packets faster than Naptd-TrGW and Portaone-TrGW.
For both NICI-TrGW and Naptd-TrGW, the average latencies slightly increase as the number of
concurrent calls increases. For example, when the number of concurrent calls increases from 100
to 200, the average latency increases from 102.4 to 107.2s for Naptd-TrGW. For Portaone-TrGW,
the average latency increases significantly when the number of concurrent calls increases. For
example, when the number of concurrent calls increases from 100 to 200, the average latency
increases from 143 to 322.1s. This large latency increase for Portaone-TrGW is explained as
Copyright q 2009 John Wiley & Sons, Ltd. Int. J. Commun. Syst. 2010; 23:929–944
DOI: 10.1002/dac
944 W.-E. CHEN AND P.-J. LIN
ACKNOWLEDGEMENTS
The work of Whai-En Chen was sponsored in part by NSC 98-2219-E-197-003, NSC 098-2816-E-197-001,
NSC 98-2219-E-197-001, NSC 97-2219-E-197-003, III Project, and ITRI/NCTU Joint Research Center.
REFERENCES
1. 3GPP. 3rd Generation Partnership Project, Technical Specification Group Services and Systems Aspects, IP
Multimedia Subsystem, Stage 2. Technical Specification 3G TS 23.228 version 8.3.0 (2007-12), 2007.
2. IETF. SIP: Session Initiation Protocol. IETF RFC 3261, June 2002.
3. IETF. RTP: a transport protocol for real-time applications. IETF RFC 3550, July 2003.
4. Chen W-E, Lin Y-B, Pang A-C. An IPv4–IPv6 translation mechanism for SIP overlay network in UMTS All-IP
environment. IEEE Journal on Selected Areas in Communications 2005; 23(11):2152–2160.
5. IETF. Network Address Translation—Protocol Translation (NAT-PT). IETF RFC 2766, February 2000.
6. Naptd. Available from: http://tomicki.net/naptd.php/.
7. Sisalem D, Fiedler J, Ruppelt R. SIP and IPv6: why and how. SAINT2003, Orlando, FL, U.S.A., January 2003;
27–31.
8. Portaone RTPproxy. Available from: http://www.rtpproxy.org/.
9. IETF. SDP: Session Description Protocol. IETF RFC 4566, July 2006.
10. IETF. Analysis on IPv6 transition in third generation partnership project (3GPP) networks. IETF RFC 4215,
October 2005.
11. IETF. Benchmarking methodology for network interconnect devices. IETF RFC 2544, March 1999.
12. Spirent Smartbits performance analysis system. Available from: http://www.spirent.com/.
13. IETF. RTP profile for audio and video conferences with minimal control. IETF RFC 3551, July 2003.
14. Collins D. Carrier Grade Voice Over IP (2nd edn). McGraw-Hill: Singapore, 2003.
15. IETF. Benchmarking terminology for network interconnection devices. IETF RFC 1242, July 1991.
AUTHORS’ BIOGRAPHIES
Whai-En Chen (M’99) received a Bachelor of Science degree in Electric Engineering
from the Tam Kang University in 1997, and received a PhD in Computer Science from
the National Tsing Hua University in 2002. He began serving as a Research Assistant
Professor in the National Chiao Tung University from 2002 to 2007. Since August
2007, Dr Chen served as an assistant professor in the Institute of Computer Science and
Information Engineering (CSIE) and a division head in network division of computer
and IT center in the National Ilan University. Since September 2008, he served as a
chair of Institute of CSIE. His research interests include 3G IP Multimedia Subsystem
(IMS), SIP-based VoIP services, IPv6 translation mechanisms, IEEE 802.16 WiMAX
MAC.
Pin-Jen Lin received the BS and the MS degrees from the National Chiao Tung
University (NCTU), Hsinchu, Taiwan in 2006 and 2008, respectively. He is currently
working toward the PhD degree at NCTU. His current research interests include 3G IP
multimedia subsystem (IMS), SIP-based VoIP services, and IPv6 translation mechanisms.
Copyright q 2009 John Wiley & Sons, Ltd. Int. J. Commun. Syst. 2010; 23:929–944
DOI: 10.1002/dac
920 W.-E. CHEN, Y.-L. HUANG AND Y.-B. LIN
to) are carried in the SIP message body in the format of session description protocol (SDP) [3].
When an IMS user equipment (UE) with both IPv4 and IPv6 protocol stacks (i.e. an IPv4/IPv6
dual-stack UE) initiates a call by sending an IPv6 SIP INVITE message to a SIP user agent (UA)
that supports IPv4 only (IPv4-only UA), the call is not established correctly. For example, the
IPv4-only UA may ignore the IPv6 INVITE message because it is unable to process SIP messages
that contain IPv6 addresses. Furthermore, the IPv4-only UA cannot send the RTP packets to the
IPv4/IPv6 dual-stack UE because the destination of the RTP packets resides in the IPv6 network.
That is, IPv6 network is unreachable for an IPv4 host.
To resolve this problem, three solutions have been proposed in the literature, including the
IMS-application layer gateway (ALG) solution [4], the Redirect solution [5], and the interactive
connectivity establishment (ICE) solution [6]. These three solutions are described in Section 2. We
propose an effective solution in Section 3 and evaluate these four solutions in terms of network
node modification, call setup complexity, and RTP transmission latency in Section 4. The readers
who would like to understand the detailed operations of normal IMS can refer to [7].
2. EXISTING SOLUTIONS
The IPv4/IPv6 interworking environment for SIP-based VoIP is illustrated in Figure 1. The calling
party (UE; see Figure 1 (1)) is an IPv4/IPv6 dual-stack UE. The called party (UA; see Figure 1 (2))
is an IPv4-only UA. An IPv4/IPv6 dual-stack call session control function (CSCF; see Figure 1 (3))
can be viewed as a SIP server supporting a registrar and proxy. A transition gateway (TrGW;
Figure 1 (4)) is responsible for translating IPv4 RTP packets to IPv6 RTP packets, and vice versa.
Similarly, an IMS-ALG (Figure 1 (5)) is responsible for translating SIP messages. For the three
solutions described in this section (the IMS-ALG solution, the Redirect solution, and the ICE
solution), the CSCF is required for all solutions while the TrGW and IMS-ALG are used in the
IMS-ALG solution only. Without loss of generality, we assume that both UE and UA register their
contact information at the CSCF in all solutions.
Consider the SIP registration message flow in Figure 2 where UE’s IPv4/IPv6 addresses
are 140.113.1.1 and 2001:f18:113::1. UA’s IPv4 address is 140.113.1.2. The CSCF’s IPv4/IPv6
addresses are 140.113.1.10 and 2001:f18:113::10, respectively.
In the registration procedure, UE first sends an IPv6 SIP REGISTER message to the CSCF with
both its IPv6 and IPv4 contact information filled in two separate Contact header fields (Step 1 in
IP Connectivity Access Network
(5)
IMS-ALG(3) CSCF
(4) TrGW
IPv4 Network
(IPv4/IPv6 Network)
(1) UE
(2) UA
SIP RTP
Figure 1. IPv4/IPv6 interworking environment for SIP-based VoIP.
Copyright q 2009 John Wiley & Sons, Ltd. Int. J. Commun. Syst. 2010; 23:919–928
DOI: 10.1002/dac
922 W.-E. CHEN, Y.-L. HUANG AND Y.-B. LIN
Step 1. UE sends an IPv6 SIP INVITE message to UA through the CSCF.
Step 2. Upon receipt of the INVITE message, the CSCF retrieves UE’s IP address from the
Contact header field of the INVITE message and UA’s IP address from the CSCF’s registrar
database. The CSCF then compares the versions of UE’s and UA’s IP addresses. This action is
called IP version comparison. In this example, the versions of UE’s and UA’s IP addresses are
IPv6 and IPv4, respectively. To establish the call without changing the IP version that UE chooses
for the call, the IMS-ALG translates the SIP messages for this call setup. For the INVITE message,
UE’s IPv6 address in the Via and the Contact header fields is replaced by the CSCF’s IPv4 address.
In addition, UE’s IPv6 address and port number in the SDP c and m fields are passed to the TrGW
to build an IP/port mapping for forwarding the RTP packets from UA to UE. The TrGW returns
its IPv4 address and an unused port number to the CSCF for modifying the SDP c/m fields. After
translation, the revised IPv4 INVITE message is then forwarded to UA.
Step 3. Upon receipt of the INVITE message, UA retrieves the Via header field in the INVITE
message, which indicates the SIP nodes visited by the INVITE message. When UA accepts the
call, an IPv4 SIP 200 OK message with the retrieved Via header field is created. The IPv4 200
OK message is then sent to the CSCF according to the Via header field.
Step 4. Upon receipt of the 200 OK message, the IMS-ALG replaces its IPv4 address in the
Via header field by UE’s IPv6 address. In addition, UA’s IPv4 address in the Contact header
field is replaced by the CSCF’s IPv6 address. Similar to the description in Step 2, the IMS-ALG
passes UA’s IPv4 address and port number in the SDP c/m fields to the TrGW to build an
IP/port mapping for forwarding the RTP packets from UE to UA. Then the IMS-ALG modifies
the SDP c/m fields by using the TrGW’s IPv6 address and the port number that are returned
from the TrGW. According to the Via header field, the IPv6 200 OK message is forwarded
to UE.
Steps 5 and 6. When UE receives the 200 OK message, it replies an IPv6 SIP ACK message.
The IMS-ALG replaces UE’s IPv6 address in the Via and the Contact header fields by the CSCF’s
IPv4 address and forwards the IPv4 ACK message to UA.
After the call is established, UE sends IPv6 RTP packets to UA through the TrGW. The TrGW
translates these packets into IPv4 RTP packets and forwards them to UA. Similarly, the IPv4
RTP packets from UA are translated into IPv6 RTP packets and then forwarded to UE by the
TrGW.
2.2. The Redirect solution
In the Redirect solution [5], upon receipt of the IPv6 INVITE message from UE, the CSCF informs
UE to set up the call to UA through IPv4. The call setup procedure in Figure 4 is described
as below.
Step 1. UE sends an IPv6 SIP INVITE message to UA through the CSCF.
Step 2. Upon receipt of the INVITE message, the CSCF performs IP version comparison. Since
the versions of UE’s and UA’s IP addresses are different, the CSCF sends an IPv6 302 Move
Temporarily message to UE to indicate that IPv4 should be used for call setup.
Step 3. UE learns that UA is in the IPv4 domain and replies an IPv6 ACK message to the CSCF.
Step 4. UE sends an IPv4 SIP INVITE message to UA through the CSCF.
Steps 5 and 6. UA accepts the call and sends an IPv4 200 OK message to UE through the
CSCF. UE then replies an IPv4 ACK message.
The call is established, and IPv4 RTP packets are delivered between UE and UA.
Copyright q 2009 John Wiley & Sons, Ltd. Int. J. Commun. Syst. 2010; 23:919–928
DOI: 10.1002/dac
924 W.-E. CHEN, Y.-L. HUANG AND Y.-B. LIN
Step 1. UE sends an IPv6 SIP INVITE message to UA through the CSCF. In addition to its IPv6
address, UE includes its IPv4 address in the SDP c/m fields. Upon receipt of the INVITE message,
the CSCF retrieves UA’s IP address from its registrar database and learns that UA supports IPv4
only. The CSCF encapsulates the INVITE message in an IPv4 packet and forwards it to UA.
Step 2. When UA receives the INVITE message, the Via header fields are retrieved (to be used
for creating a subsequent 200 OK message). In addition, UE’s IPv4 address in the SDP c field
is retrieved (to be used in Step 6). Since UA supports IPv4 only, other IPv6 addresses in the
message are ignored. UA then creates an IPv4 200 OK message with retrieved Via header fields
and includes its IPv4 address in the SDP c field. The 200 OK message is sent to the CSCF in an
IPv4 packet. The CSCF then forwards the 200 OK message to UE in an IPv6 packet.
Step 3. After receiving the 200 OK message, UE retrieves UA’s IPv4 address from the SDP c
field (to be used in Step 4) and replies an IPv6 ACK message. Similar to the INVITE message,
the ACK message is sent to the CSCF in an IPv6 packet and then forwarded to UA in an IPv4
packet by the CSCF.
Unlike the IMS-ALG and the Redirect solutions, the IP addresses for RTP packet delivery are
not confirmed in the ICE-based call setup procedure (Steps 1–3). Instead, they are confirmed after
the connectivity checks, which are performed before UE and UA send the RTP packets to each
other. Connectivity check utilizes simple traversal of user datagram protocol through network
address translators (STUN) Binding Request and Response messages. Suppose that UE’s IPv4
address is X and UA’s IPv4 address is Y. The connectivity check procedure (see Steps 4–7 in
Figure 5) is described as follows.
Step 4. To confirm that Y can be used for RTP packet delivery, UE sends UA a STUN Binding
Request message carried by an IP packet with source X and destination Y.
Step 5. Upon receipt of the Binding Request message, UA replies a STUN Binding Response
message with source Y and destination X. When UE receives this message, it confirms that RTP
packets with source X and destination Y can be sent to UA.
Steps 6 and 7. UA performs similar procedure to confirm that X can be used for RTP packet
delivery.
After the connectivity checks, IPv4 RTP packets are delivered between UE and UA.
3. THE CSCF-TRANSLATION SOLUTION
The solutions discussed in the previous section have some disadvantages. In the IMS-ALG solution,
all RTP packets need to be translated at the TrGW. Therefore, the RTP transmission delay, jitter, and
packet loss may increase. For the Redirect and the ICE solutions, the call setup latency increases
due to extra SIP/STUN message exchange for call setup. In this section, we propose a solution
that neither requires the TrGW nor incurs extra call setup messages.
In the CSCF-Translation solution, the CSCF translates the SIP INVITE message based on the
contact information stored in the CSCF’s registrar database, and UE learns from the 200 OK
message that UA resides in the IPv4 domain. The call setup procedure in Figure 6 is described as
follows.
Step 1. UE sends an IPv6 SIP INVITE message to UA through the CSCF. Suppose that the port
number filled in the SDP description is Z. UE prepares to use its IPv6 address with port Z for
sending/receiving RTP packets. In addition, UE prepares to use its IPv4 address with port Z for
RTP in case UA supports IPv4 only.
Copyright q 2009 John Wiley & Sons, Ltd. Int. J. Commun. Syst. 2010; 23:919–928
DOI: 10.1002/dac
926 W.-E. CHEN, Y.-L. HUANG AND Y.-B. LIN
Table I. Comparison of the IPv4/IPv6 interworking solutions for SIP-based VoIP.
SIP UE CSCF Call setup RTP
Solutions modification modification complexity transmission latency
IMS-ALG Calling party: No Significant 6 messages with 3 translations High
Called party: No
Redirect Calling party: Yes Medium 9 messages Low
Called party: No
ICE Calling party: Yes Medium 10 messages Low
Called party: Yes
CSCF-Translation Calling party: Yes Minor 6 messages with 1 translation Low
Called party: No
Call setup complexity: Compared with the standard SIP call setup procedure, the IMS-ALG
solution incurs additional call setup overhead for the SIP message translation (between IPv6
and IPv4) performed at the CSCF. The Redirect solution requires an extra INVITE transaction
(including INVITE, 302 Move Temporarily, and ACK messages). In the ICE solution, extra call
setup overhead is introduced to carry out the connectivity checks. In the CSCF-Translation solution,
the SIP proxy needs to translate the first IPv6 INVITE message into an IPv4 INVITE message.
RTP transmission latency: In the IMS-ALG solution, the RTP packets are delivered between
the call parties indirectly through the TrGW. In other solutions, the RTP packets are directly
delivered between the call parties. We have conducted experiments to measure the extra RTP
transmission delay introduced by the TrGW. In our experiments, the TrGW is a PC (with an Intel
Pentium 4 3.0 GHz CPU and 1.0 GB main memory) installed with the RTP Proxy [12] on Linux
operating system. The TrGW has two interfaces and each interface connects to an IP network
through 100 Mbps Ethernet. During the experiments, RTP packets are injected to one interface of
the TrGW at the rate of 10 Mbps (without loss), and the RTP packets translated by the TrGW
are received from the other interface of the TrGW. Each of the RTP packets contains 20 ms voice
data encoded in G.711 (172 bytes in length). The average latency of translating an RTP packet
is 5.9 ms. The extra delay is more than twice the network latency in most cases we investigated.
For example, the network latency from National Chiao Tung University to ArtDio VoIP operator
(passing through 7 routers) is 2.012 ms in average. Therefore, the RTP transmission latency in the
IMS-ALG solution is about 6–8 ms more than that in other solutions.
5. CONCLUSIONS
This paper utilized VoIP as an example to describe three existing IPv4/IPv6 interworking solu-
tions for the SIP-based NGN telecommunication services: the IMS-ALG solution, the Redirect
solution, and the ICE solution. Then we proposed a CSCF-Translation solution and compared the
new approach with the three existing solutions. Our study indicated that the RTP transmission
performance in the IMS-ALG solution is worse than the other three solutions. Both the Redirect
solution and the ICE solution introduce extra call setup messages with extra call setup overhead. In
the CSCF-Translation solution, the least extra call setup overhead is introduced, and no impairment
is incurred to the RTP transmission performance.
Copyright q 2009 John Wiley & Sons, Ltd. Int. J. Commun. Syst. 2010; 23:919–928
DOI: 10.1002/dac
928 W.-E. CHEN, Y.-L. HUANG AND Y.-B. LIN
Yi-Bing Lin is the Dean and Chair professor of the College of Computer Science,
National Chiao Tung University (NCTU). He is a senior technical editor of IEEE
NETWORK. He serves on the editorial boards of IEEE TRANSACTIONS ON WIRE-
LESS COMMUNICATIONS and IEEE Transactions on Vehicular Technology. He is
the General or Program Chair for prestigious conferences including ACM MobiCom
2002. He is the Guest Editor for several first-class journals including IEEE TRANS-
ACTIONS ON COMPUTERS. Lin is the author of the books Wireless and Mobile
Network Architecture (Wiley, 2001), Wireless and Mobile All-IP Networks (John Wiley,
2005), and Charging for Mobile All-IP Telecommunications (Wiley, 2008). Lin is listed
in ISI-HighlyCited.Com among the top 1% most-cited Computer Science researchers.
He received numerous research awards including 2005 NSC Distinguished Researcher
and 2006 Academic Award of Ministry of Education. Lin is an ACM Fellow, an AAAS
Fellow, and an IET Fellow.
Copyright q 2009 John Wiley & Sons, Ltd. Int. J. Commun. Syst. 2010; 23:919–928
DOI: 10.1002/dac
 2
 
國科會補助專題研究計畫項下出席國際學術會議心得報告 
                                   日期： 2010 年 5 月 24 日 
一、參加會議經過 
FutureTech 2010 主要的大會議程安排在 5 月 21 日至 23 日間，台灣直飛釜山的復興航空雖然不是
天天都有班機，卻剛好在會議的前一天及後一天皆有班機起飛，因此本次可以完整的參與研討會亦不
會為了安排行程而多花上住宿及膳食費用。以下是會議行程: 
Dates Schedule 
May 20 
FutureTech-10 Organizing Committee Meeting  
FTRA Executive Council Meeting  
Tutorial Sessions 
May 21-23 
Invited Talk  
Main Conference Sessions  
Symposia Sessions  
Workshops Sessions 
May 24 
Tutorial Sessions  
Steering Committee Meeting  
FutureTech-11 Organizing Committee Meeting  
FTRA Plenary Meeting 
計畫編號 NSC 98－2219－E－197－003－ 
計畫名稱 IMS-Enabled Femto-Cell 平台之驗證與測試技術 
出國人員
姓名 陳懷恩 
服務機構
及職稱 國立宜蘭大學 
會議時間 2010年 5月 21日至 2010 年 5 月 23 日 會議地點  
會議名稱 (英文) The 5th International Conference on Future Information Technology 
(FutureTech 2010) 
發表論文
題目 
(英文) Toward Secure Centralized Spectrum Sensing by utilizing 
Geographical Information 
附件四 
 4
二、與會心得 
這屆 FutureTech 研討會共計收到 201 份投稿論文，經過審稿程序後共接受了 56 篇論文(接受率為
28%)。主要徵稿的研究領域涵蓋範圍不小，包含以下 10 個研究領域： 
1. Hybrid Information Technology 
2. High Performance Computing 
3. Cloud Computing 
4. Ubiquitous Networks and Wireless Communications 
5. Digital Convergence 
6. Multimedia Convergence 
7. Intelligent and Pervasive Applications 
8. Security and Trust Computing 
9. IT Management and Service 
10. Bioinformatics and Bio-Inspired Computing 
 
FutureTech 研討會今年除了與 The 10th International Conference on Algorithms and Architectures for 
Parallel Processing (ICA3PP 2010) 共同舉辦，更有多達七個 Workshops 一同舉辦： 
1. The 1st International Workshop on Advances in Emerging Wireless Networks and Systems 
(AEWiNS 2010) 
2. International Workshop on Advances in Multimedia Security (AIMS 2010) 
3. The 5th International Workshop on Design, Analysis and Tools for Integrated Circuits and 
Systems (DATICS 2010) 
4. International Workshop on Future Engineering, Applications and Services (FEAS 2010) 
5. International Workshop on Financial Security (IWFS 2010) 
6. The 1st International Workshop on Multimedia and Semantic Technologies (MUST2010) 
7. The 5th International Symposium on Smart Home (SH 2010) 
因此本次會議匯聚了各領域的研究學者，讓本人有機會聆聽到其他領域的論文發表，而可以用不
同角度或跨領域觀點的思考問題，也是此行的另一個收穫。 
三、建議 
會議地點韓國釜山的 LOTTE(樂天)飯店是當地最好的飯店，雖然大會有提供折扣價，住宿價格仍
然不斐，在剛好訂不到優惠價的狀況下詢問旅行社，發現復興航空的自由行套裝剛好搭配的是樂天飯
店，價格算起來也比大會折扣還便宜，因此日後若要前往釜山參加會議也可以先向旅行社詢問套裝行
程，不一定使用大會折扣的價格會比較便宜。 
本人此次擔任 Session Chair 時遇到有兩位歐洲的與會者因為火山灰的問題無法前來，但因大會需
要有人來報告論文，因此這兩位與會者是採用數位影音的方式，由本人協助撥放錄影檔案報告。我想
這個方可以供國內專家學者參考，在無法前往會議時，可以利用現代數位科技的協助，達到展現研究
成果的目的。此外，由於 FutureTech 涵蓋研究主題廣泛，因此遇到瞭解自己特定領域的專家機率比一
 6
 
國科會補助專題研究計畫項下赴國外(或大陸地區)出差或研習心得報告 
                                    日期：2010 年 7 月 12 日 
一、國外(大陸)研究過程 
07/08 Thursday 第零天 
1. 啟程，搭乘中國國航直飛北京，再轉乘長途公車至會議地點-秦皇島(燕山大學)。 
 
07/09 Friday 第一天 
<會議議程> 
日期 时间 议程 
2010/7/9 8:00-18:00 报到 
  
1. 上午參觀會議地點-燕山大學以及秦皇島市 
  
燕山大學校園一景 分組討論地點_燕山大學圖書館 
 
計畫編號 NSC 98－2219－E－197－003－ 
計畫名稱 IMS-Enabled Femto-Cell 平台之驗證與測試技術 
出國人員
姓名 蔡明興 
服務機構
及職稱 國立宜蘭大學 
出國時間 2010年 7月 9日至 2010 年 7 月 11 日 出國地點 中國大陸、秦皇島 
附件五 
 8
1. 上午參加會議開幕典禮以及專家學者特邀報告 
 
2010 海峽兩岸信息科學與信息技術學
術交流會開幕典禮 特邀報告-鍾章隊教授演講 
 
 
2. 下午則至大會所安排的會議室進行論文發表 
 
與會學者發表 發表論文 
 
07/11 Sunday 第三天 
<會議議程> 
日期 时间 议程 
2010/7/11 08:00-16:00 旅游参观(山海关、老龙头等) 
 
1. 搭車前往北京參觀北京故宮博物院  
 
北京故宮博物院 與同行老師和學長們一同合影 
 
二、研究成果 
 至中國大陸、秦皇島參與 2010 海峽兩岸資訊科學與資訊技術學術交流會議，並發表論文： 
A Performance Study on ROHC for 802.11a/b/g WirelessVoIP Environments. Ming-Hsing Tsai, 
Shih-Yuan Cheng, W.-E. Chen.  2010 Cross-Strait Conference on Information Science and 
Technology. CSCIST 2010. Qinhuangdao, China, July 9-11, 2010. 
國科會補助計畫衍生研發成果推廣資料表
日期 2010年11月01日
國科會補助計畫
研發成果名稱
發明人
(創作人)
技術說明
技術移轉可行性及
預期效益
技術/產品應用範圍
產業別
計畫名稱:
計畫主持人:
計畫編號: 學門領域:
(中文)
(英文)
成果歸屬機構
(中文)
(英文)
IMS-Enabled Femto-Cell 平台之驗證與測試技術
陳懷恩
98 -2219-E -197 -003 - 網路通訊國家型計畫
CSCF正確性與效能測試工具
CSCF Conformance and Performance Test Tools
國立宜蘭大學 陳懷恩,李家朋
3GPP (3rd Generation Partnership Project)在Release 5提出IP多媒體子系
統 (IP Multimedia Subsystem，IMS)以提供IP多媒體服務。在建置IMS服務時
，驗證CSCF元件是否有達到標準所定的規範是第1道關卡。本計畫採用電信測試
標準TTCN-3 (Testing and Test Control Notation -version 3)，研發CSCF
Conformance Test Tool一致性測試平臺(簡稱CSCF-T)，以及利用OpenIMS進行
測試。
3rd Generation Partnership Project (3GPP) specifies an IP Multimedia
Subsystem (IMS) to provide IP multimedia services, such as Voice,
Video Stream. How to validate Call Session Control Function (CSCF)
whether achieve the specification Standard is the first step when
implementation IMS services. Hence, ours technique is utilized
Testing and Test Control Notation -version 3 (TTCN-3) of
telecommunication Test Standard to research and development CSCF
Conformance Test Tool (CSCF-T) for testing in the OpenIMS
environment.
資訊服務業；檢測維護業；其他專業、科學及技術服務業
1.可用於研究與廠商測試其 IMS 與Femtocell 整合系統
2.有助於IMS信令研究並可測試電信廠商之IMS系統
3.測試手機在IMS下是否符合標準
可針對IMS伺服器進行驗證及分析比較Femtocell下各種SIP/IMS信令的效能，成果可
移轉給工研院或國內電信業者，協助於研究與廠商測試其IMS與Femtocell整合系統。
註：本項研發成果若尚未申請專利，請勿揭露可申請專利之主要內容。
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
舉辦舉辦 IMT-Advanced Technology Workshop，將成果擴散至學術與產業界。
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
