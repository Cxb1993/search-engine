2 
 
 
摘要 
本計畫為期兩年（97-98），在第一年計畫中，我們主要探討各種行動網路架構（PTP、
PTM、MTP）下的無縫視訊換手議題，在第二年計畫中，我們主要探討行動網路下視訊傳
輸錯誤抑制的議題，此報告係針對第二年計畫撰寫。在無線的網路環境中，無線電波容易
遭受到多重路徑的干擾而產生錯誤，因此如何在無線網路中為視訊群播提供有效的錯誤回
復是非常重要的議題。在群播的環境中，一般而言，錯誤發生時不適合使用重傳的機制來
進行修復；而是使用來源端的錯誤更正機制，其原理是使用額外附加的更正碼來修正錯誤
(例如 FEC)，當錯誤發生時，接收端就可以利用接收到的資料來修復錯誤，當短暫的 error
發生時，FEC 可用來修補資料，但若是遭遇到 long burst error 時，FEC 的錯誤修復效果仍
然相當有限，這種現象在行動網路環境中更加明顯。 
 
因此本研究提出Replicated Multiple Descriptor (RMD) 的機制，主要是將視訊串流編碼成許
多獨立的子串流，並針對重要的影格重複在其它的子串流中傳送，並且每個子串流傳送時
會以時間差的方式在不同的群播頻道中傳送，藉以抵抗錯誤，提高更正率。透過實驗模擬
結果顯示出RMD機制相較於其它的錯誤回復機制的確能夠降低long burst error 對視訊串流
所造成負面的影響，並且有效的提升影片播放品質。本研部分究成果中文報告業已發表於
九十六年全國計算機會議 [16]，英文報告亦將投稿 NBiS2010國際會議 [17]。系統實做—
“時差性通道叢集串流代理伺服器系統＂，亦已參加教育部97年全國校園軟體設計創意競
賽，榮獲佳作[18]。 
 
 
關鍵詞：多重路徑、群播、video streaming、MDC 
 
Abstract 
A wireless local area network (WLAN) is error-prone because the radio signal is easily 
interfered by the multi-path fading effect. 
Provision efficient error recovery is important for video multicast in a WLAN. Instead 
of relying on client’s retransmission, the source-based error correction mechanisms are 
commonly employed for multicast where the source manipulates the data by adding some 
extra correction information (e.g., FEC)and the client recovers the errors from the received 
data. However, in the presence of long burst errors, the effect of recovery becomes limited 
for videos. This paper presents a replicated multiple descriptor scheme (RMD) where a 
video stream is encoded into several independent sub-streams and some important video 
frames in a sub-stream are also replicated in some other sub-streams. Sub-streams are 
transmitted over different multicast channels by employing some time-offsets. The 
simulation results reveal that RMD shows great help in immunizing the video stream from 
long burst errors and achieving an improved visual quality, compared with other schemes。 
 
Keywords: multi-path fading, multicast, video streaming, MDC. 
 
4 
 
此章節主要將探討有關 multicast 在無線網路環境架構中，在傳送視訊串流資料時，往
往因為無線訊號遭受到干擾而使資料產生錯誤，進而造成在播放時不順暢，降低影片的品
質，因此需要額外使用 error control 機制來降低傳輸時錯誤發生的數量。先前學者提出了
許多 error control 的機制，其中包括了 channel-based 、sender-based 、receiver-based 的 error 
control 的機制。 
 
2.1 Channel-based error control 
 
在無線通訊的環境中，fading channel 主要是由於 multi-path 傳播的現象所造成的，其
對通訊品質會造成相當大的影響，因此，一般都是使用 diversity 技術來抵抗 fading channel 
現象，而所謂的 diversity 就是將相同的訊號重複地傳送在多個獨立的 fading channel 上，
訊號同時受到衰減的機率就會大大降低， 以達到分集增益(Diversity Gain) ，而 diversity 主
要有三種典型的技術，分別是 Time Diversity[2] [10] 、Frequency Diversity[11][15] 、Path 
Diversity。 
 
2.1.1 Path diversity 
在 fading channel 的傳輸環境中，path diversity 為一種實際又有效的方法，在傳送訊號
時，將資料在不同的路徑上傳送，每個路徑彼此間互相獨立，因此同時間遭受到干擾的機
率變小，在實際的運用上通常在傳送與接收兩端都會使用多單元天線架構，亦稱之多輸入
多輸出系統[6] [8] (Multiple-Input Multiple-Output, MIMO)。 
 
2.1.2 Multiple Description Coding 
在 path diversity 系統架構中，經常使用多重路徑傳送(Multiple Path Transport/MPT)作
為傳送的方式，在無線通訊系統中可以用來增加連線能力及資料傳輸的可靠度，一般大多
使用多重描述編碼[1][3] (Multiple Description Coding/MDC)技術來將資料分別在不同的路
徑上傳送,以降低無線訊號 multi-path fading 所造成的影響。其示意如下圖 2-1 
 
6 
 
判斷資料是否遭受破壞。若發生資料錯誤時則可以由 redundant data 對錯誤的資料進行修
復，這種機制的優點是(1)資料可以連續傳送，不需回覆封包；(2)適用於單向性通訊(如
multicast 網路環境)；(3)接收端不需儲存大量的資料。 
由上面所敘述我們可以知道在無線網路中要提供 multicast 服務的話，不適合採用
receiver-based error control，因為在 multicast 的環境中，若錯誤發生頻繁時會造成大量的
feedback implosion 影響網路傳輸效能。因此最好採用錯誤自行修復的方法，也就是
sender-based error control(例 FEC)來進行錯誤的修補。 
而且由於視訊串流資料中有不同影格之分，其重要性也不相同，因此當錯誤發生時，
並不頇要所有資料都正確地接收，因此我們提出 RMD 機制，其基本的概念是利用 MD 的
原理，將視訊串流分成數道子串流，每個子串流透過獨立 multicast channel 傳送，並且會
將部份關鍵的 backup frame(如 I frame)利用 time shift 的方式加到別的 descriptor 中，使得
頻道跟頻道之間有著相互回復的功能，並且能夠抵抗 burst error 的發生，當發生封包遺失
或錯誤時，接收端則會去檢查其他的 descriptor 中是否有正確的 backup frame，如果有則進
行修補的動作，然後再將資料進行解碼，送到播放器播放，如此可達到修補的目的。 
 
3. 研究方法 
在無線網路環境下提供 multicast 視訊串流服務發生錯誤時， 並不能仰賴 MH 的
acknowledgement 來做為錯誤控制機制，一般來說都是使用 FEC 機制來做錯誤的修補機
制，但當網路發生 burst error 時，FEC 機制效果並不好，因此在這方面仍然還有改善的空
間。 
 
3.1 Replicated Multiple Description 
圖 3-1 為本研究的系統架構圖，主要是利用 MDC 的運作概念，將影片資料獨立編碼
後，產生不同的 descriptor 串流，再透過視訊串流資料的特性，我們將把關鍵影格(如 I 
Frame、P Frame)備份，我們稱之為備份影格(backup frame) ， 並且將 backup frame 穿插在
不同的 descriptor 上在不同的路徑上傳送，當接收端接到來自各個不同 multicast channel 的
影片資料時，如果發生封包遺失或錯誤時，接收端則會去檢查其他的 descriptor 中是否有
正確的 backup frame，如果有則進行修補的動作，然後再將資料進行解碼，送到播放器播
放，如此可達到修補的目的。 
 
8 
 
 
以圖 3-3 為例，在 Channel 1 上的資料 4、5 和 Channel 2 上的資料 3、4 及 Channel 3 
中的資料 2、3 都遭受到 burst error 影響造成破壞，但我們可以利用 time shifting 方式從其
它的頻道中將損壞的資料給修復回來達到資料修復的效果。故此在 RMD 系統中，我們定
義了二個系統參數 b 與 s，b 為每個 descriptor 中關鍵影格所備份的數量，s 為每個 escriptor 
之間 backup frame timeshifting 位移的數量。 
 
3.1.1 RMD Sender 
在傳送端方面，主要由 MDC Encoder、Frame Replicator 及 Frame Dispatcher 這三個模
組所構成的，主要會將來源的視訊串流資料分成不同的子串流，並產生 backup frame 依照
time shifting 值安插在不同的路徑上傳送。 
 
 MD Encoder 模組 
其主要的功用為將來源的視訊串流資料分成不同的 descriptor，然後獨立進行影片編碼
壓縮。 
 Frame Replicator 模組 
其主要的功用為分析 MD Encoder 模組編碼後所產生的影片，將關鍵的 Frame type，
依照所給定的 b 參數，產生 backup frame。 
 Frame Dispatcher 模組 
其主要的功用為將 Frame Replicator 模組中產生的 backup frame，依照所給定的 Time 
shifting(s)參數決定在 descriptor 之間要 time shifting 多少的量。 
 
3.1.2 RMD Receiver 
在接收端方面， 主要由 Frame Integrity Checking、Frame Error Recovery、Replicated 
Frame Removing 及 MD decoder 這四個模組所構成的，主要會將 MH 接收到來自不同
multicast channel 的資料，分析其錯誤發生的狀況，進行 frame-based 的錯誤復原，以加強
影片的播放品質。 
 
 Frame Integrity Checking 模組 
其主要的功用為接收 MH 從下層送上來的 descriptor 資料，並且針對 key frame 的完
整性做檢查。 
 
 Frame Error Recovery 模組 
其主要的功用為針對有遭受到損壞的 key frame 或遺失的 key frame 進行修復的動
作，會先檢查參考其他 descriptor 中的 backup frame 是否完整正確，如果有則進行修
補的動作。 
 
 Replicated Frame Removing 模組 
其主要的功用為錯誤修復後，將 descriptor 中多餘無用的 backup frame 移除，還原成
原始的 descriptor。 
 MD decoder 
10 
 
 
圖 3-5 frame dispatcher 運作示意圖 
 
3.3 Frame Recovery 
當資料經由 Replicated Multiple Description 編碼後傳送到網路中，可能因為干擾而造成封包
的遺失，那要如何將遺失的封包重建回來，以下我們將利用圖 3-6 說明 Frame Recovery 的
流程 
 
圖 3-6 frame recovery 運作示意圖 
 
當接收端收到來自不同的 descriptor 所傳來的資料後，會先經由 frame integrity checking 
這個模組去檢察關鍵影格是否有遺失或不完整，若發現有不完整或遺失時，就會到其它的
descriptor 中去找尋完整正確的關鍵備份影格，如果找到則進行修補動作，然後再將資料進
行解碼，送到播放器播放，如此以達到修補的目的。 
 
12 
 
表 4-2 各機制參數設定 
 
 
由圖 4-2 中可以看出當網路發生較輕微（packet lossrate 小於 0.1 的情況）的錯誤時，
使用 FEC 機制的組合所得到的 MOS 評估值較高，當 packet rate 慢慢升高的時候，本研究
所提出的 RMD 方法可以利用其他 descriptor 中的 backup frame 資料來修復錯誤或遺失的
影格，因此可以提升影片播放的品質。 
 
圖 4- 2 不同 packet loss rate 下各機制視訊串流 MOS 之平均值 
 
由實驗中我們可以將所發生的 packet loss rate 分成三大部份，分別是小於 0.1 我們稱之
為 lighterror，就是在這個範圍內，搭配使用 FEC 機制可以提供良好的 error recovery 能力。
在介於 0.1 到 0.2 之間，我們稱之為 middle error，一但 packet lossrate 大於 0.2 時，我們
稱之為 heavy error，也就是在這個範圍內，隨著 packet loss rate 的增加，發生連續封包遺
失的機率也跟著增加，所以 FEC 機制的 error recovery 能力也會就隨著 packet loss rate 增
加而降低。 
我們將這實驗的結果整理歸納成表 4-3，並且依照不同錯誤發生的程度，將各種機制按
照 MOS 評估值作排序，當網路發生 light error 時，我們可以發現搭配使用 FEC 的機制(SD 
with FEC and MDwith FEC)可以有良好的錯誤更正效果，而當網路發生 heavy error 時，錯
誤的影響範圍已經大於 FEC 能力範圍，因此無法成功的修復錯誤，造成播放品質的降低。 
 
表 4-3 各機制 Error Recovery 結果整理 
14 
 
 
圖 4- 4 當 b=3，RMD 在不同 s 參數下 PSNR(MOS) 平均值 
 
雖然我們增加 backup frame 跟 time shift 可以獲得較好的播放品質，但因為 s、b 參數
也受限於 descriptors 跟 GOP 的大小，並不能無限制的增加，並且我們也了解增加這兩個
參數時必頇要忍受它所帶來延遲的代價。 
 
(3) 傳輸成本比較 
在這個實驗中，我們主要比較 MD with FEC 機制的傳輸成本跟 RMD 不同 b 參數所頇
要的傳輸成本，我們整理出下表 4-4 各種參數之編碼比。 
我們可以由表 4-4 中，我們可以發現網路發生 heavy error 時，我們使用二倍的 backup 
frame，其編碼比比使用 FEC 機制來的低，就己經可以明顯提升 error recovery 的效果。 
當我們設定為三倍 backup frame 時，使用 RMD 機制雖然比使用 FEC 機制的編碼比
略高一點，但 MOS 評估值卻比使用 FEC 提升了近一個等級(從 Fair 到 Good)，因此在可
以接受的影片編碼大小範圍內，RMD 可以提供更佳的 error recovery 能力，提高影片播放
品質。 
 
表 4-4 Reed Solomon 及 RMD 不同參數之編碼比 
 
 
5. 結論 
本研究提出 RMD 機制來傳送視訊串流，雖然在發生 light error 時影片播放品質改善
16 
 
2005. 
[12] Pheanis D.C. and Chua T.K., “QoS evaluation of sender-based loss-recovery techniques for 
VoIP”, IEEE Network, 20(6), pp.14-22, Nov.-Dec. 2006. 
[13] Pahlavan K. and Krishnamurthy P., “Principles of Wireless Networks,” Prentice Hall Upper 
Saddle River, 2002. 
[14] Zorzi M., Rao R.R. and Milstein L.B., “ARQ error control for fading mobile radio channels”, 
Vehicular Technology, IEEE Transactions, 46(2), pp.445-455, May. 1997. 
[15] Zhou S. and Giannakis G. B., “Single-carrier space-time block-coded transmissions over 
frequency-selective fading channels,” IEEE Transactions on Information Theory, 49(1), 
pp.164-179, Jan. 2003. 
[16] 童曉儒, 余遠澤, 陳哲民, 黃宇庠, "在 WLAN 中支援視訊群播之錯誤復原機制", 
NCS2007 中華民國九十六年全國計算機會議,2007/12/1. 
[17] Sheau-Ru Tong, Yuan-Tse Yu and Che-Min Chen, Error Recovery for Video Broadcasting in 
Mobile Networks, prepared for submission to The International Conference on Network-Based 
Information Systems (NBiS), 2010/9. 
[18] 童曉儒，謝孝熙、林祐沁“時差性通道叢集串流代理伺服器系統＂，教育部 97 年全
國校園軟體設計創意競賽，佳作。 
 
 
 
2 
 
IWCMC 2009 介紹： 
Keynote 1:  
Date & time: Monday, June 22nd, 8:30 - 10:00 am 
Dr. Gordon L. Stüber 
Keynote Title: TV Band Cognitive Radio Networks 
Cognitive Radio has recently been suggested as a method of promoting more efficient spectrum 
usage through the principle of spectrum sensing, adaptive transmission and dynamic radio 
resource allocation. Recently, the IEEE 802 working group introduced the first cognitive radio 
based wireless system, known as the Wireless Regional Area Network (WRAN), operating 
opportunistically on a non-interfering basis in the commercial broadcast television (TV) 
bands.   Before such TV band CR networks can be deployed, the maximum levels of 
adjacent/taboo channel interference that digital television (DTV) receivers can tolerate must be 
determined.  Moreover, such TV band cognitive radio devices may also interfere with TV band 
wireless microphone systems. In this context, we will first provide an overview of the IEEE 
802.22 WRAN system and the basics of DTV deployment. Afterwards, we will discuss the 
problem of determining adjacent/taboo channel interference limits into (ATSC) based DTV 
receivers and wireless microphone systems. Finally, we will discuss the implications of these 
WRAN interference limits in terms of the maximum allowable radiated power and out-of-band 
emission limits that are imposed on WRAN end user devices. 
Keynote 2: 
Date & time: Wednesday, June 24th, 8:30 - 10:00 am 
 Dr. Stefan Schmid, NEC Europe Ltd 
Keynote Title: Next-Generation Mobile Networks: 3GPP Evolved Packet System and 
Femtocell Technologies 
3GPP has recently completed the first release of the Evolved Packet System (EPS), which 
comprises the next-generation radio access LTE and Evolved Packet Core (EPC). Although 
optimized towards LTE, the EPC enables operators to accommodate also legacy 3GPP radio 
access technologies (namely 2G and 3G) as well as non-3GPP radio access technologies (such as 
HRPD, WiMAX and WLAN).  Following a short historic retrospect of its development, 
beginning with the initial goals and visions, this talk will provide an overview of the now 
standardized Evolved Packet Core, and its capabilities and operation.  The talk will focus on the 
open issues as well as the ongoing and future work, such as the problem of route optimization, 
per-flow mobility management, and advanced policy control. Finally, the talk will look at the 
prospects of upcoming Femto Technologies, and report on current and future research activities in 
this area. 
(e.g., Group, Freeway, Manhattan). Focus is given to two main questions: Why and how does 
mobility affect routing performance? The second part of the tutorial utilizes extensive 
measurements of existing wireless networks (mainly WLANs and Bluetooth) to establish a more 
realistic set of mobility models based on time-varying communities (TVC). Insight established 
from the analysis is utilized to design a new efficient communication paradigm called 
‘profile-cast’ for mobile social networks. Various tools for mobility modeling and simulation are 
also referenced and discussed.  
 
IWCMC2009 會議議程 
4 
 
 
Bamberg 大學參訪邀請函 
6 
 
 
Bamberg 大學參訪一(左側至右：Bamberg 大學副校長 Dr Paul Bellendorf、屏科大童曉儒教授、Bamberg 大學
校長 President Dr Godehard Ruppert、高醫大余遠澤助理教授、Barbara Beckett) 
 
雙方簽訂 MOU(Bamberg 大學校長 President Dr Godehard Ruppert) 
 
8 
 
ATCP+: An Adaptive TCP-Trunking Flow Control Scheme for Video Streaming 
Yuan-Tse Yu and Sheau-Ru Tong  
Dept. of Medical Information Management, Koahsiung Medical University, 
Dept. of Management Information System, National Pingtung University of Science and Technology 
yuyt@kmu.edu.tw, srtong@mail.npust.edu.tw 
 
Abstract — Video streaming has been challenged by the 
best-effort service provided by the Internet. It is known that 
temporary traffic congestion may trigger the “traffic 
sawtooth” phenomenon of TCP and makes it inefficient in 
offering stable high-bandwidth transmission for video 
streaming. To address this issue, this paper proposes a 
segment-based flow control, called the adaptive TCP 
trunking (ATCP+). In principle, a video is transmitted in 
terms of a sequence of video segments. Each segment is then 
equally divided into several sub-segments and transmitted 
over distinct TCP connections in parallel. The size of 
sub-segment (or the number of TCP connections) is 
dynamically adaptive to the network conditions with the 
objective of stabilizing link throughput for a video stream. 
We implement ATCP+ with the HTTP 1.1 protocol. Practical 
experiments indicate that the proposed scheme is able to 
achieve a stable link throughput (e.g., 1.5Mbps) for a video 
stream under various network conditions.  
The proposed mechanism is based on the TCP 
communication protocol [6], and transmits video streams 
using the Byte Ranges method of the HTTP protocol, which 
segments video files into coarse-grained segments for 
streaming transmission. Figure 1 displays the concept of 
adopting each segment as the transmission unit. The total 
transmission time is divided into T time periods, each long 
enough to accommodate a fixed segment length. The 
required transmission throughput of video playback is 
determined as the fixed segment length divided by the time T. 
Therefore, in normal conditions, transmission of each 
segment has to finish in time period T, so that the next 
segment can transmit successfully. However, if the network 
is congested, and the segment cannot finish transmitting in 
the time period T, then the total transmitting time of Tsegment 
is longer than time period T, as shown in Figure 1(b), 
causing delays of the video playback. This delay of video 
playback between the web server and the client is solved by 
the flow control. 
 
Keywords: Internet video streaming, video flow control, 
multi-thread download. 
 
I. INTRODUCTION 
The continuous growth of the Internet connectivity and 
bandwidth enables widespread deployments of video-based 
web services (e.g., YuTube). The HTTP protocol used by 
web service has become one of the most popular and 
important application protocols. HTTP is based on TCP. TCP 
is an end-to-end reliable and connection-oriented transport 
protocol. It is equipped with the retransmission function to 
recover lost packets. However, TCP shows the “traffic 
sawtooth” phenomenon that makes it inefficient in offering 
stable high-bandwidth transmission for video streaming. 
That is, if network congestion occurs, the TCP congestion 
control mechanism (based on the AIMD (Additive Increase 
Multiplicative Decrease) algorithm), will reduce the link 
throughput into half. Couple times of reductions will restrict 
the throughput to an unacceptable level. When the 
congestion disappears, it will take some times to restore the 
throughput back to a desired level. 
Figure 1: Downloading states (a) without network 
congestion (b) with network congestion 
This study presents the Adaptive TCP-Trunking Flow 
Control (ATCP+) algorithm, which is built with the segment 
streaming transmission and the Multi-Thread Download 
[1][2]. The effect of network congestion on the maximum 
throughput at different segment sizes is also investigated in 
order to determine the range of appropriate segment sizes 
over the Internet. If the network congestion prevents the 
transmission from reaching the target throughput at any 
segment size, then the number of HTTP sessions is raised to 
reach the required transmission throughput and solve the 
delay problem [3]. Finally, experiment results indicate that 
the ATCP+ algorithm can not only archive the steady 
transmitting rate, but can also reduce the delay of video 
playback and to reach the expected transmission throughput 
for video streaming. 
Some TCP-friendly mechanisms have been proposed (e.g., 
TCP-Friendly [4][7], TFRC [1]). They intend to provide rate 
control for the UDP traffic to harmonically coexist with the 
TCP traffics and avoid congestion. However, these schemes 
normally provide no guarantee on throughput. Moreover, it 
will take a long way for the Internet community to agree 
upon these schemes. Currently, many ISPs still enforce rigid 
restrictions on the UDP traffic. 
server must shorter than the time necessary to play a 
segment Tstream from the user end, to prevent delay in film 
playing. 
 
Figure 4: Delay situation caused in segment transmission 
In Figure 5, the basic principle of ATCP+ algorithm is to 
divide the segment into k sub-segments (sub segment, L) 
such that the downloading time of each sub-segment is 
shorter than Tstream time. The figure indicates that if the 
network is congested when the first segment is downloaded, 
then ATCP+ divides the segment into three sub-segments to 
perform the video streaming. The network is still in 
congestion situation when the second segment is transmitted. 
Therefore, the ATCP+ algorithm continues to transmit in 
three sub-segments. However, the network condition 
improves while transmitting the third segment. Therefore, 
ATCP+ performs video streaming in two sub-segments, 
rather than three, at this stage. Since Internet traffic is 
flowing well when the fifth segment is transmitted, the data 
are transitted in a single segment, thus meeting the target 
transmission throughput. 
The standard for adjusting k is based on two thresholds, as 
shown in Fig. 6. These thresholds are 80% of the upper part 
(H1) Tstream and 90% of the lower bound (H2) Tstream.  If the 
downloading time of Tsegment finishes downloading before the 
upper bound, then the network throughput is larger than the 
video streaming from the client side. In this case, the current 
session has exceeded the target throughput, causing k to fall. 
Therefore, the number of sessions falls, while the 
sub-segment length rises. If the downloading time of Tsegment 
exceeds the lower part, then k rises, thus increasing the 
number of sessions, reducing the capacity of the 
sub-segment, and raising the downloading speed. If the 
sub-segment length reaches the lower bound, which is about 
100Kbytes, then k does not rise. 
Figure 7 shows the flow chart of the ATCP+ algorithm. 
This study assumes that the video streaming transmission 
begins when the network is congested, and that k=10 initially.  
If Tsegment / Tstream is smaller than the upper bound (H1), then 
the network congestion has fallen.  Then, the value of D/k 
is calculated; if it is less than the upper-bound segment 
length, then k is decreased by 1. If Tsegment / Tstream>H2, then 
either the network is congested, or the network transmission 
throughput cannot satisfy the target throughput. If D/k is 
larger than the lower-bound segment length, then k is 
increased by 1 to improve the video streaming bandwidth. 
However, to avoid using too many sessions, this work sets 
the maximum value of k to 10.  
Figure 8 shows the system testing interface of ATCP+, 
which is split into upper and lower sections. The upper 
section is the system stream for ATCP+, and the lower 
section shows the HTTP streaming transmission.  This 
system is split into eight parts, namely ATCP+ parameter 
setting, ATCP+ mechanism setting, ATCP+ information 
setting, ATCP+ message box, ATCP+ Display, ATCP+ 
network flow chart, HTTP streaming Control Button and 
HTTP streaming network flow chart. 
 
≥ 100 KB 1.24 MB  ≥
L  size
} k  (multi-thread download)D (segment)
L  (subsegment)
Web Server
(HTTP /1.1)
coarse-grain segment
Tsegment Tsegment Tsegment
( WAN / HTTP / 1.1 )
Client  player
Tsegment Tsegment Tsegment
Tstream Tstream Tstream Tstream Tstream Tstream
 
Figure 5: ATCP+ algorithm of throughput control (adjusting 
with k value) 
 
Figure 6: Upper bound(H1), Lower bound(H2), and 
sub-segments (L) 
 
Figure 7: Flow chart of ATCP+ Algorithm System 
Implementation 
In Figure 8, d denotes the largest packet size, which is set 
to 65500 bytes, and D indicates the segment length. A 
segment was set to hold up to 20 packets, representing a 
segment length of 1.24Mbytes. The given value is the 
session capacity required to download a segment. The 
Window indicates the test result for average transmission 
throughput over the past few seconds. Tstream denotes the 
times spent playing a segment from the client side. 
Throughput is the target transmission capacity from the 
client side. The time of Tstream is calculated as D/Throughput. 
If the preset throughput from the client side is 1024Kbits/s, 
transmission process from reaching the maximum 
transmission throughput. The segment length of 2.4Mbytes 
was too long. Therefore, TCP congestion control was 
activated to decrease the transmission throughput. The 
resulting transmission throughput was only 1.4Mbps, which 
is less than the target flow of 1.5Mbps.  The transmission 
throughput just reached the expected target with a segment 
length of 1.2Mbytes, which was shown to have the best 
transmission efficiency in the file transmission process. A 
segment took 10 sessions to download at segment lengths of 
0.6Mbytes, 1.2Mbytes and 2.4Mbytes, indicating that the 
network bandwidth capacity had reach its limit, likely 
causing network congestion. 
0
200
400
600
800
1000
1200
1400
1600
1800
1 46 91 136 181 226 271 316 361 406 451 496 541 586 631 676 721 766 811 856 901 946
(1/10 sec)
Kb
its
HTTP steaming
0.6M
1.2M
2.4M
 
Figure 11: The comparison of three different segments and 
HTTP streaming (Foreign network experiment 2) 
0
1
2
3
4
5
6
7
8
9
10
11
1 40 79 118 157 196 235 274 313 352 391 430 469 508 547 586 625 664 703 742 781 820 859 898 937
0.6M
1.2M
2.4M
 
Figure 12: k value comparison of segment transmission 
(Foreign network experiment 2) 
GungSheng Television Station in Taiwan 
The GungSheng Television Station was adopted as the 
testing location. This location had a bandwidth of only 
420Kbps, which is not enough to provide 1Mbps streaming 
transmission throughput. As before, HTTP streaming with 
segment lengths of 0.6Mbytes, 1.2Mbytes and 2.4Mbytes 
was employed to test ATCP+ under the condition of 
insufficient network bandwidth. 
The HTTP streaming and its ATCP+ algorithm did not 
reach the target transmission throughput due to the limitation 
of basic 420 Kbps bandwidth, as indicated in Figs. 13 and 14. 
In this situation, the basic bandwidth is not satisfied, even 
when more session capacity is added to raise the usage rate 
of network bandwidth. The segments took 10 sessions to 
download for all segment lengths. The results reveal that the 
network had reached maximum capacity. The results reveal 
that the network had reached maximum capacity. 
Additionally, the transmission time of HTTP streaming was 
too long, because of the TCP congestion control causing 
unsteady flow.  Segment lengths of 0.6Mbytes and 
1.2Mbytes both achieved steady transmission throughput 
with ATCP+. However, the segment length of 2.4Mbytes 
was too long: TCP congestion control was invoked, causing 
the network transmission throughput to drop.  Small files 
achieved steady transmission throughput under the low 
bandwidth. However, longer segments length led to unsteady 
flow changes caused by TCP congestion control. 
0
50
100
150
200
250
300
350
400
450
1 37 73 109 145 181 217 253 289 325 361 397 433 469 505 541 577 613 649 685 721 757
(1/10 sec)
Kb
its
HTTP steaming
0.6M
1.2M
2.4M
 
Figure 13: The comparison of three different segment 
lengths of 0.6Mbytes, 1.2Mbytes, and 2.4Mbytes for HTTP 
streaming (GungSheng Television Station in Taiwan) 
0
1
2
3
4
5
6
7
8
9
10
11
1 32 63 94 125 156 187 218 249 280 311 342 373 404 435 466 497 528 559 590 621 652 683 714 745
0.6M
1.2M
2.4M
 
Figure 14: k value comparison of segment transmission 
(GungSheng TV Station 1) 
National Pingtung Institute of Commerce (NPIC)  
The National Pingtung Institute of Commerce, which is on 
an academic network with high bandwidth, was the last 
testing location for this experiment. As before, the ATCP+ 
was tested by HTTP streaming and segment lengths of 
0.6Mbytes, 1.2Mbytes and 2.4Mbytes to determine wether it 
achieved the target transmission throughput. 
Experiment 1: Target transmission capacity as 1Mbps. 
0
2000
4000
6000
8000
10000
12000
14000
1 40 79 118 157 196 235 274 313 352 391 430 469 508 547 586 625 664 703 742 781
(1/10 sec)
Kb
its
HTTP steaming
0.6M
1.2M
2.4M
 
