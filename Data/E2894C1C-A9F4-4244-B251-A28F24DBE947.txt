2 
一、中文摘要 
我國飛航管制（ATC, Air Traffic Control）系
統實務運作上採取階層式的人力監控，航管執
行單位自高至低區分為台北區管中心（TACC, 
Taipei Area Control Center ） 、 近 場 台
（ TRACON, Terminal Radar Approach 
Control）及塔台（Tower）三階層 ，三者共
同構成缺一不可的航管體系，而其各有轄管空
域範圍，經由三者之相互協調及交接傳遞管
制，執行航機在各終端空域的飛航導引工作。 
本計畫以國內航線－北高航線為例，說明國內
航管執行單位協調管制之現況。就飛航於台北
－高雄航線之航機而言，主要可區分為七階
段：飛航前、起飛、離場、巡航、下降、近場、
降落滑行。 
以上流程由區管中心、近場台及塔台三者，遵
循規定的飛航管制流程，運用雷達、通訊及導
航等航管設備，相互協調及交接傳遞管制，以
提供航機連續不斷之航管服務。 
本計畫主要目標為飛航管制流程的塑模與分
析，因此採用彩色派屈網路（CPN, Coloured 
Petri Nets）及事件追蹤圖（MSC, Message 
Sequence Chart）做為塑模工具並利用派屈網
路現有的理論做為性能分析的基礎。 
關鍵詞：飛航管制、派屈網路、事件追蹤圖。 
 
Abstract 
The operation of air traffic control (ATC) 
systems adopts hierarchical manpower 
monitoring in Taiwan. Considering the 
Domestic Taipei Airport, the ATC consists of 
three levels: Taipei Area Control Center 
(TACC), Terminal Radar Approach Control 
(TRACON) and Tower. The primary function of 
the ATC is to coordinate equipment, i.e., TACC, 
TRACON and Tower, within a traveling route to 
perform a sequence of interactive 
communication required by an aircraft (AC). 
A practical example is submitted to interpret the 
operation of ATC how to work. The example 
shows that the interactive messages during an 
aircraft is taking off from Taipei airport and 
landing on Kaohsiung airport. Precisely, the 
complicated processes include seven steps: 
preflight, taking off, departure, en-route, descent, 
approach and landing. 
In this research, the air traffic control (ATC) 
procedures are modeled and analyzed using 
Coloured Petri nets and Message Sequence 
Chart (MSC). Based on the two modeling skills, 
the relations between transitions and events of 
ATC are easily to present. And its performance 
will be checked by the theory of Coloured Petri 
nets. 
Keywords: Petri net, air traffic control, message 
sequence chart. 
二、前言 
就目前學術研究中，派屈網路已被驗證為
強而有力的塑模與分析工具，可應用於系統的
模式建構、分析與模擬，對於描述系統的同步
性（Synchronous）、同時性（Concurrent）及
即時性（Real-time）的動態行為甚為方便，並
且可探討系統狀態或條件（Condition）與激發
事件（Event）間之關係。國內外在這方面主
要的研究主題非常廣泛，而目前將派屈網路應
用在飛航管理的研究範疇中並不多見，且目前
尚停留在對航機在機場跑道滑行及起降之性
能評估進行塑模的研究，就其研究的內容而
言，並未能真正落實於航管系統的環境中，申
請人發現其主要的原因在於航管流程的變數
太多，難於掌握所有細節。為改善此一研究窘
境，申請人將應用時間性彩色派屈網路作為航
管系統塑模工具。 
然而對於飛航而言，模擬一個具有延遲和
延滯的時間行為是非常重要的一環，而彩色派
屈網路的延伸-時間則提供了一個可用來敘述
航管流程呈現在時域的方法。另外飛航管制流
4 
近場管制台(TRACON)作業重點在於提
供航機到場下降及離場爬升之飛航管制服
務，主要負責引導到場航機至攔截該進場程序
最後進場航道，並保持前後到場航機間之隔
離，主要管制方式為雷達(Radar)或人工管制
(Manual control)隔離。每一近場台的空域被劃
分為數個被稱為分區(Sector)的小區域，每個
分區(Sector)皆由該近場台內分配的管制人員
獨立管制，所以一個近場台可同時管制來自不
同機場的航機。而其管制空域範圍的大小，乃
是由其所在位置及所服務機場的大小和數量
來決定。 區域管制中心(ARTCC)亦稱航路管
制，負責對飛航情報區管制空域內依儀器飛航
計劃飛行之航機提供航路服務，並與各鄰區區
域管制中心協調交接管制航機，以確保航路上
航機飛行安全。 
而航機從起飛到降落的飛航過程中皆會遵循
一個相似的飛航模式(Flight Pattern)，這樣的
一 個 飛 航 模 式 被 稱 為 飛 航 輪 廓 (Flight 
Profile)。商用民航機的典型飛航輪廓包含了七
個飛航階段(Stage)（如圖三），而將以此七個
階段作為本論文飛航輪廓(Flight Profile)的描
述。 
 
圖三：航機飛航歷程 
此七個階段概述如下： (1) 飛航前
(Preflight)： 飛機在地面時，先向機場許可頒
發(Clearance Delivery)請求飛航計畫的許可，
再接受機場地面管制席(Ground)的指示將航
機由航空站登機門後推(Pushes Back)並滑行
到跑道旁待命起飛。(2)起飛(Takeoff)：航機接
著向機場管制席(Local)請求起飛，塔台轉而詢
問近場台是否可起飛，此時塔台與近場台協調
出一時間帶(Time-Slot)供航機進行起飛。(3)
離場(Departure)：當航機爬升至4000呎之前，
塔台與近場台需完成交接傳遞管制(Handoff 
Control)，在低於2萬呎以下之高度皆由近場台
負責。當航機之飛航高度繼續爬升超過2萬呎
以上時，或是到沒有近場台覆蓋的區域，近場
台將航機交接給區管中心，若飛航高度一直保
持在2萬呎以上（即使已進入其他終端空域之
垂直上空），仍由區管中心負責航管之工作。
但若航機巡航高度未超過2萬呎，當距進入次
一終端空域5分鐘前，原近場台需將航機完成
交接至次一近場台。（4）巡航(En Route)： 在
此階段航機將保持一定高度及航向的飛行，其
飛行時間短到可能只有幾分鐘或長到須數小
時。 (5) 下降 (Descent) ：當航機接近終端
(Terminal)時，將接收到降落及改變航向的命
令，此時航機開始降落並靈活操作以航向目的
地。(6)近場(Approach)： 航機接收到近場台
管制員的近場許可，並與其它準備降落在同一
機場的航機安置在一起，以依序降落在同一跑
道上，為了安全和秩序，近場管制負有航機隔
離(Separation)和排序(Sequencing)的責任。 當
航機降落至規定高度前，近場台與塔台完成交
接傳遞管制。(7)降落滑行(Landing): 航機得到
機場管制(Local)的降落許可，並降落在指定的
跑道。當航機著地後，機場管制(Local)與地面
管制(Ground)完成交接傳遞管制，此時地面管
制(Ground)將引導航機滑行至航空站之登機
門。為了獲得一個相對簡單的飛航管制系統模
型，以作為模擬及動態分析的目的，並作以下
的假設： 
1. 氣候的因素不予考量。 
2. 無機尾擾流的問題，因此不考慮機尾擾流
隔離。 
3. 僅適用基本的飛航管制法規。 
4. 為簡化飛行時間的計算，將飛行時間區分
成兩部分，第一部分為由航機後推至跑道
頭待命起飛所花費的時間，該時間以標記
PT表示，並設計在飛航管制系統模型中之
飛航階段TCR；第二部分為航機起飛至降
落滑行到登機門止所花費的時間，該時間
以標記TL表示，並設計在模型中之飛航階
6 
變遷T55)，藉以進行管制程序實施評估(即站
區P58)。若評估之結果仍發現持續擁塞中(即
變遷T56)，則修正管制策略(即站區P59)，並
將修正之策略頒佈給各單位(即變遷T57)，此
時各單位再重新進行管制程序之操作(即站區
P56和 P55)，而近場台除了進行新管制程序之
操作外，將再準備資料擷取(即站區P57)，再
一次進行重新評估管制程序實施之情形。若評
估之結果發現擁塞已不復存在時 (即變遷
T58)，則頒佈終止流量管制實施之命令與各單
位(即站區P510和 P55)，最後管制單位完成流
量管制(即變遷T59)，而航機又回復正常下降
之操作(即站區AC_6)。 
 
表一 DCR 次模型之 Place 與 Transition 說明 
Place Transition Interpretation 
 DCR Descent Clearance Request 
(DCR) 
P51  Waiting for DCR Reply 
P52  DCR Checking 
 T51 DCR Not Approved 
AC_5  Monitoring 
(TRACON)(Airborne 
Holding) 
 DCR Re-DCR Request 
 T52 DCR Approved 
P53  Descent and Monitoring 
(TRACON) 
 T53_1 Congestion Not Detected 
AC_6  Descent and Monitoring 
 T53 Congestion Detected 
P54  Making Flow Management 
Decision 
 T54 Start Flow Management 
(Tower, TRACON,TACC) 
P55  Airborne Holding 
P56  Flow Management Monitoring 
(Tower, TRACON,TACC) 
P57  Making Flow Data Fetch 
 T55 Start Fetch Flow Data 
P58  Assessment 
 T56 Detected Congestion Still or 
Worse 
P59  Revise Strategy 
 T57 Re-Airborne Holding 
Command and Revised Flow 
Management Opinion 
P55  Re –Airborne Holding 
P56  Re-Flow Management 
Monitoring (Tower, 
TRACON,TACC) 
P57  Re-Making Flow Data Fetch 
 T55 Re-Fetch Flow Data 
 T58 Detected Congestion Solved 
P510  Prepare Stop Flow 
Management (AC, Tower, 
TRACON,TACC) 
 T59 Finish Flow Management 
(Tower, TRACON, TACC) 
AC_6  Re-Descent and Monitoring 
 
接著將 DCR 次系統以場景圖來塑模，所建構
的場景圖模型如圖五所示，說明如下： 
(1)當航機航行至終端管制區管制空域，接收
到 TRACON 為 資 源 可 供 利 用 狀 態 ( 即
available)，航機傳送事件訊息 DCR(DCR 
Request)至 TRACON，提出飛航高度下降許可
請求(DCR, Descent Clearances Request)。隨後
TRACON 傳送訊息通知航機進入 P51(Waiting 
for DCR Reply)的狀態，並傳送 P52（DCR 
Checking）的訊息至航機 
(2) 當 TRACON 完成 DCR Checking，若不同
意航機高度下降，即傳送事件訊息 T51(DCR 
Not Approved)，航機即回復到巡航(En-Route)
狀態，然後再重新提出 DCR 請求，並重覆項
次(1)的航管程序，若允許航機高度下降，即
傳送事件訊息 T52(DCR Approved)，航機即降
低飛行高度。當航機降低飛行高度，TRACON
即 傳 送 狀 態 訊 息 P53(Decent and 
Monitoring)，宣告管制該航機飛航高度降低。 
(3) 接著近場台評估流量狀況，若評估結果為
流量正常，則 TRACON 傳送事件訊息
T53_1(Congestion Not Detected)及狀態訊息
AC_6(Decent and Monitoring)，航機即降低飛
行高度。若評估結果空域流量擁塞，TRACON
即傳送事件訊息 T53 (Congestion Detected)。 
(4) 當近場台評估結果空域流量擁塞，則
TRACON 傳送事件訊息 T53 後，即進行流量
管 制 決 策 之 擬 定 ， 系 統 狀 態 即 進 入
P54(Making Flow Management Decision)。此時
系統中 Tower、TRACON 及 ARTCC 傳送事件
訊息 T54(Start Flow Management)，及狀態訊
息 P55(Airborne Holding)，航機即盤旋待命。  
(5) 接著系統準備執行流量管制及流量資料
擷 取 ， 並 傳 送 系 統 狀 態 訊 息 P56(Flow 
Management Monitoring) 及 狀 態 訊 息
P57(Making Flow Data Fetch)，然後開始擷取
即時之空域流量資料，並傳送狀態訊息
T55(Start Fetch Flow Data)，系統狀態即進入
P58(Assessment)。 
(6) 若偵測結果仍然擁塞或擁塞狀況更嚴
重，TRACON 即傳送事件訊息 T56(Detected 
Congestion Still or Worse)。近場台即進行管制
策略修訂，並傳送系統狀態訊息 P59(Revised 
Strategies)，接著近場台頒佈修訂意見及空中
等待命令，而 Tower、TRACON 及 ARTCC 傳
送 事 件 訊 息 T57(Re-Airborne Holding 
Command and Revised Flow Management 
Opinion)，此時系統又再次進入流量管制及流
8 
並產生惟一的限制元素 b6 = (T54, <i = 1, x = 
a, j = 0>)。當 b6 發生，將獲得一個限制元素
b7= (T55, <i = 1, x = a, j = 0>)。當 b7 發生，
此時則有二個可激發的限制元素 b8 = (T56, <i 
= 1, x = a, j = 0>)和 b9 = (T58, <i = 1, x = a, j 
= 0>)，而 b8 和 b9 發生的順序則為隨機的。
假如 b8 先發生，則之後的發生序列將會重複
循環，說明如下：當 b8 發生後，則獲得惟一
的限制元素 b10 = (T57, <i = 1, x = a, j = 0>)；
當 b10 發生後，則產生惟一的限制元素 b11 = 
(T55, <i = 1, x = a, j = 0>)，此時標記狀態進入
先前之 b8 狀態，因此將開始重複循環。若為
b9 先發生，將產生僅有一個可激發限制元素
b12 = (T59, <i = 1, x = a, j = 0>)的標記狀態。
當 b12 發生，則標記將轉移至站區 AC_6，它
代表航機將進入下一個飛航階段 APP。 
圖六 飛航階段DCR彩色派屈網路模型 
四、計畫成果自評 
本計畫模型係由CPN tools模擬，模擬目的在
於測試航機從後推至降落滑行到目的地所花
費的飛行時間，並以實際之台北至高雄的飛機
時刻表驗證。其結果分別說如下： 
航機未遭遇飛航管制單位不同意的情況：在此
情況代表航機均未遭遇到後推、起飛不允許或
流量管制等問題，因此在 HTCPN 模型內未設
定延遲時間 D，因此航機依其排定時間起飛
後，則依照其所耗費時間到達目的地，所以最
後模擬的結果與表實際之台北至高雄的飛機
時刻表符合。 
本計畫以 HTCPN 模擬飛航管制流程，對於事
件移轉的同時性及同步性均能精確的描述。並
與派屈網路模型比較，發現 HTCPN 較派屈網
路模型具有以下優點： 
一、 將時間因素納入考量：飛航過程中，有
關時間的考量是非常重要的，例如航機的派遣
時間與飛航過程是否有延遲等，而在本論文除
考量正常飛航時間外，對於可能造成飛航延遲
的時間因素亦納入考量。 
二、各航機於飛航過程能作判別：本計畫藉由
TCPN 標記有其專有屬性的性質，得以將各航
機作一區別，縱使航機在飛航過程之狀態移
轉，可能遭遇流量管制、飛行延遲等情況，依
然可以利用標記所設定的相關參數，觀察不同
航機的時間變化情形，此為派屈網路模型所無
法模擬的。 
三、飛航管制流程模型易判讀：本計畫以飛航
七階段作為飛航輪廓的描述，並將航管流程納
入各階段中，而以 HTCPN 完成塑模。藉由
HTCPN 層級方法，可以將航管流程模型分別
以主模型及七個次要模型表示，相較於派屈網
路僅能一個大型的的航管模型表示，HTCPN
模型顯得容易判讀。所以 HTCPN 非常適用於
龐大且複雜系統的塑模。此外，本計劃部分成
果即將發表在國際期刊論文如下： 
Yi-Sheng Huang and Ta-Hsiang Chung, 
“Modeling and Analysis of Air Traffic Control 
Systems Using Hierarchical Timed 
Coloured Petri Nets,” To be appeared in 
Transactions of the Institute of Measurement 
and Control 31, 00 (2009) pp. 1–20. 
 
參考文獻 
ATMS. 2007: Air traffic management system, at URL: 
http://virtualskies.arc.nasa.gov/main/matm.html. 
Freudenrich, C.C. 2001: How air traffic control works, at URL: 
http://travel.howstuffworks.com/air-traffic-control1.htm. 
CPNTOOL. 2007: Computer tool for coloured Petri nets, a tool 
package for analysis of coloured Petri nets, version 2.20, at 
URL:http://wiki.daimi.au.dk/cpntools/cpntools. wiki, Computer 
Tool for Coloured Petri Nets. 
Gao, F., Li, F., Bao, S. and Tian, H.g. 2006: Analysis and 
simulation of air traffic control conflict. International 
Conference on Radar. Shanghai, China, 1–4. 
Glover, W. and Lygeros, J. 2004: A stochastic hybrid model for 
air traffic control simulation. Lecture Notes in Computer Science, 
372–86. 
Ho, Y.C. 1992: Discrete event dynamic systems. IEEE Press. 
Huang, Y.S. 2007: Deadlock prevention for flexible 
manufacturing systems in sequence resource allocation Systems. 
[Ver: A3B2WIN8.07r/W-Standard] [9.3.2009–5:36pm] [1–20]
FIRST PROOFS (TIM)
Paper: TIM 095623 SAGE
Modelling and analysis of air traffic
control systems using hierarchical
timed coloured Petri nets
Yi-Sheng Huang1 and Ta-Hsiang Chung2
1Department of Electrical and Electronic Engineering, Chung Cheng Institute
of Technology, National Defense University, Taoyuan 335, Taiwan, R.O.C.
2School of Defense Science, Chung Cheng Institute of Technology, National
Defense University, Taoyuan 335, Taiwan, R.O.C.
Hierarchical timed coloured Petri net (HTCPN) models have been utilized as a visual forma-
lism for the modelling of complex reactive systems. They brighten the features on describing
properties of causality, concurrency and synchronization. This paper focuses on the use
of HTCPNs to model and analyse a dynamic procedure of an air traffic control (ATC) system.
The advantage of the proposed approach is the clear presentation of the aircraft behaviour in
terms of conditions and events. To our knowledge, this is the first work that employs HTCPNs
to obtain models of ATC systems.
Key words: air traffic control; hierarchical systems; Petri nets.
1. Introduction
With the growth of air travel throughout the world, the numbers of aircraft that have
been increasing rapidly have to share airspace and airports without conflict.
In addition, there is a great deal of hardware on board and on the ground, together
with complex control laws, and aircraft with limited information about each other’s
behaviour, all having to meet unexpected weather and other interruptions. Without
enhanced automation in the form of computer aids and information displays, the
Address for correspondence: Yi-Sheng Huang, Department of Electrical and Electronic Engineering,
Chung Cheng Institute of Technology, National Defense University, Taoyuan 335, Taiwan, R.O.C.
E-mail: yshuang@ndu.edu.tw
Figures 1–3 appear in colour online: http://tim.sagepub.com
Transactions of the Institute of Measurement and Control 31, 00 (2009) pp. 1–20
 2009 The Institute of Measurement and Control 10.1177/0142331208095623
[Ver: A3B2WIN8.07r/W-Standard] [9.3.2009–5:36pm] [1–20]
FIRST PROOFS (TIM)
Paper: TIM 095623 SAGE
Kahne and Frolow (1996) depicted that the more recent modelling and analysis of
discrete event dynamic systems applied in ATC are more relevant. Moreover, Kahne
(2000) predicts that ‘the relatively recent formalization of concepts of discrete event
systems (DESs) originated by Ho (1992) may well lead to more powerful analysis
techniques suited to ATC analysis’. Recently, ATM has been accomplished using PNs.
For example, the application of dynamically coloured PNs (DCPNs) for runways has
been proposed by Shortle et al. (2004). A timed stochastic coloured PN (CPN) model of
a single runway is presented by Kovacs et al. (2005). The timed PNs are utilized to
model the aircraft ground operation at the airport (Liu and Qin, 2006).
According to the ATC procedure (ie, presented by IIIT, 1999), the PN model is
proposed by Lin (2006). It describes the interaction between ATC controllers and
aircraft in a typical flight pattern. Although the synchrony and concurrence of event
transitions could be observed, there are some flaws: (1) temporal behaviour is not
considered; (2) the aircraft are not distinguishable; and (3) the PN model is hard to
understand for regular readers.
As mentioned above, the PN is limited for solving the problems of ATC systems.
The development of hierarchical timed CPNs (HTCPNs) helps the users to overcome
these drawbacks. The main proposal of this paper is to develop a simple ATC
procedure model by HTCPNs. The rest of the paper is organized as follows: Section 2
introduces the basic definitions of CPNs. Section 3 describes a system of ATC. Section 4
presents a HTCPN model and Section 5 provides the analysis of the model. Finally,
some conclusions are given in Section 6.
2. Basic definitions of CPN
In this section, the authors introduce the definitions of the CPNs and timed CPNs and
the basic concepts of hierarchy, presented here in a compact way and following the original
definitions (Jensen, 1995, 1997). Firstly, the definitions of CPNs are described as follows:
Definition 1.
CPN ¼ ð,P,T,A,N,C,G,E, IÞ ð1Þ
satisfying the following requirements:  is a finite set of non-empty types, called
colour sets; P is a finite set of places; T is a finite set of transitions; A is a finite set of arcs
such that P\T¼P\A¼T\A¼; N: A!PT[TP is a node function; C: P! is a
colour function; G is a guard function, is defined from T into expressions such that
8t 2 T: [Type(G(t))¼Bool ^ Type(Var(G(t)))  ]; E is an arc function. It is defined from
A into expressions such that 8 a 2 A: [Type(E(a))¼C(p(s))MS ^ Type(Var(E(a)))  ]
where p(a) is the place of N(a), and CMS denotes the set of all multi-sets over C; I is an
initialization function. It is defined from P into expressions such that
8p 2 P : ½TypeðINðpÞÞ ¼ CðpðsÞÞMS ^ VarðINðpÞÞ ¼ 
Huang and Chung 3
[Ver: A3B2WIN8.07r/W-Standard] [9.3.2009–5:36pm] [1–20]
FIRST PROOFS (TIM)
Paper: TIM 095623 SAGE
controllers: (1) flight data controller; (2) clearance delivery controller; (3) ground
controller; and (4) local controller. It is worth noting that the local controller (tower)
determines the spacing and separation of both departing and landing aircraft. The wing
tip vortices and safe separation are extremely important to the pilots of these aircraft.
3.2 TRACON
TRACON handles departing and approaching aircraft within its space. More
precisely, TRACON facilities containing radar operations from which air traffic
controllers direct aircraft during the departure, descent and approach phases of flight.
Usually, a state airspace is divided into zones, and each zone is divided into sectors.
Each sector is assigned to an individual air traffic controller who works in the
TRACON facility. One TRACON can handle the air traffic for several different airports
in its sector. The airspace of a TRACON has various dimensions depending upon its
location, and the size and number of airports it serves.
3.3 ARTCC
ARTCCs, usually referred to as ‘centres’, are established primarily to provide air
traffic service to aircraft operating on Instrument Flight Rules (IFR) flight plans within
the controlled airspace, and principally during the en route phase of flight.
3.4 A flight profile
Every aircraft that flies follows a similar flight pattern that begins before take-off and
ends after landing. This pattern is called a flight profile. A typical commercial flight
profile has seven phases (ATMS, 2007; Freudenrich, 2001) and it is shown in Figure 1.
Each phase of a typical flight profile is monitored by an ATC facility with its
own group of controllers. They monitor the flight using special equipment and
decision support tools (computers, ie, ATC systems) that ensure a safe and efficient
flight. A typical sequence of interactions between the ATC controllers and aircraft is
shown in Figure 2.
The seven phases are described as follows.
(1) Preflight: The pilot receives the most recent weather information and a flight plan has
been filed. Prior to take-off, the pilot performs the flight check routine, pushes back
the aircraft from the terminal’s gate, and taxis out to the designated take-off runway.
(2) Take-off: The pilot receives permission from tower to take-off. The aircraft powers up
and begins its take-off roll. Although the take-off clearance itself is issued by a tower
controller, it often must be released by the departure TRACON.
(3) Departure: Upon lift off, the pilot is instructed to change radio frequencies to receive
new flight instructions from departure control in the TRACON. The pilot is then issued
further altitude and routing clearance. As the aircraft reaches the edge of the TRACON
Huang and Chung 5
[Ver: A3B2WIN8.07r/W-Standard] [9.3.2009–5:36pm] [1–20]
FIRST PROOFS (TIM)
Paper: TIM 095623 SAGE
(6) Approach: The pilot has received an approach clearance to the destination airport from
the approach controller working in the TRACON. The flight has been placed in line
with other aircraft preparing to land at the same airport. The pilot flies a specified
flight procedure in order to get in line for the designated landing runway. The pilot
receives instructions from the approach controller to change radio frequency and
contact local control (in the airport’s control tower) for landing clearance. The aircraft
is electronically handed off from TRACON to the tower.
(7) Landing: The pilot receives clearance from the local controller in the airport’s control
tower to land on a designated runway. Upon touching down, the flight is then handed
off to ground control. The ground controller directs the pilot across the taxiways to its
destination gate at the terminal. It is this entire network of controllers and facilities that
monitor and direct the air traffic through the airspace. A detailed description of airport
ATC, including surface movement, is provided by ATMS (2007).
3.5 Rules and assumptions
In order to obtain a relatively simple model for simulation and dynamic analysis
purposes, the ATC procedure refers to the procedure proposed by IIIT (1999) and the
following modelling assumptions are made:
 Weather is not considered directly.
 No wake turbulence, therefore no wake turbulence separation is taken into account.
 Only basic ATC laws are applied.
 There is only one aircraft taking off or landing in the runway, for safety.
 The airplane flying time is divided into two parts for simplification. The first part
measures the aircraft from take-off until landing, modelled in phase Phase_RCR.
Especially, a notation TL represents the first part in this sub-model. The second part
measures the aircraft from pushback until take-off, designed in the phase Phase_TCR.
A notation PT is used to describe the time in the Phase_TCR sub-model. Both of the times
are measuring from a real situation (ie, introduced in 5.3) and set at D minutes.
 The delay time, ie, the airborne holding comes from the request denied by the
controllers.
4. HTCPN model
It is more important to model the temporal behaviour that includes delay and
duration for a flight. The timed CPN (Jensen, 1995) provides a probability of
interpreting the dynamic properties of an ATC system in time and space. It is worth
noting that the ATC procedure system is composed of seven phases, and each phase
describes an individual control between ATC controllers and aircraft. Hence, the ATC
system is a suitable illustration by way of a hierarchy model. The presentation of the
hierarchical CPN (Jensen, 1997) helps the designer to construct a large model by
combining a number of small CPNs. Therefore, the authors apply the hierarchical
CPN with time to model the ATC system in this paper.
Huang and Chung 7
[Ver: A3B2WIN8.07r/W-Standard] [9.3.2009–5:36pm] [1–20]
FIRST PROOFS (TIM)
Paper: TIM 095623 SAGE
take-off or landing state. The key point is that there is only one token in places Tower_A2
and TRACON_B6. Once the token in Tower_A2/TRACON_B6 and the token in AC_2/
AC_6 are removed, the substitution transition TCR/APP changes to an unenabled
binding element. Consequently, the tokens deposited in AC_2/AC_6 could not be moved.
This means that the next aircraft should be queued until an aircraft has completed the
action of take-off/landing. Then the token is removed to PC1/PC2 from substitution
transition DEP/LAN. Finally, the token is removed to Tower_A2/TRACON_B6 from PC1/
PC2. As a result, the next aircraft is allowed to enter Phase_TCR/Phase_APP.
4.2 The sub models
According to the main model, seven sub-models, which represent the seven phases of
the flight profile, are shown in Figures 4–10. Note that the three places Tower_rs,
TRACON_rs and ARTCC_rs have one common parameter with two parts (ie, rs). The
first part r represents the tower, TRACON or ARTCC, located at A or B. The following
part s means the tower, TRACON or ARTCC controlling the airplane in one of the
seven phases. The physical meaning of the others places and transitions are
interpreted in the Appendix Table A1. It is worth noting that an arc expression TL
is located between transition T41 and place P43 in the sub-model Phase_RCR, and an
arc expression PT is presented between transition T24 and place AC_3 in the sub-
model Phase_TCR. The delay time can be happen in the four phases Phase_PCR,
Phase_TCR, Phase_DCR and Phase_APP. The model of the delay time D is designed as
follows: (1) in phase Phase_PCR, the delay time D is modelled between transition T11
and place AC_1; (2) in phase Phase_TCR, it is modelled between transition T22 and
place AC_2; (3) in phase Phase_DCR, one is shown between transition T51 and place
AC_5 and the other is presented between transition T56 and place P59; and (4) in
phase Phase_APP, it is modelled between transition T61 and place AC_6.
AC_1 PCR P11 T12 AC_2
T11
P12
Tower_A1
(i,x,j)
(i,x,j)
(i,x,j+1)@+D
(i,x,j)
(i,x,j)(i,x,j)(i,x,j)(i,x,j) (i,x,j)
1`e
e
Figure 4 The sub-model of phase Phase_PCR
Huang and Chung 9
[Ver: A3B2WIN8.07r/W-Standard] [9.3.2009–5:36pm] [1–20]
FIRST PROOFS (TIM)
Paper: TIM 095623 SAGE
waits for a reply from TRACON (ie, place P51). At the meantime, the TRACON is
checking the air flow (ie, place P52). If the request is approved (ie, transition T52), the
aircraft should be allowed to descend and the aircraft should be monitored by the
TRACON (ie, place P53). If the request is not approved (ie, transition T51), the aircraft
should be held (ie, place AC_5) and a re-request should be sent by the aircraft
(ie, transition DCR).
It is interesting that there are two possible situations. One is that the TRACON does
not detect the situations of the air congestion (ie, transition T53_1) and the airplane
descending (ie, place AC_6). The other is that air congestion is detected by the
TRACON (ie, transition T53). This latter case might cause a flow management
decision to be made (ie, place P54). In the meantime, the TRACON, tower and ARTCC
start to carry out the current airborne capacity control procedure (ie, place P56) and
the aircraft flies in airborne circles (ie, place P55). At the same time, the TRACON
AC_4 RCR P41
P42
T41
T42
P43
P44
TRACON_A4
T43 P45
ARTCC_A4
T45 AC_5
T44 P46
TRACON_B4
1`e
1`e 1`e
e
e
e
e
e
e
e
e
(i,x,j)
(i,x,j)
(i,x,j) (i,x,j)
(i,x,j)
(i,x,j)@+TL 
(i,x,j)
(i,x,j)
(i,x,j)
(i,x,j)
(i,x,j) (i,x,j)
(i,x,j)
(i,x,j)
(i,x,j)
(i,x,j)
Figure 7 The sub-model of phase Phase_RCR
AC_5 DCR P51 T52 P53
T51
P52
T53 P54 T54 P55 T59 AC_6
P57
T55
P58
P56 T57 P510
T58
P59
T56
TRACON_B5 ARTCC_A5Tower_B5
(i,x,j)
1`e
e
1`e1`e
ee e e
e
e
e
e
e
e
T53_1
(i,x,j)
(i,x,j)
(i,x,j)(i,x,j) (i,x,j)
(i,x,j)
(i,x,j)
(i,x,j)
(i,x,j)(i,x,j)(i,x,j)
(i,x,j)
(i,x,j)
(i,x,j)
(i,x,j)
(i,x,j)
(i,x,j)
(i,x,j)
(i,x,j)
(i,x,j)
(i,x,j) (i,x,j)
(i,x,j)
(i,x,j)
(i,x,j)
(i,x,j)
(i,x,j)
(i,x,j)(i,x,j+1)@+D
(i,x,j+1)@+D
Figure 8 The sub-model of phase Phase_DCR
Huang and Chung 11
[Ver: A3B2WIN8.07r/W-Standard] [9.3.2009–5:36pm] [1–20]
FIRST PROOFS (TIM)
Paper: TIM 095623 SAGE
controllers carry on the operation of the control procedure again (ie, place P56). Also,
the TRACON starts to determine the current airborne capacity (ie, place P57).
Conversely, if the congestion does not exist (ie, transition T58), the TRACON current
capacity control implementation instruction (ie, places P510 and P55) should be
terminated. Finally, flow management is completed by the controller (ie, transition
T59) and the aircraft is told to re-descend and is monitored (ie, place AC_6).
In this subparagraph, the operations of HTCPN should be introduced as follows.
A token (eg, (1, a, 0)@þ 60) is deposited in place AC_5, hinting that it is dispatched on
behalf of the first flight (ie, i¼ 1) of type a (ie, x¼ a). This aircraft has not encountered the
situation where the ATC controllers give any conflicting instructions (ie, j¼ 0). The
estimation of the aircraft flight time is 60 min. On the other hand, the token stays in
place AC_5; it also shows the flight will soon enter the Phase_DCR phase. Considering
the sub-model of Phase_DCR, there is only one binding element b1¼ (DCR, h i¼ 1, x¼ a,
j¼ 0i) enabled at the time. When b1 occurs, the tokens are removed to places P51, P52
and TRACON_B5 from places AC_5 and TRACON_B5. It is important to point out that
one token always remains at place TRACON_B5. This reveals that the controller
TRACON could concurrently control the aircraft when they are approaching the
Phase_DCR phase. It is worth noting that the operations of the tower and ARTCC are the
same as the TRACON. Next, there are two enabled binding elements b2¼ (T51, hi¼ 1,
x¼ a, j¼ 0i) and b3¼ (T52, hi¼ 1, x¼ a, j¼ 0i). The occurrence of the two enabled
binding elements is random because they are within the same time stamp. Once the b2
occurs, the token is removed to places AC_5 from places P51 and P52. This hints that the
state goes back to the beginning of the Phase_DCR phase. At the same time, the elements
of the token and the time stamps are changed to (1, a, 1)@60þD.
When the b3 occurs, the token is removed to place P53. As a result, there are two
enabled binding elements b4¼ (T53_1, hi¼ 1, x¼ a, j¼ 0i) and b5¼ (T53, hi¼ 1, x¼ a,
j¼ 0i). When the b4 occurs, the token is removed to place AC_6. Once the b5 occurs,
the tokens are removed to places P54 and TRACON_5 from places P53 and
TRACON_5. When the b5 occurs, a new mark, in which b6¼ (T54, hi¼ 1, x¼ a,
j¼ 0i) is the only enabled binding element is reached. When the b6 occurs, one can
find a new mark in which b7¼ (T55, hi¼ 1, x¼ a, j¼ 0i) is the only enabled binding
element. The occurrence of b7 removes the tokens to place P58. There are two enabled
binding elements b8¼ (T56, hi¼ 1, x¼ a, j¼ 0i) and b9¼ (T58, hi¼ 1, x¼ a, j¼ 0i) in the
new mark if b7 is firing. Because the occurrence of the two enabled binding elements is
random, two cases are possible. If b8 occurs first, the sequential occurrence should
enter the repetitive cycles. It hints that the aircraft still stays in the Phase_DCR phase.
The main reason is that only an enabled binding element b10¼ (T57, hi¼ 1, x¼ a, j¼ 1i)
is generated if the b8 is fired. After b10 is fired, an enabled binding element b11¼ (T55,
hi¼ 1, x¼ a, j¼ 10i) is reached. Then the mark goes into a repetitive cycle. If b9 occurs
first, b12¼ (T59, hi¼ 1, x¼ a, j¼ 0i) becomes an enabled binding element. Hence, the
tokens should be removed to place AC_6 as b12 fired. At the meantime, the aircraft
enters Phase_APP phase.
Huang and Chung 13
[Ver: A3B2WIN8.07r/W-Standard] [9.3.2009–5:36pm] [1–20]
FIRST PROOFS (TIM)
Paper: TIM 095623 SAGE
aircraft entering the next phase. Especially, the node N78 (ie, AC_END) represents the
OG returning to the initial node (ie, node NINITAL).
According to the analysis results, it can be concluded that: (1) there are no dead-end
node in the OG, therefore the net is live; (2) the net is reversible. As a result, each node
in the occurring sequence can bring the system to go back to the initial mark.
5.2 Simulation results
The system models are simulated by the CPN tools (CPNTOOL, 2007). The simulation
goal tests the arrival time of an aircraft whose flight undergoes the seven phases. The
flights from Taipei to Kaohsiung are considered. A normal flight whose delay time D
P11, P12AC_1 PCR
N11 N12 N13
AC_2
P21, P22AC_2 TCR
N21 N22 N23
P23, P24 
P21
Phase_PCR
P26
P21
N25 N26
AC_3
P25
P21
TSR
T21
T22
T24
T23
Phase_TCR
P31AC_3 DEP
N31 N32 N33
P32Phase_DEP P34P33 T33
N34 N35 N36
AC_4T31 T32 T34
P41, P42AC_4 RCR
N41 N42 N43
P43Phase_RCR P45P44, P43 T43
N44 N45 N46
P45, P46T41 T42 T44
N47
AC_5T45
P51, P52AC_5 DCR
N51 N51 N53
P53Phase_DCR P55,P56, P57P54
T54
N54 N55 N56
P58
P55, P510
N58 N59
AC_6
P59
T55
T56
T57
T59
T58
T53T52
T51
P61, P62AC_6 DCR
N61 N62 N63
P63Phase_APP AC_7P64 T64
N64 N65
T63T62
T61
P71AC_7 LAN
N71 N72 N73
P72Phase_LAN P75P73, P74 T73
N74 N75
T72T71 P76T75
N76
P77
N77
AC_ENDT54
N78
T74
T77
T76
N24
N57
T53_1
Figure 12 The sub-models OG
Huang and Chung 15
[Ver: A3B2WIN8.07r/W-Standard] [9.3.2009–5:36pm] [1–20]
FIRST PROOFS (TIM)
Paper: TIM 095623 SAGE
References
ATMS. 2007: Air traffic management system,
at URL: http://virtualskies.arc.nasa.gov/main/
matm.html.
Freudenrich, C.C. 2001: How air traffic control
works, at URL: http://travel.howstuffworks.
com/air-traffic-control1.htm.
CPNTOOL. 2007: Computer tool for coloured
Petri nets, a tool package for analysis of
coloured Petri nets, version 2.20, at URL:
http://wiki.daimi.au.dk/cpntools/cpntools.
wiki, Computer Tool for Coloured Petri Nets.
Gao, F., Li, F., Bao, S. and Tian, H.g. 2006:
Analysis and simulation of air traffic control
conflict. International Conference on Radar.
Shanghai, China, 1–4.
Glover, W. and Lygeros, J. 2004: A stochastic
hybrid model for air traffic control simula-
tion. Lecture Notes in Computer Science,
372–86.
Ho, Y.C. 1992: Discrete event dynamic systems.
IEEE Press.
Huang, Y.S. 2007: Deadlock prevention for
flexible manufacturing systems in sequence
resource allocation Systems. Journal of
Information Science and Engineering 23, 215–31.
Huang, Y.S., Jeng, M.D., Xie, X.L. and Chung,
T.H. 2006: Siphon-based deadlock preven-
tion policy for flexible manufacturing sys-
tems. IEEE Transactions on Systems, Man, and
Cybernetics Part A 36, 2152–60.
IIIT. 1999: The Institute for Information
Industry, Taiwan, 1999: Traffic control proce-
dure analysis: Finite State Machine-based
approach. Research Report, 1–8.
Jensen, K. 1995: Coloured Petri nets, vol. 2.
Springer-Verlag.
Jensen, K. 1997: Coloured Petri nets, vol. 1.
Springer-Verlag.
Kahne, S. 2000: Research issues in the transi-
tion to free flight. Annual Reviews in Control
24, 21–29.
Kahne, S. and Frolow, I. 1996: Air traffic
management: evolution with technology.
IEEE Control System 16, 12–21.
Kovacs, A., Nemeth, E. and Hangos, K.M.
2005: Modeling and optimization of runway
traffic flow using coloured Petri nets. In
International Conference on Control and
Automation, Budapest, 881–86.
Kuchar, J.K. and Yang, L.C. 2000: A review of
conflict detection and resolution modeling
methods. IEEE Transactions on Intelligent
Transportation Systems 1, 179–89.
Murata, T. 1989: Petri nets: properties, analysis
and applications. Proceedings of the IEEE 77,
541–80.
Li, Z.W. and Zhou, M.C. 2006: Clarifications
on the definitions of elementary siphons of
Petri nets. IEEE Transactions on Systems, Man,
and Cybernetics Part A 36, 1277–79.
Li, Z.W. and Zhou, M.C. 2008: On controll-
ability of dependent siphons for deadlock
prevention in generalized Petri nets. IEEE
Transactions on Systems, Man, and Cybernetics
Part A 38, 369–84.
Lin, T.H. 2006: Modeling and analysis of air
traffic control systems by Petri nets. Master’s
Thesis, Chung Cheng Institute of Technology,
National Defense University, Taoyuan,
Taiwan.
Liu, C.Y. and Qin, Y. 2006: Modeling the
aircraft ground operation on airport based on
timed Petri net. Proceedings of the 6th World
Congress on Intelligent Control and Automation
1, Dalian, China, 1304–308.
Peterson, J.L. 1981: Petri net theory and the
modeling of systems. Prentice Hall.
Shortle, J., Xie, Y., Chen, C.H. and Donohue, G.
2004: Simulating collision probabilities of
landing airplanes at non-towered airports.
Simulation: Transactions of the Society
for Modeling and Simulation International 80,
21–31.
Tomlin, C., Pappas, G.J. and Sastry, S. 1998:
Conflict resolution for air traffic manage-
ment: a study in multiagent hybrid systems.
IEEE Transactions on Automated Control 43,
509–21.
Young, W.C., Tsai, M.T. and Chuang, L.M.
2000: Air trafic control system management.
Proceedings of the IEEE National Aerospace and
Electronics Conference, Dayton, OH, 494–98.
Huang and Chung 17
[Ver: A3B2WIN8.07r/W-Standard] [9.3.2009–5:36pm] [1–20]
FIRST PROOFS (TIM)
Paper: TIM 095623 SAGE
Table A1 Continued
Place Transition Interpretation
P43 En-route and monitoring (TRACON,TACC)
T42 Start hand-off to next TRACON
P44 Hand-off to next TRACON
T43 Finish hand-off to next TRACON
P45 Monitoring (TRACON)
T44 Start hand-off to TRACON
P46 Hand-off to TRACON
T45 Finish hand-off to TRACON
AC_5 Monitoring (TRACON)
DCR Descent clearance request (DCR)
P51 Waiting for DCR reply
P52 DCR checking
T51 DCR not approved
AC_5 Monitoring (TRACON)(airborne holding)
DCR Re-DCR request
T52 DCR approved
P53 Descending and monitoring (TRACON)
T53_1 Congestion not detected
AC_6 Descent and monitoring
T53 Congestion detected
P54 Making flow management decision
T54 Start flow management (tower, TRACON,TACC)
P55 Airborne holding
P56 Flow management monitoring (tower, TRACON,TACC)
P57 Making flow data fetch
T55 Start fetch flow data
P58 Assessment
T56 Detected congestion still or worse
P59 Revise strategy
T57 Re-airborne holding command and revised
flow management opinion
P55 Re -airborne holding
P56 Re-flow management monitoring
(tower, TRACON,TACC)
P57 Re-making flow data fetch
T55 Re-fetch flow data
T58 Detected congestion solved
P510 Prepare stop flow management
(ac, tower, TRACON,TACC)
T59 Finish flow management (tower, TRACON, TACC)
AC_6 Re-descent and monitoring
APP Approach and landing clearance request (LCR)
(continued)
Huang and Chung 19
出席國際學術會議心得報告 
                                                             
計畫編號 NSC 97-2221-E-606 -018 
計畫名稱 應用彩色派屈網路於飛航管制流程之塑模與分析(II) 
出國人員姓名 
服務機關及職稱 
黃義盛 國防大學理工學院 電機電子系教授 
會議時間地點 自 97 年 2 月 10 日至 97 年 2 月 12 日於澳洲、墨爾本  
會議名稱 2009 IEEE International Conference on Industrial Technology, ICIT 2009 
發表論文題目 Implementation of a Fast Terminal Sliding Mode Controller for Direct Thrust Control Systems 
 
一、參加會議經過 
個人於2月8日由台北出發前往雪梨，並於2月10日再轉機至墨爾本。於當日下午即前往開會地
點。本會議為2009 IEEE International Conference on Industrial Technology, ICIT年會，該年會為
目前世界上有關工業理論及技術應用方面最具知名度、也最具國際學術權威的研討會。會議
於三月十日至三月十二日，在墨爾本的蒙那許校區(Monash University-Gippsland)舉行。茲就
整體會議過程重點敘述如下：本人於2/10下午即到會場進行報到手續，當天的研討會議舉行
七場，主題有電力電子、電腦與控制等七項，考量研究領域相關因素，選擇參加電腦與控制
(Computer and Control Systems)共三篇的研討會；2/11上午選擇參加工廠自動化(Factory 
Automation)共六篇的研討會；中午用餐過後，當日下午13:30會議開始，繼續與研究生宋正忠
參加工業智慧型決策系統(Intelligent Decision Support Systems in Industry)之會議。2/12上午到
達會場後，本人要求研究生準備發表練習，而個人則參加其它主題之研討會。該場次中有來
自各國之學者專家參與討論並給予指教。2/13上午則參加嵌入式系統相關論文(FPGAs for 
Industry Control Systems)會議，結束充實的研討會行程。 
 
二、與會心得 
本次學術會議共有五個正規的議程，分別為機電與機器人(Mechatronics and Robotics)、工廠自
動化(Factory Automation and Industrial Information)、電腦控制(Computer and control systems)、
電力生產與分配(Power Generation and Distribution)，電力電子能源轉換(Power Electronics and 
Energy Conversion)等。 本會議論文共有683篇投稿數，其中計有325篇論文是被接受，其接受
率不到五成，在本會議三天期間所有論文，分別安排在57個議程中以口頭發表。以上論文來
至43個國家，其中大約有22.7%是來自歐洲國家，澳大利亞佔有13.5%，而中國大陸則佔有
                   
Implementation of a Fast Terminal Sliding Mode 
Controller for Direct Thrust Control Systems 
Yi-Sheng Huang 
Department of Electronic Engineering, Chung Cheng 
 Institute of Technology, National Defense University, 
 Taiwan, R.O.C. 
yshuang@ndu.edu.tw 
Cheng-Chung Sung  
Department of Electronic Engineering, Chung Cheng 
Institute of Technology, National Defense University,  
Taiwan, R.O.C. 
 
 
Abstract—This paper presents a new methodology to 
implement a permanent magnet linear synchronous motor. The 
proposed method is a combination way which is combined the 
fast terminal sliding mode with the direct thrust control method.  
The intended advantage of the proposed method is that the 
chattering phenomenon can be reduced and/or removed.  To our 
knowledge, the inherent flux linkage problems of permanent 
magnet linear synchronous motors did not seem to be handled by 
the pioneer contributions.  For overcoming the problems, a new 
estimator algorithm is used to get the accurate flux linkage value.  
Finally, some experimental results are met as expected. 
Keywords—Permanent magnet linear synchronous motor, fast 
terminal sliding mode, direct thrust control. 
I.  INTRODUCTION 
Linear motor drives equipment directly and does not need 
any mechanical coupling like belts, gears, screws or 
crankshafts, etc. System efficiency with linear motor driving 
directly and its control circuits is higher than other rotating 
driving systems, even higher positioning precision. Therefore, 
permanent magnet linear synchronous motors (PMLSMs) are 
widely used in industry drive areas of linear transmission or 
precision servo control [1-3]. In recent years, scientist and 
technologist are trying to replace rotating motor with linear 
motor in numerical control machining center or more axes 
cooperation system because of its efficiency and controlled 
precision by advanced control strategies. The direct torque 
control has been utilized as a general formalism methodology 
for AC rotary motors [4-5].  It has been expanding into linear 
motor drives, named as direct thrust control (DTC) [6-7].  
However, the technical skill in the implementation of PMLSMs 
does not seem to be performed yet.  The reasons state both the 
problems of the amplitude of the actual flux linkage and the 
position angle of the actual flux linkage are no easy obtained.  
For overcoming the problems, the paper proposes a new 
estimator algorithm to obtain both.  However, it is a well-
known that PMLSM positioning accuracy is greatly affected by 
parameter variations and load disturbances.  Furthermore, how 
to reduce these factors quickly and directly is a very important 
issue. 
Sliding-mode control works on the concept of designing a 
control so as to drive the system states to the so called sliding 
manifold. One of the major advantages of sliding-mode control 
is that when the system states are on the sliding manifold, the 
closed-loop system behavior is robust to certain internal 
parameter variations and external disturbances [8-10].  In 
general, sliding manifolds are chosen to be linear hyperplane 
named linear sliding mode (LSM).  Such hyperplane 
guarantees asymptotic stability of the system in the sliding 
mode.  That is, the system states will reach the equilibrium in 
infinite time.  Nevertheless, tracking error will no converge to 
zero in finite time in any case.  Terminal  sliding-mode  (TSM)  
control  [11]  aims  at  designing a  sliding-mode  control  
strategy  that  would  guarantee  a  finite  time convergence to 
the origin.  This is accomplished by using a nonlinear sliding 
line which results in finite time convergence. And also [12-14] 
have been used successfully.  Although this method has proved 
successfully, there is a series lack of effective or tractable 
design methods to choose the suitable parameters. Comparison 
with LSM policy, the TSM policy does not seem to provide the 
same convergent performance when the system state is far 
away from the equilibrium.  The main reason is that the 
convergent time of the LSM is shorter than the TSM when the 
system state is close the equilibrium. On the other hand, the 
discontinuity phase is a major contributor to the chattering 
behaviors. 
In this paper, we propose a fast terminal sliding mode 
(FTSM) controller that can drive the system to reach the 
nonlinear switching manifold in the reaching phase.  It is 
worthy to notice that LSM and TSM control technologies are 
used to improve the precision of the control and deliver a fast 
time response, respectively.  Moreover, the chattering 
phenomenon can be reduced and/or removed in the reaching 
phase and sliding phase under our controller.   
This paper is organized as follows.  A modified flux linkage 
estimation policy is introduced in section II.  A fast terminal 
sliding mode controller is presented in section III.  The 
simulation results are depicted in section IV.  Finally, some 
conclusions are given in section V. 
 
II. A MODIFIED FLUX LINKAGE ESTIMATION POLICY 
 A control policy is proposed which is insensitive of rotor 
parameters in this paper.  And also the implementation of the 
control policy is completely without the complicated rotating 
frame transform.  For convenience, a block diagram of a direct 
thrust control scheme for the PMLSM control system is 
depicted in figure 1.  It is worthy to point that DTC allows a 
controller to control the decoupled of electromagnetic thrust 
and the flux magnitude, respectively. The main advantages of 
          
0 0.2 0.4 0.6 0.8 1 1.2 1.4 1.6 1.8 2
-1.5
-1
-0.5
0
0.5
1
1.5
time (sec)
Ud
theta
xp
fluxD
 
Figure 3(a).  A performance of the flux estimate algorithm [20]. 
0 0.2 0.4 0.6 0.8 1 1.2 1.4 1.6 1.8 2
-1.5
-1
-0.5
0
0.5
1
1.5
time (sec)
Ud
xp
theta
fluxD
 
Figure 3(b).  A performance of a new flux estimate algorithm. 
Fig. 3(a) shows the performance of the control policy [20] is 
without the correction coefficient kϕ. And Fig. 3(b) is with kϕ.  
Notice that both the performances are under controlled by the 
same position command. In the two examples, a triangular 
reference input is required for moving 1τ (cm) with velocity 
1τ/s (cm/sec).  It is worthy to notice that the result (i.e., Fig. 
3(b)) is obtained under our modified integrator. It hints the 
suitable voltage vectors are selected successfully from the 
switching table by our control algorithm. For convenience, all 
experimental results of the motor are normalized.  For instance, 
the voltage vectors (uD) is normalized as Ud = uD / 280 V, the 
angle theta = (θ/180) degree and the flux linkage fluxD = FD / 
0.3Wb.     Comparing the two performances (i.e., Fig. 3(a) and 
Fig. 3(b)), it is easy to point out that the new position angle θ  
is more linearity. And also the new flux linkage FD is less 
distortion than the old one.  As a result, we can conclude that 
the performance under our control policy is better than the prior 
work [20]. 
However, if the motor is operated in the low speed, the 
mover voltage (Rim) is the same order to the input voltage (um). 
One should be obtained a large estimation error if the mover 
voltage is neglected. Accordingly, it becomes into a hard work 
for estimating the flux correctly.  A position error should be 
appeared due to an incorrect value of the thrust estimation. And 
also the incorrect value of the thrust estimation is generated by 
the output of the incorrect flux. In fact, the incorrect value of 
the thrust estimation is due to an unsuitable space voltage 
vector. It hints the switching algorithm cannot run correctly.  
For reducing the influence of the low speed condition, the 
current-based method is needed in new proposed estimator 
algorithm.  The new one can be considered as a flux estimated 
compensator.  The block diagram with a low speed 
compensator is shown in Fig. 4.  Notice that the flux estimated 
compensator is effective only in the low speed operation region.  
A correct value of the thrust estimation can be obtained if the 
motor is operating in the high-speed region.  As a result, the 
new switching algorithm can provide proper voltage vectors for 
the driver of the motor. It is worthy to notice that the new flux 
estimator is better than the conventional one.  Especially, the 
problems of the motor under the low operating speed region 
can be solved by our control policy.   As a result, we can 
conclude that the new estimation algorithm may obtain a better 
performance than the prior research.  And also the inherent 
problems of the system should be eliminated. The 
performances of the flux linkage response with two different 
control policies are depicted in Fig. 5.  
 
 
Figure 4.  A flux estimator block diagram with flux compensator. 
 
0 0.02 0.04 0.06 0.08 0.1
0
0.05
0.1
0.15
0.2
0.25
0.3
0.35
time (sec)
Fl
ux without flux compensator
with flux compensator
flux command
 
Figure 5.  The flux linkage response with/without flux compensator. 
          
result, the authors employ the FTSM based on nonlinear 
control design (NCD) to demonstrate the controlled results. 
 
IV. SIMULATION RESULTS 
In this paper, an illuminated nonlinear control design (NCD) 
toolbox is used to obtain the vector [ , , ,α β φ γ ] for the FTSM 
controller. In the following simulation work, the authors want 
the specify of the control system is as follows: the rise-time tr 
 0.≦ 1 sec, the settle-time ts  0.≦ 2 sec, and the overshoot  ≦ 2 
%.  The fixed parameter is set as p = 3, q = 1, p0 = 9, and q0 = 5.  
The authors hope the parameter vector [ , , ,α β φ γ ] is arranged 
between its lower and upper bound (i.e., [1, 1, 1, 1] and [50, 50, 
50, 50]). Finally, the suitable parameter vector [35.24, 7.72, 
24.83, 14.07] which is met the desired system criterion can be 
obtained. 
The performance of the proposed integration algorithms is 
investigated by Matlab/Simulink.  And the control system is 
shown in Fig. 6.  For this simulation work, some information of 
the motor’s data has to be involved in.  The values of the 
PMLSM model parameter is listed in Table I.  Some measured 
waveforms are provided here to validate the theoretical analysis.  
The authors use three different input signals (triangular, sine 
and trapezoid waves) to trace the performance.  Fig. 7(a)-(c) 
shows the performance under a triangular-wave input signal.  
Fig. 8-9 shows the measured full stroke system performance 
using sine-wave and trapezoid-wave input signal, respectively.  
Based on the simulation results above, the trace of the output 
response is almost following the input command.  Nevertheless, 
two brilliant performances are revealing under our controller 
policy. One is a fast response performance and the other one is 
a well trace performance.  
cmdF
, ,a b ci i i
errF+
−
 
θ
, ,a b cv v v
+
−
SθmFmT
 
Figure 6.  The block diagram of a simulated PMLSM control system. 
TABLE I.  THE PARAMETERS OF THE PMLSM. 
Parameter Value Parameter Value
Mover mass (Kg) 1.97 Phase resistance (Ω) 11.8/3
Friction factor  
(N/(m/sec)) 
5.2982 Inductance (mH) 4.8/3
Flux linkage (Wb) 0.4849 Number of pole pairs 1
Pole pitch (m) 0.06096 Voltage (V) 280
Cut off frequency ωc (Hz) 100 Flux linkage (Wb) 0.3
 
0 2 4 6 8 10
-5
0
5
10
15
20
25
30
35
time (sec)
po
si
tio
n 
(c
m
)
xpcmd
xp
 
Figure 7(a).  The simulation result for triangular-wave input tracking (xp). 
 
0 0.05 0.1 0.15 0.2
-20
-10
0
10
20
e1
e 2
sliding surface
with compensator
without compensator
 
Figure 7(b).  The simulation result for sliding surface. 
 
0 2 4 6 8 10
-200
-150
-100
-50
0
50
100
150
200
time (sec)
T
he
ta
 (
de
gr
ee
)
 
Figure 7(c).  The simulation result for flux position response (θ). 
