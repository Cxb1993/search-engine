2（一）中文摘要
關鍵詞：串流密碼、相關免疫級數、線性編碼、Reed-Solomon 編碼、Reed-Muller 編碼
編碼學與密碼術的理論，是現代通訊傳輸上兩個非常重要的基石。所謂的編碼學，主
要是研究如何有效且正確的將一份訊息由一個地方傳送至另一個地方的方法，在傳輸訊息
的過程中，訊息難免都會受到雜訊的干擾而發生錯誤，而編碼學的主旨，便是在偵測、處
理或更正這些由干擾所造成的錯誤。所謂的密碼術，則是一門確保訊息內容安全的科學，
一般，我們可將密碼術細分成兩個部分。第一部分為密碼學(cryptography)，主要在建構
一個安全的加解密系統，並藉此系統達到資料傳輸上的安全；第二部分為破密學
(cryptanalysis)，主要在研究如何破解加解密系統。最近有一些重要的研究結果顯示，編
碼學可以被應用到密碼技術中，用來建構出新的密碼系統或協助破解已經存在的密碼系統。
在本計畫中，我們希望能再深入的研究編碼學中的各種編碼技術，如線性編碼(linear
codes)、Hamming 編碼、Reed-Solomon 編碼、Reed-Muller 編碼等，將編碼理論與技術導
入串流密碼系統的建構與破解之中，最後希望能設計出一些以編碼解碼之理論為基礎的串
流密碼系統與攻擊方法。此外，我們也打算拿實際現有的串流密碼系統與我們所設計的系
統進行模擬攻擊實驗，分析攻擊法所需耗費的時間複雜度與串流密碼系統的安全強度。希
望本計畫所做的研究，能對密碼術與編碼學間的合併應用，有些許的貢獻。
目前依規劃進度，我們已經有一些不錯的研究成果，其中有部份已經刊登發表在學術期刊
上，另一部份正在整理成學術論文中。
4（三）報告內容
近年來，串流密碼系統(stream ciphers)的理論發展得非常快速，本實驗室亦藉由系統
可靠度理論(reliability theory)的研究基礎轉而跨足其中，曾針對此領域研究的課題，有過
深入且透徹的探討，對於如何建構一個安全且架構簡單的串流密碼系統，以及如何針對串
流密碼系統中的密鑰流產生器(keystream generator)，分析評估產生器的安全性強度與對於
各種攻擊法(attack)的防禦強度方面的研究，最近三年內已累積了一些研究成果[1-14]。這
裡所指的串流密產生器安全性強度包括影響系統雜化 (confusion)特性的非線性度
(nonlinearity)[30,31]、代數級數(algebraic degree)與線性複雜度(linear complexity)[23,50]等性
質；以及影響系統亂化(diffusion)特性的週期(period)、平衡性(balancedness)、傳播特徵
(propagation criteria)[29]與相關免疫性(correlation immunity) [30,32,42] 等性質；而串流密碼
的攻擊法包括：相關攻擊法(correlation attack)[19,20,21,22,25,26,27,33,43,48]、最佳仿射攻
擊法(best affine approximation attack)[45]或區別攻擊法(distinguishing attack)的攻擊[47]等
等。
在研究串流密碼的同時，我們發現串流密碼系統的建構(construction)與破解(attack)技
巧似乎與編碼理論(coding theory)中的許多編碼(encoding)、解碼(decoding)、錯誤偵測(error
detection)、錯誤訂正(error correction)技術有密切的關係。最近有許多重要的研究結果證明
了這個觀點：編碼學可以被應用到密碼技術中，用來建構出新的密碼系統或協助破解已經
存在的密碼系統。因此，在本計畫中，我們希望能再深入的研究編碼學中的各種編碼技術，
如線性編碼(linear codes)、Hamming 編碼、Reed-Solomon 編碼、Reed-Muller 編碼等，將
編碼理論與技術導入串流密碼系統的建構與破解之中，最後希望能設計出一些以編碼解碼
之理論為基礎的串流密碼系統與攻擊方法。此外，我們也打算拿實際現有的串流密碼系統
與我們所設計的系統進行模擬攻擊實驗，分析攻擊法所需耗費的時間複雜度與串流密碼系
統的安全強度。希望本計畫所做的研究，能對密碼術與編碼學間的合併應用，有些許的貢
獻。
在說明編碼理論與串流密碼系統相技術間的關連性之前，首先，我們先來介紹編碼學
的基本概念與相關的編碼(codes)。
我們先簡單說明編碼理論與串流密碼系統建構之間的關係。
線性編碼與串流密碼系統建構間的關係：
首先，我們先對串流密碼系統的建構技術與編碼學間的關連性，做一個簡單的描述。
對於編碼學中被大家廣為使用的(n,k,d) C 線性編碼，我們可將此線性編碼中的每個編碼字
元 w，視為一個 n 變數線性函數的 ANF 向量表示值(w‧x)，若 B={w1,w2,…,wk}為線性編碼
C 之一組基底，則由線性編碼的特性我們知道，對於由基底 B 中所有向量的非零線性組合
所產生的編碼字元，其漢明比重均會大於或等於 d，而此性質，恰好便是檢測一個由[GF(2)]n
映射至[GF(2)]k 之多元輸出布林函數是否具備 d-1 相關免疫性的條件，換言之，若我們設
定
6數 f 與所有線性反饋移位暫存器參數的條件下，想要試著找出每個線性反饋移位暫存器的
密鑰，最簡單且最直接的辦法，便是找出每個線性反饋移位暫存器的輸出序列 u(i)，再透過
線性反饋移位暫存器初始密鑰與輸出序列 u(i)間的線性關係，便可以輕易的解出此串流密碼
系統的所有密鑰值。
然而，對於每個線性反饋移位暫存器的輸出序列 u(i)與密鑰流 z 間的關係，其實可以想
像成，序列 u(i)在帶入布林函數 f 後，受到了函數 f 結構的影響，使得序列 u(i)中某些位元的
值發生了改變，進而使得序列 u(i)變成了序列 z，而序列間位元改變的機率為 p=Pr[zn≠un]，
此值與布林函數 f 的真值表有相當大的關係。而此觀念，恰好與編碼理論中的輸入序列 u，
通過二元對稱通訊管道時，受到了雜訊的干擾(其錯誤機率 p 即等於 Pr[zn≠un])，使得序列中
某些位元發生錯誤，導致序列 u 變成了序列 z，其概念示意圖如圖 5 所示，如此，我們只需
將序列 z 當作某些位元發生錯誤的編碼字元，我們即可透過密碼學中的解碼技術，將序列 u
解碼出來，而此序列，便是串流密碼系統中某線性反饋移位暫存器的輸出序列，如此，我
們便可很輕易
LFSR 1
LFSR 2
LFSR n
f
)1(u
)2(u
)(nu

明文序列 Y 密文序列C
密鑰流序列 Z
組合函數
圖 4：串流密碼系統架構圖
圖 5：BSC 概念圖
的解出所有系統密鑰來。
另外，到了 2000 年，Johansson 又將原本快速迴旋碼攻擊法進行改良，引進了加速編
碼(turbo code)編碼解碼的技巧，再次提出了快速加速編碼攻擊法(fast correlation attack via
turbo code)，此種攻擊法的時間複雜度比起其他相關攻擊法來說，要優異些。下面，我們
就來看看，快速迴旋編碼攻擊法是如何透過解碼迴旋編碼，求得系統的密鑰。
假設，線性反饋移位暫存器的長度為 l，線性反饋移位暫存器所有可能的輸出序列所產
生的集合以 L 表示，很明顯的知道#L=2l，，對於 L 中的每個序列，將長度為 N 以後的位元
捨去所形成的序列之集合表示成 LN，我們好容易的知道，集合 LN 會是一個(N,l,d)線性編碼。
8




















t
j
iBn
B
j
jn
m
jn
t
j
iBn
B
j
jnjn
t
j
iBn
B
j
jnjn
m
j
j
j
uugu
uugu
uugu
1
1
1
)(
1
1
1
)2(
1
1
1
)1(
)(
)2(
)1(
,
,

(3)
假設 un=vn(0)為另外一條自己加進去的同位元檢查式，對於這 m+1 條等式，將每條等式都視
作一個移位暫存器的關係式，則可以由這 m+1 條等式建構出如圖 7 的[m,k,B]迴旋碼來（在
此 k=1），其中





























)()2()1(
)(
2
)2(
2
)1(
2
)(
1
)2(
1
)1(
1
1
0
0
0
0
1111
m
BBB
m
m
B ccc
ccc
ccc
g
g
g






到此，我們已完成了快速迴旋碼攻擊法的第一個部分，將一個線性反饋移位暫存器透過同
位元檢查式轉變成一個迴旋碼，藉由這個迴旋碼將線性反饋移位暫存器的輸出序列 u 做加
密的動作產生密文序列 v。
對於攻擊法的第二部分，首先，需將密鑰流序列 z 轉變成符合迴旋碼密文的格式，假
設密文序列透過 BSC 傳送，接收方收到的序列為 r={ri|i≧0}，其中 r={ri(j)|i≧0,0≦j≦m}，
一個簡單的對應，對於 1≦k≦m 之 rn(k)，將其設為



t
j
iBn kj
z
1
1 )( ，k=0 之 rn
(k)則設為 zn，且
BSC 的錯誤機率 p 為
]Pr[]Pr[
1
1
1
1
)()(
)()( 





 
t
j
tBn
t
j
tBn
k
n
k
n k
j
k
j
zurvp
最後將序列 r 以 Viterbi 演算法解密，即可找出線性反饋移位暫存器的輸出序列 u，進而求
得線性反饋移位暫存器之密鑰 u0。關於快速迴旋碼攻擊法的詳細步驟列舉如下：
1. 首先決定迴旋碼中移位暫存器之長度 B，值需介於1與 l 間。接著以線性反饋移位暫存
器的反饋多項式的級數 l 與項數 t 求得 l x N 之生成矩陣 GLFSR =[h1 h2 … hN]，其中 N
為所觀察之密鑰流長度。
10
在介紹我們所提出的延伸對映編碼演算法之前，先說明基本符號的定義如下：
令 Sn 表示 Fn = {1, 2, …, n}的所有 n! 種排列所形成的集合；Z2n 表示長度為 n 的所有
二元向量所形成的集合。我們以一組長度為 n 的序列(n-tuple)= (1,2, …, n)來表示一個
排列 : Fn Fn，其中 i =(i)。長度為 n 的二元向量 x，我們以一組長度為 n 的序列 x
= (x1, x2, …, xn)Z2n 來表示，對任一 iFn，xi{0, 1}。
對於兩個任意資料型態的長度為 n 的序列 a 與 b，其中 a = (a1, a2, …, an) 、 b = (b1,
b2, …, bn)，則兩者間的漢明距離以符號 dH(a, b) 來表示，定義如下：
|}:{|),( jjnH baFjd ba .
一個長度為n的距離保持對映 (DPMs) f : Z2n Sn 定義為：對於任何 x, yZ2n，
),())(),(( yxyx HH dffd  .
一個長度為n的距離增加對映 (DIMs) f : Z2n Sn 定義為：對於任何不同的 x, yZ2n，
),1),(min())(),(( ndffd H  yxyx .
一個 (n, d) 排列碼是 Sn 的子集合，且在此子集合中，任二組不同字組 (codewords)
間的漢明距離最小為 d ；一個 (n, d) 二進位碼是 Z2n 的子集合，其中字組長度為 n ，且
任兩個相異字組間的漢明距離最小為 d。
我們先引用前不久發表的增距對映算法 (Distance-increasing mappings)並做簡單的介
紹。在 [1]與 [2]中我們提出了長度為 n 的增距對映演算法 h2m，其中 n=2m，m 為
2 或不小於 3 的奇數整數。以下簡單的描述我們所引用的增距對映演算法：
Mapping Algorithm h2m
Input: (x1, x2, …, x2m)Z22m
Output: (1,2, …, 2m) = h2m(x1, x2, …, x2m)S2m
Begin
(1,2, …, 2m) (1, 2, …, 2m)
for i from 1 to m do
if xi = 1 then swap (2i1,2i)
for i from m + 1 to 2m do
if xi = 1 then swap (im,2m)
End
考慮 Z22m ，它是一組 (2m, 1) 二進位碼，其中 m 為 2 或不小於 3 的奇整數。根據我
在論文 [1] 與 [2] 中證明的定理，我們可以透過增距對映演算法來建立排列碼，透過增距
對映演算法所建立的 h2m(Z22m) 是一組 (2m, 2) 排列碼。但為了可以更正 1 位元的傳輸錯
誤，字組間的漢明距離必需至少為 3，所以我們延伸 h2m 後，提出 E2m : Z22m  S2m+1，使
得 E2m(Z22m) 是一個 (2m + 1, 3) 排列碼。以下是我們最新提出的 E2m 延伸對映編碼演算
法：
12
3.
情況 2：dH(x, y)2
因 h2m 是一增距對映 (DIMs)，依據增距對映我們可以得到
dH((u1, u2, …, u2m), (v1, v2, …, v2m))3.
我們將情況 2 分為兩個子情況來討論。
子情況 2-1： xˆ = yˆ .
令 xˆ = yˆ = 0 ( xˆ = yˆ = 1 的情形類似)，則我們可以做以下的推導：
dH(E2m(x), E2m(y))
= dH((u1, u2, …, u2m1, u2m, 2m+1), (v1, v2, …, v2m1, v2m, 2m+1))
= dH((u1, u2, …, u2m), (v1, v2, …, v2m))
3.
子情況 2-2： xˆyˆ .
令 xˆ = 0, yˆ = 1 ( xˆ = 1, yˆ = 0 的情形類似)，則我們可以做以下的推導：
dH(E2m(x), E2m(y))
= dH((u1, u2, …, u2m1, u2m, 2m+1), (v1, v2, …, v2m1, 2m+1, v2m))
= dH((u1, u2, …, u2m1), (v1, v2, …, v2m1)) + 2
(31) + 2 = 4.
□
根據定理 1 我們可以獲得以下的結論。
結論 1：E2m(Z22m) 為一個 (2m + 1, 3) 排列碼，其中 m 為 2 或不小於 3 的奇整數。
有前述的 E2m 編碼演算法後，為了可以有效的解碼並訂正錯誤的位元，我們還需要一
個解碼演算法 D2m 用於 (2m + 1, 3) 排列碼，其中 m 為 2 或不小於 3 的奇整數。依據
編碼理論，排列碼在最小漢明距離為 3 的情況下，可以偵測並訂正 1 個位元的錯誤，所以
我們提出一個新的解碼演算法 D2m ，並驗證它確實可以偵測並訂正任何一個位元的錯誤。
以下為完整的 D2m 解碼演算法。
Decoding Algorithm D2m
Input: (1,2, …, 2m + 1) wherei{1, 2, …, 2m + 1} for all i.
Output: (x1, x2, …, x2m)Z22m, or “At least two digits are incorect.”
Begin
(y[1], y[2], …, y[2m+1]) (0, 0, …, 0)
for i from 1 to 2m+1 do y[i] y[i]+1
count 0
14
if (x1, x2, …, x2m)(-1, -1, …, -1) then return (x1, x2, …, x2m)
(x1, x2, …, x2m) D2mA(1,2, …, j[2]1, ia,j[2]+1, …, 2m + 1)
return (x1, x2, …, x2m)
End
為了協助讀者瞭解D2m解碼演算法，以下我們舉出三個解碼的範例來輔助說明。
範例 1：令 D2m 之輸入 =(4, 5, 3, 2, 1, 7, 6)，在這個例子中 m = 3，程序 D2m 第一個迴圈
執行完畢後，我們可以得到 (y[1], y[2], …, y[7]) = (1, 1, 1, 1, 1, 1, 1)，第二個迴圈執行後，
我們可以得到 count = 0，經過 switch 的指令選擇後，程式會呼叫程序 D2mA ，由於 6 = 7 所
以 j = 6，然後我們可以得到 (z[1], z[2], …, z[6]) = (4, 5, 3, 2, 1, 6) 與 (w[1], w[2], …, w[6]) =
(5, 4, 3, 1, 2, 6)，程序 D2mA 中倒數第二個迴圈執行完畢後，(x1, x2, x3) 被設為 (1, 0, 0)，最後
一個迴圈執行完畢後，(x4, x5, x6) 被設為 (1, 1, 0)。之後程式會呼叫 E2m(1, 0, 0, 1, 1, 0) = (4, 5,
3, 2, 1, 7, 6)，所以 D2mA 和 D2m 皆回傳 (1, 0, 0, 1, 1, 0)，這是正確的解碼結果。
□
範例 2：令 D2m 之輸入 = (4, 2, 3, 2, 1, 7, 6)，D2m第一個迴圈執行完畢後，我們可以得到
(y[1], y[2], …, y[7]) = (1, 2, 1, 1, 0, 1, 1)，第二個迴圈執行完畢後，得到 count = 1, ia = 5, ib =
2，經過 switch 指令選擇後，程式會呼叫程序 D2mB，在程序 D2mB 中，因為 2 =4 = ib =
2 ，所以我們可以得到 j[1]=2 與 j[2]=4，隨後程序 D2mA 將被呼叫，且輸入值 中之 j[1]
=2 = 2將會被 5 所取代 (因 ia = 5)。而修改後的值為 (4, 5, 3, 2, 1, 7, 6)，與範例 1 中的
輸入值相同，所以我們可以確定 D2m 最後也將會回傳 (1, 0, 0, 1, 1, 0)，這也是正確的解碼
結果。
□
範例 3：令 D2m 之輸入 = (4, 2, 3, 2, 1, 6, 6)，D2m 第一個迴圈執行後，我們可以得到 (y[1],
y[2], …, y[7]) = (1, 2, 1, 1, 0, 2, 0)，第二個迴圈執行後 count = 2，經過 switch 指令選擇後，
D2mA 或 D2mB 都不會被呼叫，因為超過1位元發生傳輸錯誤，所以 D2m 會回傳 “At least two 
digits are incorect.”，這也是正確的結果。。
當然，光是靠舉例並不足以證明解碼演算法 D2m 的正確性。以下我們就提出另一個定
理來證明解碼演算法 D2m 的正確性。
定理 2：對任何的 pE2m(Z22m)，其中 m 為 2 或不小於 3 的奇整數，如果 q = (q1, q2, …, 
q2m + 1) 其中 qi {1, 2, …, 2m + 1} 且 dH(p, q)1 ，則透過 D2m 解碼後，可將輸入 q 轉
換為 x ，其中 xZ22m ，且 E2m(x) = p 。
証明：我們將証明分為兩個情況，並個別證明之。
情況 1：dH(p, q) = 0.
在此情況中必定 p = q，且已知 q 是排列碼 E2m(Z22m) 中的一個字組。在程序 D2m 執行過
16
証明：在演算法 E2m 中，最初輸出 值需要花費 O(m) 的時間，最初的兩個迴圈執行完
畢後，各花費 O(m) 的時間，最後一個用於判斷的 if 子句花費 O(m) 的時間，因此總計
算時間複雜度為 O(m)。
□
定理 4: 演算法 D2m 執行時間複雜度為 O(m)。
証明：在演算法 D2m 中，最初計算 (y[1], y[2], …, y[2m+1]) 所花費的時間複雜度為 O(m)。
第二個設定 count、 ia 與 ib 的迴圈，所花費的時間複雜度為 O(m)。隨後的 switch 指令會
呼叫程序 D2mA 或程序 D2mB 其中之一。在 D2mA 中，找出 j = 2m + 1 中 j 之值需花費時
間複雜度為 O(m)，第二個和第三個尋找 (x1, x2, …, x2m) 所使用的 for 迴圈，總共花費時
間複雜度為 O(m)，最後一個用於條件判斷的 if 子句呼叫 E2m 其所花費時間複雜度為 O(m)。
在 D2mB 中，找出 j[1] =j[2] = ib 中 j[1] 與 j[2] 之值，花費時間複雜度為 O(m)，程序 D2mB
最多只會呼叫程序 D2mA 兩次，因為 D2mA 所花費的時間複雜度為 O(m)，所以執行程序 D2mB
的時間複雜度也為 O(m)。因此，最後可以得到執行整個 D2m 所花費的時間複雜度為 O(m)。
□
我們將目前的研究成果分成四類條列如下。
A.目前已經發表(含已刊登或已接受刊登)的國際學術期刊論文有：
1. Jen-Chun Chang, “Distance-increasing mappings from binary vectors to permutations that
increase Hamming distances by at least two,” IEEE Transactions on Information Theory,
vol. 52, no. 4, pp. 1683-1689, April 2006. (SCI)
2. Jen-Chun Chang, “New algorithms of distance-increasing mappings from binary vectors to
permutations by swaps,” Designs, Codes and Cryptography, vol. 39, no. 3, pp. 335-345,
June 2006. (SCI)
3. Jen-Chun Chang, “New constructions of distance-increasing mappings and permutation
Arays,” to appear in Journal of Information Science and Engineering, 2006. (SCI)
4. Jyh-Shyan Lin, Jen-Chun Chang and Rong-Jaye Chen, “New simple constructions of 
distance-increasing mappings from binary vectors to permutations,” Information
Processing Letters, vol. 100, issue 2, pp. 83-89, Oct. 2006. (SCI)
B.目前審查中的學術論文計有：
5. Jyh-Shyan Lin, Jen-Chun Chang, Rong-Jaye Chen and Torleiv Kløve, “Distance-increasing
mappings from ternary vectors to permutations,” submitted to IEEE Transactions on
Information Theory. (SCI)
C.目前已發表之會議論文有：
18
（四）參考文獻
[1] Jen-Chun Chang, "Distance increasing mappings from binary vectors to permutations," to
appear in IEEE Transactions on Information Theory, Vol. 51, Jan 2005. (SCI/EI)
(IF=2.245) (NSC93-2213-E-305-003-)
[2] Jen-Chun Chang, Rong-Jaye Chen, T. Klove and Shi-Chun Tsai, "Distance preserving
mappings from binary vectors to permutations," IEEE Transactions on Information
Theory, Vol. 49, April 2003, pp. 1054-1059. (SCI/EI) (IF=2.245)
(NSC91-2213-E-159-007-)
[3] Jen-Chun Chang and Kai-Chun Hwang, "串流加密法的發展現況," Chapter 4 of 資通安
全專輯, Eds. 官大智、曾文貴, 行政院國家科學委員會科學技術資料中心, Nov 2004.
(NSC93-2213-E-305-003-)
[4] Jen-Chun Chang and Frank K. Hwang, "The reliability of consecutive-k systems,"
Chapter 3 of Handbook of Reliability Engineering, Ed. H. Pham, Springer, 2003.
(NSC92-2213-E-415-006-)
[5] Jen-Chun Chang, Rong-Jaye Chen and Frank K. Hwang, "An efficient algorithm for the
reliability of consecutive-k-n networks," Journal of Information Science and
Engineering, Vol. 19, 2003, pp. 159-166. (SCI/EI) (NSC91-2213-E-159-007-)
[6] Jen-Chun Chang, Kai-Chun Hwang and Rong-Jaye Chen, "Boolean functions with high
nonlinearity and propagation characteristics," submitted to IEEE Transactions on
Information Theory. (SCI/EI) (NSC93-2213-E-305-003-)
[7] Jen-Chun Chang, Jun-Shiang Hu and Rong-Jaye Chen, "A construction of Boolean
functions with propagation characteristics and resilient properties," submitted to IEEE
Transactions on Information Theory. (SCI/EI) (NSC93-2213-E-305-003-)
[8] Jen-Chun Chang, Rong-Jaye Chen and Frank K. Hwang, "Efficient algorithms to compute
the reliabilities of f-or-consecutive-k-out-of-n:F systems," submitted to Computer
Modeling in Engineering and Science. (SCI) (NSC93-2213-E-305-003-)
[9] Jen-Chun Chang, Shiao-Fan Chang, "Constructions of Distance-Almost-Increasing
Mappings from Binary Vectors to Permutations," International Computer Symposium,
Dec 2004. (NSC93-2213-E-305-003-)
[10] Han-Chang Liang, Jen-Chun Chang, Rong-Jaye Chen, "New Efficient Constructions of
Binary Asymmetric Error-Correcting Codes," International Computer Symposium, Dec
2004. (NSC93-2213-E-305-003-)
[11] Kai-Chiun Hunag, Jen-Chun Chang, Rong-Jaye Chen, "A new construction of resilient
functions over GF(p) with good cryptographic properties," International Computer
Symposium, Dec 2004. (NSC93-2213-E-305-003-)
[12] Jen-Chun Chang, Rong-Jaye Chen, T. Klove and Shi-Chun Tsai, "Distance preserving
mappings from binary vectors to permutations," IEEE International Symposium on
Information Theory (ISIT 2003), Session: Coding Theory I, paper #9, 2003, pp. 14-15.
(NSC92-2213-E-415-006-)
[13] 羅世帆、張仁俊，"安全的 FTP 檔案傳輸協定的設計與實作"，第一屆流通與全球運
籌論文研討會，Oct 2003。(NSC92-2213-E-415-006-)
[14] 鄭凱仁、邱楷雯、張仁俊，"PDA 電子郵件安全收發系統之設計與實作"，第四屆產
業資訊管理學術暨新興科技實務研討會，Nov 2003。(中華民國資訊管理學會主辦)
(NSC92-2213-E-415-006-)
[15] D. R. Hankerson, et al., Coding Theory and Cryptography : The Essentials, Markcel
Dekker, 2000, New York.
[16] P. Hawkes and G. Rose. “Primitive specification and supporting documentation for 
SOBER-t16 submission to NESSIE.” In Proceedings of the First Open NESSIE Workshop,
20
Avaliable:www.home.aone.net.au/qualcomm.
[39] R. Bose, Information Theory Coding and Cryptography, 2003.
[40] A. Biryukov, A. Shamir, and D. Wagner, “Real time cryptanalysis of A5 on a PC,” in 
Procedding Fast Softeare Encryption 2000, New York:Springer-Verlag, 2000, Vol. 1978,
pp.1-18.
[41] M. Briceno, I. Goldberg, and D. Wagner, “A pedagogical implementation of A5/1,” 
Technical report, 1999. web publication, http://www.scard.org/gsm/body.html.
[42] P. Camion, etc al., “On corelation-immune functions,” Advances in Cryptoloty-Crypt’91,
Springer-Verlag, 1991, 86-100.
[43] A.Canteaut and M. Trabbia, “Compared performance of fast correlation attacks an stream
ciphers,”IEEE International Symposium on Information Theory, 2000, pp. 213.
[44] S. Cheet, S. Leet, D. Leet, and S. H. Sung, “On the corelation immune functions and 
their nonlinearity,” in Adances in Cryptology, ASIACRYPT’96, Springer-Verlag, 1996, pp.
232-243.
[45] C. (Cunsheng) Ding, G. Xiao, and W. Shan. The stability theory of stream ciphers, volume
561. Springer-Verlag Inc., New York, NY, USA, 1991.
[46] P. Ekdahl and T. Johansson, “Some results on corelations in the bluetoouth stream 
generator,” in 10th Joint conference on communications and coding, pp. 210–224, 2000.
[47] P. Ekdahl and T. Johnsson, “Distinguishing atacks on SOBER-t16 and SOBER-t32,” in 
Fast Software Encryption 2002, LNCS 2365, J. Daemen, V. Rijmen, Eds., Springer-Verlag,
pp. 210-224, 2002.
[48] J. D. Golic,“Edit distances and probabilities for correlation attacks on clock-controlled
combiners with memory,”IEEE Transactions on Information Theory, Volume: 47 Issue: 3,
March 2001, 1032–1041.
[49] J. D. Golic, V. Bagini, and G. Morgari, “Linear cryptanalysis of bluetoouth stream cipher,” 
Advances in Cryptology –EUROCRYPT 2002, vol. 2332 of Lecture Notes in Computer
Science, pp. 238–255, Springer-Verlag, 2002.
[50] E. J. Groth, “Generation of binary sequences with controlable complexity,” IEEE Trans.
on Info. Theory, Vol. IT-17, May 1971.
