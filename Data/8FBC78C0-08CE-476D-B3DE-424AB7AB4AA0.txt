 II
(一) 中英文摘要 
摘要 
 
在計畫中，我們將計劃分為兩個部份:一部分用撰寫程式的方式完成車牌辨識系統；另
一部分是針對系統核心演算法設計成一個積體電路晶片，加速整個系統的執行速度。 
以動態空間扭曲演算法(Dynamic Space Warping Algorithm; DSW)為基礎，配合數位影
像處理的技術，發展出一套新的車牌辨識系統。一個完整的車牌辨識系統包含了三個部份：
取像系統、車牌定位、車牌號碼辨識，而動態空間扭曲演算法為此車牌辨識系統的核心部
份，用於辨識車牌號碼。動態空間扭曲演算法是一種具有壓縮與擴張性質的動態程式演算
法，適用於二維影像的比對。它的特點在於能夠藉著可控制的扭曲程度，有效解決影像辨
識的空間扭曲問題，例如：放大、縮小、旋轉、失真…等。為了增加動態空間扭曲演算法
的計算效能，我們提出一個使用鏈結串列的資料結構以減少時間複雜度及降低記憶體大小。 
動態空間扭曲演算法為動態程式，具有複雜的四維計算結構，其辨識能力佳。在影像
處理與影像辨識這領域上，大量且快速的計算是迫切需要的。針對此種需要大量運算及耗
時的計算問題，一個特殊用途積體電路晶片對於提升系統的計算效能有很大的幫助。本篇
論文提出一個計算動態空間扭曲演算法之超大型積體電路架構，此架構具有「單指令多資
料」(SIMD)特性，相當具有規則性，且只需少數的輸入及輸出，非常適合實現於超大型積
體電路。 
 
關鍵詞-車牌辨識、影像辨識、動態空間扭曲演算法、LPR、超大型積體電路架構 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 IV
(二) 目錄 
(一) 中英文摘要..................................................................................................................... II 
摘要......................................................................................................................................... II 
Abstract .................................................................................................................................. III 
(二) 目錄................................................................................................................................IV 
(三) 報告內容.......................................................................................................................... 1 
1. 前言.................................................................................................................................. 1 
2. 研究目的.......................................................................................................................... 1 
3. 文獻探討.......................................................................................................................... 1 
3.1 取像系統...................................................................................................................... 1 
3.2 車牌定位...................................................................................................................... 2 
3.3 車牌辨識...................................................................................................................... 2 
4. 車牌定位與字元切割...................................................................................................... 3 
4.1 影像擷取...................................................................................................................... 4 
4.2 邊緣偵測...................................................................................................................... 5 
4.3 二值化.......................................................................................................................... 7 
4.4 消除雜訊.................................................................................................................... 10 
4.5 車牌定位.................................................................................................................... 12 
4.6 字元切割.................................................................................................................... 15 
5. 動態空間扭曲演算法.................................................................................................... 15 
5.1 動態時間扭曲演算法................................................................................................ 15 
5.2 動態空間扭曲演算法................................................................................................ 16 
6. 軟體實驗結果................................................................................................................ 19 
6.1 參考樣本.................................................................................................................... 19 
6.2 實驗數據.................................................................................................................... 21 
7. 動態空間扭曲演算法之VLSI架構 .............................................................................. 23 
7.1 系統架構.................................................................................................................... 23 
7.2 資料－控制順序........................................................................................................ 29 
8. 動態空間扭曲演算法之VLSI晶片 .............................................................................. 31 
9. 結果與討論.................................................................................................................... 32 
(四) 參考文獻........................................................................................................................ 34 
(五) 計畫成果自評................................................................................................................ 37 
(六) 可供推廣之研發成果資料表........................................................................................ 38 
  
 
 
 
 
 
 
 2
另一種方式為增加感應設備，如紅外線遮斷感應器、壓力感應器、感應線圈等不同的方式，
一旦觸發了感應器，則馬上由取像設備拍照並加以辨識 
 
3.2 車牌定位 
運用在車牌定位方面的技術，基本上可以分為主要兩種：一種是以字元特徵直接在影
像中尋找類似字元的部份，再組合成車牌區域的方式；另一種則是根據整個車牌形狀、顏
色、高寬比例、灰階值分佈、邊線等特徵來尋找車牌區域的。常見的影像處理技術包含有：
模糊化法(Fuzzy)[4]、形態學法(Morphology)[5]、直方圖等化(Histogram Equalization)[6]、小
波轉換法(Wavelet Transform)[6]、Hough 轉換法(Hough Transform)、向量量化編碼法(Vector 
Quantization; VQ)[7]、四元樹表示法(Quadtree)。 
 
3.3 車牌辨識 
車牌號碼辨識包含兩個主要工作：字體的分離與字體的辨識。在過去有很多方法都成
功的將字體分離開來，例如：投影法(Projection) [8, 9]、形態學法(Morphology)[10, 11]、連
通成分法(Connected Components)[12]、斑點著色法(Blob Coloring)、寬鬆標記法(Relaxation 
Labeling)，每種方法都有它們自己的優點，相對也有其缺點。譬如說投影法必須依據車牌
的方位，形態學法則必須知道字體的大小，然而由於這兩種方法都必須要求一些預設環境，
所以並不適合做一個普遍性的應用。另外一種寬鬆標記法則因為其反覆運作，必須耗費非
常多的時間。 
字體辨識更是有著大量各式各樣演算法的相關報告，包括有類神經網路法(Artificial 
Neural Network)[10, 13, 14]、基因演算法(Genetic Algorithms)、模糊 c 平均值法(Fuzzy c-means; 
FCM)[12]、支援向量機器(Support Vector Machine; SVM)[14]、馬可夫過程(Markov 
Processes)[15]、有限狀態自動機(Finite State Automata Machine)。這些演算法大致上可以分
為反覆與非反覆兩種的結構。反復結構的演算法能夠得到較精確的結果，但是也相對提高
了時間複雜度。計畫當中，我們使用動態空間扭曲演算法(Dynamic Space Warping Algorithm; 
DSW) [16, 17, 18]作為車牌辨識系統的核心部份，其優點在於能夠有效解決影像辨識上的空
間扭曲問題，例如：放大、縮小、旋轉、失真…等。 
 
4.1 影像擷取 
首先我們經由數位相機拍攝一張 640×480 的車輛影像，其格式為 RGB 彩色模型(Color 
Model)，如圖 4.2 所示。影像中每一個 RGB 彩色像素(pixel)皆為 24 位元，分別以紅、綠、
藍三原色的數值來表示，而每種原色的數值範圍皆為 0~255。 
 
圖 4.2 擷取出的原始彩色車輛影像 
 
為了後續影像處理流程的方便性考量，我們將擷取出的彩色影像轉換成灰階影像，如
圖 4.3 所示。灰階影像中的每一個像素以亮度值(Luminance)來表示，其亮度值範圍亦為
0~255，而亮度值(Y)與 RGB 之間的關係如下列式子所示： 
Y = 0.299R + 0.587G + 0.114B 
 4
圖 4.4 影像的灰階剖面與一次微分 
 
影像處理上的一次微分是使用梯度向量的大小，而在座標(x, y)的梯度向量是以該點的
偏微分 xf ∂∂ 和 yf ∂∂ 來表示： 
⎥⎥
⎥⎥
⎦
⎤
⎢⎢
⎢⎢
⎣
⎡
∂
∂
∂
∂
=⎥⎦
⎤⎢⎣
⎡=∇
y
f
x
f
G
G
f
y
x
 
此向量的大小為： 
yxyx GGGGf +≈+=∇ 22  
 
常用在邊緣偵測的一次微分運算子有：羅伯特交叉梯度運算子(Roberts cross-gradient 
operators)、索貝爾運算子(Sobel operators)、Prewitt 運算子(Prewitt operators)，如表 4.1 所示。 
 
表 4.1 常用的邊緣運算子 
 
 
系統使用 Sobel 遮罩來偵測影像中的邊緣點，其計算方式如圖 4.5 所示。以影像中的點
(x, y)為中心點，將其周圍相鄰的八個點取出，與事先定義好的 3×3 遮罩係數作相對應乘積
之和，並設定其為新的 f ’(x, y)值： 
( ) ( ) (∑ ∑
−= −=
++=
1
1
1
1
,,,' )
s t
tysxftswyxf
 
 
最後將原圖的 f(x, y)以 f ’(x, y)取代，即完成一次的遮罩運算。圖 4.6 為經由 Sobel 遮罩運算
之後所呈現的車輛影像。 
 6
適當的門檻值以轉換灰階影像為黑白影像，為重要研究之ㄧ。 
 
 
固定門檻值的二值化 
以人工給定一個固定的門檻值(Threshold)，取出點(x, y)的灰階值 f ’(x, y)，執行二值化
流程如下所述： 
 8
⎩ else0,( ) ⎨
⎧ ≥= Threshold if255, f(x,y)x, yf
 
 
如此可以很簡單的將影像分離為黑白兩色。 
 
以灰階平均值求門檻值 
主要是將欲處理部份取灰階值平均，再以此值為二值化所需的臨界點，如此影像亮度如何
變化，二值化後都會有不錯的結果，其平均值求取公式為： 
( )∑ ∑−
=
−
=×
=
0 0
,
y x
yxf
NM
f
1 11 N M
 
 
f其中 f(x, y)為點(x, y)的灰階值，M×N 為欲處理影像的大小面積範圍， 為平均臨界值。 
 
以 Otsu 方法求門檻值 
對於二值化門檻的選擇，系統採用 Otsu 提出的統計式門檻決定法，我們以求取一個門
檻值為來舉例說明。假如 T*為最佳門檻值，我們利用 T*將一張影像的像素值分為兩個集合
C1 和 C2。在 C1 區內的任一像素，其灰階值 f(x, y)必須滿足 ( ) *0 Tx, yf ≤≤ ，而 C2 區內的任
一像素，其灰階值 f(x, y)則必須滿足 ( ) 2551*+ ≤ ≤x, yf
( )
T 。 
Otsu 提出兩個條件，只要其中之ㄧ成立時，即可以決定 T*的值：第一個條件為 T*值
滿足 C1 和 C2 之間的變異數為最大；而第二個條件為 T*值滿足 C1 內的變異數加上 C2 內的
變異數為最小。 
令影像的大小為 M×N 且灰階值個數為 0~255 共 256 個，則灰階值為 i 的機率可表示為： 
NM
niP i×=
255
 
 
其中 ni表示灰階值 i 出現在影像中的個數，且 i 的範圍介於0 ≤ ≤i 。依據機率原理可
知： 
T*的值。我們使用的方法是在 0~255 之間，一個一個將灰階值代入 式子內，等全部 256
個灰階值都代完了，再從最小的 中得到相對應的灰階值 T*，此 T*即為 Otsu 門檻值。圖
4.7 為利用 Otsu 方法所得到的黑白影像。 
2
Wσ
2
Wσ
 
 
圖 4.7 利用 Otsu 方法得到的黑白影像 
 
4.4 消除雜訊 
空間中的平滑濾波器主要是用於影像的預處理階段，其意義在於糢糊化與消除雜訊，
例如：抽取目標物體之前消除影像中的小細節；把直線或曲線上的小間隙連接起來等。平
滑濾波器可分為線性與非線性兩種，其中最廣為人知的均值濾波器(Average Filter)便是屬於
線性，而系統用於消除雜訊的中值濾波器(Median Filter)則屬於非線性。 
 
均值濾波器 
均值濾波器的定義為以座標(x, y)為中心點，並取出其周圍八個方向的相鄰點，將這九
個點的灰階值加總求平均來取代(x, y)的灰階值，圖 4.8 為一雜訊的例子。我們可以發現該 3
×3 子影像的中心點有一疑似雜訊的點，與遮罩係數作相對應乘積之合，可得 
(2+1+2+3+20+2+2+1+3)/9=4 的平均值。平均值 4 與原始值 20 比較，可以發現原始值已經
因為平滑法而被周圍的八個灰階值給稀釋掉了，如此程序便可以降低灰階圖片的雜訊程
度，而產生較為平滑的影像。 
 
 10
 
圖 4.9 經由中值濾波器轉換後的二值影像 
4.5 車牌定位 
對二值影像進行物體外部輪廓與內部輪廓追蹤，這個方法的好處是追蹤快速，每一個
畫面由左至右、由上至下，每一個像素最多只走一次，所有向素走完一次即可計算出所有
物體輪廓。本系統使用內部輪廓追蹤方式尋找車牌所在位置，如圖 4.10 所示。 
 
圖 4.10 內部邊框追蹤 
 
 
 12
0 x
y
0
123
4
5 6 7
4 3 2
5
6 7 0
1
4
3
2
5 6
7
01
432
5
670
1
4
3
2
56
7
0 1
pcode = 0
pcode = 1
pcode = 2
pcode = 3
pcode = 4
pcode = 5
pcode = 6
pcode = 7
xx
x x
 
圖 4.12 鏈碼表示與追蹤順序 
鏈碼的優點是非常適合用於偵測邊界的角、面積、中心點、邊界周長等等，常被使用
於物體形狀為基礎的樣式辨識，其優點是物體形狀轉換為連續的字串，形狀識別只需進行
文字比對即可，簡化比對搜尋的困難度。 
為了使 pcode 能對應到鏈碼的表示方式，利用下列式子將 pcode 轉換為 tcode 的鏈碼形式： 
    618, modulo ) 1    tcode(   tcode 1 ≤≤+= − iii  
    [ ]   tcodeoffsetx ici xx +=  
    [ ]   tcodeoffsety ici yy +=  
 
表 4.2 顯示了位移的轉換與每個 pcode 追蹤路徑的集合，其中 offsetx 與 offsety 分別為
x 軸與 y 軸的位移量。 
 
表 4.2 位移量與 tcode 集合 
 14
 
圖5.1 動態時間扭曲演算法之比對圖 
F = c1, c2, ..., ck-1, ck 
ck = (i, j) 
ck = (i, j)表示參考樣本的 Xi 與輸入樣本的 Yj 之比對。其中 D(C)= di,j，表示 Xi 與 Yj 的
距離，稱局部距離(Local Distance)，其中: 
di,j = | Xi - Yj | ; 
W 為扭曲距離(Warping Distance)常數，為搜尋區域(Search Range)的大小，其定義如下： 
| i – j | ≦ W , W = Warping Distanc 
 
 兩個序列的距離稱之為最小距離(Minimum Distance)，以 D(i, j)表示之。D(i, j)是以遞迴
方式計算而得。因此只要將每一點到下一點之方向記錄下來，即可找出最佳路徑。 
⎪
⎪⎨
⎧
+−−
+−
+−
= ij
ij
dCjiD
djiD
djiD
ofjiD
*)1,1(
)1,(
),1(
min_),(
⎩ ij
(1) 
C = 常數 
 
5.2 動態空間扭曲演算法 
兩張大小為 P×P 的二維影像 A 和 B，A = {aij | 0 ≦ i, j < P}，B ={bkl | 0 ≦ k, l < P}，i, j, 
k, l 必需符合下列條件: | i-k | ≦ W, | j- l | ≦ W，W 為扭曲距離常數。 
對兩張 P×P 的影像，扭曲距離常數 W 將產生一個 P×P×B×B 的四維局部距離圖，其
中 B=2×W+1。圖 5.2 即為 W=3。左圖該黑點對映到右圖方框內所有的點。 
 
 16
 
圖 5.3 DSW 辨識系統架構之方塊圖 
 
在影像處理與圖形辨識這個領域上，大量且快速的計算是必須的，因此我們使用鏈結
串列(Link List)來實現演算法，其演算法架構如圖 5.4 所示。 
 
…
…
…
…
…
…
 
圖 5.4 動態空間扭曲演算法之資料結構 
 
演算法是否易於以 VLSI 來實現，演算法的規則性是一項重要因素。較佳的規則性使電
路易於製作，電路也可能更有效率。DSW 演算法的原始定義中，最小累積距離 D(i,j,k,l)由
上述的 15 項算式求出。對其中兩項算式做以下修改： 
 
D(i,j-1,k-1,l) + dh(i,j,k-1,l) + dv(i,j-1,k,l) 
Æ D(i,j-1,k-1,l) + dh(i,j,k,l) + dv(i,j,k,l) – dijkl 
 
D(i-1,j,k,l-1) + dh(i-1,j,k,l) + dv(i,j,k,l-1) 
Æ D(i,j-1,k-1,l) + dh(i,j,k,l) + dv(i,j,k,l) – dijkl 
 
修改後三項含 dh(i,j,k,l)，三項含 dv(i,j,k,l)，九項含 dh(i,j,k,l) + dv(i,j,k,l) – dijkl，較修改前更
 18
 
為了簡易的保留影像外框邊緣，我們結合了二值化與邊緣偵測兩種演算法，自動化的
將影像邊緣與內容分離，表 6.2 為以像素值定義邊緣外框的真值表。像素值為 128 之像素，
表示為可以忽略的內部架構，因此我們設定它的局部距離為 0，如表 6.3 所示。表 6.4 為我
們所編輯的 25×50 的參考樣本資料庫。 
表 6.2 取外框邊緣之真值表 
0
0
0
0255
255
255
255
128
128
Binary Sobel
255
0
Edge
 
 
表 6.3 取外框邊緣後的局部距離 
 20
 
119 88 40 140 109 129 
 
40 125 157 107 132 85 
 
82 141 165 124 102 82 
 
96 114 124 86 101 102 
 
110 134 152 82 44 74 
 
101 153 183 104 89 43 
 
131 71 107 155 142 144 
 
101 140 169 90 50 94 
 
97 145 164 106 72 50 
 
106 146 172 118 82 88 
 
89 115 151 114 72 116 
 
72 81 118 99 56 88 
 
111 145 179 117 79 74 
 
130 134 177 123 82 123 
 
85 99 99 88 89 88 
 
73 120 117 76 76 48 
 
153 150 169 187 140 177 
 
68 77 106 90 50 85 
 
179 181 234 200 158 177 
 
171 168 213 179 147 173 
 22
 
圖 7.1 DSW 辨識系統架構之方塊圖 
 
局部距離單元(Local Distance Unit) 
計算測試樣本上之圖素差異，輸入樣本為 Xij 、參考樣本為 Ykl，其中 Xij, Ykl表示 
影像之圖素，Xij, Ykl={0, 1}，運算結果為局部距離值，以符號 dijkl 表示。如表 7.1，利用
Reference[1:0]此機制，用意在可忽略輸入之序列，可達到削減雜訊的目的，並且可以設定
我們比較關注的範圍，加強辨識效果。 
 
表 7.1 Local Distance 之真值表 
 
 
根據 Xij (Input)、Ykl (Reference)與 dijkl (Local Distance)三者之間的關係， 
我們可設計出局部距離單元之電路，圖 7.2。 
 
Local_Dis = (~Ref[1])&(Inp^Ref[0]) 
 
 24
 
 
圖 7.4 垂直 DTW 運算單元完整電路圖 
電路設計的架構其扭曲距離值(Warping Distance; W)為 3，故移位暫存器陣列是由 7 條
(2×W+1)移位暫存器所組成。如圖 7.5 所示，在移位暫存器陣列中，每一條垂直移位暫存器
為一 DTW 運算之結構，移位暫存器之目的是將先前已被算出、未來尚需被利用之資料儲
存起來，在計算時進行共享。單一移位暫存器是在計算單一行的區域距離值，而移位暫存
器陣列則是將單一行 1-D 直線比對的問題架構成 2-D 平面辨識的問題。此移位暫存器陣列
具有 SIMD(單一指令多資料)之結構，能減少 I/O pins，而且此移位暫存器陣列之架構相當
具有規則性，很適合以超大型積體電路來實現。 
選擇電路(Select Circuit)決定輸入、輸出資料。此選擇電路具有二階層化之結構， 
在每一階段之選擇器有階段性應用功能，詳細使用方法分述如下： 
Stage-1：選擇需被執行運算之移位暫存器。第一階段的選擇器是用來指定某一移
位暫存器之計算排程。選擇器透過控制訊號可決定適合的輸出訊號，以
配合計算的時序與時脈。 
Stage-2：將移位暫存器中的值進行初始化、處理邊界值。執行運算時，若收尋範
圍大於 Warp 時或是在不合法範圍，選擇器可透過.0 控制訊號將輸出設
定成最大值，如此一來便可解決計算過程中會有邊界值以及初始化的問
題。 
最小值單元(Minimum Unit for DTW; MUDTW)主要是在計算最小區域距離。由於是在垂直
DTW 運算單元內，所以計算之結果為垂直方向之最小區域距離。主要是配合著局部距離
值並且比較水平、垂直與斜線方向之輸入值，三者之中最小者即為垂直方向之最小區域距
離。。圖 7.5 為最小值單元之電路，主要由兩輸入八位元比較器(Comparator)、兩輸入八位
元加法器(Adder)、移位電路(Shift)與拓展電路(Extend)所組成。 
 
 
圖 7.5 最小值單元(MUDTW) 
 
 26
 
圖 7.7 水平運算單元完整電路圖 
 
最小距離單元(Minimum Distance Unit) 
計算累積之區域距離(dijkl、dv、dh)，運算結果為最小距離值，以符號 D(i, j, k, l)表示。
最小距離值用來表示兩影像的相似程度，最小距離值越小表示相似程度越大。輸入端為
dijkl、dv 與 dh，輸出端為 D(i,j,k,l)，如圖 7.8 所示。我們將個數為(P+1)×(2×W+1)×(2×W+1)
之 16 位元之暫存器組成移位暫存器陣列，作用是用來儲存先前計算出之最小距離值。根
據演算法之規則性，取移位暫存器陣列中固定之相對位置的輸出，即是相對於目前所要計
算之最小距離 D(i,j,k,l)之 15 項，輸出給最小值電路以計算 D(i, j, k, l)。選擇電路之中包含
15 個選擇器，15 個選擇器選擇來自 15 個方向之輸入值。最小值單元負責比較 D(i, j, k, l)
之 15 項最小值遞迴關係式，並將 15 項中之最小值輸出。 
 
 
 28
 
 
表 7.2 資料流-控制順序 
 
 
7.3 實驗結果 
第一部分的實驗，表 7.3，我們是採用數字與英文字母之間相互比對辨識，分別使用修
改前與修改後的演算法進行比對與比較。Input Pattern 與資料庫中的 Reference Pattern 之圖
片尺寸皆相同，Input Pattern 有三種圖片形式：正常、縮小與歪斜，目的在證明此演算法能
有效解決圖片扭曲的問題。 
第二部份的實驗，表 7.4、表 7.5，採用圖形與圖形之間相互比對辨識，Input Pattern
與 Reference Pattern 之圖片尺寸相同，採用修改過後之演算法，目的在證明此演算
法具有相當優良的辨識能力。 
 
 
 
 
 30
因 DSW 演算法相當的複雜，如果以 VLSI 來實現上章所提出的硬體架構，所實現之
DSW 晶片面積將相當的大，晶片面積約為 4500×4500(μm)2 。考量晶片之成本效益，我們
向 CIC 提出申請下線時，我們將最小距離單元移除，所需的運算以軟體來實現。如此 DSW 
晶片的面積為 2295×2294 (μm)2，節省晶片製作成本。表 8.1 為 DSW 晶片之規格。圖 8.1
為 DSW 佈局平面圖。 
表 8.1 測試樣本 
 
 
 
圖 8.1 DSW 佈局平面圖 
 
9. 結果與討論 
在計畫中，我們以動態空間扭曲演算法(Dynamic Space Warping Algorithm; DSW)為基
礎，配合數位影像處理的技術，發展出一套新的車牌辨識系統。動態空間扭曲演算法是一
種具有壓縮與擴張性質的動態程式演算法，適用於二維影像的比對。它的特點在於能夠藉
著可控制的扭曲程度，有效解決影像辨識的空間扭曲問題，例如：放大、縮小、旋轉、失
真…等，而我們經由實驗可以證明該演算法可有效解決車牌號碼的扭曲問題。 
在影像處理與圖形識別這個領域上，大量且快速的計算是必需的。由於動態空間扭曲演
算法具有特殊的四維計算結構，因此為了增加演算法的計算效能，我們使用鏈結串列型態
來取代陣列型態，並提出一個新的資料結構以減少時間複雜度與降低記憶體需求量。 
且又提出一個超大型積體電路架構，用來計算動態空間扭曲演算法，可有效加快動態空
間扭曲演算法之執行速度。本架構不僅具規則性，還具有 SIMD(單一指令多資料)之特性結
 32
 34
(四) 參考文獻 
 
[1] 陳翔傑，自動化車牌辨識系統設計，國立中央大學電機工程研究所，碩士論文，2005。 
[2] 李正裕，車牌辨識系統之研究，靜宜大學資訊管理學系研究所，碩士論文，2003。 
[3] S. L. Chang, L. S. Chen, Y. C. Chung, and S. W. Chen, “Automatic License Plate 
Recognition,” IEEE Transactions on Intelligent Transportation Systems, pp. 42-53, 2004. 
[4] 陳麗奾，在未設限環境下車牌的定位與辨識，國立臺灣師範大學資訊教育研究所，碩士
論文，2000。 
[5] 魏銪志，動態多標的車牌辨識系統之研究，元智大學資訊研究所，碩士論文，2000。 
[6] 王中山，使用小波轉換於車牌偵測，國立中山大學機械與機電工程研究所，碩士論文，
2004。 
[7] 賴睿敏，使用於車牌定位的 VQ 編碼方法，國立中山大學機械與機電工程研究所，碩士
論文，2007。 
[8] L. Salgado, J. M. Menendez, E. Rendon, and N. Garcia, “Automatic car plate detection and 
recognition through intelligent vision engineering,” in Proc. IEEE International Carnahan 
Conference on Security Technology, pp. 71-76, 1999. 
[9] H. A. Hegt, R. J. De la Haye, and N. A. Khan, “A high performance license plate recognition 
system,” in Proc. IEEE International Conference on Systems, Man, and Cybernetics, vol. 5, pp. 
4357-4362, 1998. 
[10] M. H. T. Brugge, J. H. Stevens, J. A. G. Nijhuis, and L. Spaanenburg, “License plate 
recognition using DTCNNs,” in Proc. IEEE International Workshop on Cellular Neural 
Networks and Their Applications Proceedings, pp. 212-217, 1998. 
[11] J. C. H. Poon, M. Ghadiali, G. M. T. Mao, and L. M. Sheung, “A robust vision system for 
vehicle license plate recognition using grey-scale morphology,” in Proc. IEEE International 
Symposium on Industrial Electronics, pp. 394-399, 1995. 
[12] J. A. G. Nijhuis, M. H. T. Brugge, K. A. Helmholt, J. P. W. Pluim, L. Spaanenburg, R. S. 
Venema, and M. A. Westenberg, “Car license plate recognition with neural networks and fuzzy 
logic,” in Proc. IEEE International Conference on Neural Networks, pp. 2232-2236, 1995. 
[13] R. Parisi, E. D. D. Claudio, G. Lucarelli, and G. Orlandi, “Car plate recognition by neural 
networks and image processing,” in Proc. IEEE International Symposium on Circuits and 
Systems, pp. 195-198, 1998. 
[14] K. K. Kim, K. I. Kim, J. B. Kim, and H. J. Kim, “Learning-based approach for license plate 
recognition,” in Proc. IEEE Signal Processing Society Workshop on Neural Networks, pp. 
614-623, 2000. 
[15] Y. Cui and Q. Huang, “Character extraction of license plates from video,” in Proc. IEEE 
Computer Society Conference on Computer Vision and Pattern Recognition, pp. 502-507, 
1997. 
[16] 張文謙, “A Data Path Chip for the Dynamic Space Warping Algorithm, ”1992. 
[17] 鄭 心 怡 , 碩 士 論 文 , “A Dynamic Object Warping Algorithm for 3D Object 
Recognition, ”2007. 
[18] 李易桓，延伸動態時間扭曲演算法及架構，國立臺灣海洋大學資訊工程研究所，碩士
論文，2008。 
[19] D. Terzopoulus and D. Metaxas, “Dynamic Models with Local and Gobal Deformations : 
Deformable Superquadrics,” PAMI, 12(7):703-714, 1991. 
[20] N. Weste, D. Burr, and B. Ackland, “Dynamic time warp pattern matching using an 
integrated multiprocessing array,” IEEE Trans. Comput., vol. C-32,pp. 731-744, Aug. 1983. 
[21] S. Furui, Digital speech processing, synthesis, and recognition, Marcel Dekker, Inc., 1989. 
 36
recognition using DTCNNs,” in Proc. IEEE Int. Workshop on Cellular Neural Networks and 
Their Applications, pp. 212-217, 1998. 
[43] K. K. Kim, K. I. Kim, J. B. Kim, and H. J. Kim, “Learning-based approach for license plate 
recognition,” in Proc. IEEE Signal Processing Society Workshop, vol. 2, pp. 614-623, 2000. 
[44] Y. Cui and Q. Huang, “Character extraction of license plates from video,” in Proc. IEEE 
Conf. Computer Vision and Pattern Recognition, pp. 502-507, 1997. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 38
(六) 可供推廣之研發成果資料表 
□ 可申請專利  ■ 可技術移轉                                      日期：98年10月27日 
國科會補助計畫 
計畫名稱：以動態空間扭曲演算法為基礎之車牌辯識系統 
計畫主持人：嚴茂旭         
計畫編號：NSC 96-2221-E-019-042-MY2 
學門領域：圖形辨識 
技術/創作名稱 動態空間扭曲演算法 
發明人/創作人 嚴茂旭、林翊、吳俊龍 
在車牌辨識系統中，我們應用動態空間扭曲演算法來當作整系
統的核心，動態空間扭曲演算法是一種具有壓縮與擴張性質的動態
程式演算法，適用於二維影像的比對。它的特點在於能夠藉著可控
制的扭曲程度，有效解決影像辨識的空間扭曲問題，例如：放大、
縮小、旋轉、失真…等。 
在影像處理與圖形識別這個領域上，大量且快速的計算是必需
的。動態空間扭曲演算法具有特殊的四維計算結構，其辨識能力
佳。針對此種需要大量運算及耗時的計算問題，一個特殊用途積體
電路晶片對於提升系統的計算效能有很大的幫助。所以提出一個計
算動態空間扭曲演算法之超大型積體電路架構，此架構具有「單指
令多資料」(SIMD)特性，相當具有規則性，且只需少數的輸入及輸
出，非常適合實現於超大型積體電路。 
技術說明 
In license plate recognition system, Dynamic Space Warping 
Algorithm is the core of the license plate recognition system using to 
recognize the license numbers. The Dynamic Space Warping Algorithm 
is a dynamic program algorithm which has characters of compression 
and expansion, and can suitably apply to two dimension image 
comparison. It can effective to solve the space warping problem in 
image recognition by its controllable warping distance, such as 
enlarging, shrinking, rotation, distortion, etc. 
In the fields of image processing and image recognizing, massive 
and fast computation are urgent needed. DSW, with a good recognition 
ability, contains a special structure in four dimensional complexity. To 
be aimed at the estimated problems which need massively to operate 
and slow, an ASIC (Application Specific Integrated Circuit) chip is 
very helpful to increase computation potency of the recognition 
system. In this thesis, we propose a VLSI architecture to compute the 
DSW Algorithm, which is well-suited for VLSI implementation 
because of the regular structure, the small number of input/output and 
the SIMD (Single Instruction stream Multiple Data stream) character. 
