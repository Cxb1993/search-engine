中文摘要 
本計劃的目的係發展即時企業合作的關鍵技術。 在本計劃中我們探討即時企業合作系統可
以協助企業利用主動式會議室進行有效率且有效用的會議。在本計劃中， 一個主動式會議
室指的是一個裝有主動式轉向式攝影機， 陣列麥克風， 投影機， 白板， 無線網路， 以
及其他感測器的智慧型空間。這些設備由一個主動式會議資訊系統所控制以提供智慧型功
能。主動式會議室有兩項主要的功能。首先， 它可以依據參加會議者之間的互動， 即時的
自動調整控制會議室之設備。例如， 當一個使用者將其筆記型電腦連接上投影機時， 主動
式會議資訊系統可以自動將投影機的輸入連接至使用者的電腦， 同時， 主動式會議資訊系
統亦可調整投影螢幕以及室內燈光以適合投影機的使用。 其次， 主動式會議資訊系統亦可
產生一個可搜尋的影音會議摘要以及會議紀錄。 另一個主要的功能為自動產生一個包含影
像， 音訊， 以及文字的簡明會議紀錄。 這樣的會議紀錄允許使用者可以在會後檢視會議
過程以及在討論的過程中相互交換資訊。 現有的影音會議紀錄系統儲存會議過程中所有的
影音資料， 如此，系統將需要大量的儲存媒體以儲存大量的影音資料， 使得系統的實用性
大幅降低。本計劃的主要工作為發展一個在無線網路環境中的資源管理系統。  
Abstract 
The goal of this project is to develop the enabling technologies for real-time enterprise 
collaboration. In particular, this project aims to demonstrate real-time enterprise collaboration that 
facilitates effective and efficient meetings with the help of an active meeting room. An active 
meeting room refers to an intelligent space equipped with active (pan) cameras, microphone arrays, 
video projector, projector screen, whiteboards, and wireless networks. These equipments are 
connected and managed by a central active meeting information system. The active meeting room 
is designed to provide two desirable features. First, it automatically adjusts the meeting equipments 
in real time based on the interactions among the participants in the room. For example, when a 
participant connects his/her laptop computer to the projector, it should be turned on and switch to 
the proper input. Meanwhile, the projector screen is lowered to be ready for use. Second, it 
automatically creates a searchable audiovisual record/summary of the meeting. The other desirable 
feature of the active meeting room is to automatically generate the concise meeting records 
including audio and video clips. An audiovisual recording of a meeting can allow the participants 
to review and the others to share the discussions during the meeting. Existing audio/video meeting 
facilities are impractical as they usually record everything during a meeting, which results in a 
huge audio/video collection. The focuses of this project is developing the resource allocation 
mechanism for sharing the wireless networking bandwidth.  
searchable audiovisual record/summary of the meeting.  
Figure 1.2 gives the block diagram for active meeting information systems.  
 
Figure 1.2: Block Diagram for Active Meeting Information System 
On the left, there are sensors including microphone arrays, video camera, and participant's ID 
reader. The sensors provide the inputs for the system to detect the interested events. On the right, 
there are meeting facilities including microphone arrays, projector, projector screen, etc. The 
system will control the facility to provide the comfortable room setting and generate the meeting 
records. In the AMIS, there are five major modules: object tracking modules, activity recognition 
module, rule evaluation module, meeting record generation module, and facility control module. 
The object racking module is responsible for tracking the participants in the meeting room using 
the data provided by the sensors and provides the tracking results to the activity recognition 
module. The activity recognition module then analyzes the sensor data and determines the activity 
in the room. The rule evaluation module makes use of the results from the activity recognition 
module and evaluates the given rules to see if certain actions should be triggered to change the 
room setting. On the other hand, the meeting record generation module also makes use of the 
activity information to generate indexed searchable meeting records. The generated meeting 
records are stored in an audio/video database. In the system, there are three databases: meeting 
schedule, context database, and behavior modeling database. The meeting schedule database stores 
the time, agenda, attendee, and meeting room location; the context database stores the room setting 
for different context. The behavior modeling database stores the models for participant's behaviors. 
The activity recognition module makes use of the information from the object tracking modules 
and three databases to recognize the participant's behaviors. The major goal of the project is 
developing the resource allocation mechanism for sharing the wireless networking bandwidth.  
devices. Three major challenges are the following.  
 
• Scalable communication architecture. Since it is crucial to the system performance to minimize 
video workload on wireless network, the conventional video streaming techniques in which a 
video stream is continuously forwarded to a back-end server for analysis, is not suitable due to 
heavy video workload on wireless network. In other words, when the number of sensors or 
cameras increases, the communication network will be overloaded. The communication 
architecture must be scalable for the large-scale DRE systems. In the publication and subscription 
model[40], it is assumed that the high bandwidth communication channels are available for 
reliable communication. However, in several real-world applications, it is not easy to acquire the 
high bandwidth communication. 
 
• Resource allocation/management. A real-time task in a large-scale DRE system may be executed 
independently by one device or collaboratively by numerous devices in the network. To guarantee 
the in-time completion of a real-time task, the system must allocate sufficient resources on all the 
collaborative devices of the task and the communication channel in the time interval during which 
the task is eligible to execute; otherwise, the task may miss its deadline. However, in large-scale 
DRE systems, the amount of available resources on the devices and the communication channel 
may not be constant for all times. For instance, a device can be turned off in some time intervals to 
increase its battery lifetime and the bandwidth of a communication channel decreases due to the 
interference. Hence, a resource allocation algorithm for large-scale DRE systems must adapt to 
such changes from time to time to adjust the resource allocation. 
 
• Collaborative real-time scheduling. In large-scale DRE systems, the system may execute 
individually the task on one device or collaboratively on multiple devices. As shown in Figure 1, 
the monitored objects may be tracked by either camera 2 or camera 3 at certain time interval. In 
traditional distributed real-time and embedded systems, it is assumed that each computing device 
independently schedules tasks executed on the device. However, in order to complete the tasks in 
the large-scale DRE systems, the system may need to collaboratively schedule tasks on different 
devices. Traditional real-time scheduling algorithms have to be enhanced to schedule tasks in such 
systems. 
 
This project is related to the earlier works in several research domains including load balancing for 
distributed and parallel systems, load balancing for wireless sensor networks, visual surveillance 
systems, and distributed real-time embedded systems. In the following, we summarize the 
significant results in these research domains. 
 
Load balancing for distributed and parallel systems A distributed or parallel system consists of 
 
Several heuristic algorithms are proposed to solve the on-line load balancing problems. Two 
major groups of the algorithms are greedy algorithms and linear-programming-rounding 
algorithms. The greedy algorithms assign an incoming job to the computing device with the least 
load. Azar and Epstein [3] showed the greedy algorithm, which is 2 − 1 N competitive, is optimal. 
Load balancing becomes more complicated in the restricted heterogeneous model. Azar et al. [2] 
proved that the greedy algorithm achieves a competitive ratio of N1/2 (1 + o(1)) and that no online 
algorithm can be better than O(pN)-competitive. In a follow-up paper, Azar et al. [2] proposed an 
algorithm which is O(pN)-competitive. For load balancing on related computing devices, i.e., 
computing devices may have different speeds, Azar et al. [4] presented a 20-competitive algorithm 
and proved that no online algorithm can have a competitive ratio smaller than 3−o(1) . Table 1 
summarizes known results for loading balancing when the tasks execute until the system is down 
and execute for limited duration [5].  
 
Lenstra et al. [31] presented that linear-programming-rounding algorithms for the unrelated 
parallel computing device model have an approximation ratio of 2. In addition, several approaches 
were proposed for different applications. One example is the computer networks. Such approaches 
can be categorized into two types: centralized and distributed. In the centralized approaches (e.g., 
[21, 33, 52]), the master computing device holds the collection of tasks and determines the task 
assignments for the other computing devices. Centralized load balancing algorithm requires 
synchronization which may incur an overhead and delay. However, due to the fact that the decision 
process has a high degree of the knowledge about the entire system, it tends to be more accurate. 
In distributed approaches such as [23, 36, 35, 32], computing device states are only exchanged 
among neighboring processors. There is no global synchronization. 
 
However, they will not, in general, provide an immediate restoration for load balance the process 
is iterated until the load balance can be achieved. Note that in distributed or parallel systems, the 
system may not be able to reject the service requests but should minimize the response time. In our 
applications, the system must guarantee the hard or soft real-time constraints for accepted tasks 
and may have to reject incoming service requests.  
Load balancing for wireless sensor networks. Traditionally, the resources management 
algorithms (e.g., see [22, 25, 38]) assume that the amount of available resources in a system is 
constant for all times; hence, the algorithms (re)allocate the resources only when the system 
workload changes. However, as exemplified in the above example, such an assumption may not 
always be valid. In large-scale DRE systems, the resource allocation must be adapted to not only 
the change of the system workload but also the change of available resources in the system. 
 
Visual surveillance systems Visual surveillance systems have been a hot topic in recent years [42, 
bandwidth communication. For example, in collaborative camera surveillance systems, it is 
desirable to communicate via wireless network. 
3. 研究方法 
中文摘要 
此一章節討論在主動式會議資訊系統無線網路頻寬的管理. 我們設計一個集中式的無線網
路資源管理以及分散式的排程架構. 在此一架構中, 將資源管理與排程的工作分散至系統
中的不同模組執行. 如此, 可以達到有效分配資源的目的, 但是, 可避免集中式排程所造
成的效能降低. 
 
In AMIS, sensor data streams and control messages are transmitted over wireless network to 
reduce installation overhead and to provide the flexibility for adjusting the system setting. 
However, due to the characteristics of radio transmission, the network bandwidth is highly affected 
by interference, and is not constant. The challenge is how to manage the bandwidth usage over 
time so that the received date are valid, providing that the available bandwidth changes over time. 
Hence, the protocol to manage the network bandwidth should have low run-time overhead so that 
it can be used repeatedly during the run-time.  
The bandwidth management will be implemented as a middleware on the application layer.  
 
Figure 3.1: Architecture for HOM node 
Although revising the MAC layer protocol may achieve better network bandwidth utilization, it 
requires modifying the network driver for every networked device in AMIS. To reduce the 
installation overhead and use commercial off-the-shelf hardware, the bandwidth management 
mechanism is designed as a middle-ware in AMIS. Figure 3.1 illustrates the architecture for HOM 
nodes. On each HOM node, there are one or multiple real-time message streams such as video 
image streams and location update message tasks. A middleware is placed between the AMIS and 
In the following, we first consider the case that there is only one flow for each node and consider 
the case that there are multiple flows on each node later.  
• Contention Window Computation  
When each node has no knowledge for the queue length on other nodes, it is difficult to 
determine an accurate size of contention windows. The proposed approach starts with an 
initial value for each node and recomputes the size of contention windows as time goes on. 
Note that there is not any node which computes the size of contention windows for all the 
nodes and the size of contention window is computed on every node.  
Label for node i, denoted by Li, is the ratio of the estimated throughput for node Ni to the 
weight for node Ni, i.e., . The estimated throughput is defined as follow.  
 
  
 
Where li and ti are the length and inter-arrival time of the transmitted packet and K is a 
constant.  
 
When a packet is sent, the node piggybacks label Li in packet header. Other nodes in the 
network extract the header to check the value of label Li The rationale for contention 
window computation is to maintain the value of labels on each node to be as close to a 
given threshold L as possible. When a packet is sent, the node piggy-backs the label Li in 
the packet header. The other node in the network extracts the header to check the value of 
label Li.  
If label Li piggy-backed in the packet header is smaller than that computed by the station, it 
means the station should increase the size of its CW. On the other hand, it should shorten 
its CW by a certain amount. The size of contention window change incrementally 
according to two parameters: Δl and adjustment ratio β.  
 
  
 
Where Lown is the label calculated by the node Ni and Lrcv is the label in packet header.  
The default size of the contention windows is the size of contention window defined in 
IEEE 802.11 standard, denoted by CW802.11. The following algorithm shows how the size of 
contention window changes for very observation.  
 (4.1)
Where t is a constant which is a smoothening factor.  
Although DWFQ modifies the MAC layer protocol to achieve fair sharing on network bandwidth 
and does not require a central node, DWFQ allocates network bandwidth with best efforts. There is 
no guarantee how much bandwidth is allocated to each node.  
 
Our work is also related to other works which are concerned with the bandwidth channels over 
wireless networks. [9] and [7] are concerned with stable bandwidth. [9] proposed the shortest time 
execution policy to transmit each packet before its deadline. [7] proposed the centralized earliest 
deadline first algorithm to provide real time scheduling On the other hand, [5], [10], and [1] are 
concerned with variable bandwidth. [5], [10] proposed the queuing based policy to minimize the 
overall delay. [1] proposed the TDMA policy to maximize the system throughput.  
 
3.2 Hierarchical Bandwidth Management  
In AMIS, we assume that there is one arbitrator for each wireless LAN to manage the network 
bandwidth for the devices in the same wireless LAN. The arbitrator can be statically selected by 
system administrator or dynamically elected by the election algorithm such as [8,4].  
 
Note that the available network bandwidth and system workload changes over time. Hence, the 
system must adjust the bandwidth allocation over time. In this project, we proposed a hierarchical 
bandwidth management scheme to reduce the overhead for dynamically allocating bandwidth. In 
the scheme, the LAN arbitrator is responsible for managing the network bandwidth for every 
network device in the wireless LAN. On the other hand, the middle-ware on each network device 
is responsible for managing network bandwidth for each network connections on the device.  
 
In the following, we present the bandwidth management mechanism on LAN arbitrator, called 
global network bandwidth allocation, and that on each network device, called local network 
bandwidth allocation middle-ware.  
Global network bandwidth allocation  
The LAN arbitrator uses weighted round robin (WRR) to schedule the message transmissions 
between the network devices and the access point.  
 
Each node Nk computes the total utilization Uk for the network flows on the node and requests the 
Figure 3.2 illustrates the allocation for time slots for node N1 and N2. Figure 3.3 illustrates the 
schedules for the four tasks.  
time
1
T4
T3
T2
0 4 10 14 20
0
0
0 4
10
14 14
0 98
12
time
time
time
time
T
 
 
Figure 3.3: Collaborative Surveillance Camera Systems 
The middle-ware has to consider the case that there is not enough bandwidth for all the nodes. 
Three heuristics are used to allocate time slots in this case.  
• Greedy Method: in this heuristic, the middle-ware chooses one node which has the largest 
.  
• Node Priority: in this heuristic, the middle-ware chooses one node which has the lowest 
priority.  
• Task Priority: in this heuristic, the middle-ware chooses one task which has the lowest 
priority.  
The middle-ware chooses one node or task to shorten their time slot allocation. The process stops 
till there are enough bandwidth for the nodes. In other words, .  
4. 結果與討論 
The goals of this project are to design the resource management algorithms for bandwidth management 
over wireless sensor networks and activity recognition algorithm to identify certain pre-defined activities. 
In the project, we prototype an active meeting room to demonstrate our algorithms. For the future work, 
we would like to continue enhacing the functions for the active meeting room systems. One future work 
Proceedings of the 11th IEEE International Requirements Engineering Conference (RE’03), pages 87 – 94, 
Monterey Bay, CA USA, 2003.  
[14] C.-S. Shih, J. W.-S. Liu, and I. K. Cheong. Scheduling jobs with multiple feasible intervals. In 
Proceedings of the International Conference on Real-Time and Embedded Computing Systems and 
Applications (RTCSA), pages 213 – 231, Tainan, Taiwan, 2003. 
[15] C.-S. Shih, L. Sha, and J. W.-S. Liu. Task scheduling with variable deadlines. In Proceedings of the 
IEEE Real-Time Technology and Application Symposium, pages 120 – 122, Taipei, Taiwan, May 2001. 
[16] C.-S. Shih, S. Gopalakrishnan, P. Ganti, M. Caccamo, and L. Sha. Scheduling real-time dwells using 
tasks with synthetic periods. In Proceedings of the IEEE Real-Time Systems Symposium, 2003. 
[17] C.-S. Shih, S. Gopalakrishnan, P. Ganti, M. Caccamo, and L. Sha. Template-based real-time dwell 
scheduling with energy constraint. In Proceedings of the IEEE Real-Time and Embedded Technology and 
Application Symposium, 2003. 
[18] C.-S. Shih, S. Gopalakrishnan, P. Ganti, M. Caccamo, and L. Sha. Synthesizing task periods for dwells 
in multi-function phased array radars. In Proceedings of the IEEE Radar Conference, 2004. [19] C. Wren, 
A. Azarbayejani, T. Darrell, and A. Pentland. Pfinder: Real-time tracking of the human body. IEEE 
Transactions on PAMI, 1997. 
[20] Calvin K. H. Chiu and K.-Y. Lam. Supporting real-time active visual surveillance in wireless network. 
In Joint IEEE International Workshop on Visual Surveillance & Performance Evaluation of Tracking and 
Surveillance, 2003. 
[21] Y. Chow andW. Kohler. Models for dynamic load balancing in a heterogeneous multiple processor 
system. IEEE Transactions on Computers, 28(5):334–361, 1979. 
[22] D. Seto, J.P. Lehoczky, L. Sha, and K.G. Shin. On task schedulability in real-time control system. In 
Proceedings of the IEEE Real-Time Systems Symposium, 1996. 
[23] D. L. Eager, E. D. Lazowska, and J. Zahorjan. Adaptive load sharing in homogeneous distributed 
systems. IEEE Transactions on Software Engineering, 12(5):622–675, 1986. 
[24] C. C. for Information Technology Security Evaluation (CCITSE). http://csrc.nist.gov/cc/.  
[25] G. Buttazzo, G. Lipari, M. Caccamo, and L. Abeni. Elastic scheduling for flexible workload 
management. IEEE Transactions on computers, 51(3), March 2002. 
[26] G. Lipari and S. Baruah. A hierarchical extension to the constant bandwidth server framework. In 
Proceedings of the IEEE Real-Time Technology and Application Symposium, pages 26–35, May 2001. 
[27] I. Shin and I. Lee. Periodic resource model for compositional real-time guarantees. In Proceedings of 
the IEEE Real-Time Systems Symposium, 2003. 
[28] J. Barron, D. Fleet, and S. Beauchemin. Performance of optical flow techniques. International Journal 
of Computer Vision, 12(1):42 – 77, 1994. 
[29] J. H. Piater and J. L. Crowley. Multi-modal tracking of interacting targets using Gaussian 
approximations. In Second IEEE International Workshop on Performance Evaluation of Tracking and 
Surveillance, 2001. 
[30] J. H. Piater, S. Richetto, and J. L. Crowley. Event-based activity analysis in live video using a generic 
