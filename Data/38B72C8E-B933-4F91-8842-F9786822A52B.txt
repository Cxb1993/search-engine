II 
 
中文摘要 
應用於資訊擷取之排名函數學習法(Learning to rank for information retrieval)是一個新興的研究領
域，對於搜尋引擎與資訊擷取而言，是非常重要的一種應用。在針對使用者的搜尋條件(query)進行分
析之後，如何將相關的文件依相關性調整順序，讓使用者更有效率的得到其真正期望的結果，是一個
很重要的研究課題。傳統的資料擷取方法強調搜尋結果中的文件是否相關，而現在我們可以利用排名
函數將相關的文件以更容易理解的排名方式依序排列。 
演化式計算在機器學習領域中漸漸普遍。此種方法借用了自然界生物演化的概念，模擬各種演化
機制，搭配一個設計良好的適應度函數，在一段時間的「演化」過程後，即有可能由一群適應度低的
可能解中，產生出表現極佳的解。 
我們在過去的研究中，專注於改善基因規劃法的效率與穩定度，在這個研究計劃中，我們將利用
基因規劃法來產生排名函式。利用函數做為資料項目與查詢之相關度判斷，依函數值的差異來排序擷
取出的文件。我們打算加上多種不同的相關度評估函數與特徵，不同的相關度評估函數強調資料不同
面相的性質，而特徵的處理則可以減少運算複雜度，提高效率。本計劃將利用多族群基因規劃法，整
合由不同族群所產生出來的結果，再以整合的方式，產生出一個排名函數。 
關鍵詞: 排名函數、文件處理、資訊擷取、基因規劃法、演化式計算、機器學習 
1 
 
前言 
許多研究人員都專注在「如何從大量文件的資料庫中擷取出相關資料」的問題上，傳統的資料
擷取乃是利用文件的特性，例如字詞頻率、單字詞性與字詞位置等等，試圖擷取出與使用者之查詢具
有相關性的文件。此類研究主題最常見的應用是網頁搜尋引擎(web search engine)，當我們從網路上以
爬蟲程式(web crawler)取得網頁，經由斷詞切字等分析處理後，將會形成一個相當龐大的文件資訊資
料庫，如何在如此龐大的資料庫中，以使用者所下的查詢，快速且準確的搜尋到對使用者真正有幫助
的文件，是一種非常具有挑戰性的研究。然而，隨著資訊擷取技術的進步，我們現在所致力的方向己
經不只是找出相關的文件，而是要找出相關文件的先後順序，讓使用者可以更有效率的存取高相關性
的文件。 
用於資訊擷取之排名學習法(Learning to rank for information retrieval，L4IR)是一個新興的研究領
域，主要是利用統計或機器學習方法(Machine Learning)來學習出適當的排名函數，再依此函數值來做
為文件的相關程度，進而做為文件排序的依據。 
演化式計算是一門新興的機器學習領域分支，它模擬了現實世界中生物的演化機制，將初始可
能解集合為一個族群，此族群中之可能解稱之為個體。經由模擬生物演化的方式諸如交配與突變，原
有之可能解將藉由這些方式產生新的可能解(稱為子代)，而原族群中的個體則由子代所取代，此一過
程稱之為一個世代。在經過一定數量的世代後，族群中的個體表現將會比初始可能解要來得優秀，當
滿足停止條件，例如世代數己滿足或是個體表現己超越門檻值，則演化動作即可中止，並輸出最佳個
體，做為此演化問題的解。 
研究目的 
本計劃的主要目的是發展一種利用多層式基因規劃法產生排名函式的模型，以基因歸劃法的優
秀學習能力，透過訓練樣本給予演化學習後，得出符合需求的排名函式。而我們將採用多層式架構之
基因歸劃法，這種方法所需要使用的時間較有效率。對於特徵數量極大的資料集合，我們將利用
LAGEP多族群的特性來避免具代表性的特徵被忽略的情形。 
在本計劃中，我們將考慮影響排名函數的兩個主要關鍵：特徵的影響與排名函數的評估。第一，
文件應用資訊擷取技術所能擷取出的特徵很多，然而，並非所有的特徵都具有相同的重要性或影響
力，我們的目的之一即是尋找出特徵與排名函數之間的關係。其次，排名函數的評估方法有許多種，
如MAP與 NDCG等等，不同的族群利用不同的評估方法進行演化，最後再進行整合工程，我們相信
如此可以產生表現更好的排名函數。而我們也將公佈原始碼，讓對此有興趣的業界或學界人員可以採
用此研究成果，應用到搜尋引擎、知識搜索、資訊擷取與知識整合等領域。 
文獻探討 
典型的 Learning to rank for information retrieval流程如圖一所示。考慮查詢集合 Q與文件集合 D：
{ }1, , QQ q q=  ， { }1, , DD d d=  ，訓練集合 ( ),i jq d 是由 Q與 D所組成，即 ( ),i jq d Q D∈ × 。 
Labeler的動作是判定 qi與 dj的相關性，依據演算法的不同，相關性可以是類別名稱、相關係數
或是排名順序等等。常見的相關性判定如下： 
1. Binary：Relevant或 irrelevant 
2. Multi-level ratings：Definitely relevant、possibly relevant或 non-relevant 
3. Pair-wise preferences：文件 dA的相關性高於文件 dB 
4. Order：針對某查詢 q，文件 d在所有文件的的排名位置是 k 
5. Score：以數值表示文件 d與查詢 q的相關程度 
3 
 
表一：排名函數學習法回顧 
Point-wise Pair-wise List-wise 
Prank 
MCRank 
Ranking SVM 
RankNet 
FRank 
RankGP  
我們接著介紹常用的評估方法與公式。考慮查詢 qi與某排名函數依據 qi所擷取出的所有文件，
我們可以計算出前 n名的文件之精確度 Precision at position n (P@n)為 
P@n = { }# relevant documents in top  resultsn
n
。 
而 n個不同的位置所得出之平均精確度 Average precision (AP)則是 
AP = 
( )@
# of relevant documents
n
P n rel n×∑ ，其中 ( ) 1 -th document is relevant
0 otherwise
n
rel n = 

。 
考慮|Q|個不同的查詢，則這些查詢的平均精確度則可由Mean Average Precision (MAP) 來求得： 
MAP = | |
 w.r.t. 
| |
iQ
AP q
Q
∑
。 
另一個常用的評估方式為 Normalized Discount Cumulative Gain (NDCG) [Jarvelin 2002]，第 n個
位置的 NDCG可表示為 NDCG@n： 
NDCG@n = 
( )
( )1 2
2 1
log 1
r j
n
m j
Z
j=
−
+∑ ， 
其中 Zm是用於一般化的常數，目的是讓最佳的 NDCG值正好為 1，此數值可由 DCG＠n的最大值之
倒數求得；而 r(j)是文件 dj的相關度判定量化值(gain)。 
多層式基因規劃法 
演化式計算(Evolutionary Computation)在近年發展得相當迅速，己經成為機器學習領域的一個重
要研究方向。演化式計算模擬現實世界的生物演化機制，將一定數量之可能解視為族群(population)，
而每一個可能解則稱為個體(individual)。族群中的個體將會利用突變或交配來產生新的個體，新個體
將會改變原族群，而此新族群中將會有個體具有比原族群更好的合適度(fitness value)。 
演化式計算的主要分支為基因演算法Genetic algorithm [Goldberg 1989]，與基因規劃法Genetic 
programming [Koza 1992; Fogel 1995; Koza 1994; Koza 1996; Banzhaf 1998; Koza 1999; Koza 2003]。基
因規劃法依循演化式計算的精神，將一定數量之可能解（即為個體，individual）集合為一個族群
（population）並對其模擬諸如突變與交配等演化操作以產生新的個體；每一次新族群取代舊族群的
動作稱之為一個世代（generation）；最後在族群中挑選適合度（fitness）最高的個體做為輸出。在深
入研究單族群基因規劃法多年之後，研究人員開始探討多族群基因規劃法[Fogel 1995; Oussaidene 
1997; Brameier 1999; Fernández 2000; Brameier 2001; Fernández 2003]的可能性。我們從2007年時開始
發表相關研究成果[Lin 2005; Lin 2007; Lin 2008]，我們除了應用多族群的概念，更導入類神經網路的
多層式架構。 
多層式基因規劃法 Layered multi-population genetic programming, LAGEP 
LAGEP[Lin 2007; Yeh 2007; Lin 2008] 考量了傳統基因規劃法的優缺點，類神經網路的架構也被
考量在內，每一層可視為一個多族群基因規劃法的模型，而每一層執行之後，皆會產生一個函數集合，
我們並不把這個集合直接做為最後訓練完成的函數，而是利用函數來計算訓練樣本，將計算後的值取
代原本的特徵，建構出新的訓練樣本，新樣本的特徵值即為原特徵值的轉換或映射，而經由一連串的
轉換之後，訓練樣本的合適度將會提高許多；LAGEP的架構如圖三所示。 
 
5 
 
 
圖三：LAGEP的架構示意圖 
[Brameier 1999] M. Brameier, F. Hoffmann, P. Nordin, W. Banzhaf, and F. Francone, Parallel machine 
code genetic programming, in Proceedings of the Genetic and Evolutionary Computation Conference, 
vol. 2, Orlando, Florida, USA. Morgan Kaufmann, p. 1228, 13-17 July 1999 
[Brameier 2001] M. Brameier and W. Banzhaf, A comparison of linear genetic programming and neural 
networks in medical data mining, IEEE Transactions on Evolutionary Computation, vol. 5, pp. 17–26, 
February 2001 
[Burges 2005] Burges, C., Shaked, T., Renshaw, E., Lazier, A., Deeds, M., Hamilton, N., and Hullender, G. 
Learning to Rank using Gradient Descent, Proceedings of the 22th International Conference on 
Machine Learning, Bonn, Germany, 2005 
[Cao 2007] Cao, Z., Qin, T., Liu, T. Y., Tsai, M. F., and Li, H. Learning to rank: From pairwise approach to 
listwise approach. In Proceedings of the 24th International Conference on Machine Learning (Corvallis, 
OR. 2007) 
[Cao 2006] Cao, Y. B., Xu, J., Liu, T. Y., Li, H., Huang, Y. L., and Hon, H. W. Adaptive ranking SVM to 
document retrieval. In Proceedings of the 29th Annual International ACM SIGIR Conference on 
Research and Development in Information Retrieval (Seattle, WA. 2006) 
[Crammer 2002] Crammer, K., and Singer, Y. Pranking with Ranking, Advances in Neural Information 
Processing System, 14: 641-647, 2002 
[Fernández 2000] F. Fernández, M. Tomassini, and J. M. Sanchez, Experimental study of isolated 
T1 
Population 1 Population 2 Population n1 
A set of best individuals  
Evolve with T1 
Evaluate function values with T1 進行轉換的計算程序 
Layer 1 
T2 
Population 1 Population 2 Population n2 
A set of best individuals  
Evolve with T2 
TL 
Population 1 
Single function 
Evolve with TL 
Training result 
Layer 2 
Layer L 
分散式計算環境 
分散式計算環境 
7 
 
[Yeh 2007] Jen-Yuan Yeh, Jung-Yi Lin, Hao-Ren Ke, Wei-Pang Yang, Learning to Rank for Information 
Retrieval Using Genetic Programming, SIGIR workshop on learning to rank for information retrieval 
(LR4IR-2007), Amsterdam, Netherlands, July 27, 2007. 
研究方法 
本研究計劃將嘗試以 LAGEP來產生分類函數，並將修改 LAGEP的結構，利用 LAGEP的族群
獨立性，不同的族群使用不同的資料特徵與合適度函數來進行演化，再以整合的方式產生排名函數。
綜合上述研究背景，我們可以知道 LAGEP具有許多其他演算法所沒有的優點，除了速度上的改良，
準確率也極高。我們在本計劃中將會以 LAGEP 現有的技術做為基礎。LAGEP 使用多層式架構以產
生新特徵值，並利用新特徵值進行演化，此種概念之示意圖如圖四所示。 
 
(a) 原始特徵空間，不同類別資料不容易分別；(b) 經由轉換後的資料，各類別資料較為集中在同一區域；(c) 最後
轉換結果，不同類別資料可輕易分別； 
圖四：LAGEP對特徵進行轉換示意圖 
 
LAGEP中的每一層都可以使用不同數量的族群。個體數量（族群大小）之決定是依據可花費時
間與對結果的要求之取捨。個體數量多，表示可在空間中使用較多的起始值進行搜尋；個體數量少，
表示所需要的計算量較小，可以較快得出結果。 
個體的大小影響了可能解的表達能力，因為個體預設是以二元樹做為資料結構，例如一個預設
樹深為 10的二元樹，其所能包含的節點數目最大值為 211-1個，即為 2095個節點；樹葉即為每個特
徵，可以知道最大樹葉數為 210=1024，也就是同時可以處理的最大不同特徵數為 1024。LAGEP的優
點之一是可以將每一層的個體做合併的動作，最後一層輸出之解答可以還原回一極長之函數。 
由排名函數產生法的回顧中，我們發現絕大多數的排名函數都是非線性的。在此計劃中，我們
將採用不同的運算元來產生非線性排名函數。進行非線性判別式之演化將需要較複雜的處理，因為用
以表示個體之資料結構將不會是單純的二元樹。我們將在本計劃中嘗試各種不同的非線性運算子以達
到高效率的目標，例如 sin、cos、exp與 log等等。 
合適度之計算方式關係到最後所輸出之分類函數品質。我們將會利用 NDCG 與 MAP 來做為合
適度計算，在這一年的計劃中，我們打算分開使用這兩種評估方法，可做為彼此效能的對照。 
我們將 LAGEP應用於排名函數的演算法詳列如下： 
首先定義以下集合： 
query集合： { }1, , QQ q q=  ，文件集合： { }1, , DD d d=   
特徵集合： { }1, , FF f f=  ，相關性判定集合： { }relevant, , non-relevantY =   
令 ( ),i jt q d Q D= ∈ × 為查詢與文件的配對(query-document pair)，訓練集合 T可以定義為 
(b) (c) (a) 
class 1 class 2 
9 
 
我們使用LETOR 4.0 MQ2008進行實驗，並與其它主要方法進行比較[1] 。LETOR 4.0 MQ2008的
相關資訊如表 二所示。LETOR 4.0 MQ2008資料集合提供了分割為5個fold的版本，每個fold己經分為
training set、validation set與test set。我們直接使用此版本進行實驗，使用的相關設定如表 三所示。我
們使用5個fold進行10次實驗，共計得出50組實驗數據。 
在實驗中，我們所使用的fitness function如下： 
fitness of an individual = 
( )
10
1
NDCG[ ] 10
10
i
i i
=
× −∑
 
如此設計fitness function之動機為強調排名較前結果，使用權重的方式可以改善單獨使用平均NDCG
的缺點。 
表 四所呈現的數據為test set所計算出之平均MAP與平均NDCG。我們同時在表 四列出LETOR 
4.0 所提供之baseline，以進行公平之比較。我們發現，與同為non-linear的RankBoost互相比較時，
LAGEP所得到之平均MAP與平均NDCG均得到較好的表現。 
因所得出之ranking function數量極多，我們選擇其中一組實驗結果，並將其列於圖 六。由圖 六
中可以發現，使用LAGEP所得出之排名函數相當複雜，產生此類複雜函數正是LAGEP的特性。 
 
表 二 LETOR 4.0 MQ2008 資料集 
Number of features 46 
Number of documents 15211 
Number of queries 784 
Documents per query 19 
 
表 三 實驗參數 
Parameter Value 
Number of layers 1 
Number of populations 1 
Population size 2000 
Generations 250 
Operators +, −, ×, /, sin, cos, natural log 
 
 
表 四 實驗結果 
Methodology LAGEP RankBoost AdaRank- 
NDCG 
AdaRank- 
MAP 
ListNet RankSVM- 
Struct 
Average MAP 0.478916 0.4775 0.4824 0.4764 0.4775 0.46956 
Average NDCG 0.488168 0.4850 0.4950 0.4915 0.4914 0.4832 
 
 1 
國科會補助專題研究計畫項下出席國際學術會議心得報告 
                                     日期：   年   月   日 
                                 
本計劃未支用出國差旅費。 
 
計畫編號 NSC 98－2221－E－231－022－ 
計畫名稱 使用多層式多族群基因規劃法與新的訓練方式架構分類器之研究 
出國人員
姓名 
 
服務機構
及職稱 
 
會議時間 
 年 月 日至 
 年 月 日 
會議地點  
會議名稱 
(中文) 
(英文) 
發表論文
題目 
(中文) 
(英文) 
99 年度專題研究計畫研究成果彙整表 
計畫主持人：林忠億 計畫編號：99-2221-E-231-028- 
計畫名稱：應用遺傳規劃法於排名函數之產生與評估 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
研討會論文己投
稿，正在審查中。
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
