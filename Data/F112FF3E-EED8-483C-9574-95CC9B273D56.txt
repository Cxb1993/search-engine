2 
 
List of Figures  
Figure 1. The scenario of Telematics services. .............................................. 5 
Figure 2. The messaging overhead of using TTS and SZBS in our proposed 
region server decision mechanism. ...................................................... 15 
 
List of Tables 
 
Table 1. The switch time of using TTS and SZBS ....................................... 16 
Table 2. The switch time of using the MLGG-based region server decision 
Scheme ................................................................................................. 16 
 
  
4 
 
2. Goal 
With the maturation of wireless networks and GPS technologies, Telematics 
service is becoming a new rising and popular network service and application. In [17], 
Chen et al. used worldwide interoperability for microwave access (WiMAX) to 
promote the Telematics services. In [18], Fuchs et al. discussed the development of 
Telematics applications to increase road safety and road efficiency. For developing a 
Telematics services system, the Telematics Forum designed a Global Telematics 
Protocol (GTP) [5] for drivers to find their demanded services on the road. Besides, a 
GTP-liked architecture, Next Generation Telematics Protocol (NGTP) [6], was 
proposed by BMW and its collaborative Telematics service providers, Connexis and 
WirelessCar. The same purpose of GTP and NGTP is to let vehicles and users be able 
to access Telematics services.  
 
6 
 
belongs to the centralized architecture. In other words, when the requests from clients 
are tremendous, Contact Center may become a bottleneck and thus largely decrease 
the performance of service discovery. 
To overcome GTP's and NGTP's dilemma and provide a suitable open service 
discovery system for mobile users in vehicles, a centralized vehicular Peer-to-Peer 
Telematics service platform was developed in [8]. However, the centralized server 
proposed in [8] is not scalable and has limited capability to handle a large number of 
requests from mobile users.  In this project, an open Telematics service discovery 
mechanism called Distributed Telematics Peer-to-Peer (D-TP2P) based on the 
P2P-like paradigm is proposed for a larger scale of mobile users. The reasons for 
proposing a distributed architecture are that overall computing load can be shared by 
distributed region servers, and the communication load between the server and service 
providers can also be decreased through the use of distributed servers. 
The execution scenario of D-TP2P is depicted in 錯誤! 找不到參照來源。-(b). 
Each region has a region server. Service providers located in region x can publish 
their services' information to region x's region server. A mobile user sends a service 
request, which is associated with some preliminary selection criteria to region server i 
when the mobile user is in region i. Next, the region server i replies a list of candidate 
service providers to the corresponding mobile user. Thereafter, the mobile user 
contacts with the candidate service providers directly based on his enhanced selection 
criteria. After the communication interaction between the mobile user and candidate 
service providers, the mobile user selects and subscribes the most suitable service 
provider(s). In this way, instead of using the pure client-server system paradigm, a 
P2P-liked distributed search paradigm is adopted in the D-TP2P system to make the 
system more reliable and scalable. 
8 
 
3. Researches 
In this Section, we will survey related investigations and describe our proposed 
methods with respect to the following topics: (i) Region server decision mechanism 
using the messaging based approach, (ii) Region server decision mechanism using the 
map based approach and (iii) Region Server Handoff Mechanism. 
 
3.1 Preliminary 
In our proposed P2P-like Telematics service discovery paradigm, each region X is 
associated with a region server that maintains the service information of those service 
providers residing in region X. In order to share the loading of requests from a large 
number of mobile users, each region server is in charge of the searching requests from 
its region. In our D-TP2P system, two scenarios for mobile users to search for service 
providers when they are traveling on the road are "local search" and "remote search". 
"Local search" means that the requester searches for service providers in his current 
region. "Remote search" means that the requester searches for remote service 
providers that are located in remote regions. For example, referring to 錯誤! 找不到
參照來源。, there is an accident occurred on the road when User A passes through, in 
which case injured people need User A to acquire ambulances to take them to the 
hospital. In this case, User A sends a request message to his current region server x 
and searches for nearby hospitals located in region x. In 錯誤! 找不到參照來源。, 
User B is driving to some Point of Interest (POIs) in region y for holiday. Although 
User B is in region x, he still should be able to search for available services such as 
"tourist guide service", "entertainment related services" (playing golf, riding a horse 
and shipping) and "parking service" in region y, which is located remotely from the 
viewpoint of region x. Through the cooperation of User B's current region server x 
with remote region server y, the remote search can be achieved. 
10 
 
In the messaging based scheme, the mobile user sends messages to ask which 
region he is currently in. According to the ways of triggering messages sending, two 
methods that can be used are as follows: 
(1) Timer-triggered: a mobile user sends a hello message to the current region 
server periodically. The timer-triggered scheme (TTS) is widely used in several 
protocols, applications and systems. Mobile users need to send hello messages and 
wait for the decision results replied from region servers in a specific period of time. 
Thus, the sending frequency directly affects the accuracy of the decision scheme. 
Higher frequency causes larger computing cost, and lower frequency makes the 
decision scheme inaccurate.  
(2) Event-triggered: To release the high computing overhead and increase the 
accuracy of the decision scheme, an event-triggered scheme can be adopted for region 
server decision. Using this scheme, the "event" can trigger the mobile user to send 
hello messages, and the region server only handles the necessary computing to let 
mobile users have enough information to make decisions by themselves. 
In this Section, we design an event-triggered region server decision scheme called 
Safe-Zone Based Scheme (SZBS), which consists of three phases and is depicted in 
Alogrithm 1, to let a mobile user be able to connect to the correct region server. Three 
phases, which are initialization phase, server-side prediction phase, and client-side 
decision phase, of the SZBS are as follows. 
(i) Initialization phase: when a mobile user starts to drive the vehicle and launch the 
D-TP2P application, the mobile user sends a request to the tracker server to ask which 
region server is his current region server. After receiving the response from the tracker 
server, the mobile user can connect to his initially current region server. 
(ii) Server-side prediction phase: In this phase, in order to let the region server 
know which mobile users are within its region, each mobile user sends a hello 
12 
 
mobile user. In the MLGG-based region server decision scheme, the map of the 
administered region of each region server is partitioned into several square grids after 
multi-layering division. When the mobile user receives the MLGG-based map from 
his current region server, the mobile user can use it to know which region he currently 
stays in.   
 
 Region Server Handoff Scheme 
Step 1: 
 In the first step, the mobile user sends a request to his current region server and 
waits for the response.  
Step 2: When the mobile user is aware of his leaving, he can find his new region 
server using the region server decision schemes.  
Step 3: 
 After successfully connecting to the new region server, the mobile user sends a 
termination message which contains the identifier and connection address of the new 
region server to the previous region server. While the previous region server receives 
the termination message from the mobile user, the previous region server generates 
the "SessionId" and sends it to the mobile user such that the mobile user can directly 
use it to request for the search results from his current (new) region server. The new 
region server needs to take an additional action to check whether it is performing a 
remote and intra-region search for the mobile user or not.  
Step 4: 
 The mobile user can keep moving and waiting for the response from his current 
region server. If the old region server completes the searching, search results will be 
forwarded to the mobile user's current region server, which needs to return the search 
results back to the mobile user. 
14 
 
4. Experiment results and discussion 
In this Section, we discuss the performance comparison of the three proposed 
schemes which can be adopted in the region server decision mechanism: (1) TTS, 
(2) SZBS and (3) MLGG-based region server decision schemes. At first, we discuss 
the messaging overhead caused by TTS and SZBS, respectively. Then we compare 
the accuracy of three types of schemes adopted in the region server decision 
mechanism.  
A. Evaluation of Messaging Overhead 
For the region server decision mechanism, the messaging overhead is caused 
when the mobile user applies the messaging based approach; on the other hand, 
when the mobile user uses the map based approach, the messaging overhead can be 
ignored because the user only needs to download map information once. Therefore, 
in this Subsection, we simply compare the messaging overhead created by TTS and 
SZBS schemes. 
The results of the experiment are depicted in 錯誤! 找不到參照來源。. The 
value of time interval (I=10 ~ 60 seconds) and the speed of the vehicle influences 
the messaging overhead largely in TTS. If the vehicle is in lower speed, which 
causes longer travel time, then the mobile user needs to send more query messages 
when the path is fixed. 
 
 
16 
 
better such that the mobile user can send or receive his message to or from the 
correct region server. 
 
Table 1. The switch time of using TTS and SZBS 
Sche
me 
TTS SZB
S I=1 I=2 I=4 I=6 I=8 I=1
0 
I=2
0 
I=3
0 
I=4
0 
I=5
0 
I=6
0 
Time 
(s) 
4.8
7 
5.3
3 
6.1
7 
7.1
5 
8.2
1 
9.6
3 
14.4
7 
18.7
7 
24.0
8 
29.1
4 
34.1
7 
1.68 
 
Table 2. The switch time of using the MLGG-based region server decision Scheme 
MGS 
(m) 
10 20 30 40 50 100 200 300 400 
Time (s) 0.54 1.08 2.77 3.77 4.85 12.3 26.92 48.46 55 
Map 
Size 
(kb) 
22198 5545 2467 1349 480 231 89 40 23 
 
In Tables 1 and 2, the average switch time of using TTS (time interval (I):1 ~ 60 
seconds), SZBS and MLGG-based region server decision scheme (Minimum Grid 
Size (MGS):20 ~ 400 meters) are measured by gathering the log statistics in the 
case that the mobile user moves from a region ("Tainan County") to the other 
region ("Kaohsiung County"). Referring to Table 1, SZBS outperforms TTS even in 
the case that the time interval of TTS is set to 1 second, which will cause enormous 
messaging overhead for the region server. Basically, when a longer time interval is 
set in TTS, a longer switch time can be derived.  
18 
 
 
 Conference paper Journal paper Patent 
Expected No. 2 2 1 
Achieved No. 0 4 1 
Achieved rate = 
actual value/ 
expected value 
0% 200% 100% 
 
  
20 
 
References 
[1] UPnP Forum, UPnP device architecture version 1.0, June 2000. 
[1] E. Guttman and C. Perkins., Service location protocol, version, June 1999. 
[2] Baroody R., Rashid A., Al-Holou N., Hariri S., "Next generation vehicle network 
(NGVN): Internet access utilizing dynamic discovery protocols", Proceedings of 
the IEEE/ACS International Conference on Pervasive Services, pp.81-88, July 
2004. 
[3] Bechler M., Wolf L., Storz, O., Franz W., "Efficient discovery of Internet 
gateways in future vehicular communication systems", Proceedings of the 57th 
IEEE Vehicular Technology Conference, vol. 2, pp. 965-969, April 2003. 
[4] D. Kim, S. Lee, "UPnP-Based Telematics Service Discovery for Local Hot-Spots", 
Proceedings of IEEE International Conference on Multimedia and Ubiquitous 
Engineering, pp.500-506, April 2007. 
[5] Telematics Forum, Global Telematics Protocol (GTP) 1.0, http://www.ertico.com 
[6] http://www.ngtp.org/index.php 
[7] F. Sailhan,  V. Issarny, "Scalable Service Discovery for MANET," Proceedings of 
IEEE Third International Conference on Pervasive Computing and 
Communications, pp.235-244, 2005. 
[8] Chung-Ming H., Chia-Ching Y. and Chun-Ming Hu., "An Efficient Telematics 
Service Discovery Scheme over the Centralized Vehicular Peer-to-Peer (C-VP2P) 
Telematics Service Platform," Proceedings of IEEE 24th International 
Conference on Advanced Information Networking and Applications (AINA10), 
pp.607-613, 2010 
[9] Seno, S., Tat-Chee Wan, Budiarto R., "Survey and new approach in service 
discovery and advertisement for mobile ad hoc networks", Proceedings of the 
IJCSNS, Vol. 7, No. 2, pp. 275-284, 2007. 
[10] Seno, S., Tat-Chee Wan, Budiarto R., "Hybrid hierarchical approach for 
addressing service discovery issues in MANETs", Proceedings of the IEEE 
International Conference on Telecommunications and Malaysia International 
Conference on Communications, pp.197-202, May 2007. 
[11] Web Map Service (WMS) 1.3.0. Open Geospatial Consortium. 2003 
[12] Geography Markup Language (GML) 2.3.1. Open Geospatial Consortium. 2007 
[13] Google map, http://maps.google.com.tw/ 
[14] Bing map, http://www.bing.com/maps/ 
[15] Yahoo map, http://maps.yahoo.com/ 
[17] J.L. Chen, Y.C. Chang, H.W. Du, "Embedded worldwide interoperability for 
microwave access-based vehicular router for telematics computing," IET 
Abstract. In Opportunistic Networks (Oppnets), the link performance is highly unpredictable and 
the connections are broken frequently. The TCP protocol will perform badly in Oppnet because the 
end-to-end connection always needs to be reconstructed and the data need to be retransmitted from 
the original sender again. In order to solve the problem, we investigate the principles of 
at-one-time and on-time delivery, in which “at-one-time” means to transmit each piece of data just 
once and “on-time” means to transmit data to the receiver by a pre-scheduled time point. Based on 
the principles, we designed a Flexible Delivery Platform with at-One-time and On-time guarantees 
(FDPOO) in Oppnets. In FDPOO, we separate the transmitting processes into macro and micro 
stages. In the macro stage, it deals with the end-to-end transmission QoS; in the micro stage, it 
deals with the transmission between adjacent nodes along the constructed delivering path. We 
implement the proposed FDPOO based on the Delay Tolerant Network (DTN). The performance 
results show that the designed FDPOO can efficiently complete the data transmission at one time 
and on time. 
 
> 
>> *** Contribution: Rate the evaluation of work and contribution 
> Good solid work of some importance (4) 
> 
>> *** Significance: Rate the significance to theory and practice 
> Highly significant (4) 
> 
>> *** Novelty: Rate the originality and novelty 
> One step ahead of the pack (3) 
> 
>> *** Relevance: How relevant is the paper to the call for papers? 
> Right on target (5) 
> 
>> *** Readibility: Rate the readability and organization of content 
> Basically well written (4) 
> 
>> *** Overall recommendation: Would you recommend this paper for NEW2AN  
>> 2010 conference? 
> Accept (good quality) (4) 
> 
>> *** Best paper award: Do you consider the paper a candidate for a  
>> best-paper award? 
> No (1) 
> 
> 
> 
> Regards, 
> Roman Dunaytsev 
> NEW2AN 2010 TPC Chair 
>  
 
 
expectations, real-time transmission may not be so needed, but on-time transmission is 
needed in some applications. For example, the TV programs are regularly required by 
users, and the contexts only need to be completely transmitted before users want to 
use them. Let a user want to see some TV programs from 8:00 pm. Then, the TV 
programs can be transmitted by 8:00 pm. In other words, because of large computer’s 
storage capacity in nowadays, the contexts can be downloaded in advance. Another 
example is as follows, since the public transportations normally travel on regular 
routes, some multimedia presentations, such as tour information, can be pre-
downloaded before the vehicles arrive at the landscapes. Therefore, we can realize 
that real-time transmissions are not so needed but on-time transmissions are needed 
for some applications. Practically, if some applications can tolerate distinct transmit-
ting duration and the interval of delay time is assigned in advance, then the scheduling 
mechanism of each application can finish the task in the assigned duration at just one 
time and on time, in which “at-one-time” means to transmit each piece of data just 
once from the end-to-end source to destination viewpoint and “on-time” means to 
transmit data to the receiver side by a pre-scheduled time point. 
The current Internet is composed of wired and wireless domains. On the wired do-
main, many traditional transmitting problems result from network congestion. The 
situation on the wireless domain is worse than that on the wired domain because of 
signal variability. Combining these two networks results in high packet loss, long 
propagation delay, and even frequent connection breaks. These environments are 
denominated the opportunistic network (Oppnets) [3]. From the viewpoint of networks, 
when a user wants to requests a guaranteed data exchange, the end-to-end connection 
is constructed immediately based on TCP protocol. However, the connection is prob-
ably broken in Oppnets, and the data need to be retransmitted from the original sender 
through the reconstructed connection. This procedure must be manually restarted 
repeatedly by the user in some network applications, but it is still not assured that data 
can be transmitted to the destination. Furthermore, the retransmitting procedures waste 
extra network resources, and it may require more bandwidth and time than anticipated. 
Therefore, it should be more efficient if the network can support at-one-time and on-
time transmitting guarantees. 
Given the aforementioned scenarios and concerns, we present the new transmitting 
model called at-one-time and on-time delivering guarantees over the Oppnets envi-
ronment. In order to archive the goals, two main transmitting principles are adopted as 
follows: 
1.  Scheduling of Available Transmitting Time 
Due to the differences of the user expectations, the data transmission should be 
scheduled in the on-time manner. Two characteristics of data transmission are (1) the 
delivery path is composed of network nodes and (2) the bandwidth capacities between 
adjacent nodes are different. According to the desired transmitting duration, schedul-
ing delivery time slots between two nodes is an effective way and the data can be 
transmitted flexibly based on a specific throughput in each arranged time slot. In addi-
tion, a transmitting path can be divided into several segments, in which each segment 
is composed of adjacent nodes and then pre-scheduling the transmitting procedure on 
bandwidth usage and time duration between adjacent nodes can make entire transmis-
from the end-to-end source to the destination viewpoint. In order to achieve the at-
one-time transmitting concept, we design a platform based on the Delay Tolerant 
Network (DTN) to guarantee successful transmission. 
The remaining part of this paper is structured as follows. Section 2 presents the 
theoretical foundations of the store carry and forward principle and the time schedul-
ing strategies for the development of the research. Related algorithms are presented in 
detail in Section 3. Section 4 presents the system architecture for the derived mecha-
nisms. Results of various analyses are then presented in Section 5. Finally, conclu-
sions are presented in the Section 6. 
2   Related Works 
In order to archive the main goals of at-one-time and on-time transmission, related 
studies and discussions are as follows. 
The concept of available transmitting time scheduling is similar to Vehicle Routing 
Problem (VRP). VRP is an important problem in the fields of transportation, distribu-
tion and logistics. The purpose of VRP is to calculate the minimum transporting costs 
on the basis of every user’s requisite. In VRP, a service with a set of customers must 
be delivered and each customer must be visited by the fleet of vehicles. There is an 
upper bound of load capacity supported in each vehicle. Additionally, each customer 
demands a specific number of products. 
VRP can be further divided into many classes in terms of different constrains, and 
the Vehicle Routing Problem with Time Windows (VRPTW) has been the most popu-
lar type of VRP. In VRPTW, in addition to the constraint of capacity, a vehicle has to 
visit a customer within a certain time frame. The problem is closed to our objective of 
the on-time delivery; there is a time-limited duration between adjacent nodes. Unlike 
VRPTW, the network situation changes dynamically. For instance, each delivery path 
has a different bandwidth capability in terms of different round trip times (RTTs). 
Particularly, the intermittent connectivity is expected, and connections are also infre-
quently established in the opportunistic networks. However, the VRPTW method just 
considers about the distance. Furthermore, the heuristics algorithms are widely em-
ployed to find alternative solutions to solve the VRPTW problem [4][6]. The devel-
oped mechanisms usually need complex computing processes. The algorithms of 
VRPTW cannot be directly applied on the heterogeneous networks because it spends 
much time to find an optimal solution via the scheduling of delivery time. More robust 
mechanisms are required to support the developments of the realistic network. 
Many studies investigated diverse types of store-carry-and-forward schemes [2]. 
Through the principle of hop-by-hop message exchange, the data are delivered to the 
destination successfully in opportunistic networks. This method is similar to tradition-
al postal services. 
Several concepts behind store-carry-and-forward schemes come from the studies on 
delay tolerant networks (DTNs) that have been conducted within the Internet Research 
Task Force (IRTF) and have led to the specification of the DTN architecture. In DTN, 
a new bundle protocol [5] is proposed to provide the store-and-forward services. The 
node in each network domain. The network domain includes wired and wireless net-
works. After the FDPOO platform has been initialized successfully, it starts the action 
of resource monitoring. The execution procedure is as follows: 
Resource monitoring: any two adjacent DTN nodes exchange information with 
each other periodically. Hence, each DTN node maintains a network topology of its 
neighboring node to represent the network state around itself, including the loadings 
of neighboring nodes. As the network state changes, the announcements of the varia-
tion are exchanged through the neighboring links.  
3.2   Phase of MaT 
The MaT phase is composed of the delivery path reservation and the Delay Tolerant 
Transmitting Scheduler (DTTS). We firstly define the constitution of on-time delivery 
over heterogeneous network to facilitate the subsequent derivation. Then, the delivery 
path can be observed using the minimum cost function, and the resources of this path 
are also reserved. Finally, we obtain the arranged time of each section in the entire 
delivery path using DTTS. 
In delivery path reservation, we propose the server-driven path reservation model 
based on the DTN architecture that obtains the most suitable delivery path with the 
minimal cost consideration. The execution procedure of the model is as follows: 
1. Calculation of delivery path with the minimum cost: There is normally at least 
one delivery path from source to destination, and each path goes through a 
number of intermediate DTN nodes. The major work is to allocate an appropri-
ate path to transmit data. Two restrictions that exist in each path are link band-
width of each edge and load capacity of each DTN node, where the loading 
factors that need to be taken into considerations are CPU processing power, 
memory size, buffer storage, and so on. Thus, the calculation of these re-
strictions is the function of predicting the minimum cost path that refers to the 
shortest path computation, e.g., Dijkstra. The message of resource collection is 
sent from the DTN node of the source network domain, which is usually the 
Server domain, to destination throughout the FDPOO platform. 
2. Path reservation: Once the delivery path is selected by the DTN node of the 
destination network domain, the DTN node of the destination network domain 
sends a configuration message back to the DTN node of the source network 
domain through each DTN node in this path in order to reserve the resources 
along the entire path. 
The DTTS of MaT is critically important in deploying the foundation for imple-
menting the scheduling strategies of on-time delivery.  
Let N}X |  valuepredefined a is X:{X  , 
and then XX   , X
n
1i
i  

; 1,2,3,...ni   
(1) 
X is the expected time of the user requested. With the calculation of the minimum 
cost function, we can obtain the delivery path from the phases of FDPOO initialization 
smaller RTT value gets the higher bandwidth. Therefore, the transmission situation 
can be divided into best and worst cases. The available bandwidth represents a key 
factor that distinguishes best cases from worst cases for developing MiT. 
Table 1. The notations of the MiT 
Notation Meaning 
RTT
 The RTT of the best case 
BW  The bandwidth of the best case 
RTT
 
The RTT of the worst case 
BW
 
The bandwidth of the worst case 
t 
A transmission time that has already 
occurred 
S The total data size 
S  The remaining data size after t 
T  
The time needed of using 
BW  to 
transmit data 
T
 The time needed of using BW  to 
transmit data 
t  
The remaining time of the arranged 
time Xi 
W The tolerated waiting time  
 
Let the user want to watch a movie 3 hours later and X is the expected delivery 
time predefined by the user. Suppose the arranged time of one section is Xi, which is 
equal to the length of AB , and the data size of the movie is S. Thus the time needed for 
the best case is Tα, which is obtained from 
BW
using Eq. (3); the time needed for the 
worst case is Tβ, which is obtained from BWβ
 
using Eq. (4).  After obtaining Tα and Tβ, 
we can get HB and ,LB ,RL respectively, is depicted in Fig. 3, where the length of HB  
equals to Tα 
and the length LB  equals to Tβ.  
The data size S gradually decreases according to the value of the remaining time t, 
and the interval of HB and ,LB ,RL  gradually reduces accordingly. That is, the tolerated 
waiting time W, Tβ, and Tα are dynamically adjusted. 
T T
S S
BW
 


   
(3) 
T T
S S
BW
 


 
 
(4) 
Practically, the network environments have many unexpected situations, thus the 
proposed MiT model uses Tα and Tβ as thresholds for enabling the relative policies. 
We depict three main cases as follows. 
tion if Eq. (6) is true. In the remaining time, the system can transmit the remaining 
data, including the region S’. If Eq. (6) is false, the MiT model enables the dynamic 
delivery strategy again. 
4   Performance Analysis 
For evaluating the performances of the implemented system, we implement a proto-
type of on-time and at-one-time delivery. The implemented platform is developed on 
Linux 2.6, and the programming pseudo codes are composed using language C++. We 
adopt DTN reference implementation version 2.6.0 (DTN2) [1] to develop the pro-
posed scheme. The designed platform is composed of four modules, which are store-
carry-and-forward module, management module, scheduling module, and dynamic 
delivery policy module. We run several experiments in the real environment. Firstly, 
the effect of broken connection is measured in these experiments, and we take the 
challenged environments into considerations. The network status is normally unstable 
on challenged environments. Let a user request to watch a video with length of 
150MB 50 minutes later. The configured topology  based on the proposed strategies is 
shown in Fig. 5, and the delivery times of A, B, E, and G are assigned to 10, 17, 15, 
and 8 minutes respectively. We make comparsion of the proposed FDPOO with best-
effort (BE), the Secure FTP with throughput restriction (S-FTP), and the store-carry-
and-forward method of DTN. The results show that the BE and DTN methods utilize 
large bandwidth, so the data with size of 150MB are delivered to the user quickly. The 
throughputs are 340.8 KB/s and 268 KB/s, and the transmission times are 7.5 mins 
and 9.6 mins using the BE and DTN methods respectively. Nevertheless, since the 
user may not want to watch the video immediately, the BE method is not suitable for 
this case. Moreover, the consumptions of network resource of the BE method are quite 
larger than that of the FDPOO. Since the total transmitting time is 50 mins, the S-FTP 
method with the embedded scheduling mechanism needs to be assigned the end-to-end 
throughputs to 51.2 KB/s, which means that it needs to keep the transmitting rate 
through overall the transmisison. It’s quite different with FDPOO. In FDPOO, the 
allocated delivery time periods are 10, 17, 15, and 8 mins respectively along the de-
livery path, and then the expected throughput is 256, 150.8, 170.7, and 320.3 KB/s 
respectively. This kind of scheduling is more suitable for each network domain. 
However, the connection is broken at the 5th min, and then is restored at the 6th 
min in section A, which is depicted in Fig. 6. The curves of throughput rapidly de-
crease to 0 KB/s between these time periods. In section B, the connection is broken 
again from the 12th to the 46th min. If the user adopts the BE method, the user needs 
to request the transmission to server manually repeatedly and the data need to be re-
transmitted from the beginning. Moreover, the retransmitting procedure requires more 
bandwidth and time than the anticipated one. 
focuses on the scheduling of non-real-time transmissions. Our further study is to ex-
tend the FDPOO method to support real-time multimedia data transmission. 
 
Fig. 6. In experiment A, throughput distributions of distinct methods. 
 
Fig. 7. In experiment B, throughput distributions of distinct methods. 
References 
1. DTN Reference Implementation (DTN2). http://www.dtnrg.org/wiki/Code 
2. S. Kuribayashi, Y. Sakumoto, S. Hasegawa, H. Ohsaki, and M. Imase: Performance Evalua-
tion of Broadcast Communication Protocol DSCF (Directional Store-Carry-Forward) for 
VANETs with Two-Dimensional Road Model. The Pervasive Systems, Algorithms, and 
Networks (ISPAN’09), pp. 615-619 (2009) 
3. K. C. Lan, C. M. Huang, and C. Z. Tsai: A Survey of Opportunistic Networks. Proceedings 
of the 22th IEEE International Conference on Advanced Information Networking and Ap-
plications (AINA2008) - The 1st IEEE International Workshop on Opportunistic Network-
ing (WON-08), pp. 1672-1677 (2008) 
4. C. Qi and Y. Sun: An Improved Ant Colony Algorithm for VRPTW.  The Computer Science 
and Software Engineering, pp. 455-458 (2008) 
5. K. Scott and S. Burleigh: Bundle Protocol Specification. Internet-Draft (2007) 
6. S. Yamamura, A. Nagata, M. Tsuru, and H. Tamura: Virtual Segment: Store-Carry-Forward 
Relay-Based Support for Wide-Area Non-Real-time Data Exchange. Intelligent Networking 
and Collaborative Systems (INCOS’09), pp. 366 – 371 (2009) 
    於 St. Petersburg Institute for Informatics and Automatic, The Russian Academy 
of Sciences (SPIIRAS)進行各自研究方向的 presentation，並參觀其 Lab，了解其
現有之研究成果，進行相互合作的可能性探討。 
    Keynote Talk的內容為敝人主持由教育部補助之「教育部資通訊人文跨領域
合作計畫」的成果，在此 Talk 中敝人提出個人前瞻性的思維：資訊科學與工程
的研究演化已由 ” Theory→Technology→Application & Service ”進階到 ” 
Theory→Technology→Application & Service→Content"，而 Content必須由人文科
學的學者提供，可能為 Heritage, Art, Literature, Music, etc.，因此必須進行跨領域
的合作。而敝人是從 U(biqutions)-Heritage 的面向著手，進行「資通訊與文史的
跨領域合作」，由資通訊的教授進行 Heritage 資料庫、Web2.0、伺服器、智慧型
推薦和智慧型手機上之導航導覽系統之研發；由文史的教授進行台灣古蹟 PoI  
(Point of Interest), LoI (Line of Interest)和 SoI (Story of Interest)的研發，已有實際
內容的建置(>2000個 PoIs)，並已可實際使用。在此 Talk中，敝人並沒有講到太
深的技術內容，但有很多敝人前瞻的想法與見解，深入簡出，闡述許多新思維，
由於內容是觀念性的新思維為主，大家很容易懂，因而在一個小時的 Talk 完之
後啟發大家許多想法，爭先恐後地問了很多問題，Q&A 了半小時，幾乎把中場
休息時間給佔用掉了，也是敝人在近 20年參加國際會議中進行 presentation中最
有成就感的一次。Q&A中有下列較有深刻印象的問題： 
1) 俄羅斯學者：Dr. Sergey Balandin(此人為 Nokia Siemens在俄羅斯的 R&D 
Director)問到為何只用台灣的 PaPaGo 和 Google 的 E-map，可否考慮在
Nokia的 Ovi e-map上進行實作？ 
2) 韓國學者：SoI (Story of Interest)的定位為何？他言在韓國亦有類似的研究，
他將盡可能的 link韓國相關學者與我的研究進行交流。 
3) 巴基斯坦：Metadata建立的思考邏輯及為何一定要用 Dublin Core？ 
4) 法國學者：Google 本身也開始在做一些 PoI，敝人的系統與 Google 未來
會有何關係？我的答案是「我的目標就是讓 Google 來買及合併，此為美
國及世界上最 Straightforward的模式。」 
5) 芬蘭的學者：有無變成 Business的可能？可行的 Business model為何？ 
    在 paper presentation 中，敝人的研究內容為利用機會網路(Opportunistic 
Networks)的特性，提出一個準時(On Time)及選一次(At-One-Time)的概念，即先
將機會網路分段，每一段在 x時間內傳送完成，並在預定的時間內準時送達目的
地。而其中如果由於網路斷線或壅塞時，快無法或已無法照原訂之 Schedule 傳
送完成時的 exception handling，為此篇論文所提出之 protocol的重點設計。發表
完後，只有一個問題：如何設定每一段時間的 x？敝人言由使用者來訂定之。 
    在與 St. Petersburg Institute for Informatics and Automation, The Russian 
Academy of Sciences (SPIIRAS)的面對面合作會議中，發現了下列事項： 
1) 俄羅斯人的英文很差，尤其是老一輩。管理階層的資深研究人員，因為過去
在蘇聯時代自成一體系，因此只會俄文。 
五、相關照片 
1) Keynote Talk時之場景 
  
  
   
 
 
 
 
 
 
 
 
 
 
 
 
3) 參觀 SPIIRAS Lab之場景 
   
   
99 年度專題研究計畫研究成果彙整表 
計畫主持人：黃崇明 計畫編號：99-2219-E-006-009- 
計畫名稱：車用行動生活之車載資通訊服務平台--子計畫一：車載資通訊服務之點對點服務搜尋機制
(2/2) 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 1 1 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 3 3 100%  
博士生 3 3 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 2 2 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
國科會補助專題研究計畫成果報告自評表 
請就研究內容與原計畫相符程度、達成預期目標情況、研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）、是否適
合在學術期刊發表或申請專利、主要發現或其他有關價值等，作一綜合評估。
1. 請就研究內容與原計畫相符程度、達成預期目標情況作一綜合評估 
■達成目標 
□未達成目標（請說明，以 100 字為限） 
□實驗失敗 
□因故實驗中斷 
□其他原因 
說明： 
2. 研究成果在學術期刊發表或申請專利等情形： 
論文：■已發表 □未發表之文稿 □撰寫中 □無 
專利：□已獲得 ■申請中 □無 
技轉：□已技轉 □洽談中 ■無 
其他：（以 100 字為限） 
3. 請依學術成就、技術創新、社會影響等方面，評估研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）（以
500 字為限） 
(1) 學術成就: 此整合型計畫在學術成就上之主要成果如下所示: 
已發表或被接受之論文如下: 
期刊論文 
1. Chung-Ming Huang and Ming-Sian Lin, 
’Fast Retransmission for Concurrent Multipath Transfer (CMT) over Vehicular 
Networks,’ 
Accepted by IEEE Communications Letters, 2011. 
   (NSC 99-2219-E-006-009) (SCI, EI) 
2. Lai Tu and Chung-Ming Huang 
’Collaborative Content Fetching Using MAC Layer Multicast in Wireless Mobile 
Networks,’ 
Accepted by IEEE Transcations on Broadcasting, 2011. 
(NSC 99-2219-E-006-009) (SCI, EI) 
 
 
(2) 技術創新 
 提出一分散式點對點之車載資通訊服務系統，設計兩階式車載資通訊服務搜尋架構，
讓使用者可搜尋所需的服務。不同於 Client/Server 的架構，所提出的架構直接由使用者
