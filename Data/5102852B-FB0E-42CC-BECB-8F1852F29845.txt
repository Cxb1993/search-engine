依動態規劃開發之定點式乘法係數之快速設計法 
“A fast design method of fixed-point coefficients for constant multiplications by dynamic 
programming” 
計畫編號：NSC 94-2215-E-011-007 
執行期間：94 年 8 月 1 日 至 95 年 7 月 31 日 
主持人：姚嘉瑜 國立台灣科技大學電機工程系副教授 
 
一、 中文摘要 
常係數乘法在數位訊號理中到處可見，如
FIR 濾波器、DFT 計算、DCT 計算等，都有大
量使用常係數乘法的地方；因此，可否有效率
地做常係數乘法，往往影響到最後硬體的面積
與功率消耗，甚而系統的複雜度，在目前系統
晶片(SOC)成為顯學的今日，使用到常係數乘
法的矽智財(SIP)之研究，將日益重要。 
常係數乘法的硬體實現首先要在系統規
格的規範下設計其對應的 fixed-point 係數，而
最直接的方法就是對 floating-point係數自某一
位數起取其四捨五入值，不幸的是，若要顧及
系統規格，則要取的位數通常會非常長；故而
有一些學者研究其他的方法，早期這方面的研
究集中在 FIR 濾波器 fixed-point 係數的設計
上 ， 包 括 有 名 的 mixed-integer linear 
programming (MILP)、local search、trellis search
等，我們在這方面也曾做過研究，並於 2002
年發表一種 partial MILP 的設計法。 
不過以上所提到的方法皆有令人不滿意
的地方，如 MILP 雖為 optimal，但其計算複雜
度太高，設計時間很長，雖然我們的 partial 
MILP 設計法略為改善這問題，但若面對龐大
的設計問題，partial MILP 的設計時間仍會很
長，而 local search 與 trellis search 皆為
sub-optimal，我們很容易可找到比他們的解更
好的答案。因此本計畫另行發展其他的設計
法，我們以動態規劃為本，開發比 partial MILP
更快的設計方法，且設計結果也比 local search
與 trellis search 要好。 
英文摘要 
There are many DSP applications employ 
multiple constant multiplications (MCM), for 
example, the realization of FIR filters, the 
computations of DFT and DCT, etc. Therefore, 
performing MCM efficiently can reduce the 
hardware complexity and the power 
consumption. In the SOC era nowadays, the 
study on those silicon intellectual properties (SIP) 
that use MCM may become important. 
To realize an MCM hardware, we first need 
to determine the corresponding fixed-point 
coefficients. The direct method for determining 
the fixed-point coefficients is doing round-off to 
the floating-point coefficients. Unfortunately, the 
word length is usually very long in order not to 
violate the system specifications. Therefore, 
there are many methods proposed by many 
researchers, for example, the famous 
mixed-integer linear programming (MILP) 
method, the local search method, and the trellis 
search algorithm, etc. We have also done some 
work on this subject and have published a partial 
MILP method in 2002. 
However, the methods mentioned above all 
have their own weaknesses. The MILP method is 
optimal, but its computational complexity is too 
high for a large design. Although our partial 
MILP method somewhat reduces the 
computational complexity of the MILP method, 
it is still a non-polynomial-time design method. 
Thus, for an extremely large design problem, the 
partial MILP method still needs long time to 
finish the work. On the other hand, the local 
search and the trellis search algorithms are 
sub-optimal. We can easily find better solutions 
than the solutions they can offer. Therefore, in 
this project, we develop another design method 
better than the partial MILP based on the 
dynamic programming technique. The design 
results of our new method are better than the 
results designed by the local search and trellis 
search algorithms. 
誠如上一節所述，當設計問題很大時，
MILP 或 PMILP 設計時間會變很長，部分原因
是因 MILP-based 的演算法是 non-polynomial 
time 的，另一原因是若要令 LT 小，問題中的
formulation 成為針對 CSD 碼的每一數元做
optimization，這讓原本的設計問題變得更加龐
大，例如若欲設計之係數有 N 個，而欲最佳化
的 CSD 數元有 M 個，則設計問題的大小由原
本的 N 變為 2MN [7, 8]，這將令設計時間大幅
增加。 
我們重新審視係數的設計問題，我們認為
不須針對 CSD 碼的每一數元做 optimization，
因為任一整數之 CSD 表示法是唯一的，只要
能隨時掌控設計過程中的整係數之 CSD 碼，
我們應可直接在整數的範疇內做設計，而不用
把設計問題變得龐大。另外，因 MILP-based
的演算法為 non-polynomial time 的，為了加快
設計速度，我們計畫以搜尋的方法進行設計，
不過鑒於 local search 及 trellis search 仍是在
CSD 碼的數元 domain 中做搜尋，造成增加問
題的大小，或是搜尋的範圍過小，因此本計畫
將在整數 domain 做搜尋，藉以尋得較佳之結
果。 
我們的搜尋方法將採動態規劃式，每組整
係數（有些符合規範，有些則否）都以一節點
（node）代表，而每一節點都伴隨一代表實現
該節點對應整係數之複雜度的函數 f，而一節
點對應之整係數經某種調整後成為其相鄰節
點所對應之整係數，用這種方式表現後，我們
所要搜尋的範圍可表示為一 trellis 的結構。在
尋搜過程中，我們像走在 trellis 的節點間，每
到一節點，我們即計算該節點對應的整係數是
否符合規範，若是，則計算複雜度的函數 f；
若否，則繼續移動。而在節點間如何移動，我
們必須遵循下述規則： 
1. Clear Counter D and assign T to be infinity. 
Start from a node i. 
2. Search for all neighbors of node i. Check 
whether any of its neighbors satisfies the 
specification or not. 
3. If there exist some, pick up the one, say node 
j, with the lowest complexity f and compare 
it with T. If the new f is smaller, replace T 
with the new one and assign i = j. Go to Step 
2. 
4. Otherwise, if node i satisfies the 
specification, then output node i as a 
solution and STOP. 
5. If not, check if D reaches a bound. If not, 
sort node i’s neighbors by the distance to the 
specification. Assign D = D + 1 and push 
node i’s neighbors into the stack LD. 
Otherwise, assign D = D – 1.  
6. If LD is not exhausted, take out the top 
element from LD and rename it as i. Go to 
Step 2. 
7. Otherwise, assign D = D – 1. Go to Step 6. 
在此，我們特別強調我們的方法與 trellis 
search 不同：trellis search 是在 CSD 碼的數元
domain 做搜尋，而我們的方法是在整數的範疇
內做搜尋；另一方面 trellis search 所搜尋的數
元在 MSDs (most significant digits) 的部分，僅
搜尋由 floating-point 係數量化而來的 1 或 
−1，只有最後兩數元 LSDs (least significant 
digits) 的部分才是做全部搜尋（因此 trellis 
search 可視為一種改良的 local search），故搜
尋範圍有限，而運用我們的方法搜尋的範圍將
會增大許多，有更多機會尋得較佳的結果。 
設計範例 
DOCSIS 2.0 [9] 中規定 Cable modem 的
upstream transmitter 須近似一頻寬為 5/(8T)，
roll-off factor 為 0.25 之 SRRC 濾波器 (1/T 為
symbol rate)，其 stopband attenuation 須達
到  –30dB。文獻  [10] 中提出了一用於 M- 
QAM modulator 的 fixed-point FIR 濾波器可滿
足 DOCSIS 2.0 之需求，該文所提出的 FIR 濾
波器長度為 40，係數是以 7 數元的 CSD 
(canonic-signed-digit) 碼編成，提供的 stopband 
attenuation 可達到 –30.4dB，ISI (intersymbol 
interference) 則為 –41.1dB (註：文獻 [10]是
以 local search 的方法找出濾波器的 CSD 係
數)。 
我們重新設計上述的 FIR 濾波器，首先以
我們去年提出的方法  [11] 找出濾波器的
floating-point 係數，再以本計畫的方法將係數
量化為 7 數元的 CSD 碼，結果我們的濾波器
長度只需 35，而 stopband attenuation 可達
到 –31.46dB，ISI 則為 –42.18dB，較文獻 [10]
的濾波器優異且複雜度更低。以下為我們求得
