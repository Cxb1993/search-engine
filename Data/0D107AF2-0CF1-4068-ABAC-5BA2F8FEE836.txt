2 
 
對於表格的調適策略適用性上較缺乏造而成語意的破壞。以下說明以往相關研究所使用之策略，大致上
有縮放、省略、取出表格內容重新處理等方式。 
[Bickmore, 1999]採用經驗法則來針對某個特定長寬規格的行動裝置產生一個最適合的網頁表格。對
於無法直接展示的網頁表格，他們會針對每一個儲存格產生一個子頁面，利用連結來縮放內容區塊，此
方式雖然能夠針對每個儲存格都進行完整的檢視，但當表格間內容相關性高時，只有在一起顯示的情況
下，表格內儲存格所包含的資訊才能看的出意義。 
[Chen, 2005]分析網頁標籤，並將其分成許多有邏輯性、相關性的區塊用於呈現在行動裝置上，最後將切
割的區塊用縮放的方式呈現，但在太大的表格只使用縮放策略便有可能造成內容看不清楚，同時他們未
考慮其他調適策略。 
[Hwang, 2003]利用縮放係數和資料密集程度決定一個表格內的儲存格是否應該被刪除。表格內的文
字、圖片可能必須同時存在才能表達其資訊，但刪除策略可能去除掉具有相關性的資訊造成語意破壞。 
[Artail & Raydan, 2005]在表格內容的調適上，對於用在排版的表格賦予縮放策略，只調整表格的寬
度；對於用以表示有相關性資料的表格，將表格內的儲存格內容，依據對應的屬性和資料將內容取出重
新編排處理。他們的處理方式較偏向於表格內的主要內容是文字的型態，調適之後會產生許多重複的屬
性標籤。 
[He, 2007]提出一個以規則為基礎彈性化的內容調適系統 XAdapter，將網頁上表格內的物件主要分成
結構、內容、導向物件三種，並對網頁上的表格(<table>)標籤的部分進行調適。他們利用模糊理論的方式
去衡量表格內每一列之調適滿意程度自動的進行調整，而使用者的滿意程度是經由物件的縮放程度以及
儲存格個數的切割數量情況決定。 
[Tajima & Ohnishi, 2008] 首先導入鍵值的概念，並發展一個自動發現行動網頁表格中的鍵值及屬性的
方法。他們接著提出以下三個瀏覽行動網頁表格的模式：正常模式、紀錄模式、及儲存格模式。每個模
式都提供諸如隱藏非必要的欄及列等互動操作。 
 
2.2 表格定義與利用機器學習進行表格分類 
[Wang, 1996]和[Hurst, 2006]等人首先嘗試正式定義表格，其定義主要是將表格的組成分成對於資料
有指引和定位的作用的屬性部分及資料的部分。 
[Hurst, 2002]、[Wang & Hu, 2002]及[Wang, 2002]利用機器學習的方式，透過使用表格的相關特徵進行
分類，將表格分為資料表格(data table)以及排版表格(layout table)，並提出許多分類特徵進行分類，例如
表格的列數和欄數之區間值、外框寬度、包含特定物件之比例[Hurst, 2002][Wang, 2004]等，而[Wang, 2002]
等人也將其表格分類之結果應用在內容調適上。 
然而[Wang & Hu, 2002]等人在分類特徵上，新增其他能夠輔助其分類之特徵，例如將表格的分類視
為是一種文件的分類，建立字集藉以判斷表格中的字串屬於資料表格或是排版表格。而在他們所提出的
CLC(content length consistency)的特徵中，他們認為資料表格在同一列或是同一欄的字串長度會趨近一
致，但該特徵卻會因為儲存格內的文字經過其他標籤修飾使視覺上產生長度一致性但實際上卻造成該特
徵計算錯誤。 
[Okata & Miura, 2007]採用 ID3 技術檢查一個行動網頁中是否含有以排版為目的的 <table>  標
籤，他們採計的表格特性包括邊框的屬性值、列數、在 <table> 標籤前的其他標簽數目、及 <table> 標
籤的套疊數。 
4 
 
使用者仍然能夠閱讀並且了解其意義。如圖 2。 
2. 資料表格：表格內所包含的內容與內容之間擁有明確的關係，一旦任意改變儲存格之間的位
置，便會失去原本要表達的意義。如圖 3。 
 
圖 2：排版表格範例 
 
圖 3：資料表格範例 
 
3.2.1 分類特徵之選定 
 TCWT 之部份分類特徵直接引用前人使用過的特徵，有些則加以修改，我們使用之特徵整理如
表 1。 
表 1：TCWT 所採用之表格特徵 
項次 特徵 描述 參考文獻 
1 連結比率是否大於某門檻值 表格所有內含連結之儲存格個數比率 
Hurst 
[2002]、Wang
等人 [2004]
2 字串比率是否大於某門檻值 表格所有內含字串之儲存格個數比率 
3 圖片比率是否大於某門檻值 表格所有內含圖片之儲存格個數比率 
4 
無延伸儲存格之比率是否大於某門
檻值 
無跨欄跨列儲存格之個數比率 
5 是否跨欄 是否有儲存格出現跨欄 本研究 
6 是否跨列 是否有儲存格出現跨列 本研究 
7 組合物件型態一致性 
儲存格之間呈現哪一種組合物件型態一致性
(以欄為主、以列為主、雙向、無) 
本研究 
 
     第 1-4 項特徵過去研究曾採用過，源自前人所觀察到的現象，連結 (字串、圖片、無延伸儲存格) 比
率分別代表該表格內擁有連結(字串、圖片、無延伸儲存格)之儲存格個數佔總儲存格個數之百分比。 
    第 5 和第 6 項特徵將[Hurst, 2002]和[Wang, 2004]跨欄及跨列儲存格之個數區間值特徵修改為布林
值。他們主張為了增加視覺效果，排版表格所擁有的跨欄或是跨列之儲存格數量會比資料表格多。但本
研究發現這兩項特徵在不同網頁之變異太大。而通常資料表格不需要跨欄或是跨列儲存格，只有當某儲
存格之屬性與其下列或下欄之多個儲存格之屬性有子集合關係時，才需要跨欄或跨列。基於此前提，我
們將其修正為布林值，只區別有無跨欄或跨列之情況。 
    我們引用前人認為儲存格之間會因為有屬性對資料的指引性，使其內容的呈現方式具一致性[Wang & 
Hu, 2002][Wang & Hu, 2002]的觀念，認為多數資料表格在同一欄或是同一列的儲存格上，其物件型態表
示方式之一致性(例如皆使用文字，或是皆使用連結、圖片)會呈現單一方向性，因此擴充 CTC[Wang & Hu, 
6 
 
COTCi = iijVj
RC / )N (max
∈  
 
其中  )N (max ijVj∈ 為 Ri 的所有儲存格組合物件型態值的個數中之最大值。最後整體 CB 之列組合物
件型態一致性平均值為： 
 
COTCRow= r
1 ∑ =ri iCOTC1  
 
欄組合物件型態一致性平均值 COTCCol 也以類似方式計算。當 COTCRow和 COTCCol 之差異大於 0，
我們便視此表格具單向一致性，極可能會是一個資料表格。 
 
COTC =
⎪⎪⎩
⎪⎪⎨
⎧
<
>
=
無連續跨欄跨列之結構  無,
以欄為主,
  以列為主,
雙向
            
0)COTC - (COTC    
0)COTC - (COTC
0)COTC - (COTC            ,
ColRow
ColRow
ColRow
  
 
COTC 特徵一般會出現在有 CB 區塊之表格內，因此當表格內無此結構時，我們便不為該表格進行
COTC 特徵之計算。 
 
3.2.3  網頁表格分類 
為了避免蒐集表格的領域集中在某一個特定領域，本研究參考過去研究[Wang & Hu, 2002][Wang & 
Hu, 2002] [Wang, 2004]，在 Google 的 business、news 兩種分類目錄下分別以 exchange rate、score、sport、
finance、weather、report、shopping、table、results、value、stock 這 11 個關鍵字，總共從 105 個網站蒐集
236 個頁面，包含 1502 個最底層表格，其中有 1198(79.76%)個排版表格，304(20.24%)個資料表格。我們
以貝式及 ID3 決策樹分類演算法有無加入 COTC 特徵分別進行分類實驗，並使用精確度(Precision)、召回
率(Recall)以及成功率(success rate)作為評估標準。 
我們分別在連結、圖片、無延伸儲存格以及字串這四個分類特徵中取 20%、50%、80%之門檻值，
利用排列組合的方式產生 81 種門檻值組合，再分別測試這 81 組門檻值，取其中分類最佳之組合，每次
固定其中 3 項特徵值而加減第 4 項特徵值 5%及 10%的方式進行微調，以取得最佳分類結果，並將該結果
之四個分類特徵門檻值定為本系統之門檻值，其值如表 3。 
表 3：各分類特徵使用之門檻值 
表格分類特徵 加入 COTC 時之門檻值 無加入 COTC 時之門檻值 
連結比率之門檻值 50% 50% 
圖片比率之門檻值 80% 40% 
無延伸儲存格之門檻值 70% 80% 
字串比率之門檻值 20% 80% 
8 
 
在轉置策略方面，當資料表格的橫向寬度大於垂直高度超過某設定之臨界值時，則對該資料表格進
行轉置的策略，英文網頁範例如將圖 4(a)貨幣兌換表轉換為圖 4(b)。轉置策略的調整方法和單欄調適的方
式類似，調整資料表格之列及不論是否有跨欄屬性的儲存格在 DOM tree 結構之位置，將每一個<tr>標籤
內的<th>和<td>標籤依序移動到轉置後對應的列以達到調適效果。  
 
 
4(a)：範例網頁上之表格 
 
 
 
                                                                     4(b)：範例網頁轉置後之表格 
圖 4：表格轉置範例 
 
3.3.1  排版表格之調適 
    為了使縮放策略在排版表格的調整效果上擁有更大的彈性，本研究將縮放策略搭配使用單欄調適的
策略進行調整，將表格內同一列的儲存格進行單欄化之後再對每一個儲存格進行縮放調整。 
    圖 51為經過分類判斷為排版表格之範例，先經過單欄化再進行縮放的調整之後，能夠使儲存格的內
容縮放幅度更有彈性，當表格內同一列上的每個儲存格內的內容過大時，此處理方式較能避免縮放比例
太小的情形。 
    
           5(a)：網頁上原始表格                  5(b)：調適後 
圖 5：排版表格調適範例 
  
3.3.2  資料表格之調適 
                                                 
1 http://store.pacificleisureshopping.com    
10 
 
    
7(b)：切割後(上半部)                      7(c)：切割後(下半部) 
圖 7：大型資料表格切割範例 
 
肆、結果與討論 
本研究以組合物件型態一致性(COTC)之分類特徵提升網頁表格分類正確率，並設計與實作一個適合
網頁表格內容調適之系統(TCWT)，藉由 98%分類正確率和 96%召回率，分別導引適合的調適策略，使其
內容可以一併呈現，維持原始表格內的語意。對於大型的資料表格我們使用縮放和轉置這兩種不至於破
壞表格語意的調適策略，而排版表格則是利用單欄調適和縮放這兩項調適方法進行調整，增加其內容縮
放的彈性比例，實驗證明我們的調適策略的確有效的改善使用者的瀏覽經驗。而對於『展示』型的表格，
經過 TCWT 之分類之後也能夠將其判斷為排版表格得到適當的調適，避免儲存格區塊縮放比例過小之問
題。 
本研究目前僅處理最底層之表格，在巢狀式表格區塊方面，本研究目前對這類型的表格採用排版表
格的調適方法，一般而言巢狀式表格之間的相關性不大，實行單欄調適策略不會破壞表格要表達的意思，
但是我們難以確保網際網路上不存在表格之間相關性大的巢狀式表格，因此未來我們也將表格的處理擴
充至巢狀式表格分析調適的部分。 
除了表格區塊之外，在網頁上也包含其他許多常出現的標籤所形成的區塊，未來本研究將針對表格
以外的語意區塊進行調適於行動裝置之研究。以<DIV>為例，由於<DIV>標籤之語意區塊並不像表格一樣
有規則之表格及儲存格資訊，加上使用的變化延伸性很大，目前並沒 有比較好的調適解決方案，雖然能
夠藉由定義一些規則找出語意區塊，但是最後的調適結果驗證比較不容易，一旦使用網頁結構較複雜的
頁面進行調適，其呈現結果可能就會比較不理想。 
本研究目前求特徵門檻值的方法不夠系統化，未來可考慮使用較系統化的方式求得門檻值的部分，
例如可使用 C4.5 分類演算法，對資料集自動調整類別之間各特徵之間距範圍，以求提高分類精確度和召
回率。 
 
參考文獻 
1、 Artail, H. & Raydan. M. (2005). Device-aware Desktop Web Page Transformation for Rendering on 
Handhelds. Personal Ubiquitous Computing, 9(6), 368-380. 
2、 Bickmore, T., Girgensohn, A., & Sullivan, J. (1999). Web Page Filtering and Re-authoring for Mobile 
Users. The Computer Journal, 42(6), 334-346. 
3、 Chen, Y., Xie, X., Ma, W. & Zhang, H. (2005). Adapting Web Pages For Small-Screen Devices. IEEE 
Internet Computing Archive, 9(1), 50-56. 
REF05 
 
國科會補助專題研究計畫項下出席國際學術會議心得報告 
                               日期： 2011  年 08  月 02  日 
一、參加會議經過 
 
這個會議在義大利羅馬舉行，是 IADIS 2011 計算機科學與資訊系統聯合研討會 (IADIS MULTI 
Conference on Computer Science and Information Systems 2011) 共 16 個研討會中的一個研討會，此聯
合研討會每年舉辦，共已舉辦 6 屆，為期 7 天(由 7 月 20 日至 7 月 26 日)，全球約 1200 篇論
文投稿，屬於大型國際研討會。此聯合研討會涵蓋資訊系統之技術、管理、應用等領域，主題包括 數
位學習、智慧系統與代理人、無線應用與運算、遊戲與娛樂技術、網路社群、人機介面、資料探勘、
電子商務、電子醫療、協同技術、網際網路應用與研究等。個人最大的收獲是參與座談討論會，了解
協同運算、調適性網路系統、網路安全的最新研究方向。英國 University of Bedfordshire 的 Maple 
教授“TECHNIQUES AND CHALLENGES FOR ENSURING EFFECTIVE USE OF COLLABORATIVE 
SYSTEMS＂ 演講提到目前網路上的協同犯罪議題對我相當具有啟發性。此外與德國 Fulda University 
of Applied Sciences 校長 Khakzar 博士建立初步友誼，了解他們目前正協助越南創辦一所新的大學，
其規劃與經驗都頗值得我們參考。 
 
 
 
計畫編號 NSC － 99 － 2221 － E － 032 － 068 
計畫名稱 維持表格語意之行動網頁自動調適 
出國人員
姓名 周清江 
服務機構
及職稱 淡江大學資管系副教授  
會議時間 100 年 7 月 22 日至 100 年 7 月 24 日 會議地點 義大利羅馬 
會議名稱 (中文)  IADIS 2011 網際網路應用與研究國際研討會 (英文)  IADIS International Conference Internet Applications and Research 2011 
發表論文
題目 
(中文) 基於表格分類之行動裝置自動化網頁表格調適 
(英文)  Automatic Web Table Transcoding for Mobile Devices Based on Table 
Classification 
日期： 2011 年 4 月 1 日 星期五 04 時 53 分 38 秒 CST 
寄件人： "IAR 2011" <secretariat@iar-conf.org> 新增至通訊錄  
主旨： IAR 2011: paper accepted  
收件人： "Chichang Jou" <cjou@mail.tku.edu.tw>  
副本： <author.notifications@gmail.com>  
 
Dear Author  
 
We are pleased to inform you that your submission to the IADIS Internet Applications and Research 2011 
(IAR 2011) Conference has been accepted as a "Full Paper".  
 
Please, make the suggested corrections to your paper (see details below), use the correct format available at 
http://www.iar-conf.org/submissions.asp (very important: if this format is not followed we cannot accept 
your contribution and it won't be published in the proceedings). Make sure that your final submission has the 
number of pages allowed for this category which is 8 pages (additional pages up to 4 will be charged as 
specified in the registration form). Also note that your final submission must be a WORD file since 
proceedings are produced in WORD,  
 
Also, login to your author area available at 
http://www.conf-system.org/confman_iar2011/author_menu.asp with your login and password, and  
1 - submit the final version - in word or rtf version please until 28 April 2011 (please submit from your 
author area link only),  
2 - access the copyright form, fill it out and send it in order for your contribution to be published (until 28 
April 2011),  
3 - print an invitation letter (if required) for you or any of your co-authors,  
4 - register for the conference (deadline for this procedure is also 28 April 2011 - if not registered the paper 
won't be published in the proceedings. This deadline also corresponds to the early registration rates for this 
call - select the early registration option from the rates part of the registration form),  
5 - View hotel information and book hotel at http://www.iar-conf.org/hotel.asp ,  
6 - Check the guidelines for presenters available at http://www.iar-conf.org/guidelines.asp .  
 
Hope to see you in Rome, Italy in July.  
 
For any information please contact us. Thank you.  
 
Best regards,  
 
Pedro  Isaías, Universidade Aberta (Portuguese Open University), Portugal  
IADIS IAR 2011 Program Chair  
 
Piet Kommers, University of Twente, The Netherlands  
Pedro Isaías, Universidade Aberta (Portuguese Open University), Portugal  
MCCSIS 2011 General Conference Co-Chairs  
 
                                                   
                           Figure 1. Original web table                                              Figure 2. One-column-view of the original table 
From the above example, the binding degree of relationship among cell content in a table would greatly 
affect whether the table semantics could be preserved in the transcoded result. If tables could be classified to 
capture their functionality, then proper transcoding strategies could be selected, not only to fit the hardware 
and software configurations of each mobile device, but also to preserve the original table semantics. 
We design and implement a “Web Table Transcoding based on Classification” system, abbreviated as 
WTTC, to classify web tables, and then transcode these tables based on the classification result and the CC/PP 
configurations of the mobile devices. In addition to extended table features extracted from the DOM-tree 
semantic information, we propose a new table feature called Cell Extension Direction (CED) that represents 
the extension direction of cell content as one-directional or bi-directional. CED is computed based on the 
difference of average composite object type (ACOT) of rows and ACOT of columns. Based on the above 
features, web tables are classified into data tables and layout tables. Along with the client’s CC/PP device 
configurations, the classification result would then be applied to guide the applications of zooming, 
transposition, and one-column-view transcoding strategies for tables. Our automatic transcoding results would 
thus be customized for each device, and preserve the structure and semantics of the original tables. 
The rest of the article is organized as follows: Section 2 is about related work. Section 3 is the system 
architecture of WTTC. Table classification and the classification results of WTTC are presented in Section 4. 
Section 5 illustrates the use of the classification results in applying proper transcoding strategies. Section 6 
concludes the article by summarizing our achievements and identifying future research directions. 
2. RELATED WORK 
2.1 Transcoding of Web Tables 
Bickmore et al. [2] employed a heuristic planning algorithm and a set of structural page transformations to 
produce the ‘best’ looking document for a given display size. For tables that could not be directly sent to the 
client, it output one sub-page per table cell. Their table transformation also determined ‘navigational sidebar 
columns’ and moved cells to the end of the list of sub-pages.  
Chen et al. [3] developed a page-adaptation technique that split a page into smaller, logically related units 
that could fit onto a mobile device’s screen. The Web page then could be adapted to form a two-level 
hierarchy with a thumbnail representation at the top level for providing a global view and an index to a set of 
subpages at the bottom level for detailed information.  
Hwang et al. [7] introduced two new heuristics, the generalized outlining transform and the selective 
elision transform, to preserve web page structures during transcoding. Both exploited layout characteristics of 
complex web pages. They attempted to preserve the original table structure: in addition to table attributes such 
as cell width, this transform used syntactic attributes such as font size to decide whether to elide a table cell.  
Artail and Rayden [1] introduced a method that applied the device type and screen size to render web pages 
that fit the display area of the requesting device. It employed CSS elements to reduce the size of the web 
page’s building blocks. It used scripting for hiding and re-appearing parts of the page’s textual items and for 
converting tables to text. They applied the zooming strategy for the layout tables by adjusting the table width. 
For data tables, they rearranged cell contents so that the cell content would be presented as a pure text in a row.  
ISBN: 978-972-8939-40-3 © 2011 IADIS
144
The design concept of WTTC is to preserve table semantics by keeping the relative positions of highly 
correlated cells. We extend an existing proxy server2 to handle the web content extraction, web content 
transcoding, and transcoded web content delivery to the mobile devices. Fig. 3 displays the system architecture 
and data flow among the modules of WTTC. The numbers indicate the sequence of data flow or message 
transmissions. The operations of WTTC are explained as follows: 
1) The mobile device sends out a web page request. The client’s device information, including hardware 
platform, software platform, and browser user agent,  will be embedded inside these requests through CC/PP 
diff, which is a modified version of predefined CC/PP profile from the hardware manufacturers. Many 
protocols have been proposed to enhance HTTP 1.1 protocol to include CC/PP profile diff. We adopt 
CC/PP-ex3 in this framework. 
2) The service listening component receives the request, and dispatches the request to web content 
extraction and parsing component. 
3) The web content extraction and parsing component obtains the requested content from the internet, 
and use JTidy4  to reformat the web page into the XHTML format and then build the DOM-tree for the page. 
Then the parsed web content and service request would be sent to the web table classification component. 
4) The web table classification component would extract features of the leaf tables, meaning no nested 
table contained inside, from the DOM-tree to perform the classification. The classified result would be sent 
to the web table transcoding component. 
5) The web table transcoding component would perform the transcoding according to the classification 
result. 
6) The transcoded result is sent back to the mobile devices. 
Since this article is focused on web table transcoding, we skip detailed descriptions regarding service 
listening component and web content extraction and parsing component.  
4. WEB TABLE CLASSIFICATION 
We adopt the following two table definitions from previous studies [6,11,12,13]: 
1. Data table: The content in cells is highly correlated. Once the relative positions of the cells are changed, 
the correlation hierarchy is damaged and the information validity is lost. For this type of table, correlated cells’ 
relative positions should not be changed.  
2. Layout table: these tables are only considered as tables by their appearance rendered by a browser. The 
functionality of these tables is just to give a better layout. Even if the relative positions of their cells are 
changed, these tables are still readable and its meaning is not lost. 
Fig. 1 is an example data table. Fig. 4 is an example layout table in a web page that provides Google search 
functionality for both WWW and its web site. Content of the four cells in the table are independent.  
Figure 4. Example layout table 
4.1 Table Features for Classification 
Many previously proposed features, like border width of the table, textual content ratio, width of column span, 
and length of row span, could no longer provide distinguishing power in classifying tables. For example, 
although texts are still used in many cells for displaying highly correlated information, many cells with 
correlated content contain composite multi-media objects. Thus, the textual content ratio itself could not 
provide the same distinguishing power as before. The table features extracted in this study are listed in Table 1. 
                                                          
2
   http://www.cs.technion.ac.il/Labs/Lccn/projects/spring97/project1 
3
   http://www.w3.org/TR/NOTE-CCPPexchange 
4
   http://jtidy.sourceforge.net/
ISBN: 978-972-8939-40-3 © 2011 IADIS
146
down. Thus, number of rows in MCB is ni –i +1, and number of columns in MCB is RCi. Note that some 
tables may not have a pair of i and ni that satisfying all four conditions.  
Suppose there are rM rows in the MCB of a table. We use Ri (1 ≤ i ≤ rM) to denote the i-th row of the MCB, 
and RCi number of cells in Ri. Let T denote the set of the 10 composite cell object types. For all t in T, we use 
Nit to denote number of cells in Row Ri with type t. We then compute the maximal composite object type for 
row Ri, denoted as MCOTi, as follows: 
MCOTi = iit
Tt
RC / )N (max
∈
                                                                                (1) 
The average composite object type of rows for MCB is computed as follows: 
ACOTrow=
Mr
1 ∑
=
Mr
i i
MCOT
1
                                                                                     (2) 
The same procedure could be applied to compute ACOTcol. For a small value δ as a threshold, CED is then 
determined based on the difference between ACOTrow and ACOTcol as follows: 
CED = 
⎩⎨
⎧
>
≤
     ACOT - ACOTl"directiona-one"
MCBnoisthereiforACOT - ACOTl"directiona-bi
ColRow
ColRow
δ
δ
 ||         
 ||          ,"
                   (3) 
4.2 Table Classification  
We follow the method in [10,11,12] to train and test our proposed table classification in the business and news 
directory of the DMOZ open directory project. We use the following 12 keywords: “exchange rate”, “score”, 
“sport”, “finance”, “stock”, “weather”, “report”, “shopping”, “table”, “results”, and “value” to extract 1502 
unique tables from 236 pages of 105 web sites. These 1502 tables are manually classified into 1198(79.76%) 
layout tables and 304 (20.24%) data tables. To decide the thresholds for the four table features with ratios, 
five-fold cross-validations are applied to obtain the thresholds in Table 3.  
We use the following two classical classification techniques: Bayesian and ID3 decision tree. To illustrate 
the importance of the table feature CED, we also perform classifications without CED. By treating data tables 
as the desired classification, with δ in (3) set as 0, the precision, recall, and F-measure values of the 
classification results are listed in Table 4. 
From Table 4, it is easy to see that the inclusion of CED boosts the precision and recall tremendously.  
5. WEB TABLE TRANSCODING 
In WTTC, the web table transcoding component calculates the table width based on font size information, 
number of characters in a string, image metadata, and CC/PP of the mobile device. It then performs 
transcoding based on the classification result. For layout tables, we would use one-column-view and zooming 
as main strategies, such that the whole table would be preserved together. For data tables, we would use 
zooming and transposition as main strategies. 
When the calculated table width exceeds the screen width of the mobile device, the zooming strategy 
would be applied. Its procedures include: (1) decreasing the distances between cell content and their borders 
and (2) shrinking images inside cells. 
The procedures for the one-column-view strategy are to adjust tables by adopting the sequential placement 
methods [6,16] used in placing the semantic blocks sequentially for web pages on the mobile devices. We 
Bayesian ID3  
Classification 
without CED
Classification 
with CED 
Classification 
without CED 
Classification 
with CED 
Precision 0.4604 0.9801 0.7576 0.9114 
Recall 0.8366 0.9673 0.1634 0.9412 
F-measure 0.5939 0.9737 0.2688 0.9261 
Feature name Classification 
with CED  
Classification 
without CED  
Link content ratio 50% 50%
Textual content ratio 20% 80%
Image content ratio 80% 40%
Cells-without-span 
ratio 70% 80% 
Table 4. Classification effectivenessTable 3. Thresholds for table features with ratios 
ISBN: 978-972-8939-40-3 © 2011 IADIS
148
original table would be treated as identifiers and be copied to all split fragments. Finally, a zooming strategy 
would be applied to each group so that the transcoded results could fit the screen width. For large data tables 
with ACOTrow – ACOTcol > δ, general transcoding strategy would be appropriate. Figure 8 is a transcoding 
example of tables with 77 columns and 7 rows, in which a splitting procedure is applied before transcoding. 
6. CONCLUSIONS AND FUTURE WORK 
We designed and implemented a web table transcoding system based on table classification (WTTC) so that 
the semantics of the original table could be preserved. More specifically, we proposed a new table feature, Cell 
Extension Direction (CED), which represents the direction of correlated cell content. CED is determined by 
the difference between average composite object type for rows and that for columns.  
We demonstrated the power of CED in classifying web tables into data and layout tables. The classification 
result and the CC/PP configurations of the mobile device were then used to apply the one-column-view, 
zooming, and transposition transcoding strategies customized for the mobile devices. For large data tables, we 
use transposition and zooming strategies. For layout tables, we use one-column-view and zooming strategies. 
The flexibility provided by WTTC in the zooming ratios helps improve users’ browsing experience.  
This methodology focuses on leaf tables, and nested tables are treated as layout tables. More investigation 
in verifying the above handling is ongoing. Besides the <table> tag, we would like to extend this methodology 
to other HTML elements, such as <DIV> and CSS files.  <DIV> tags are becoming popular in rendering 
tabular data, and are used for many miscellaneous purposes. Without clear semantics from the cell content, the 
semantics of the <DIV> tag needs more investigation. Meanwhile, CSS files are commonly used in many web 
pages for presenting consistent styles. Features obtained from CSS files would improve the classification 
result. More interestingly, CSS files themselves may also need to be transcoded.  
REFERENCES 
[1] Artail, H. & Raydan. M. (2005). Device-aware Desktop Web Page Transformation for Rendering on Handhelds. 
Personal Ubiquitous Computing, 9(6), 368-380. 
[2] Bickmore, T., Girgensohn, A., & Sullivan, J. (1999). Web Page Filtering and Re-authoring for Mobile Users. The 
Computer Journal, 42(6), 334-346. 
[3] Chen, Y., Xie, X., Ma, W. & Zhang, H. (2005). Adapting Web Pages For Small-Screen Devices. IEEE Internet 
Computing Archive, 9(1), 50-56. 
[4] He, J., Gao, T., Hao, W. & Yen, I.L. (2007). A Flexible Content Adaptation System Using a Rule-Based Approach. 
IEEE Transactions on Knowledge and Data Engineering, 19(1), 127-140. 
[5] Hurst, M. (2002). Classifying Table Elements in HTML. Proceedings of the 11th International World Wide Web 
Conference, 7-11. 
[6] Hurst, M. (2006). Towards a Theory of Tables. International Journal on Document Analysis and Recognition, 8(2-3), 
123-131. 
[7] Hwang, Y., Kim, J. & Seo, E. (2003). Structure-Aware Web Transcoding for Mobile Devices. IEEE Internet 
Computing, 7(5), 14-21. 
[8] Okata, H. & Miura, T. (2007). Detection of Layout-Purpose TABLE Tags Based on Machine Learning. Lecture Notes 
in Computer Science 4556, Part 3, 116-123. 
[9] Tajima, K. & Ohnishi, K. (2008). Browsing Large HTML Tables on Small Screens. Proceedings of the 21st annual 
ACM symposium on User Interface Software and Technology, 259-268. 
[10] Wang, Y. & Hu, J. (2002). Detecting Tables in Html Documents. Proceedings of the 5th International Workshop on 
Document Analysis Systems, 249-260. 
[11] Wang, Y. & Hu, J. (2002). A Machine Learning Based Approach for Table Detection on the Web. Proceedings of 
11th International World Wide Web Conference, 242-250. 
[12] Wang, C., Xie, X., Wang, W. & Ma, W.Y. (2004). Improving Web Browsing on Small Devices Based on Table 
Classification. Proceedings of the 12th International World Wide Web Conference, 20-24. 
[13] Wu, J. J. & Yang, J. H. (2007). Using Content Analysis Technique to Enhance Content Adaptation System. 
Proceedings of the 9th IEEE International Symposium on Multimedia Workshops, 23-28. 
ISBN: 978-972-8939-40-3 © 2011 IADIS
150
99 年度專題研究計畫研究成果彙整表 
計畫主持人：周清江 計畫編號：99-2221-E-032-068- 
計畫名稱：維持表格語意之行動網頁自動調適 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 3 3 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 1 1 100%  
研究報告/技術報告 0 0 100%  
研討會論文 1 1 100% 
篇 
 
論文著作 
專書 1 1 100% 章/本 專書之一章 
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
