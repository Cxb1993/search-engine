  2
( )i xφ K = 1, ,min ( )ijA jj n xµ= …                            (2) 
where Aµ  is the membership degree for fuzzy set A . 
Supposing that a fuzzy system consists of r  fuzzy rules, then 
by the weighted average defuzzification method, system output 
is calculated by [18]  
1
1
( )
( )
r
i ii
r
ii
x a
u
x
φ
φ
=
=
=
∑
∑
K
K                            (3) 
The fuzzy controller antecedent part can be partitioned in 
advance without much difficulty. For example, it can be simply 
partitioned by grid-type. That is, if the number of fuzzy sets in 
input variable ix  is is , 1, ,i n= … , then the total number of 
fuzzy set combinations in input variables is 
1
n
ii
s
=
∏ . This 
corresponds to 
1
n
ii
s
=
∏  grids (fuzzy rules) in the input product 
space. For the consequent part, it is difficult to select the 
consequent values without expert knowledge. Let the candidate 
control actions be from the set 1 2{ ,  ,  ,  }NU u u u= … . For 
each rule, one of the N  candidate actions is chosen. If there are 
r  fuzzy rules in a fuzzy controller, then we have to decide the 
best one from a total of rN  fuzzy controller combinations. This 
leads to a combinational optimization problem. Since the ACO 
algorithm is proposed using an ant population to collectively 
solve discrete combinational problems, this motivates the ACO 
proposition to design fuzzy controller consequent parts, called 
ACO-FC.  
In ACO-FC, the antecedent part is partitioned in advance and 
all candidate control actions listed in the set 
U = 1{ ,  ,  }Nu u… . An ant trip is regarded as one consequent 
value combination selected from every rule. For example, in Fig. 
1, there are four fuzzy rules, denoted by R1 ~ R4, in a fuzzy 
controller and four candidate actions, 1 4~u u , denoted by 
nodes for each rule. Starting from the initial state, the nest, the 
ant moves through R1~R3 and stops at R4, where the ant trip is 
marked by a bold line. For each fuzzy rule, the node visited by 
the ant is selected as the consequent part of the fuzzy rule. For 
the whole fuzzy controller constructed by the ant in Fig. 1, the 
consequent part values in R1 ~ R4 are 2u , 3u , 1u , and 4u , 
respectively. The pheromone trails on the ant tour are updated 
according to constructed fuzzy controller performance.  
Trip determination from the current fuzzy rule to the next 
fuzzy rule is based on pheromone trails between the rules, and 
searching for the best one among all fuzzy rule combinations is 
pheromone level based, which is stored in a pheromone matrix 
shown in Fig. 1. The pheromone matrix size is 2N N+ , where 
the size N  in the second term is used to store pheromone 
information for selecting the first fuzzy rule consequent action. 
Each pheromone matrix entry is denoted by ijτ , where 
0 ~i N=  and 1 ~j N= . As shown in Fig. 1, 
Initial 
state
2 1τ
1 1τ
0 4τ0 3τ
1 4τ
4 1τ
2 4τ
3 1τ
4 4τ
0 1τ 0 2τ
3 3τ
1 2τ 1 3τ
2 3τ
3 4τ
2 2τ
3 2τ
4 3τ4 2τ
1u
2u
3u
4u
1u 2u 3u 4u
Pheromone 
matrix
0 jτ
i jτi jτ i jτ
R1 R2 R3 R4
1u
2u
3u
4u
1u
2u
3u
1u 1u
2u 2u
4u
3u
4u
3u
4u
Initial state
02τ
23τ
31τ
14τ
 
Fig. 1. Fuzzy controller constructed by an ant tour and the corresponding 
pheromone matrix. 
 
for two neighboring rules mR  and 1mR + , if the consequent 
action selected by mR  is iu , then for 1mR +  the selection of one 
consequent action out of the N candidates is based on ijτ , 
1 ~j N= . This means that consequent part selection of each 
fuzzy rule is dependent on the consequent part of its 
neighboring fuzzy rule. The special value 0 jτ  determines the 
control action selection of 1R  when an ant moves out from its 
nest.  
Determination of the heuristic value η  usually requires a 
priori information about the problem instance. The controlled 
plant model is assumed unknown except the change of output 
direction with control input. For example, in a temperature 
control system, it is known that control voltage increase causes a 
higher temperature. For the candidate control actions in each 
fuzzy rule, two heuristic values Lη  and Sη ( Lη > Sη ) are 
assigned to two sets of control actions, the positive and the 
negative, respectively. Let the controller inputs be control error 
( )e k , which is defined as the difference between real control 
output ( )y k  and desired output ( )dy k , and change of error 
( ) ( ) ( 1)e k e k e k∆ = − − . For rules whose inputs are 
( ) 0e k >  and ( ) 0e k∆ > , then heuristic values of the set of 
positive control actions are assigned with Lη  and the other set 
is assigned with Sη . The same idea is applied to the other fuzzy 
rules whose antecedent variables are ( ) 0e k <  and 
( ) 0e k∆ < .  
In the initial of the ACO-FC system, a colony of aN  ants is 
generated and placed in the nest, (0)ijτ s’ are set as positive 
constants, and a terminal condition is defined. The terminal 
condition in this paper is the total number of searching iterations 
performed by the ant colony. Next, the ant moves through a trip 
that corresponds to the choice of all fuzzy rule consequent 
actions, according to the pheromone level. When the current 
fuzzy rule consequent action is iu , then the transition 
  4
ijτ  is represented by 8-bits. There are two jobs done in this 
module. The first job is to implement pheromone update in Eq.  
(5). To avoid the use of multiplier circuits, the operation 
( )ij tρτ  in Eq. (5) is implemented by a right shift operation. 
With 0.875ρ = , ( )ij tρτ  can be implemented by 
( ) {[ ( ) 1] [ ( ) 2] [ ( ) 3]}ij ij ij ijt t t tρτ τ τ τ= >> + >> + >> , 
where the symbol “ >> ” means a right shift operation. The 
value *ij kFτ∆ =  is added to ijτ  only when a new *kF  is 
found. If this is the case, corresponding updated pheromone 
matrix entries are decided by Reg2.     
 The other job of this module is to broadcast a pheromone 
matrix row to Consequent selection module. After pheromone 
update, row 0 in the pheromone matrix is broadcasted to the 
Consequent selection module because all ants start their tour 
from the nest. The next row to be broadcasted is decided by the 
signal [ ][ ]rule k m  received from the Consequent selection 
module. 
(3) Pheromone summation: This module uses an adder to add 
elements of pheromone information ijτ  from the Pheromone 
matrix module. There are fifteen 8-bit elements broadcasted 
from the Pheromone matrix module, so the output 
1
N
sum ijj
τ τ
=
=∑  of the adder is represented by 12-bits.  
(4) Random number generator: This module together with 
the Consequent selection module selects the consequent action 
of each fuzzy rule in probability. The heuristic information 
assignment in Eq. (4) is problem-dependent. To ease 
implementation and for generality, the heuristic information in 
Eq. (4) is ignored, and Eq. (4) becomes   
1
( )
( )
( )
i j i j
i j N
s u mi jj
t
p t
t
τ τ
ττ
=
= =∑ .                (7) 
Adder CMP
[ ][ ]rule k m4
≥
12
Rτ
4
iˆjτ
 
Fig. 5. The Consequent Selection module. 
This corresponds to β =0 in ACO-FC and the resulting 
algorithm is denoted by ACO-FC(0) for distinction. Though 
ACO-FC(0) learning speed is slower than ACO-FC, its 
performance is satisfactory and  better than GA, as shown in 
Section V simulations. The objective of this module is to 
generate a random number Rτ  uniformly from the interval  
[0, ]sumτ , where sumτ  is a variable, without the use of 
multiplier and divider circuits. The module is shown in Fig. 4. 
First, a 16-bit Logical Feedback Shift Register (LFSR) [19] is 
used. The LFSR can be used to generate a random number 
uniformly from a constant interval according to the number of 
used least significant bits (LSBs).  
 (5) Consequent Selection: This module selects each fuzzy 
rule consequence based on ijτ  and Rτ , as shown in Fig. 5. 
Initially, set counter 1C = . For every clock, send ijτ  to an 
adder. Then compare adder output with Rτ . If adder output is 
smaller than Rτ  then set 1C C= +  and send next ijτ  to the 
adder until the output is larger than Rτ . This module output is 
the C th consequent value in the candidate set, denoted by 
rule[ k ][ m ].        
IV.  SIMULATIONS AND EXPERIMENTS 
In subsection V-A, fuzzy controllers designed by ACO-FC 
are simulated. In ACO-FC, the ant number is aN =10, and 
parameters ρ  and c  are set to 0.9 and 0.1, respectively. The 
heuristic values are set at Lη =8 and Sη =2. The initial 
pheromone τ (0)s’ are all set to 1. To increase control accuracy, 
the candidate action number N  is selected to be larger or equal 
to the rule number r  in the following simulations. This way, no 
fuzzy rules are forced to share the same consequent action. The 
ACO chip is verified from a fuzzy controller design for a water 
bath temperature control system in subsection V-B. 
A. Simulations Results of Soft-Implemented ACO-FC  
 
Fig. 6. Fuzzy control result by ACO-FC in Example 1, where reference and 
actual outputs are denoted by a dashed line and a solid line, respectively.  
 
Fig. 7. The average quality values over 50 runs for different methods in Example 
1.  
 
 
