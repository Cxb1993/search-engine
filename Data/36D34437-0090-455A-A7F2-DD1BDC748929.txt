 2
complex object, blending operations play an 
important role because they can connect 
intersecting primitives to smooth out the 
unwanted sharp edges, kinks, and creases. In 
the literature, blending operations are 
reviewed as follows: 
(1). Pure boolean set operations [17], 
Max/Min, have C0 continuity only and may 
generate non-smooth blending surfaces. 
Fortunately, R-functions [16] provide 
Boolean set operations with Cn, n≥1, 
continuity. However, they always deform the 
shapes of primitives totally. 
(2). In order to enable primitives to be 
deformed locally after blending, many 
blending operations offered blending range 
controls [7, 8, 10-13, 18, 19]. They provided 
blending range parameters to freely adjust 
the size of the transition of the resulting 
blending surface, and blended primitives can 
be deformed locally.  
(3). For lower computing complexity of 
blending, soft object modeling was proposed. 
Soft objects can be blended easily by soft 
blend, which perform summation only, 
because soft objects are defined using field 
functions. A field function is the composition 
of a potential function and a distance 
function. In the literature, existing potential 
functions can be found in [3, 5, 8, 9, 14, 
21-23] and existing distance functions in [1, 
2, 4-6, 8, 20, 22]. As for other blends, Perlin 
proposed Boolean set operations by 
performing product operations only for soft 
object modeling in [15]. And blending 
operations with blending range controls were 
also proposed to blend soft objects in [7, 12]. 
Although soft object modeling has less 
computing complexity of blending, it still 
cannot provide a difference operation with 
blending range parameters. Among existing 
methods, only union and intersection 
operators have been proposed for soft object 
modeling, such as those developed from the 
scale method [12]. Although Perlin’s 
Boolean set operations contain a difference 
operation, they do not provide blending 
range parameters. To solve this problem, this 
project develops a theoretical framework. If 
the requirements of the theoretical 
framework is satisfied,  one can transform 
an existing blending operators of soft objects 
into a complete family of Boolean set 
operators, including union, intersection, and 
difference. 
Furthermore, scale functions in [1] and 
soft blend are applied, respectively, into the 
proposed theoretical framework and then 
two new families of Boolean set operators, 
called scale set operations and soft set 
operations, are developed. Scale set 
operations can offer blending range 
parameters and soft set operations can have 
lower computing complexity by performing 
summation only. 
2. Research method (研究方法) 
This section defines soft objects first and 
then the framework is proposed. 
2.1. The definition of a soft object 
A primitive soft object can be defined 
using a primitive defining function fi(v) as 
the point set  
{v∈Rn|fi(v)≥0.5}, i=1,2,…, 
which is also referred to as fi≥0.5 for short 
and whose boundary surface is referred to as 
 4
(1+r2)r12+x1(1+r1)r22+(x1+x2)p), and c=r12 x22 
+r22x12+2px1x2. Besides, the value of BA2 
must lie in [h1, h2], h1= Min(x1,x2), 
h2=(r1x2+r2x1)/(r1+r2+r1r2), and region III is 
defined as {(x1,x2)|x1/(1+r1) <x2<(1+r2)x1}. 
2.2. The framework 
In addition to those operations in Section 
2.1, Perlin also proposed Boolean set 
operations for soft object modeling in [15]. 
These operators are described as follows:  
(a). Intersection: BI2 (x1, x2)=x1x2. 
(b). Union: BU2 (x1, x2)= x1+x2-x1x2. 
(c). A difference of x1 from x2: BD2 (x1, x2)= 
x1-x1x2.  
From Perlin’s operations above, it can be 
obtained the following property that  
If the range of the defining function 
fi(v) lie completely and exactly in the 
interval [0, 1], then the complement of a 
soft object fi(v)≥0.5 can be written by 
fi(v)≤0.5 that is equivalent to 1-fi(v)≥ 0.5. 
So, the operation 1-fi(v) is the defining 
function of the complement of the soft 
object fi(v)≥0.5. This can be also shown by 
Perlin’s operators, which can be rewritten 
as BU2(x1, x2)= 1-BI2(1-x1, 1-x2)=x1+x2 -x1x2 
and BD2(x1, x2)=BI2 (x1, 1-x2)= x1-x1x2. 
Extending the above property, the 
theoretical framework to transform an 
existing blending operator of soft object 
modeling into a complete family of Boolean 
set operators can be described as follows: 
Step (1): Obtain an intersection or a 
union operator, denoted as BIk(x1,…,xk) or 
BUk(x1,…,xk) : ++ → RR k . 
Step (2): If BIk(1,…,1)<1, then develop 
an increasing normalization function, NS(u), 
such that NS(0)=0, NS(0.5)=0.5 and NS 
(BIk(1,…,1))=1 all hold. If BUk(1,…,1)>1, 
then develop an increasing normalization 
function, NA(u), such that NA(0)=0, NA(0.5) 
=0.5 hold, and NA(u)=1 and )()( uN uA =0 both 
can hold for u ≥1. That is, both the operators 
NS(BIk(x1,…,xk)) and NA (BUk(x1,…,xk)) can 
map [0, 1]k≡ [0, 1]×... ×[0, 1] completely and 
exactly into the interval ]1,0[ . 
Step (3): Then, the dual forms of 
NS(BIk(x1,…,xk)) and NA(BUk(x1,…,xk)) can 
define two new families of Boolean set 
operations as follows: 
(1). Boolean set operations from 
NS(BIk(x1,…,xk)) : (a). Intersection: NS(BIk 
(f1,…,fk)); (b) Union: 1-NS(BIk(1- f1,… ,1- fk)); 
(c) Difference of  the object f1≥0.5 from 
objects fi≥0.5, i=2,...,k: NS(BIk(f1, 1- f2 , …, 
1-fk)).  
(2). Boolean set operations derived from 
NA(BUk(x1,…,xk)): (a)Intersection: 1-NA(BUk 
(1-f1,…,1-fk)). (b) Union: NA(BUk(f1,…,fk)). (c) 
Difference of object f1≥0.5 from objects 
fi≥0.5, i=2,...k: 1-NA(BUk(1-f1, f2 ,…,fk)). 
The reasons why the requirements for 
the normalization functions NS and NA in 
Step (2) need to be satisfied is described as 
follows: 
(1). The requirements NS(0.5)=0.5 and 
NA(0.5)=0.5 ensure that after normalizing, 
the blending surfaces NS(BIk(f1,…,fk))=0.5 
and NA(BUk (f1,…,fk))=0.5 are still the same 
as the original blending surfaces BIk(f1,…,fk) 
=0.5 and BUk (f1,…,fk) =0.5. 
(2). If BIk(1,…,1)<1, then 1-BIk(1,…,1) 
>0. This implies the values of the derived 
union operation 1-NS (BIk(1-f1,… ,1-fk)) may 
be larger than 0 at (0,...,0). Thus, the union 
1-NS(BIk(1-f1,…,1-fk)) may enlarge other 
blended primitives when reused as a new 
 6
the value of the complement 1-BSk(x1,…,xk) 
may be negative and out of the domain of 
soft object modeling. According to the 
requirement of Step (2) of the framework, a 
normalization function NA(u) is required and 
proposed as follows: 
NA(u) ⎪⎩
⎪⎨
⎧
<
≤≤−−
>
=
5.0
15.0)1(41
11
2
uu
uuu
u
,  (4) 
where 0)1()( =uAN  and 1)5.0()( =uAN  so NA(u) 
is continuous and differentiable at 1 and 0.5. 
And )()( uN uA =0 always hold for u ≥1. 
Thus, using Eq. (4) as NA(u), it follows 
that NA(BSk(x1,…,xk)) can derive a new 
family of Boolean set operations, called soft 
set operations. These operations are: 
(a). Soft intersection: 1-NA (BSk (1-f1,…,1-fk))= 
1-NA (k-f1-…-fk)) 
(b). Soft union: NA(BSk(f1,…,fk)=NA(f1+… 
+fk). 
(c). Soft difference of f1≥0.5 from fi≥0.5, 
i=2,...k: 1-NA(BSk(1-f1, f2 ,…,fk)) =1-NA(k -f1 
+f2 +…+ fk)). 
Figure 4 sketches the shapes of the 
blending curves of binary soft set operators: 
1-NA(BS2(1-x1,1-x2))=0.5, NA(BS2(x1,x2))=0.5 
and 1-NA(BS2(1-x1,x2))=0.5. These shapes 
explain why soft set operators can be used as 
Boolean set operators on soft objects. 
Figure 5 demonstrate a die created by the 
soft difference 1-NA(BSk(1-f4, f5 ,…,f19)). 
 
Figure 5. A die generated using the soft 
difference 1-NA(BSk(1-f4, f5 ,…,f19)), where 
f4 is a soft intersection, f4=1-NA(BSk (1-f1,…, 
1-f3)) on 3 pairs of parallel planes, and 
f5 ,…, and f19 are balls.  
    
       (a)                (b) 
Figure 3. The scale difference operation  of 
large crossing cylinders from small one by 
1-NS(BA2(1-f1, 1-f2)) (a) without bulge 
elimination, and (b) with bulge elimination 
on the marked region.  
1
1
0.5
0.5
x1
x2
NA(BS2(x1,x2))=0.5
1-NA(BS2(1-x1,x2))=0.5
1-NA(BS2(1-x1,1-x2))=0.5
(0,0)  
Figure 4. The shapes of the blending curves 
of binary soft set operators: 1-NA 
(BS2(1-x1,1-x2))=0.5, NA(BS2(x1,x2))=0.5 and 
1 - NA(BS2(1-x1,x2))=0.5.  
