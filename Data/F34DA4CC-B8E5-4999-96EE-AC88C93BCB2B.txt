2行政院國家科學委員會專題研究計畫成果報告
以 Pattern-Based XML雙向轉換器和Web Service 技術建置
一個具擴展性的數位內容系統
Using Pattern-Based Bi-Directional XML Transformation and
Web Service to Construct Scalable Digital Content System
計畫編號： NSC 95-2221-E-029-033
執行期限：95 年 8 月 1 日至 96 年 7 月 31 日
主持人： 陳隆彬 副教授 東海大學資訊工程與科學系
共同主持人：吳毅成 教授 國立交通大學資訊工程學系(所)
計畫參與人員：林宜融，林奕賓
一、中文摘要
隨著 Web 2.0 時代的來臨，相關的應用和技
術的發展也越來越興盛，大量的資訊透過網際網路
快速傳遞，因此，如何整合多樣化且隨時更新的電
子文件就成為一個很重要的問題。
XML 文件能夠讓使用者自行定義相關的標籤
與屬性的性質，把資料用 XML 的形式儲存可以表達
出文件內容的結構。XSLT 與 XQuery 為兩種常見
的 Script 來描述如何將多個 XML 文件的查詢與
轉換成 HTML 文件來加以呈現。以往無論是多個資
料來源的整合，或是程式設計師和網頁的美工人員
為了設計這些 XSLT 或 XQuery 的 Script 所需的
溝通協調，都是相當費時的工作。
本文提出一個自動化的 XQuery Script 生成
系統，此系統分析圖形化介面的網頁擷取工具在萃
取網頁資料時的擷取規則，進而產生相關的 XQuery
Script 來使得萃取出來的資料能重新以網頁的方
式呈現；再搭配 Web Service 即有的技術就可建
立可擴展性的數位內容系統。
關鍵詞：XML、XQuery、XSLT、網頁擷取、數位
內容
Abstract
As the Internet becomes more popular, a large
number of documents are published via Web sites.
XML is a standardized format designed for
representing structured data to Web applications. Thus,
transformation of documents in XML format becomes
an important issue to integrate multiple and frequently
updated Web sites.
Currently, XSLT and XQuery are two common
ways to describe how to transform the XML
documents to HTML format for representation.
However, developing XSLT or XQuery is a
time-consuming task. In this report, a system to
generate XQuery script automatically is developed.
The proposed system utilizes the existing visual Web
data extraction tools to gather the mapping
relationship between the source and destination
documents to be transformed.
Recording and analyzing the mapping
relationship can generate the transformation script,
such as XQuery generated automatically. Integrating
the transformation technology with current technology
of Web Service, we can construct scalable digital
content system easily.
Keywords: XML, XQuery, XSLT, Web extraction,
Digital Content System
二、緣由與目的
In [1] [2] , we know constructing and
maintaining a data-intensive Web site is a costly task.
It may involve the several complex sub-tasks,
including design the data model, build the wrappers
and then query the data in the Web sites.
Fig 1. Data-intensive web
As illustrates in Figure 1, building the Web site
requires transformation among XML documents. For
example, wrap the data from the Amazon's Web site is
a transformation from the web pages of Amazon's
Web site to the database, that both are in XML format.
