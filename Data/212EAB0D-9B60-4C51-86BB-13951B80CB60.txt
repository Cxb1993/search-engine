2 
introduces  quantization  errors  such  that  the  decoded  discrete  cosine  transform  (DCT) 
coefficients  sometimes  represent  invalid picture  color data  (RGB values outside of  the  range 
0‐255). However, when the DCT coefficients of the JPEG encoding of the cover image have been 
modified to include the secret message in the least significant bits, we find that the coefficients 
become  statistically  more  likely  to  produce  to  invalid  picture  color  values  which  must  be 
clipped, under a testing regime. 
Essentially, we find steganographic DCT coefficient  least‐significant‐bit modification with 
the secret message detectably increases the occurrence of non‐valid RGB values. In this project, 
we detect JPEG stego‐blocks, by identifying a color overflow abnormality in the image decoding 
process.   
In this project, a steganalytic technique for blocks with color overflows will be presented. 
If all of color overflows will not disappear by slight modification of DCT coefficients, the block 
will classify as a stego‐block. 
Keywords: Steganalysis, steganography, color overflow. 
 
報告內容 
一、 前言 
2001/02/05 Jack Kelley 接連在《USA Today》發表兩篇報導, 指出美國官方及專家
認為賓拉登及其組織成員可能透過將恐怖攻擊計畫藏在色情網站的圖片之中, 或是運動聊
天室來傳遞攻擊指令 [1-2]。2001 年 9 月 11 日, 蓋達組織對美國本土發動有史以來最嚴重
的恐怖攻擊，造成了 2998 人死亡 [3]。因此，美國國家安全單位懷疑賓拉登和蓋達組織早
就開始使用數位隱藏技術(steganographic techniques)來達到秘密通訊的目的 [4]。 
所謂的數位隱藏技術, 就是將機密訊息嵌入到數位媒體之中, 再透過網路傳送。從外
觀上觀察, 嵌有機密訊息的偽裝媒體(stego-media)和原始的掩護媒體(cover-media)幾乎相
同，用肉眼難以察覺之間的差異[5]。為了防止類似 911 的事件再度發生, 分析數位媒體之
中是否被嵌入額外訊息, 就變成一項非常重要的研究課題。 
目前在網際網路上, 最普遍的影像傳送與儲存格式就是 JPEG 壓縮標準[6], 因此, 網
路上也提供許多隱藏工具, 可以讓人輕易的將訊息嵌入到 JPEG 中, 因此針對 JPEG 影像做
隱藏分析, 過濾出藏有機密訊息的偽裝影像變成很重要的研究領域。JPEG壓縮標準是以8*8
區塊大小為壓縮單位, 因此, 機密訊息同樣必須嵌入到各個區塊之中, 因此, 我們可以分別
針對一個個區塊個別探索, 只要發現一個區塊有被嵌入機密訊息的證據, 我們就可以宣告
這是一張藏有機密的偽裝影像。 
二、 研究目的 
本計劃的研究目的就是針對 JPEG 影像, 提出一個針對 8*8 大小的影像區塊的隱藏分
析技術, 用來辨識 JPEG 偽裝區塊, 用來進一步判斷該影像是否嵌有機密訊息。 
4 
掩護影像來得小。這個差距就是用來估算嵌入資料量的基礎。 
2003 年 1 月, J. Fridrich 等人針對 R. Machado 的 Stego 嵌入法, 提出配對分析法
(Pairs Analysis) [13]。因為機密訊息嵌入在索引值的最低位元, 調色盤中的色彩形成一個一
個的配對, J. Fridrich 等人使用高階統計資訊(higher-order statistical), 對三種不同類型的
調色盤影像: 1). 數位相機取像轉存 GIF 影像, 2). 卡通影像, 及 3).電腦產生的碎形影像
(fractal image), 分別進行分析。實驗顯示配對分析法的效能比 RS 分析法及卡方攻擊法都
要好。同時, 配對分析法不但可以偵測出僅僅嵌入 10% (0.1 bit per pixel) 的偽裝影像, 甚
至可以準確估計出機密訊息的嵌入量。 
2004 年中國模式識別國家重點實驗室(NLPR) 在 ICPR04 與 ICIP04 兩個研討會都有
隱藏分析的論文[14, 15]提出, 論文所提出的方法大致是一樣的, 不過, 實驗範圍則有所延
伸。第一篇論文是針對似 Jsteg 隱藏法(Jsteg-like steganography)的兩種嵌入次序 – 循序
(sequential)或隨機 (random)做隱藏分析 ; 第二篇論文則是將實驗範圍延伸到  QIM 
(Quantization Index Modulation)嵌入技術。T. Tan 等人使用 P. Sallee 提出的觀點[16], 用
一般化 Cauchy 分配(generalized Cauchy distribution)來描述量化後 DCT AC 係數的分布, 
而精確估算出原始掩護影像的量化後 DCT AC 係數的直方圖。有了原始掩護影像的直方圖, 
加上偽裝影像的直方圖, 自然就容易精確估算嵌入訊息的長度。 
2006 年我們提出 JPEG 影像在解壓縮過程中的色彩溢位(color overflow) 是與嵌入
行為是息息相關的[19]。嵌有機密訊息的 JPEG 影像, 影像品質勢必受到影響, 當壓縮資料
還原成影像時, 發生色彩溢位的像素也同樣增多。根據模擬 Jsteg 隱藏演算法進行分析, 
JPEG 影像的色彩溢位特徵,確實可以用來破解 Jsteg 類的隱藏技術。 
目前所有針對 JPEG 偽裝影像所做的隱藏分析研究, 都是針對整張影像的內容分析, 
本計畫的目標則是僅針對一個 8*8 的影像區塊做分析, 並不需要把所有的偽裝區塊都篩選
出來, 只要成功篩選出一個偽裝區塊, 就可以直接判斷該張影像為偽裝影像。 
四、 研究方法 
在介紹本計畫所採用的方法之前, 我們首先以一個區塊實例來大致說明 JPEG 影像
的解壓縮流程。圖 1 是 JPEG 區塊解壓縮的流程圖。 
 
圖 1.  JPEG 解壓縮流程圖。 
6 
最後, 利用下列式子就可以將影像區塊從 YCbCr 空間轉回 RGB 色彩空間, 如圖 5。 
⎥⎥
⎥
⎦
⎤
⎢⎢
⎢
⎣
⎡
⎥⎥
⎥
⎦
⎤
⎢⎢
⎢
⎣
⎡
=
⎥⎥
⎥
⎦
⎤
⎢⎢
⎢
⎣
⎡
128-Cr
128-Cb
Y
01.7721
0.71414-0.34414-1
1.40201
B
G
R
 (2) 
   
(a)  Y (b)  Cb (c)  Cr 
圖 4  JPEG 的區塊實例: 亮度與彩度值 
從圖 5 中, 我們發現有一些像素的色彩值超出了原先色彩值容許的區間範圍 [ 0, 
255], 一般的影像處理軟體就會將其設定為色彩的邊界值, 如圖6。完成上述所有處理後, 整
個區塊將被顯現出來, 如圖 7。 
   
(a)  R (b)  G (c)  B 
圖 5  JPEG 的區塊實例: RGB 色彩值 
 
8 
   
(a)  Y (b)  Cb (c)  Cr 
圖 8  JPEG 的區塊實例: 將解壓縮區塊重新壓縮後的量化 DCT 係數 
隱藏分析方法二 
根據理論, 除了四捨五入處理外, 基本上 JPEG 壓縮過程是一個可逆, 無失真的處理
程序。因此, 對於在解壓縮中所得到 DCT 係數, 如果我們可以對每一個係數直接進行修改, 
修改的範圍定為正負 0.5 之間, 然後在進行 InverseDCT 轉換, YCbCr 轉 RGB 色彩值, 應該
可以得到一張完全沒有發生色彩溢位的數位影像。反之, 如果所有可能都已經試過之後, 仍
然無法得到完全沒有溢位的區塊, 我們便可以推斷這個影像區塊是嵌有機密訊息的。 
為了驗證上述推斷, 我們實作了一個可以讓使用者自行調整 DCT 係數的系統, 使用
者可以利用滑鼠左鍵來增加 DCT 係數值 0.1, 按滑鼠右鍵來減少 DCT 係數值 0.1, 如圖 9
所示; 當使用者改變 DCT 係數之後, 系統就會自動顯示所對應的 RGB 值改變的情況, 計算
色彩溢位的情況, 並顯示發生色彩溢位的位置, 如圖 5 所示。 
除此, 為了讓使用者可以明確地知道該如何修改 DCT 係數值, 才會影響到某些像素
的RGB色彩值, 我們開發的隱藏分析系統透過對DCT核心矩陣的分析, 可以提供使用者正
確的指示, 並即時告知影響程度為何。 
 
圖 9.  可供使用者自行調整之功能。 
10 
utilities EzStego, Jsteg, Steganos, and S‐Tools ‐ and some lessons learned,” in Proc. 3rd 
Internat. Workshop on Information Hiding, pp. 61‐76 (1999) 
9. N. Provos, “Defending Against Statistical Steganalysis,” 10th USENIX Security Symposium, 
August 13‐17, 2001. 
10. J. Fridrich, M. Goljan & R. Du, “Detecting LSB steganography in color and gray images,” 
Magazine of IEEE Multimedia (Special Issue on Security), October‐November, 2001, pp. 
22‐28. 
11. J. Fridrich, M. Goljan, & D. Hogea , “Steganalysis of JPEG Images: Breaking the F5 Algorithm,” 
in Proc. 5th Internat. Workshop on Information Hiding, Noordwijkerhout, The Netherlands, 
October 7‐9, 2002, pp. 310‐323. 
12. J. Fridrich, M. Goljan, & D. Hogea , “Attacking the OutGuess,” ACM Workshop on Multimedia 
and Security 2002, Juan‐les‐Pins, France, December 6, 2002. 
13. J. Fridrich, M. Goljan, & D. Soukal, “Higher‐order statistical steganalysis of palette images,” in 
Proc. EI SPIE Santa Clara, CA, Jan 2003, pp. 178‐190. 
14. X. Yu, Y. Wang & T. Tan, "On estimation of secret message length in JSteg‐like steganography," 
17th Internat. Conf. on Pattern Recognition, 2004.(ICPR 2004), 23‐26 Aug. 2004, Cambridge 
Univ., UK., Vol. 4, pp.673‐676. 
15. X. Yu, Y. Wang & T. Tan, “Model based steganalysis,” 2004 Internat. Conf. on Image Processing 
ICIP 2004), 24‐27 Oct. 2004, Singapore, Vol. 4, pp.2625‐2628. 
16. P. Sallee, “Model‐Based Steganography,” Second International Workshop on Digital 
Watermarking(IWDW 2003) Seoul, Korea, October 20‐22, 2003, pp. 254‐260. 
17. Y.‐K. Lee, S.‐Y. Hwang & Z.‐H. Ou, “A novel quantity based on clipping statistics for Jsteg 
steganalysis,” 8th IASTED Int. Con. on Signal & Image Processing (SIP 2006), August 14‐16, 
2006, Honolulu, Hawaii, USA. 
計畫成果自評 
本計劃針對 JPEG 影像區塊提出兩個隱藏分析方法, 順利達成原計畫申請書中陳述
的目摽。本計畫共完成實作兩個系統: Jsteg-like 的嵌入模擬系統與 JPEG 區塊隱藏分析系
統。Jsteg-like 的嵌入模擬系統, 讓使用者可以從影像中選取一個區塊, 直接對其色彩值進
行各種處理, 並顯示處理過程中的所有色彩值的變化。使用者也可以直接依其需要, 任意改
變經過量化後值為到非 0及非 1之DCT係數的最低位元, 最後甚至可以將處理過後的DCT
係數存成檔案, 以供 JPEG 區塊隱藏分析系統載入進行分析。JPEG 區塊隱藏分析系統針對
JPEG 影像區塊進行隱藏分析, 使用者載入 DCT 係數後, 可以進行本計畫所提出的兩個方
法。 
參與本計畫的人員對 JPEG 壓縮技術都有深入的了解, 對DCT轉換核心也有更進一
步的認識, 在程式撰寫方面, 都確實有提升程式設計之能力。附件是本計畫年度主持人參加
PSIVT 2009 於東京所發表的論文。 
350 Y.-K. Lee et al.
each carrier data value with the message-bit. This approach is simple to under-
stand and easy to implement, and the resulting ’stego-media’ containing hidden
messages appear to be of high visual ﬁdelity. Consequently, the LSB embedding
approach has become the basis of many techniques that hide messages within
multimedia carrier data. LSB embedding may even be applied in particular data
domains - for example, embedding a hidden message into the color values of
RGB bitmap data, or into the frequency coeﬃcients of a JPEG image. LSB em-
bedding can also be applied to a variety of data formats and types [2]. Therefore,
LSB embedding is one of the most important steganographic techniques in use
today.
Since LSB embedding is one of the simplest eﬀective data hiding techniques,
it has long been a focus for researchers proposing steganalytic attack methods.
The Chi-square attack was the ﬁrst statistical test that could detect hidden
messages automatically [3]. Two values whose binary representations diﬀer only
in the LSB are called a pair of values (PoV). For example, 68(01000100)2 and
69(01000101)2 are a PoV. If the numbers of 1s and 0s are equal and distributed
randomly in the secret message that is to be embedded steganographically, the
frequency of two values in each PoV will be equal after message embedding. This
regular equality pattern, called the PoVs artifact, is an unusual characteristic
in the histogram domain. If the PoVs artifact can be found in a digital media,
there is a high probability that a hidden message is embedded in the media. The
Chi-square attack is a very eﬀective technique against LSB embedding systems.
A known counter-technique to avoid exposing hidden messages to this attack
involves decreasing the embedding capacity of the carrier medium. If less than
50% of the maximum capacity of the carrier medium is used, the risk of detection
drops accordingly.
For detecting messages embedded in 24-bit color images, Fridrich et al. pro-
posed the RPQ (Raw Quick Pairs) steganalysis system in 2000 [4]. However, the
technique was shown to be unreliable for digital camera images that are stored
in an uncompressed format, where a large number of unique color values may
exist. In 2001, Fridrich et al. proposed a more reliable attack on LSB embedding
called RS steganalysis [5]. Fridrich et al. estimate that messages hidden within
high quality images using an embedding rate of more than 0.005 bits per pixel
are detectable by RS steganalysis.
F5 is a steganographic algorithm proposed in 2001 for JPEG images [6]. In
the F5 algorithm, statistical properties in the histogram of quantized DCT coef-
ﬁcients are preserved and a matrix encoding [7] is implemented. Matrix encoding
decreases the number of changes needed, in order to improve the embedding eﬃ-
ciency. In IHW 2002, Fridrich et al. proposed a steganalytic method for breaking
the F5 algorithm [8]. The key element of this attack comes from the estimation
of the cover-image histogram from the stego-image. Experimental results have
shown that modiﬁcations of as few as 10% of the usable capacity of the DCT
coeﬃcients, can be reliably detected.
Recently, many steganographic methods based upon LSB embedding have
attracted statistical attacks, and experimental results have shown that this
352 Y.-K. Lee et al.
0 ≤ T ≤ 1, where t is the length of secret message and N is the total number
of pixels in the image I. A total of t pixels are selected randomly for embedding
t bits of secret message. In general, the secret message that is being embedded
is always compressed and encrypted before embedding. The number of ’1’ and
’0’ in the hidden message can therefore reasonably be assumed to be equal.
Thus, among the selected pixels, half of the pixels with even values (2k) will
not change when the embedded message-bit is 0, and half of the pixels with odd
values (2k+1) will change into 2k when the embedded message-bit is 0. Similarly,
among the unselected pixels, the number of pixels with value 2k is HI(2k)(1−T ).
Thus, the number of pixels with value 2k can be derived as follows.
HI′(2k) = HI(2k)(1 − T ) + HI(2k)(T/2) + HI(2k + 1)(T/2)
= HI(2k)(1 − T ) + [(HI(2k) + HI(2k + 1)](T/2)
= HI(2k)(1 − T ) + HPI(k)(T/2), (5)
Similarly, the frequency of the other value in the same PoV can be derived as
follows.
HI′(2k + 1) = HI(2k + 1)(1 − T ) + HI(2k + 1)(T/2) + HI(2k)(T/2)
= HI(2k + 1)(1 − T ) + [(HI(2k + 1) + HI(2k)](T/2)
= HI(2k + 1)(1 − T ) + HPI(k)(T/2), (6)
Let DPI(k) denote the diﬀerence between the frequencies of values in the k-th
PoV in the cover-image I. Thus,
DPI(k) = |HI(2k) − HI(2k + 1)|, (7)
From Eqs. (5) and (6), when the embedding rate is T , the diﬀerence between
the frequencies of values in the k-th PoV in the stego-image I ′ can be derived
as follows.
DPI′(k) = |HI′(2k) − HI′(2k + 1)|
= |HI(2k)(1 − T ) − HI(2k + 1)(1 − T )|
= |[HI(2k) − HI(2k + 1)]|(1 − T )
= DPI(k)(1 − T ). (8)
So, the diﬀerence between the frequencies of values in the same PoV will become
(1 − T ) times after LSB embedding. When T = 0, there is no secret message
embedded in the image. Thus,
HI′(2k) = HI(2k), (9)
HI′(2k + 1) = HI(2k + 1), (10)
DPI′(k) = |HI′(2k) − HI′(2k + 1)|
= |HI(2k) − HI(2k + 1)|
= DPI(k). (11)
354 Y.-K. Lee et al.
(a) Cover-image ’Waterlily’ (b) Stego-image
(c) Histogram of Waterlily (d) Histogram of stego-image
(e) Enlarged histogram of (c) (f) Enlarged histogram of (d)
Fig. 1. PoVs artifact exists in the histogram after applying LSB embedding
3.1 Basic Model
A pseudorandom number generator (PRNG) seeded with a value known to both
sender and receiver, is used to randomly select one of two neighbors, i.e., q − 1
or q + 1, where q is the original value. Let M denote a binary secret message
sequence, M = {mi|mi ∈ {0, 1}, i = 0, 1, . . . , t − 1}, where t is the message
length. Let fI(x, y) denote the grayscale value at (x, y) in cover-image I, and
let LSBI(x, y) denote the LSB of the grayscale value at (x, y). The embedding
algorithm is as follows.
356 Y.-K. Lee et al.
Fig. 2. Comparison between the basic model and LSB embedding
the same as Fig. 1(b). Fig. 3(c) shows a part of the enlarged histogram from
values 130 to 139. In Fig. 3(c), we can observe that the PoVs artifact has been
removed. Applying the Chi-square attack on Fig. 3(a), the Chi-square index is
very close to 0, p = 3.4417e− 15. This means the message hidden in Fig. 3(a) is
essentially undetectable by the Chi-square attack.
3.2 Advanced Model
The goal of the advanced model is to raise the security level even further.
Although the PoVs artifact does not appear in the stego-images created by the
basic model, only one unknown variable exists in the right side of Eq. (16).
Observing Eq. (16), it may be noticed that the source of the frequency of q
in I ′ is the halved frequencies of selected pixels with values q − 1 and q + 1
in I. When the value of LSBI′(xi, yi) = mi, the threshold used to decide
the chance of selecting q − 1 and q + 1 is 1/2, that is, a 50% chance. In the
advanced model, these thresholds are allowed to vary within a predeﬁned set.
Let β(q) denote the predeﬁned threshold used on the pixels with value q. β(q)
can be generated by the same PRNG used in the embedding process. Now,
the dependence of histogram value q upon values q − 1 and q + 1 is unpre-
dictable. The embedding algorithm of the advanced model is described as follows.
Embedding algorithm of advanced model: EA
Input: cover-image I, binary message sequence M
Output: stego-image I ′
Step 1:
I ′ = I
Step 2:
Use a PRNG to generate 256 random numbers, β, 0 ≤ β ≤ 1.
Let β(q) denote these random numbers, q = 0, 1, . . . , 255.
Step 3:
Use a PRNG to randomly select t pixels from I ′.
Let (xi, yi) denote the coordinate of selected pixel. i = 0, 1, . . . , t − 1.
358 Y.-K. Lee et al.
Fig. 4. Comparison between two proposed models
HI′(q) = HI(q−1)(T )(1−β(q−1))/2+HI(q)(1−T/2)+HI(q+1)(T )(β(q+1)/2).
(17)
Obviously, Eq. (17) is more complex than Eq. (16). In addition to the embed-
ding rate T , another (unpredictable) value β(q) has been added to the right side
of Eq. (17). Thus, the security level has been elevated further in the advanced
model.
4 Experimental Results
To verify the undetectability of the proposed modiﬁed LSB embedding scheme,
two statistical attacks are used, the Chi-square attack and RS steganalysis. These
two attacks generally perform very well at detecting hidden messages embedded
by LSB embedding techniques.
The test set contains 150 original images - including 8 standard images down-
loaded from the USC-SIPI image database [10], 75 images downloaded from the
photoSIG [11], and 67 images obtained from a Panasonic Lumix FX7 digital cam-
era. A PRNG was used to generate simulated encrypted secret messages. This
is reasonable because encrypted message binary data would be indistinguishable
from pseudo random binary data.
For every image, pseudorandom data was embedded using LSB embedding,
basic model embedding and advanced model embedding, respectively. Varied
embedding rates (from 5% to 100%) were also tested to measure the risk of
exposure of the hidden message.
Fig. 5 shows the average experimental result for 150 stego-images with the
same embedding rate. The x-axis shows the embedding rate from 5% to 100%.
The y-axis is the Chi-square index which estimates the probability of a hidden
message existing in the picture. In Fig. 5, using LSB embedding, the average
Chi-square index is larger than 0.5 when the embedding rate is over 80%. Using
the basic model to embed a message, the average Chi-square index is always
below 0.1, no matter what embedding rate is chosen. Using the advanced model,
all of the average Chi-square index values are near 0 - that is, lower than the
value of original cover-image.
Fig. 6 shows the average experimental result of RS steganalysis. The x-axis
shows the actual embedding rate and the y-axis is the estimated embedding rate
using RS steganalysis. In Fig. 6, we can observe clearly that the embedding rate
of traditional LSB embedding can be estimated precisely with RS steganalysis.
360 Y.-K. Lee et al.
those created by traditional LSB embedding. Finally and most importantly, the
PoVs artifact is removed from the stego-images. Experimental results show that
both of the well-known Chi-square and RS steganalysis attacks are unable to
detect the existence of secret messages embedded with the new system. Using the
proposed scheme is therefore more secure than using traditional LSB embedding
techniques.
References
1. Kahn, D.: The Codebreakers - the Comprehensive History of Secret Communica-
tion from Ancient Times to the Internet. Scribner, New York (1996)
2. Johnson, N., Jajodia, S.: Exploring Steganography: Seeing the Unseen. IEEE Com-
puter, 26–34 (February 1998)
3. Westfeld, A., Pﬁtzmann, A.: Attacks on Steganographic Systems. In: Pﬁtzmann,
A. (ed.) IH 1999. LNCS, vol. 1768, pp. 61–76. Springer, Heidelberg (2000)
4. Fridrich, J., Du, R., Meng, L.: Steganalysis of LSB Encoding in Color Images. In:
IEEE International Conference on Multimedia and Expo., pp. 1279–1282 (2000)
5. Fridrich, J., Goljan, M., Du, R.: Detecting LSB Steganography in Color and Gray
Images. Magazine of IEEE Multimedia (Special Issue on Security), 22–28 (October-
November 2001)
6. Westfeld, A.: F5 - A Steganographic Algorithm High Capacity Despite Better
Steganalysis. In: Moskowitz, I.S. (ed.) IH 2001. LNCS, vol. 2137, pp. 289–302.
Springer, Heidelberg (2001)
7. Crandall, R.: Some Notes on Steganography. Posted on Steganography Mailing
List (1998), http://os.inf.tu-dresden.de/∼westfeld/crandall.pdf
8. Fridrich, J., Goljan, M., Hogea, D.: Steganalysis of JPEG Images: Breaking the
F5 Algorithm. In: Petitcolas, F.A.P. (ed.) IH 2002. LNCS, vol. 2578, pp. 310–323.
Springer, Heidelberg (2003)
9. Sharp, T.: An Implementation of Key-Based Digital Signal Steganography. In:
Moskowitz, I.S. (ed.) IH 2001. LNCS, vol. 2137, pp. 13–26. Springer, Heidelberg
(2001)
10. USC-SIPI image database (accessed 12th August 2008),
http://sipi.usc.edu/database/
11. photoSIG (accessed 12th August 2008), http://www.photosig.com
表 Y04 
 
我們這篇論文的三位主要作者都來了東京, 將由我上台報告論文。 
  
國家科學中心的會議室果然很大, 上台報告會有點緊張。 
 
Dr. Cees Snoke 是大會  Tutorial 2 的講者之一, 是來自荷蘭的年輕學者, 才  30 歲。這
次演講的主題是  Concept‐Based Video Retrieval。晚宴前, 我們一起聊天交流... 
二、與會心得 
從世界各地來參加此研討會的學者非常多, 會中討論的情況也相當踴躍，顯現大家都
對國際學術交流相當重視。台灣的學者應該多參與這類學術交流活動，以增進了解世界最
An Advanced Least-Signiﬁcant-Bit Embedding
Scheme for Steganographic Encoding
Yeuan-Kuen Lee1, Graeme Bell2, Shih-Yu Huang1, Ran-Zan Wang3,
and Shyong-Jian Shyu1
1 Computer Science and Information Engineering, Ming Chuan University, Taiwan
2 International College, Ming Chuan University, Taiwan
3 Computer Science and Engineering, Yuan Ze University, Taiwan
{yklee,gbb,syhuang,sjshyu}@mail.mcu.edu.tw, rzwang@saturn.yzu.edu.tw
Abstract. The advantages of Least-Signiﬁcant-Bit (LSB) stegano-
graphic data embedding are that it is simple to understand, easy to
implement, and it results in stego-images that contain hidden data yet
appear to be of high visual ﬁdelity. However, it can be shown that
under certain conditions, LSB embedding is not secure at all. The fatal
drawback of LSB embedding is the existence of detectable artifacts in
the form of pairs of values (PoVs). The goals of this paper are to present
a theoretic analysis of PoVs and to propose an advanced LSB embedding
scheme that possesses the advantages of LSB embedding suggested
above, but which also provides an additional level of communication
security. The proposed scheme breaks the regular pattern of PoVs in
the histogram domain, increasing the diﬃculty of steganalysis and
thereby raising the level of security. The experimental results show that
both the Chi-square index and RS index are less than 0.1, i.e., the
hidden message is undetectable by the well-known Chi-square and RS
steganalysis attacks.
Keywords: steganography, steganalysis, LSB embedding.
1 Introduction
Both steganography and cryptography may be used to protect secret messages
in order to achieve private communication. Steganography not only hides the
meaning but also the existence of the hidden message. Ideally, only the intended
receiver can extract the message, as other people viewing the carrier medium are
unaware of the existence of the hidden message. Steganographic techniques can
therefore protect not only the secret message but also the sender and the receiver.
In the ﬁeld, cryptographic techniques are typically suﬃcient to protect secret
data. However, users such as informers may need steganographic techniques to
protect themselves and their whole organization [1].
In recent years, many discreet methods for hiding encrypted messages within
digital ’carrier’ media have become conveniently available. One such approach is
the LSB embedding approach, which simply replaces the least signiﬁcant bit of
T. Wada, F. Huang, and S. Lin (Eds.): PSIVT 2009, LNCS 5414, pp. 349–360, 2009.
c© Springer-Verlag Berlin Heidelberg 2009
An Advanced LSB Embedding Scheme for Steganographic Encoding 351
approach is generally not secure at all. T. Sharp proposed an implementation,
called ’Hide’, of key-based image steganography in 2001 [9]. Hide uses a modi-
ﬁed LSB method for embedding messages. The LSBs are not simply replaced;
instead the data value is incremented or decremented if the LSB diﬀers from
the message-bit. Hide uses a pseudorandom sequence generator to determine
whether to increment or decrement the data value.
In this paper, we ﬁrst present a theoretic analysis of the LSB embedding
approach and then propose an advanced LSB embedding scheme. The sample
value that will be incremented or decremented depends on a series of predeﬁned
thresholds that are generated by the user-speciﬁed stego-key. The new sample
value not only depends on the generated pseudorandom number but also depends
on the original sample value. Experimental results show that both of the well-
known Chi-square and RS steganalysis attacks are unable to detect the existence
of secret messages embedded with the new system. Using the proposed scheme
is therefore more secure than using traditional LSB embedding techniques.
The rest of this paper is organized as follows. In Section 2, a theoretic analysis
of the weakness of the LSB embedding approach is presented. An advanced
LSB embedding scheme is proposed in Section 3. The experimental results are
discussed in Section 4. Finally, the paper is concluded in Section 5.
2 Analysis of LSB Embedding
LSB embedding involves replacing the least signiﬁcant bit of the original data
value with the secret message-bit directly. For a grayscale image, the intensity
values range from 0 to 255. These can be grouped into 128 PoVs, i.e., (2k, 2k +
1), k = 0, 1, . . . , 127. Applying the LSB embedding operation cannot change a
value so that it corresponds to another, diﬀerent PoV. Thus, the operation of
LSB embedding on a PoV satisﬁes the closure property, i.e., no matter whether
the embedded message-bit is 1 or 0, the result will continue to belong to the
same PoV.
Let I denote an original grayscale cover-image and I ′ denote the created stego-
image in which the secret message is embedded. Let HI denote the histogram
of a grayscale image I. Let HI(i) denote the frequency of gray value i, and let
HPI(k) denote the frequency of values in the k-th PoV in I. Then,
HPI(k) = HI(2k) + HI(2k + 1), (1)
HPI′(k) = HI′(2k) + HI′(2k + 1). (2)
The closure property ensures that summing the histogram values for each value
in the PoV, produces a total that will be unchanged by LSB modiﬁcation. Thus,
HPI(k) = HPI′(k) (3)
Let T denote the embedding rate, that is,
T = t/N, (4)
An Advanced LSB Embedding Scheme for Steganographic Encoding 353
So, the closure property of LSB embedding is obvious. When T = 1, all pixels
will used to embed the secret message. From Eqs. (5), (6) and (8),
HI′(2k) = HPI(k)/2, (12)
HI′(2k + 1) = HPI(k)/2, (13)
DPI′(k) = 0. (14)
From Eqs. (12) and (13), when T = 1, then
HI′(2k) = HI′(2k + 1) = HPI(k)/2. (15)
The regular equality pattern of PoVs in the histogram domain has been proven.
Fig. 1 is an example of the PoVs artifact caused by LSB embedding in the
histogram domain. Figs. 1(a) and 1(b) show the original cover-image entitled
Waterlily and its corresponding stego-image with full capacity of binary ran-
dom data, respectively. The peak signal-to-noise ratio (PSNR) of Fig. 1(b) is
51.1409db. Figs. 1(c) and 1(d) are the histograms of Figs. 1(a) and 1(b), respec-
tively. Figs. 1(e) and 1(f) show the enlarged histograms between values from 130
to 139 of Figs. 1(c) and 1(d). Note that the PoVs artifact appears in Fig. 1(f),
and that the diﬀerences decrease within the 5 PoVs from (130, 131) to (138, 139).
3 Proposed Scheme and Discussion
The PoVs artifact exposes the existence of a hidden message. One obvious way
to decrease the risk of message exposure resulting from the PoVs artifact is to
decrease the embedding capacity. This paper proposes a second way to raise the
security level, in which the embedding capacity is not reduced, while the ﬁdelity
of the stego-image is maintained.
The idea behind the proposed scheme is direct. PoVs will be disturbed in the
embedding process. For any integer q, there are two neighbors with the same
LSB, i.e., q − 1, q + 1. The PoVs artifact is caused by having a ﬁxed choice
of neighbor value to replace the original value, that is, a ’pair value’. Yet, two
possible neighbors of equal diﬀerence to the integer q exist. Further, no matter
which neighbor is selected, the ﬁdelity of the resulting stego-image will be as
good as that created by a traditional LSB embedding approach.
Two data embedding models, a basic model and an advanced model that are
both based upon this idea of alternative neighbours, are included in the proposed
scheme. Basically, the basic model is similar to the method used in [9]. Note that
the message extraction process for both of these new models is almost identical
to the traditional LSB embedding method. The embedding process will now be
described in detail.
An Advanced LSB Embedding Scheme for Steganographic Encoding 355
Embedding algorithm of basic model: EB
Input: cover-image I, binary message sequence M .
Output: stego-image I ′.
Step 1:
Set I ′ = I.
Step 2:
Use a PRNG to randomly select t pixels from I ′.
Let (xi, yi) denote the coordinate of the selected pixel. i = 0, 1, . . . , t − 1.
Step 3:
Let qi = fI(xi, yi) denote the grayscale value of pixel (xi, yi).
Let mi denote the message-bit to be embedded in pixel (xi, yi).
For all pixels (xi, yi),
if LSBI′(xi, yi) = mi,
do nothing;
if LSBI′(xi, yi) = mi,
use a PRNG to generate a random number γ, 0 ≤ γ ≤ 1,
if γ > 0.5,
set fI′(xi, yi) = qi + 1;
if γ ≤ 0.5,
set fI′(xi, yi) = qi − 1;
Step 4:
Output I ′
So, in short, we choose pseudorandomly (but in a manner predictable to both
sender and receiver) one of the two possible neighboring values, whenever it is
necessary to perturb the pixel value to encode a message bit. The receiver can
reconstruct the message by revisiting the pseudorandomly selected pixels and
extracting the LSBs of pixel values directly.
Fig. 2 illustrates how the LSB embedding and the basic model perform mes-
sage embedding under the condition where the value is an even number 2k. Thus,
LSBI′(xi, yi) = 0. The probability that message bit mi = 1 is 1/2, hence half
of the pixel values will change to 2k +1 by using the LSB embedding. However,
in the embedding process of the basic model only a quarter of the pixel values
will change to 2k + 1, and the other quarter of the pixel values will change to
2k−1. Therefore, there is no ﬁxed pair of values in the histogram of stego-image
I ′. The frequency of pixel value q can be derived as:
HI′(q) = HI(q − 1)(T/4) + HI(q)(1 − T/2) + HI(q + 1)(T/4). (16)
Since the frequency of pixel value q in the stego-image I ′ is contributed towards
from the frequencies of q − 1, q and q +1 in the cover-image I, there is no PoVs
artifact.
Fig. 3 gives a sample of experimental results examining the behavior of the
basic model. Both the cover-image and the secret message are the same as those
used in Fig. 1. Figs. 3(a) and 3(b) show the created stego-image and its corre-
sponding histogram, respectively. The PSNR of Fig. 3(b) is 51.1409db, which is
An Advanced LSB Embedding Scheme for Steganographic Encoding 357
(a) Stego-image
(b) Histogram (c) Enlarged histogram
Fig. 3. A sample of experimental results based upon the basic model
Step 4:
Let qi = fI(xi, yi) denote the gray value of pixel (xi, yi) .
Let mi denote the message-bit embedded in pixel (xi, yi).
For all pixels (xi, yi),
if LSBI′(xi, yi) = mi ,
do nothing;
if LSBI′(xi, yi) = mi,
use a PRNG to generate a random number γ, 0 ≤ γ ≤ 1,
if γ > β(q),
then fI′(xi, yi) = qi + 1 ;
if γ ≤ β(q),
then fI′(xi, yi) = qi − 1 ;
Step 5:
Output I ′
Fig. 4 illustrates the diﬀerence between the basic model and advanced one.
When LSBI′(xi, yi) = mi , the probability that the value q will change to q − 1
or q + 1 is not equal any more, and depends indirectly upon the value q. The
frequency of pixel value q, HI′(q), can be expressed as follows.
An Advanced LSB Embedding Scheme for Steganographic Encoding 359
Fig. 5. Average experimental result of Chi-Square attack
Fig. 6. Average experimental result of RS steganalysis
In contrast, when using either the basic model or the advanced model to embed
the secret message, all the embedding rates estimated by RS steganalysis fall in
the range 7% to 10%. This experimental result demonstrates that the proposed
scheme is essentially undetectable when attacked by RS steganalysis.
5 Conclusion
The PoVs artifact caused by traditional LSB embedding exposes the existence of
a hidden message. In order to raise the security level of covert communication,
the weakness of the LSB embedding system has been theoretically analyzed
here and a two-variant modiﬁed LSB embedding scheme has been proposed.
There are three important features within the modiﬁed scheme. Firstly, the
extraction process used in the proposed scheme is almost identical to the one
used in traditional LSB embedding. Secondly, from a PSNR point of view, the
ﬁdelity of the stego-images resulting from the proposed scheme is as good as
