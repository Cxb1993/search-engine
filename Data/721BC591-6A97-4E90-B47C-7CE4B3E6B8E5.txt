Network-on-Chips with 3D stacked DRAMs is developed. The 
proposed algorithm is able to reduced the manufacturing cost of the 
3D TSVs when the performance constraint is met. 
 
 2
 
中文摘要： 
三維積體電路(three dimensional integrated circuits, 3D IC)技術，為解決晶片通訊效
能瓶頸之新興方法。三維晶片技術將堆疊的數層晶片以垂直通道連接，進而達到比二
維晶片更低之通訊傳輸延遲。此外，三維晶片還有高包裝密度(package density)與多元
模組整合(heterogeneous integration)等優點。但三維晶片也有高功率密度(power density)
與高晶片溫度的問題，當堆疊層數越多，晶片過熱的問題也就更嚴重。 
單晶片多處理器(Chip Multiprocessor, CMP)已成現今處理器設計主流，其兩大效能
瓶頸，記憶體頻寬(memory bandwidth)與核心間通訊延遲(inter-core communication 
delay)，皆可由三維技術解決。然而，不同記憶體架構，對三維單晶片多處理器系統之
溫度與效能皆有影響。因此，在本計畫中，我們深入探討以晶片網路(Network-on-Chip)
連結之三維單晶片多處理器之記憶體架構設計。計畫第一年我們發展了針對三維單晶
片多處理器的系統效能及溫度模擬平台。此一平台可快速地模擬微通道(micro channel)
液冷的散熱效果。透過這樣一個平台，我們分析了微通道與傳統散熱片(heat sink)兩種
不同架構下的發熱狀況。在第二年的計畫裡，我們提出了三維系統晶片記憶體架構合
成演算法，根據系統需求來決定記憶體架構。在不影響給定的系統效能條件下，此演
算法可以有效減少穿矽通孔(Through Silicon Vias, TSVs)的數量，以達到較佳的生產效
率。 
 
 
 
 
 
 
 
 
 
 
 
 
關鍵字詞：三維堆疊技術，單晶片多處理器，記憶體架構設計，系統效能與溫 
度行為，微通道散熱技術
目錄 
 
中文摘要： .............................. 2 
英文摘要： .............................. 3 
一、 研究計畫之背景與目的： ............. 5 
二、 研究方法與成果： ................... 6 
三、 參考文獻： ....................... 17 
四、 計畫成果自評： .................... 19 
 
 6
二、 研究方法與成果： 
 
In this section, we present the performance and thermal simulator platform for 3D ICs with 
microchannel-liquid cooling and the distributed memory interface synthesis algorithm for 
the first and the second year of the project. 
 
I. First Year: Thermal modeling for 3D ICs with Integrated 
Microchannel Cooling  
3D technology poses a major challenge in thermal management due to the linear 
power density increasing with the number of vertically stacked device layers [2], [3]. 
Therefore, researchers have found that microchannel liquid cooling [4] to be a 
promising solution [5][6][7][8] as heat removal method for 3D ICs. The using of 
micrometer scaled channel and liquid coolant media offer very low thermal 
resistance between the chip surface and the coolant. The most recent work from 
IBM [9], [10] demonstrates the manufacturability of integrated microchannel 3D ICs 
as shown in Figure 1. Microchannel heatsinks are distributed among device layers. 
Cooling fluid is supplied to the 3D stack using fluidic channels on the substrate. The 
fluid is then delivered to each microchannel heatsink through fluidic Through 
Silicon Vias (TSV) and pipes. The presence of cooling path at each layer enables 
direct heat dissipation from individual device layer. 
 
Figure 1: 3D-ICs using integrated microchannel cooling technology 
 
The new heat dissipation technology calls for the development of a fast and accurate 
thermal model to facilitate temperature-aware design [11], [12]. The heat transfer in 
the microchannel heatsink is complicated by a phenomenon called thermal-wakes, 
as illustrated in Figure 2. The heat transferred from the upstream heated solids to the 
coolant medium of a microchannel is convected downstream as internal energy. The 
temperature of the liquid near the solids exceeds the mixed mean temperature in the 
developing thermal boundary layer, often by a large amount. As the liquid flows 
downstream, the thermal boundary layer becomes fully developed and the 
 8
 
Figure 3: Thermal-wake Aware Network Construction Methodology 
 
i. Modeling of Heat Convection: 
The heat convection behavior in microchannels includes numerical pre-simulation 
and thermal-wake function extraction. The inputs to the branch are the flow 
condition and the microchannel/IC geometry used to extract the microchannel 
thermal-wake function, α. It should be noted that as long as the two inputs are 
kept unchanged, as seen in most designs, there is no need to run numerical 
pre-simulation again, even though the heat patterns are changed. 
The thermal-wake effect in a microchannel is observed in the transverse-to-flow 
direction as well as the downstream-wise direction. It is because channel sidewalls 
serve as a medium to convey the thermal-wake effect from/to the heated tiles of an 
upper or lower layer. Figure 4 illustrates two consecutive tiles to explain the effect, 
where one of the sidewalls and the top layer are not drawn in order to show the 
fluid flow inside the microchannel. We use a mesh to represent solid component 
hereafter. A mesh corresponds to either a lower Si tile, an upper Si tile, or a channel 
sidewall. The sizes of meshes depend on the grid strategy used for thermal-wake 
function extraction. In this project, we use the numericial pre-simulation approach 
to construct the database of thermal-wake aware function since it is easier collect 
micro-scaled data of the selected channel geometry with high accuracy. For more 
detail description on modeling of heat convection, please refer to [1]. 
 10
 
Figure 5: Schematic of two-consecutive heated tiles in the microchannel (upper) and corresponding 
resistance network (lower) used before (a) and after (b) SiO2 layer unification. 
 
iii. Integration of Thermal-Wake Function and Resistance Network: 
To account for the heat convection effect along microchannels, a component of 
thermal-wake induced temperature rise should be added to the thermal circuit. The 
fluid temperature of successor tile can be represented as the sum of the fluid 
temperature of predecessor tile as the product of heat flow and the modeled 
thermal-wake function. The temperature of the fluid for each tile could form a 
matrix and can be solved using any matrix solver. For more detail about the 
construction of the thermal resistance matrix, please refer to [1]. 
 
2. Experimental Results: 
To validate the proposed thermal model, we compare our model with the results of 
Flotherm [17], which is a commercial CFD software based on the finite-volume 
method. The iterative computation of Flotherm continues until the temperature 
deviation for all monitor points within last 30 iterations reaches 0.1℃  and 
temperature residual reaches 1.0e1. Since the simulation grid resolution affects 
accuracy, we perform Flotherm simulation with different grid resolutions, and find 
that temperature converges at and greater than the grid resolution of 400 x 320 x 25 
for the whole IC structure. Hence we use the temperature obtained by Flotherm with 
grid resolution of 400 x 320 x 25 as a referencing point for validation of the 
proposed thermal model. All the experiments in this paper were performed on a 
desktop PC with a 2.4GHz processor. The Flotherm simulation time is 37,251 
 12
II. Second Year: Distributed Memory Interface Synthesis for 
Network-on-Chips with 3D Stacked DRAMs 
3D die-stacking uses the low-latency and high-density Through-Silicon Vias (TSVs) 
as the vertical interconnects to stack several active devices on the same chip in the 
third dimension [24]. Therefore, it is natural to stack DRAMs directly on top of 
Processing Elements (PEs) to attack the memory bandwidth issue of many-core 
architecture [25][26][27][28][29][30]. To utilize the abundant bandwidth of stacked 
DRAMs, the memory interface can be composed of more than one DRAM memory 
controller (DMC) [28][30]. This forms a distributed memory interface design. With 
the distributed memory interface in 3D stacked DRAMs, it opens up a new design 
dimension in the memory subsystem. A full-blown design is the one where each PE 
has a dedicated DMC, which is associated with the maximal number of TSVs. 
However, the implementation of TSVs requires extra manufacturing cost and silicon 
area [31]. Moreover, research shows that chip yields decreases as the number of 
TSVs in a chip increases [32]. Therefore, a distributed memory interface design 
customized for the target system is necessary. A customized interface design should 
specify DMC positions, and the number of TSVs associated with each DMC. This 
new memory organization is a non-uniform memory access system since data 
allocated to different DRAM modules may result in different DRAM access latency. 
Therefore, to derive a customized distributed memory interface, data allocation and 
task assignment should also be considered. 
In the second year of this project, we propose a distributed memory interface 
synthesis algorithm. We focus on the NoC architecture for an embedded system 
where target applications are known a priori. Our synthesis tool generates the 
configuration of the distributed memory interface (including DMC allocation and 
the number of TSVs associated with a DMC), data and task assignment as well. The 
proposed algorithm is a Simulated-Annealing (SA) [33] based approach. The 
optimization goal of the proposed algorithm is minimizing the number of TSVs 
allocated in the system provided that the target performance is guaranteed. In the 
following sections, we present the problem formulation, the synthesis algorithm, and 
the experimental results. 
 
1. System Specification and Problem Formulation 
Our system consists of an application model and a NoC architecture model. We 
model the application by a Data Flow Graph (DFG). The DFG considered in this 
 14
 
2. Distributed Memory Interface Synthesis Algorithm 
The design space for the memory system synthesis algorithm is huge, and all of the 
steps in the co-design flow, DMC allocation, TSV Bus Allocation, Task Assignment 
and Data Block Assignment actually interplay with one another. Therefore, in this 
project, we propose a Simulated-Annealing (SA) based distributed memory interface 
synthesis algorithm for NoCs with stacked DRAMs. Figure 7 shows the flow chart 
of our SA-based memory system synthesis algorithm 
 
Figure 7: Flow of the SA-based memory system synthesis algorithm. 
 
Since the perturbation of DMC configuration changes the underlying hardware 
architecture, a significant change in task assignment and data assignment should be 
changed as well. For example, if the newly selected DMC configuration has less 
DMCs allocated in the system, it is very likely that the task and data assignment 
synthesized for the configuration with more DMCs can cause serious contention on 
the reduced resources and greatly increase the task set execution time. When the 
timing constraint is stringent, the new configuration may be easily rejected because 
the solution is infeasible. However, with proper reassignment of tasks and data 
blocks, it is possible that the contention on shared resources can be avoided, and the 
timing constraint is still met and the cost is greatly reduced. As we can see, trivially 
rejecting this new DMC configuration may foreclose possibly attracting DMC 
configurations. To solve this problem, we propose another SA-based method called 
Low-Temperature SA on DMA Allocation. As shown in Figure 8, whenever DMC 
 16
 
Figure 9: Synthesis results of task sets with different average amount of data transferred per edge with 
the performance constraint set to 2% degradation compared the baseline: (a) Number of allocated DMCs 
and TSVs, and (b) TSV reduction compared to the baseline architecture 
 
Figure 10 shows how the number of allocated DMCs and TSVs and TSV reduction 
change with different criteria of performance constraint. In this set of experiments, 
the performance constraints are set to 2%, 4% and 6% of performance degradation 
compared to the baseline architecture with full-blown distributed memory interface. 
We can observe that more TSV reduction can be achieved when more performance 
degradation is allowed. With 2% degradation, 0% to 50% of TSV reductions are 
achieved. With 6% degradation, the 8K-bit test set needs only 4 DMCs, and up to 
75% of TSVs can be reduced.  
For real-world applications, we test the proposed algorithm on Cosumer+Telecom, 
which has 42 tasks including applications such as JPEG, auto-correlation, FFT, etc. 
For Consumer+Telecom, when the performance constraint is set to 2% degradation, 
the proposed algorithm synthesizes a solution with only 2 DMCs and achieves 
88.89% of TSV reductions compared to the baseline. In this task set, the execution 
time of the critical path mostly spends on task execution and not data transfer. 
Therefore, only little memory interface resource is needed. 
 
 
Figure 10: Synthesis results of setting performance constraints to 2% to 6% degradation: (a) Number of 
allocated DMCs and TSVs, and (b) TSV reduction compared to the baseline architecture. 
 18
Thermal Modeling for Temperature-Aware Design,” in Design Automation Conference, 2004, pp. 
98-104. 
[13] A. Ortega, S. Ramanathan, J. D. Chicci, and J. L. Prince, “Thermal Wake Models for Forced Air 
Cooling of Electronic Components,” in Semiconductor Thermal Measurement and Management 
Symposium, 1993, pp. 63-74. 
[14] R. S. Figliola and P. G. Thomas, “An Approximate Method for Predicting Laminar Heat Transfer 
Between Parallel Plates Having Embedded Heat Sources,” J Electron Packag, vol. 117, no. 1, pp. 
63-68, 1995. 
[15] A. M. Anderson, “Decoupling Convective and Conductive Heat Transfer Using the Adiabatic Heat 
Transfer Coefficient,” in ASME Advances in Electronic Packaging, 1992, pp. 171-178. 
[16] SolidWorks, Fluid Flow Simulation Software. [Online]. Available: 
http://www.solidsolutions.co.uk/Info/Cosmos/Cosmos-Floworks.aspx 
[17] Mentor Graphics, Mechanical Analysis, FloTHERM. [Online]. Available: 
http://www.flomerics.com/products/flotherm/ 
[18] ANSYS FLUENT software. [Online]. Available: 
http://www.ansys.com/Products/Simulation+Technology/Fluid+Dynamics 
[19] J. M. Koo, S. Im, L. Jiang, and K. E. Goodson, “Integrated Microchannel Cooling for 
Three-Dimensional Electronic Circuit Architectures,” J Heat Transfer, vol. 127, Issue 1, pp. 49-58, 
2005 
[20] Y. J. Lee, Y. J. Kim, G. Huang, M. Bakir, Y. K. Joshi, A. G. Fedorov, and S. K. Lim, “Co-design of 
signal, power, and thermal distribution networks for 3D ICs,” in Design, Automation & Test in Europe 
Conference & Exhibition, 2009, pp. 610-615. 
[21] Y. J. Kim, Y. K. Joshi, A. G. Fedorov, Y. J. Lee, and S. K. Lim, “Thermal Characterization of 
Interlayer Microfluidic Cooling of Three-Dimensional Integrated Circuits With Nonuniform Heat 
Flux,” Journal of Heat Transfer, vol. 132, No. 4, p. 041009, Apr. 2010. 
[22] H. B. Jang, I. Yoon, C. H. Kim, S. Shin, and S. W. Chung, “The impact of liquid cooling on 3D 
multi-core processors,” in IEEE International Conference on Computer Design, Oct. 2009. pp. 472-478 
[23] Mizunuma, H.; Chia-Lin Yang; Yi-Chang Lu; , "Thermal modeling for 3D-ICs with integrated 
microchannel cooling," Computer-Aided Design - Digest of Technical Papers, 2009. ICCAD 2009. 
IEEE/ACM International Conference on , vol., no., pp.256-263, 2-5 Nov. 2009 
[24] Y. Xie, G. H. Loh, B. Black, and K. Bernstein. Design space exploration for 3d architectures. ACM 
Journal of Emerging Technologies in Computing Systems (JETC), 2(2):65–103, 2006. 
[25] B. Black, M. Annavaram, N. Brekelbaum, J. DeVale, L. Jian, G. H. Loh, D. McCauley, P. Morrow, D. 
W. Nelson, D. Pantuso, P. Reed, J. Rupley, S. Shankar, J. Shen, and C. Webb. Die stacking (3d) 
microarchitecture. In Proceedings of MICRO ’06, pages 469–479, Orlando, Florida, USA, December 
2006. 
[26] T. Kgil, S. D’Souza, A. Saidi, N. Binkert, R. Dreslinski, T. Mudge, S. Reinhardt, and K. Flautner. 
Picoserver: Using 3d stacking technology to enable a compact energy efficient chip multiprocessor. 
ACM SIGOPS Operating Systems Review, 40(5):117–128, 2006. 
[27] T. Kgil, S. D’Souza, A. Saidi, N. Binkert, R. Dreslinski, T. Mudge, S. Reinhardt, and K. Flautner. 
Picoserver: Using 3d stacking technology to enable a compact energy efficient chip multiprocessor. 
ACM SIGOPS Operating Systems Review, 40(5):117–128, 2006. 
[28] I. Loi and L. Benini. An efficient distributed memory interface for many-core platform with 3d stacked 
出席國際學術會議報告 
 
報 告 人 
姓 名 楊佳玲 
服 務 機 構
及 職 稱
台 灣 大 學 資 工 系
教授 
會 議 時 間 
地 點 
2011/6/5 ~ 2011/6/9  
會議名稱 Design Automation Conference 
發表論文題目 A Cycle-Level GPU Simulator  
一、與會心得 
 Design Automation Conference為當今最著名之國際設計自動化研討會。
本人很榮幸發表論文於 DAC 2011 之 WIP session (Work-in-Progress)，
故於六月赴美國參與 DAC。本人此次除發表論文外，並擔任 Research 
Competition 的評審。本實驗室所發展的 cycle-level GPU simulator 獲
得會人員的注目，多位學者表達興趣，本人與與會研究人員進行意見交流，
獲益良多。 
 
此次會議，涵蓋在 design automation 之主要課題，從 physical design 
到 system-level design，共有 54 sessions。本人於此次會議中獲益甚
多，尤其在 3D IC design 領域。在 3D IC 設計方面，vertical stacking 
可以縮減在 nano-technology 下 wire delay 造成之 performance 
hit ，但 thermal 的問題須被小心處理。 CPU 與 memory 是 3D IC 一個
非常重要的應用。除了 3D IC 外，本人對第三場 keynote talk   
Cognitive Computing: Neuroscience, Supercomputing, Nanotechnology
獲益很多。 IBM 的 DARPA SyNAPSE project 利用超級電腦來模擬
國科會補助計畫衍生研發成果推廣資料表
日期:2011/10/26
國科會補助計畫
計畫名稱: 子計畫一：三維晶片多處理器記憶體架構之分析與設計(2/2)
計畫主持人: 楊佳玲
計畫編號: 99-2220-E-002-021- 學門領域: 晶片科技計畫--整合型學術研究
計畫
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
三維積體電路是前瞻的先進技術，可以大幅縮短晶片上的通訊時間，增進系統
晶片效能，是目前積體電路發展的主流方向。台灣產業在積體電路的製造與封
裝技術上領先全球，未來也勢必朝向三維積體電路發展。本計畫所提之合成演
算法，可幫助晶片開發商於系統晶片之設計早期，即減少不必要之 TSV 資源的
使用，可有效使三維堆疊晶片之製造成本降低。 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
