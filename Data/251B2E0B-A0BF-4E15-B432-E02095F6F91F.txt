2spokes) are directly connected (i.e., all flow
must be routed through the hubs). Each of the
non-hubs is then allocated to a single hub
(single allocation) or multiple hubs (multiple
allocation) and is referred to as a spoke.
Many studies have indicated that the
implementation of hub networks has improved
the operation of the distribution function.
Typical applications of hub networks have
arisen in passenger airlines [1, 2, 3], express
package delivery firms [4], message delivery
networks [5], trucking industry [6, 7],
telecommunication system [8], supply chain of
chain stores such as Wal-Mart [9], and many
other areas.
There are several types of hub network
problems [10]. For instance, the well studied
p-hub median problem (p-HMP). In the
p-HMP, the number of hubs p is determined a
priori. The objective is to locate the hubs and
allocate the non-hubs to the hubs so that the
total transportation cost is minimized. The
transportation cost includes three components:
the collection cost incurred during the
transportation from the origin to its allocated
hub; the transfer cost incurred during the
transportation between hubs; and the
distribution cost incurred during the
transportation from the allocated hub to the
destination. It is assumed that the
transportation costs on all inter-hub links are
discounted by a factor αto reflect a scale merit
on the inter-hub links.
The uncapacitated hub location problem
(UHLP) is a different type of hub location
problems. In the UHLP, the number of hubs
is not pre-determined and a fixed cost for
establishing a hub is included in the objective
function. The capacitated hub location
problem (CHLP) is another type of hub
location problems, in which each hub has its
capacity constraint. Although the CHLP is
more commonly encountered in practice, yet it
attracts less attention than the p-HMP and
UHLP. In this research, approaches to
determine lower and upper bounds for the
number of hubs along with a hybrid heuristic
based on the simulated annealing (SA), tabu list
from the tabu search (TS), and improvement
procedures are proposed to resolve the
capacitated single allocation hub location
problem (CSAHLP). Computational
characteristics of the proposed approach are
evaluated through extensive computational
experiments using the Australia Post (AP) data
set and a newly created data set.
Computational results indicate that the
presented heuristic is capable of obtaining
optimal solutions for almost all small-scaled
problems, and outperforms the SA by Ernst and
Krishnamoorthy [11].
2. Hybrid heuristic
The hybrid heuristic for resolving the
CSAHLP, SATLCHLP, is divided into three
levels: the first level is to determine the number
of hubs; the second level is to select the hub
locations for a given number of hubs; and the
third level is to allocate the non-hubs to the
selected hubs. Procedures for these three
levels are described as follows.
2.1 Determining the number of hubs
In order to obtain the optimal/near optimal
solution effectively, it is impractical to try
every different number of hubs. We can
employ lower and upper bounds for the number
of hubs. A lower bound can be obtained by
sorting the nodes in decreasing order of
capacity and then taking as few nodes as
needed to satisfy the total flow from all nodes.
An upper bound for the number of hubs can be
derived by the following procedure:
First of all, the number of hubs is set at n
(i.e., every node is a hub). The
capacitated single allocation p-HMP is
then solved and only the transportation
cost is computed (i.e., ignoring the fixed
costs for establishing hubs). Let this
cost be TCOS1, which is the least
transportation cost incurred when
implementing the hub network. In the
next, the numbers of hubs are set at 1 and
2, respectively. The capacitated single
allocation p-HMP is solved individually
and the total costs are computed
(including the fixed costs). If the
marginal reduction of the transportation
cost is greater than the increased fixed
cost, the number of hub is increased by
one and the total cost is recalculated.
This process is repeated until the marginal
4are performed without improvement
over the best solution for the given hub
set, stop the improvement procedure.
Otherwise, update COUNTER and
return to step 1.
2.4 Heuristic SATLCHLP
Heuristic SATLCHLP is outlined as
follows:
Step 0. Set the initial temperature (T), Markov
Chain length, tabu size, and stopping
criterion. Solve the capacitated single
allocation p-HMP with p = n and record
the transportation cost. Set SIGNAL =
0 (i.e., indicate that the upper bound for
the number of hubs has not determined)
and p’=|S| (i.e., lower bound).
Step 1. Solve the capacitated single allocation
p-HMP with p equal to p’.
Step 2. Generate the initial hub locations and
apply the allocation procedure.
Step 3. Apply the SA module. Perform the
restricted single location exchange
procedure and the allocation procedure
until stopping criterion is reached.
Step 4. If p’= |S| or the resulted marginal
reduction of the transportation cost is
greater than the increased fixed cost, set
p’= p’+ 1, reinitialize T, and return to
step 2. Otherwise, if p’ |S| and
SIGNAL = 0, set upper bound for the
number of hubs B = ((p’–1) + |S|),
SIGNAL = 1 and p’= p’+ 1,
reinitialize T, and return to Step 2.
Otherwise (p’|S| and SIGNAL = 1), if
p’< B, set p’= p’+ 1, reinitialize T,
and return to step 2. Otherwise (p’|S|,
SIGNAL = 1, and p’= B), stop the
whole procedure.
3. Computational results
In this section, the AP data set from the
literature and a newly created data set are used
to evaluate the computational characteristics of
SATLCHLP. To the best of our knowledge,
the results obtained by the SA of Ernst and
Krishnamoorthy [11] match the best solutions
found in the literature. Hence, the
performance of SATLCHLP is compared with
the SA heuristic of Ernst and Krishnamoorthy.
Both heuristics were coded in C++ and all of
the experiments were performed on a Pentium
IV 3.2 GHz PC. (Note that we recoded the
SA heuristic of Ernst and Krishnamoorthy in
C++ so that both heuristics were coded by
using the same data structure and performed on
the same computer). For not causing any
confusing, the recoded SA heuristic is
abbreviated as SA’ hereafter.  
3.1 AP data set
The AP data set was introduced by Ernst
and Krishnamoorthy [13]. It was derived
from the mail flow in an Australia city and has
been regarded as a standard test data set. It
contains 200 nodes each representing a postal
district. The flow is not symmetric (i.e., Wij≠ 
Wji), Wii≠ 0, the unit collection cost (χ) is equal
to 3, the unit transportation cost on the
inter-hub links (α) is equal to 0.75, and the unit
distribution cost (δ) is equal to 2. For
small-scaled problems, five problem sizes are
considered: 10, 20, 25, 40, and 50 nodes. For
large-scaled problems, two problem sizes are
considered: 100 and 200 nodes. For each type
of problem, two versions of fixed costs are
considered: loose and tight. For the tight
version, the fixed costs are higher for the nodes
with larger capacity.
3.2 Newly created data set
A new data set with large-sized problems
was also used to evaluate the computational
characteristics of SATLCHLP. In this data set,
the x and y coordinates of a node was generated
from U[0, 100000] and the nodes are divided
uniformly into thirty classes. The flow from
node i in class c to node j was generated from
U[0.000001, c.000000]. Like the AP data set,
the flow is not symmetric (i.e., Wij≠ Wji), Wii≠ 
0, χ= 3, α= 0.75, and δ= 2. Two problem
sizes are considered: 200 and 300 nodes. We
employed the scheme of Ebery et al. [14] to
generate the capacity and fixed cost of each
node. According to Ebery et al., the capacity
of node i (i) is set to be O
Od
Od
p
n
i
mm
ii



 
5
3
,
where di is the distance from node i to the
center of mass of the system, dm and Om are the
maximum values of di and Oi, respectively, p is
used to control the number of hubs in the
6average, the solution of SA’ is reduced 6.16% 
by SATLCHLP. As to the runtime consumed,
the runtime required for SATLCHLP ranged
from 7.33 to 210.50 seconds. This indicates
that SATLCHLP is capable of obtaining a good
solution in a reasonable time.
3.3.4 Results of newly created data set
Table 3 shows the computational results
for the newly created data set. The solutions
provided by SA’ were based on running the 
heuristic 5 times each with a different random
seed. Again, we only ran our heuristic once
and the parameter settings were the same as
solving the large-sized AP problems.
According to Table 3, SATLCHLP obtained the
best solutions for all the test problems. On an
overal average, the solution of SA’ is reduced 
10.12% by SATLCHLP. The runtime required
for SATLCHLP ranged from 41.86 to 346.90
seconds. This again indicates that SATLCHLP
is capable of obtaining a good solution in a
reasonable time.
4. Conclusions and suggestions for future
research
In this research, we have presented
approaches to determine the lower bound and
upper bound for the number of hubs along with
a hybrid heuristic based on SA, tabu list from
TS, and improvement procedures to resolve the
capacitated single allocation hub location
problem (CSAHLP). Computational
characteristics of the proposed approach have
been evaluated through extensive
computational experiments using the Australia
Post (AP) data set and a newly created data set
[11]. The solution quality of the proposed
heuristic has been evaluated in empirical
comparisons with the SA heuristic of Ernst and
Krishnamoorthy [12]. Computational results
have demonstrated that the proposed heuristic
is capable of obtaining optimal solutions for
almost all small-scaled problems, and
outperformed the SA heuristic of Ernst and
Krishnamoorthy in solving the large-scaled
CSAHLP.
The effectiveness of the proposed
heuristic, we believe, is attributed to the
approaches for determining the lower and
upper bounds for the number of hubs, the
restricted single exchange procedure, and the
allocation procedure developed by this research.
As for future research, it may be desirable to
deal with the hub location problem in which
each non-hub node can only be allocated to no
more than a specific number of hubs.
Considering that the cost for establishing a hub
is a discrete function of capacity is another
important issue for future research to pursue.
References
[1] Toh RS, Higgins RC. The impact of hub
and spoke network centralization and
route monopoly on domestic airline
profitability. Transportation Journal
1985;24: 16-27.
[2] Aykin T. Networking policies for
hub-and-spoke systems with application
to the air transportation system.
Transportation Science
1995;29(3):201-221.
[3] Bania N, Bauer P, Zlatoper T. U.S. air
passenger service: a taxonomy of route
networks, hub locations, and competition.
Logistics and Transportation Review
1998;34:53-74.
[4] Kuby MJ, Gray RG. Hub network design
problem with stopovers and feeders: Case
of Federal Express. Transportation
Research 1993;27:1-12.
[5] Klincewicz JG. Hub location in backbone
tributary network design: a review.
Location Science 1998;6:307-335.
[6] Don T, Harit S, English JR, Whicker G.
Hub and spoke networks in truckload
trucking: configuration, testing, and
operational concerns. Logistics and
Transportation 1995;31:209-237.
[7] Lumsden K, Dallari F, Ruggeri R.
Improving the efficiency of the hub and
spoke system for the SKF European
distribution network. International Journal
of Physical Distribution & Logistics
Management 1999;29:50-64.
[8] Lee Y, Lim B, Park J. A hub location
problem in designing digital data service
networks: Lagrangian relaxation approach.
Location Science 1996;4:185-194.
8Table 2. Computational results of large-sized AP test problems
Ernst and Krishnamoorthy [11]
SA’ SATLCHLPProblem name Best cost
reported (SA) Best cost Average cost CPU time Cost CPU time
100LL 246713.97 250508.61 253552.30 4.79 246713.97 14.16
100LT 256638.38 265667.32 273655.72 5.15 256207.53 7.33
100TL 362950.09 364515.24 374342.32 4.03 362950.09 7.98
100TT 474680.32 498760.38 516787.26 5.99 474744.23 43.11
200LL 241992.97 240659.75 243406.90 52.03 231223.63 95.91
200LT 268894.41 263877.43 274194.01 51.83 260237.24 210.50
200TL 273443.81 240739.81 251956.01 45.17 237763.70 90.47
200TT 292754.97 293359.46 318856.91 62.72 280518.18 188.10
Overall average 313343.93 28.96 293796.08 82.20
Table 3. Computational results of newly created test problems
SA’ [11] SATLCHLPProblem name
Best cost Average cost CPU time Cost CPU time
N200c4 227189821.66 239291647.33 104.20 217913804.94 61.67
N200c6 228765892.83 233295693.53 132.55 206409859.67 68.31
N200d4 73517306.43 75382706.96 52.13 73212059.10 93.62
N200d6 66600128.64 69440113.23 65.17 65015979.72 108.04
N300c4 489789191.99 534329799.45 337.10 472340949.35 41.86
N300c6 518383325.84 532813748.60 485.45 457137363.56 47.62
N300d4 169365790.91 170169419.89 190.82 161743524.27 78.47
N300d6 152768756.74 154891786.19 216.61 152390372.65 346.90
Overall average 251201864.40 198.00 225770489.13 105.81
