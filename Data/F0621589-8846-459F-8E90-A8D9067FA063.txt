 
圖 2 Cantata 操作畫面 
 
利用視覺化語言，我們對表格運算的操
作特性提出改進，研究目的可以歸納如下： 
z 以表格運算為基礎，發展一套報表產生
過程中，用於資料轉換的視覺化語言 
 以 DAG 呈現運算過程(充分利用圖
形展現程式)。 
 以 DAG 的修改對應程式的修改(改
進腳本不易修改與最佳化的問題)。 
 建立衍生運算所需的視覺化語言，
提供自訂衍生運算的能力(改進運算
不易擴充的缺點)。 
 整合巢狀報表運算的介面(統一表格
運算與報表結構的操作方式)。 
z 實作視覺化環境 
 實踐此視覺化語言。 
 評估新的視覺化語言與現有視覺化
語言對於報表設計者的實際差異。 
 
三、視覺化表格呈現語言 
一套完整的視覺化程式語言需要定義
資料型態(Data Type)、運算(Operation)與文法
(Grammar)，並搭配友善的GUI，讓報表設計
者宣告這些資料型態的常數及使用運算。我
們的視覺化表格呈現語言 (Visual Table 
Presentation Language; VisualTPL)根據鐘[3]
及王[4]所提出的表格運算及報表結構樹，定
義四種資料型態：表格(Table)、字串(String)、
數字(Number)及布林數(Boolean)，並且對四
種資料型態都給予識別色的定義。 
VisualTPL 將運算分成兩大類：表格運
算 (Table Operations)及輔助運算 (Auxiliary 
Operations)。格運算依其特性又分成：基本
表格運算(Fundamental Table Operations)、巢
狀表格運算(Nested Table Operations)及表格
聚合運算(Table Aggregation Operations)。 
 
基本表格運算 
我們將鐘[3]所提出五種表格運算視為
基本運算。VisualTPL的表格運算可依序處理
輸入的表格串列(List of tables)。圖 3列出對應
五個表格運算的元件。 
 
 
 
 
圖 3 基本表格運算元件 
 
巢狀表格運算 
VisualTPL擴充表格資料型態的能力，使
之同時保有扁平式表格的特性及巢狀式表格
的結構，藉以整合扁平式表格運算與巢狀式
表格運算。圖 4列出VisualTPL所定義的三種
巢狀運算：Group運算、Caption運算及Layout
運算。 
 
 
圖 4 巢狀表格運算元件 
 
Group 運算用來變更表格的巢狀結構，
透過 Layout運算改變佈局資訊產生不同巢狀
式表格的效果。Caption 運算取代報表結構樹
中的 Caption 節點，能將表格併入群組的上、
下、左及右側，擴充原先 Caption 節點的功能。 
 
 2
