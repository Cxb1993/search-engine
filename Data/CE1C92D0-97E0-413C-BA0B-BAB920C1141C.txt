 2
  
Abstract  
This is the last year of our three year project. In the first year, we proposed a 
reinforcement learning model for model reference network control and the state 
tracking session classification with two implementation alternatives for dynamic 
traffic classification for QoS control. In this second year, we refined the reinforcement 
learning model and proposed “Cooperative Congestion Control for Multimedia 
Networks Based on Learning Approach”. Also in the second year for the fast optical 
header process of Optical label switch, we proposed “Optical CDMA Header 
Encoding for Optical Label Switching” to avoid O/E/O process of optical packet 
header in OLS. In this year, we focus on the fault recovery on IP layer, First We 
proposed “Progressive Link Restoration (PLR) for Optimal Routing in Link-State 
protocol” In this work, we propose two efficient link restoration algorithms, 
Progressive Link Restoration + (PLR+) and Progressive Link Restoration - (PLR-) to 
deal a single link fault or its cost change problem. PLR+ and PLR- are used to solve 
link cost increases (or link fails) and link cost decreases problems, separately. The 
PLR+/- algorithm combine the sensitivity analysis (SA) technique and network 
simplex method to reduce the computation complexity while deriving new SPT. And 
for fast recovery from node and link failure.  we Also proposed and IP node 
protection scheme IP based on IP fast local reroute “IP Local Node Protection” In 
this scheme, we just use the information form the topology data base of ordinary link 
state routing without the need of any additional control protocol while great improve 
the IP network survivability. 
 
1. Progressive Link Restoration (PLR) for Optimal Routing in 
Link-State protocol 
IS-IS and OSPF are widely used intra-domain link-state routing protocol. In these two 
link-state routing protocols, each node (router) gathers whole network topology 
information first. They then compute their own shortest path tree (SPT) by Dijkstra's 
algorithm. Further, they build routing tables through SPT. Each node can deliver its 
datagram to destination along the shortest path by these routing tables since. When the 
network topology changes due to link fault or its cost change, the link-state protocols 
need to broadcast the information to entire network. Narvaez et al. proposed a local 
restoration algorithm for link-state routing protocol to avoid flooding. The aim of the 
algorithm is to minimize the amount of information distributed. However, the 
approach is inefficient when a link fault is bidirectional. Thus Wu et al. extend the 
Narvaez et al. protocol to efficiently handle a bidirectional link fault. The two 
 4
is associated with a link cost ij
c
. The shortest path problem is to determine a shortest 
path from a given source node s to every non-source node i where i∈  N-{s}. 
Alternatively, this problem can be viewed as the same problem if we want to 
determine the paths for a source node of sending one unit of flow to every non-source 
nodes along all possible paths as cheaply as possible. In literature [4], the author 
formulate this alternative problem as an LP problem as below.  
 
 
 
where ij
x
's are called decision variables that we want to solve and the SPT can be 
found by those links (i,j)'s where ij
x 0≠
. 
 
The model is designed to find the SPT with respect to the source node s. There will be 
exactly one decision variable associated with each link. Similarly, there will be 
exactly one equality constraint for each node. For a graph G with m nodes (|N|=m) 
and n links (|L|=n), we can rewrite these constraints in a matrix form. Such matrix is 
called the constraint matrix A, where the i-th row is corresponding to the constraint 
for the i-th node in Eq.(1) and A is a m n×  matrix. The constraint matrix A is a 
sparse matrix with exactly only two non-zero entries, +1 and -1, in each column. We 
can rewrite Eq.(1) in the following standard form with the constraint matrix A.  
 
 
where the vectors c , x and b are the vectors for coefficients, decision variables and 
corresponding scalar vectors, respectively. 
 
B. Simplex Method Solution 
  In order to solve the LP problem in Eq.(1), we shall either perform the column 
exchange operation (pivoting) or apply a more efficient Big-M algorithm [10] to 
 6
check the current basis is optimal or not in once iteration.  
 
C. Network Simplex Method 
  The network simplex algorithm is a class of network structured linear 
programming algorithm which performs the simplex operations directly on the 
network itself. Since we can model a shortest path problem as a linear programming 
(LP) problem, we can use both the simplex method and network simplex method to 
solve this problem to derive the SPT. However, using the network simplex method 
would be more efficient because it takes the network structure into consideration and 
thus reduce the computation complexity. In both methods, the sets of basic links 
(BLs) and non-basic links (NBLs) are defined based on whether they are used to 
construct the SPT in current network topology.  The set of BLs is updated 
continuously until all links satisfy the optimality condition associated with them. As 
such, the SPT can be constructed according to the set of BLs. 
  But in the network simplex method, it takes advantage of the special form of the 
shortest path problem arithmetic operations. It adopts polynomial operations to 
improve the matrix operations of the simplex method. When we face the network 
problem to compute
-1tt
By c B= , we detect that the components of basis matrix B are 0, 
1 or -1. So, the 
-1tt
By c B=  can be rewritten as -i j ijy y c= , (i,j)∈BLs. Similarly, the 
components of non-basis matrix N are 0, 1 or -1 as well. Thus we can rewrite 
-
t t t
N Nc c y N=$  as - -ij ij i jc c y y=$ , (i,j)∈NBLs. We then only need n additions and 
(n-m) subtractions for computing
t
Nc
$
. The transformation from matrix to polynomial 
reduces computation complexity indeed. Next, we determine the optimal 
condition ijc
$
. If 0ijc ≥$   for all non-basis, the current basis is optimal. If not, we 
pick min{ }ijc
$
 and enter (i,j) in basis. We then update basis and repeat these steps 
until the current basis is optimal.  
  Therefore, we understand the optimization procedure of a shortest path problem 
contains: (1) using the Big-M manner to find an initial spanning tree, (2) using the 
network simplex method to find optimal solution. The Algorithm 1 combines Big-M 
manner with network simplex method in Fig. 1. 
 8
messages (usually indicate link failures or serious congestion), we still can find a 
best way, in terms of a minimal number of link replacement, to derive a new SPT 
efficiently. 
PLR+/- saves unnecessary SPT recomputation when current SPT remains optimal. 
When necessary, it also provides clues of how to derive a new SPT. PLR+/- thus 
needs a shorter period of time to converge, and it has lower computation complexity 
and needs less number of link changes than conventional routing algorithms. Before 
we elaborate the design principles and detail algorithm in later section, we first 
present the SA technology. 
 
B.  Sensitivity Analysis (SA) 
In most practical network scenario, the network condition are known exactly and are 
often estimated as best as possible. For example, if we regard the end-to-end delay as 
a link cost used in the computing of SPT algorithm, the value of such delay is 
changing over time due to network congestion or topology change, especially when 
link or node failure occurs. It is therefore important to study the effect on optimal 
solutions of the network problem to variations in certain scenarios, where such 
variations in certain scenarios, where such variations just have partial effect on the 
original optimal SPT. In such scenarios, we do not have to resolve the problem from 
the scratch for each run. The investigation of such related issues is discussed in the 
context of SA. The aim of SA is to derive the variation range for a parameter within 
which the solution will stay in the current optimal solution set. For a LP problem in 
the standard form as Eq.(2), we can perform the SA in following ways to observe the 
variation of optimal solutions when these parameters are changed over time. In other 
words, we want to know the relationship between data (link cost) and the optimal 
solution (SPT). From the variation of the data (link cost change due to congestion or 
failure), we can derive a new optimal solution (a new SPT) without having to solve 
the problem from the scratch. 
When we apply the network simplex method to solve a 
network problem, we can check the optimality condition min{ }ijc
$
 for 
understanding whether the current solution is optimal. Therefore, We have to check 
the optimality condition min{ }ijc
$
 unceasingly if the cost changes unceasingly. The 
mode is trouble and inefficiency. So, we combine SA and network simplex method 
for scanting complexity. We call it PLR+/- algorithm. 
In the process of PLR+/- algorithm, first, we adopt the SA technology to pick a 
 10
detailed variation of ε and 14c  in each iteration. 
 
  The PLR- algorithm has the similar structure with PLR+ algorithm and it is 
arranged in Fig. 3. In the STEP 1 of PLR- algorithm, we pick link (h,k) as a 
perturbative link and subtract ε  from the cost of link (h,k), then compute iy  and 
ijc$ . In computing ijc$ , the different from PLR+ algorithm is to compute those links 
(i,j) which are directed from kT . Next, similarly, we pick uv ijc c= ∩$ $  and let 
sup{ }uvcε ε= +$  in STEP2 to leave the link (p,v) in basis and enter link (u,v) in basis. 
Finally, we check the cost of the link (h,k) whether it is greater than 1 in STEP3. If 
yes, we restart the algorithm from STEP1. If not, we obtain the new SPT and the 
PLR- algorithm is terminated. Fig. 6 shows how the PLR- algorithm is used on link 
(4,8) and shows the detailed variation of ε  and 48c  in each iteration. 
 12
  Obviously, the arithmetic operations of PLR+/- algorithm are 
2 2 1qE m+ + . Thus 
the complexity of PLR+/- algorithm is 
( )qO E m+ . 
  In [14], the incremental method must recompute the new SPT when the cost of any 
single link is increased or decreased. But the PLR+/- algorithm exploits the technique 
of SA, the optimality condition of network simplex method and take the advantage of 
the outdated SPT to derive new SPT. Thus we can guarantee that the PLR+/- 
algorithm is more efficient than incremental method. The detailed comparison 
between the conventional OSPF, incremental OSPF and PLR+/- algorithm are shown 
in TABLE IV in section V. 
 
D.  Case Study: What PLR+/- Does and How PLR+/- Works 
  In this section, three figures, Fig. 4, Fig. 5 and Fig. 6, are used to explain what the 
PLR+/- does and how it works, respectively. The three figures show the same 
example but with different purposes: Fig. 4 takes snapshots of the PLR+/- to show 
what PLR+/- does, other Fig. 5 and Fig. 6 demonstrate the detail operation of how 
the PLR+ and PLR- algorithm are used to perform the link restoration incrementally 
step by step. We hope that through such a case study, explained in great details, 
readers would gain some insight of the proposed PLR+/- algorithm. 
 
  Let's begin our discussion with Fig. 4. Fig. 4(a) shows a given a bidirectional 
network topology, and a specific SPT rooted at the source node 1 is shown in Fig. 
4(b). This SPT can be derived by Algorithm 1. It remains to be an optimal 
forwarding tree until any specific link fails or its cost changes. Without loss of 
 14
perturbation ε , total costs on paths 1->4->3, 1->4, 1->4->5, 1->4->8->7, 1->4->8, 
1->4->8->9 increase as well. This fact suggests that part of the existing SPT may not 
remain optimal. With careful computation, numerical results show that once the cost 
on link (1,4) exceeds 5, paths from source node (node 1) to some destination nodes 
may not remain shortest. By checking the optimality condition, PLR+ can determine 
whether a specific link is used to construct a new SPT. That is shown in Fig. 2 in last 
subsection. 
 
  However, we provide two useful observations here to show that which shortest 
paths for those destination nodes are affected by the cost increase on link (1,4) and 
which are not. To be more specific, we use a dotted-closed-contour to enclose those 
destination nodes, to which paths from source may not remain shortest. Systematic 
description and related proof for these two observations will be illustrated in 
Theorem 2 and Theorem 3, respectively. See Appendix for details.  
 
Observation 1: Once the link cost on the target failure link increases, such link 
change may cause some part of the original SPT fail to be shortest path. In other 
words, the sub-tree rooted at the downstream node on that target link may not remain 
optimal. Here the downstream node on that target link is referred to as the edge node 
that is in the downstream side from the source. Take Fig. 5(b) as an example, it 
shows that once the link cost on link (1,4) increases, the sub-tree rooted at the 
downstream node, i.e. node 4, may not remain a shortest path sub-tree. (see Theorem 
2 for detail proof). 
 
Observation 2: The thin arrows that cut across the dotted closed contour are those 
links that associate the above mentioned two sub-trees. Each thin arrow draws from 
one node outside the dotted closed contour to one node inside. These thin arrows are 
exactly the possible candidates that we would use to replace the old link in order to 
re-construct the shortest path incrementally in each round. In Theorem 3, we will 
show that these thin arrows exactly maps to the NBLs (variables) and the old link 
maps one of the BLs (variables). We then can transform this replacement problem 
into the problem of how to replace a basic variable with one of the non-basic 
variables in network simplex method paradigm. (See Theorem 3 for detail proof). 
 
  Fig. 5(c) shows that after checking the optimality condition in associated network 
simplex method, PLR+ determines that the NBL (6,5) should replace the original BL 
(4,5) (dotted thin arrow) for the SPT to be optimal. Notice that among all potential 
 16
check the optimal condition in associated network simplex method to determine 
which potential path needs the least ε  for the existing SPT. Fig. 6(c) shows that the 
NBL (8,5) should replace the original BL (4,5) (i.e. path 1->4->8->5 replaces path 
1->4->5) for the SPT to be optimal once the perturbation value ε  exceeds 6. We 
keep the same procedure in next iteration, as shown in Fig 6(d): the NBL (5,6) 
should replace BL (2,6) once the perturbation value ε  exceeds 6. Finally, there is 
not any NBL replaces BL until the cost of link (4,8) is dropped to 1, as shown in Fig. 
6(e). We call the algorithm as PLR- algorithm which is shown in Fig. 3 in last 
subsection. 
 
E. PLR+/- second Algorithm 
  We will show that there is still unnecessary computation when we use PLR+/- 
algorithm to derive new SPT. In the iterations, the PLR+/- algorithm has to be 
resumed from STEP1. if the perturbative link exists in BLs or the cost of the 
perturbative link is more than 1. When the PLR+/- algorithm resumes from STEP1., 
the iy  and ijc
$
 will be computed again. However, if we observe the outdated iy  
and new iy , we can discover that only some values of $y_i$ were changed. These 
changed values of iy  are exactly the descendants of u, where the u is the same as u 
in STEP2. in the PLR+/- algorithm. Hence the PLR+/- second algorithm will only 
update some iy  , for all i are the descendants of u. PLR+/- second algorithm has the 
same structure of PLR+/- algorithm. The clear differences in computation 
complexities between PLR+/- algorithm and PLR+/- second algorithm are shown in 
TABLE V in the section V. 
 
1.3. Branch Search (BS) algorithm 
A.  Branch Search (BS) algorithm 
  The Branch Search (BS) algorithm is designed to deal that how to update routing 
table when link fails or its cost changes. Through BS algorithm, the failed network 
will be restored at once and global optimization gradually. 
  In OSPF, each node (router) collects complete network topology information and 
builds LSD to record whole network link state. We then execute the network simplex 
method to obtain BLs and SPT through LSD. Here, we require each node to store its 
 18
propagated to each node. When node 3 gets the new information, the set 3D  is built 
because link (3,5) belongs to BLs of the node 3, where the set 3D  contains node 5, 
6, 7 and 8 (see the dotted closed contour in Fig. 10(b) and (d)). Then the PLR+ 
second algorithm is executed on link (3,5) to derive new SPT (see Fig. 10(d)). After 
the PLR+ second algorithm terminates, we can know that which links replace which 
links. By this information, the BLs is updated and the set REP is built. The set REP 
contains the links, (4,6), (6,5) and (1,7). Now, we pick out a arbitrary link in set REP 
one by one. First, we pick link (4,6). Because node 4 does not belong to set 3D , the 
set 4D  is built by BLs. The set 4D  contains the nodes, 5, 6 and 8. The next hop of 
these nodes is set equal to the next hop of the node 4. So, the next hop of nodes 5, 6 
and 8 become 4 (see Fig. 11(b)). The link (4,6) is moved out from REP. Next 
iteration, the link (6,5) is picked out in REP. We just move out the link (6,5) from 
REP and go to next iteration because node 6 belongs to set 3D . Finally, the link (1,7) 
is picked out in REP. The set 1D  is built by BLs because the node 1 does not belong 
to set 3D . The set 1D  only contains node 7. Thus the next hop of the node 7 is set 
equal to the next hop of the node 1 (see Fig. 11(b)). Similarly, the link (1,7) is also 
moved out from REP. BS algorithm is terminated because the set REP is empty. The 
final new routing table for node 3 is shown in Fig. 11(b). 
 
1.4. Numerical Results 
  In this section, we perform PLR+/- algorithm on each link in Fig. 5(a) and observe 
the variation of optimal 
solution to build TABLE II and III. The TABLE II and III contain Link, Cost, 
Optimal solution variation and Final SPT. In TABLE II, when we perform the PLR+ 
algorithm on link (1,2), we observe that the SPT will not change when the cost of the 
link (1,2) is 5. When the cost of the link (1,2) is greater than 5 and less than or equal 
to 19, the link (5,6) will replace link (2,6). Moreover, when the cost of link (1,2) 
greater than 19 the link (3,2) will replace link (1,2). The PLR+ algorithm will 
terminate because the link (1,2) do not exist in BLs. We then obtain the final SPT 
which is shown in the second row of the TABLE II. For example, by TABLE II, if 
 20
 
  In TABLE IV, we observe the conventional OSPF, incremental algorithm, second 
algorithm and PLR+/- algorithm to compare the efficiency, mathematical structure, 
optimum management and working environment. First, we focus on whether using 
available information of outdated SPT. The conventional OSPF has to recompute an 
entire SPT when link fails. However, the incremental algorithm, second algorithm 
and proposed PLR+/- algorithm only recompute the affected part of SPT and take the 
information of outdated SPT to derive new SPT. Next, we refer to whether owning 
efficient mathematical structure. The conventional OSPF and incremental algorithm 
adopt the expression 
( ) ( ) ijd j d i c> +  of Dijkstrais algorithm to check if the current 
path is shortest or not. That is inefficient because they must check overall nodes or 
affected nodes if there is shorter path than current path until they obtain new SPT. 
The second algorithm employs a function SELECT_MIN(B,T) not to check overall 
nodes or affected nodes but to pick minimum cost link for deriving new SPT 
efficiently. On the other hand, the PLR+/- algorithm adopts efficient mathematical 
structure to separate BLs and NBLs in the network link set, then computes 
-ij ij i jc c y y= +$ , ∀ (i,j)∈NBLs  and uses uv ijc c= ∩$ $   to decide which NBL to 
replace BL until obtain new SPT. They pick directly the shortest path to replace 
current path but not checks gradually each candidate path and updates gradually until 
 22
operation for computing iy  in each iteration in PLR+/- algorithm. That is called 
PLR+/- second algorithm. Besides, we propose the BS algorithm to update the routing 
table when link state changes. BS algorithm adopts PLR+/- second algorithm to 
derive new SPT efficiently and updates the routing table through new SPT. The a 
single link fails or its cost changes problem can be restored at once and achieve 
global optimization gradually by BS algorithm. The comparison between the 
conventional OSPF, incremental algorithm, second algorithm and PLR+/- algorithm 
are shown in TBALE IV. Moreover, the time complexity comparison of PLR+/- 
Algorithm, PLR+/- Second Algorithm, Second Algorithm and Second Incremental 
Algorithm are shown in TABLE V. 
  However, we only consider single link failure in this paper. In the future work, we 
will think over more than one link failure and consider the node failure problem for 
acquiring more perfect restoration system. 
 
1.6.  APPENDIX 
Lemma 1: There is not any cyclic path in the BLs of the PLR+/- algorithm and the 
BLs of the PLR+/- algorithm maintain an SPT in each iteration. 
 
Proof: Initially, the BLs are computed by Algorithm 1. The initial BLs are represented 
as an SPT. Thus we can guarantee that there is not cyclic in initial BLs. During STEP 
1 and 2 of the PLR+/- algorithm, we check 0ijc ≥$  for finding the minimal ε  range 
and (u,v) replaces (p,v), (p,v) BA∈ . There is only one BL (p,v) to be replaced by one 
NBL (u,v) in each iteration and the end node of this BL is identical with the end node 
of this NBL. Thus there is not any cyclic path in the BLs and the BLs maintain an 
SPT in each iteration. 
 
Lemma 2: In finite iterations, the PLR+/- algorithm will terminate. 
 
Proof:  We divide two cases to prove Lemma 3. Case1: There is not other links 
connect to the end node of the failed link except failed link. If there are not other links 
connect to the end node of the failed link, we can not restore failed link by others. 
Thus we will obtain the new SPT at once by cancelling the failed link in outdated 
SPT and the PLR+ algorithm terminates. 
Case2: If there are other links connect to the end node of the failed link. In each 
 24
Proof: According to Lemma 3 we can know that if a link fails in the SPT, the SPT will 
be divided into two subtrees. Moreover, one of the subtrees has the same source node 
as original SPT and the source node of another subtree is end node of the failed link. 
We denote the subtree which has the same source node as original SPT is subtree-1, 
another subtree is subtree-2 and the source node of the original SPT is S. When a link 
fails, we can regard the cost of the failed link as infinity. So, the total costs on paths 
from node S to every node in the subtree-2 increase as well. On the other hand, the 
total costs on paths from node $S$ to every node in the subtree-1 are unchanging (i.e. 
maintain shortest paths) (See Fig. 12). Hence the subtree-1 is still SPT and the 
subtree-2 is not SPT when a link fails. 
 
Theorem 3: If a link fails in the SPT, the NBLs are exactly the possible candidates of 
the shortest path. 
 
Proof: Before a link fails, we assume N is nodes set and 
pick some nodes 1 2, ,..., kn n n , Nin∀ ∈ , 1,...,i k= . Moreover, we assume these 
nodes 2 ,..., kn n  are all neighbors of node 1n . The node 1n  is connected with 
2 -1,..., kn n  by links 1 2 -2, ,..., kl l l , NBLs, =1,2,..., - 2il i k∀ ∈ and node 1n  is connected 
with kn  by link (u,v), (u,v) is BL. From Theorem 2, we can know if a link fails in 
the SPT, the SPT will be divided into two sub-SPTs. Without loss of generality, if the 
failed link is (u,v), we can assume the two sub-SPTs are 1T  and 2T . On the other 
hand, From Lemma 3, we can assume 1T  has the same source (let source node is s) 
as original SPT and the source of 2T  is end node of the failed link (i.e. node v). 
Moreover, we suppose 2 1{ ,..., }kn n T∈  and 1 2n T∈ . When link (u,v) ails, we can 
guarantee those paths which travel form s to 2 ,..., kn n  are still shortest paths by 
Theorem 2. Whereas, the path travels from s to 1n  is broken. So, we have to build 
new shortest path from s to 1n  afresh. Because from s to 2 ,..., kn n  are still shortest 
 26
June. 1988. 
[16] G. Malkin, “RIP Version 2," RFC 2453, Nov. 1998. 
[17] P. Narvaez, Kai-Yeung Siu and Hong-Yi Tzeng, “Fault-Tolerant Routing in the 
Internet without Flooding," Dependable Network Computing, pp. 193-206, 
2000. 
[18] J. Wu, F. Dai, X. Lin, J. Cao and W. Jia, “An Extended Fault-Tolerant 
Link-State Routing Protocol in the Internet," IEEE TRANSACTIONS ON 
COMPUTERS, vol. 52, No. 10, pp. 1298-1311, Oct. 2003. 
[19] M.H. MacGregor and W.D. Grover, “Optimized k-shortest paths algorithm for 
facility restoration," Software-Practise & Experience, vol. 24, pp. 823-834, 
Sept. 1994. 
[20] B. Xiao, Q. ZhuGe and E. H.-M. Sha, “Minimum Dynamic Update for Shortest 
Path Tree Construction," Global Telecommunications Conference, vol. 1, pp. 
126-130, Nov. 2001. 
[21] Bin Xiao, Jiannong Cao, Qingfeng Zhuge, Zili Shao and E.H.M. Sha, 
“Dynamic Update of Shortest Path Tree in OSPF," Parallel Architectures, 
Algorithms and Networks, pp. 18-23, May. 2004. 
 
2. IP Local Node Protection 
 
Network survivability has become one of the most important QoS (Quality of Service) 
parameters in IP network services. IP protection can improve network resilience and 
avoid service disruption better than traditional routing recovery or other lower layer 
recovery technologies. In this paper, we proposed an IP Local Node-Protection 
(IPLNP) scheme based on the characteristic of shortest path routing in IP networks. 
Our schemes working in an intra-area routing domain provide simple and efficient 
solutions to improve IP network survivability. Unlike source-routing-based MPLS 
(Multi-Protocol Label Switching) Fast-Reroute which needs an extra MPLS layer and 
complex control protocols, our scheme are applicable to a network employing only 
conventional IP routing and forwarding. Our scheme can prevent service disruption 
and packet loss caused by the loops which normally occur during the re-convergence 
of the network upon a failure. Because the backup next hops are predetermined in 
advance, the service interrupted time can be limited to a few milliseconds. In the 
simulation results, we observe that IP Local Node-Protection scheme can efficiently 
improve network survivability while single node failure occurs. 
 28
 
 
When a link or node failure occurs in a routed network, there is surely a period of 
disruption to the delivery of traffic until the network routes re-converge on the new 
topology. Packets may be dropped or may suffer looping if their forwarding paths 
traverse the failed component. From some statistics of network failures with IP 
restoration, such disruptions have lasted for periods of at least several tens of seconds, 
and about 46% of network failures is less than 1 minute. Most applications have been 
constructed to tolerate such quality of service, but some real-time applications (e.g., 
VoIP and multimedia streaming applications) cannot accept such disruptions. 
Therefore, IP restoration along is inadequate to extend network survivability for 
real-time applications. That is, in a robust IP network, not only restoration 
mechanisms but also protection mechanisms are needed. IP protection and IP 
restoration should cooperated with each other. IP protection can protect the flows on 
the transition stage of IP restoration. By this way, the period of disruption can be 
reduced within the failure detection and the reaction of IP protection mechanism, and 
then IP restoration mechanism can be performed as usual. Finally, after IGP converges, 
packets can be delivered according to new routes. 
 
Second, though lower-layer protection and restoration mechanisms may work fast 
than IP protection, they cannot detect failures occurring at IP layer. For example, an 
optical protection mechanism can protect link failures, but cannot protect against an 
IP router or forwarding software failure. On the other hand, higher-layer entities may 
be able to protect against lower-layer failures if there is an alternate route between 
communicating entities. Thus, IP protection mechanisms are necessary to enhance IP 
network availability. 
 30
The drafts of IP Fast-Reroute (IPFRR) framework [4] and LFAP (Loop Free Alternate 
Paths) scheme [5] were proposed by IETF Routing Area Working Group recently. The 
IPFRR is compatible with the present intra-domain routing protocols, such as OSPF 
and IS-IS. IPFRR framework introduces three mechanisms for repairing paths that are 
ECMP (Equal Cost Multi-Paths), loop free alternate paths (LEAP) and multi-hop 
repair paths. ECMP and LFAP offer the simplest repair paths, and it is anticipated that 
around 80% of failures can be repaired using these alone. However, the ECMP 
scheme needs extra control protocols to negotiate which equal cost path is failed after 
a node or a link fails. The LFAP scheme has to perform additional SPF calculations 
from the perspective of each IGP neighbor to determine feasible loop-free alternate 
paths. Additionally, multi-hop repair paths are considerably more complex, and extra 
control protocols or enhanced routing protocols should be needed [6]. It is anticipated 
that around 98% of failures can be repaired. 
 
 
2.3. IP Routing and Local Node Protection 
2.3.1. Link-State Routing Mechanism 
A link-state routing protocol requires each router to maintain at least one area map of 
IP network. When a network link changes state (up or down), a notification, called a 
link state advertisement (LSA) is flooded throughout the network. All the routers note 
the change and recompute their routes accordingly. For example, OSPF [7] and OSI's 
IS-IS [8] are link-state routing protocols. If a router receives a new LSA indicating the 
network state changed, the SPT (Shortest Path Tree) will be rebuilt with SPF (Shortest 
Path First) algorithm, such as Dijkstra's algorithm, according to the new area network 
map. Afterward the routing information is deduced from SPT and stored into the 
routing table. General speaking, the SPF algorithm has a computational complexity of 
the square of the number of nodes. 
 
2.3.2. Local Node Protection 
In this paper, we assume all nodes are located in the same routing area. According to 
the conventional link-state routing protocols, each router can collect the topology 
information of the whole area. After collecting topology information, the routing 
information (primary next hops) can be computed. From the routing information and 
the topology information, the candidates for feasible backup next hop are decided in 
advance. Once the node or link along the primary route fails, the packets via the failed 
node or node will be locally rerouted to the backup next hop upon a failure is detected 
 32
 
 
For example, if packets are transmitted from 6N  to 0N , each node on the routing 
path { 0236 ,,, NNNN } forwards the packets to its primary next hop respectively based 
on the normal routing mechanism. Upon 2N  failure occurs, only the adjacent nodes 
of 2N  which are 3N  and 4N  can detect the failure in the first time before IGP 
converges. The upstream adjacent nodes ( 3N  and 4N ) trigger the IPLNP mechanism 
and locally deliver the packets to its backup next hop ( 3N  and 1N ). After new 
routing converges, 3N  and 4N  suspend the IPLNP mechanism and deliver the 
 34
particular node oN  can be represented as a destination tree oN
T
 for oNd =  shown 
in Fig.3 as example. Note that the link set on dT  is the union of dop
L
,ˆ  where 
}{dNo −∈ . 
 
 
 
2.4.2. Local Node Protection Mechanism 
The procedure of primary and back next hops decision is illustrated in Fig.4. In the 
primary next hop decision phase, each router in the same area exchanges the topology 
information with link-state routing protocols, performs SPF algorithm and then 
decides a primary next hop to destination node $d$. 
 
 36
the primary next hop. The destination tree 0N
T
 is divided into the tree subtrees that 
are 0N
T ′
, 3N
T ′
 and 4N
T ′
. 4N  calculates the shortest-path next hops of each subtree 
root to connect the subtree 0N
T ′
. Finally, the partial shortest-path tree 0N
T
(
 is shown 
in 5(b). After the partial shortest-path tree 0N
T
(
 is constructed, 4N  selects the 
shortest-path next hop 3N  as its backup next hop to the destination node oN . 
Similarly, the backup next hop 1N  to node oN  is also decided by 3N . 
 
 
 
Briefly, if the failure of the primary next hop to node d  is assumed by a router and 
the router can connect to the subtree of node $d$ directly or via the other subtrees, its 
backup next hop is existent; otherwise, the backup next hop is nonexistent, and IPLNP 
mechanism is failed on this node failure event. 
 
By the way, the traffic to the destination node $d$ will be delivered along a partial 
shortest-path tree during the IPLNP mechanism enabled while a node failure occurs. 
Therefore, the backup next hops decided by IPLNP mechanism are feasible and 
 38
that the backup next hops of 3N  and 4N  can be decided in advance and the traffic 
can be rerouted successfully. However, the traffic flows to router oN  with LFAP-N 
scheme illustrated in Fig. 6(c) cannot recover completely before IGP converges. 4N  
cannot predict a feasible backup next hop to recover the failure of its primary next 
hop. 
 
 
 
LFAP scheme decides a feasible backup next hop according to the shortest-path 
information of adjacent nodes, but IPLNP scheme decides that according to 
destination tree information. Therefore, the performance of IPLNP scheme is better 
 40
 
 
2.6.2. Representative Internet Topology 
By the previous simulation, we can observe that the performances are dependent on 
network topologies. We are also interested in the performance of random flat 
topologies, which are recoverable while single node failure occurs. The random flat 
topologies in the simulation are generated by BRITE topology generator [11]. A new 
node connects to a candidate neighbor node using Waxman's probability function 
( 19.0=α and 2.0=β ), and the total node number N  and the degree of each node 
)(ndG  (where Nn∈ ) are given. The degree )(ndG  means the number of links at 
node n , and then a topology G(N,L) can be generated. Additionally, all link costs are 
constant and equal, i.e., the same link bandwidth. 
 
Fig. 7(a) and (b) show the relationships between protectability and network scalability 
while a node failure occurs in the random flat topologies whose degrees of each node 
equal to 4 and 6 respectively. We observe the performances of IPLNP scheme, LFAP 
scheme and LFAP with ECMP scheme in the figures. First, with the increase of 
network scalability, the protectabilities of the tree schemes are decreased. Although 
many available paths can be found in a large IP network, the IP network still limits the 
traffic to go through the few shortest paths because of the destination routing. Thus, 
the performance of them cannot achieve to that of other protection schemes in 
connection-oriented networks, e.g., MPLS network, SONET and optical network; 
however, IP protection for node failure is effective in a small area network. Second, IP 
protection for node failure is suitable for a high-degree network. In a small network, 
the computational complexity would not be the major factor to impact the 
performance of IPLNP scheme. Finally, IPLNP scheme can achieve better 
performance than the other schemes as well as the previous simulation. 
 
 42
negotiate which equal-cost path is failed. Its service interrupted time may be longer 
than our scheme. Thus, the alternative of computational complexity and extra control 
capacity can be considered between IPLNP scheme and LFAP schemes. 
 
Additionally, based on the Destination SPT concept, our work is ready to extend to 
multiple node failure by defining failure event and its affected node in advance. 
Finally, we believe that IPLNP scheme can give a good solution to IP network 
protection technology. 
 
 
Reference 
[1] G. Iannaccone, C.-N. Chuah, S. Bhattacharyya, and C. Diot, “Feasibility of IP 
Restoration in a Tier 1 Backbone,” IEEE Network, vol. 18, no. 2, pp. 13–19, 
Mar-Apr 2004.  
[2] C. Metz, “IP protection and restoration,” IEEE Internet Comput., vol. 4, no. 2, pp. 
97–102, Mar-Apr 2000.  
[3] C. Alaettinoglu and A. Zinin, “IGP Fast Reroute,” in IETF Routing Mtg., Atlanta, 
GA, USA, Nov. 2002.  
[4] M. Shand, “IP Fast Reroute Framework,” IETF Draft, Oct. 2004, 
draft-ietf-rtgwg-ipfrr-framework-02.txt.  
[5] K. Claffy, G. Polyzos, and H.-W. Braun, “Traffic characteristics of the T1 
NSFNET backbone,” in Proc. IEEE INFOCOM’93, 28 Mar.-1 Apr. 1993.  
 
 44
 
Related Publication and paper in preparation 
 
[1] M. C. Shaio, S. W. Tan, K. S. Hwang, and C. S. Wu, “Co-learning Multi-agent 
Congestion Control for High Speed Networks”, WSEAS Transactions on Circuits 
and systems, Vol. 21, pp.670-675, 2004. 
[2] K. S. Hwang, S. W. Tan, M. C. Shaio, and C. S. Wu, “A Reinforcement Learning 
Approach to Congestion Control of  High-Speed Multimedia Networks,” 
accepted by IEEE transaction on Systems, man, and Cybernetics-Part B  
[3] Hui-Kai Su, Cheng-Shong Wu, and Kim-Joan Chen, “Session Classification for 
Traffic Aggregation” IEEE ICC2004, June, 2004, Paris, France 
[4] Cheng-Shong Wu etc “Optical CDMA Header Encoding for Optical Label 
Switching” in prepareation 
[5] Cheng-Shong Wu, Ming-Chang Hsiao, Kao-Shing Hwang, Shun-Wen Tan, and 
Hui-Kai Su “Cooperative Congestion Control for Multimedia Networks Based on 
Learning Approach” submitted for publication 
[6] Hui-Kai Su, and Cheng-Shong Wu, “IP Local Fast-Reroute Based on Link-State 
Routing Protocol for Node Protection and Link Protection” 
 
 
 
 
Ethernet 的PHY 測試報告說明了這技術是很有前途的。 
z Track 4 是屬於 computer architecture方面的研究領域 
z Track 5 是屬於網路技術方面的研究領域。包括TCP 協定的一些探討。 
z Track 6 是tutorial track 由AT&T的成員講述有關AT&T global PNNI network 的
scalable growth  
z Track 7 是屬於 performance optimization and adaptation 方面的研究領域 
z Track 8, 包含TRAFFIC CHARACTERIZATION，QUEUEING SYSTEMS，INTERNET 
TECHNOLOGY 三大主題。 
我們發表的論文（見附件）屬於Track 8，在論文中我們提出AF + VOIP Service Models，
並以數學分析證明其優越，AF + Service Model的概念是網路提供者除了滿足了使用者的QoS
需求。如網路狀況良好的話，也能與使用者互動，提供更高一級的服務。 
ICON 2006是新加坡大學主協IEEE協辦的國際會議，所有電腦網路及電售網路的最新研
究都是會議研討的範圍。正式會議共舉行兩天，有三個平行的track共21個sessions。包括Flow 
and Congestion Control, Multicast, Ad hoc Network, Sensor Network, Routing, Security, Optical 
Network, Overlay Networking, traffic Engineering等都有專間的Session討論，其中Wireless, 
Mobile, Adhoc and Sensor Network的議題就佔了三分之一，可見其研究的熱門程度，我們發表
的論文Optical CDMA label Encoding for Optical Switching in All-Optical Networks是屬於光網
路方面，也有兩個session，在論文中，我們提出以Optical CDMA的方式對全光Optical Packet 
Network的封包頭進行編碼傳送，利用Delay-Tap-Line的解碼可使Optical封包在每個結點中不
用經過光電轉換及解碼再編碼，而達到高速全光分封交換。 
三、 與會心得 
  今年共參加了兩次會議，其中 SPECT’06 主要以數學及電腦工具研究網路的行為，而
ICON2006 涵蓋目前所有熱門的網路研究議題。從這兩次會議看來 Wireless 相關研究仍是目
前最熱門的研究議題，而光通訊沉默了一陣子，也開始又熱起來了。另外 SPECT’06 主席 Dr. 
M. S. Oboidate 說了一番話很有意思，大意是說十年前參加國際會議主要是為了收集研究題材
及了解現況。而目前網際網路發達，收集資料及了解研究近況並不需要老遠跑來參加會議。
那麼參加會議有何目的呢。事實上會議的主要目的在於與相同領域其它研究者交換心得，而
交換心得能觸發研究靈感，而研究的創新除了收集分析資料後，最主要就是靠靈感，沒有靈
感就很難有創新的研究。 
 
 
四、 攜回資料名稱及內容 
順利完成既定目標，並攜回光碟資料及 proceeding 
The remaining of this paper is organized as follows. In
section II, Differentiated Service model and DiffServ-based
MPLS networks are briefly reviewed. In section III, we pro-
pose a new AF+ service model which is followed by its two
variants : one is for non-rate adaptive (non-RA) policy and the
other is for rate-adaptive (RA) policy. SLA can be contracted
with either non-RA or RA policy. Both service models are
proposed in section III-A and section III-B, respectively.
Performance analysis for both models are illustrated in section
IV. Finally, section V concludes this paper.
II. BACKGROUND
The Differentiated service model supports three services,
listed in their priority orders: the Expedited Forwarding (EF)
class, Assured Forwarding (AF) class, and Best Effort (BF)
class. EF class traffic receives the highest forwarding priority
while BF class traffic receives the lowest forwarding priority
among the three. Core networks intend to provide EF class
users with low delay, low jitter and low loss services by serving
them at a configured rate [8]. In contract, core networks does
not provide AF users any ”hard” QoS guarantees, but ”soft”
ones. In other words, an AF class may be configurable to
receive more bandwidth resource to forward packets only
when excess resource is available [9]. Excess resource, if still
available, is left to BE users so that they will not be dried-up.
However, although the EF class provides the best QoS, the
EF resource costs the most. Similarly, the AF resource cost
a little less than that of EF class and thus provide degraded
service; BE is the cheapest one, no QoS shall be assumed and
unsuitable for VoIP applications. Obviously, it is difficult for
VoIP users to choose an cost effective service among them,
especially in a time varying network conditions. Consequently,
users either pay more to sign a higher priority service when
system is not congested, or pay less to receive lower priority
service and thus get much poorer throughput than expected.
In literature, the EXP-Inferred-PSC LSPs (E-LSP) and
Label-Only-Inferred-PSC LSPs (LLSP) solutions [3] have
been developed to support the DiffServ service models (such
as EF, AF and BE) to enable the MPLS network classifying
services of various applications. However, LSPs can only
receive the same class for all packets in both E-LSP and
L-LSP, which can not solve the myth of trade-off between
cost and service quality. Additionally, the ideal of AF+
service model was presented in [10] first. To provide cost-
effective DiffServ solutions in MPLS networks, we proposed
two service models, AF+non−RA and AF
+
RA, to extend the
conventional AF service for non-rate adaptive and rate adaptive
call admission policies respectively.
III. SYSTEM AND SERVICE MODELS
The conventional service model supports only either one of
the three priority classes in a single VoIP trunk for a group of
VoIP subscribers. It is difficult for users to determine which
service class to sign up will do themselves the best. Similarly,
the service providers do not have the flexibility to negotiate
A VoIP trunk 
AF-class provisioned 
bandwidth
EF-class provisioned 
bandwidth
AF-class VoIP flows
EF-class VoIP flows
Fig. 1. EF-class and AF-class provisioned bandwidth in a VoIP trunk.
with users for their services. Let’s elaborate the above situation
by an example. Consider a VoIP user requests an EF service
when the VoIP trunk contracted previously is congested. A
service provider can still get some profits by providing a
degraded service (AF ) for a discount price, rather than just
request this EF service request. The conventional service
model do not support such functionality, which motivates us
to propose the following generic AF+ service model.
In this section, we first propose a generic AF+ service
model which is constructed based on the DiffServ service
but with an adaptive SLA signing policy. AF+ provides EF
class when VoIP trunk is not congested and it provides only
AF class service when VoIP trunk is congested. Consider
the following scenario for example, when a new call arrives
and the provisioned bandwidth of EF class is available, this
call is served with the EF-class level first (up to m EF
calls). Otherwise, if the provisioning bandwidth of EF class
is unavailable, it is serviced with the AF-class level (up to
n AF calls) and then is treated as an AF class like that in
the conventional Diff-Serv/MPLS model; when VoIP trunk
is congested, an EF request will be degraded to an AF
class with discount charge. The design goal is to reduce the
bandwidth demanding from a single user when VoIP trunk is
congested, and thus increase the availability of services. In a
single VoIP trunk, as an example illustrated in Fig. 1, the first
coming VoIP flows receive EF service up to m flows and the
rest of n flows receive only AF class service. Assume that
the total bandwidth in the VoIP trunk is denoted as BWtotal
which can be expressed as the following.
BWtotal = (m · BWEF + n · BWAF ). (1)
where BWEF and BWAF are the bandwidth allocated to
each EF and AF class user, respectively. In this example, the
ratio of serving EF traffic in a single trunk is controlled by
a parameter of bandwidth provisioning ratio, α, where α is a
VoIP trunk congestion threshold and can be expressed as
α =
m ·BWEF
BWtotal
; 0 ≤ α ≤ 1. (2)
0 1 m
λ λ λ
µ2µ µm
λ
µ)1( +m
m+n
λ
µ)( nm +
Fig. 3. Two-dimension state-transition-rate diagram for the AF+
RA
service
model.
B. AF+RA Service Model
AF+RA is the rate-adaptive version for AF+ model, in which
the AF service could be upgraded to EF service when the
trunk utilization drops down below α. Therefore, the ingress
routers have to trace VoIP control messages and management
the states of VoIP sessions anytime. If there is available EF-
class bandwidth, the a part of AF-class VoIP sessions in the
same trunk will be upgraded to EF service. Thus, the system
loading of AF+RA Service Model in the ingress routers would
be higher than the other.
The proposed AF+RA service can be modeled as a one-
dimension birth-death process [11]. Fig. 3 shows the state
transition diagram of this birth-death process. We make the
same assumptions as those for AF+RA service model. Call
arrivals for both EF and AF classes still follow the Poisson
distribution with the rate of λ. The call holding time for both
EF and AF services are exponentially distributed with the
same mean call holding time of 1/µ. The Erlang density is
defined as a traffic load of VoIP calls, in which Erlang =
λ/µ.
Let Pk be the stationary sate probability of k, it can be
found by solving the equilibrium equations as below.
Pk =
{
(λ
µ
)k 1
k!
P0, 0 ≤ k ≤ m+ n
0, k > m+ n
(9)
where
P0 =
[
m+n∑
k=0
(
λ
µ
)k
1
k!
]
−1
The normalization equation for the above equilibrium equa-
tions is
m+n∑
k=0
Pk = 1 (10)
In the provisioned MPLS network, if the resource is not
enough for an AF class VoIP call, this will be blocked in the
ingress router of the VoIP trunk. The call blocking rate Pblk
can be derived via Eq. (11) that is alike to Erlang-B Model.
Pblk = Pm+n (11)
The provisioned bandwidth utilization for the EF class and
AF class can be expressed as below.
UEF =
1
m
(
m∑
k=0
kPk +
m+n∑
k=m+1
mPk
)
(12)
UAF =
1
n
m+n∑
k=m+1
(k −m)Pk (13)
The cost function of AF+RA service model is alike to which
of AF+non−RA service model shown in Eq. 8.
IV. NUMERICAL RESULT
The AF+non−RA model is a two-dimensional Markov chain
with a complex structure, so performance metrics of a closed-
form solution cannot be derived. The sophisticated commercial
optimization tool, LINGO, is then applied to solve it. However,
the AF+RA model degenerates to a one-dimensional Markov
chain and is easily analyzed. This section presents numerical
results for both service models. The performance metrics of
each model include: the call blocking rate and the resource
utilization.
A. Call Blocking Rate
We assume that the traffic intensity of VoIP calls equals to
25 (Erlang = 25). The call blocking rates of AF+non−RA and
AF+RA service models are calculated from Eq. 5 and Eq. 11,
and the results are illustrated in Fig. 4. The Y axis is the call
blocking rate, the X axis is the total provisioned bandwidth
m+ n, and the Z axis is the ratio α of the total provisioned
bandwidth.
In the figure, we can observe one important phenomenon.
First, the call blocking rates are depend on the total provi-
sioned bandwidth m+n regardless of the congestion threshold
α. If the silence suppression of VoIP traffic is ignored, both
of AF+non−RA and AF
+
RA service models are alike to Erlang-
B model. Thus, the total bandwidth can be assigned to tune
the alternative issue of call blocking rate and provisioned
bandwidth cost that can refer to Erlang-B model in the
conventional telecommunication services.
B. Optimal Solution
In this analysis, we assume that the total bandwidth of
40 channels (m + n = 40) is reserved for AF+non−RA and
AF+RA service models, and both of their call blocking rates are
guaranteed to less than 0.0012 while the Erlang is less than
25. The EF-class bandwidth utilizations of AF+non−RA and
AF+RA service models are calculated from Eq. 6 and Eq. 12,
and their AF-class bandwidth utilizations both are calculated
from Eq. 7 and Eq. 13.
The relationships of bandwidth utilization and bandwidth
provisioning ratio are illustrated in Fig. 5. We observe two
phenomenons. First, if a small α (such as α→ 0) is selected,
both EF-class bandwidth utilizations of AF+non−RA and AF
+
RA
are greater than 0.96. Otherwise, if a large α (such as α→ 1)
is selected, both of them are decreasing, because the EF-class
bandwidth is enough to serve the most VoIP calls. Second,
the EF-class bandwidth utilization of AF+RA is lager than that
REFERENCES
[1] B. Goode, “Voice over Internet protocol (VoIP),” Proceedings of the
IEEE, vol. 90, pp. 1495–1517, Sept. 2002.
[2] V. Fineberg, “A practical architecture for implementing end-to-end QoS
in an IP network,” IEEE Communications Magazine, vol. 40, pp. 122–
130, Jan. 2002.
[3] F. L. Faucheur, B. D. L. Wu, S. Davari, P. Vaananen, R. Krishnan,
P. Cheval, and J. Heinanen, “Multi-Protocol Label Switching (MPLS)
Support of Differentiated Services,” RFC 3270, May 2002.
[4] S. Blake, D. Black, M. Carlson, E. Davies, Z. Wang, and W. Weiss, “An
Architecture for Differentiated Services,” RFC 2475, Dec. 1998.
[5] E. Rosen, A. Viswanathan, and R. Callon, “Multiprotocol Label Switch-
ing Architecture,” RFC 3031, Jan. 2001.
[6] K. Muthukrishnan and A. Malis, “A Core MPLS IP VPN Architecture,”
RFC 2917, Sept. 2000.
[7] F. L. Faucheur and W. Lai, “Requirements for Support of Differentiated
Services-aware MPLS Traffic Engineering,” RFC 3564, July 2003.
[8] B. Davie, A. Charny, J. Bennet, K. Benson, J. L. Boudec, W. Courtney,
S. Davari, V. Firoiu, and D. Stiliadis, “An Expedited Forwarding PHB
(Per-Hop Behavior),” RFC 3246, Mar. 2002.
[9] J. Heinanen, F. Baker, W. Weiss, and J. Wroclawski, “Assured Forward-
ing PHB Group,” RFC 2597, June 1999.
[10] H.-K. Su, H. Chen, C.-Y. Wang, and K.-J. Chen, “A novel AF+ service
for VoIP applications over a Diff-Serv/MPLS network,” in Proc. IEEE
VTC 2004-Fall, Sept. 2004.
[11] L. Kleinrock, Queueing Systems; Volime 1: Theory. New York, USA.:
John Wiley & Sons, 1972.
Ethernet 的PHY 測試報告說明了這技術是很有前途的。 
z Track 4 是屬於 computer architecture方面的研究領域 
z Track 5 是屬於網路技術方面的研究領域。包括TCP 協定的一些探討。 
z Track 6 是tutorial track 由AT&T的成員講述有關AT&T global PNNI network 的
scalable growth  
z Track 7 是屬於 performance optimization and adaptation 方面的研究領域 
z Track 8, 包含TRAFFIC CHARACTERIZATION，QUEUEING SYSTEMS，INTERNET 
TECHNOLOGY 三大主題。 
我們發表的論文（見附件）屬於Track 8，在論文中我們提出AF + VOIP Service Models，
並以數學分析證明其優越，AF + Service Model的概念是網路提供者除了滿足了使用者的QoS
需求。如網路狀況良好的話，也能與使用者互動，提供更高一級的服務。 
ICON 2006是新加坡大學主協IEEE協辦的國際會議，所有電腦網路及電售網路的最新研
究都是會議研討的範圍。正式會議共舉行兩天，有三個平行的track共21個sessions。包括Flow 
and Congestion Control, Multicast, Ad hoc Network, Sensor Network, Routing, Security, Optical 
Network, Overlay Networking, traffic Engineering等都有專間的Session討論，其中Wireless, 
Mobile, Adhoc and Sensor Network的議題就佔了三分之一，可見其研究的熱門程度，我們發表
的論文Optical CDMA label Encoding for Optical Switching in All-Optical Networks是屬於光網
路方面，也有兩個session，在論文中，我們提出以Optical CDMA的方式對全光Optical Packet 
Network的封包頭進行編碼傳送，利用Delay-Tap-Line的解碼可使Optical封包在每個結點中不
用經過光電轉換及解碼再編碼，而達到高速全光分封交換。 
三、 與會心得 
  今年共參加了兩次會議，其中 SPECT’06 主要以數學及電腦工具研究網路的行為，而
ICON2006 涵蓋目前所有熱門的網路研究議題。從這兩次會議看來 Wireless 相關研究仍是目
前最熱門的研究議題，而光通訊沉默了一陣子，也開始又熱起來了。另外 SPECT’06 主席 Dr. 
M. S. Oboidate 說了一番話很有意思，大意是說十年前參加國際會議主要是為了收集研究題材
及了解現況。而目前網際網路發達，收集資料及了解研究近況並不需要老遠跑來參加會議。
那麼參加會議有何目的呢。事實上會議的主要目的在於與相同領域其它研究者交換心得，而
交換心得能觸發研究靈感，而研究的創新除了收集分析資料後，最主要就是靠靈感，沒有靈
感就很難有創新的研究。 
 
 
四、 攜回資料名稱及內容 
順利完成既定目標，並攜回光碟資料及 proceeding 
The remaining of this paper is organized as follows. In
section II, Differentiated Service model and DiffServ-based
MPLS networks are briefly reviewed. In section III, we pro-
pose a new AF+ service model which is followed by its two
variants : one is for non-rate adaptive (non-RA) policy and the
other is for rate-adaptive (RA) policy. SLA can be contracted
with either non-RA or RA policy. Both service models are
proposed in section III-A and section III-B, respectively.
Performance analysis for both models are illustrated in section
IV. Finally, section V concludes this paper.
II. BACKGROUND
The Differentiated service model supports three services,
listed in their priority orders: the Expedited Forwarding (EF)
class, Assured Forwarding (AF) class, and Best Effort (BF)
class. EF class traffic receives the highest forwarding priority
while BF class traffic receives the lowest forwarding priority
among the three. Core networks intend to provide EF class
users with low delay, low jitter and low loss services by serving
them at a configured rate [8]. In contract, core networks does
not provide AF users any ”hard” QoS guarantees, but ”soft”
ones. In other words, an AF class may be configurable to
receive more bandwidth resource to forward packets only
when excess resource is available [9]. Excess resource, if still
available, is left to BE users so that they will not be dried-up.
However, although the EF class provides the best QoS, the
EF resource costs the most. Similarly, the AF resource cost
a little less than that of EF class and thus provide degraded
service; BE is the cheapest one, no QoS shall be assumed and
unsuitable for VoIP applications. Obviously, it is difficult for
VoIP users to choose an cost effective service among them,
especially in a time varying network conditions. Consequently,
users either pay more to sign a higher priority service when
system is not congested, or pay less to receive lower priority
service and thus get much poorer throughput than expected.
In literature, the EXP-Inferred-PSC LSPs (E-LSP) and
Label-Only-Inferred-PSC LSPs (LLSP) solutions [3] have
been developed to support the DiffServ service models (such
as EF, AF and BE) to enable the MPLS network classifying
services of various applications. However, LSPs can only
receive the same class for all packets in both E-LSP and
L-LSP, which can not solve the myth of trade-off between
cost and service quality. Additionally, the ideal of AF+
service model was presented in [10] first. To provide cost-
effective DiffServ solutions in MPLS networks, we proposed
two service models, AF+non−RA and AF
+
RA, to extend the
conventional AF service for non-rate adaptive and rate adaptive
call admission policies respectively.
III. SYSTEM AND SERVICE MODELS
The conventional service model supports only either one of
the three priority classes in a single VoIP trunk for a group of
VoIP subscribers. It is difficult for users to determine which
service class to sign up will do themselves the best. Similarly,
the service providers do not have the flexibility to negotiate
A VoIP trunk 
AF-class provisioned 
bandwidth
EF-class provisioned 
bandwidth
AF-class VoIP flows
EF-class VoIP flows
Fig. 1. EF-class and AF-class provisioned bandwidth in a VoIP trunk.
with users for their services. Let’s elaborate the above situation
by an example. Consider a VoIP user requests an EF service
when the VoIP trunk contracted previously is congested. A
service provider can still get some profits by providing a
degraded service (AF ) for a discount price, rather than just
request this EF service request. The conventional service
model do not support such functionality, which motivates us
to propose the following generic AF+ service model.
In this section, we first propose a generic AF+ service
model which is constructed based on the DiffServ service
but with an adaptive SLA signing policy. AF+ provides EF
class when VoIP trunk is not congested and it provides only
AF class service when VoIP trunk is congested. Consider
the following scenario for example, when a new call arrives
and the provisioned bandwidth of EF class is available, this
call is served with the EF-class level first (up to m EF
calls). Otherwise, if the provisioning bandwidth of EF class
is unavailable, it is serviced with the AF-class level (up to
n AF calls) and then is treated as an AF class like that in
the conventional Diff-Serv/MPLS model; when VoIP trunk
is congested, an EF request will be degraded to an AF
class with discount charge. The design goal is to reduce the
bandwidth demanding from a single user when VoIP trunk is
congested, and thus increase the availability of services. In a
single VoIP trunk, as an example illustrated in Fig. 1, the first
coming VoIP flows receive EF service up to m flows and the
rest of n flows receive only AF class service. Assume that
the total bandwidth in the VoIP trunk is denoted as BWtotal
which can be expressed as the following.
BWtotal = (m · BWEF + n · BWAF ). (1)
where BWEF and BWAF are the bandwidth allocated to
each EF and AF class user, respectively. In this example, the
ratio of serving EF traffic in a single trunk is controlled by
a parameter of bandwidth provisioning ratio, α, where α is a
VoIP trunk congestion threshold and can be expressed as
α =
m ·BWEF
BWtotal
; 0 ≤ α ≤ 1. (2)
0 1 m
λ λ λ
µ2µ µm
λ
µ)1( +m
m+n
λ
µ)( nm +
Fig. 3. Two-dimension state-transition-rate diagram for the AF+
RA
service
model.
B. AF+RA Service Model
AF+RA is the rate-adaptive version for AF+ model, in which
the AF service could be upgraded to EF service when the
trunk utilization drops down below α. Therefore, the ingress
routers have to trace VoIP control messages and management
the states of VoIP sessions anytime. If there is available EF-
class bandwidth, the a part of AF-class VoIP sessions in the
same trunk will be upgraded to EF service. Thus, the system
loading of AF+RA Service Model in the ingress routers would
be higher than the other.
The proposed AF+RA service can be modeled as a one-
dimension birth-death process [11]. Fig. 3 shows the state
transition diagram of this birth-death process. We make the
same assumptions as those for AF+RA service model. Call
arrivals for both EF and AF classes still follow the Poisson
distribution with the rate of λ. The call holding time for both
EF and AF services are exponentially distributed with the
same mean call holding time of 1/µ. The Erlang density is
defined as a traffic load of VoIP calls, in which Erlang =
λ/µ.
Let Pk be the stationary sate probability of k, it can be
found by solving the equilibrium equations as below.
Pk =
{
(λ
µ
)k 1
k!
P0, 0 ≤ k ≤ m+ n
0, k > m+ n
(9)
where
P0 =
[
m+n∑
k=0
(
λ
µ
)k
1
k!
]
−1
The normalization equation for the above equilibrium equa-
tions is
m+n∑
k=0
Pk = 1 (10)
In the provisioned MPLS network, if the resource is not
enough for an AF class VoIP call, this will be blocked in the
ingress router of the VoIP trunk. The call blocking rate Pblk
can be derived via Eq. (11) that is alike to Erlang-B Model.
Pblk = Pm+n (11)
The provisioned bandwidth utilization for the EF class and
AF class can be expressed as below.
UEF =
1
m
(
m∑
k=0
kPk +
m+n∑
k=m+1
mPk
)
(12)
UAF =
1
n
m+n∑
k=m+1
(k −m)Pk (13)
The cost function of AF+RA service model is alike to which
of AF+non−RA service model shown in Eq. 8.
IV. NUMERICAL RESULT
The AF+non−RA model is a two-dimensional Markov chain
with a complex structure, so performance metrics of a closed-
form solution cannot be derived. The sophisticated commercial
optimization tool, LINGO, is then applied to solve it. However,
the AF+RA model degenerates to a one-dimensional Markov
chain and is easily analyzed. This section presents numerical
results for both service models. The performance metrics of
each model include: the call blocking rate and the resource
utilization.
A. Call Blocking Rate
We assume that the traffic intensity of VoIP calls equals to
25 (Erlang = 25). The call blocking rates of AF+non−RA and
AF+RA service models are calculated from Eq. 5 and Eq. 11,
and the results are illustrated in Fig. 4. The Y axis is the call
blocking rate, the X axis is the total provisioned bandwidth
m+ n, and the Z axis is the ratio α of the total provisioned
bandwidth.
In the figure, we can observe one important phenomenon.
First, the call blocking rates are depend on the total provi-
sioned bandwidth m+n regardless of the congestion threshold
α. If the silence suppression of VoIP traffic is ignored, both
of AF+non−RA and AF
+
RA service models are alike to Erlang-
B model. Thus, the total bandwidth can be assigned to tune
the alternative issue of call blocking rate and provisioned
bandwidth cost that can refer to Erlang-B model in the
conventional telecommunication services.
B. Optimal Solution
In this analysis, we assume that the total bandwidth of
40 channels (m + n = 40) is reserved for AF+non−RA and
AF+RA service models, and both of their call blocking rates are
guaranteed to less than 0.0012 while the Erlang is less than
25. The EF-class bandwidth utilizations of AF+non−RA and
AF+RA service models are calculated from Eq. 6 and Eq. 12,
and their AF-class bandwidth utilizations both are calculated
from Eq. 7 and Eq. 13.
The relationships of bandwidth utilization and bandwidth
provisioning ratio are illustrated in Fig. 5. We observe two
phenomenons. First, if a small α (such as α→ 0) is selected,
both EF-class bandwidth utilizations of AF+non−RA and AF
+
RA
are greater than 0.96. Otherwise, if a large α (such as α→ 1)
is selected, both of them are decreasing, because the EF-class
bandwidth is enough to serve the most VoIP calls. Second,
the EF-class bandwidth utilization of AF+RA is lager than that
