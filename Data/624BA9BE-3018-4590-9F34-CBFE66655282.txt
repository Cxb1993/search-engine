 2
bandwidth are not only by memory 
throughput but also by dynamically 
adjusting the bandwidth usage of 
multimedia processors which can guarantee 
the good utilization of limited memory 
bandwidth. Therefore we develop a novel 
memory subsystem, Self-Adjustable 
Memory System, for a multiple-channel 
streaming media system-on-a-chip, which 
integrates an interconnection network, two 
scheduling/arbitration mechanism, a unified 
access buffer, and a multiple channel 
memory, to provide a sufficient memory 
bandwidth for the multimedia processors 
with high bandwidth requirements. The 
performance bottleneck of the memory 
access in the modern multimedia SOC chips 
also can be solved.  
To make our Self-Adjustable Memory 
System become completely, we will focus 
on modeling the basic simulation 
environment by using SystemC and 
Electronic System Level (ESL) design. Then 
we can rapidly build the virtual platform and 
the model of our Self-Adjustable Memory 
System. Then we optimize our 
Self-Adjustable Memory System by using 
multimedia IPs and software co-simulation. 
Finally, we plan to apply our 
Self-Adjustable Memory System on real 
multimedia SOC. The execution of this 
project not only can enhance the 
practicability and popularization of this 
architecture, but also can offer a modern 
design flow, which includes Electronic 
System Level design and modeling 
optimization 
 
Keywords: Digital Video Surveillance 
System, Memory Access Scheduling, 
Self-Adjustable Memory System, 
Multimedia System-on-a-Chip, 
Interconnection Network, SystemC, 
Electronic System Level Design. 
 
 
 
 
二、緣由與目的 
由於科技快速的進步，使得數位視訊
監控系統蓬勃發展，漸漸取代類比監控系
統。在數位視訊監控中，為了處理大量的
影音視訊，通常以一顆複雜而功能強大的
多 通 道 串 流 媒 體 系 統 晶 片
(Multiple-Channel Streaming Media 
System-on-a-Chip)，來負責多個影像來源
之影像錄製與即時壓縮。此種多媒體系統
晶片，內部整合多個媒體運算處理器
(Multimedia Processor)/矽智產(IP) 於在單
一晶片內，以應付使用者多元化的需求。
但隨著監控通道數的成長，以及影像解析
度需求的提高，舊有的架構設計已經不能
滿足系統需求，因而導致重要的影像資料
未能即時錄製或遺失，進而減低監控能
力。分析其原因，主要是因為記憶體子系
統的頻寬不足，而無法充分發揮所有多媒
體 IP 的計算效能。 
有鑑於此，本計劃將著眼於記憶體子
系統之效能與資料吞吐量之提升，以解決
在多媒體系統晶片下，記憶體頻寬嚴重不
足的問題。此一新設計之記憶體系統，簡
而言之，即是擔任各多媒體 IP 和記憶體兩
者之間溝通的橋樑，任何多媒體 IP 資料的
存取皆經過此子系統來達到讀取和寫入的
動作。在先前的初期研究探索後，我們發
現：當系統晶片上有許多個高頻寬需求的
多媒體 IP 時，頻寬的滿足除了取決於記憶
體的效能外，更需要動態的隨著不同的多
媒體 IP 記憶體存取的需求分配，才能確保
有限頻寬的最佳利用。因此在本計劃裡，
我們將發展一個全新的自調適記憶體系
統，透過互連網路、排程/仲裁機制、存取
緩衝區、與多通道記憶體的配合，根據各
個媒體處理器的需求，動態調整各個通道
的傳輸頻寬，確保每個通道均能獲得所需
要的記憶體存取能力，以解決多媒體 SOC
系統中，記憶體存取的效能瓶頸。 
一般多通道數位影音監控SOC系統都
是由多通道視訊輸入處理器與硬體編解碼
裝置共用一個系統匯流排，並透過匯流排
對記憶體作存取，如圖一所示。但是由於
匯流排的特性，即使系統上每個多媒體 IP
均有自己的緩衝區，並能直接存取記憶體
 4
大幅度縮短系統開發時程。此外，透過電
子系統層設計與 TLM 的高抽象階層系統
設計，架構設計者極易修改系統架構與各
週邊設計之功能，可大幅度降低傳統 RTL
設計流程之＂設計－驗證＂循環耗時的問
題，更適合未知系統、架構、與演算法之
發展。並採用上述所提之 Modeling 語言：
SystemC 做系統開發。 
 
最後我們在 IBM Linux 工作站上，以
SystemC 與 CoWare 開發基本多通道串流
媒體系統晶片平台與整合自調適記憶體系
統之多通道串流媒體 SOC 平台，並以設計
四種多媒體處理器模型，以多項組態，測
試兩種環境下，記憶體效能之差異。真實
測試情境之分項實驗結果請見圖三。在整
合自調適記憶體系統的多通道串流媒體系
統晶片中，記憶體存取的權重可依各個多
媒體處理器的實際需求，動態調整，以便
在總頻寬需求恆定的狀況下，及時調整各
通道頻寬，以因應突發的狀況，本機制並
可自動偵測與學習實際頻寬需求，以做更
適切的調整。並可減少不必要的傳輸與頻
寬浪費，所有的多媒體處理器傳輸需求亦
可被充分滿足，足見本系統與排程方法的
功效。 
 
 
四、計劃結果自評 
 
本年度計劃之主要目標，在於發展多
通道串流媒體系統晶片平台之 SystemC 
Model 與驗證環境。由於傳統 Cell-Based 
IC Design Flow 開發複雜 SOC 系統所需時
間較長，軟硬體整合驗證又無法在早期階
段進行，修改演算法不易，因此本研究採
用最新的電子系統層設計，並以 CoWare
協助建立實驗之 SOC 平台，其中包括下列
兩個虛擬平台的設計： 
 
(1) 多通道串流媒體系統晶片平台之
SystemC 虛擬平台 
(2) 整合自調適記憶體系統之多通道
串流媒體SOC平台SystemC 虛擬
平台 
 
在實際撰寫程式實作上述兩個虛擬平
台時，我們學到許多原本我們所忽略到的
知識；相關參與這項研究計劃的學生們也
能夠藉此學習研究的方法與作學問的態
度。本計劃的初期研究成果，已發表在國
際會議[1] [2]。 
 
五、參考文獻：  
[1][2]為本國科會計畫補助之研究成
果。 
 
[1] Speedup Resilience: A Practical Metric to 
Explore the Performance Boundary of 
Multicore Architectures; Slo-Li Chu, 
Shiue-Ru Chen; in Proceedings of 2011 
International Conference on Computers, 
Communications, Control and Automation 
(CCCA); (Hong Kong, China, February 
20-21, 2011). (NSC 99-2221-E-033 -034 
-) 
[2] Avalon: A Quad-issue MIPS32 VLIW 
Processor with Dynamic Scheduling 
Mechanism; Chu, Slo-Li; Geng-Siao Li, 
Ren-Quan Liu; Lecture Notes in Electrical 
Engineering (LNEE) (EI) (NSC 
99-2221-E-033 -034 -) 
[3] Advanced RISC Machine Ltd., “AMBA 
Specification Rev 2.0”, 1999, 
http://www.arm.com. 
[4] Synopsys Inc., http://www.synopsys.com. 
[5] C. H. Chen, G. W. Lee, J. D. Huang, and 
J. Y. Jou, “Real-time and bandwidth 
guaranteed arbitration algorithm for SoC 
bus communication”,  in: Proc. of 11th 
Asia and South Pacific Design 
Automation Conference 
(ASP-DAC2006) ,pp.600-605, Jan. 2006 . 
[6] CoWare Inc., http://www.coware.com. 
[7] G. Kornaros , I. Papaefstathiou,A. 
Nikologiannis , and N. Zervos, “A 
Fully-Programmable Memory 
Management System Optimization Queue 
Handling at Multi Gigabit Rate” in: Proc. 
of Design Automation Conference,  pp. 
54- 59, June 2003.  
[8] Nieh, M. S. Lam, “The Design, 
Implementation and Evaluation of 
SMART: A Scheduler for Multimedia 
 6
 
演算法一：Frontend Scheduler排程演算法： 
 
在 Scheduler 內部給定三個 FIFO，分別為 High_queue、Normal_queue、
Low_queue ，執行步驟如下： 
 
Step 1：多媒體 IP發出 request。 
Step 2：Scheduler檢查是否有任何多媒體 IP發出 request，若有發出 request
且不在任何 FIFO中，將其加入 Normal_queue中。 
Step 3：針對 FIFO中的所有多媒體 IP， Scheduler根據各個多媒體 IP之 weight，
調整多媒體 IP的在哪個 FIFO中。 
Step 4：允許優先權最高的 FIFO 中之多媒體 IP 傳輸 (High_queue、
Normal_queue、Low_queue) ，而多媒體 IP 的 weight 則交由 Hash 
function H計算。 
 
H＝a＊IP_p＋b＊IP_b＋c＊RW＋d＊B_r＋e＊WT 
 
（IP_p：多媒體 IP priority； IP_b：多媒體 IP bandwidth； RW：
read/write； B_r：Buffer ready；WT： Waiting time） 
 
 
 
 
 
 
 
 
 
 
 8
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Bus
DRAM 
Controller
Video InputCPUSRAM Controller
H.264 
Codec Peripherals
JPEG 
Codec
MPEG4 
Codec
Video Output
DMAC
圖一、數位視訊監控 SOC 系統 
Access 
Buffer
Reorder Block
Interconnection Network
DRAM Controller
Access 
Buffer
Access 
Buffer
Access 
Buffer
Access 
Buffer
Access 
Buffer
Backend 
Scheduler
.
.
.
CPU Video 
Codec
Video 
Codec
Video 
Input
Video 
Input
Video 
Output
DRAM Banks
Control 
Registers
On-Chip
Off-Chip
Frontend 
Scheduler
圖二、適用於數位視訊監控 SOC 系統自調適記憶體系統雛型 
 10
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
MPEG4 Decoder 1080p
0
50000
100000
150000
200000
250000
1 3 5 7 9 11 13 15 17 19 21 23 25 27 29 31 33 35 37 39 41 43 45 47 49
Clock Cycle (million)
Tr
an
sf
er
 N
um
be
r (
B
yt
es
)
Real Transfer Number
Require Transfer Number
Original Transfer Number
(c) 
 
 
MP3 Decoder 320k
0
2000
4000
6000
8000
10000
12000
14000
1 4 7 10 13 16 19 22 25 28 31 34 37 40 43 46 49
Clock Cycle (million)
Tr
an
sf
er
 N
um
be
r (
B
yt
es
)
Real Transfer Number
RequireTransfer Number
OriginalTransfer Number
(d) 
圖三：啟動自調適記憶體系統對數位視訊監控SOC系統所需之四項高頻寬IP之影響。 
註：(a) MPEG4 encoder in 1080p, (b) MPEG4 encoder in 720p,  
(c)MPEG4 encoder in 720x480, (d) MPEG4 encoder in 320x200. 
一、 參加會議經過 
 
    CSIE2011 會議為全球計算機科學與信息工程研究人員和實際工作者提供公佈新發現和探討
新方法的平台。會議领域包括: 软體工程，計算機運用，資料探勘與資料工程，智能系统，通訊
與網路，計算機硬體與超大型積體電路，多媒體與訊號處理，機器人控制，等等。今年是第二屆
會議，舉辦於常春國際會展中心大飯店，由長春理工大學主辦。 
 
 
    此次前往報告的主題，安排於會議第二天，歸類在「計算機結構」（Computer Architecture）
子會議中，該子會議是以口頭發表的方式進行，主要專注於計算機架構的相關議題。我所報告的
題目是具動態排程機制的 MIPS32 超長指令集架構處理器，目的是為解決傳統超長指令集處理器
程式碼不相容問題，冰依照架構特性提供一自動排程機制。在報告結束後，除了和與會者有對於
未來架構設計的發展方向有所討論，並針對台灣與中國硬體研究的看法與方向有更進一步討論，
得到有所不同的看法與見解。 
 
 
二、 與會心得 
    CSIE 是中國發表學術研究的大型會議之一，探討計算機科學的各個面向，範圍相當廣泛。不
僅包含實驗室專注的計算機架構設計，更包含了其他令人感興趣的主題，可以了解關於計算機領
域的各個不同面像，使我獲益良多。此外也可得知目前中國以及外國學術界的發展，也是很好的
收穫。 
 
三、 建議 
    參加國際會議，能夠有效增加台灣學術研究能見度。故建議國科會能多鼓勵與補助研究人員
參加國際學術研討會發表成果。 
 
 
Copyright Form and email to the Conference Secretariat CSIE2011@cust.edu.cn 
csie2011@world-research-institute.org by 9 March 2011, together with your payment 
confirmation. 
3. Registration Form and IEEE Copyright Form 
Paper ID(s) (You may include multiple papers in one registration form by adding more 
Paper IDs): CSIE2011 P2489 
Paper Title(s) as in your Original Submission(s): Avalon: A Quad-issue MIPS32 VLIW 
Processor with Dynamic Scheduling Mechanism 
Paper Title(s) as in Final Submission(s), if different from above:  
Name of the Registered Author: 
Organization: 
Country/Region: 
Email (If changed since submission, please specify in the Remarks below):  
Registration Fee: 
Extra Page Charge (if any): 
Total Payment as Shown on the Payment Confirmation Attached:  
Remarks (if any, e.g., changes in your email and/or paper title since initial submission; 
if the email address used in your paypal payment is different from the email address used 
during submission):  
Please download the IEEE Copyright Form at http://world-research-
institute.org/conferences/CSIE/2011/submission.html. Complete the Form, sign it, scan it 
as a PDF file, and email it to the conference secretariat together with the Registration 
Form and payment confirmation. 
Please note that if any of the above requirements are not met by 9 March 2011, your paper
(s) cannot be included in the conference proceedings or indexed in EI Compendex/ISTP/IEEE 
Xplore. Your cooperation is very much appreciated. 
Thank you for submitting to CSIE2011 and we look forward to seeing you at the conference. 
We also hope that you will contribute your excellent work to future conferences (check 
our website for announcements in the near future)  
Yours sincerely,  
Zhihong Qian, General Chair 
Jilin University, China 
Huamin Yang, Local Organizing Chair  
Changchun University of Science and Technology, China 
  
Comments from Reviewer 1 :  
--------------------------------------------------------------------------------  
The paper has been presented too briefly especially in the section of experiments. We 
would like to see the details of the discussion / analysis, and comparison with other 
methods.  
The most of references are too old. Please address the recent research status. 
--------------------------------------------------------------------------------  
  
b頁 2 - 4(B)
2011/10/29
(复制此部分粘贴到新建WORD文档中，保存为 CSIE2011 P2489.doc ，填好后和汇款回执、IEEE 
Copyright一起发给会务组。请仔细查看下面的注册表，并认真填写注册表中的每一项。) 
CSIE2011 论文编号(如果这个注册表包括多篇文章,请加入别的文章编号): CSIE2011 P2489 
投初稿时的论文英文标题: Avalon: A Quad-issue MIPS32 VLIW Processor with Dynamic 
Scheduling Mechanism  
如果您在IEEE递交最终稿时用的论文标题和之前投稿时的论文标题不同，请写上您在IEEE递交最终稿
时用的论文标题: 
是否修改了终稿中文章的作者姓名或顺序：  
注册作者中文姓名:  
注册作者英文姓名 (投稿时所用的):  
注册作者联系电话（手机）:  
注册作者单位: 
汇款人（支付人）名称（应和您附件付费凭证中的相同）:  
如果你在会议网站用Paypal支付，请填写Paypal帐户邮箱地址(应和您投稿时用的这个邮箱相同，如果
不同请说明): 
注册费汇款金额:  
加页费（如果您的论文超过4页）: 
总额（应和您附件付费凭证中的相同，包含汇款的尾数零头）:  
参会人姓名: 
发票抬头（可填单位或个人）:  
发票费用项目（仅此3种选择，请保留一项，删除其它两项）: 1.会务费; 2.会议服务费; 3.会议注册
费 
手机号码：  
如果您需要给会务组附加说明（比如更改了邮箱、提前邮寄发票等）:  
IEEE Copyright可以在会议网站Submission网页下载http://world-research-
institute.org/conferences/CSIE/2011/submission.html。 
如果有关注册汇款有什么会务组可以帮您，请发邮件CSIE2011@cust.edu.cn 或者电话18651863309
（邮件和电话可以用中文。在你汇款后大约第三个工作日，汇款才能到帐）。 
b頁 4 - 4(B)
2011/10/29
2  
have to be recompiled by VLIW native compiler. This VLIW object code com-
patibility problem has limits the popularity of VLIW architectures. 
Some researcher proposed dynamically trace scheduled VLIW architecture 
(DTSVLIW) [1] to solve this problem. It integrates a VLIW engine, a conven-
tional superscalar core into a processor, with a sophistical hardware scheduler to 
keep instruction trace and dispatch the suitable instruction bundle/instructions to 
the VLIW engine/superscalar core, according to the profiling results of scheduler. 
It consumes a huge amount of hardware resources and executing time.  Also, it 
can not execute the legacy binary codes. 
In this paper, we proposed a novel quad-issue MIPS32 VLIW processor, called 
Avalon, which can execute legacy MIPS32 [4] binary codes without recompilation. 
The integrated hardware instruction scheduling/packing mechanism, called Ex-
calibur, can process these instructions on-the-fly, and then feed into the functional 
units by VLIW executing fashion. Excalibur mechanism can analyze original bi-
nary instructions, find the parallelism, handle all of the dependence relations and 
avoid hazards at runtime. The proposed Avalon processor is a quad-issue, six-
stage pipelined processor that can execute whole MIPS32 integer instruction set. 
The whole Avalon processor is implemented using Bluespec System Verilog HDL, 
and translated into synthesizable RTL Verilog codes. The proposed RTL simula-
tion checks functional and timing correctness. After synthesizing the RTL Verilog 
design, the clock rate of Avalon processor can achieve 105 MHz and occupied 
44633570 μm2 by TSMC 0.13 μm technology. 
2. Related Work 
Dynamic scheduling mechanism is an approach to overcome binary code com-
patibility problem. Cyclone scheduler [3] is a kind of dynamic instruction sched-
uler by using time estimation method. If the real execution time of the program 
meets the estimated time, the scheduler will issue those instructions into functional 
units. If not, the scheduler will insert instructions to replay queue. This scheduler 
is suitable for superscalar architectures with out-of-order execution (OOE) capa-
bilities, because the replay penalty of superscalar with OOE is less than VLIW ar-
chitectures.  
Dynamically Trace Scheduled VLIW [1] is another kind of dynamic scheduling 
VLIW architectures. As mentioned before, this VLIW architecture integrates trace 
scheduler, VLIW engine and a superscalar. The trace scheduler reschedules origi-
nal instructions and packs into VLIW instructions, and then saves VLIW instruc-
tions to VLIW cache. Some original instructions that can’t be executed concur-
rently will save to primary instruction cache. Because these researches are 
simulator-based experiments, the extra hardware latency and logic cost can not be 
identified. The feasibility of hardware implementation is also hard to distinguish. 
The other way to overcome binary code compatibility problem is Dynamic re-
scheduling [5]. This mechanism translates the source code into new object code to 
fulfill the requirement of binary compatible. Because dynamic rescheduling 
4  
 
Fig. 1 The architectural diagram of Avalon VLIW processor 
4. Excalibur: the Dynamic Scheduler and Packer 
The proposed Excalibur scheduler is a dynamic instruction scheduler, which can 
analyze instruction streams in the instruction buffer. The analyzing process in-
cludes instruction dependence analysis, basic block detection, and hazard analysis. 
This dynamic scheduler could provide suitable execution schedule to maximize 
the utilization of functional units while execute the multiple instruction at the 
same time. The mechanism dynamically selects four independent instructions 
from instruction buffer, and then packs into a instruction bundle. There are two 
phases, Scheduling phase and Packing phase, to accomplish this objective. In 
Scheduling phase, it will determine data dependence between all instructions in 
the instruction buffer, update dependence information to the corresponding In-
struction Dependence Table (IDT). In Packing phase, according to the information 
in IDT, it selects four independent instructions and packs into a VLIW bundle. Fig. 
21 presents the detail execution flow of the Excalibur scheduler. If there are any 
branch instructions in the instruction buffer, the basic block detector will find out, 
and then the next PC is calculated in Branch Manipulation. These mechanisms can 
guarantee the execution correctness of the scheduled/packed instruction bundles 
and exploit the potential ILP of the instruction stream. 
5. Experimental Results  
The proposed Avalon VLIW processor and accompanied Excalibur scheduler is 
very complex. In order to reduce the design cycle, we adopt a new electronic sys-
tem level (ESL) design language, Bluespec SystemVerilog (BSV) [2], to be the 
6  
In order to obtain accurate circuit timing, area and power information, we 
choose Synopsys Design compiler as logic synthesizer to synthesis VLIW archi-
tecture. The results of logic synthesis present that the working frequency can 
achieve 105 MHz and occupied area is 44633570 μm2 by TSMC 0.13 μm process. 
6. Conclusion  
This paper describes a novel Avalon MIPS32 VLIW processor with Excalibur dy-
namic scheduler.  Avalon MIPS32 VLIW processor can directly execute legacy 
MIPS32 integer binary codes without compiler recompilation and intervention. 
Different from hardware DTSVLIW or instruction rescheduled software for 
VLIW architectures, this study provide a straightforward method to scheduling 
and packing on-the-fly via Excalibur hardware scheduler. Hence the MIPS32 
VLIW can be very simple and easy to implement. The proposed experimental re-
sults show that the Avalon VLIW processor achieves a 3.51 speedup over the 
baseline processor in quad-issue VLIW design. The proposed Avalon processor is 
designed by Bluespec SystemVerilog and verified the correctness of functionality 
via MIPS32 binary benchmarks. Finally, we adopt Synopsis Design Compiler to 
synthesize Avalon VLIW processor with TSMC 0.13μm technology library. The 
results show that our design can achieve 105 MHz.  
Reference 
1. de-Souza A and Rounce P (2000) Dynamically Scheduling VLIW Instructions. In: Journal of 
Parallel and Distributed Computing Volume 60 Issue 12, December, pp 1480-1511 
2. Bluespec, Inc. (2008) Bluespec SystemVerilog User Guide. Available on: 
www.bluespec.com 
3. Ernst D, Hamel A, Austin T (2003) a broadcast-free dynamic instruction scheduler with se-
lective replay. In: ISCA '03: Proceedings of the 30th annual international symposium on 
Computer architecture, June 
4. MIPS Technologies, Inc. (2003) MIPS32™ Architecture for Programmers Volume I-III: In-
troduction to the MIPS32™ Architecture, Revision 2.0, June 
5. Conte T, Sathaye S (1995) Dynamic rescheduling: A technique for object code compatibility 
in VLIW architectures. In: Proceedings of the 28th Annual International Symposium on Mi-
croarchitecture, March, pp 208-218 
 
報告內容應包括下列各項： 
一、參加會議經過 
    IEEE CCCA’10（Computers, Communications,Control and Automation）會議，此次會議的
舉辦地點在香港的沙田。本會議（含本次）共已在世界各地共舉辦 3次，為一每年固定舉辦的例
行會議，會議主要的目的，在於匯集各國來自學術界、產業界及政府實驗室研究人員與科學家於
計算機、通訊和自動化方面新的研究成果，並且探討未來的研究方向，會議的內容包含了以下議
題：Applications of the Information Systems、Artificial Intelligence、Automata and Formal 
Languages、Collaborative Working Environments、Computational Mathematics、Cryptography 
and Security、E-Activities、Fuzzy Systems、Informatics in Control、Information Society 
- Knowledge Society、Natural Computing、Network Design & Internet Services、Multimedia 
& Communications、Parallel and Distributed Computing、Web Science。在 CCCA 會議中除了
各研究者的論文口頭報告外，會議中也邀請產業界與學術界的知名人士就相關議題發表主題演
說。 
    此次前往報告的主題，被安排在會議第二天下午（當地時間 2/21），歸類在「計算機，通訊，
控制和自動化」（Computers, Communications,Control and Automation）子會議中，該子會議
是以口頭發表的方式進行，主要專注於各種與科學、工程計算的相關議題。我所報告的題目是探
討五種實際存在的多核心架構平台與兩種程式平行化機制在採用同一種效能評估方式之下，所能
達到並反映出的實際效能提升之可能性，並探討其造成中差異可能的原因。本會議中，除了 獲
得了由其他研究者提出的與本議題相關相關想法觀念之外，也獲得了其他不同議題下的研究者所
提出他們對於其議題的想法觀念，讓我感覺收益良多。 
     
二、與會心得 
    CCCA 是 IEEE 目前常規的會議之一，探討關於計算機、通訊與自動化的各各面向。我所在
的實驗室專注於計算機架構與系統之間的互動，故在聆聽各種不同的思維及研究時，常常會思考
這些技術與架構之間的互動。此外，與其它與會者的討論互動及產業界與學術界知名人士的演
講，讓我從中學到了許多新觀念及想法。 
   附報告相片乙張 
 
Slo-Li Chu  
寄件者: "CCCA 2011" <ccca2011@easychair.org>
收件者: "Slo-Li Chu" <slchu@cycu.edu.tw>
傳送日期: 2011年1月7日 下午 08:31
主旨: CCCA 2011 acceptance for paper 21
b頁 1 - 4(B)
2011/10/29
Dear Authors 
 
Thank you for your submission to CCCA 2011. We are pleased to inform you that, according to the reports 
from anonymous reviewers, the following distinguished work from you has been accepted for CCCA 2011, 
with the publisher of IEEE, which will be indexed by EI and ISTP.  
 
You are kindly reminded with the following important notes: 
1. Open the link and find a lot of information of paper submission and registration.  
http://www.sit-association.org/ccca2011/ei/ieeeregistration.htm 
 
2. In order to make high quality of Proceedings, the camera-ready version should follow format. Kindly 
download from here 
http://www.sit-association.org/ccca2011/ei/ieeeregistration.htm 
 
3. After Finish the final Paper, you can prepare a Copyright Release Form. The copyright should download, 
print, write author names, paper title, sign a name and date, and scanned it to PDF format  
http://www.sit-association.org/ccca2011/ei/IEEE%20COPYRIGHT%20FORM.doc 
 
 
4. Kindly download the registration form and pay for it,  
http://www.sit-association.org/ccca2011/ei/ieeeregistration.htm 
and send both registration form and a scanned receipt from your bank to above Email  
 
CCCA2011reg@gmail.com before Jan 30, 2011.If you have not paid for your paper in that time, your paper 
will not be published.  
 
5. The e-copy official acceptance Letter could be download though 
http://www.sit-association.org/ccca2011/ei/Acceptance_letter_ei.doc 
 
Write you write author names, paper title and print it  
 
Kindly send Final paper (doc format), copyright, registration form and a scanned receipt to  
CCCA2011reg@gmail.com before Jan 30, 2011 
 
Sincerely, 
Program Committee of CCCA 2011 
E-mail: CCCA2011reg@gmail.com 
URL: http://www.sit-association.org/ccca2011/ 
 
Paper ID：21 
Paper Title： Speedup Resilience: A Practical Metric to Explore the Performance Boundary of Multicore 
Architectures 
Answer the following question in scale (1-7, 1-low and 7 high) 
Quality of the abstract: 4  
Relevance to the conference: 6  
Introduction and motivation: 5  
Presentation of the "state of the art": 6  
Description, originality of the own contribution: 5  
Presentation of the results: 5  
Conclusions and future work: 6  
Readability, quality of the English: 5  
Quality of the figures: 5  
d) 在打印的文件上用英文（拼音）手写填写General Terms 下方的： 
(1) Author/Authorized Agent for Joint Authors   Date 
特别强调： 
U.S. Government Employee Certification (where applicable) 以及 
Crown Copyright Certification (where applicable) 
此两者下方的签名是留给美国以及英国人填写的，中国作者千万不要填写。 
 
其中作者签名：Author/Authorized Agent for Joint Authors这里只需要论文作者中一人即可(多人也可
以)，不必是第一或通讯作者。日期也需要填写，格式任意。 
 
e) 扫描文件为jpg或pdf格式 
 
4) 提交扫描版本的汇款证明(扫描前，在票据上写生ccca+论文编号)，如果是网银转账，提交交易成功
截屏（用作图软件在图片上标注ccca+论文编号）。文件一定要清晰。 
 
5) 如果是学生注册，提交学生证扫描件。(学生必须是论文第一或第二作者) 
 
版权书，汇款凭证，学生证等扫描文件需要各自单独成立文件，不可组合在一个文件之中！！！ 
 
建议您采用文件命名规则，假定论文编号为1号，则： 
论文终稿：001_paper.doc (word版本);  001_paper.pdf (pdf版本) 
汇款证明:001_汇款证明 
版权书:001_CR 
注册表：001_注册表 
学生证: 001_学生证 
 
如果您有多篇论文，则需要注意的是，论文终稿和版权书，需要每篇论文单独提供。 
汇款证明，注册表，和学生证则可以多篇论文共用一个文件说明。 
假定作者有两篇论文分为1号和2号，则命名规则为: 
注册表:001+002_注册表 
学生证:001+002_学生证 
汇款证明:001+002_汇款证明 
论文和版权命名规则同一篇。 
 
最后，全部文件：论文终稿，版权书，注册表，汇款证明，学生证(学生注册)，请不晚于2011年1月30
日24时发送到CCCA2011reg@gmail.com，邮件标题用论文编号命名，如果有特殊请求，请在标题中注
明，方便优先处理。 
最后，如果您需要提交新版本的文件，请在新提交的时候说明修改了哪个文件。 
 
如果您未能完整和正确完成以上步骤，您论文将可能不能正常出版。 
 
此外， 
1． http://www.sit-association.org/ccca2011/ei/Acceptance_letter_ei.doc为盖章扫描的录用通知，如果您单
位需要提供，则请下载，填写好作者姓名和标题后打印，给您单位作为论文被录用证明，切记，我们
不需要您提交这个文件给我们。如果您要纸质盖章版的邀请函，我们会在会场现场发送给作者，如果
您不到会，则请在注册表中声明您需要我们给您邮寄纸质邀请函。 
 
2．Answer the following question in scale (1-7, 1-low and 7 high) 及其以下的评分，是审稿人对您论文的
打分，仅供参考，不需要特别处理它。  
 
3．我们将会在1月30日以后集中查验作者汇款成功与否，届时如果有问题，将会电子邮件或者电话联
系作者进行弥补。发票将会在会场现场可拿，如果您不参会，将会和论文集一起在会后约一至二周时
间内快递出去，请注意查收。  
 
b頁 3 - 4(B)
2011/10/29
Speedup Resilience: A Practical Metric to Explore the Performance Boundary of 
Multicore Architectures 
 
Slo-Li Chu and Shiue-Ru Chen 
Department of Information and Computer Engineering 
Chung Yuan Christian University 
Chung Li, Taiwan 
 
 
Abstract—The continuous improving of semiconductor 
technology makes the ubiquity of multicore system. In order to 
understand the potential performance limitation of various 
multicore systems, we propose a performance metric, speedup 
resilience, to evaluate the potential possibility performance 
enhancement of a multicore system. Instead of theoretical 
metrics provided by vendors, this study evaluates five variant 
multicore systems by using four benchmarks with different 
computing characteristics. These benchmarks are parallelize by 
Pthread and OpenMP paradigms, then compiled by native 
compilers of the target machine with highest optimizing level. 
The speedup resilience of these architectures are provided and 
discussed later. The proposed results also illustrate that branch 
density and memory contention will largely degrade the 
performance. Wish this work will be the preliminary step of who 
want to explore the optimizing space of the software on multicore 
systems. 
Keyword: Speedup Resilienc, Pthread; OpenMP; Multicore. 
 
I.  INTRODUCTION 
The unmanaged power wall of semiconductor technology 
makes the computing industry move away from improving 
clock frequency to integrate more cores into chip 
multiprocessors (CMPs). Since the architectural 
considerations are different, there is a vast diversity of 
available CMP architectures. It will makes programmers 
confuse variety of architectural features, such as multicore, 
SIMD, simultaneous multithreading, core heterogeneity, and 
unconventional memory hierarchies, with novel 
arrangements. This makes the announced peak performance 
will become an unachieved goal.  
With the increasing popularity multicore systems, there 
has been a desired requirement for efficient and rapid 
development of parallel applications. Pthread and OpenMP 
have emerged as the standard for parallel programming on 
shared-memory systems. Pthread (POSIX Threads) library is 
part of the standard Linux/Unix systems, its parallel 
processing paradigm is straightforward since a thread is 
coded exactly the same as an ordinary C function and shared 
data is simply global variable in the C programming context. 
The OpenMP application programming interface (API) 
includes compiler directives, library routines, and 
environment variables that are used to define parallel regions 
and share work between threads. The OpenMP-aware 
compilers allow incrementally parallelize a program and 
generate multi-threaded code suitable for a shared-memory 
machine. Although these two paradigms make parallel 
programming more easily, the performance bottlenecks also 
limit the maximum speedup of these sophisticated multicore 
architectures.  
Williams et. al. [1][2] attempt to explorer the 
optimization range of multicore systems by using 
“Operational Intensity” which is based on the architectural 
parameters provided by venders, and profiling results by 
micro-benchmarks. These results are able to present a visual 
“Roofline” diagram to ceiling of operation intensity but can 
not directly translate to the general metrics of performance. 
The “ceiling” is also too ideal to be true.  
I. Park and S. W. Kim [3] propose a practical 
performance evaluation of InfiniBand interconnection by 
using SPEC OMP benchmarks. It only suits for distributed 
virtual shared-memory (DVSM) system but cannot 
generalized to multicore systems. 
In this paper, it try to figure out the performance barriers 
of various homogeneous and heterogeneous multicore 
architectures, by using four benchmarks with different 
computing characteristics. These benchmarks are parallelize 
by Pthread and OpenMP paradigms, then compiled by native 
compilers of the target machine with highest optimizing level. 
From our experimental results and discussion, it will 
demonstrate the performance gap between theoretical 
estimating and real benchmarking. These results also figures 
out the speedup resilience of the increasing number of 
concurrent threads in a given multicore architecture. The 
performance difference and effect of Pthread and OpenMP 
paradigms are also evaluated.  
The rest of this paper is organized as follows. Section 2 
gives an overview of Pthread and OpenMP parallel 
programming paradigms. In Section 3, we describe our 
evaluated multicore systems and their architectural 
characteristics. Section 4 presents the proposed benchmarks 
and their computing attributes. The experimental results for 
different multicore systems are also reported and discussed. 
Finally, Section 5 concludes the paper. 
 
2011 International Conference on Computers, Communications, Control and Automation (CCCA) 
978-1-61284-102-111/$26.00 ©2011 IEEE                                                            CCCA2011 
 
35
SPARC core is a 2-issue static superscalar with fine-grained 
multi-threading of eight threads, and is running on 1.16GHz. 
Total 64 threads are running in the same time over eight 
cores. Each core has 16K/8K L1 I/D-cache and shares 4MB 
L2 cache with others. The memory subsystem of 
UltraSPARC T2 is quite efficiency since it integrated four 
dual-channel FB-DIMM memory controllers on chip, with a 
DRAM capacity of 32GB, to improve the total memory 
bandwidth. Although the working frequency is lower than 
other workstation products, this advantage helps better 
performance in memory bounded applications. In this paper, 
we evaluate the Sun T5120 single-socket platform. The full 
system has 4MB of L2 cache with eight physical cores. 
 
B. Intel Xeon E5440 (Harpertown) [6] 
Harpertown is Intel’s quad-core processor by packaging 
two dual-core Xeon chips, a.k.a multi-chip module (MCM). 
Each core is based on Intel’s Penryn (Core2) 
microarchitecture, runs at 2.83 GHz with four issues, out-of-
order superscalar capabilities. Each Harpertown core 
includes a 32KB L1 cache, and each chip (two cores) has a 
shared 4MB L2 cache. Each socket has access to a 333MHz 
quad-pumped front side bus (FSB), delivering a raw 
bandwidth of 10.66 GB/s. In this paper, we evaluate the IBM 
X3500 dual-socket platform, which contains two MCMs 
with dual independent busses. The chipset provides the 
interface to four fully buffered DDR2-667 DRAM channels 
with a DRAM capacity of 16GB. The full system has 16MB 
of L2 cache with eight physical cores. 
 
C. AMD Opteron 2214 (Santa Rosa) [4] 
The AMD Opteron 2214 offers dual Opteron cores 
processor in a single chip. Each core operates at 2.2GHz, 
with three issues out-of-order superscalar capabilities.  
The evaluated computer is consisted of two sockets and 
forms a quad cores system. The dual-core Opteron 2214 chip 
contains a 64KB L1 cache, and a 1MB non-shared L2 cache 
for each core, with integrated dual-channel DDR2-667 
memory controller with a DRAM capacity of 16GB. Each 
socket delivers 10.6 GB/s for NUMA (Non-uniform memory 
access) memory architecture. The full system has 4MB of L2 
cache with four physical cores. 
 
D. Intel Core i5-750 (Lynnfield) [6] 
The Intel Core i5, Lynnfield, is Intel’s native quad-core 
processor, by integrating quad cores into a single chip. Each 
core is based on Intel’s Nehalem microarchitecture, runs at 
2.66 GHz with four issues, out-of-order superscalar 
capabilities. Each Nehalem core includes a 256KB L2 cache, 
and quad cores share common 8MB L3 cache. The legacy 
Front Side Bus (FSB) has been replaced by point-to-point 
protocol, Direct Media Interface (DMI), to offers more 
bandwidth. The evaluated system is based on Gigabyte GA-
P55A-UD3P mainboard and Core i5-750, which has on-chip, 
dual-channel DDR3-1333 memory controller with a DRAM 
capacity of 4GB. The full system has 1MB of L2 cache, 
8MB L3 cache, and with four physical cores. 
 
E. IBM Cell Processor [8] 
The IBM Cell processor, the heart of the Sony PS3, 
adopts a heterogeneous approach to design the multicore 
architecture that includes 1 PPE and 8 SPEs. PPE (Power 
Processor Element) is the main control unit of Cell processor, 
and SPEs (Synergistic Processor Elements) are specifically 
designed for data-intensive and streaming processing 
computations. The PPE consists of PPU (Power Processor 
Unit) which is an in-order, 2-way simultaneous multi-
threading, 64-bit Power architecture with VMX extension, 
with L2 cache, runs at 3.19 GHz. SPE consist of SPU 
(Synergistic Processor Unit) and its memory flow control 
SMF (Synergistic Memory Flow control). Each SPU is a 
dual-issue 128-bit SIMD architecture with deep pipelining. 
All of these processor elements, memory controller, and I/O 
are attached onto EIB (Element Interconnect Bus), which is 
presently implemented as a circular ring comprising four 
16B-wide unidirectional channels with counter-rotating in 
pairs. To access external memory, the SPEs only can rely on 
DMA to move data from/to memory controller. Meanwhile, 
the memory controller is shared by all processor elements 
with a DRAM capacity of 256MB. So it limits the memory 
bounded applications and programming paradigm. In this 
paper, the evaluated Cell processor, adopted in Sony 
PlayStation3, only enables six SPEs. 
 
IV. EXPERIMENTAL RESULTS 
In this section, we will use four benchmarks, includes Pi 
Calculation, Number of Prime, Matrix Multiplication, and 
Matrix Transpose, to observe speedup resilience of increased 
concurrent threads on a multicore platforms. These 
benchmarks are parallelized by two popular parallel 
paradigms, Pthread (-PT) and OpenMP (-OMP). The 
evaluated multicore platforms includes Sun UltraSPARC T2 
(T2-), Intel Xeon E5440 (Xeon-), AMD Opteron 2214 
(Ath64-), Intel Core i5-750 (C-i5-) and IBM Cell Processor 
(Cell-). An overview of the architectural configurations and 
characteristics of these five platforms can be found in Table 
1. 
A. Speedup Rresilience of Four Benchmarks 
1) Pi Calculation (Pi_Cal) 
The first benchmark is “Pi Calculation”, which is a 
highly compute-intensive application, in double-precision 
floating point operation. This proposed computation kernel is 
high parallelism so it can be fully parallelizable by OpenMP 
and Pthread. In the Figure 3, it illustrates ten curves include 
two parallel paradigms (-PT and –OMP) X five evaluated 
platforms (T2-, Xeon-, C-i5-, Ath64-, and Cell-). The curves 
in the following figures are denoted in the same abbreviated 
symbols. 
 
 
 
37
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Figure 5.  The curves of speedup vs. increased number of thread of 
“Matrix Multiplication” benchmark that are targeted on five multicore 
platforms. 
4) Matrix Transpose (Matrix_Transpose) 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Figure 6.  The curves of speedup vs. increased number of thread of 
“Matrix Transpose” benchmark that are targeted on five multicore 
platforms. 
The fourth benchmark transposes a 2-dimension floating-
point matrix by 256*256, which only adopts memory 
operations. It is a contrast case that no one can obtain more 
than 1.5 speedup due to the intensive memory access and 
branch operations and without any computing operations 
inside the loop iteration. The out-of-order superscalar and 
multicore design will be bounded by limited memory 
channels and stalling latency of memory access. It also 
figures out that memory access is still a big challenge in 
modern architecture design. Only Opteron 2214 obtains a 
few speedup to 1.35 while threads is less than 13, it may gain 
by the on-chip memory controller, less cores in a chip, and 
two socket design, to reduce the possible memory access 
contention. 
B. Comparison of Execution Time of Pi Calculation 
Here we discuss the absolute execution time of different 
platforms. According to Figure 7, we can find that clock rate 
is also the dominated factor of the performance. Although 
the UltraSPARC T2 has best speedup potential in Figure 3, 
the absolute execution time is still weak than Xeon E5440 by 
its 2.44 times clock rate (2.83 GHz vs. 1.16 GHz). These two 
platforms all consists of eight cores, integrated in a chip or 
separated in two chips. Also, the core number is still a 
critical factor of parallelizing potential. So in Figure 3, the 
Core-i5 will be bounded in 4 times speedup but in Figure 7, 
it is still fast than UltraSPARC T2 and Opteron 2214 due to 
its higher clock rates. The simple architecture of PPE in Cell 
processor still limits its performance even it works at high 
clock rates of 3.2GHz. Due to specific DMA and EIB 
programming model of SPEs in Cell processor, the Pthread 
and OpenMP paradigms cannot fully utilize its computation 
capabilities. The execution times of other three benchmarks 
are omitted due to the paper limitation. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Figure 7.  The curves of execution time vs. increased number of thread of 
“Pi Calculation” benchmark that are targeted on five multicore platforms. 
Matrix_Mult
0.5
2.5
4.5
6.5
8.5
10.5
12.5
14.5
1 17 33 49 65 81 97
Number Of Thread
Sp
ee
du
p
T2-OMP T2-PT Xeon-OMP
Xeon-PT C-i5-OMP C-i5-PT
Ath64-OMP Ath64-PT Cell-OMP
Cell-PT
Matrix_Transpose
0.1
0.4
0.7
1
1.3
1.6
1 17 33 49 65 81 97 11
3
12
9
14
5
Number Of Thread
Sp
ee
du
p
T2-OMP T2-PT
Xeon-OMP Xeon-PT
C-i5-OMP C-i5-PT
Ath64-OMP Ath64-PT
Cell-OMP Cell-PT
Pi_Cal
1
10
100
1 16 31 46 61 76 91
Number Of Thread
Ti
m
e(
se
c)
T2-OMP T2-PT
Xeon-OMP Xeon-PT
C-i5-OMP C-i5-PT
Ath64-OMP Ath64-PT
Cell-OMP Cell-PT
39
國科會補助計畫衍生研發成果推廣資料表
日期:2011/10/29
國科會補助計畫
計畫名稱: 設計適用於多通道串流媒體系統晶片之自調適記憶體系統
計畫主持人: 朱守禮
計畫編號: 99-2221-E-033-034- 學門領域: 計算機結構與計算機系統
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
無 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
