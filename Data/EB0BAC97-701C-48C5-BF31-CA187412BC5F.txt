 I 
【摘要】 
 
在高度自動化的批次化學品製程中，線上失誤診斷是提昇操作安全重要的環節。本研究主要目的
是希望利用製程系統的自動機模型，來自動建構能夠對製程系統進行線上危害鑑識的診斷器。具體而
言，我們首先開發了系統化的建造設備(元件)的自動機模型，來表示設備的狀態轉移行為；接著，根據
各設備的階層關係，將元件模型組合成系統模型並建造對應的診斷器，來表示批次製程中的失誤傳播
機制。另外，為了提高失誤診斷的解析度以精確地分辨失誤來源，我們亦針對兩項可提高診斷性策略
進行定性與定量的分析討論：(1)設置未包括於管線與儀器圖的額外感測器與(2)執行順序功能流程圖中
未指定的額外操作步驟。最後，我們也會將此策略實際應用於化學工廠之批次製程操作中，以驗證此
一策略的有效性。  
 
關鍵字：自動機；批次操作；診斷性；失誤診斷；失誤傳播路徑；夏農熵 
 
 
【Abstract】 
 
Online diagnosis has been considered as an important measure for improving operational safety in many 
batch chemical plants. Specifically, the state transition behaviors of all hardware items (components) in the 
given batch process and their failure mechanisms are modeled systematically with automata. The system 
model is then assembled by connecting the component models on the basis of a generic hierarchical structure. 
A "diagnoser" can be constructed accordingly for the purpose of determining various qualitative and 
quantitative performance indices. Guided by these indices, two performance enhancement approaches can be 
effectively applied: (1) installing additional sensors which are not included in the piping and instrumentation 
diagram (P&ID) and (2) executing extra operation steps which are not specified in the sequential function 
chart (SFC). Three examples are presented in this paper to demonstrate the feasibility of the proposed 
approach.  
 
Keywords: Automata; Batch operation; Diagnosability; Fault diagnosis; Fault propagation trace; Shannon 
entropy 
 
備註：  
本研究成果己發表在 
Chemical Engineering Research and Design, 2011, in press (doi:10.1016/j.cherd.2011.05.007) (附件一) 
Industrial & Engineering Chemistry Research, 2010, 49, 4249-4268 (附件二) 
 
 
 
 
 
1 
【報告內容】 
1. Introduction 
 
Hardware failures in chemical plants should be viewed as unavoidable but random events. They can 
usually be attributed to controller malfunctions, actuator failures (e.g., valve sticks, pump failures and 
compressor failures), containment failures (e.g., tank leakages), sensor failures, design errors and operator 
mistakes, etc. Any combination of these events may result in drastic decrease in productivity, significant 
deterioration in product quality and, in the worst cases, catastrophic outcomes such as explosions, fires, or 
toxic releases. Since offline hazard assessment can reduce the total expected loss of accidents only to a certain 
degree, online fault diagnosis should be regarded as an alternative means for improving the operational safety 
of chemical processes.  
According to Venkatasubramanian et al. (2003a; 2003b; 2003c), the available fault diagnosis methods 
could be classified into three general types: (1) quantitative model-based approaches; (2) qualitative 
model-based approaches; (3) process history based approaches. These methods were developed primarily for 
the continuous chemical processes in the past, while significantly less effort has been devoted to the batch 
operations. Notice that online failure identification in the latter case is a much more difficult task. This is 
mainly due to the fact that a continuous process is supposed to be maintained at steady state, but the batch 
system state usually changes with time. Various different diagnostic strategies have already been adopted to 
cope with this time-variant nature and several of them are briefly reviewed in the sequel. Nomikos and 
MacGregor (1994; 1995) developed a multi-way principal component analysis method for batch process 
monitoring, which has later been extended for diagnosis applications (Kourti and Macgregor, 1995; Kourti et 
al., 1995; Lee et al., 2004; Undey et al., 2003; Chen and Jiang, 2011). In addition, fault identification 
techniques based on artificial neural networks, knowledge-based expert systems, observers and Petri nets have 
also been proposed for the batch operations (Ruiz et al., 2001a; 2001b; Pierri et al., 2008; Hashizume et al., 
2008; Caccavale et al., 2009). Although satisfactory results were reported in these studies, none of them 
addressed the important issue of performance assessment for the overall diagnostic system. 
It can also be observed from the above-mentioned studies for both continuous and batch systems that, in 
order to facilitate effective online fault identification, the fault propagation mechanisms must be clearly 
described with a quantitative or qualitative model and the resulting symptom evolution patterns must also be 
adequately characterized or predicted in advance. Although the digraph model is by far the most popular 
choice for this purpose (Maurya et al., 2004; Zhang et al., 2005; Chang and Chen, 2007; Chen and Chang, 
2009), it has been used mostly in applications concerning the continuous processes. This is because digraph is 
not suitable for representing the dynamic causal relationships among time, events, equipment states and 
system configurations in the semi-batch or batch processes.  
To circumvent the above-mentioned drawbacks, Viswanathan et al. (2002) adopted a hybrid framework 
to incorporate two different types of popular models, i.e., Petri nets and digraphs, for offline hazard 
assessment. Chen et al. (2010) also developed several Petri-net based algorithms in a recent study to configure 
online fault diagnosis systems for the batch processes. Although satisfactory results in simple examples were 
reported in this study, there are still critical issues that must be addressed before actual implementation: 
 
 Since the event sequences (or traces) in multi-failure scenarios cannot be efficiently enumerated 
with the Petri-net models, the scope of fault diagnosis was mostly limited to the single-failure 
accidents only.  
 
 A single intuitive index, i.e., the percentage of diagnosable traces, was adopted to evaluate the 
diagnostic performance of every given batch operation. This somewhat arbitrary approach is not 
enough for fully characterizing various complex features of the diagnosis results.  
 
 The Petri-net based procedure was not tested rigorously with realistic batch operations in practical 
applications.  
 
 
3 
that contains one or more failure event is regarded as a fault propagation scenario. 
 
3. Hierarchical Structure of Batch Processes 
 
It has been well recognized that every batch process can be unambiguously described with a P&ID and a 
SFC. Basically every identifiable hardware item in the batch process is treated as a component in this work 
and they are classified into a 5-level hierarchy according to Figure 1. The top-level component, supervisor, is 
usually a programmable logic controller (PLC) used for executing the given SFC so as to alter the actuator 
states. More than one 2nd-level actuator may be present in the batch process, e.g., hand valves, control valves, 
switches, pump, and compressor, etc. These actuators are installed for the purposes of adjusting the process 
configuration, i.e., the material and/or energy flow patterns in the given system, which is viewed as the 
3rd-level component in the hierarchy. Every major unit operation in P&ID, such as reaction, separation, heat 
exchange and storage, is considered as a level-4 component, while every on-line sensor is treated as a 
component in level 5. 
To further illustrate this hierarchical structure, let us consider the liquid-storage system presented in 
Figure 2. This problem was studied in Chen et al. (2010) and will later be referred to as Example 1 in this 
paper. The height of liquid level in this tank is monitored on-line. Two distinct sensor signals, i.e., (1) LH 
(level high) and (2) LL (level low), are sent to a PLC to actuate the control valves (V-1 and V-2) on the outlet 
and inlet pipelines (P-1 and P-2) respectively. Under the assumptions that the initial liquid level in tank is low 
and both valves are at the close positions initially, a sequential function chart can be produced to represent the 
needed cyclic operating procedure (see Figure 3). Notice that iS  ( 0,1, 2i = ) and jT  ( 1, 2,3j = ) denote the 
operation steps and the activation conditions of these steps respectively. Notice also that the control actions 
taken in each step and the sensor signals used in each condition are also specified in this chart. It is clear that 
the components in this system can be classified into five hierarchical levels, i.e., the programmable logic 
controller (PLC), the solenoid valves (V-1 and V-2), the pipelines (P-1 and P-2), the storage tank (T-1), and 
the level sensor (S-1). 
 
4. Systematic Model-Building Procedure 
 
The model-building procedure consists of three general steps: (1) dividing the batch system into distinct 
components and then building the corresponding automata according to aforementioned hierarchical structure, 
(2) combining all components to create a system model by applying the standard parallel composition 
operation (Cassandras and Lafortune, 1999), and (3) introducing the artificial self-looping events “ STOP ” 
into the system model to ensure liveliness. These steps are explained below in detail: 
 
4.1 Step 1: Developing Component Models  
 
A component model is used to characterize a finite set of identifiable states of the hardware item under 
consideration and all possible state transition processes. The transition from one state (say 1s ) to another (say 
2s ) may be realized by one or more event and the common features of a normal transition process can be 
represented with the state transition diagram presented in Figure 4. In this model, the 1s -to- 2s  transition 
process is triggered by a collection of events (i.e., 1 2, , , ne e e′ ′ ′ ), while events 1e  and 2e  result in transitions 
to their originating states, i.e., the component states are maintained at 1s  and 2s  respectively. The former 
events are referred to as the state-transition events in this paper and the latter the state-maintaining events. 
Notice that every initial state in this model is marked by attaching an incoming arrow without origins. Since 
the initial state in this case is 1s , the state-maintaining event 2e  can only be enabled after all state-transition 
events ( ie′ ) are triggered. Finally, it should be noted that the state-transition events in a component model 
should always be the state-maintaining events in the higher-level models.  
 
5 
( 1, 2, ,i n=  ), and the boxed automaton represents the normal operation cycle in which only routine events 
are allowed. Any failure event (i.e., _  and 1,2, ,FE i i N=  ) could result in a change from a normal state 
within the box to a failure state outside, i.e. _  and 1,2, ,FS i i N=  .  
Let us first consider the automaton given in Figure 6, i.e., the normal model of outlet valve, as an 
example to illustrate the proposed modeling practice (see Figure 11). In this modified version, the abnormal 
valve states, i.e., “V-1 sticks at the close position” and “V-1 sticks at the open position”, are represented 
respectively with 1V SC  and 1V SO . Notice that the component state of V-1 is trapped at 1V SC  in the 
former scenario and state 1V SO  can be attached to the normal model in a similar fashion in the latter 
scenario. Notice also that, since the control actions 1openV  and 1closeV  cannot cause any state change in 
either case, they are treated as the state-maintaining events at 1V SC  and 1V SO . Finally, it should be noted 
that the same approach can be easily adopted to characterize the failures of V-2.  
Since additional failure states and events are introduced into the normal valve models, it becomes 
necessary to modify the directly affected component models in the third level. Specifically, the normal outlet 
pipeline models in Figure 7 and should be replaced respectively with the ones given in Figure 12. A similar 
model can also be built for P-2 with the same approach. In the component model of outlet pipeline (P-1), 
failure 1V SC  should cause the normal state 1p nf  to be trapped in a new abnormal state 1 _ 1p nf V SC and 
failure 1V SO  should change the component state from 1p f  to the new state 1 _ 1p f V SO . Notice that the 
failures of P-2 can be characterized with the same approach. By applying parallel composition with these two 
revised pipeline models, a complete representation of all possible process configurations can then be produced. 
As indicated previously in constructing the normal component model in Figure 8, some of the configurations 
(states) can be judiciously ignored for simplicity. The same approach can be taken in this case and the kept 
states are listed in Table 1. 
If an additional failure, i.e., the tank leakage, is to be considered in Example 1, then the automaton in 
Figure 9 should be modified with that given in Figure 13. The abnormal tank states, i.e., _LH leak  and 
_LL leak , represent “leakage occurs while level high” and “leakage occurs while level low” respectively. It 
should be noted that the event LHcon  is not allowed when tank leakage occurs. Notice also that the 
abnormal process configurations 04PC con  and 05PC con  may cause the normal tank state LH  to be 
trapped in the abnormal states _ 2LH V SO  and _ 1LH V SC  respectively. Similarly, the abnormal process 
configurations 03PC con  and 07PC con  may cause the normal tank state LL  to be trapped in the 
abnormal states _ 2LL V SC  and _ 1LL V SO  respectively. In addition, the abnormal process configuration 
04PC con  could also cause the abnormal tank state _LH leak  to be trapped in another abnormal 
state _ _ 2LH leak V SO  , while 01PC con , 03PC con , 06PC con  and 07PC con  could cause the 
abnormal tank state _LH leak  to be trapped in the abnormal states _ _LL leak N , _ _ 2LL leak V SC , 
_ _ 1LL leak V SC  and _ _ 1LL leak V SO  respectively. 
 
4.2 Step 2: Assembling System Model 
 
Although both normal behaviors and failure mechanisms can be incorporated in a component model, 
there is still a need to impose additional constraints in the controller model to limit the scope of 
event-sequence evolution. These modifications are introduced mainly for the purpose of avoiding state 
explosion and also producing a succinct diagnoser. Specifically, it is assumed in this study that:  
(1) All state-maintaining events of the components in levels 2 - 4 (i.e., actuators, process configuration and 
unit operations) should occur before the sensor state reaches the resulting activation condition in SFC.  
(2) The failure event of any component in levels 2 - 5 (i.e., actuators, process configuration, unit operations 
and sensors) can only occur just before the controller triggers a subsequent actuator event. Furthermore, 
the aforementioned failure and actuator events are mutually exclusive. 
These constraints can be incorporated into the controller model with additional self-looping transitions 
according to the following rules:  
 
7 
respectively. In addition, 1Tr  - 5Tr  are finite failed traces ending at terminal states 1 - 5  respectively, 
while 6Tr  is a cyclic normal trace which is denoted by the symbol *. As mentioned previously, each 
abnormal trace should be viewed as the event sequence occurred in a possible fault propagation scenario. To 
facilitate precise description of the diagnoser, all failure events on a particular trace is collectively referred to 
as the fault origin of the corresponding scenario in this paper.  
A fault propagation scenario is considered to be detectable if the corresponding observable event 
sequence is not the same as that on the normal trace. However, since the same observable sequence may result 
from several different candidate root causes, the fault origin of a detectable scenario can be considered to be 
diagnosable if and only if the corresponding observable trace is unique. Furthermore, notice that a fault origin 
may consist of more than one failure. A failure event in a detectable scenario can thus be regarded as 
confirmable if its presence (or absence) can be unambiguously determined according to the observable trace. 
If a failure is confirmable in every trace of the diagnoser, then it can be considered to be diagnosable also. 
According to Cassandras and Lafortune (1999), the diagnoser of the fictitious system described in Figure 
16 can be built by lumping the unobservable events with the observable ones on the same trace and then 
merging the identical observable traces (see Figure 17). For instance, since events a , 1F  and 2F  are 
unobservable in trace 3Tr , they should be hidden to form an observable trace in the diagnoser. In addition, 
since the terminal states 3  - 5  in Figure 16 are propagated along the same observable trace 3oTr , they 
should all be merged into one. The failure events in each fault propagation scenario are specified in the 
terminal node, while the normal trace is marked with the label N . The node numbers in the original 
automaton are given in the parentheses in the corresponding initial and terminal nodes of diagnoser.  
On the basis of the diagnoser presented in Figure 16, the diagnostic performance of the given system can 
be evaluated qualitatively first. In particular, on-line observation of 3oTr  indicates that (1) there are three 
possible scenarios (or fault origins), (2) the presence of failure 1F  and the absence of failure 3F  are both 
certain, and (3) at least one of the remaining two possible failures 2F  and 4F  can be confirmed. Similarly, 
1oTr  confirms the occurrence of failure 3F  and the absence of all other failures, while 2oTr  confirms the 
occurrence of both 1F  and 2F  and the absence of 3F  and 4F . It can therefore be concluded that (1) the 
fault origins of 1oTr  and 2oTr  are diagnosable, and (2) the failures 1F  and 3F  are diagnosable. 
 
5.2 Quantitative Measures 
 
The diagnostic performance of a batch monitoring system can also be characterized quantitatively in 
terms of Shannon entropy (1948). In particular, the degree of diagnostic uncertainty associated with the i th 
observable trace in diagnoser can be written as 
, ,
1
log
FO
iN
i i j i j
j
H p p
=
= −∑                              (2) 
where, iH  is the uncertainty measure of observable trace oiTr ; ,i jp  is the conditional probability of 
candidate fault origin j  after observing trace oiTr ; 
FO
iN  is the number of candidate fault origins confirmed 
by oiTr .  
Notice that the aforementioned conditional probabilities cannot really be evaluated accurately since the 
failure-rate data are often unavailable or unreliable in practical applications. To properly assess the diagnostic 
performance, the upper and lower bounds of uncertainty index are estimated in this study. The upper 
uncertainty limit can be determined by assuming that, before observing trace i , the occurrence probabilities 
of all its fault origins are roughly the same. As a result, it can be deduced that their conditional probabilities 
are: 
,1 ,2
1
i i FO
i
p p
N
= = =                                (3) 
 
9 
6.2 Extra Operation Steps 
 
Another approach to improve diagnostic performance is to perform extra operation steps which are not 
included in the original SFC. As indicated earlier concerning the fictitious system in Figure 16, 4Tr  and 5Tr  
cannot be distinguished from one another by placing additional sensors. For illustration convenience, let us 
assume that these two traces could be extended to form traces 4 'Tr  and 5 'Tr  in Figure 18 respectively by 
executing additional operation steps. Since the additional event b  exists only in the latter trace, the 
corresponding fault origins become diagnosable if the sensor for detecting event b  can be made available. In 
this work, a systematic procedure has been developed to construct the extended diagnoser if these extra 
operation steps can be specifically assigned by the designer. The detailed implementation processes are 
reported in the following examples.  
 
7. Applications  
 
In order to demonstrate the effectiveness of the proposed approach to evaluate and improve the 
diagnostic performance of realistic fault monitoring systems, two additional case studies have been carried out 
in this work. The first application is concerned with a three-tank storage system, while the second a beer 
filtration plant. In these case studies, the software tools DESUMA and UMDES (Lafortune and Teneketzis, 
2000) were adopted to perform various standard automata-based operations, e.g., parallel composition, trace 
generation, liveliness assurance and diagnoser synthesis, etc. The application results are outlined below:  
 
7.1  Example 2 
 
Let us consider the three-tank storage system presented in Figure 19. This problem was also studied in 
Chen et al. (2010). Pipeline P-1 is the inlet pipeline of tank T-1 and its flow is controlled with valve V-1. The 
outlet pipeline of T-1 is P-2, which is connected to a 3-way valve V-2, and a pump is installed on P-2. When 
V-2 is at the position “+ ”, the fluid in P-2 will be transferred into pipeline P-3 and then tank T-2. If V-2 is at 
the position “−”, the fluid in P-2 will flow into pipeline P-4 and enter tank T-3. Valve V-3 is used to 
discharge the material in tank T-2, while V-4 is for T-3. Tank T-1 has a level sensor installed, and the sensor 
reports three conditions: (1) Level Low (LL); (2) Level Middle (LM); (3) Level High (LH). The level sensors 
on tanks T-2 and T-3 can be used to detect only two conditions, i.e., (1) Level Low (LL) and (2) Level High 
(LH). The operation steps and activation conditions of SFC are listed in Table 3 and Table 4 respectively. 
In this case, the height of liquid level in every tank is assumed to be observable.  
The possible failures considered here are: 
(1) Valves V-1 and V-3 may experience sticking failures; 
(2) Valve V-2 may be switched to a wrong position due to spurious controller signal(s); 
(3) Tanks T-2 may leak. 
For the sake of brevity, all component models in this example are presented in Supplementary Material – 
Part II. The system model and the corresponding diagnoser can be assembled on the basis of these component 
models. Notice that, since spurious controller signal(s) may be generated in implementing the normal 
operation step 2S  or 3S  (see Table 3), the extra step selected here for enhancing diagnostic performance is 
to execute step 2S  again when controller stops at 2S . The component models for this diagnostic control plan 
can also be found Part II of the Supplementary Material. 
The effects of implementing various combinations of the proposed performance enhancement measures 
are summarized in Table 5 and Table 6. Notice that failures 1F  - 7F  represent 1V SC , 1V SO , 2V M − , 
2V M + , 3V SC , 3V SO , and 2T leak  respectively. It can be observed from the first row in Table 5 that, if 
only the level sensors are installed in this system, there should be 11 different observable traces and the lowest 
upper and lower limits of uncertainty index can be determined to be 0.3001 and 0.0376 respectively. Notice 
that the diagnostic performance cannot be improved further by installing additional flow sensors except on 
pipeline P-5. If an additional sensor is installed on pipeline P-5, these limits can be lowered to 0.1338 and 0 
 
11 
References 
 
Caccavale, F., Pierri, F., Iamarino, M., Tufano, V., 2009. An integrated approach to fault diagnosis for a class 
of chemical batch processes. Journal of Process Control, 19(5), 827-841. 
Cassandras, C.G., Lafortune, S., 1999. Introduction to Discrete Event Systems, Boston: Kluwer Academic 
Publisher. 
Cerutti, S., Lamperti, G., Scaroni, M., Zanella, M., Zanni, D., 2007. A diagnostic environment for automaton 
networks. Software: Practice and Experience, 37(4), 365-415. 
Chang, C.T., Chen, J.Y., 2007. Systematic enumeration of fuzzy diagnosis rules for identifying multiple faults 
in chemical processes. Industrial & Engineering Chemistry Research, 46(11), 3635-3655.  
Chang, C.T., Chen, J.Y., 2011. Fault diagnosis with automata generated languages. Computers and Chemical 
Engineering, 35(2), 329-341. 
Chen, J., Jiang, Y.C., 2011. Development of hidden semi-Markov models for diagnosis of multiphase batch 
operation. Chemical Engineering Science, 66(15), 1087-1099. 
Chen, J.Y., Chang, C.T., 2009. Development of fault diagnosis strategies based on qualitative predictions of 
symptom evolution behaviors. Journal of Process Control, 19(5), 842-858. 
Chen, Y.C., Yeh, M.L., Hong, C.L., Chang, C.T., 2010. Petri-net based approach to configure online fault 
diagnosis systems for batch processes. Industrial & Engineering Chemistry Research, 49(9), 4249-4268. 
Chung, S.L., Lai, Y.H., 2008. Process control of brewery plants. Journal of the Chinese Institute of Engineers, 
31(1), 127-140.  
Fleming, D.W., Pillai, V.A., Pillai, J.A.,1998. S88 implementation guide, McGraw-Hill Inc: New York. 
Hashizume, S., Yajima, T., Kuwashita, Y., Onogi, K., 2008. Integration of fault analysis and interlock 
controller synthesis for batch processes. Chinese Journal of Chemical Engineering, 16(1), 57-61. 
Kourti, T., Macgregor, J.F., 1995. Process analysis, monitoring and diagnosis, using multivariate projection 
methods. Chemometrics and Intelligent Laboratory Systems, 28(1), 3-21.   
Kourti, T., Nomikos, P., Macgregor, J.F., 1995. Analysis monitoring and fault-diagnosis of batch processes 
using multiblock and multiway PLS. Journal of Process Control, 5(4), 277-284.    
Lafortune, S., Teneketzis, D., 2000. UMDES-LIB, Library of commands for discrete event systems modeled 
by finite state machines. 
Lai, J.W., Chang, C.T., Hwang, S.H., 2007. Petri-net based binary integer programs for automatic synthesis of 
batch operating procedures. Industrial & Engineering Chemistry Research, 46(9), 2797-2813. 
Lee, J.M., Yoo, C.K., Lee, I.B., 2004. Fault detection of batch processes using multiway kernel principal 
component analysis. Computers & Chemical Engineering, 28(9), 1837-1847.   
Liang, K.H., Chang, C.T., 2008. A simultaneous optimization approach to generate design specifications and 
maintenance policies for the multi-layer protective systems in chemical processes. Industrial & Engineering 
Chemistry Research, 47(15), 5543-5555. 
Liu, F., Qiu, D., Xing, H., Fan, Z., 2008. Decentralized diagnosis of stochastic discrete event systems. IEEE 
Transactions on Automatic Control, 53(2), 535-546.   
Maurya, M., Rengaswamy, R., Venkatasubramanian, V., 2004. Application of signed digraph-based analysis 
for fault diagnosis chemical process flowsheets. Engineering Applications of Artificial Intelligence, 17(5), 
501-518. 
Nomikos, P., MacGregor, J.F. 1994. Monitoring batch processes using multiway principal component analysis. 
AIChE Journal, 40(8), 1361-1375.  
Nomikos, P., MacGregor, J.F., 1995. Multivariate SPC charts for monitoring batch processes. Technometrics, 
37(1), 41-59. 
Pierri, F., Paviglianiti, G., Caccavale, F., Mattei, M., 2008. Observer-based sensor fault detection and isolation 
for chemical batch reactors. Engineering Applications of Artificial Intelligence, 21(8), 1204-1206.      
Qiu, W.B., Kumar, R., 2006. Decentralized failure diagnosis of discrete event systems. IEEE Transactions on 
Systems Man and Cybernetics Part A-Systems and Humans, 36(2), 384-395.   
Qiu, W.B., Kumar, R., 2008. Distributed diagnosis under bounded-delay communication of immediately 
forwarded local observations, IEEE Transactions on Systems, Man and Cybernetics – Part A: Systems and 
Humans, 38 (3) 628-643. 
 
13 
LEGENDS OF TABLES 
Table 1 Process configurations in Example 1. 
Table 2 Diagnostic performance measures of the liquid storage system in Example 1. 
Table 3 Operation steps in SFC for three-tank storage system (Example 2) (Chen et al., 2010). 
Table 4 Activation conditions in SFC for three-tank storage system (Example 2) (Chen et al., 2010). 
Table 5 Diagnostic performance measures of the three-tank storage system in Example 2  
–  Results obtained without extra operation steps.  
Table 6 Diagnostic performance measures of the three-tank storage system in Example 2  
–  Results obtained with extra operation steps.  
Table 7 Operation steps in SFC for the beer filtration plant (Example 3). 
Table 8 Activation conditions in SFC for beer filtration plant (Example 3). 
Table 9 Diagnostic performance measures of the beer filtration plant in Example 3.  
 
15 
Table 1  Process configurations in Example 1. 
 
Valve States Process Configuration Symbol 
V1C, V2O p1nf, p2f PC01 
V1O, V2C p1f, p2nf PC02 
V1C, V2SC p1nf, p2nf PC03 
V1O, V2SO p1f, p2f PC04 
V1SC, V2C p1nf, p2nf PC05 
V1SC, V2O p1nf, p2f PC06 
V1SO, V2O p1f, p2f PC07 
 
 
 
 
 
 17 
Table 3  Operation steps in SFC for three-tank storage system in Example 2 (Chen et 
al., 2010). 
 
Operation Step Control Actions 
S0 Initialization 
S1 
(1) Close V-3 
(2) Close V-4 
(3) Open V-1 
S2 
(1) Close V-1 
(2) Switch V-2 to + 
(3) Switch on Pump 
S3 
(1) Switch off Pump 
(2) Switch V-2 to – 
(3) Switch on Pump 
S4 
(1) Switch off Pump 
(2) Open V-3 
(3) Open V-4 
 
 
 
 
 
Table 4  Activation conditions in SFC for three-tank storage system in Example 2 
(Chen et al., 2010). 
 
Symbol Conditions 
T1 Start 
T2 T1H 
T3 T1M & T2H 
T4 T1L & T3H 
T5 T2L & T3L 
 
 
 
 
 19 
 
Table 6  Diagnostic performance measures of the three-tank storage system in Example 2 – Results obtained with extra operation steps.  
Sensors 
Range of Uncertainty Index Observable 
Traces 
Confirmable Failures 
(An underline denotes absence, otherwise the failure is present.) Candidate Fault Origins minH  maxH  
L 0.0430 0.2825 
1 F1, F2, F3, F4, F5, F6, F7 F1 
2 F1, F2, F3, F4, F5, F6, F7 F2 
3 F1, F2, F3, F4, F5, F6, F7 F2F3 
4 F1, F2, F3, F4, F5, F6, F7 F3 
5 F1, F2, F3, F4, F5, F6, F7 F4 
6 F1, F2, F3, F4, F5, F6, F7 F5 
7 F1, F2, F3, F4 F1F6F7, F1, F1F7, F1F5F7, F1F6 
8 F1, F2, F3, F4 F2F6F7, F2F7, F2F5F7, F2F6 
9 F1, F2, F3, F4 F6, F7, F6F7, F5F7 
10 F1, F2, F3, F4 F2F3F6F7, F2F3F6, F2F3F7, F2F3F5F7 
11 F1, F2, F3, F4, F7 F3F6F7, F3F6, F3F7, F3F5F7 
L, P-5 0 0.0903 
1 F1, F2, F3, F4, F5, F6, F7 F1 
2 F1, F2, F3, F4, F5, F6, F7 F2 
3 F1, F2, F3, F4, F5, F6, F7 F2F3 
4 F1, F2, F3, F4, F5, F6, F7 F3 
5 F1, F2, F3, F4, F5, F6, F7 F4 
6 F1, F2, F3, F4, F5, F6, F7 F5 
7 F1, F2, F3, F4, F5, F6, F7 F1F5F7 
8 F1, F2, F3, F4, F5 F1F6F7, F1, F1F7, F1F6 
9 F1, F2, F3, F4, F5, F6, F7 F2F5F7 
10 F1, F2, F3, F4, F5, F6, F7 F5F7 
11 F1, F2, F3, F4, F5, F6, F7 F2F7 
12 F1, F2, F3, F4, F5, F6, F7 F2F3F5F7 
13 F1, F2, F3, F4, F5, F6 F2F6F7, F2F6 
14 F1, F2, F3, F4, F5, F6 F6, F6F7 
15 F1, F2, F3, F4, F5, F6, F7 F7 
16 F1, F2, F3, F4, F5, F6, F7 F3F5F7 
17 F1, F2, F3, F4, F5, F6, F7 F2F3F7 
18 F1, F2, F3, F4, F5, F6 F2F3F6F7, F2F3F6 
19 F1, F2, F3, F4, F5, F6 F3F6F7, F3F6 
20 F1, F2, F3, F4, F5, F6, F7 F3F7 
 
 21 
Table 9  Diagnostic performance measures of the beer filtration plant in Example 3.  
 
Sensors 
Range of Uncertainty Index Observable 
Traces 
Confirmable Failures 
(An underline denotes absence, 
otherwise the failure is present.) 
Candidate Fault Origins 
minH  maxH  
L 0.1505 0.7341 
1 F2, F3, F4 F1F5, F1, F5 
2 F1, F4, F5 F2F3F5, F5, F3F5, F2F5 
3 none 
F4F5, F2F4F5, F2F5, F1F4F5, F3F5, F2F3F5, 
F1F4, F1F3F5, F1F3, F1F5, F1, F5 
4 F1, F5 F2F3F5, F5, F3F5, F2F5, F4F5, F2F4F5 
L, P-6C 0.2007 0.2306 
1 F2, F3, F4 F1F5, F1, F5 
2 F1, F2, F3, F4, F5 F2F3F5 
3 F1, F4, F5 F2F3F5, F3F5, F2F5 
4 F1, F2, F3, F4, F5 F5 
5 F3, F4 F3F5, F2F3F5, F1F3F5, F1F3 
6 F1, F2, F3, F4, F5 F2F4F5 
7 F2, F3 F1F4F5, F1F4, F1F5, F1, F5 
8 F1, F2, F3, F4, F5 F2F5 
9 F1, F2, F3, F4, F5 F4F5 
10 F1, F3, F4, F5 F2F3F5, F3F5 
11 F1, F2, F3, F4, F5 F2F4F5 
12 F1, F2, F4, F5 F2F3F5, F2F5 
13 F1, F3, F4, F5 F4F5, F2F4F5 
14 F1, F2, F3, F4, F5 F2F3F5 
15 F1, F2, F3, F4 F1F4F5, F1F4 
 
 
 23 
(cont.) 
 
Sensors 
Range of Uncertainty Index Observable 
Traces 
Confirmable Failures 
(An underline denotes absence, 
otherwise the failure is present.) 
Candidate Fault Origins 
minH  maxH  
L, P-23, P-6C 0 0.0602 
1 F1, F2, F3, F4 F1F5, F1 
2 F1, F2, F3, F4, F5 F5 
3 F1, F2, F3, F4, F5 F2F5 
4 F1, F2, F3, F4, F5 F2F3F5 
5 F1, F2, F3, F4, F5 F3F5 
6 F1, F2, F3, F4, F5 F5 
7 F1, F2, F3, F4 F1F3F5, F1F3 
8 F1, F2, F3, F4, F5 F2F4F5 
9 F1, F2, F3, F4, F5 F3F5 
10 F1, F2, F3, F4, F5 F2F3F5 
11 F1, F2, F3 F1F4F5, F1F4, F1F5, F1 
12 F1, F2, F3, F4, F5 F2F5 
13 F1, F2, F3, F4, F5 F4F5 
14 F1, F2, F3, F4, F5 F2F4F5 
15 F1, F2, F3, F4, F5 F4F5 
16 F1, F2, F3, F4 F1F4F5, F1F4 
 
 25 
 
Figure 4 Common features of normal component models. 
 
 
Figure 5 The controller model (Example 1). 
 
 
Figure 6 The discharge valve model (V-1) (Example 1). 
 
 
Figure 7 The outlet pipeline model (P-1) (Example 1). 
 27 
 
Figure 11 The outlet valve model that contains additional failure modules (Example 1). 
 
 
Figure 12 The simplified outlet pipeline model (P-1) that contains additional failure 
modules (Example 1). 
LLLH
PC01con
PC02con
LHcon LLcon
LLcon
leakleak
LH_leak LL_leak
LH_V2SO,
LH_V1SC
LL_V2SC, 
LL_V1SO
PC04con, 
PC05con
PC03con, 
PC07con
PC01con, PC03con, 
PC06con, PC07con
PC02con, PC05con
LH_leak_
V2SO
PC04con
LL_leak_N, 
LL_leak_V2SC, 
LL_leak_V1SC, 
LL_leak_V1SO  
Figure 13 The tank model that contains additional failure modules (Example 1). 
 29 
 
Figure 16 All possible traces in a fictitious system. 
 
Figure 17 The diagnoser built from Figure 16. 
 
 
Figure 18 Traces extended from those in Figure 16 after executing extra operation steps. 
 31 
國科會補助專題研究計畫成果報告自評表 
請就研究內容與原計畫相符程度、達成預期目標情況、研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）、是否適
合在學術期刊發表或申請專利、主要發現或其他有關價值等，作一綜合評估。 
1. 請就研究內容與原計畫相符程度、達成預期目標情況作一綜合評估 
▓ 達成目標 
□ 未達成目標（請說明，以 100字為限） 
□ 實驗失敗 
□ 因故實驗中斷 
□ 其他原因 
說明： 
2. 研究成果在學術期刊發表或申請專利等情形： 
論文：▓已發表 □未發表之文稿 □撰寫中 □無 
專利：□已獲得 □申請中 ▓無 
技轉：□已技轉 □洽談中 ▓無 
其他：（以 100字為限） 
3. 請依學術成就、技術創新、社會影響等方面，評估研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）（以
500字為限） 
Online diagnosis has been considered as an important measure for improving operational 
safety in many batch chemical plants. Specifically, the state transition behaviors of all hardware 
items (components) in the given batch process and their failure mechanisms are modeled 
systematically with automata. The system model is then assembled by connecting the 
component models on the basis of a generic hierarchical structure. A "diagnoser" can be 
constructed accordingly for the purpose of determining various qualitative and quantitative 
performance indices. Guided by these indices, two performance enhancement approaches can be 
effectively applied: (1) installing additional sensors which are not included in the piping and 
instrumentation diagram (P&ID) and (2) executing extra operation steps which are not specified 
in the sequential function chart (SFC). Three examples are presented in this paper to 
demonstrate the feasibility of the proposed approach. 
 33 
產業別 
The proposed automata based approach is applicable in batch chemical 
industries. 
技術/產品應用範圍 
 A systematic automata-based procedure is proposed to design the 
on-line fault diagnosis systems for batch chemical processes. 
 The state transition behaviors of all hardware items (components) 
in the given batch process and their failure mechanisms are 
modeled systematically with automata.  
 The system model is then assembled by connecting the 
component models on the basis of a generic hierarchical 
structure.  
 A "diagnoser" can be constructed accordingly for the purpose of 
determining various qualitative and quantitative performance 
indices. 
 For the purpose of improving diagnostic performance, two 
approaches can be effectively applied: (1) installing additional 
sensors which are not included in the piping and instrumentation 
diagram (P&ID) and (2) executing extra operation steps which 
are not specified in the sequential function chart (SFC). 
技術移轉可行性及預期
效益 
The proposed automata based approach is applicable in batch chemical 
industries. 
     註：本項研發成果若尚未申請專利，請勿揭露可申請專利之主要內容。 
 
 35 
技術/產品應用範圍 
 The Petri-net models are adopted in this work for describing the 
fault propagation behaviors in batch processes.  
 A systematic method has been developed to synthesize a timed 
Petri-net hierarchically structured according to any given piping 
and instrumentation diagram (P&ID) and its operating procedure.  
 On the basis of this model, a diagnoser can be constructed 
automatically with a computer program for online 
implementation.  
 Computer algorithms have also been devised to place additional 
sensors and/or synthesize extra operation steps for the purpose of 
improving diagnostic performance. 
技術移轉可行性及預期
效益 
The proposed Petri-Net based approach is applicable in batch chemical 
industries. 
     註：本項研發成果若尚未申請專利，請勿揭露可申請專利之主要內容。 
Please cite this article in press as: Yeh, M.-L., Chang, C.-T., An automaton-based approach to evaluate and improve online diagnosis schemes
for multi-failure scenarios in batch chemical processes. Chem Eng Res Des (2011), doi:10.1016/j.cherd.2011.05.007
ARTICLE IN PRESSCHERD-787; No. of Pages 15
chemical engineering research and design x x x ( 2 0 1 1 ) xxx–xxx
Contents lists available at ScienceDirect
Chemical  Engineering  Research  and  Design
j o ur nal homepage: www.elsev ier .com/ locate /cherd
An  automaton-based  approach  to evaluate  and  improve
online diagnosis  schemes  for multi-failure  scenarios  in
batch chemical  processes
Ming-Li Yeh, Chuei-Tin Chang ∗
Department of Chemical Engineering, National Cheng Kung University, Tainan 70101, Taiwan, ROC
a  b  s  t  r  a  c  t
Online diagnosis has been considered as an important measure for improving operational safety in many batch
chemical plants. Speciﬁcally, the state transition behaviors of all hardware items (components) in the given batch
process and their failure mechanisms are modeled systematically with automata. The system model is then assem-
bled  by connecting the component models on the basis of a generic hierarchical structure. A “diagnoser” can be
constructed accordingly for the purpose of determining various qualitative and quantitative performance indices.
Guided by these indices, two performance enhancement approaches can be effectively applied: (1) installing addi-
tional  sensors which are not included in the piping and instrumentation diagram (P&ID) and (2) executing extra
operation steps which are not speciﬁed in the sequential function chart (SFC). Three examples are presented in this
paper  to demonstrate the feasibility of the proposed approach.
©  2011 The Institution of Chemical Engineers. Published by Elsevier B.V. All rights reserved.
Keywords: Automata; Batch operation; Diagnosability; Fault diagnosis; Fault propagation trace; Shannon entropy
1.  Introduction
Hardware failures in chemical plants should be viewed
as unavoidable but random events. They can usually be
attributed to controller malfunctions, actuator failures (e.g.,
valve sticks, pump failures and compressor failures), con-
tainment failures (e.g., tank leakages), sensor failures, design
errors and operator mistakes, etc. Any combination of these
events may result in drastic decrease in productivity, sig-
niﬁcant deterioration in product quality and, in the worst
cases, catastrophic outcomes such as explosions, ﬁres, or
toxic releases. Since ofﬂine hazard assessment can reduce
the total expected loss of accidents only to a certain degree,
online fault diagnosis should be regarded as an alternative
means for improving the operational safety of chemical
processes.
According to Venkatasubramanian et al. (2003a,b,c), the
available fault diagnosis methods could be classiﬁed into three
general types: (1) quantitative model-based approaches; (2)
qualitative model-based approaches; (3) process history based
approaches. These methods were developed primarily for the
∗ Corresponding author. Tel.: +886 6 2757575x62663; fax: +886 6 2344496.
E-mail address: ctchang@mail.ncku.edu.tw (C.-T. Chang).
Received 8 February 2011; Received in revised form 24 April 2011; Accepted 3 May 2011
continuous chemical processes in the past, while signiﬁcantly
less effort has been devoted to the batch operations. Notice
that online failure identiﬁcation in the latter case is a much
more  difﬁcult task. This is mainly due to the fact that a con-
tinuous process is supposed to be maintained at steady state,
but the batch system state usually changes with time. Vari-
ous different diagnostic strategies have already been adopted
to cope with this time-variant nature and several of them are
brieﬂy reviewed in the sequel. Nomikos and MacGregor (1994,
1995) developed a multi-way principal component analysis
method for batch process monitoring, which has later been
extended for diagnosis applications (Kourti and Macgregor,
1995; Kourti et al., 1995; Lee et al., 2004; Undey et al., 2003; Chen
and Jiang, 2011). In addition, fault identiﬁcation techniques
based on artiﬁcial neural networks, knowledge-based expert
systems, observers and Petri nets have also been proposed for
the batch operations (Ruiz et al., 2001a,b; Pierri et al., 2008;
Hashizume et al., 2008; Caccavale et al., 2009). Although sat-
isfactory results were reported in these studies, none of them
addressed the important issue of performance assessment for
the overall diagnostic system.
0263-8762/$ – see front matter © 2011 The Institution of Chemical Engineers. Published by Elsevier B.V. All rights reserved.
doi:10.1016/j.cherd.2011.05.007
Please cite this article in press as: Yeh, M.-L., Chang, C.-T., An automaton-based approach to evaluate and improve online diagnosis schemes
for multi-failure scenarios in batch chemical processes. Chem Eng Res Des (2011), doi:10.1016/j.cherd.2011.05.007
ARTICLE IN PRESSCHERD-787; No. of Pages 15
chemical engineering research and design x x x ( 2 0 1 1 ) xxx–xxx 3
Fig. 1 – Hierarchical structure of a batch process.
level hierarchy according to Fig. 1. The top-level component,
supervisor, is usually a programmable logic controller (PLC)
used for executing the given SFC so as to alter the actuator
states. More  than one 2nd-level actuator may be present in
the batch process, e.g., hand valves, control valves, switches,
pump, and compressor, etc. These actuators are installed for
the purposes of adjusting the process conﬁguration, i.e., the
material and/or energy ﬂow patterns in the given system,
which is viewed as the 3rd-level component in the hierarchy.
Every major unit operation in P&ID, such as reaction, sepa-
ration, heat exchange and storage, is considered as a level-4
component, while every on-line sensor is treated as a compo-
nent in level 5.
To further illustrate this hierarchical structure, let us con-
sider the liquid-storage system presented in Fig. 2. This
problem was studied in Chen et al. (2010) and will later be
referred to as Example 1 in this paper. The height of liquid level
in this tank is monitored on-line. Two distinct sensor signals,
i.e. (1) LH (level high) and (2) LL (level low), are sent to a PLC to
actuate the control valves (V-1 and V-2) on the outlet and inlet
pipelines (P-1 and P-2) respectively. Under the assumptions
that the initial liquid level in tank is low and both valves are at
the close positions initially, a sequential function chart can be
produced to represent the needed cyclic operating procedure
Fig. 2 – A simple liquid storage system (Example 1) (Chen
et al., 2010).
Fig. 3 – Sequential function chart of the operating
procedure in Example 1.
Fig. 4 – Common features of normal component models.
(see Fig. 3). Notice that Si (i = 0, 1, 2) and Tj (j = 1, 2, 3) denote the
operation steps and the activation conditions of these steps
respectively. Notice also that the control actions taken in each
step and the sensor signals used in each condition are also
speciﬁed in this chart. It is clear that the components in this
system can be classiﬁed into ﬁve hierarchical levels, i.e., the
programmable logic controller (PLC), the solenoid valves (V-1
and V-2), the pipelines (P-1 and P-2), the storage tank (T-1), and
the level sensor (S-1).
4.  Systematic  model-building  procedure
The model-building procedure consists of three general steps:
(1) dividing the batch system into distinct components
and then building the corresponding automata according
to aforementioned hierarchical structure, (2) combining all
components to create a system model by applying the stan-
dard parallel composition operation (Cassandras and Lafortune,
1999), and (3) introducing the artiﬁcial self-looping events
“STOP” into the system model to ensure liveliness. These steps
are explained below in detail.
4.1.  Step  1:  developing  component  models
A component model is used to characterize a ﬁnite set of iden-
tiﬁable states of the hardware item under consideration and
all possible state transition processes. The transition from one
state (say s1) to another (say s2) may be realized by one or
more event and the common features of a normal transition
process can be represented with the state transition diagram
presented in Fig. 4. In this model, the S1-to-S2 transition pro-
cess is triggered by a collection of events (i.e., e′1, e
′
2, · · ·,  e′n),
Please cite this article in press as: Yeh, M.-L., Chang, C.-T., An automaton-based approach to evaluate and improve online diagnosis schemes
for multi-failure scenarios in batch chemical processes. Chem Eng Res Des (2011), doi:10.1016/j.cherd.2011.05.007
ARTICLE IN PRESSCHERD-787; No. of Pages 15
chemical engineering research and design x x x ( 2 0 1 1 ) xxx–xxx 5
Fig. 10 – The general failure model.
LL-to-LH process should be realized. By the same token, the
events PC02con should cause state transition in the opposite
direction. Finally, the level-4 events LHcon and LLcon repre-
sent the liquid level continues at high and low positions
respectively.
• Level 5: For the sake of brevity, it is assumed in the present
example that only the liquid level is monitored online
and the chance of sensor malfunctions is negligibly low.
Consequently, the sensor model is omitted here and the
measurement readings are considered to be identical to the
tank states. Notice that the desired level of sensing-system
reliability can almost always be achieved by introducing
hardware redundancy in design and also by adopting a
proper maintenance policy (Liang and Chang, 2008).
After building the automata to represent normal behav-
iors of all components, additional mechanisms should then
be incorporated to describe failures. The general model struc-
ture used to represent possible failures is shown in Fig. 10.  The
top-layer states in this ﬁgure represent normal states, i.e., NS i
(i = 1, 2, . . .,  n), and the boxed automaton represents the nor-
mal  operation cycle in which only routine events are allowed.
Any failure event (i.e., FE i and i = 1, 2, . . .,  N) could result in a
change from a normal state within the box to a failure state
outside, i.e., FS i and i = 1, 2, . . .,  N.
Let us ﬁrst consider the automaton given in Fig. 6, i.e., the
normal model of outlet valve, as an example to illustrate the
proposed modeling practice (see Fig. 11).  In this modiﬁed ver-
sion, the abnormal valve states, i.e., “V-1 sticks at the close
Fig. 11 – The outlet valve model that contains additional
failure modules (Example 1).
Fig. 12 – The simpliﬁed outlet pipeline model (P-1) that
contains additional failure modules (Example 1).
Table 1 – Process conﬁgurations in Example 1.
Valve states Process conﬁguration Symbol
V1C, V2O p1nf, p2f PC01
V1O, V2C p1f, p2nf PC02
V1C, V2SC p1nf, p2nf PC03
V1O, V2SO p1f, p2f PC04
V1SC, V2C p1nf, p2nf PC05
V1SC, V2O p1nf, p2f PC06
V1SO, V2O p1f, p2f PC07
position” and “V-1 sticks at the open position”, are represented
respectively with V1SC and V1SO. Notice that the component
state of V-1 is trapped at V1SC in the former scenario and state
V1SO can be attached to the normal model in a similar fash-
ion in the latter scenario. Notice also that, since the control
actions openV1  and closeV1  cannot cause any state change in
either case, they are treated as the state-maintaining events
at V1SC and V1SO. Finally, it should be noted that the same
approach can be easily adopted to characterize the failures of
V-2.
Since additional failure states and events are introduced
into the normal valve models, it becomes necessary to mod-
ify the directly affected component models in the third level.
Speciﬁcally, the normal outlet pipeline models in Fig. 7 and
should be replaced respectively with the ones given in Fig. 12.
A similar model can also be built for P-2 with the same
approach. In the component model of outlet pipeline (P-
1), failure V1SC should cause the normal state p1nf to be
trapped in a new abnormal state p1nf V1SC and failure V1SO
should change the component state from p1f to the new state
p1f V1SO. Notice that the failures of P-2 can be characterized
with the same approach. By applying parallel composition
with these two revised pipeline models, a complete repre-
sentation of all possible process conﬁgurations can then be
produced. As indicated previously in constructing the normal
component model in Fig. 8, some of the conﬁgurations (states)
can be judiciously ignored for simplicity. The same approach
can be taken in this case and the kept states are listed in
Table 1.
If an additional failure, i.e., the tank leakage, is to be con-
sidered in Example 1, then the automaton in Fig. 9 should
be modiﬁed with that given in Fig. 13.  The abnormal tank
states, i.e., LH leak and LL leak, represent “leakage occurs
while level high” and “leakage occurs while level low”  respec-
tively. It should be noted that the event LHcon is not allowed
when tank leakage occurs. Notice also that the abnormal
process conﬁgurations PC04con and PC05con may cause the
Please cite this article in press as: Yeh, M.-L., Chang, C.-T., An automaton-based approach to evaluate and improve online diagnosis schemes
for multi-failure scenarios in batch chemical processes. Chem Eng Res Des (2011), doi:10.1016/j.cherd.2011.05.007
ARTICLE IN PRESSCHERD-787; No. of Pages 15
chemical engineering research and design x x x ( 2 0 1 1 ) xxx–xxx 7
Fig. 15 – Partial automaton in Example 1.
Fig. 15).  Note that the self-loop event STOP has been added at
the end state 53 of the failed trace to ensure liveliness.
5.  Assessment  of  diagnostic  performance
On the basis of the live system model, a diagnoser can be con-
structed (Sampath et al., 1995, 1996) and the corresponding
diagnostic performance can then be assessed properly. Fol-
lowing is a detailed description of the implementation method
adopted in this work.
5.1.  Qualitative  measures
The automaton model can be used to generate all possible
event sequences, i.e., traces, in the given system according to
well-established algorithms (Lafortune and Teneketzis, 2000).
For illustration convenience, let us consider a ﬁctitious sys-
tem in which the traces given in Fig. 16 can be identiﬁed. Let
Fig. 16 – All possible traces in a ﬁctitious system.
Fig. 17 – The diagnoser built from Fig. 16.
Euo =
{
a, b, F1, F2, F3, F4
}
and Ef = {F1, F2, F3, F4}. Thus, Trj (j = 1,
2, ..., 6) denotes a trace which consists of both observable and
unobservable events, and the corresponding observable trace
Troi (i = 1, 2, 3, 4) is speciﬁed in the adjacent parenthesis. Notice
that Tr3, Tr4 and Tr5 all result in the same observable trace,
i.e., Tro3, while Tr1 and Tr2 can be identiﬁed from two distinct
observable traces Tro1 and Tro2 respectively. In addition, Tr1–Tr5
are ﬁnite failed traces ending at terminal states 1–5 respec-
tively, while Tr6 is a cyclic normal trace which is denoted by
the symbol *. As mentioned previously, each abnormal trace
should be viewed as the event sequence occurred in a possible
fault propagation scenario. To facilitate precise description of
the diagnoser, all failure events on a particular trace is col-
lectively referred to as the fault origin of the corresponding
scenario in this paper.
A fault propagation scenario is considered to be detectable if
the corresponding observable event sequence is not the same
as that on the normal trace. However, since the same observ-
able sequence may result from several different candidate
root causes, the fault origin of a detectable scenario can be
considered to be diagnosable if and only if the corresponding
observable trace is unique. Furthermore, notice that a fault
origin may consist of more  than one failure. A failure event
in a detectable scenario can thus be regarded as conﬁrmable if
its presence (or absence) can be unambiguously determined
according to the observable trace. If a failure is conﬁrmable in
every trace of the diagnoser, then it can be considered to be
diagnosable also.
According to Cassandras and Lafortune (1999),  the diag-
noser of the ﬁctitious system described in Fig. 16 can be built
by lumping the unobservable events with the observable ones
on the same trace and then merging the identical observable
traces (see Fig. 17). For instance, since events a, F1 and F2 are
unobservable in trace Tr3, they should be hidden to form an
observable trace in the diagnoser. In addition, since the ter-
minal states 3–5 in Fig. 16 are propagated along the same
observable trace Tro3, they should all be merged into one. The
failure events in each fault propagation scenario are speci-
ﬁed in the terminal node, while the normal trace is marked
with the label N. The node numbers in the original automaton
are given in the parentheses in the corresponding initial and
terminal nodes of diagnoser.
On the basis of the diagnoser presented in Fig. 16,  the
diagnostic performance of the given system can be evalu-
ated qualitatively ﬁrst. In particular, on-line observation of
Tro3 indicates that (1) there are three possible scenarios (or
fault origins), (2) the presence of failure F1 and the absence
of failure F3 are both certain, and (3) at least one of the
Please cite this article in press as: Yeh, M.-L., Chang, C.-T., An automaton-based approach to evaluate and improve online diagnosis schemes
for multi-failure scenarios in batch chemical processes. Chem Eng Res Des (2011), doi:10.1016/j.cherd.2011.05.007
ARTICLE IN PRESSCHERD-787; No. of Pages 15
chemical engineering research and design x x x ( 2 0 1 1 ) xxx–xxx 9
Fig. 18 – Traces extended from those in Fig. 16 after executing extra operation steps.
5.2.1.  Performance  measures  of  a  simple  batch  system
The diagnoser for the liquid storage system in Figs. 2 and 3
can be characterized with the performance measures listed in
Table 2. Notice that the failures F1–F5 represent V1SO, V1SC,
V2SO, V2SC and leak respectively. If only the level sensor is
installed in this system, it can be observed from the ﬁrst row
in the table that (1) there are three different observable traces,
(2) the fault origin of the ﬁrst trace is diagnosable, and (3)
none of the failures are diagnosable. Notice also that the upper
and lower bounds of average uncertainty index are both quite
large. Thus, it would be desirable to improve the diagnostic
performance by incorporating the design options described in
the following section. Notice that a wide spectrum of failure
mechanisms has been analyzed and a comprehensive evalu-
ation of the overall diagnostic resolution has been carried out
in this work, whereas the assessment in Chen et al. (2010) was
limited to the single-failure scenarios only.
6.  Performance  enhancement  options
Two performance enhancement options are considered in
this work, i.e. (1) installing additional sensors which are not
included in the P&ID and (2) executing extra operation steps
which are not speciﬁed in the SFC. The effectiveness of these
options can be evaluated on the basis of the proposed perfor-
mance measures.
6.1.  Additional  sensors
The simplest way to enhance diagnostic resolution is to use
more  sensors. The obvious selection strategy is to measure
hidden events in the diagnoser which can respond differently
to the fault origins. Let us use Fig. 18 again as an example to
illustrate this approach. Intuitively, trace Tr3 could be distin-
guished from traces Tr4 and Tr5 if the originally unobservable
event a or b is measured on-line. Notice that Tr4 and Tr5 are
inseparable since they form the same observable traces even
after measuring the hidden event b. Consequently, the failure
event F2 is always undiagnosable.
In Example 1, the upper and lower limits of average uncer-
tainty index can be determined to be 0.5511 and 0.2594
respectively if only the level sensor is available on-line. After
installing additional sensors on pipelines P-1 and P-2, these
limits can be lowered to 0.1505 and 0 respectively. All fail-
ures except F5 in this system become diagnosable, while the
fault origins of traces 1, 4, 5, 6 and 10 are also diagnosable (see
Table 2).
6.2. Extra  operation  steps
Another approach to improve diagnostic performance is to
perform extra operation steps which are not included in the
original SFC. As indicated earlier concerning the ﬁctitious sys-
tem in Fig. 16,  Tr4 and Tr5 cannot be distinguished from one
another by placing additional sensors. For illustration conve-
nience, let us assume that these two traces could be extended
to form traces Tr4 ’ and Tr5 ’ in Fig. 18 respectively by execut-
ing additional operation steps. Since the additional event b
exists only in the latter trace, the corresponding fault origins
become diagnosable if the sensor for detecting event b can be
made available. In this work, a systematic procedure has been
developed to construct the extended diagnoser if these extra
operation steps can be speciﬁcally assigned by the designer.
The detailed implementation processes are reported in the
following examples.
7.  Applications
In order to demonstrate the effectiveness of the proposed
approach to evaluate and improve the diagnostic performance
of realistic fault monitoring systems, two additional case stud-
ies have been carried out in this work. The ﬁrst application is
concerned with a three-tank storage system, while the sec-
ond a beer ﬁltration plant. In these case studies, the software
tools DESUMA and UMDES (Lafortune and Teneketzis, 2000)
were adopted to perform various standard automata-based
operations, e.g., parallel composition, trace generation, liveli-
ness assurance and diagnoser synthesis, etc. The application
results are outlined below.
7.1. Example  2
Let us consider the three-tank storage system presented in
Fig. 19.  This problem was also studied in Chen et al. (2010).
Pipeline P-1 is the inlet pipeline of tank T-1 and its ﬂow is con-
trolled with valve V-1. The outlet pipeline of T-1 is P-2, which
is connected to a 3-way valve V-2, and a pump is installed
on P-2. When V-2 is at the position “+”, the ﬂuid in P-2 will
Please cite this article in press as: Yeh, M.-L., Chang, C.-T., An automaton-based approach to evaluate and improve online diagnosis schemes
for multi-failure scenarios in batch chemical processes. Chem Eng Res Des (2011), doi:10.1016/j.cherd.2011.05.007
ARTICLE IN PRESSCHERD-787; No. of Pages 15
chemical engineering research and design x x x ( 2 0 1 1 ) xxx–xxx 11
Table 5 – Diagnostic performance measures of the three-tank storage system in Example 2—results obtained without
extra operation steps.
Sensors Range of
uncertainty index
Observable
traces
Conﬁrmable failures (an
underline denotes absence,
otherwise the failure is present)
Candidate fault origins
Hmin Hmax
L 0.0376 0.3001 1  F1, F2, F3, F4, F5, F6, F7 F1
2 F1, F2, F3, F4, F5, F6, F7 F3
3 F1, F2, F3, F4, F5, F6, F7 F2F3
4 F1, F2, F3, F4, F5, F6, F7 F2
5 F1, F2, F3, F4, F5, F6, F7 F4
6 F1, F2, F3, F4, F5, F6, F7 F5
7 F1, F2, F3, F4 F1F6F7, F1F7, F1F6, F1F5F7, F1
8 F1, F2, F3, F4 F3F6F7, F3F7, F3F6, F3F5F7, F3
9 F1, F2, F3, F4, F5 F2F3F7, F2F3F6, F2F3F5F7,
F2F3F6F7, F2F3
10 F1, F2, F3, F4 F2F7, F2F6, F2F5F7, F2F6F7
11 F1, F2, F3, F4 F6F7, F7, F6, F5F7
L, P-5 0  0.1338 1  F1, F2, F3, F4, F5, F6, F7 F1
2 F1, F2, F3, F4, F5, F6, F7 F3
3 F1, F2, F3, F4, F5, F6, F7 F2F3
4 F1, F2, F3, F4, F5, F6, F7 F2
5 F1, F2, F3, F4, F5, F6, F7 F4
6 F1, F2, F3, F4, F5, F6, F7 F5
7 F1, F2, F3, F4, F5, F6, F7 F1F5F7
8 F1, F2, F3, F4, F5 F1F6F7, F1F7, F1F6, F1
9 F1, F2, F3, F4, F5, F6, F7 F3F5F7
10 F1, F2, F3, F4, F5, F6, F7 F2F3F5F7
11 F1, F2, F3, F4, F5, F6, F7 F5F7
12 F1, F2, F3, F4, F5, F6, F7 F2F5F7
13 F1, F2, F3, F4, F5 F3F6F7, F3F7, F3F6, F3
14 F1, F2, F3, F4, F5 F2F3F7, F2F3F6, F2F3F6F7, F2F3
15 F1, F2, F3, F4, F5, F6, F7 F2F7
16 F1, F2, F3, F4, F5, F6, F7 F7
17 F1, F2, F3, F4, F5, F6 F6F7, F6
18 F1, F2, F3, F4, F5, F6 F2F6, F2F6F7
mance can be achieved by implementing the aforementioned
control plan with additional ﬂow sensor on P-5. In this case,
the range of uncertainty index can be improved to [0, 0.0903].
7.2.  Example  3
Let us next consider a more  realistic problem concerning the
beer ﬁltration plant presented in Fig. 20 (Lai et al., 2007; Chung
and Lai, 2008). This system consists of two Multi-Micro System
ﬁlters (MMS-1 and MMS-2), two buffer tanks (T-1 and T-2), a
supply and collection system for the cleanser in pipe (CIP).
Notice that the ﬁltration process is operated with 16 double-
disk piston valves (V-1 to V-16) and each valve can be switched
to two alternative positions, i.e. OFF and ON. When a valve is at
the OFF position, the ﬂuids in vertical and horizontal pipelines
ﬂow separately. On the other hand, if this valve is turned to the
Fig. 20 – A beer ﬁltration plant (Example 3) (Lai et al., 2007; Chung and Lai, 2008).
Please cite this article in press as: Yeh, M.-L., Chang, C.-T., An automaton-based approach to evaluate and improve online diagnosis schemes
for multi-failure scenarios in batch chemical processes. Chem Eng Res Des (2011), doi:10.1016/j.cherd.2011.05.007
ARTICLE IN PRESSCHERD-787; No. of Pages 15
chemical engineering research and design x x x ( 2 0 1 1 ) xxx–xxx 13
Table 9 – Diagnostic performance measures of the beer ﬁltration plant in Example 3.
Sensors Range of
uncertainty
index
Observable
traces
Conﬁrmable failures (an
underline denotes absence,
otherwise the failure is
present)
Candidate fault origins
Hmin Hmax
L 0.1505 0.7341 1  F2, F3, F4 F1F5, F1, F5
2 F1, F4, F5 F2F3F5, F5, F3F5, F2F5
3 None F4F5, F2F4F5, F2F5, F1F4F5, F3F5, F2F3F5,
F1F4, F1F3F5, F1F3, F1F5, F1, F5
4 F1, F5 F2F3F5, F5, F3F5, F2F5, F4F5, F2F4F5
L, P-6C 0.2007 0.2306 1  F2, F3, F4 F1F5, F1, F5
2 F1, F2, F3, F4, F5 F2F3F5
3 F1, F4, F5 F2F3F5, F3F5, F2F5
4 F1, F2, F3, F4, F5 F5
5 F3, F4 F3F5, F2F3F5, F1F3F5, F1F3
6 F1, F2, F3, F4, F5 F2F4F5
7 F2, F3 F1F4F5, F1F4, F1F5, F1, F5
8 F1, F2, F3, F4, F5 F2F5
9 F1, F2, F3, F4, F5 F4F5
10 F1, F3, F4, F5 F2F3F5, F3F5
11 F1, F2, F3, F4, F5 F2F4F5
12 F1, F2, F4, F5 F2F3F5, F2F5
13 F1, F3, F4, F5 F4F5, F2F4F5
14 F1, F2, F3, F4, F5 F2F3F5
15 F1, F2, F3, F4 F1F4F5, F1F4
L, P-23 0 0.1436 1  F1, F2, F3, F4 F1F5, F1
2 F1, F2, F3, F4, F5 F5
3 F1, F2, F4, F5 F2F3F5, F2F5
4 F1, F2, F3, F4, F5 F3F5
5 F1, F2, F3, F4, F5 F2F3F5
6 F1, F2, F3, F4, F5 F5
7 F1, F2, F3, F4, F5 F2F4F5
8 F1, F2, F3, F4 F1F3F5, F1F3
9 F1, F2, F3, F4, F5 F3F5
10 F1, F2, F3, F4, F5 F2F3F5
11 F1, F2, F3, F4, F5 F2F5
12 F1, F2, F3 F1F4F5, F1F4, F1F5, F1
13 F1, F2, F3, F5 F4F5, F5
14 F1, F2, F3, F4, F5 F2F4F5
15 F1, F2, F5 F2F3F5, F2F5, F2F4F5
16 F1, F2, F3, F4, F5 F4F5
17 F1, F2, F3, F4 F1F4F5, F1F4
18 F1, F2, F3, F4, F5 F4F5
L, P-23, P-6C 0 0.0602 1  F1, F2, F3, F4 F1F5, F1
2 F1, F2, F3, F4, F5 F5
3 F1, F2, F3, F4, F5 F2F5
4 F1, F2, F3, F4, F5 F2F3F5
5 F1, F2, F3, F4, F5 F3F5
6 F1, F2, F3, F4, F5 F5
7 F1, F2, F3, F4 F1F3F5, F1F3
8 F1, F2, F3, F4, F5 F2F4F5
9 F1, F2, F3, F4, F5 F3F5
10 F1, F2, F3, F4, F5 F2F3F5
11 F1, F2, F3 F1F4F5, F1F4, F1F5, F1
12 F1, F2, F3, F4, F5 F2F5
13 F1, F2, F3, F4, F5 F4F5
14 F1, F2, F3, F4, F5 F2F4F5
15 F1, F2, F3, F4, F5 F4F5
16 F1, F2, F3, F4 F1F4F5, F1F4
1. Valves V-2 and V-6 may experience sticking failures.
2. Tank T-1 may leak.
The component models used in this example can be found
in Supplementary Material (Part III).  The system model and the
corresponding diagnoser have been constructed according to
these models. The diagnostic performance measures of this
system are summarized in Table 9. Notice that failures F1–F5
represent V2SC, V2SO, V6SC, V6SO and T2leak respectively. If
only the level sensors are installed in this system, it can be
observed that there should be 4 different observable traces
and the minimum and maximum uncertainty indices Hmin
and Hmax in this situation should be 0.1505 and 0.7341 respec-
tively. After installing an additional ﬂow sensor on pipeline
Please cite this article in press as: Yeh, M.-L., Chang, C.-T., An automaton-based approach to evaluate and improve online diagnosis schemes
for multi-failure scenarios in batch chemical processes. Chem Eng Res Des (2011), doi:10.1016/j.cherd.2011.05.007
ARTICLE IN PRESSCHERD-787; No. of Pages 15
chemical engineering research and design x x x ( 2 0 1 1 ) xxx–xxx 15
Undey, C., Ertunc, S., Cinar, A., 2003. Online batch fed-batch
process performance monitoring, quality prediction, and
variable contribution analysis for diagnosis. Industrial &
Engineering Chemistry Research 42 (20), 4645–4658.
Venkatasubramanian, V., Rengaswamy, R., Yin, K., Kavuri, S.N.,
2003a. A review of process fault detection and diagnosis: Part
I. Quantitative model based methods. Computers & Chemical
Engineering 27 (3), 293–311.
Venkatasubramanian, V., Rengaswamy, R., Kavuri, S.N., 2003b. A
review of process fault detection and diagnosis: Part II.
Qualitative model and search strategies. Computers &
Chemical Engineering 27 (3), 313–326.
Venkatasubramanian, V., Rengaswamy, R., Kavuri, S.N., Yin, K.,
2003c. A review of process fault detection and diagnosis: Part
III. Process history based methods. Computers & Chemical
Engineering 27 (3), 327–346.
Viswanathan, S., Johnsson, C., Venkatasubramanian, V., A¨rzen,
K.E., 1998a. Automating operating procedure synthesis for
batch processes: Part I. Knowledge representation and
planning framework. Computers and Chemical Engineering
22 (11), 1673–1685.
Viswanathan, S., Johnsson, C., Venkatasubramanian, V., A¨rzen,
K.E., 1998b. Automating operating procedure synthesis for
batch processes: Part II. Implementation and application.
Computers & Chemical Engineering 22 (11), 1687–
1698.
Viswanathan, S., Shah, N., Venkatasubramanianian, V., 2002.
Hybrid framework for hazard identiﬁcation and assessment in
batch processes. AIChE Journal 48 (8), 1765–1774.
Wang,  W.,  Lafortune, S., Girard, A.R., Lin, F., 2010. Optimal sensor
activation for diagnosing discrete event systems. Automatica
46  (7), 1165–1175.
Zad, S.H., Kwong, R.H., Wonham, W.M., 2003. Fault diagnosis in
discrete-event systems: framework and model reduction. IEEE
Transactions on Automatic Control 48 (7),
1199–1204.
Zhang, Z., Wu, C., Zhang, B., Xia, Y., Li, A., 2005. Sdg multiple fault
diagnosis by real-time inverse inference. Reliability
Engineering and System Safety 87 (2), 173–189.
Zineb, S.A., Maria, D.M., Michal, K., 2010. Fault diagnosis for
discrete event systems: modelling and veriﬁcation. Reliability
Engineering and System Safety 95 (4), 369–378.
Petri-Net Based Approach To Configure Online Fault Diagnosis Systems for
Batch Processes
Yi-Chung Chen, Ming-Li Yeh, Chia-Lun Hong, and Chuei-Tin Chang*
Department of Chemical Engineering National Cheng Kung UniVersity Tainan, Taiwan 70101, Republic of China
Online fault diagnosis is a task of critical importance for maintaining a high level of operational safety in
many chemical plants. The Petri-net models are adopted in this work for describing the fault propagation
behaviors in batch processes. A systematic method has been developed to synthesize a timed Petri-net
hierarchically structured according to any given piping and instrumentation diagram (P&ID) and its operating
procedure. On the basis of this model, a diagnoser can be constructed automatically with a computer program
for online implementation. Computer algorithms have also been devised to place additional sensors and/or
synthesize extra operation steps for the purpose of improving diagnostic performance. Several examples are
presented in this paper to demonstrate the effectiveness and correctness of the proposed approach.
Introduction
Unexpected catastrophic events such as fires, explosions, or
toxic releases may occur in the course of manufacturing
chemicals in every process plant. A serious accident may cause
not only casualties and property losses but also serious damages
to the ecosystem. Online fault diagnosis has always been
considered as an effective means for enhancing operational
safety. However, most available methods developed so far are
for the continuous chemical processes. These approaches could
be classified into three distinct groups,1-3 i.e., the model-based
approaches, the knowledge-based approaches, and the data-
analysis-based approaches. Due to unsteady operating condi-
tions, application of these approaches to batch chemical
processes is usually difficult, and therefore, significantly fewer
works have been reported in the literature. On the basis of
statistical analysis, Nomikos and MacGregor4,5 developed a
systematic methodology for batch process monitoring, which
has also been adopted for online fault diagnosis.6-9 Moreover,
fault identification strategies based on a combination of artificial
neural networks and knowledge-based expert systems10,11 and
the observer techniques12 have also been developed for the batch
operations.
It can be observed from the aforementioned studies that, in
order to facilitate effective diagnosis, the fault propagation
mechanisms must be characterized with a model and the
symptom evolution patterns caused by every fault origin must
also be predicted in advance. Notice that, although the digraph
model is by far the most popular choice for this purpose,13,14 it
is useful mostly in applications associated with the continuous
processes. This is because of the fact that the digraph is not
suitable for describing the dynamic causal relationships among
events, time, equipment states, and system configurations in the
semibatch or batch manufacturing processes. Since Petri-net is
well-known for its capability in characterizing discrete event
systems,15,16 it is adopted in this work as a modeling tool to
circumvent the above drawbacks.
Failure diagnosis in the discrete-event systems (DESs) was
first studied in the work of Sampath et al.17,18 The notion of
system diagnosability was defined by these authors and, in
addition, a systematic procedure was proposed to construct the
diagnoser for a given DES. A diagnoser was constructed to serve
two main purposes in the above studies. In addition to its
obvious capability in online fault diagnosis, it is also useful for
verifying diagnosability. Similar studies have also been per-
formed by a number of other research groups.19-24 Sampath’s
study was also extended by Ushio et al.25 with Petri-net models
to better describe the discrete-event systems. Only a portion of
the equipment states, i.e., the token numbers in places, were
assumed in such models to be observable, while the events, i.e.,
the firings of transitions, were considered to be completely
undetectable. By treating all hardware failures as unobservable
events, Jiang et al.26 handled the diagnosis problems with
automatic modeling techniques. An online diagnosis approach
was also developed in the work of Jiroveanu et al.27,28 on the
basis of timed Petri-nets. Chung29 recently modified the diag-
noser generation algorithm by allowing the transitions to be
partially observable. The above studies mostly focused on
checking diagnosability, while ignoring the practical issue of
resolution enhancement. Notice also that the proposed models
were constructed by using the ordinary Petri-net (without time-
delayed transitions, inhibitor arcs, and test arcs), and thus, the
applicability of the resulting diagnosers in realistic cases is
limited.
Since the scopes of the aforementioned existing publications
on DES were mainly concerned with mechanical and/or
electrical systems, a diagnoser-building algorithm is developed
in the present work for applications in the batch chemical
processes. To facilitate implementation efficiency, this algorithm
has been encoded in a commercially available programming
software Delphi 2007,30 which is one of the most respected and
widely used rapid application development (RAD) environments
today, to generate the diagnoser tree automatically according
to a timed Petri-net model. As mentioned previously, a diagnoser
constructed with the given process configuration and operating
procedure may not be able to uniquely identify all possible fault
origins. Systematic procedures have thus been developed in this
work to identify diagnosable scenarios and to evaluate resolution
level of the diagnostic system. Two resolution enhancement
strategies have been proposed in this study. The first approach
is to place additional sensors, while the second is to execute
additional operation steps which are not included in the original
* To whom correspondence should be addressed. Tel.: 886-6-
2757575, ext. 62663. Fax: 886-6-2344496. E-mail: ctchang@
mail.ncku.edu.tw.
Ind. Eng. Chem. Res. 2010, 49, 4249–4268 4249
10.1021/ie901410p  2010 American Chemical Society
Published on Web 03/29/2010
procedure (see Figure 4). Notice that Si (i ) 0, 1, 2) and Tj
(j ) 1, 2, 3) denote the operation steps and the activation
conditions of these steps, respectively. Notice also that the
control actions taken in each step, and the sensor signals used
in each condition are also specified in this chart.
According to the aforementioned conventions, the components
in example 1 should be: the two valves (V-1 and V-2), the inlet
and outlet pipelines, the tanks, and the PLC controller. The Petri-
net representations of V-1 and tank have already been presented
in Figures 1 and 2, respectively. The remaining component
models can be built according to the same principles and, for
the sake of brevity, they are included in Figures 5-8 without
further explanation. Since these Petri-nets are coupled, they can
be directly connected to form a system model of 14 places, 12
transitions, and 41 arcs.
Failure Models. After building the above models to represent
normal system behaviors, additional mechanisms should be
incorporated into each component Petri-net to characterize the
effects of failures. The general structure in Figure 9 is adopted
in the present study to represent all possible fault scenarios. In
this model, the direct outcome of a failure is viewed as a change
in the equipment state of the failed component. The state caused
by the ith failure mode is represented by the place PFS(i) (i )
1, 2, ...). The effects of a failure are regarded as the outcomes
created by replacing a set of routine events occurred during
normal operation with an alternative set of abnormal events.
These effects can be readily modeled with a combination of
the inhibitor arcs and test arcs (see Figure 9). The former arcs
are used to disable the transitions corresponding to the routine
(normal) events, i.e. TN(j) (j ) 1, 2, ..., m), and the latter activate
the alternative transitions representing the failure events, i.e.
TF(k) (k ) 1, 2, ..., n).
Let us first use the Petri-net given in Figure 1 as an example
to illustrate this model-building approach. In particular, the
abnormal valve states, i.e., “V-1 sticks at the close position”
(V1SC) and “V-1 sticks at the open position” (V1SO), are
Figure 3. Simple liquid storage system (example 1).
Figure 4. Sequential function chart of the operating procedure in example
1.
Figure 5. Inlet valve model (V-2).
Figure 6. Outlet pipeline model.
Figure 7. Inlet pipeline model.
Figure 8. Controller model.
Ind. Eng. Chem. Res., Vol. 49, No. 9, 2010 4251
net model is transformed into a “diagnoser” in this work for
enumerating all possible system states under normal/abnormal
operating conditions and also the state evolution sequences. This
diagnoser is structured as a tree with nodes denoting the possible
states. A data set is constructed for each node to incorporate
the needed information and the detailed descriptions of these
data can be found in Table 1. It is assumed that the initial
system state is given and the corresponding Petri-net marking
is stored in the data set embedded in the root node of
diagnoser tree. The remaining states in the tree can be
identified by firing the enabled transitions sequentially
according to the system model.
Enumeration of Diagnoser Nodes. As an example of the
enumeration procedure, let us again consider the simple storage
system presented in Figure 3, the operating procedure in Figure
4, and the corresponding Petri-net models in Figures 1, 2, and
5-8. Every possible system state can be represented with a
marking of the Petri-net model, i.e., a row vector in which the
token numbers of all places are sequentially stored. The initial
marking in this case is (10001001011010), i.e., the tank is empty
and valves 1 and 2 are at the close position. Notice that the
underlined two digits in this marking denote the observable tank
states, i.e., “empty” (p11) and “full” (p12).
Figure 11 is the fully developed diagnoser tree for the simple
example mentioned above. The root node of this tree (node [0])
is characterized with the initial marking, while the other nodes
can be enumerated by firing the enabled transitions sequentially.
Specifically, since a token is in p11, transition t12 should be
enabled initially (see Figure 8). As a result, the PLC will try to
implement operation step S1 in Figure 4, i.e., (1) close V-1 and
(2) open V-2, after the operation begins. The former step cannot
enable t2 since V-1 is already closed. However, the latter step
fires transition t3 and the resulting marking is (10000101011010),
i.e., node [2]. Having fired all transitions which are affected by
the operation steps in S1, the enabled transitions should then be
processed next. From Figure 7, it is clear that t8 can be triggered
since a token is present in each of its two input places, i.e., p6
and p10. The resulting marking is (10000101101010), which is
stored in node [2] of the diagnoser. Since the conditions
associated with p9 and p11 in Figure 2 now become valid,
transition t9 should then be fired to yield node [3] with the
marking (10000101100110). Notice that this state can only
appear after 1 unit of time is elapsed due to the time delay
assigned to t9. At this point, it can be observed that none of the
transitions in the Petri-net model can be enabled without
executing additional operation steps in SFC.
Notice that the marking in node [3] satisfies the activation
condition T2 (in Figure 4) for issuing the commands in S2
and thus transition t11 should be fired. The resulting marking
is given in node 4, i.e., (10000101100101). A token in p14
triggers two events, i.e., (1) close V-2 and (2) open V-1,
which are represented with transitions t4 (in Figure 5) and t1
(in Figure 1), respectively. These two transitions can both
be fired to produce the marking (01001001100101) in node
[5]. It should be noted that, other than p1, the firing of t1 is
also dependent upon the state of p3, which is associated with
the failure “V-1 sticks at the close position” (V1SC). There
are thus two possibilities at the instance when the step “open
V-1” is carried out. If the valve is in normal condition,
transition t1 (and also t4) can be fired to generate the marking
in node [5]. However, if the aforementioned failure is present,
t1 is inhibited by the condition in p3 and the corresponding
system state can be described with the marking (10101001100101)
in node [6]. Consequently, the diagnoser is branched at the
point when the second operation step in S2 is performed. The
marking in node [5] can trigger t6 in Figure 6 (caused by
the states given in p2, p8, and p12) and t7 in Figure 7 (caused
by the conditions in p5 and p9) to produce the marking
(01001010010101) in nodes [7], which in turn triggers t10 in
Figure 2 to produce (01001010011001) in node [9]. Since a
time delay of 1 unit is needed in firing the latter transition,
the state in node [9] can be reached only after time 2. On
the other hand, the marking in node [6] can fire t7 in Figure
7 (due to the states of p5 and p9) to yield the marking
(10101001010101) in node [8].
It is obvious that the diagnoser tree can be developed further
with the aforementioned enumeration method. However, since
the operation specified in Figure 4 is cyclic in nature, an
infinitely large tree will be produced if this approach is used
alone. A proper diagnoser construction procedure should
therefore also include the propagation and termination functions
described below.
Propagation and Termination Functions. As mentioned
before, a batch process can be fully described with a P&ID and
the corresponding SFC. It is assumed in this study that the
operating procedure in SFC is properly defined in such a way
that each system state can be driven to one and only one other
Table 1. Information Stored in a Diagnoser Node
symbol description
NodeNumber a distinct label assigned to the present
system state
CurrentMarking a vector containing the current token
numbers in all places
CurrentTime a time stamp denoting the current time
TransitionFired the labels of transitions previously red to
produce the present marking
ParentNode the label of parent node (from which the
present node is originated)
ChildNodes the labels of child nodes (which can be
generated from the present node)
ChildNodeCount the total number of child nodes
FailureRecord a record of all failures that have already
occurred until the current time
Figure 11. Diagnoser tree for example 1.
Ind. Eng. Chem. Res., Vol. 49, No. 9, 2010 4253
State-Time Tree. For convenience, the fully developed
diagnoser can be converted to a simplified format, which is
referred to in this paper as the state-time tree. This tree is
essentially equivalent to the original version except that each
node is identified with the newly reached equipment state(s)
instead. For example, the markings in Figure 11 can first be
replaced with place labels according to this principle. Every
node in the state-time tree is then obtained by merging all
nodes tagged with the same time stamp. By following this
practice, Figure 11 can be transformed into Figure 15.
Realistically speaking, only the nodes embedded in a state-
time tree are distinguishable from one another. It should be
noted that, although nodes [4], [5], and [7] are present at the
same time, they are treated as distinct states. This is due to
the assumption that transition t11 belongs to set TK, i.e., the
corresponding controller signal is considered to be a piece
of known information. Finally notice that nodes [10], [11],
and [13] can be interpreted with the same approach.
Detectability, Diagnosability, and Resolution. From the
special diagnoser structure constructed with the aforementioned
procedure, it can be observed that the path associated with
normal operation always contains a loop and a failed branch
may either form a loop or end up at a single node. A failure
can thus be detected when an observable system state is found
to be abnormal (i.e., different from the normal operating
conditions with the same time stamp) or permanently stays
unchanged. Notice that the detectability of every fault origin in
a diagnostic system, if badly designed, cannot always be
guaranteed. For example, if the second and third activation
conditions listed in Figure 4, i.e., LH and LL, are replaced with
the operation times needed to fill up and empty the tank,
respectively, then obviously none of the fault origins are
detectable because the affected equipment states are not
monitored.
In addition, since more than one scenario may produce
the same online symptoms, the diagnosability of a detectable
fault origin cannot be ensured either. A computer algorithm
has thus been developed and coded with the programming
language DELPHI to construct the aforementioned state-time
Figure 13. Flowchart of termination function.
Figure 14. Flowchart for node enumeration procedure.
Figure 15. State-time tree of example 1.
Ind. Eng. Chem. Res., Vol. 49, No. 9, 2010 4255
in this example. Consequently, the system states in the first
period are different from those in the later periods, and
therefore, the corresponding results are not representative.
Notice also that the elapsed time of each step is given in the
parentheses next to the step number in the first column of
Table 3a and in the third column of Table 3b.
On the basis of the failure signatures along branches 1 and 2
in the diagnoser tree in Figure 15, all failures should be
considered as diagnosable (see Table 3b). To further characterize
the performance of a given diagnostic system, three quantitative
measures have been devised in this study:
In these formulas, the so-called “reference case” refers to a batch
system defined by the given P&ID and SFC (without any
additional sensor or extra step which is not needed for normal
operation). Notice that these measures can be computed with
the results obtained from diagnosability check. For example, it
can be determined by inspecting Table 3b that DTR, DGR, and
ANIB equal 100%, 100%, and 1.00, respectively.
Performance Enhancement Strategies
The tasks of constructing a diagnoser for the system presented
in Figure 1 and evaluating the corresponding diagnostic
performance are trivial since only two failures of the same valve
V-1 are considered as the possible fault origins. The issues
concerning detectability, diagnosability, and resolution may
Table 4. Operation Steps in Example 2
operation step control actions
S0 initialization
S1 (1) open V-1; (2) close V-3; (3) close V-4
S2 (1) close V-1; (2) switch V-2 to position +;
(3) switch on E-4
S3 switch V-2 to position -
S4 (1) switch off E-4; (2) open V-3; (3) open V-4
Table 5. Activation Conditions of the Transitions in SFC of
Example 2
transition conditions
T1 start
T2 tank 1 LH
T3 tank 2 LH
T4 tank 3 LH
T5 tank 1 LL, tank 2 LL, tank 3 LL
Table 6. Example 2 Data
(a) Normal Operation Sequence in Example 2
step (time) observable states unobservable states
S1(0) T1L T2L T3L P1F P2NF P3NF P4NF P5NF P6NF P-OFF V1O V2- V3C V4C
S1(1) T1M T2L T3L P1F P2NF P3NF P4NF P5NF P6NF P-OFF V1O V2- V3C V4C
S1(2) T1H T2L T3L P1F P2NF P3NF P4NF P5NF P6NF P-OFF V1O V2- V3C V4C
S2(0) T1H T2L T3L P1NF P2F P3F P4NF P5NF P6NF P-ON V1C V2+ V3C V4C
S2(1) T1M T2H T3L P1NF P2NF P3NF P4NF P5NF P6NF P-ON V1C V2+ V3C V4C
S3(0) T1M T2H T3L P1NF P2F P3NF P4F P5NF P6NF P-ON V1C V2- V3C V4C
S3(1) T1L T2H T3H P1NF P2NF P3NF P4NF P5NF P6NF P-ON V1C V2- V3C V4C
S4(0) T1L T2H T3H P1NF P2NF P3NF P4NF P5F P6F P-OFF V1C V2- V3O V4O
S4(1) T1L T2L T3L P1NF P2NF P3NF P4NF P5NF P6NF P-OFF V1C V2- V3O V4O
(b) Failure Signatures in Example 2
branch no. group step (time) fault origins node observable states unobservable states diagnosable
1 1 S1(1) V1SC 200 T1L T2L T3L P1NF P2NF P3NF P4NF P5NF P6NF P-OFF
V1C V2- V3C V4C
yes
2 2 S2(1) V1SO V3SO 251 T1H T2L T3L P1F P2F P3F P4NF P5F P6NF P-ON
V1O V2+ V3O V4C
yes
3 3 S2(1) V1SO 247 T1H T2H T3L P1F P2NF P3NF P4NF P5NF P6NF P-ON
V1O V2+ V3C V4C
yes
4 4 S2(1) V2S- 257 T1M T2L T3H P1NF P2NF P3NF P4NF P5NF P6NF P-ON
V1C V2- V3C V4C
no
5 S2(1) V2E- 258 T1M T2L T3H P1NF P2NF P3NF P4NF P5NF P6NF P-ON
V1C V2- V3C V4C
no
6 5 S2(1) T2LK 238 T1M T2L T3L P1NF P2F P3F P4NF P5NF P6NF P-ON
V1C V2+ V3C V4C
no
7 S2(1) V3SO 250 T1M T2L T3L P1NF P2F P3F P4NF P5F P6NF P-ON
V1C V2+ V3O V4C
no
8 6 S3(1) V2S+ 269 T1M T2H T3L P1NF P2NF P3NF P4NF P5NF P6NF P-ON
V1C V2+ V3C V4C
no
9 S3(1) V2E+ 263 T1M T2H T3L P1NF P2NF P3NF P4NF P5NF P6NF P-ON
V1C V2+ V3C V4C
no
10 7 S3(1) T3LK 177 T1L T2H T3L P1NF P2NF P3NF P4NF P5NF P6NF P-ON
V1C V2- V3C V4C
yes
11 8 S4(1) V3SC 193 T1L T2H T3L P1NF P2NF P3NF P4NF P5NF P6NF P-OFF
V1C V2- V3C V4O
yes
a DTR: 100%. DGR: 45.5%. ANIB: 1.38.
detection rate(DTR) ) (1 - number ofundetectable branchestotal number of failed
branches in reference case
) × 100%
diagnosis rate(DGR) ) (1 - number ofundiagnosable branchestotal number of failed
branches in reference case
) × 100%
average number of indistinguishable branches(ANIB) )
total number of failed branches in reference case
number of indistinguishable groups
Ind. Eng. Chem. Res., Vol. 49, No. 9, 2010 4257
thus, those in groups 4, 5, and 6 cannot be diagnosed correctly.
The corresponding detection rate (DTR), diagnosis rate (DGR),
and average number of indistinguishable branches (ANIB) in
this case are found to be 100%, 45.5%, and 1.38, respectively.
This is clearly not satisfactory.
Selection of Extra Sensors. The most straightforward
approach to enhance diagnostic performance is to install extra
sensors. The obvious selection criterion is simply to measure
the hidden state(s) which varies differently along different
diagnoser branches in an indistinguishable group. For example,
let us consider group 5 (which includes branches 6 and 7) in
Table 6b. Notice that the unobservable states of pipeline P-5
are different in these two scenarios, i.e., P5NF and P5F (which
are highlighted with boldface letters in the table). Thus, the
corresponding fault origins could be diagnosed if a flow sensor
is placed on P-5.
Table 10. Diagnosis Results of Applying Extra Operation Steps for the Scenarios Listed in Table 8a
branch no. group step (time) fault origins node observable states extra step new observable states diagnosable
1 1 S1(0) V1SC 200 T1L T2L T3L P1NF P5NF yes
2 2 S2(0) V1SO 231 T1H T2L T3L P1F P5NF yes
3 3 S2(0) V3SO 242 T1H T2L T3L P1NF P5F yes
4 4 S2(0) V1SO V3SO 251 T1H T2L T3L P1F P5F yes
5 5 S2(1) T2LK 238 T1M T2L T3L P1NF P5NF yes
6 6 S2(1) V2S- 257 T1M T2L T3H P1NF P5NF V2+, wait T1M T2L T3H P1NF P5NF yes
7 7 V2E- 258 T1M T2L T3H P1NF P5NF T1L T2H T3H P1NF P5NF yes
8 8 S3(1) V2S+ 155 T1M T2H T3L P1NF P5NF V2-, wait T1M T2H T3L P1NF P5NF yes
9 9 V2E+ 149 T1M T2H T3L P1NF P5NF T1L T2H T3H P1NF P5NF yes
10 10 S3(1) T3LK 177 T1L T2H T3L P1NF P5NF yes
11 11 S4(0) V3SC 181 T1L T2H T3H P1NF P5NF yes
a DTR: 100%. DGR: 100%. ANIB: 1.00.
Figure 17. Six-tank storage system (example 3).
Ind. Eng. Chem. Res., Vol. 49, No. 9, 2010 4259
Table 13. Example 3 Data
(a) Normal Operation Sequence in Example 3
step (time) event states observable states
S1(0) P1F P2F V1O V2O V7C V8C T1M T2L T3L* T4L* T5L* T6L*
S1(1) T1H T2M T1H T2M T3L* T4L* T5L* T6L*
S1(2) T2H T1H T2H T3L* T4L* T5L* T6L*
S2(0) P1NF P2NF P6F P10F V1C V2C V10- PP2-ON T1H T2H T3L* T4L* T5L* T6L*
S2(1) T2M T4H P6NF P10NF T4H* T1H T2M T3L* T4H* T5L* T6L*
S3(0) P5F P7F PP1-ON PP2-OFF T1H T2M T3L* T4H* T5L* T6L*
S3(1) T1M T5H P5NF P7NF T5H* T1M T2M T3L* T4H* T5H* T6L*
S4(0) P6F P9F V10+ PP1-OFF PP2-ON T1M T2M T3L* T4H* T5H* T6L*
S4(1) T2L T3H P6NF P9NF T3H* T1M T2L T3H* T4H* T5H* T6L*
S5(0) P15F P16F V11- PP2-OFF PP4-ON T1M T2L T3H* T4H* T5H* T6L*
S5(1) T4L T6H P15NF P16NF T4L* T6H* T1M T2L T3H* T4L* T5H* T6H*
S6(0) P12F P13F P18F V7O PP3-ON PP4-OFF T1M T2L T3H* T4L* T5H* T6H*
S6(1) T3L T4H T5L P12NF P13NF P18NF T3L* T4H* T5L* T1M T2L T3L* T4H* T5L* T6H*
S7(0) P15F P17F V7C V11+ PP3-OFF PP4-ON T1M T2L T3L* T4H* T5L* T6H*
S7(1) T4L T5H P15NF P17NF T4L* T5H* T1M T2L T3L* T4L* T5H* T6H*
S8(0) P18F P19F V7O V8O PP4-OFF T1M T2L T3L* T4L* T5H* T6H*
S8(1) T5L T6L P18NF P19NF T5L* T6L* T1M T2L T3L* T4L* T5L* T6L*
(b) Failure Signatures in Example 3a
branch
no. group
step
(time)
fault
origins node observable states unobservable states diagnosable
1 1 S1(1) T2LK 485 T1H T2L T3L* T4L*
T5L* T6L*
T3L T4L T5L T6L P1F P2F P3NF P4NF P5NF P6NF P7NF
P8NF P9NF P10NF P11NF P12NF P13NF P14NF P15NF
P16NF P17NF P18NF P19NF V1O V2O V3C V4C V5C V6C
V7C V8C V9+ V10+ V11+ PP1-OFF PP2-OFF PP3-OFF
PP4-OFF
no
2 V2SC 487 T1H T2L T3L*
T4L* T5L* T6L*
T3L T4L T5L T6L P1F P2NF P3NF P4NF P5NF P6NF P7NF
P8NF P9NF P10NF P11NF P12NF P13NF P14NF P15NF
P16NF P17NF P18NF P19NF V1O V2C V3C V4C V5C V6C
V7C V8C V9+ V10+ V11+ PP1-OFF PP2-OFF PP3-OFF
PP4-OFF
no
3 2 S1(1) V1SC 481 T1M T2M T3L*
T4L* T5L* T6L*
T3L T4L T5L T6L P1NF P2F P3NF P4NF P5NF P6NF P7NF
P8NF P9NF P10NF P11NF P12NF P13NF P14NF P15NF
P16NF P17NF P18NF P19NF V1C V2O V3C V4C V5C V6C
V7C V8C V9+ V10+ V11+ PP1-OFF PP2-OFF PP3-OFF
PP4-OFF
yes
4 3 S2(1) T4EL 559 T1H T2M T3L*
T4L* T5L* T6L*
T3L T4H T5L T6L P1NF P2NF P3NF P4NF P5NF P6NF P7NF
P8NF P9NF P10NF P11NF P12NF P13NF P14NF P15NF
P16NF P17NF P18NF P19NF V1C V2C V3C V4C V5C V6C
V7C V8C V9+ V10- V11+ PP1-OFF PP2-ON PP3-OFF
PP4-OFF
no
5 T4LK 521 T1H T2M T3L*
T4L* T5L* T6L*
T3L T4L T5L T6L P1NF P2NF P3NF P4NF P5NF P6F P7NF
P8NF P9NF P10F P11NF P12NF P13NF P14NF P15NF P16NF
P17NF P18NF P19NF V1C V2C V3C V4C V5C V6C V7C
V8C V9+ V10- V11+ PP1-OFF PP2-ON PP3-OFF PP4-OFF
no
6 4 S2(1) V2SO 562 T1H T2H T3L*
T4H* T5L* T6L*
T3L T4H T5L T6L P1NF P2F P3NF P4NF P5NF P6NF P7NF
P8NF P9NF P10NF P11NF P12NF P13NF P14NF P15NF
P16NF P17NF P18NF P19NF V1C V2O V3C V4C V5C V6C
V7C V8C V9+ V10- V11+ PP1-OFF PP2-ON PP3-OFF
PP4-OFF
yes
7 5 S2(1) V10S+ 563 T1H T2M T3H*
T4L* T5L* T6L*
T3H T4L T5L T6L P1NF P2NF P3NF P4NF P5NF P6NF P7NF
P8NF P9NF P10NF P11NF P12NF P13NF P14NF P15NF
P16NF P17NF P18NF P19NF V1C V2C V3C V4C V5C V6C
V7C V8C V9+ V10+ V11+ PP1-OFF PP2-ON PP3-OFF
PP4-OFF
no
8 V10E+ 564 T1H T2M T3H*
T4L* T5L* T6L*
T3H T4L T5L T6L P1NF P2NF P3NF P4NF P5NF P6NF P7NF
P8NF P9NF P10NF P11NF P12NF P13NF P14NF P15NF
P16NF P17NF P18NF P19NF V1C V2C V3C V4C V5C V6C
V7C V8C V9+ V10+ V11+ PP1-OFF PP2-ON PP3-OFF
PP4-OFF
no
9 6 S3(1) V1SO T5LK 606 T1H T2M T3L*
T4H* T5L* T6L*
T3L T4H T5L T6L P1F P2NF P3NF P4NF P5F P6NF P7F P8NF
P9NF P10NF P11NF P12NF P13NF P14NF P15NF P16NF
P17NF P18NF P19NF V1O V2C V3C V4C V5C V6C V7C
V8C V9+ V10- V11+ PP1-ON PP2-OFF PP3-OFF PP4-OFF
no
10 V1SO V7SO 609 T1H T2M T3L*
T4H* T5L* T6L*
T3L T4H T5L T6L P1F P2NF P3NF P4NF P5F P6NF P7F P8NF
P9NF P10NF P11NF P12NF P13NF P14NF P15NF P16NF
P17NF P18F P19NF V1O V2C V3C V4C V5C V6C V7O V8C
V9+ V10- V11+ PP1-ON PP2-OFF PP3-OFF PP4-OFF
no
11 7 S3(1) T5EL 612 T1M T2M T3L*
T4H* T5L* T6L*
T3L T4H T5H T6L P1NF P2NF P3NF P4NF P5NF P6NF P7NF
P8NF P9NF P10NF P11NF P12NF P13NF P14NF P15NF
P16NF P17NF P18NF P19NF V1C V2C V3C V4C V5C V6C
V7C V8C V9+ V10- V11+ PP1-ON PP2-OFF PP3-OFF
PP4-OFF
no
Ind. Eng. Chem. Res., Vol. 49, No. 9, 2010 4261
transported to tank E-5 and E-6 with pump E-10 via pipeline
P-15. Notice that P-15 ends at the 3-way valve V-11. When
V-11 is at position +, the fluid in P-11 will be transferred into
pipeline P-17 and then tank E-5. If V-11 is at position -, the
fluid in P-11 will flow into pipeline P-16 and enter tank E-6.
Both E-1 and E-2 are equipped with level sensors. Each
reposts three conditions: (1) level low (LL); (2) level medium
(LM); (3) level high (LH). On the other hand, the level sensors
on tanks E-3, E-4, E-5, and E-6 can be used to detect only two
conditions, i.e., (1) level low (LL) and (2) level high (LH). The
fault origins considered in this example are the following:
1. Valves V-1, V-2, V-5, V-6, V-7, V-9, V-10, and V-11
may experience sticking failures.
2. Valve V-9 and V-10 may be switched to a wrong position
due to spurious controller signal(s).
3. Tanks E-1, E-2, E-3, E-4, E-5, and E-6 may leak.
4. The measurements of level sensors on E-3, E-4, E-5, and
E-6 may be erroneous.
The detailed operation steps in this procedure and their
activation conditions are listed in Tables 11 and 12, respectively.
Notice that these steps are also executed in sequence periodically.
Petri-net Models. Since almost all component models
adopted in the present example are essentially the same as those
used previously, descriptions of these models are not repeated
here for the sake of brevity. On the other hand, notice that the
sensor malfunctions have not been considered before. It is thus
Table 13 Continued
(b) Failure Signatures in Example 3a
branch
no. group
step
(time)
fault
origins node observable states unobservable states diagnosable
27 T4LK 427 T1M T2L T3L*
T4L* T5L* T6H*
T3L T4L T5L T6H P1NF P2NF P3NF P4NF P5NF P6NF P7NF
P8NF P9NF P10NF P11NF P12NF P13NF P14NF P15NF
P16NF P17NF P18NF P19NF V1C V2C V3C V4C V5C V6C
V7O V8C V9+ V10+ V11- PP1-OFF PP2-OFF PP3-ON
PP4-OFF
no
28 18 S6(1) T5EH 426 T1M T2L T3L*
T4H* T5H* T6H*
T3L T4H T5L T6H P1NF P2NF P3NF P4NF P5NF P6NF P7NF
P8NF P9NF P10NF P11NF P12NF P13NF P14NF P15NF
P16NF P17NF P18NF P19NF V1C V2C V3C V4C V5C V6C
V7O V8C V9+ V10+ V11- PP1-OFF PP2-OFF PP3-ON
PP4-OFF
no
29 V7SC 428 T1M T2L T3L*
T4H* T5H* T6H*
T3L T4H T5H T6H P1NF P2NF P3NF P4NF P5NF P6NF P7NF
P8NF P9NF P10NF P11NF P12NF P13NF P14NF P15NF
P16NF P17NF P18NF P19NF V1C V2C V3C V4C V5C V6C
V7C V8C V9+ V10+ V11- PP1-OFF PP2-OFF PP3-ON
PP4-OFF
no
30 19 S7(1) V11S- 434 T1M T2L T3L*
T4H* T5L* T6H*
T3L T4H T5L T6H P1NF P2NF P3NF P4NF P5NF P6NF P7NF
P8NF P9NF P10NF P11NF P12NF P13NF P14NF P15NF
P16NF P17NF P18NF P19NF V1C V2C V3C V4C V5C V6C
V7C V8C V9+ V10+ V11- PP1-OFF PP2-OFF PP3-OFF
PP4-ON
yes
31 20 S7(1) T4EH 451 T1M T2L T3L*
T4H* T5H* T6H*
T3L T4L T5H T6H P1NF P2NF P3NF P4NF P5NF P6NF P7NF
P8NF P9NF P10NF P11NF P12NF P13NF P14NF P15NF
P16NF P17NF P18NF P19NF V1C V2C V3C V4C V5C V6C
V7C V8C V9+ V10+ V11+ PP1-OFF PP2-OFF PP3-OFF
PP4-ON
yes
32 21 S7(1) T5EL 452 T1M T2L T3L*
T4L* T5L* T6H*
T3L T4L T5H T6H P1NF P2NF P3NF P4NF P5NF P6NF P7NF
P8NF P9NF P10NF P11NF P12NF P13NF P14NF P15NF
P16NF P17NF P18NF P19NF V1C V2C V3C V4C V5C V6C
V7C V8C V9+ V10+ V11+ PP1-OFF PP2-OFF PP3-OFF
PP4-ON
no
33 T5LK 453 T1M T2L T3L*
T4L* T5L* T6H*
T3L T4L T5L T6H P1NF P2NF P3NF P4NF P5NF P6NF P7NF
P8NF P9NF P10NF P11NF P12NF P13NF P14NF P15NF
P16NF P17NF P18NF P19NF V1C V2C V3C V4C V5C V6C
V7C V8C V9+ V10+ V11+ PP1-OFF PP2-OFF PP3-OFF
PP4-ON
no
34 V7SO 460 T1M T2L T3L*
T4L* T5L* T6H*
T3L T4L T5L T6H P1NF P2NF P3NF P4NF P5NF P6NF P7NF
P8NF P9NF P10NF P11NF P12NF P13NF P14NF P15NF
P16NF P17NF P18NF P19NF V1C V2C V3C V4C V5C V6C
V7O V8C V9+ V10+ V11+ PP1-OFF PP2-OFF PP3-OFF
PP4-ON
no
35 22 S8(1) T5EH 468 T1M T2L T3L*
T4L* T5H* T6L*
T3L T4L T5L T6L P1NF P2NF P3NF P4NF P5NF P6NF P7NF
P8NF P9NF P10NF P11NF P12NF P13NF P14NF P15NF
P16NF P17NF P18NF P19NF V1C V2C V3C V4C V5C V6C
V7O V8O V9+ V10+ V11+ PP1-OFF PP2-OFF PP3-OFF
PP4-OFF
no
36 V7SC 470 T1M T2L T3L*
T4L* T5H* T6L*
T3L T4L T5H T6L P1NF P2NF P3NF P4NF P5NF P6NF P7NF
P8NF P9NF P10NF P11NF P12NF P13NF P14NF P15NF
P16NF P17NF P18NF P19NF V1C V2C V3C V4C V5C V6C
V7C V8O V9+ V10+ V11+ PP1-OFF PP2-OFF PP3-OFF
PP4-OFF
no
37 23 S8(1) T6EH 469 T1M T2L T3L*
T4L* T5L* T6H*
T3L T4L T5L T6L P1NF P2NF P3NF P4NF P5NF P6NF P7NF
P8NF P9NF P10NF P11NF P12NF P13NF P14NF P15NF
P16NF P17NF P18NF P19NF V1C V2C V3C V4C V5C V6C
V7O V8O V9+ V10+ V11+ PP1-OFF PP2-OFF PP3-OFF
PP4-OFF
yes
a DTR: 100%. DGR: 29.7%. ANIB: 1.61.
Ind. Eng. Chem. Res., Vol. 49, No. 9, 2010 4263
Table 16. Diagnosis Results of Applying Extra Operation Steps in Table 13b in Example 3a
branch
no. group
step
(time)
fault
origins node observable states extra steps new observable state diagnosable
1 1 S1(1) T2LK 485 T1H T2L T3L* T4L* T5L* T6L* V4O, wait T1H T2L T3L* T4L* T5L* T6L* yes
2 2 V2SC 487 T1H T2L T3L* T4L* T5L* T6L* V4O, wait T1H T2M T3L* T4L* T5L* T6L* yes
3 3 S1(1) V1SC 481 T1M T2M T3L* T4L* T5L*
T6L*
yes
4 4 S2(1) T4EL 559 T1H T2M T3L* T4L* T5L*
T6L*
wait T1H T2M T3L* T4L* T5L* T6L* yes
5 5 T4LK 521 T1H T2M T3L* T4L* T5L*
T6L*
wait T1H T2L T3 L* T4L* T5L* T6L* yes
6 6 S2(1) V2SO 562 T1H T2H T3L* T4H* T5L*
T6L*
yes
7 7 S2(1) V10S+ 563 T1H T2M T3H* T4L* T5L*
T6L*
V10-, wait T1H T2M T3H* T4L* T5L* T6L* yes
8 8 V10E+ 564 T1H T2M T3H* T4L* T5L*
T6L*
V10-, wait T1H T2L T3H* T4H* T5L* T6L* yes
9 9 S3(1) V1SO T5LK 606 T1H T2M T3L* T4H* T5L*
T6L*
X no
10 10 V1SO V7SO 609 T1H T2M T3L* T4H* T5L*
T6L*
X no
11 11 S3(1) T5EL 612 T1M T2M T3L* T4H* T5L*
T6L*
wait T1M T2M T3L* T4H* T5L*
T6L*
yes
12 12 T5LK 593 T1M T2M T3L* T4H* T5L*
T6L*
wait T1L T2M T3L* T4H* T5L* T6L* no
13 V7SO 607 T1M T2M T3L* T4H* T5L*
T6L*
wait T1L T2M T3L* T4H* T5L* T6L* no
14 13 S3(1) V9E- 614 T1M T2M T3L* T4H* T5L*
T6H*
yes
15 14 S3(1) V1SO 615 T1H T2M T3L* T4H* T5H*
T6L*
yes
16 15 S3(1) V1SO T5EL 616 T1H T2M T3L* T4H* T5L*
T6L*
yes
17 16 S4(1) V10S- 625 T1M T2M T3L* T4H* T5H*
T6L*
V10+, wait T1M T2M T3L* T4H* T5H*
T6L*
yes
18 17 V10E- 626 T1M T2M T3L* T4H* T5H*
T6L*
V10+, wait T1M T2L T3H* T4H* T5H*
T6L*
yes
19 18 S4(1) T3EL 380 T1M T2L T3L* T4H* T5H*
T6L*
V2O, wait T1M T2M T3L* T4H* T5H*
T6L*
yes
20 19 T3LK 384 T1M T2L T3L* T4H* T5H*
T6L*
V2O, wait T1M T2L T3L* T4H* T5H* T6L* yes
21 20 S5(1) V11S+ 386 T1M T2L T3H* T4H* T5H*
T6L*
yes
22 21 S5(1) T4EH 399 T1M T2L T3H* T4H* T5H*
T6H*
yes
23 22 S5(1) T6EL 400 T1M T2L T3H* T4L* T5H*
T6L*
V9-, PP1-ON, wait T1M T2L T3H* T4L* T5H* T6L* yes
24 23 T6LK 401 T1M T2L T3H* T4L* T5H*
T6L*
V9-, PP1-ON, wait T1L T2L T3H* T4L* T5H* T6L* yes
25 24 S6(1) T3EH 424 T1M T2L T3H* T4H* T5L*
T6H*
yes
26 25 S6(1) T4EL 425 T1M T2L T3L* T4L* T5L*
T6H*
V3O, V9-, PP1-ON,
wait
T1M T2L T3L* T4L* T5L* T6H* yes
27 26 T4LK 427 T1M T2L T3L* T4L* T5L*
T6H*
V3O, V9-, PP1-ON,
wait
T1H T2L T3L* T4L* T5L* T6H* yes
28 27 S6(1) T5EH 426 T1M T2L T3L* T4H* T5H*
T6H*
PP1-ON, wait T1L T2L T3L* T4H* T5H* T6H* yes
29 28 V7SC 428 T1M T2L T3L* T4H* T5H*
T6H*
PP1-ON, wait T1M T2L T3L* T4H* T5H*
T6H*
yes
30 29 S7(1) V11S- 434 T1M T2L T3L* T4H* T5L*
T6H*
yes
31 30 S7(1) T4EH 451 T1M T2L T3L* T4H* T5H*
T6H*
yes
32 31 S7(1) T5EL 452 T1M T2L T3L* T4L* T5L*
T6H*
PP1-ON, wait T1M T2L T3L* T4L* T5L* T6H* yes
33 32 T5LK 453 T1M T2L T3L* T4L* T5L*
T6H*
PP1-ON, wait T1L T2L T3L* T4L* T5L* T6H* no
34 V7SO 460 T1M T2L T3L* T4L* T5L*
T6H*
PP1-ON, wait T1L T2L T3L* T4L* T5L* T6H*
35 33 S8(1) T5EH 468 T1M T2L T3L* T4L* T5H*
T6L*
PP1-ON, wait T1L T2L T3L* T4L* T5H* T6L* yes
36 34 V7SC 470 T1M T2L T3L* T4L* T5H*
T6L*
PP1-ON, wait T1M T2L T3L* T4L* T5H* T6L* yes
37 35 S8(1) T6EH 469 T1M T2L T3L* T4L* T5L*
T6H*
yes
a DTR: 100%. DGR: 83.8%. ANIB: 1.06.
Ind. Eng. Chem. Res., Vol. 49, No. 9, 2010 4265
because there is no time delay between the two steps. For this
reason, V2C-V1O is eliminated based on rule 3 (see Figure
A.5).
A computer algorithm has been developed to synthesize the
diagnostic test procedure according to the aforementioned
pruned search tree. The flowchart of this program is presented
in Figure A.6. A copy of this code is also included in the
Supporting Informationspart I. The proper diagnostic test
procedure for the present example can be determined with this
program. In particular, this procedure consists of the following
three steps: (1) open V-1 (V1O), (2) close V-2 (V2C), and then
(3) wait for one unit of time. After completing these extra steps
in the first scenario, valve V-1 will be opened and valve V-2
should remain open (because it is stuck at the open position).
As a result, the observable liquid level is still unchanged at TH
since both inlet and outlet flows are present. On the other hand,
the liquid level in the second scenario must be lowered to TL
eventually since both V-1 and V-2 can be correctly switched
to their target positions.
Supporting Information Available: Program codes, data
files, and Figures S1-S15. This material is available free of
charge via the Internet at http://pubs.acs.org.
Literature Cited
(1) Venkatasubramanian, V.; Rengaswamy, R.; Yin, K.; Kavuri, S. N.
A review of process fault detection and diagnosis, part i: Quantitative model
based methods. Comput. Chem. Eng. 2003, 27, 293.
(2) Venkatasubramanian, V.; Rengaswamy, R.; Kavuri, S. N. A review
of process fault detection and diagnosis, part ii: Qualitative model and search
strategies. Comput. Chem. Eng. 2003, 27, 313.
(3) Venkatasubranmanian, V.; Rengaswamy, R.; Kavuri, S. N.; Yin, K.
A review of process fault detection and diagnosis, part iii: Process history
based methods. Comput. Chem. Eng. 2003, 27, 313.
(4) Nomikos, P.; MacGregor, J. F. Monitoring batch processes using
multiway principal component analysis. AIChE J. 1994, 40, 1361.
(5) Nomikos, P.; MacGregor, J. F. Multivariate SPC charts for monitor-
ing batch processes. Technometrics 1995, 37, 41.
(6) Kourti, T.; Macgregor, J. F. Process analysis, monitoring and
diagnosis, using multivariate projection methods. Chemom. Intell. Lab. Syst.
1995, 28 (1), 3.
(7) Kourti, T.; Nomikos, P.; Macgregor, J. F. Analysis monitoring and
fault-diagnosis of batch processes using multiblock and multiway PLS. J.
Process Control 1995, 5 (4), 277.
(8) Undey, C.; Ertunc, S.; Cinar, A. Online batch fed-batch process
performance monitoring, quality prediction, and variable contribution
analysis for diagnosis. Ind. Eng. Chem. Res. 2003, 42, 4645.
(9) Lee, J. M.; Yoo, C. K.; Lee, I. B. Fault detection of batch processes
using multiway kernel principal component analysis. Comput. Chem. Eng.
2004, 28, 1837.
(10) Ruiz, D.; Canton, J.; Nougues, J. M.; Espuna, A.; Puigjaner, L.
On-line fault diagnosis system support for reactive scheduling in multi-
purpose batch chemical plants. Comput. Chem. Eng. 2001, 25, 829.
(11) Ruiz, D.; Nougues, J. M.; Calderon, Z.; Espuna, A.; Puigjaner, L.
Neural network based framework for fault diagnosis in batch chemical
plants. Comput. Chem. Eng. 2001, 24 (2-7), 777.
(12) Pierri, F.; Paviglianiti, G.; Caccavale, F.; Mattei, M. Observer-based
sensor fault detection and isolation for chemical batch reactors. Eng. Appl.
Artif. Intel. 2008, 21 (8), 1204.
(13) Chang, C. T.; Hwang, H. C. New development of the digraph-
based techniques for fault-tree synthesis. Ind. Eng. Chem. 1992, 31, 1490.
(14) Andrews, J. D.; Morgan, J. M. Application of digraph method of
fault tree construction to process plant. Reliab. Eng. 1986, 14, 85.
(15) Peterson, J. Petri Net Theory and the Modeling of Systems; Prentice-
Hall: Englewood Cliffs, NJ, 1981.
(16) David, R.; Alla, H. Petri net for modeling of dynamic systems - a
survey. Automatica 1994, 30 (2), 175.
(17) Sampath, M.; Lafortune, S.; Sinnamohideen, K.; Teneketzis, D.
Diagnosability of discrete-event systems. IEEE Trans. Automatic Control
1995, 40 (9), 1555.
(18) Sampath, M.; Sengupta, R.; Lafortune, S.; Sinamohideen, K.;
Teneketzis, D. Failure diagnosis using discrete-event models. IEEE Trans.
Control Syst. Technol. 1996, 4 (2), 105.
(19) Prock, J. A new technique for fault detection using Petri nets.
Automatica 1991, 27 (2), 239.
(20) Adamyan, A.; He, D. Failure and safety assessment of systems using
Petri nets. Proceedings of the 2002 IEEE International Conference on
Robotics and Automation, Washington, DC, 2002; p 1919.
Figure A.5. Three-level search tree obtained with rules 1-3.
Figure A.6. Flowchart of the synthesis algorithm for the diagnostic test
procedure.
Ind. Eng. Chem. Res., Vol. 49, No. 9, 2010 4267
 38 
 
 
 
 
 
 
 
國際學術會議 
PSE Asia 2010-The 5th International Symposium on 
Design, Operation and Control of Chemical Processes, 
July 25-28, 2010, Singapore 
 
會議論文 
An Automata-Based Approach to Design Fault 
Diagnosis Systems for Batch Chemical Processes 
 
 
 
 
附件三 
Proc. of the 5th International Symposium on Design, Operation and Control of Chemical Processes
operation steps which are not provided in the SFC. Three examples are presented in this 
paper to demonstrate the feasibility and benefits of this approach.
2. SYSTEMATIC MODEL-BUILDING METHODOLOGY 
To illustrate the model-building conventions, let us consider the liquid storage system 
shown in Fig. 1. The height of liquid level in this tank is monitored on-line. Two distinct 
sensor signals, i.e., (1) LH (level high) and (2) LL (level low), are sent to a programmable 
logic controller (PLC) to actuate the control valves (V-1 and V-2) on the outlet and inlet lines 
respectively. Under the assumptions that the initial liquid level in tank is low and V-1 and V-
2 are at the close positions initially, a sequential function chart can be constructed to 
represent the needed cyclic operating procedure (see Fig. 2). Notice that iS  ( 0,1, 2i = ) and 
jT  ( 1, 2,3j = ) denote the operation steps and the activation conditions of these steps 
respectively. The automaton representation of every component under normal operating 
conditions is briefly described in the sequel: 

Figure 1: A simple liquid storage system (Example 1). 
Figure 2: Sequential function chart of the operating procedure in Example 1. 
 The automaton model of valve V-1 is presented in Fig. 3. States 1V C  and 1V O  are used 
to represent the close and open positions respectively, while the transitions 1openV  and 
1closeV  denote the corresponding close-to-open and open-to-close processes. From 
Figure 2, it is clear that these two events are triggered by the control actions in operation 
steps 2S  and 1S  respectively. On the other hand, the transitions 1V Ccon  and  
1V Ocon represent V-1 continues at close and open positions respectively. A similar 
model can be built for V-2 with the same approach. 
Figure 3: Discharge valve model (V-1) (Example 1).
785
Proc. of the 5th International Symposium on Design, Operation and Control of Chemical Processes
model in a similar fashion in the latter scenario. Notice also that the same approach can be 
adopted to characterize the failures of V-2. As another example, if the fault origin of tank 
leakage is to be considered in this system, then the tank model associated with outlet pipeline 
in Fig. 5(a) should be replaced with Fig. 8. The abnormal tank states here, i.e., _LH leak  and 
_LL leak , represent “leakage occurs while level high” and “leakage occurs while level low” 
respectively. It should be noted that the “level-low-to-level-high” process is not allowed 
when tank leakage occurs. Finally, the normal tank model in Fig. 5(b) should also be 
modified with the same approach. 
Figure 7: Revised valve model for V-1 that contains additional failure modules. 
Figure 8: Revised tank model associated with pipeline P-1 that contains an 
additional failure module (tank leakage).
The aforementioned component models can then be combined to create the system 
automaton by applying the standard parallel composition operation. A diagnoser can then be 
constructed [Sampath et al., 1995; 1996] according to the system model and the
corresponding diagnostic performance can also be assessed properly. 
3. PERFORMANCE MEASURES 
The overall diagnostic performance of a batch monitoring system can be characterized in 
terms of Shannon entropy [Shannon, 1948]. In particular, the degree of diagnostic uncertainty 
associated with the i-th observable trace in diagnoser can be written as
, ,
1
log
FO
iN
i i j i j
j
H p p
=
= −∑
                                                   (1) 
787
Proc. of the 5th International Symposium on Design, Operation and Control of Chemical Processes
operation steps which are not specified in the SFC. The diagnostic performances obtained by 
implementing various different combinations of these measures are also presented in detail in 
Table 1. For example, notice that the number of fault propagation paths can be increased to 5 
under the condition that the liquid level L and the flow rate in pipeline P-1 are both measured 
on-line (see the 3rd cell of Case 1-1).  The 2nd row in this cell means that (1) there are four 
different hidden scenarios which result in the same observable path, and (2) the occurrence of 
F2 is certain while F3 and F5 may or may not exist. From these results and those presented 
on other cells, it can be clearly observed that the diagnostic performance of the batch storage 
system can be dramatically improved with these two approaches. 
5. APPLICATION 
In order to demonstrate the effectiveness and feasibility of the proposed assessment 
approach, two realistic examples are presented in this section. The first is concerned with a 
three-tank storage system, while the second involves a beer filtration plant.
5.1 Example 2- A three-tank storage system 
Let us consider the three-tank storage system in Figure 9. Pipeline P-1 is the inlet 
pipeline of tank T-1 and its flow is controlled with valve V-1. The outlet pipeline of T-1 is P-
2, which is connected to a 3-way valve V-2, and pump Pu-1 is installed on P-2. When V-2 is 
at the position “ + ”, the fluid in P-2 will be transferred into pipeline P-3 and then tank T-2. If 
V-2 is at the position “ − ”, the fluid in P-2 will flow into pipeline P-4 and enter tank T-3. 
Valve V-3 is used to discharge the material in tank T-2, while V-4 is for T-3. Tank T-1 has a 
level sensor installed, and the sensor reports three conditions: (1) Level Low (LL); (2) Level 
Medium (LM); (3) Level High (LH). The level sensors on tanks T-2 and T-3 can be used to 
detect only two conditions, i.e., (1) Level Low (LL) and (2) Level High (LH). The operation 
steps and activation conditions of SFC are listed in Table 2 and Table 3 respectively. 
Table 2:  Operation steps in Example 2 
Operation Step Control Actions
S0 Initialization
S1 (1) Close V-3; (2) Close V-4; (3) Open V-1
S2 (1) Close V-1; (2) Switch V-2 to +; (3) Switch on Pump
S3 (1) Switch off Pump; (2) Switch V-2 to –; (3) Switch on Pump
S4 (1) Switch off Pump; (2) Open V-3; (3) Open V-4
Table 3: Activation conditions of the events in SFC of Example 2 
Symbol Conditions
T1 Start
T2 T1H
T3 T1M & T2H
T4 T1L & T3H
T5 T2L & T3L
789
Proc. of the 5th International Symposium on Design, Operation and Control of Chemical Processes
Table4: Diagnostic performances achieved inExample 2 
Case Extra steps Sensors Entropy Diagnosable Failures
L 0.4678 F1, F2, F7 
L+P-2 0.4669 F1, F2, F7 2-1 None 
L + P-5 (or L + P-1~P-6) 0.3593 F1, F2, F7 
L 0.3461 F1, F2, F7 
L + P-5 0.2373 F1, F2, F7, F8 
L + P-5 + P-2 0.2185 F1, F2, F4, F7, F8 
L + P-5 + P-3 0.2082 F1, F2, F7, F8 
2-2 
If controller stops at 
steps S2 and S3, 
steps S2 and S3
should be executed 
again respectively. L + P-5 + P-4 0.1922 F1, F2, F4, F7, F8 
5.2 Example 3- A beer filtration plant 
Let us next consider the beer filtration plant presented in Fig. 10 (Lai et al., 2007; Chung 
and Lai, 2008). This system consists of two Multi-Micro System filters (MMS-1 and MMS-
2), two buffer tanks (T-1 and T-2), a supply and collection system for the cleanser in pipe 
(CIP). Notice that the filtration process is operated with 16 double-disk piston valves (DV-1 – 
DV-16). Each valve can be switched to two alternative positions, i.e. OFF and ON, when DV 
is off, fluids in vertical and horizontal pipes flow separately; on the other hand, when DV is 
on, fluid entering the valve from vertical and horizontal pipes will mixed and then together 
flow out the valve [Lai et al., 2007; Chung and Lai, 2008].  

Figure 10: A beer filtration plant (Example 3). 
There are four different operations in this beer filtration process, i.e., filling, filtering, 
bottling and cleaning. The purpose of filling operation is to transport fresh beer from a source 
tank to the buffer tank T-1. In the filtering operation, the beer is transferred from tank T-1 to 
T-2 via filter MMS1 or MMS2. Clearly, the filtered beer in T-2 should then be moved to the 
bottling station in another material-transfer operation. The last operation in the plant is 
concerned with cleaning the fragments in which beer has been processed previously. It is 
assumed in this example that each fragment must be cleaned after it has been used for a 
791
Proc. of the 5th International Symposium on Design, Operation and Control of Chemical Processes
Table7: Diagnostic performances achieved inExample 3 
Extra step Sensors Entropy Diagnosable Failures 
Lʳ 0.7429ʳ Noneʳ
L + P-23 0.1269ʳ F1, F2ʳ
L + P-6C 0.1988ʳ F3ʳNone 
L + P-23 + P-6C 0.0941ʳ F1, F2, F3ʳ
6. CONCLUSIONS 
A systematic automata-based procedure is presented in this paper to design the on-line 
fault diagnosis systems for batch chemical processes. Specifically, this procedure consists of 
the following steps: (1) build a system automaton based on the given process flow diagram 
(P&ID) and operating procedure (SFC); (2) construct the corresponding diagnoser to evaluate 
the diagnosability of the given system; (3) implement the proposed performance 
enhancement strategies to select additional sensors and/or synthesize the diagnostic test 
procedures. The feasibility and effectiveness of this proposed methodology have been 
confirmed with extensive case studies. 
ACKNOWLEDGEMENTS 
The authors gratefully acknowledge the financial support provided to this study by the 
National Science Council, Taiwan (Grant number NSC 98-2221-E-006-045-MYZ). 
REFERENCES 
1. Chang S. Y., Lin C. R. and Chang, C. T. A Fuzzy Diagnosis Approach Using Dynamic 
Fault Trees. Chemical Engineering Science, 57(15), 2971-2985, 2002. 
2. Sampath M., Lafortune S., Sinnamohideen K. and Teneketzis D. Diagnosability of 
discrete-event systems. IEEE Transactions on Automatic Control, 40(9), 1555-1575, 
1995.  
3. Sampath M., Sengupta R., Lafortune S., Sinamohideen K. and Teneketzis D. Failure 
diagnosis using discrete-event models. IEEE Transactions on Control Systems 
Technology, 4(2), 105-104, 1996. 
4. Benveniste A., Fabre E., Haar, S. and Jard, C. Diagnosis of asynchronous discrete-event 
systems: A net unfolding approach. IEEE Transactions on Automatic Control, 48(5), 
714-727, 2003. 
5. Qiu W.B. and Kumar R. Decentralized failure diagnosis of discrete event systems. IEEE 
Transactions on Systems Man and Cybernetics Part A-Systems and Humans, 36(2), 384-
395, 2006.       
6. Sampath M.; Lafortune S. and Teneketzis D. Active diagnosis of discrete-event systems. 
IEEE Transactions on Automatic Control, 43(7), 908-929, 1998.    
7. Shannon C. E. A Mathematical Theory of Communication. The Bell System Technical 
Journal, 27, 379–423, 623–656, 1948. 
793
The 13th Asia Pacific Confederation of   APCChE 2010 
Chemical Engineering Congress  October 5-8, 2010, Taipei 
 1
Automatic Generation of Supervisory Controllers for Batch Operations 
 
Ming-Li Yeh, and Chuei-Tin Chang* 
 
Department of Chemical Engineering 
National Cheng Kung University, Tainan, Taiwan 
 
*Corresponding Author’s E-mail: ctchang@mail.ncku.edu.tw 
 
Keywords: Supervisory Controller; Batch Process; Discrete-Event System; Automata. 
 
 
Abstract 
 
Supervisory controller synthesis has always been considered as an important design issue for the 
batch chemical processes. An automaton based procedure is developed in the present study to 
automatically generate a reliable supervisor for any given batch operation. Specifically, two distinct 
automata must first be constructed to model the uncontrolled plant behaviors and the control 
specifications respectively.  The required supervisor can be synthesized by applying the parallel 
composition operation with these two models, and all alternative SFCs can then be enumerated 
accordingly. Two examples are presented in this paper to demonstrate the feasibility and correctness 
of the proposed approach.  
The 13th Asia Pacific Confederation of   APCChE 2010 
Chemical Engineering Congress  October 5-8, 2010, Taipei 
 3
3. Supervisor Synthesis 
The supervisor synthesis procedure consists of four general steps: (1) building the automaton 
models of all components in the uncontrolled plant, (2) constructing automata to represent the control 
specifications, (3) combining all automata created in steps (1) and (2) to create a supervisor candidate 
with the standard parallel composition operation [Cassandras and Lafortune, 1999], and (4) making 
sure that at least one supervisor-generated trace is both non-blocking and controllable with the well-
established algorithms developed by Lafortune and Teneketzis [2000]. 
4. Control Specifications 
The control specifications can be classified into two types, i.e., (1) the desired (or undesired) 
event sequences in the major unit operations and (2) those concerning sensors and/or actuators. The 
latter specifications can be further divided into two groups, i.e., 
1. Maintain/disallow a prescribed sequence of actuator actions. 
2. Activate/forbid a prescribed sequence of actuator actions upon observation of a specific 
sensor measurement. 
Notice that both types of control specifications require realizing or prohibiting a given event sequence. 
Various automata can be constructed to achieve this goal:  
 The automaton in Figure 1(a) can be used to stipulate a desired event sequence. 
 The automaton in Figure 1(b) is used to represent event repulsion. Specifically, events ao  
and bo  are not allowed to occur simultaneously. Notice that events ac  and ao , as well as 
bc  and bo , may represent operations that alter the state of a two-state equipment, such as 
closing and opening switches, valves, pump, and so forth.  
Finally, the second Type-2 specification can be captured with the general model presented in Figure 
1(c). Notice that the action events, i.e., 'a , 'b  and 'c , etc., can only occur after the condition events, 
i.e., a , b  and c , etc., respectively in this automaton. 
                                                   
                                      (a)                                        (b)                                             (c) 
Figure 1: General specification models for (a) desired event sequence; (b) event repulsion; (c) 
condition-action restriction. 
 
5. Enumeration of Sequential Function Charts 
After generating a supervisor automaton, the corresponding SFCs can then be enumerated 
accordingly. The following steps should be taken: 
1. The events in the supervisor should be classified into two sets, namely, CE  and AE , which 
are associated with the activation conditions and actuator actions respectively;  
2. A reduced supervisor can be produced by grouping the actuator actions (i.e., the events in AE ) 
between activation conditions (i.e., the events in CE ) and vice versa.  The grouped actuator 
actions or activation conditions are treated as simultaneous events;  
3. All possible SFCs can be indentified by enumerating the traces generated from the reduced 
supervisor. 
The 13th Asia Pacific Confederation of   APCChE 2010 
Chemical Engineering Congress  October 5-8, 2010, Taipei 
 5
 
        (a)                  (b)                    (c)                    (d)                        (e)                   (f)              (g) 
Figure 3: Component models for Example 1: (a) V-1 ;(b) Heater; (c) Liquid temperature; (d)(e) 
Liquid level; (f) Level sensor; (g) Temperature sensor. 
 
 Control Specifications: 
The following six specifications can be characterized with the automata given in Figures 4(a) –
4(f) respectively.  
Spec 1: Fill the tank after liquid level reaches LH  and start discharging operation after level  is at LL . 
Spec 2: Switch off the heater when the liquid temperature is at TH  and switch on the heater when this 
temperature is at TL . 
Spec 3: Avoid heating unless the liquid level is at LH .  
Spec 4: Avoid opening both valves simultaneously. 
Spec 5: Avoid draining before heating is done.  
Spec 6: Avoid closing V-1 before liquid temperature is at TL .  
 
 
(a)                                    (b)                   (c)                   (d)                         (e)                     (f) 
Figure 4: Specification models for Example 1: (a) Spec 1; (b) Spec 2; (c) Spec 3; (d) Spec 4; (e) 
Spec 5; (f) Spec 6. 
 
Table 1: Operation steps in SFCs for Example 1. 
Operation 
Step 
Control Actions 
(SFC 1) 
Control Actions 
(SFC 2) 
Control Actions 
(SFC 3) 
Control Actions 
(SFC 4) 
Control Actions 
(SFC 5) 
Control Actions 
(SFC 6) 
Control Actions 
(SFC 7) 
S0 Initialization Initialization Initialization Initialization Initialization Initialization Initialization 
S1 
(1) Close V-1 
(2) Open V-2 
(1) Close V-1 
(2) Open V-2 
(1) Close V-1 
(2) Open V-2 
(1) Close V-1 
(2) Open V-2 
(1) Close V-1 
(2) Open V-2 
(1) Close V-1 
(2) Open V-2 
(1) Close V-1 
(2) Open V-2 
S2 Switch on Heater Switch on Heater Switch on Heater 
(1) Switch on Heater 
(2) Close V-2 Switch on Heater 
(1) Switch on Heater 
(2) Close V-2 Switch on Heater 
S3 
(1) Switch off Heater 
(2) Close V-2 
(1) Switch off Heater 
(2) Close V-2 Switch off Heater Switch off Heater 
(1) Switch off Heater 
(2) Close V-2 
(3) Open V-1 
(1) Switch off Heater 
(2) Open V-1 
(1) Switch off Heater 
(2) Close V-2 
(3) Open V-1 
S4 Open V-1 Open V-1 
(1) Close V-2 
(2) Open V-1 Open V-1    
 
The 13th Asia Pacific Confederation of   APCChE 2010 
Chemical Engineering Congress  October 5-8, 2010, Taipei 
 7
The automaton representations of plant components are omitted in this paper since they can be 
built with the the same approach mentioned in Example 1. On the other hand, the control 
specifications can be described as follows: 
Spec 1: Any actuator action can be taken after the occurrence of a specific event in tank T-1, e.g., 
open V-1 after 1T Lcon .  
Spec 2: Any actuator action can be taken after the occurrence of a specific event in tank T-2, e.g., 
open V-1 after 2T Lcon .  
Spec 3: Any actuator action can be taken after the occurrence of a specific event in tank T-3, e.g., 
open V-1 after 3T Lcon .  
Spec 4: Any actuator action can be taken before or after the events 1T Lcon  and 3T Hcon  are both 
realized, e.g., open V-3 after both 1T Lcon  and 3T Hcon  occur. 
Spec 5: The actuator actions of opening V-3 and switching off pump must be executed in one of the 
following two scenarios: (1) These actions are taken consecutively between the events  
1T Lcon  and 2T Lcon ; (2) These actions are taken respectively before and after the events 
1T Lcon  and 2T Lcon  are both realized.  
Spec 6: Avoid opening V-3 before opening V-1. 
Spec 7: Avoid opening V-4 before opening V-1.  
Spec 8: Avoid closing V-3 before switching off pump. 
Spec 9: Avoid opening V-4 before switching off pump. 
Four (4) different SFCs can then be identified accordingly. The operation steps and activation 
conditions of these SFCs are listed in Table 3 and Table 4 respectively. Notice that there are six 
activation conditions in every SFC. In addition, five operation steps can be identified in  1SFC  and 
 2SFC , whereas only four are needed in  3SFC  and  4SFC .  
Table 3: Operation steps in SFCs for Example 2 
Operation 
Step 
Control Actions 
(SFC 1) 
Control Actions 
(SFC 2) 
Control Actions 
(SFC 3) 
Control Actions 
(SFC 4) 
S0 Initialization Initialization Initialization Initialization 
S1 
(1) Close V-3 
(2) Close V-4 
(3) Open V-1 
(1) Close V-3 
(2) Close V-4 
(3) Open V-1 
(1) Close V-3 
(2) Close V-4 
(3) Open V-1 
(1) Close V-3 
(2) Close V-4 
(3) Open V-1 
S2 
(1) Switch on pump 
(2) SwitchV2 to + 
(3) Close V-1 
(1) Switch on pump 
(2) SwitchV2 to + 
(3) Close V-1 
(1) Switch on pump 
(2) SwitchV2 to + 
(3) Close V-1 
(1) Switch on pump 
(2) SwitchV2 to + 
(3) Close V-1 
S3 SwitchV2 to - SwitchV2 to - SwitchV2 to - 
(1) SwitchV2 to - 
(2) Open V-3 
S4 
(1) Switch off pump 
(2) Open V-4 
(1) Switch off pump 
(2) Open V-3 
(1) Switch off pump 
(2) Open V-3 
(3) Open V-4 
(1) Switch off pump 
(2) Open V-4 
S5 Open V-3 Open V-4   
 
Table 4: Activation conditions in SFCs for Example 2 
Symbol 
Conditions 
(SFC 1) 
Conditions 
(SFC 2) 
Conditions 
(SFC 3) 
Conditions 
(SFC 4) 
T1 Start Start Start Start 
T2 T1H T1H T1H T1H 
T3 T1M & T2H T1M & T2H T1M & T2H T1M & T2H 
T4 T1L & T3H T1L & T3H T1L & T3H T1L & T2L & T3H 
T5 T3L T2L T2L & T3L T3L 
T6 T2L T3L   
行政院國家科學委員會補助國內專家學者出席國際學術會議報告 
                                                   100 年   5月   19日 
報告人姓名  
張玨庭 
 
服務機構 
及職稱 
 
國立成功大學化工系教授 
 
時間 
會議 
地點 
May 8-11, 2011 
Florence, Italy 
本會核定 
補助文號 
NSC 98-2221-E-006-045-MY2 
 
會議 
名稱 
 (中文) 『第十屆化學及程序工程國際研討會』與『第十四屆以節能減污
為目標之程序整合、建模及最適化技術國際研討會』聯合會 
 (英文) Joint Conference of ICheaP-10 (10th International Conference on 
Chemical & Process Engineering) and PRES`11 (14th International 
Conference on Process Integration, Modeling and Optimization for 
Energy Saving and Pollution Reduction) 
發表 
論文 
題目 
 (中文) (1) 以數學規劃方式決定多管道多層次保護系統之最佳硬體結構
及維修策略 
        (2) 多污染物用水網路的演化設計方法 
 (英文)  (1) A Mathematical Programming Approach to Generate Optimal 
Configurations and Maintenance Policies of Multichannel 
Multilayer Protective Systems 
         (2) Evolution of Water-Using Networks with Multiple Contaminants  
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
11. Process industries 
12. Production and properties of materials 
13. Thermodynamics and interfacial phenomena 
在另一方面，PRES的會議主題為: 
1. Process integration for sustainable development 
2. Energy saving technology  
3. CO2 minimisation and mitigation 
4. Combined heat & power, combined cycles  
5. Heat exchangers as equipment and integrated items 
6. Integration of renewables, biomass and energy 
conversion technologies  
7. Integrated and multifunctional operations 
8. Operational research and supply chain management 
9. Pulp & paper  
10. Clean technologies - Low emissions technologies 
11. Sustainable processing and production  
12. Waste minimisation, processing and management 
13. Thermal treatment of waste including waste to 
energy 
14. Batch processes 
15. Dynamic, flexible and sustainable plant operation 
16. Industrial & experimental studies  
17. Industrial application & optimal design  
18. e-learning, e-teaching and e-knowledge  
19. CFD and numerical heat transfer  
20. Sustainable biofuel production  
ICheap 與 PRES 在同一會場同一時段舉行，一般而言，在週一及週
二的會期中每天上、下午皆會安排總共六個平行系列各兩場次的口頭論
文發表，而每場中約有四至五篇 20 分鐘的演講，週三安排大致相同，
唯會期則在中午就結束。星期一、二下午(3:40pm - 4:40pm)是壁報論文
展示時間，唯一的 plenary lecture被安排在星期日下午 4:45pm - 6:00pm，
多數 Keynote會在平行議程的第一個(40分鐘)，但並非每場皆有。本人
INDIVIDUAL PLANTS AT A LARGE DAIRY FACTORY;   
4. Picon-Nunez M., et al., DESIGN OF COOLERS FOR USE IN AN 
EXISTING COOLING WATER NETWORK; 
5. Medina H., et al., RISK-BASED INSPECTION AND ITS 
APPLICATION TO THE OPTIMIZATION OF CHEMICAL 
PLANTS; 
6. Moreno-Benito M., and Espuna A., FACING NEW PRODUCTS 
DEMAND THROUGH SIMULTANEOUS STRUCTURAL AND 
OPERATIONAL DECISIONS IN THE DESIGN OF THE 
CONTROL RECIPE; 
7. Sule Z., et al., OPTIMAL DESIGN OF SUPPLY CHAINS BY 
P-GRAPH FRAMEWORK UNDER UNCERTAINTIES; 
8. Hegyhati M., et al., COMBINATORIAL APPROACH TO 
ADDRESS BATCH SCHEDULING PROBLEMS WITH LIMITED 
STORAGE TIME; 
9. Poplewski G., STRUCTURE OPTIMIZATION METHOD FOR 
FLEXIBLE WATER USAGE NETWORK WITH MANY 
CONTAMINANTS; 
10. Tudor R., and Lavric V., ENERGY SAVINGS VS. FRESHWATER 
CONSUMPTION WHEN OPTIMIZING TOTAL WASTEWATER 
NETWORKS;  
11. Nemet A., and Klemes J.J., OPTIMISING THE TEMPERATURE 
OF HEAT STORAGE TO SERVE PROCESSES WITH VARYING 
SUPPLY AND DEMAND - CAPTURED SOLAR ENERGY 
CURVE; 
 
三、 建議： 
除了系 ICheap/PRES系列研討會以外，歐洲的 ESCAPE, 美國的
FOCAPO、FPCAPD及 CPC系列，三年一次的世界 PSE研討會，兩年
一次的亞洲 PSE研討會（2010年的 PSEAsia在新加坡舉行），都是以『程
序系統工程』為主題且相當具水準的國際研討會，建議國內有興趣從事
相關研究的學者及工業界人士參加。另外，由國際自動控制聯盟(IFAC)
國科會補助計畫衍生研發成果推廣資料表
日期:2011/08/05
國科會補助計畫
計畫名稱: 以自動機模式為基礎之批次製程線上失誤診斷方法
計畫主持人: 張珏庭
計畫編號: 98-2221-E-006-045-MY2 學門領域: 程序工程
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
無 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
