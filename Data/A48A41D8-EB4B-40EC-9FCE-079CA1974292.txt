讓個別企業可針對自己的需求來設計最佳
的產品開發流程，並透過 BPM(Business 
Process Management)的工具來對流程進行
管控。 
三、動態環境中的流程建立 
本計畫主要提出因應企業間協同開發產品
時的動態設計改變，以及彈性反應企業與
外部資訊流互動的資料模型以及資訊系統
架構。此計劃探討的動態設計變更，著重
於所要變更之資料是否能與原來的資料做
正確銜接與交換。本期所著重的目標是發
展出可行及有效的方法，幫助企業快速建
立作業流程並能隨著環境改變而迅速變
換，並確保資料的無誤與有效。 
在資訊系統方面，整體架構是以 SOA 
為骨幹，參考 IBM SOMA (Service oriented 
modeling and architecture)九個層次的設
計，最外層(第五層)是提供使用者看到展現
的部份，如：Portlets、JSP，用戶介面等。 
第四層是通過SOA架構編排出來的業務流
程，它是通過服務(第三層)的串接和編排形
成的各種服務流程。業務流程由各種各樣
服務組成的，這些服務是由服務元件(第二
層)來實現的，這些服務元件的功能(第一層)
可以重用既有的服務元件，也可以對既有
系統的服務進行封裝成為一個新的服務，
或者利用 OOAD 的方法開發出全新的服務
元件[3][4]。亦即可以從網路服務中找出所
需的服務並加以串連為新的服務設計，而
此新的設計又可當作是網路服務而被其它
需求者所使用，這些服務皆具有被可重複
使用的特性。 
產品開發會依據客戶需求來進行客製
化設計，因此現有流程需要具有靈活性，
以便應付各種客戶需求。另一方面也考慮
在概念設計流程中的執行方式常有變化且
不容易管理，所以選定針對概念設計流程
進行優化。 
 當原有設計變更時，系統必須能有效
進行相對應的變更，因此必須開發一個動
態設計改變機制，此機制包含的相關議題
有動態更改流程，串接流程，以及更改與
串聯設計時的資料協調等。在動態拆解部
份，系統必須對於變更後的設計作出相對
應的調整，並依據變更後的設計管理相關
的設計，並協調相互的資訊交換。本計畫
所提的資料模型必須能因應動態設計改變
而包含所需的資料，並且能進行自動比對
與辨識。 
 
圖 1、建立服務的流程 
 
本研究認為為了滿足產品開發流程的
需求而發展與建立流程所需要的服務，採
用 BPM 與 SOA 的概念改善現有流程並尋
找適合的服務。企業流程的基本目的是為
了解決營運所重視的問題。因此本研究採
用圖 1 所建議的方式[1]，從產品開發最重
視的幾個問題中找出核心要素，然後利用
這些核心要素尋找概念性的服務，再發展
出可能的服務並加以分析，以建立可供此
產品開發流程使用之服務。 
首先透過訪談和使用者共同找出產品
開發所面臨與急需要解決的問題，並且研
究這些問題的本質，分析出這些問題所要
解決的核心要素，如：市場、品質、成本
等。核心要素之間的關聯與組合，可藉由
網路圖的方式來表達如圖 2 所示。並從網
路圖中的路徑來分析與挑選適當的核心要
素組合，此路徑可由上往下或由下往上用
以找出較佳的組合。從較佳的要素組合
中，運用決策樹的方式來推導出對應的解
決方案，如圖 3 所示。 
企業可在不同的營運或業務層次中運
用此流程來分析與設計所需的服務，從最
高層次包含整個流程的服務開始，由上往
2 
服客戶該設計符合其需求。一旦客戶接受
設計，則進行最終規格定義。最終規格定
義主要是定義模組的功能，以及模組功能
所需之規格定義，定義過後會有模組功能
規格這份文件產出。 
    第七階段則會依據客戶前面所開出的
需求以及設計出來的產品來定義之後成品
的檢驗標準。成品檢驗方式主要會先去對
客戶的需求來定義檢驗的標準，當標準出
來以後便開始根據不同的項目製作不同的
查核表與危險防範說明書，最後就會有設
備工業安全查核表，危險防範說明書，設
備作業安全需求查核表三份文件。 
第八階段則由 PM 將前面所有階段所
產出的文件整合成一份設備研究開發計畫
書，之後提交到第一次審查會議。 
對於異質資料交換方面，在本計畫所
提出的架構中，舉凡代理人之間的溝通與
協調、網路服務的串接甚至是設計的串
接，皆牽涉資料的傳遞與解析，而傳遞資
料的型態包括 XML 文件、參數以及 JAVA
定義的物件等。由於 XML 為一種描述資料
的語言，將資料與內容呈現分離，故常被
企業用來作為資料交換的媒介。由於本系
統將會頻繁的傳遞 XML 資料，因此將異質
資料交換功能著重於 XML 資料的對映。 
在找出核心要素之後，藉由考慮核心
要素的重要順序來建立主要的服務，核心
要素的模型如圖 5，經與個案公司高階主管
討論之後，產出核心要素路徑。在核心要
素路徑中 (A)是高階主管所要達成的節
點，但這是較難達成的最終節點，所以我
們將其定義為概念服務的 hot spot。與個案
公司高階主管討論過後，決定暫時不考慮
市場這個核心要素，而最後選定的節點為
(B)。本研究認為節點(B)為較易達成的節
點，因此將其定義為概念服務的 sweet 
spot，並建議以節點(B)所代表的核心要
素：品質與時間，來做為所要建立服務的
核心要素。 
本研究將核心要素「品質與時間」列為
決策樹的節點並建立概念服務的決策樹如
圖6，並以此找出具有此要素特徵的概念服
務。在發展細部服務後，本研究依據PM與
TQM的精神，認為必須在原流程加入決策
與確認的服務機制，以免在進行分析之後
無法即時察覺錯誤，而造成時效的延誤與
開發成本的浪費。但是，若加入過多的決
策與確認機制則會增加過多的人力以及延
長專案完成時間，所以決定在原流程中有
關評估與分析的相關作業之後加上決策與
確認機制。 
原流程中共有四個評估與分析的相關
作業，分別是設備可行性評估、規格分析、
概念評估分析與系統性能評估，因此建議
在原流程之中加入四個決策與確認機制如
圖 7 所示。 
依據前面所提的流程，所要建立的資訊
系統架構如圖 8 所示。本研究使用的系統
軟體是以 IBM 的系統為主，資訊系統的建
構分別運用 Business Modeler、WebSphere 
Integration Developer(WID) 、 WebSphere 
Service Registry and Repository(WSRR)、
Process Server 與 DB2。 
先以 Business Modeler 來建立相關的
Business Process，然後模擬這個流程來判
斷此流程是否符合顧客與系統的需求。之
後再將 Business Process 匯入至 WID，並產
生適合此流程的 BPEL 如圖 9 所示。流程
中所用的服務，可以自行利用 WID 來建置
所需要的 Web Service 或是利用 WSRR 上
所提供的 WSDL 來使用的現有 Web 
Service。當 Web Service 建立完成後便將其
登錄到WSRR上以及發佈至 Process Server
以提供服務給使用者。而使用者可以透過
Process Server 的 UI 來連上 Process Service
來進行流程管理。而 Process Service 也會
連結到 DB2 以供存取所需服務的資料。 
 
五、結論 
本計畫整理出相關結論如下： 
1. 本計畫主要提出因應企業間協同開發
產品時的動態設計改變，所要變更之
資料是否能與原來的資料做正確銜接
與交換。 
2. 本研究運用SOA的概念改善現有流程
並尋找適合的服務，提出可行及有效
的方法及其流程，幫助企業快速建立
作業流程並能隨著環境改變。 
3. 本研究從最重視的幾個問題中找出核
心要素，然後利用這些核心要素尋找
概念性的服務，再發展出可能的服務
4 
  
 
 
 
 
 
 
 
 
 
圖 6、概念服務類型的推導 
 
 
 
 
 
 
 
 
 
 
 
 
圖 7、建議後流程圖 
Li
nk
R
eg
is
try
Im
po
rt
 
圖 8、資訊系統架構 
 
 
 出席國際學術會議心得報告 
                                                             
計畫編號 NSC 96-2221-E-033-009 
計畫名稱 建構在動態環境中的異質性資料交換系統(I) 
出國人員姓名 
服務機關及職
稱 
項衛中 
中原大學工業工程系助理教授 
會議時間地點 自 97 年 7月 12 日至 97 年 7 月 15 日 大陸昆明 
會議名稱 2007 International Conference on Machine Learning and Cybernetics 
發表論文題目 An Intelligent Matcher for Schema Mapping Problem 
 
一、 參加會議經過 
本人於七月十二日早晨搭乘班機離開台灣並於同日晚上抵達大陸昆明，大會已於當日正式開始，有機會與
來自美國、香港、英國與加拿大等國的學者談話與交換意見。第二天大會第一場主要講員針對 pattern 
recognition 的未來發展提出個人見解，第二場主要講員針對多媒體資訊的安全問題提出個人的研究心得，都具
有深刻的啟發與迴響。本次研討會共有 1542 篇投稿，並收錄了 750 篇，在同一時段內有六個場次同時進行，在
十三日有四個時段，十四日也有四個時段，十五日則有兩個時段。十三日下午本人張貼所發表的論文，並與參
與者溝通討論論文內容與研究方法，並聽取不同學者的報告，對自己的知識領域有很大的增長。大會於十五日
下午圓滿結束，本人由於機票的限制，一直等到十九日才赴昆明機場並於晚上飛抵台灣。 
 
二、 與會心得 
非常感謝國科會能提供機會與補助，讓本人有機會參與這次的國際性研討會，同時也藉此機會到國外參與盛
會，與國內外許多學者專家共同探討，使自己的研究能更上層樓。前往研討會發表研究成果也是一項不錯的體驗，
並且能夠了解當地的風土民情，如果還有機會，願意多參與國際性的研討會，提昇自己的研究視野。 
 
 operate on data schema information such as element names, 
data types and structures to generate matching suggestions. 
They have some advantages such as they operate only on 
schema and they run faster than learning-based ones. They 
work very well for certain types of applications. The main 
drawback of rule-based methods is that they do not operate 
on the data instances. A broad variety of rule-based 
techniques were developed and similarity flooding method 
is one of them.  
Similarity flooding (SF) method was proposed by 
Melnik, Garcia-Molina, and Rahm, and there are four major 
steps to find schema matching suggestions. In the first step, 
schemas of the source and target documents are 
transformed individually into the Object Exchange Model 
(OEM) format. OEM is a rooted, node- and edge-labeled 
directed graph, where each node and edge has a unique 
identifier [1]. The Pair-wise Connecting Graphic (PCG) is 
generated from the two OEMs in the second step to show 
all the possible matching candidates and their mutual 
relationships. The next step is to apply fixpoint computation 
method to compute each structure similarity value of every 
matching candidate. After certain cycles of computation, 
the structure similarity values may converge to certain 
constants, and then the computation cycles may stop. Based 
on the similarity results from the third step, the stable 
marriage algorithm is applied to find one-to-one matching 
suggestions which maximize the overall matching 
similarity.  
 
 
 
Figure 1. The flow chart of the similarity flooding method 
 
In order to illustrate the SF method, two XML 
schemas as the source and target documents are 
transformed into OEMs M1 and M2, and they are shown in 
Figure 2, 3, 4 and 5. As the example in Figure 2 and 3, the 
elements “Address” and “AccountOwner” in source schema 
should be matched with “CustomerAddress” and 
“Customer” in target schema individually. However, it is 
very hard to tell only by linguistic similarity of these 
elements, and the element “Address” could be matched to 
either “CustomerAddress” or “CAddress” linguistically. 
There are three types of components in the OEM: 
circle, rectangle, and edge. Circles are for identifications of 
elements, rectangles are for names of elements, and edges 
are for connections of elements. The label of edge defines 
the category or attribute of the element. Based on the SF 
method, rectangles with the same edge name should be 
qualified as a matching candidate in the PCG. In such a case, 
the node “Street” in the source OEM has an edge called 
“type”, and there are seven nodes with “type” edges in the 
target OEM; therefore there could be seven pairs of 
matching candidates for the node “Street” such as 
(M1.Street, M2.Street), (M1.Street, M2.City),etc. For this 
illustrated example, there are totally 462 matching 
candidates and only a small portion is shown in Figure 6. 
 
 
 
Figure 2. XML schema: source schema 
 
The edge in the graphs is denoted as (s, p, t), where s 
and t are the initial and terminal nodes of the edge, and p is 
the label of the edge. The similarity measure of the 
mapping candidate x and y is defined as σ(x,y), the value of 
σ is calculated on an iterative base, and σi is the similarity 
measure after ith iteration. The similarity of one mapping 
candidate (x,y) may propagate through directly connected 
nodes (au ,bu) and (av ,bv), and one contribution of this 
propagation is represented as w((au ,bu), (x,y)). The formula 
of computing similarity for i+1th iteration is defined as 
 
 approach is to use a fixed combination of simple methods 
and other hybrid methods to obtain more accurate matching 
results. The hybrid approach uses different match criteria 
(e.g., name and data type) within a single algorithm. The 
composite approach tries to flexibly combine the results of 
several independently executed matching algorithms to 
provide better matching candidates. Similarity flooding is a 
purely structure-oriented graph matching algorithm, and the 
location and relation of the matching candidate in the graph 
may affect the likelihood of matching. In this paper, an 
intelligent schema matcher combining linguistic similarity 
measure and similarity flooding method is proposed to 
increase the computation efficiency and matching 
performance. 
In this paper, linguistic similarity is computed based 
WordNet which is an electronic lexical database for English, 
where multiple senses (such as meanings of a word or 
expression) of words are put together into a hierarchy of 
synonyms [6]. Relations between elements of two schemas 
can be computed in terms of bindings between WordNet 
senses [5]. The linguistic similarity between two simple 
words ti and tj is computed as following: 
 
Jaccard’s coefficient =
ji
ji
tt
tt
U
I    (5) 
Two word sets T1 and T2 , and t1 and t2 are simple words in 
sets T1 and T2. The linguistic similarity between these two 
word sets T1 and T2 is defined as 
 
)6(
),(max),(max
),(
21
2121
21
22
11
11
22
TT
ttsimttsim
TTls Tt
TtTt Tt
+
⎥⎦
⎤⎢⎣
⎡+⎥⎦
⎤⎢⎣
⎡
=
∑∑
∈ ∈∈ ∈  
 
3. METHODOLOGY 
 
The basic idea of this intelligent method is to modify 
the pure structure-oriented algorithm with the linguistic 
similarity. The original similarity flooding algorithm 
considers all possible matching candidates based on the 
same edge name to construct the PCG. There are two 
possibilities to introduce linguistic similarity, one is setting 
σ0(x,y) with the linguistic similarity value of nodes x and y, 
the other is constructing PCG based not only on the edge 
name but also the linguistic similarity of nodes x and y. 
Using the example from Figure 3 and 4 to illustrate the 
second way, the node “Street” in the source OEM has an 
edge called “type”, and there are seven nodes with “type” 
edges in the target OEM; but there could be only one pair of 
matching candidate for the node “Street” as (M1.Street, 
M2.Street) with considering the linguistic similarity of 
nodes. After including linguistic similarity values as a 
primary filter to construct a simpler PCG, this step can 
reduce the effort of computing the similarity values of 
matching candidates from the simplified graph. 
The computations of linguistic similarity values 
between two nodes are illustrated in Figure 7. Any two 
node names are first compared to check if they are identical. 
If they are not identical, the linguistic similarity between 
these two names is computed based on Equation 4 for 
single word cases and Equation 5 for compound word cases. 
The relation between two words ti and tj is derived based on 
the WordNet database. The computation results are used in 
the intelligent matcher for further processing. 
 
Figure 7. Linguistic similarity computation 
 
The developing process of this matcher went through 
three stages. At first, the straightforward way is to set the 
initial similarity values of all the matching candidates from 
the linguistic computation results. In many cases, this way 
may improve the performance of schema mapping, but the 
computation time is increasing for adding linguistic 
similarity computations. The next stage is to include 
simplifying process of the PCG by eliminating 
linguistically unlike mapping candidates. This stage may 
reduce the nodes of PCG dramatically in many cases, using 
Figure 5 as an example, the node numbers reduce from 462 
nodes to 72 nodes. This elimination of nodes may reduce 
the computation time dramatically but the mapping Recall 
also decreases in many cases. The third stage is to improve 
the mapping performance by using one more mapping 
process, and a second mapping process is applied to find 
more mapping suggestions from the linguistically unlike 
matching candidates. This stage may slightly increase the 
 
