formulation) to convert from a subdomain into mathematical 
representation.  3) coupling method to couple different numerial 
methods.  4) performance-critical components: such as point-
searching, sparse matrix, linear equation solvers.  5) post-processing 
classes to export computation results to various formats.  CUDA is 
also used to implement hybrid computing technique to further 
enhance the perfomane of ESFM.  All the above-mentioned classes 
can eb easily extended and maintained owing to the use of object 
oriented analyses and design, as well as design patterns.  The 
coupling procedure developed helps to use the most suitable 
numerical method in different subdomains, and it helps to analyze 
problems with heterogeneous material properties.  Finally, it helps 
to implement essential boundary conditions for meshfree methods. 
This project conducts performance profiling to understand 
performance characteristics of ESFM.  Based on the profiling 
results, solutions to enhance performance of meshfree methods are 
proposed.  The framework is validated by using various problems, 
some with analytical solutions.  We believe our developed 
framework is of high quality, highly portable, easily manageable, 
and of high performance with general analyzing capabilities. 
 
 
I 
 
中文摘要 
本研究計畫目的在於發展高效能、易維護、易擴充的無元素力學分析程式之
架構，根據過去 20 年的無元素法研究之相關文獻，整合、分析無元素法通用流
程及基本要素，經過不斷的需求分析與調整，及效能剖析，已發展出一套可實現
多種無元素分析法、有限元素法及耦合分析的軟體架構 – ESFM。 
此架構包含了 20 多類的群組演算法，涵蓋 1) 無元素法基本要素，如近似函
數(approximation function)、基底函數(basis function)、權重函數(weight function)、
支撐領域(support domain)、邊界條件(essential boundary condition) 等；2)可擴充
的力學分析 Formulation，藉此實現其它力學分析法，如有限元素法等；3) 耦合
分析架構，可藉由多種演算法耦合不同的力學分析系統；4) 效能相關數值方法，
如鄰近點位搜尋演算法、稀疏矩陣儲存格式、稀疏矩陣求解等；5) 導入 CUDA
架構，透過 GPU 運算提升整體分析效能；6) 提供多種前後處理的方式，讓分析
模型建立更為方便及分析結果輸出的呈現；且藉由物件導向設計模式的架構設計
優勢，讓上述所函蓋的演算法可容易的擴充與實現相關類別。此外，本研究開發
子領域耦合的技術，可將不同分析領域耦合在一起進行運算，以 1)截長補短，在
不同分析領域內可選用最適合之分析方法、2)實現無元素法不同材質之分析運算、
3)亦使本質邊界條件可輕易地實現於無元素法中。  
研究計畫中剖析了 ESFM 分析效能，對整體分析效能提出改善及提升運算效
率的建議，並對二維及三維模型分析進行多種組合的驗證及多種模型的測試，已
確保 ESFM 軟體架構的品質及高效能分析能力。 
 
關鍵詞: 無元素法、軟體架構、耦合分析、效能剖析、運算效率 
 
  
III 
 
目錄 
 
中文摘要 .................................................................................................................................... I 
ABSTRACT .............................................................................................................................. II 
目錄 ......................................................................................................................................... III 
表目錄 ....................................................................................................................................... V 
圖目錄 ..................................................................................................................................... VI 
一、 前言及目的 ........................................................................................................... 1 
二、 文獻探討 ............................................................................................................... 2 
2.1 無元素分析法 ............................................................................................................ 2 
2.2 耦合分析 .................................................................................................................... 6 
2.3 物件導向設計模式及程式架構 .............................................................................. 12 
2.4 混合式運算應用 ...................................................................................................... 15 
三、 研究方法 ............................................................................................................. 16 
3.1 軟體架構之研析 ...................................................................................................... 16 
3.2 軟體工具 .................................................................................................................. 22 
四、 ESFM 軟體架構 .................................................................................................. 25 
4.1 需求分析 .................................................................................................................. 25 
4.2 系統架構 .................................................................................................................. 29 
4.3 耦合系統 ................................................................................................................... 36 
4.4 ESFM 主要操作程序 ................................................................................................ 37 
4.5 小結 .......................................................................................................................... 43 
五、 系統效能評估 ..................................................................................................... 44 
5.1 使用效能工具剖析 ................................................................................................... 44 
5.2 整體效能評估 .......................................................................................................... 47 
5.3 稀疏矩陣效能探討 ................................................................................................... 52 
V 
 
表目錄 
表 1 各種無元素法及其特色 (譯自 Liu, 2003) ........................................................ 5 
表 2  不同可能組合方式之無元素法 (Liu, 2005) ................................................ 14 
表 3  本研究使用之軟體工具 ................................................................................. 24 
表 4 運算平台架構 ................................................................................................... 47 
表 5  二維度案例節點及積分網格劃分組合 ......................................................... 48 
表 6  三維度案例節點及積分網格劃分組合 ......................................................... 51 
表 7  二維度稀疏矩陣效能評估案例節點及積分網格劃分組合 ......................... 53 
表 8  三維度稀疏矩陣效能評估案例節點及積分網格劃分組合 ......................... 53 
表 9  CRABS 稀疏矩陣儲存格式說明 .................................................................. 58 
表 10  二維度 CUDA CRABS 效能評估案例自由度及積分點數組合 ............... 61 
表 11  三維度 CUDA CRABS 效能評估案例自由度及積分點數組合 ............... 61 
表 12  二維線荷重模型 Domain1 及 Domain2 各邊的元素分割組合 ................. 65 
表 13  三維集中荷重模型 Domain1 及 Domain2 各邊的元素分割組合 ............. 66 
 
 
  
VII 
 
圖 35  二維案例稀疏矩陣佔整體分析比例 ........................................................... 54 
圖 36  三維案例稀疏矩陣的計算時間 ................................................................... 55 
圖 37  三維案例稀疏矩陣佔整體分析比例 ........................................................... 55 
圖 38  CRABS 稀疏矩陣儲存結構示意圖 ............................................................ 58 
圖 39  CUDA CRABS 方法 1 示意圖 ................................................................... 59 
圖 40  CUDA CRABS 方法 2 示意圖 ................................................................... 59 
圖 41  CUDA CRABS 方法 3 示意圖 ................................................................... 60 
圖 42  CUDA 加速 CRABS 類別圖 ....................................................................... 60 
圖 43  二維度 CUDA CRABS E=0 效能 ................................................................ 61 
圖 44  二維度 CUDA CRABS E=1 效能 ................................................................ 62 
圖 45  三維度 CUDA CRABS E=0 效能 ................................................................ 62 
圖 46  三維度 CUDA CRABS E=1 效能 ................................................................ 63 
圖 47  二維線荷重模型 ........................................................................................... 64 
圖 48  三維集中荷重模型 ....................................................................................... 65 
圖 49  二維有限元素分析與解析解之結果 ........................................................... 66 
圖 50  三維有限元素分析與解析解之結果 ........................................................... 67 
圖 51  二維無元素分析(EnrichRPIM)與解析解之結果 ....................................... 67 
圖 52  三維無元素分析(EnrichRPIM)與解析解之結果 ....................................... 68 
圖 53  二維無元素(EnrichRPIM)與有限元素耦合分析與解析解之結果 ........... 68 
圖 54  三維無元素(EnrichRPIM)與有限元素耦合分析與解析解之結果 ........... 69 
圖 55  二維 FEM、Meshfree 和 Coupling 分析總時間 ........................................ 69 
圖 56  三維 FEM、Meshfree 和 Coupling 分析總時間 ........................................ 70 
圖 57  視覺化前處理模型產生介面 ....................................................................... 71 
圖 58  無元素法要素可能混合出的組合 ............................................................... 72 
圖 59  EnrichRPIM 二維基腳分析垂直方向位移等值線圖 ................................. 73 
圖 60  EnrichRPIM 二維基腳分析垂直方應力等值線圖 ..................................... 73 
圖 61  三維基腳分析模型與網格示意圖 ............................................................... 74 
圖 62  EnrichRPIM 與 FEM 耦合分析三維基腳變形後 Z 方向位移 .................. 75 
圖 63  三維厚殼分析模型與網格示意圖 ............................................................... 76 
圖 64  EnrichRPIM 分析三維厚殼變形前後及節點位移向量 ............................. 76 
圖 65  EnrichRPIM 分析三維厚殼 Z 方向應力圖 ................................................. 77 
圖 66  多種材料性質模型 ....................................................................................... 77 
圖 67  視覺化後處理軟體結果展示圖 ................................................................... 78 
2 
 
二、 文獻探討 
2.1 無元素分析法 
無元素法 (meshless method) 為一新興的數值模擬方法。它與有限元素法一
樣具有廣泛的適用性，可適用於求解各領域不同問題的控制方程式 (governing 
equation)。無元素法相較於有限元素法有許多的優點，然而由於其在近似場之內
插上由於必須動態地計算節點之間的連結，也造成了其計算速度上相較於有限元
素法為慢。根據 Bathe (2001)，無元素法之計算速度與有限元素法比較較慢了 2-5
倍，可見以無元素法取代有限元素法仍有其現實上的困難。而其優於有限元素法
的地方，在於無元素法無需於計算求解前劃分「網格」(mesh) ，整個固體領域 
(solid domain) 內之近似場僅由節點 (node) 所建構而成，因此異於有限元素法以
元素構成近似場的方式，也因而無元素法擺脫了許多有限元素法先天上由於網格
的的限制所造成分析上困難的力學問題，例如大變形 (large deformation) 問題與
裂縫延伸 (crack propagation) 等問題。 
在無元素法之相關研究上，以下大致分為四個部份來介紹：1) 基本方法、
2) 邊界條件之處理、3) 與其它模擬方法的耦合、與 4) 無元素法之應用。 
1) 基本方法：無元素法最早可追溯到平滑顆粒流體動力學(SPH, Smoothed 
Particle Hydrodynamics, Lucy, 1977) 於天文物理學之研究，一直到 1990
年代後才有許多學者投入此一領域的研究而發展出許多無需網格之數
值模擬方法，如表 1 所示。而各方法之間最主要的差異在於 1) 近似場
函數與 2) 系統方程式之求取過程，也因為這些差異不同的方法分別有
其長處與短處。 
2) 邊界條件之處理：由於無元素法的場近似方法中如 MLS (Moving Least 
Square) 法不具有 Kronecker delta 性質，而造成了在加入基本邊界條件 
(Essential boundary condition) 或稱 Dirichlet 邊界條件時不像有限元素
般的直接，而必須特殊處理。而在此邊界條件的束制技巧上，根據
Fernandez-Mendez 與 Huerta (2004) 之研究，可分為兩大類：1) 針對 
weak form 進行修改，如使用 Lagrange Multiplier (Swegle et al. 1995)、
罰數法  (Penalty Method) (Liu et al. 1995a) 與 Nitsche’s method 
(Belytschko et al. 1994; Nayroles et al. 1998)；與 2) 針對內插函數進行修
改 (Babuska and Melenk 1997; Duarte and Oden 1995; Liu et al. 1997)。 
3) 與其它數值模擬方法的耦合：無元素法雖然相較於有限元素法如前所述
有許多的優勢，但有限元素法發展成熟、計算效率相對較高、且邊界條
件的束制上亦相當容易而直接，因此過去學者已提出將無元素法與有限
元素法耦合以結合兩者的優勢  (Attgway et al. 1994; Belytschko et al 
1995; Hegen 1994; Johnson 1995; Karutza et al. 2002; Li et al. 2003; Liu et 
al. 1995b; Liu et al. 1996)。而近年來更有學者提出動態耦合的技術 
(Karutza et al. 2002)，於執行分析時期動態決定分析區域中何處以有限
4 
 
i. 生醫工程類：虛擬手術 (virtual surgery) 之組織力學非線性模擬 
(Lim and De 2007)；骨骼軟組織損壞之模擬 (Ionescu et al. 2006) 
與骨骼力學之分析 (Doblare et al. 2005)。 
ii. 材料工程類：記形合金 (Shape memory alloy) 之模擬 (Liew et 
al. 2005)；材料中裂縫之生成與延展 (Rabczuk et al. 2007b; Song 
et al. 2006; Ishii et al. 2006)。  
iii. 機械工程類：金屬成型 (Alfaro et al. 2006; Kwon et al. 2005; 
Kim et al., 2001; Yoon and Chen 2002)；形狀最佳化設計 
(Lacroix and Bouillard, 2003; Zou et al.,2006; Zhang et al., 2005b)；
高速衝撞之分析 (Zhang et al., 2006)；水流與共軛熱傳導分析 
(Divo and Kassab, 2007)；平板中的彈性波傳分析 (Hu et al., 
2007)。 
iv. 加速計算：朱峻平(2003)透過改善搜尋演算法、形狀函數推導
理論及矩陣帶寬處理達到減少計算量，提升無元素法之效能。
周原仲(2004)、陳金印(2005)利用個人電腦叢集電腦系統進行無
元素分析法的平行運算，藉以加速計算速度。  
 
  無元素法因無須劃分網格，只考慮節點之間的連結關係，故可以有效解決有
限元素法因網格所造成之問題，比有限元素法具有更廣泛的適用性。特別是在各
新興的重要研究領域如奈米科技、生醫工程等常需要進行多尺度 (multi-scale) 分
析與大變形之模擬，此皆為無元素法優於有限元素法的應用領域。然而，由於其
運算過程中需進行動態的的節點連結，也因此相較於有限元素法需耗費更大量的
運算時間。因此，本研究之目的一即為同時從演算法與善用現代之運算設備等方
面來提升無元素法之計算效能。 
是故無元素法為近 10 年來國際上於計算力學的熱門研究課題，且目前已有數篇
綜合介紹無元素法的文章，可藉以瞭解比較各不同無元素法之異同處，如 Gu 
(2005)、Li and Liu (2002)、Belytschko et al. (1996)等等。以下七點為無元素法的
主要優點 (Li and Liu 2002)： 
1. 無元素法由於節點之間的連結是在計算時建立的，並可隨著計算的進行而
改變，因此可輕易地處理大變形問題； 
2. 無元素法相較於有限元素法可輕易地與電腦輔助設計之資料庫進行結合，
因為無元素法不需產生網格； 
3. 無元素法可輕易地處理元件的損傷分析 (例如裂縫之生成)，因此適合應
用於模擬材料破壞時的行為； 
4. 準確性相較於有限元素法較容易控制，因為在準確度需要加強的區域增加
節點即可提升準確度，而有限元素法則需要對網格進行修改與調整； 
5. 連體力學之無元素分析可模擬薄殼結構之大變形問題 (例如奈米碳管)； 
6. 無元素法可輕易進行多尺度 (multi-scale) 的分析，在大尺度中加入考量細
6 
 
2.2 耦合分析 
當分析問題遇到高梯度應力、應變問題時，若是使用傳統的有限元素法，則
必須經過細分網格才能夠得到較精確的解，但這個過程將會耗費大量的計算時間。
因此， Belytschko et al. (1995) 提出結合有限元素法與無元素法去針對問題區域
去做計算。結合此兩種方法的優點，進而使用無元素法針對高梯度應力、應變區
域做計算，這個過程將不需細分元素網格，即可將計算時間縮短，而在最短時間
內得到較精確的解。因此，如何有效的結合有限元素法與無元素法，成為本研究
重要課題之一。 
在探討如何最有效結合有限元素法與無元素法前，先藉由前人研究之成果，
瞭解各種耦合的施作方式，再藉由這些方法來擬訂本研究的耦合流程。因此，首
先將耦合介面整理成區域一(Ω1 )及區域二(Ω2) (如圖 1 所示)，其中不同區域將
分別以有限元素法或無元素法施作，因此本章節將以耦合施作方式的不同來做介
紹，並且稱其交界的介面為中間介面(Γ)(如圖 2 所示) (Puso and Laursen, 2003)，
接著定義該中間介面分別以兩種特別的形式做接合( Tian, R. and G. Yagawa , 
2007)，稱為完全接合(matching)與非接合(non-matching)(如圖 2 所示)。 
 
 
圖 1  耦合介面圖示 
 
 
圖 2  中間介面圖示(a)完全接合(matching) (b)非接合(non-matching) 
8 
 
 
圖 3  斜坡函數法耦合區域之定義 
 
 
 
 
2.2.1.2 其他 
 位移諧和法（不使用虛擬質點） 
Li (2003) 使用無元素法中的 FCM (finite cloud method)與邊界元素法 
(boundary element method, BEM)去對問題區域做分析，並且將區域分為三部分。
其一為 FCM，在該區域內及邊界上之質點，皆使用 FCM 的方式去做計算(圖 4
左側 F 區域)。其二為 BEM，將此區域內及邊界上之所有質點皆以 BEM 的方式
去做計算(圖 4 右側 B 區域)。其三則是介於 BEM 及 FCM 的中間介面(圖 4 中間
I 區域)，此介面上的質點同時擁有 FCM 與 BEM 的特性，因此利用此特性使用
FCM 方式去做計算，令計算出的位移結果必須與用 BEM 的方式計算的結果相等
(如下式所示)。其中 uI即為耦合區域的質點位移。 
uI = uI
B = uI
F = NûF 
 
10 
 
 
圖 5  以鄰近元素質點數決定 
 
圖 6  中間介面質點為均勻分布 
 
圖 7  中間介面質點為非均勻分布 
 位移諧和法（不使用虛擬質點） 
Tian 及 Yagawa (2007) 使用有限元素法與無元素法結合，將問題區域分成兩
大區域(如圖 8 所示)，並且定義兩區域之接合邊界為Γ12，在此接合邊界上的質
點皆以無元素方式做計算，因此在此邊界上之質點將會直接滿足下式之條件： 
12 
 
(u
FEM、uEFGM )相減趨近於零。並且定義一位移差異量 UERR 做為邊界位移諧和
差異之判斷式，如下式： 
𝑈𝐸𝑅𝑅 = ∫
2|𝑢𝐹𝐸 − 𝑢𝐸𝐹|
𝐿|𝑢𝐹𝐸 + 𝑢𝐸𝐹|
𝑑Γ𝐹&𝐸
𝐹&𝐸
 
 
 
圖 9  位移諧和法(使用虛擬質點)耦合區域之定義 
 
2.3 物件導向設計模式及程式架構 
本研究將使用物件導向模式發展ㄧ基於領域分解之通用力學分析程式之
軟體架構 (framework)，使其具有擴充性與發展性，透過此單一軟體架構即可
實現如 
表 2 所示的幾十種無元素分析法、有限元素法或混合多種分析方法。由
於不同數值方法有不同之特性與需求，因此如何整合各種數值方法於單一軟
體架構事實上有相當之困難性，必需各種數值方法有相當種度之掌握。而為
了要使本架構具有彈性擴充並最小化重複開發之工作，本研究將採用設計模
式 (design patterns) 協助本軟體架構之發展。 
Brian Foote (1992) 把物件導向軟體的生命週期分成雛型化 (prototyping)、
擴張 (expansionary) 及凝聚 (consolidating) 三個階段；從雛型化階段開始，
ㄧ直到軟體符合初步的需求後，軟體就會進入了擴張階段，此時軟體的演進
有新的需求出現時，常會受到兩種彼此衝突的力量左右：1) 軟體必須滿足更
多需求、2) 軟體必須可再被利用，為使軟體能夠持續演進，軟體必須施以重
構程序 (refactoring)，因此出現了軟體框架 (framework) 的觀念，驅使物件導
向軟體知道物件和類別結構避免ㄧ再重整，經由事前徹底的需求分析，得知
哪些需求容易變動，便可針對弱點補強。因此，1980 年代出現了設計模式 
(Design Patterns) 這個術語，由 Erich Gamma 等人從建築設計領域引導至計算
14 
 
表 2  不同可能組合方式之無元素法 (Liu, 2005) 
 
Formulation 
 
Interpolation 
/approximation 
schemes 
Strong-form 
(collocation) 
Galerkin 
weak-form 
Petrov- 
Galerkin 
Weak-form 
Weak-strong 
-form 
Least 
squares 
Boundary 
Integral 
Equation 
… 
MLS FPM EFG MLPG MWS-MLS ? BNM ? 
WLS 
Collocation 
GFDM 
? ? ? ? ? ? 
RBF(global) 
MFS 
collocation 
Galerkin 
method 
? ? ? ? ? 
PIM PPCM PIM LPIM ? ? BPIM ? 
RPIM RPCM RPIM LRPIM MWS-RPIM ? BRPIM ? 
Hermite-type 
interpolation 
/approximation 
PPCM 
RPCM 
? 
LPIM, 
LRPIM 
? ? ? ? 
SPH(RKPM) SPH, RKPM RKPM ? ? ? ? ? 
PU hp-cloud 
PUFEM 
hp-cloud 
? ? ? ? ? 
… ? ? ? ? ? ? ? 
?: yet to be developed or unknown to the authors or it may not be possible. 
 
  
16 
 
三、 研究方法 
  本研究主要著重於軟體架構之研析，並佐以不同之軟體開發、軟體組態管理、
以及軟體校能調校等軟體。以下將在 3.1 節介紹軟體架構開發之研究方法、並
在 3.2 節介紹所使用之軟體開發工具。 
 
3.1 軟體架構之研析 
本研究之整體研究架構如圖 1 所示，以領域分解(domain decomposition)力學
分析模式為核心架構，並分別由 1) 軟體架構、2) 數值分析方法、3) 加速運算、
4) 案例分析、以及 5) 前後處理，這五個方向來發展高效能無元素分析法之軟體
架構，並應用於測試案例中。 
 
圖 10  研究架構圖 
 
1) 軟體架構：本研究透過物件導向設計模式(object-oriented design patterns)
的輔助之下，設計規劃一整合性(整合圖 10 所有部份)通用力學分析程式
之軟體架構(framework) – ESFM (an Essential Software Framework for 
Meshfree methods)，架構詳細內容於第四章說明。藉由使用物件導向設
計模式的方式，使其具有擴充性與發展性，透過此單一軟體架構即可實
現如 
2) 表 2 所示的幾十種無元素分析法、有限元素法或混合多種分析方法。 
由於不同數值方法有不同之特性與需求，因此如何整合各種數值方法於
單一軟體架構事實上有相當之困難性，必需各種數值方法有相當程度之掌握，
因此在研究初期透過詳實的文獻回顧了解各種無元素分析方法，以充份掌握
軟體架構
領域分解
力學分析模式
加速運算
多核心系統
運算
GPGPU
數值分析
方法
前後處理
案例應用
無元素法
有限元素法
數值耦合
物件導向
設計模式
18 
 
統方程式、計算最小二乘法等已開發成熟之數學函式，藉此節省自行開發求
解數學系統的時間，並達高效能之運算。 
本研究透過領域分解(domain decomposition)的概念，將欲求解之領域分
割為數個子領域(subdomain)進行運算。分割為子領域有以下優點： 
i. 子領域內需處理的節點數量較小，且資料在電腦記憶體內之存放位置鄰
近，有助於協助電腦善用其階層式的記憶體架構(CPU 暫存器  第一階
快取記憶體  第二階快取記憶體  主記憶體)的特性而增進計算效
能。 
ii. 子領域分解後無論使用共享式記憶體架構或分散式記憶體架構之平行運
算機器皆可輕易地進行平行運算：同時針對各子領域分別進行運算後再
加以統合。 
iii. 個別子領域可使用不同的數值方法進行計算，亦即可混合無元素法、有
限元素法、甚至是邊界元素法等等進行計算，因此可針對不同的領域中
不同的特性選擇適用的數值方法。例如無限域問題適合使用邊界元素法、
應力梯度和緩處且有位移邊界條件束制處使用有限元素法、而高應力梯
度且具有大變形特徵處則使用無元素法。 
 
5) 加速運算：藉由使用軟體設計技巧與善用硬體資源等方式提升計算效能。近
年來電腦科技快速的發展，使得個人電腦價格越來越便宜，且運算效能也越
來越快。因此面對於需龐大計算能量之問題，在近代計算工程領域中的解決
方案，可透過 i. 平行運算 (parallel computation) 的技巧；ii. 圖形處理晶片
(GPU, Graphical Processing Unit) 的計算能力。其中透過叢集運算系統加速無
元素法分析效能之研究，目前已有一些學者開始探討。因此本研究在加速計
算方面將使用 GPGPU 運算技術進一步提升分析效率。 
如圖 11 所示，近年來個人電腦上之顯示卡圖形處理器(GPU, Graphics 
Processing Units) 的 運 算 能 力 突 飛 猛 進 的 發 展 ， 因 此 使 用
GPGPU(General-Purpose computing on GPU) 在計算工程領域中也逐漸成了
焦點趨勢，利用 GPU 之高效能浮點運算能力大幅加速計算之進行。在電腦遊
戲產業與電腦繪圖的推動下，自西元 2000 年顯示卡加入了可程式化的繪圖管
線，此舉不但大幅地提升了電腦繪圖的品質，更允許科學家與工程師更容易
地利用GPU來從事繪圖以外的計算工作，如矩陣求解 (Galoppo et al., 2005)。
圖 2 為近幾年 GPU 與 CPU 浮點運算的成長趨勢，由圖中可明顯看出 GPU 的
浮點運算能力已大幅超越個人電腦用之 CPU，2008 年 NVidia 的 GT280 GPU
其單精度浮點運算能力約 Intel Harpertown 3.2GHz CPU 九倍以上，且此差距
如預期的持續擴大。 
 
20 
 
v. 已整合的開發架構：由於 GPGPU 的興起，許多使用者透過 GPU
的高浮點運算能力來加速其計算效能，有鑑於此，NVIDIA 公司創
立了 CUDA (Compute Unified Device Architecture) 程式開發架構，
使用者可以使用熟悉的 C 語言程式使用在 NVIDIA 的 GPU 上進行
平行運算。對於使用者而言，無須深入瞭解 3D 電腦繪圖之繪圖管
線，也無須透過 OpenGL 或 Diret3D 此類的圖形函式庫，因此大幅
降低了使用 GPGPU 的障礙。 
vi. 能源需求較低：使用 GPGPU 運算，單一顆 GPU 所需耗費的電力
雖然不低，但相對於使用好幾台電腦之叢集電腦系統，其能源上之
使用相對低很多，因此在注重節約能源的現今，選擇較低能源消耗
且具高效能之運算系統，將是必然的抉擇。 
由以上可知使用 GPGPU 的技術可帶來許多效益，且提高運算能力。
NVIDIA的CUDA架構雖可使用C程式語言在NVIDIA的GPU上進行運算，
降低使用 GPGPU 的障礙，但實際上因 CPU 與 GPU 的架構為不同之設計，
也因此在使用 CUDA 架構應需考量適合於平行化計算之方式，才能避免平行
加速效能不彰的現象。因此如何使 GPU 提高力學分析運算效能上，為一值得
探討之問題。 
 
6) 案例分析：透過所開發出的力學分析軟體進行大地工程案例分析與探討，並
透過無元素法與有限元素法耦合分析，於應力變化較劇烈周圍之土體應用無
元素法，使用有限元素領域於相對低擾動之土體進行力學之分析，以及
GPGPU 硬體加速之技巧，使得可以獲得快速且準確的分析結果，期能降低使
用無元素分析模型的分析時間。 
由於大地工程在進行分析時，所較關注的區域往往在大地工程所考量的
分析模型中只佔一小部份，因此在較關注的區域使用無元素法，其他的區域
使用有限元素法，其耦合分析應用於大地工程問題上，有以下之優點而可準
確且快速求得結果： 
i. 得到較精確的結果：因使用無元素法於分析模型需考慮大變形等問
題的區域 (如圖 12 之 A 區)，避免掉網格過度扭曲造成在計算元
素積分時之不精確，或造成計算結果無法收歛，且更精確的得到可
靠的結果。 
ii. 減少使用者工作量：如圖 12 之 A 區，需考量高梯度應力與應變等
問題，如果使用有限元素分析，將遭遇到分析結果不精確或無法收
歛，若使用有限元素法改善此類的問題，可在前處理時將元素網格
細分至可得精確結果的程度，或使用網格調整法來進行分析，但兩
者皆需增加使用者在前處理或分析中之工作量；除此之外，有限元
素在面對複雜的幾何形狀模型時(如需考慮多個不規則介面、三向
度模型等)，為使網格能夠通過這些介面，網格將不易產生且可能
22 
 
之運算量的大小也相對降低，因而可節省許多計算資源。因此使用此方式進
行分析，如考量需使用無元素法的模型區域不大，則可發揮近似於有限元素
分析之計算效率。 
因此基於以上之優點，接續所發展的力學分析軟體架構，擴充領域分解
法之不同數值分析方法，藉此手段達到計算加速的目的，並同時使分析結果
具有準確性及可靠度，並以大地工程模型為範例，使用無元素法與有限元素
耦合之分析結果與使用無元素模型及有限元素模型之分析結果進行驗證，並
探討其分析效能上的差異。 
 
7) 前後處理：藉由設計完成之軟體架構進行前後處理程式(pre/post processing)
之開發，讓使用者易於建立分析之力學模型，並容易了解分析結果。 
前處理主要在建立分析模型的節點、網格等相關資料，以利後續分析之
使用，分析模型的產生方式可透過，i. 於所發展出的軟體架構下，擴充基本
模型的建立，此種方式可較容易的產生模型及彈性的修改模型資料；ii. 藉由
檔案讀取的方式載入分析模型，模型檔案的來源可藉由自行開發的模型產生
程式輸出或商業化之有線元素分析軟體的前處理程式產生，如藉由使用
ABAQUS的前後處理程式CAE產生模型輸出檔，再經由讀檔程式載入模型，
因此使用讀檔的方式則必須開發且使用特定格式的讀檔程式進行模型建立，
此種方式對於複雜幾何形狀的模型產生，可藉由模型產生器或前處理軟體輸
出，以減少自行開發模型的時間成本。 
本研究在分析後之資料的輸出及視覺化的呈現，主要輸出可被資料視覺
化繪圖軟體 Tecplot 360 軟體接受之檔案格式，並透過 Tecplot 360 加以呈現。
資料的輸出格式可藉由所發展出的軟體架構，根據需求進行擴充，如輸出
ParaView 的格式或其它自行開發後處理程式的格式檔案。 
 
3.2 軟體工具 
本研究為了開發正確、跨平台、高移植性、高效能之軟體架構，而使用了多
套軟體工具以達成目的，所使用之軟體工具綜整如表 3。 
由表中可知本研究使用了三套不同的 C++編譯器：1) 內含於 Visual Studio 
2010 內的 Microsoft C++編譯器、2) 具有 Windows 與 Linux 版本的 Intel C++ 
編譯器、以及 3) GCC 運行於 Linux 平台下之編譯器。而同時使用三套編譯器
的原因除了能開發可移植性 (portable) 運行於 Windows 與 Linux 之軟體架構
外，更重要的是不同的編譯器對於程式語法的嚴謹程度或是對於 C++標準的導循
程度不一，因此若所開發出來之軟體架構能無論使用那一個編譯器編譯出來的程
式皆能正確執行，代表其程式品質並嚴格導循了 C++之語言標準。 
由表 3 中亦可看到本研究使用了兩個記憶體除錯工具：Intel Parallel Studio 
以及 valgrind，以確所開發出來的 C++ 程式架構沒有記憶體存取問題且沒有記
憶體漏失 (memory leak) 的問題。C/C++ 語言最為人垢病的就是程式中指標與
24 
 
表 3  本研究使用之軟體工具 
分類 軟體名稱 說明 
商業套裝
軟體 
 
Comsol 知名之有限元素分析軟體，用來驗證所開發軟體分析之
數值解的正確性。 
Tecplot 360 知名之資料視覺化軟體，用於軟體運算結果之呈現、比
對。 
付費之軟
體開發工
具 
Microsoft 
Visual Studio 
2010 
在 Windows 平台下最常被使用之整合式開發環境，內
建編輯器、編譯器、除錯器、以及簡易之校能剖析器。
用於程式之撰寫、編譯、以及除錯。 
Microsoft Visio 在 Windows 平台下之繪圖軟體。主要用於製作軟體設
計之 UML (Unified Modeling Language) 圖形，以用來設
計並檢討軟體架構。 
Intel Parallel 
Studio/Vtune 
Intel 所提供之軟體開發工具，用於程式之校能剖析、記
憶體存取問題之除錯。 
Intel C
++
 
compiler 
Intel 所提供之 C/C++ 程式編譯器，可整合於 Microsoft 
Visual Studio 2010 內使用。用來編譯所開發之軟體架
構。透過 Intel 編譯器所編譯出來之程式通常擁有較高
之效能。 
Intel MKL Intel 所提供之高效能數學函式庫，其中包含了有豐富的
數學函式如 LAPACK、BLAS、PARDISO、BLACS 等函
式集合。可用來進行矩陣運算、聯立方程式求解、計算
最小二乘法解等。 
免費之軟
體開發工
具 
GCC GNU compiler suite，在開放原始碼社群中最著名之程式
編譯器，支援多種程式語言如 C、C++、Fortran、Java
等等。 
GDB GNU debugger，在 Linux 環境下之程式除錯器，可支援
單步執行、中斷點等除錯之必要功能。 
Gmake GNU make，用來在 Linux 環境管理軟體專案編譯流程
之工具。 
valgrind 在 Linux 下用來找出程式中的記憶體存取問題與記憶
體漏失之工具。 
subversion 用來對所開發程式之原始碼版本控管 (version control) 
doxygen 用來產生所開發軟體之文件，如類別說明、類別關係圖、
函式呼叫圖等等。 
CUDA SDK NVidia 所提供之 GPGPU 程式開發工具。 
VTK Visualization ToolKit. 由 Kitware, Inc. 所開發之開放原
始碼類別庫，提供了豐富的視覺化能力以及多樣的計算
幾何之演算法。 
26 
 
中。無元素分析法在束制本質邊界上，會因選用不同的近似函數有無
Kronecker delta 函數性質，可使用的加入邊界條件的方法也會不同，如 MLS
近似函式因沒有 Kronecker delta 函數性質，因此無法使用直接法束制邊界條
件到整體勁度矩陣上。 
5) 求解系統方程式：待先前的步驟完成，則會得到一線性系統方程式 Ku=F，可
使用多種不同的求解演算法來求解此系統方程式，如使用 LU 分解法、共軛
梯度法 (conjugate gradient)等直接或迭代法將未知數求解出來。 
6) 計算最後的位移：無元素法會根據所選用的近似函數有無 Kronecker delta 函
數性質，而得到是否為最後的真解，如使用 MLS 近似函式因沒有 Kronecker 
delta 函數性質，因此求解系統方程式後的值為位移參數，而非真實的位移，
因此需要多此步驟來計算真實的解。 
7) 計算應力應變場：根據求解出的真實位移及材料性質進而可計算出整體模型
的應變及應力場。 
 
 
圖 13  weak-form 無元素法分析線彈性問題之通用流程 
 
4.1.2 無元素法基礎要素 
從 4.1.1 節所述的通用流程及相關文獻的探討中，可觀察出 weak-form 無元
素分析法對結果品質所考量相關的部分包含 1) 近似函數(approximation function)；
2) 支撐領域(support domain)；3) 本質邊界條件(essential boundary condition)和 4) 
數值積分方法(numerical integration method)。本文將 weak-form 無元素法在基礎
要素方面所考量演算法的組合整理如圖 14 所示(非全部演算法)，以下說明此四
部分。 
1) 近似函數(approximation function)：近似函數的選擇是決定為哪種無元素法
分析法的重要因素，如 Element-Free Galerkin (EFG) method 的近似函數為
1) 設定模型
4) 束制本質
邊界條件
5) 求解系統方程式
3) 束制自然邊界條件
6) 計算最後的位移解
7) 計算應力應變場
2) 計算和組合整體勁度
矩陣
28 
 
 
圖 14  weak-form 無元素法之基礎要素 
 
4.1.3 數值方法 
從效能的觀點上探討，在整體分析上除了各無元素法本身的演算法造成效能
上的差異外，也在以下四方面對效能上的影響進行考量，其在效能上可能的組合
如圖 15 所示 
1) 搜尋演算法(approximation function)：搜尋演算法主要為尋找鄰近的節點，
在無元素分析中藉由搜尋演算法找出在支撐領域範圍內的節點，進而計算出
近似函數，因此當所分析的領域中有大量的節點時，在計算近似函數時將耗
費時間於搜尋支撐領域中的節點，所以為提升搜尋的效率進而增加整體分析
的效能，必須導入搜尋效率較高的演算法，如 DESS (double-ended spatial 
sorting) (Perkins and Williams, 2001)、K-D Tree (Bentley, 1975)等其他演算法。 
2) 稀疏矩陣存取(sparse matrix storage)：無元素法的整體勁度矩陣為一稀疏矩
陣，在儲存整體進度矩陣上使用密矩陣儲存將耗費龐大的記憶體量，為了避
免操作過多的零值 
，因此需要使用稀疏矩陣的方式來存取整體勁度矩陣，如使用 CRS 
(Compressed Row Sparse) (Sherman, 1975)、Band matrix (George and Liu, 1981)、
Skyline matrix (Jennings, 1966)或其他的格式等。不同的稀疏矩陣儲存格式所
使用的記憶體量也不同，且在儲存矩陣時的效能可能因需要計算存取的正確
位置，而需耗費額外的運算時間，造成效能的降低，因此為提升在稀疏矩陣
上存取的效能，需考量不同矩陣的資料存取方式。 
RKPM
Direct Method
Penalty 
Method
Lagrange 
Multiplier 
Method
Meshfree
Formulation
Integration Method
Approximation 
Function
Essential Boundary 
Condition
RPIM MLSPIM
RPIM+PIM
enrichment
Gauss 
Integration
Nodal 
Integration
Other Methods
Other 
Approximation 
Function
Support Domain
Circular / 
Spherical
Rectangular / 
Hexahedral
Moving 
Circular / 
Spherical
Dynamic 
Rectangular / 
Hexahedral
30 
 
Domain class 群組、3) Formulation class 群組三個角度說明於 4.3.1~4.3.3，系統介
面類別於 4.3.4 說明。 
 
 
圖 16  ESFM 整體架構類別圖 
 
 
圖 17  核心架構類別圖 
Model
Client
1
1
1
Domain Solver
Assemblage
Formulation
Integration
ShapeFunction
System 
IsoparamatricMeshlessShape
Weight BasisFunction
SearchAlgorithm
GlobalSolidMechanics
EssentialBoundaryCondition
Material StrainDisplacement
SupportDomain
WeightFunction
Gauss Nodal
SparseMatrix
Vector
InfluenceDomain
InfluenceDomainSize
Factory
Façade Classes
1
FEMSolidMechanics
SystemInterface
Model
Domain
Assemblage
Formulation
GlobalSolidMechanic
EssentialBoundaryCondition
ShapeFunction
SupportDomain
Solver
OtherFormulation
Material
StrainDisplacement
Integration
FEMSolidMechanic
32 
 
 
圖 18  模型群組相關類別圖 
 
4.3.2 Domain class 群組 
如圖 17 所示，核心類別的設計以單一領域考量為主，在此領域中僅考量單
一材料性質，藉由 Domain class 主導整體核心分析流程，透過 Formulation class
計算求得整體模型之系統方程式，並將 Model class and Assemblage class 交給
Formulation class 來取得模型資料及儲存整體勁度矩陣及載重向量，之後呼叫
Solver class 求解系統方程式得到位移或位移參數的結果。透過 Domain class 來溝
通其他相關類別，藉以減少各類別間溝通的相依性，並降低其耦合程度，其設計
概念就是物件導向設計模式中的 Mediator pattern。 
1) Solver, Assemblage and SparseMatrix class 
圖 19 為 Solver, Assemblage and SparseMatrix class 的類別關係圖。Vector class 
和 SparseMatrix class 分別為儲存總體載重及總體勁度矩陣資料的格式，其中
稀疏矩陣的方式存取，考量不同的資料結構、儲存格式將有不同的存取效能
或使用記憶體的量，因此採用 Strategy pattern 的設計方式，將不同的資料結
構存取方式或稀疏矩陣的演算法分別衍化 SparseMatrix class 讓使用者可以根
據效能或空間考量來選擇較好的演算法，如 SparseMatrixCRS class、
SparseMatrixSkyline class 等，若未來欲提供其它演算法，則可透過繼承
SparseMatrix class 的方式，可較容易的建立出新的演算法。 
Assemblage class 則為負責排列 Vector class and SparseMatrix class 中資料
的順序，不同的順序排列方式，將會影響到求解系統方程式的效能及記憶體
BackGrid
Naive
SupportDomain
DESS
K-D Tree
InfluenceDomain
InfCircular
Model
InfRectangular
InfluenceDomainSize
InfAvg
InfUniform
InfNearPt
SearchAlgorithm
InfCircular2
InfRectangular2
BeamModel
FileModel
UserDefinedModel
34 
 
繼承 Formulation class，用以決定使用固體力學 formulation 的整體計算流程，且
使用其所需的 ShapeFunction class, Material class, StarinDisplacement class, 
Integration class 並使用 EssentialBoundaryCondition class 來束制邊界條件，最後透
過 Assemblage class 將總體勁度矩陣 K 和總體載重向量 F 儲存於稀疏矩陣中。此
種設計方式為 Mediator pattern，藉以減少各類別間的相依性，降低其耦合程度，
讓相關的類別群組可以獨立的發展。Formulation class 也可特別衍化不同的計算
流程的 formulation 整合近似函數及積分方式，以達計算上較高的效能。  
 
1) ShapeFunction class 
ShapeFunction class 用以定義近似函數(approximation function)或稱形狀函
數(shape function)，又可稱為內插函數(interpolation function)，為無元素法
中決定為何種無元素法的要素。此類別功能主要為藉由先前
InfluenceDomain class 群組找出的支撐領域，計算出支撐領域中涵蓋節點
的形狀函數(shape function)值，因此在設計時也必須考量不同近似函數所
需的基底函數(basis function)、權重函數(weight function)，且還需考量使
用高斯積分網格所需的 isoparametric shape function。在架構設計上必須整
合上述條件，讓使用者可以透過共通介面容易的選擇所需的演算法。 
圖 20為ESFM ShapeFunction class及相關類別圖，ShapeFunction class
分別各自演化為以網格基礎的 Isoparametric class 及支撐領域基礎的
MeshlessShape class 系列的抽像類別形式。Isoparametric class 再繼續衍化
以網格基礎所需的形狀函數實作類別，如 8 個節點的 2D 或 3D 元素 isoN8 
class；MeshlessShape class 則為以支撐領域計算近似函數的共同抽像父類
別，並讓 MeshlessShape class 包含所需的抽像類別: Weight class 及
BasisFunction class，不同的近似函數演算法則可透過繼承 MeshlessShape 
class 實作其演算法並透過父類別的成員取得相關的基底函數或權重函
數。 
    Weight class 為權重的形式，如圓形或方形權重的計算方式演化於其
子類別 WeightCircular class and WeightRectangular class，透過使用
WeightSeed class 計算出所要的權重值，不同的權重函數如: 高階多項式
(high order polynomial)、三次仿樣曲線(cubic spline)、四次仿樣曲線(quartic 
spline)等，則各自演化 WeightSeed class。Weight class and WeightSeed class
的設計概念皆使用 Strategy pattern 進行設計。 
    BasisFunction class 也使用 Strategy pattern 進行架構設計，如：多項式
基底(polynomial basis)、放射狀基底( radial serial basis: Multi-quadrics, 
Gaussian)等皆演化 BasisFunction class 實現。其中 BasisFunction class 也包
含 enrichment basis function 的方式，讓放射狀基底和多項式基底可以結合
在一起使用，因此 BasisEnrichment class 透過繼承並使用 BasisFunction 
class 將 enrich 的演算法定義在 BasisEnrichment class 裡，這就像是物件導
36 
 
積分方式的子類別，如高斯積分、點積分，讓使用者可透過 Integration class
的公開介面使用其子類別的演算法，而高斯積分還需配合使用 Isoparametric 
shape function 用以計算積分點的位置及相關的 Jacobians 和 Determinants。 
 
4.3.4 系統介面類別 
系統介面的設計概念採用物件導向設計模式中的 Façade pattern 的設計概念，
藉由提供一簡單的系統介面給使用者來對複雜的系統溝通。如圖 21 所示，使用
者透過 System class 的介面操作，並給予分析的模型資料(Model class)，建立出整
體系統分析之相關實體物件，並透過此介面控制整個分析系統，不同的分析系統
建立的實作則實現於子類別中，如 FEMSystem class、MeshfreeSystem class。因
此 System class 必須根據 model 的資料建立起整個分析系統，並提供適當介面給
予使用者操作，若系統內有新的演算法添加時，此介面也可輕易的去維護及更新。
Model class 為存放整個分析系統模型的資料類別，透過衍化抽象類別來建立不同
的模型資料來源，如: 建立預設模型、透過讀檔來建立模型。 
 
圖 21  系統介面類別 
 
4.3 耦合系統 
耦合系統使用於模型中不同的領域或系統分析的耦合，如 1)有限元素與有限
元素法；2)無元素與無元素法耦合；3)有限元素法與無元素法的耦合；或 4)其它
不同材料的耦合。為確保單一領域分析系統的獨立性，避免核心系統因耦合而必
須變更主要系統分析的流程，且耦合分析的方式，最後是將不同領域的勁度矩陣
及載重向量組合而成總體勁度矩陣及總體載重向量，並加上不同耦合演算法對介
面上的處理，最後再進行求解，因此本研究之耦合分析系統架構類別的關係如圖 
22 所示。 
Core System
MeshfreeSystem
FEMSystem
System
Model
Domain Solver
Assemblage
Formulation
Integration
ShapeFunction
IsoparamatricMeshlessShape
Weight BasisFunction
SearchAlgorithm
GlobalSolidMechanics
EssentialBoundaryCondition
Material StrainDisplacement
SupportDomain
WeightFunction
Gauss Nodal
SparseMatrix
Vector
InfluenceDomain
InfluenceDomainSize
FEMSolidMechanics
Model
Client1
1
1
38 
 
1) 計算總體勁度矩陣及載重向量：Domain 首先會呼叫 Formulation 中的 calc() 
函式並傳入 Model 及 Assemblage 物件，Formulation 藉由 Model 物件取得
分析模型的相關資料，並透過 Formulation 中定義的流程，計算出整體模型
的勁度矩陣及載重向量，最後透過 Assemblage 物件將資料保存。以本例的
Formulation 來說，將此程序分成四個步驟: a) 初始化相關的參數；b) 計算
整體領域上的勁度及自重所造成在節點上的載重；c) 計算均佈荷重於模型
節點上；d) 計算集中荷重於模型節點上，藉由以上四個步驟將總體勁度矩
陣及載重向量計算出來。若為不同的 Formulation 其分析程序則不一定與此
相同，因此每個Formulation需將自己的分析程序定義於自己類別中的 calc() 
函式中，以得到正確的結果。 
2) 求解系統方程式：在執行完上一步驟後，Domain 接著呼叫求解器並透過
Assemblage 物件取得要計算的資料將系統方程式求解出來。 
3) 計算完整的解： Domain 根據所呼叫的 Formulation，最後計算出結點上資
料，如固體力學中節點上的位移、應變及應力狀態。 
 
 
圖 23  主要流程物件關係循序圖 
 
: Domain
analyse()
System
: Solver
calc(model, assemblage)
solve()
u = return nodal parameter
calcNodalSolution(model, assemblage, u)
: GlobalSolidMechanics : EssentialBoundaryCondition
calcDomain(model, assemblage)
calcDistributedLoad(model, assemblage)
setConcentrateLoad(model, assemblage)
enforceBC(model, assemblage)
: Assemblage
set or add Load(...)
set or add K(...)
iniParameter(model, assemblage)
: Model
getCalcData()
return data
saveData()
(1)
(2)
(3)
40 
 
的區域勁度矩陣(BTDB)，GolbalSolidMechanics 物件透過 GaussIntegration 
物件進行積分，最後藉由 Assemblage 物件將區域勁度矩陣疊加到總體勁度
矩陣中。 
3) 若計算的模型函有自重的影響時，則執行此步驟進行計算。因自重的作用
於整個區域上，因此在計算自重於節點載重上的影響，需使用積分的方式
求得，因此針對每個元素上每個積分點進行運算，最後求得自重在每個結
點上的載重。 
 
42 
 
 
圖 25  Formulation 程序物件關係循序圖 
 
4.4.4 耦合程序 
圖 26 為耦合分析的系統程序圖，並以無元素與有限元素耦合為例。分乘以下三
步驟說明之： 
1) 分析每個子系統：使用者透過 CouplerSolver 物件呼叫分析函式進行分析，
函式中將按設定順序呼叫每個子系統進行分析，如一開始呼叫
MeshfreeSystem 物件進行分析，當子系統分析步驟到求解時，則會呼叫回
CouplerSolver 物件中的求解函式，此函式將判斷是否還有未分析的子系統，
進而呼叫其子系統分析，如繼續呼叫 FEMSystem 物件進行分析，當所有子
系統都分析完成時，則進行下個步驟。 
2) 進行耦合求解：此步驟將根據設定的耦合演算法進行耦合，最後呼叫 Solver
物件求解系統方程式。 
3) 將子系統的位移回傳，進行每個子系統最後的計算，如計算應力應變場等。 
GlobalSolidMechanic
: ShapeFunciton : Assemblage: GaussIntegration: GlobalSolidMechanics
calcDomain()
[for each IntPts]
[for each volume]
return derivShapes
Integration(stiffnessK, ..)
calcDerivShapeFunc( supportDomain[i] )
stiffnessK
addK(stiffnessK, ...)
shape
calcShapeFunc( supportDomain[i] )
Integration(load, ...)
load
addLoad(load, ...)
calcStiffness(derivShapes)
: Model
getBasicData()
return basic data
: StrainDisplacement : Material
makeBMatrix(derivShapes)
return B matrix
getMaterial()
return D matrix
Calc. StiffnessK = B
T
DB
return StiffnessK
If density > 0, Calc. body force
calcBodyForce(shape)
return load
(1)
(3)
(2)
44 
 
五、 系統效能評估 
本章節從效能的角度對 ESFM 進行評估，由以下三個方面進行探討，1) 使
用效能剖析工具進行評估、2) 從整體分析流程評估、3) 針對稀疏矩陣細部評估
整體效能。而效能剖析之結果除了作為程式效能校調之參考外，亦能對於無元素
分析方法之效能表現有進一步之了解。 
 
5.1 使用效能工具剖析 
5.1.1 剖析案例說明 
藉由使用 INTEL VTune 進行初步的效能剖析，以二維 RPIM 及 EFG 分析以
下假設案例之剖析結果。如圖 27 所示，為 2 維度平面應力假設之懸臂樑，其材
料參數參考 Liu(2008) 之假設，如下: 自由端載重: P= -1000 N，楊氏模數: 
E=3x10
7
 N/m
2，泊松比: v=0.3，樑深: D=12 m, 樑長: L=48 m。 
 
圖 27  INTEL VTune 剖析案例 
 
5.1.2  RPIM 效能剖析 
RPIM 無元素架構內容如下: 
1) 基底函數:EnrichBasis(BasisMQ+BasisPolynomial(2)) ; 2) Isoparametric shape: 
IsoD2N8; 3) 搜尋演算法: Grid; 4) 積分方式: GaussD2N16; 5) 勁度矩陣儲存格式: 
SparseMatrixMap; 6) 勁度矩陣排列方式: AssemblageNormal; 7) 求解器: 
MKLSolver; 8) essential boundary condition: PenaltyBC; 9) 控制方程式: 
GlobalSolidMechanic; 10) 近似場函數: PIM。 
 由以下 Case 得知，RPIM 無論在自由度量較少或較多的情況下，其大部分
的時間在處理樹狀結構中 find()函數，此函數為 SparseMatrixMap 類別中所用，
其中addElem()函式佔有相當的比例，因此若欲提升分析的效能可從此部分著手，
其他花費較多時間函數如 MKL 函式庫中用以計算矩陣相乘及稀疏矩陣系統方程
式求解也跟所選用以儲存總體勁度矩陣的格式有關，因此可探討改善其演算法或
使用其他效能較佳的儲存格式，以提升整體之效能。 
 
 
X
Y
P
D
L
46 
 
近似場函數: MLS。 
 由以下 Case 得知，EFG 在目前的案例剖析中，find()、addElem()和 addK()
佔其主要的時間，其和 RPIM 的結果相似，都是與儲存總體勁度矩陣的資料格式
有關，因此可改善其演算法或提供較佳之資料儲存方式。 
 
Case 1: 節點數: 25 x 7 = 175, 自由度量: 175 x 2 = 350 
a) 積分網格: 50 x 20 = 1000,單一積分網格積分點數: 16, 總共積分點數: 1000 x 
16 = 16000 
 
b) 積分網格: 100 x 40 = 4000,單一積分網格積分點數: 16, 總共積分點數: 4000 x 
16 = 64000 
 
 
Case 2: 節點數: 250 x 70 = 17500, 自由度量: 17500 x 2 = 35000 
a) 積分網格: 50 x 20 = 1000,單一積分網格積分點數: 16, 總共積分點數: 1000x 
16 = 16000 
 
b) 積分網格: 100 x 40 = 4000,單一積分網格積分點數: 16, 總共積分點數: 4000 x 
16 = 64000 
 
 
 
48 
 
 
圖 28  二維懸臂樑模型 
 
表 5  二維度案例節點及積分網格劃分組合 
a) b) c) d) e) f) g) 
1 100 28 5600 40 16 16000 
2 100 28 5600 60 24 36000 
3 100 28 5600 80 32 64000 
4 100 28 5600 100 40 100000 
5 100 28 5600 120 48 144000 
6 200 56 22400 60 24 36000 
7 200 56 22400 80 32 64000 
8 200 56 22400 100 40 100000 
9 200 56 22400 120 48 144000 
10 200 56 22400 140 56 196000 
11 300 84 50400 80 32 64000 
12 300 84 50400 100 40 100000 
13 300 84 50400 120 48 144000 
14 300 84 50400 140 56 196000 
15 300 84 50400 160 64 256000 
16 400 112 89600 100 40 100000 
17 400 112 89600 120 48 144000 
18 400 112 89600 140 56 196000 
19 400 112 89600 160 64 256000 
20 400 112 89600 180 72 324000 
21 500 140 140000 120 48 144000 
22 500 140 140000 140 56 196000 
23 500 140 140000 160 64 256000 
24 500 140 140000 180 72 324000 
25 500 140 140000 200 80 400000 
說明: a) 組合。b) 水平節點分割數。c) 垂直節點分割數。d) 自由度數量。       
e) 水平積分網路分割數。f) 垂直積分網路分割數。g) 積分點數量。 
X
Y
P = 1000 N
D = 12 m
L = 48 m
50 
 
 
圖 30  EFG 二維度效能評估分析佔整體時間百分比 
 
5.2.3 三維度案例說明 
如圖 31 所示，為三維度集中載重模型，其四周及底面為滾支承，限制位移
方向，其材料參數之假設，如下: 角點集中荷重: P= -1 N, 楊式模數: E=3x107 N/m2，
柏松比: v=0.3，長: L=1 m，寬: W=1 m，深: D=2 m。透過此模型進行三維問題稀
疏矩陣效能之評估，並比較在不同自由度及積分點量對效能之影響，節點及積分
網格劃分採均勻佈點及分割方式，其中每個積分網格皆分佈 125 個積分點(5x5x5)
所選定的組合如表 6 所示。 
 
 
圖 31  三維集中載重模型 
0%
10%
20%
30%
40%
50%
60%
70%
80%
90%
100%
0 25 50 75 100 125 150
佔
整
體
時
間
百
分
比
%
組合 (25*6 = 125組)
1. Initialize
2. Make K
3. EBC
4. Compress
5. Solve
6. Retrieve U
7. Post
FAKE Skyline3 Hash DCRS2 CRABS 0 CRABS 1
P = 1 N
L = 1 m
W
 =
 1
 m
X
Z Y
D
 =
 2
 m
52 
 
 
圖 32  EnrichRPIM 三維度效能評估分析佔整體時間百分比 
 
 
圖 33  EFG 三維度效能評估分析佔整體時間百分比 
 
5.3 稀疏矩陣效能探討 
 由 5.1 節透過 INTEL VTune 進行初步效能剖析的結果可知，在儲存總體勁度
矩陣的資料格式佔初步評估效能的大部分，且在 5.2 節時根據實際的時間測量評
估中可得知，在二維及三維效能分析上程序 2) Make K 的時間皆佔大部分，尤其
在三維分析時更佔整體分析的 80%以上，由此推測可能在透過稀疏矩陣存取總體
勁度矩陣時可能為需要耗費較多時間的部份，因此本節將針對稀疏矩陣進行效能
0%
20%
40%
60%
80%
100%
120%
0 9 18 27 36 45 54
佔
整
體
時
間
百
分
比
%
組合 (9*6 = 54組)
1. Initialize
2. Make K
3. EBC
4. Compress
5. Solve
6. Retrieve U
7. Post
FAKE Skyline3 Hash DCRS2 CRABS 0 CRABS 1
0%
20%
40%
60%
80%
100%
120%
0 9 18 27 36 45 54
佔
整
體
時
間
百
分
比
%
組合 (9*6 = 54組)
1. Initialize
2. Make K
3. EBC
4. Compress
5. Solve
6. Retrieve U
7. Post
FAKE Skyline3 Hash DCRS2 CRABS 0 CRABS 1
54 
 
5.3.1 二維度效能評估 
圖 34 為二維案例在表 7 所述九種不同節點數量與積分網格分佈下，整體稀
疏矩陣所花費的時間。從圖中可看出整體稀疏矩陣的計算時間隨著自由度及積分
點數增加而需要更多的時間花費，在本測試案例中可明顯得看出 Skyline 的結果
所需花費的時間最短，亦可看出不同稀疏矩陣對於 EFG 分析效能甚巨。 
圖 35 為二維案例在表 7 所述九組不同組合，整體稀疏矩陣花費時間相對於
EFG 無元素整體分析時間的比例。由圖上可看出不同的稀疏矩陣對整體效能的
影響範圍約從 35%到 75%之間，因此在稀疏矩陣的選擇上，可見其對整體效能
的影響之大。 
 
 
圖 34  二維案例稀疏矩陣的計算時間 
 
 
圖 35  二維案例稀疏矩陣佔整體分析比例 
 
0
5
10
15
20
25
30
35
40
45
0 1 2 3 4 5 6 7 8 9 10
各
稀
疏
矩
陣
花
費
時
間
(秒
)
Case
CRS
CRABS E=1
CRABS E=0
Skyline
0.0%
10.0%
20.0%
30.0%
40.0%
50.0%
60.0%
70.0%
80.0%
0 1 2 3 4 5 6 7 8 9 10
各
稀
疏
矩
陣
佔
整
體
分
析
時
間
比
Case
CRS
CRABS E=1
CRABS E=0
Skyline
56 
 
5.4 小結 
 本章中使用 ESFM 架構對 RPIM 及 EFG 等兩種文獻中經常使用之無元素分
析法，根據多種不同的案例組合，及多種稀疏矩陣的格式進行二維度及三維度模
型效能上的探討。由 5.1 節到 5.3 節的探討中，可知無元素分析的效能主要瓶頸
為使用稀疏矩陣存取總體勁度矩陣上，不同的稀疏矩陣存取效能可相差到數倍間，
二維分析時總體效能影響範圍約從 35%到 75%之間，三維分析時更增加到 75%
到 98%之間，可知稀疏矩陣在三維分析時佔了大部分的時間。此結果在過去文獻
中沒有見到，而主要原因可能在過去對無元素法進行探討時，所分析的問題規模
都不是很大，且大部份使用的稀疏矩陣格式似為密矩陣或是 Skyline 矩陣格式。
但這些格式都需耗費大量的記憶體而不適合處理分析大規模的問題。然而大地工
程問題的規模都不小，因此為提昇大規模無元素分析法整體分析效能是必需的。
而提升效能的方法，則可針對稀疏矩陣著手，提升稀疏矩陣的處理效率。 
  
58 
 
(c) CRABS E=1 
圖 38  CRABS 稀疏矩陣儲存結構示意圖 
 
表 9  CRABS 稀疏矩陣儲存格式說明 
陣列
名稱 
資料型
別 
需求 
容量 
用途說明 
ir[] 整數 m + 1 
儲存每一行在 rb[]中
開始的索引 
rb[] 
兩個整
數的結
構體 
2 x 區
塊的數
量 
儲存每個區塊開始
的列索引及區塊的
大小 
ia[] 整數 m + 1 
儲存每一行在 a[]中
開始的索引 
a[] 浮點數 
每個區
塊容量
的加總 
儲存所有區塊中的
值 
 
 
6.2 使用 CUDA 加速 CRABS 策略 
 根據 CUDA 架構，將採取下列三種方法，將區域的勁度矩陣透過 GPU 儲存
於稀疏矩陣中，分別說明於 6.2.1 到 6.2.3 節中。 
 
6.2.1 CUDA CRABS 方法 1 
方法 1 的概念是將 device 上的 threads 分別處理區域勁度矩陣的每個元素如
圖 39 左邊 10x10 區域勁度矩陣，採用一維 thread blocks，一維 grids 分配 device
上的 threads，如圖 39 右邊的 Grids，每個 threads 分別搜尋指定元素所在 CRABS
中的區塊(row block)位置，找到位置後存放入 device 上的 a[] 陣列。 
6.2.2 CUDA CRABS 方法 2 
方法 2 的概念為採用一維 thread blocks，一維 grids 分配 device 上的 threads，
將每個 threads 分配到 CRABS 所有的區塊(row block)上，每個 thread 從區塊上分
別尋找區域勁度矩陣中與 thread 所執行到的區塊上相同的列(row)，將整個區域
勁度矩陣的列搜尋過後，把應該存在自己區塊內的區域勁度矩陣原素存放到
device 上應該放的位置，如圖 40 所示。 
6.2.3 CUDA CRABS 方法 3 
方法 3 的概念為接續方法 2 的概念，採用三維 thread blocks，二維的 grids
分配 device 上的 threads，將 row blocks 劃分成二維的 row blocks，第三個維度的
60 
 
 
圖 41  CUDA CRABS 方法 3 示意圖 
 
6.3 ESFM 使用 CUDA 加速 CRABS 架構 
在 ESFM 的架構上使用 CUDA 加速 CRABS 類別圖如圖 42 所示，將 CUDA
版本的 CRABS 稀疏矩陣 AssemblageCRS_CRABS class 繼承於 AssemblageCRS 
class，不同的 CUDA 加速概念方法則實現於 AssemblageCRS_CRABS class 的子
類別中。 
 
 
圖 42  CUDA 加速 CRABS 類別圖 
 
6.4 CUDA 加速 CRABS 效能測試 
本節將使用 EFG 無元素法，測試 6.2 節提出的 CUDA 版本 CRABS 稀疏矩
陣格式的效能。分析模型繼續採用 5.2 節所用之模型及材料假設進行分析，二維
模型如圖 28 所示，三維模型如圖 31 所示。自由度與積分點數的組合，二維根
Dofs =10
D
o
fs
= 
1
0
part of global CRABS block
X
Y
ThreadBlock
Z
AssemblageCRS
Assemblage
AssemblageCRS_CRABS
AssemblageCRS_CRABS2AssemblageCRS_CRABS1 AssemblageCRS_CRABS3
62 
 
 
 
圖 44  二維度 CUDA CRABS E=1 效能 
 
 
圖 45  三維度 CUDA CRABS E=0 效能 
 
Case
S
p
e
e
d
u
p
1 2 3
-0.2
0
0.2
0.4
0.6
0.8
1
1.2
1.4
1.6
1.8
2
2.2
2.4
cuCRABS1
cuCRABS3
cuCRABS2
Case
S
p
e
e
d
u
p
1 2 3
-0.5
0
0.5
1
1.5
2
2.5
3
3.5
4
cuCRABS1
cuCRABS3
cuCRABS2
64 
 
七、 系統驗證與效能探討 
本章節將對有限元素分析、無元素分析及兩者耦合分析，進行二維及三維驗
證，於 7.2 節說明，驗證模型於 7.1 節中說明，7.3 節對效能進行探討。 
 
7.1 二維及三維驗證模型 
7.1.1 二維線荷重驗證模型 
二維線荷重模型如圖 47 所示，為平面應變假設，其材料參數之假設，如下: 
單位線荷重: L= -1000 N/m，於 Domain1 中的左上端點上，楊式模數: E=3x107 
N/m
2，柏松比: v=0.3，模型分成兩個區域 Domain1 及 Domain2，大小分別為 10m 
x10m 及 100m x 100m 的區域，若為進行單一領域有限元素或無元素分析驗證，
則 Domain1 及 Domain2 為單一系統進行分析；若為進行耦合分析驗證，Domain1
則為無元素分析系統，Domain2 則為有限元素分析系統。在第七章中無元素法以
EnrichRPIM 來進行驗證。為了在效能上可以進行比較，因此有限元素分析、無
元素分析及兩者耦合分析的模型節點及積分網格劃分採均勻佈點及分割方式，且
以八個節點元素分佈，使三個驗證分析中的自由度與積分點量皆為相同，每個積
分網格皆分佈為 25 個積分點(5x5)，Domain1 及 Domain2 所選定的元素切割組合
如表 12 所示。 
 
 
圖 47  二維線荷重模型 
 
 
 
 
Width = 100 m
D
ep
th
 = 1
0
0
 m
Domain2
Domain1
D1 = 10 m
W1 = 10 m
Domain1 D1 = 10 m
W1 = 10 m
Line Loading = 
1000 N/1m
Domain2
66 
 
表 13  三維集中荷重模型 Domain1 及 Domain2 各邊的元素分割組合 
組合 Domain1 各邊的分割數量 Domain2 各邊的分割數量 
1 2x2x2 3x3x6 
2 3x3x3 4x4x8 
3 5x5x5 6x6x12 
 
7.2 有限元素分析、無元素分析、耦合分析之驗證 
 有限元素分析與解析解二維及三維的結果分別如圖 49、圖 50 所示；無元
素分析(EnrichRPIM)與解析解二維及三維的結果分別如圖 51、圖 52 所示；無元
素(EnrichRPIM)、有限元素耦合分析與解析解二維及三維的結果分別如圖 53、
圖 54。從圖中可發現其結果隨著網格密度的增加，則與解析解漸趨相近，在耦
合分析中，更明顯的看出隨著網格密度的增加其耦合處的垂直應力也越接近解析
解。 
 
 
圖 49  二維有限元素分析與解析解之結果 
Vertical Stress (N/m2)
D
e
p
th
(m
)
10
2
10
3
20
40
60
80
100
FEM-Exact
FEM-Case1
FEM-Case2
FEM-Case3
FEM-Case4
FEM-Case5
68 
 
 
圖 52  三維無元素分析(EnrichRPIM)與解析解之結果 
 
 
圖 53  二維無元素(EnrichRPIM)與有限元素耦合分析與解析解之結果 
Vertical Stress (N/m2)
D
e
p
th
(m
)
10
0
10
1
10
2
10
3
20
40
60
80
100
MF-Exact
MF-Case1
MF-Case2
MF-Case3
Vertical Stress (N/m2)
D
e
p
th
(m
)
10
2
10
3
20
40
60
80
100
Exact-part1
Case1-part1
Case1-part2
Case1-part3
Case1-part4
Case1-part5
Exact-part2
Case1-part2
Case2-part2
Case3-part2
Case4-part2
Case5-part2
70 
 
 
 
圖 56  三維 FEM、Meshfree 和 Coupling 分析總時間 
 
 
  
0
100
200
300
400
500
600
700
800
900
1000
0 1 2 3 4
分
析
時
間
(秒
)
Case
FEM
Meshfree(EnrichRPIM)
Coupling
72 
 
 
圖 58  無元素法要素可能混合出的組合 
 
8.2.2 任意形狀分析結果 
  本研究所開發之軟體架構 ESFM 並沒有假設任何的幾何形狀，可進行二維或
三維分析、也幾乎沒有程式內建之大小限制 (除了節點、元素數量最多為無號
64bit 整數所能代表的數量)。所能分析之問題只要能將模型建立起來，且電腦所
配備之記憶體量足夠時，即可進行分析。以下展示不同求解之模型與其分析結果，
以展示所開發軟體之強健性 (robustness)與廣泛之適用性。 
 
1) EnrichRPIM 二維長條剛性基腳分析結果。垂直方向位移等值線圖如圖 59 所
示，垂直方應力等值線圖如圖 60 所示。二維長條剛性基腳 (footing) 由於假設
基服為完全剛性，因此在基腳下會產生均勻的位移，如圖 59 所示。而由於基服
之剛性，則會造成在角隅的應力集中現象，可在圖 60 中觀察得。 
RKPM
Meshfree
Formulation
Approximation 
Function
RPIM MLSPIM
RPIM+PIM
enrichment
Kriging
Influence Domain
Circular / 
Spherical
Rectangular / 
Hexahedral
Moving 
Circular / 
Spherical
Dynamic 
Rectangular / 
Hexahedral
Influence Domain 
Size
Uniform
NearPt
Avg
74 
 
2) EnrichRPIM 與 FEM 耦合分析三維剛性基腳分析結果。圖 61 為模型與網格示
意圖，圖 62 為變形後 Z 方向位移圖。除了單一分析領域之計算外，ESFM 亦合
將不同的計算方法耦合在一起進行分析，以在不同領域選用最適當的計算模擬方
法。此案例中由於基服之剛性會造成應力集中現象，因此在基腳下方採無元素法
計算，而在較遠處仍使用有限元素法進行計算，以降低運算成本。而由於後處理
階段無元素法缺乏網格資料，因此無法形成較佳之面或體之呈現方式，此待後續
進一步改進。  
 
 
圖 61  三維基腳分析模型與網格示意圖 
X
Y
Z
76 
 
 
圖 63  三維厚殼分析模型與網格示意圖 
 
圖 64  EnrichRPIM 分析三維厚殼變形前後及節點位移向量 
 
X
Y
Z
V1
0
5
10
15
20
V
2
0
5
10
15
20
V
3
0
5
10
X
Y
ZUndeform
Deform
78 
 
 
8.3 後處理 
 後處理在於分析後之資料的輸出及視覺化的呈現，可透過資料視覺化繪圖軟
體 Tecplot 360 或自行開發視覺化後處理程式如圖 67。 
 
  
a) 軟體外觀及 3D 模型展示 b) 結點散布情形 
  
c) 網格之呈現 d) 外力加載情況 
圖 67  視覺化後處理軟體結果展示圖 
  
80 
 
十、 結論 
架構上 
 ESFM 為本研究計畫所發展出的一高效能、易維護及易擴充的通用無元素法
力學分析架構。此架構根據許多文獻回顧，透過需求分析整合出通用分析程
序及分析基本要素，且經過不斷的調整修改，並利用物件導向分析方法以及
設計模式等協助以開發出此軟體架構。 
 ESFM 涵蓋了無元素分析法的基本要素、相關數值方法及可擴充的力學分析
Formulation，實現了多種無元素分析法、有限元素法及耦合分析運算。 
 ESFM 包含了 20 多類的群組演算法，並藉由物件導向設計模的優點開發此
程式架構，讓程式可以容易的維護、擴充及再利用各類的群組演算法。 
 透過 ESFM，可在相同的基礎架構下進行分析，並公平的探討不同分析系統
在各種問題上的差異及效能比較。 
 ESFM 經過本研究二維及三維案例在無元素法、有限元素法及耦合分析上與
解析解之驗證，ESFM 為一可靠的力學分析軟體架構。 
 
效能上 
 ESFM 將效能相關之數值方法獨立，因此可容易的擴充新的演算法，並探討
其演算法效能，讓使用者可選擇較合適的方法，而不影響到分析結果的品
質。 
 本研究透過 ESFM 評估無元素法整體分析之效能，找出影響整體分析效能的
問題所在，並導入 CUDA 架構，讓 GPU 加速整體分析之運算，如針對影響
無元素分析效能關鍵的稀疏矩陣存取，使用 CUDA 加速其效能提升。 
 在效能上，本研究透過 1) 實現效能較好的演算法及 2) 導入 GPU 運算手段 ，
藉以提升整體分析之效能。 
 
應用上 
 ESFM 在前處理模型的建立方式，可採用 1) 使用者在 ESFM 內新增分析模
型、2) 透過模型產生程式建立，ESFM 根據模型產生程式的輸出模型檔，
進而建立分析模型、3) 使用先前研究所發展的圖形化軟體建立分析模型。
透過此三種方式，讓使用者可較方便的建立分析模型。 
 ESFM 可透過耦合的分析，進行多領域的分析或不同材料性質的分析。 
 無元素與有限元素的耦合分析對於大地工程分析大尺度問題上，如基腳、樁
貫入等問題分析上，可提高分析效能及得到較精確的解。 
 ESFM 可應用於內插計算上，系統介面利用 Façade pattern 使用核心架構中
的近似函數群組，進行內插的運算。 
 
  
82 
 
國立中山大學海洋環境及工程學系。 
廖偉鈞(2006)，「無網格局部皮得洛夫葛勒金法」，碩士論文，國立中央大學機械
工程研究所。 
謝宜典(2006)，「無元素葛勒金法」，碩士論文，國立中央大學機械工程研究所。 
Alfaro, I., Yvonnet, J., Cueto, E., Chinesta, F. and Doblare, M. (2006). “Meshless 
methods with application to metal forming.” Computer Methods in Applied 
Mechanics and Engineering, 195, 6661-6675. 
Atluri, S. N. and Zhu, T. (1998). “A new meshless local Petrov-Galerkin (MLPG) 
approach in computational mechanics.” Computational Mechanics, 22, 117-127. 
Attgway, S. W., Heinstein, M. W. and Swegle, J. W. (1994). “Coupling of smooth 
particle hydrodynamics with the finite element method.” Nuclear Engineering 
and Design, 150, 199-205. 
Bathe, K. J. and De, S. (2001). “The method of finite spheres with improved 
numerical integration.” Comput Struct 79, 2183-2196. 
Babuska, I. and Melenk, J. M. (1997). “The partition of unity finite element method”, 
International Journal for Numerical Methods in Engineering, 40, 727-758. 
Belytschko, T., Krongauz, Y., Organ, D., Fleming, M. and Krysl, P. (1996). “Meshless 
methods: An overview and recent developments.” Computer Methods in Applied 
Mechanics and Engineering, 139, 3-47. 
Belytschko, T., Organ, D. and Krongauz,Y. (1995). “A coupled finite 
element-element-free Galerkin method.” Computational Mechanics, 17, 186-195. 
Belytschko, T., Gu, L. and Lu, Y. Y. (1994). “Fracture and crack growth by 
element-free Galerkin methods.” Modeling Simulations in Materials Science and 
Engineering, 2, 519-534. 
Brian Foote. (1992). “A fractal model of the lifecycles of reusable objects.” 
OOPSLA ’92 Workshop on Reuse, Vancouver, British, Columbia, Canada. 
Catanzaro, B., Sundaram, N. and Keutzer, K. (2008). “Fast Support Vector Machine 
Training and Classification.” Proceedings of the 25th international conference on 
Machine learning, 307, 104-111. 
Cederman, D. and Tsigas, P. (2008). “A Practical Quicksort Algorithm for Graphics 
Processors.” Proceedings of the 16th annual European symposium on Algorithms, 
246-258. 
Chen, J. S., Wu, C. T., Yoon, S. and Yon, Y. (2001). “A stabilized conforming nodal 
integration for Galerkin mesh-free methods.” International Journal for Numerical 
Methods in Engineering, 50, 435-466 . 
Dilts, G. A. (1999). “Moving-least-square-particles hydrodynamics. I: Consistency 
and stability.” International Journal for Numerical Methods in Engineering, 44, 
1115–1155. 
84 
 
Finite Elements in Analysis and Design, 38, 1075-1091. 
Kim, N. H., Choi, K. K. and Chen, J. S. (2001). “Die shape design optimization of 
sheet metal stamping process using meshfree method.” International Journal for 
Numerical Methods in Engineering, 51, 1385-1405. 
Kwon, K. C., Park, S. H. and Youn, S. K. (2005). “The least-squares meshfree method 
for elasto-plasticity and its application to metal forming analysis.” International 
Journal for Numerical Methods in Engineering, 64, 751-788. 
Lacroix, D. and Bouillard, P. (2003). “Improved sensitivity analysis by a coupled 
FE-EFG method” Computers and Structures, 81, 2431-2439. 
Li, G. (2003). "Coupling of the mesh-free finite cloud method with the boundary 
element method: a collocation approach." Computer Methods in Applied 
Mechanics and Engineering 192(20-21): 2355-2375. 
Li, G., Paulino, G. H. and Aluru, N.R. (2003). “Coupling of the mesh-free finite cloud 
method with the boundary element method: a collocation approach.” Computer 
Methods in Applied Mechanics and Engineering, 192, 2355–2375 
Li, S. and Liu, W. K. (2002). “Meshfree and particle methods and their applications.” 
ASME Applied Mechanics Review, 54, 1-34. 
Liew, K. M., Ren, J. and Reddy, J. N. (2005). “Numerical simulation of 
thermomechanical behaviours of shape memory alloys via a non-linear mesh-free 
Galerkin formulation.” International Journal for Numerical Methods in 
Engineering, 63, 1014-1040. 
Lim, Y. J. and De, S. (2007). “Real time simulation of nonlinear tissue response in 
virtual surgery using the point collocation-based method of finite spheres.” 
Computer Methods in Applied Mechanics and Engineering, 196, 3011-3024. 
Liu, W. K., Chen, Y. and Uras, R. A. (1995b). “Enrichment of the finite element 
method with the reproducing kernel particle method.” In: J. J. F. Cory and J. L. 
Gordon. Eds., Current Topics in Computational Mechanics, 305 (ASME-PVP) 
253-258. 
Liu, W. K., Chen, Y., Jun, S., Chen, J. S. Belytschko, T., Pan, C., Uras, R. A. and 
Chang, C. T. (1996). “Overview and applications of the reproducing kernel 
particle methods.” Archives of Computational Methods in Engineering: State of 
the art review 3. 3-80. 
Liu, W. K., Jun, S. and Zhang, Y. F. (1995a). “Reproducing kernel particle methods.” 
International Journal for Numerical Methods in Engineering, 20, 1081-1106. 
Liu, W. K., Jun, S., Li, S., Adee, J. and Belytschko, T. (1995c). “Reproducing kernel 
particle methods for structural dynamics.” International Journal for Numerical 
Methods in Engineering, 38,1655-1679. 
Liu, W. K., Li, S. and Belytschko, T. (1997). “Reproducing least-square kernel 
86 
 
Zhang, J. F., Zhang, W. P. and Zheng, Y. (2005a). “A Meshfree Method and Its 
Applications to Elasto-Plastic Problems.” Journal of Zhejiang University 
(Science), 6A(2), 148-154 
Zou, W., Zhou, J. X. Zhang, Z. Q. and Li, Q. (2006). “A truly meshless method based 
on partition of unity quadrature for shape optimization of continua.” Computation 
Mechanics, 39, 357-365. 
 
 
表 Y04 
 
一、參加會議經過 
  本次會議於韓國首爾舉辦,自 100年 6月 29日起至 7月 2日止，共計四天。
其中第一天僅有 welcome reception的社交場合，而 7月 2日則為文化與工程參
訪，故實質的學術交流為 6月 30與 7月 1日兩整天。 
  第一天早上的 keynote 有兩主要議題：1) 因應老年化社會之智慧化技術、
2) 機器人與機電技術於營建自動化技術之應用。第二個主題之演講者為由日本來
的 Tatsuo Arai教授 (圖一)，透過他的介紹對於近年來日本在土木營建之機器人
研究有了較為清楚的了解。而圖二則為他統計之機器人研究之研討會參與人數統
計圖，可以明顯看到其與土木營建業之投資金額有絕對正相關。此外，他也對於
3.31的福島災難為什麼日本沒有使用機器人投入救災有說明，畢竟日本是機器人
技術的先進大國，沒有投入機器人進入救災絕對是另人吃驚的。而理由竟然也相
當的不意外，為東京電力公司的大老心態，他們認為自己對於核電的掌握與技術
是最先進的，也因此他們不願外人介入，而造成反而是外國的機器人 (iRobot, 
Inc.)有投入救災工作。 
。 
  而接下來的議程主要則為參與 BIM相關議題，以了解各國在 BIM之研究議
題。而個人的 presentation則被安排在 7月 1日下午 4:00的時段，以介紹個人
與所指導之學生所開發之迭代式設計之電腦輔助分析軟體想法與架構。接著在晚
上參加主辦單位安排之晚宴，並在 7月 2日參與主辦單位安排之觀光行程與工程
參觀。觀光行程乃坐 bus至皇官參觀、隨後參觀在仁川興建之「city of 
tomorrow」。 
 
二、與會心得 
  BIM的建模為一熱門研究課題，特別是 as-built 模型，如何自動地從 3D雷
射掃瞄辦識成為 BIM模型仍有許多困難仍待克服，由本屆最佳論文獎三篇中有兩
篇探討此課題即可知。而此三篇中剛好兩篇在 present 時我都在場，並針對其中
CMU的 Prof. Akinci 提出我的看法並也獲得她的認可。 
  另外，此次開會地點由於離台灣很近，因此有許多台灣的教授與研究生參
與，其中台大、台科大、與中央應為取大宗。而台灣學生在 present時說的還算
流利，口音也不錯，可惜在問答時就顯露出英語聽力與口語的有待加強。 
  而在觀光與工程參訪時，可感到韓國對於文化的重視，他們的古蹟保存相當
完善，也可在他們的導遊身上感到他們的自信。而在參觀 city of tomorrow時，
則與大部份參加的人有著相同感覺，名字取得很好，但是內容很貧乏，整個參觀
過程感覺只是在聽一個市政規劃，並沒有看到特別未來的技術應用，頗為失望。 
 
 
三、攜回資料名稱及內容 
  研討會論文集：Proceedings of the 28th annual international symposium 
on automation and robotics in construction. 
 
 
 
 
 
 
COMPUTER AIDED ITERATIVE DESIGN – A FUTURE TREND IN  
COMPUTER AIDED ENGINEERING SOFTWARE  
 
Yo-Ming Hsieh* and Song-Xu Tsai 
 
Department of Construction Engineering, National Taiwan University of Science and Technology, Taipei, Taiwan 
* Corresponding author (ymhsieh@mail.ntust.edu.tw) 
 
ABSTRACT: Typical engineering design processes involve an initial design, followed by iterations of analyses, 
interpreting and evaluating analyses results, and proposing new design or modifying existing design.  The final design 
often results from intuitions obtained during this iterative process.  Most computer-aided engineering (CAE) software 
focuses on the computer-aided analysis by advancing capabilities in pre-processing, computation, and post-processing.  
However, little attention has been paid to the support of the aforementioned iterative design process, which is the common 
practice in engineering design.  Authors believe the next-generation CAE software should evolve into CAID (Computer-
Aided Iterative Design) software to help engineers go through the iterative design process and develop better engineering 
designs.  In this paper, key software requirements for the iterative design process are discussed in this work.  Furthermore, 
prototype CAID software developed using C++, Qt, and VTK is demonstrated.  The analyzing capability of the developed 
CAID software is based on an essential software framework for meshfree methods (ESFM).  The proposed CAID concept 
and prototype software shall provide guidelines for future CAE software development. 
 
Keywords: Computer-aided Design, Computer-aided Engineering, Meshfree, Meshless 
 
1. INTRODUCTION 
Computer-aided engineering (CAE) software such as 
ABAQUS and ANSYS, among many others, has become 
one of the essential tools in engineering designs.  By 
using CAE software, engineering designs can be 
objectively evaluated and their performances can be 
predicted to see if requirements can be fulfilled.  In 
general, designs must go through an iterative process 
depicted in Fig. 1: 
 
 
 
Fig. 1 General Engineering Design Process 
 
CAE software generally divides an engineering analysis 
into three steps: 1) pre-processing, 2) analysis/calculation, 
and 3) post-processing.  Pre-processing prepares 
computer models that can be understood by the calculation 
module; analysis/calculation computes solutions based on 
user-defined procedures in the prepared model; post-
processing visualizes the computed solutions to help users 
check performances and gain insights to the analyzed 
problem.  Most CAE software has invested significant 
effort to perfect these three steps, i.e. the upper part of Fig. 
1, to help users easily and intuitively create models and 
generates meshes in finite element methods (FEM), to 
incorporate and to advance analyzing capabilities (e.g. 
multi-physics) to achieve realism in simulations, and to 
conveniently visualize and explore computed solutions.  
However, the iterative design process (i.e. the bottom part 
of Fig 1.) has received little or no attention, and this is 
unfortunate because the iterative design process, taking 
engineers from reported results to the next design, helps 
and inspires engineers devise better engineering designs.   
S31-6
1110
different software libraries: 1) Qt, 2) VTK, and 3) ESFM.  
These libraries are briefly introduced in this section. 
3.1 Qt 
Qt[2] is a rich software framework for C++ language.  It is 
available and cross platform on all major operating systems 
(Windows, MacOS, Linux, etc.).  Qt is a rich class library 
containing many classes, such as graphical user interface 
(GUI), 2D/3D drawings, networking, database, etc.  We 
mainly use Its GUI and 2D drawing classes to develop our 
prototype software.   
3.2 VTK 
VTK (Visualization Toolkit[3]) is a high-level graphical 
class library containing more than 2000 classes, and is 
available on all major operating systems, just like Qt.  
VTK uses visualization pipelines to encapsulate low level 
graphical function calls in OpenGL.  Fundamental 
components in the pipeline, in the usual processing order, 
contains source  filter  mapper  actor  renderer  
render window.  Source represents the raw data; filter 
defines transformations to data; mapper is the procedure to 
transform data into drawable objects; actor present drawing 
properties; renderer concretizes the 3D presentation; render 
window presents the visualization on screen.  Table 1 lists 
the VTK classes used and their purposes. 
3.3 ESFM 
ESFM (Essential Software Framework for Meshfree 
Methods[1]) is our homegrown software framework for 
implementing meshfree methods [4-6].  The software 
allows us to implement various meshfree methods with 
different combinations of shape functions, support domain 
definitions, etc.  ESFM is integrated in this work to 
conduct analyses in solid mechanics. 
 
4. DEMONSTRATION 
This section demonstrates some features in our developed 
prototype program to show how to achieve the functional 
requirements that we drafted for CAID software. 
4.1 Graphical User Interface - Overview 
Fig. 2 shows our developed prototype program.  The 
program’s graphical user interface has three windows 
labeled as A, B, and C in Fig. 2.  Window A chooses or 
creates a design or model to work on; window B presents 
the modeling space for creating designs; window C is the 
interface for visualizing analysis results obtained from the 
analysis for model shown in B.  Separating model-
selection (A), pre-processing (B), and post-processing (C) 
into three windows allows the program to take advantage 
of multiple monitors for presenting information easily.  It 
should be noted the displays in B and C are always 
synchronized.  Furthermore, separating modeling window 
and post-processing window allows users see the built 
model with the analyses results simultaneously.  Most of 
today’s CAE software cannot present models with analysis 
results, and its post-processing windows usually do not 
present the same detail as in the pre-processing window.  
Our design removes such restriction and enables better 
understanding of analysis results with the model. 
 
Table 1. VTK classes used in the prototype software 
Class. class name purpose 
vtkArrowSource Drawing arrows 
vtkConeSource Drawing cones 
vtkPointSource Drawing points 
vtkLineSource Drawing lines 
vtkSphereSource Drawing sphers 
Source
vtkCubeSource Drawing cubes 
vtkDoubleArray Data array 
vtkPointData Point data Data 
vtkUnstructuredGrid mesh data 
vtkDelaunay2D Delaunay process Filter vtkContourFilter Create contours 
vtkPolyDataMapper Mapper vtkDataSetMapper 
Data-drawing 
conversions 
vtkActor Drawing properties
vtkAxesActor Axes 
vtkScalarBarActor Color legends 
vtkCaptionActor2D Drawing Text Actor 
vtkPropAssembly Compound drawings 
QVTKWidget Qt-VTK integrationGUI vtkOrientationMarkerWidget Draw orientations 
vtkRenderer Render presentation
vtkColorTransferFunction Map value to color 
vtkProperty2D Misc. 
vtkProperty Drawing properties
 
4.2 Model Selection Window 
Fig. 3 shows the model selection window in detail.  The 
model selection window controls the interested design or 
model the users want to operate or want to see.  The 
S31-6
1112
automatically in a separate window, as shown in Fig. 5.  
The window contains all the steps performed (e.g. drawing 
a line, modify material, etc.)  Once an action is logged, 
users are allowed to comment the logged entry to enter 
user-specified context for each operation, giving semantic 
meanings to each operations to help engineers understand 
these actions for future references. 
 
 
  
 
   
Pre-processing Window Post-processing Window
Model Selection Window
 
Fig. 4. Pre-processing window for creating new models or 
modifying existing models to create derived models 
 
4.4 Post-processing window 
Post-processing or visualizing analysis results are 
important.  They help engineers understand how their 
models performs under designed conditions, and give them 
insight on how to improve their designs and inspires new 
designs.  In addition to regular CAE post-processing 
functions such as contouring, vector plots, etc.  We focus 
on new functions that we introduce in this work in order to 
support the iterative design process.  These functions are 
mainly are used to compare analysis results obtained from 
different models.  There are mainly three functions: 1) 
simultaneously presenting or more post-processed models 
(e.g. deformed shapes), 2) showing differences between 
two analyses by contouring the differences between their 
field variables, 3) simultaneously query results from 
selected multiple analyses using bar charts.  These are 
discussed in the subsequent text. 
4.4.1 Presenting multiple results simultaneously 
Fig. 6 shows the visualization for comparing multiple 
models with their deformed shapes.  The colored 
presentation is the currently active model, while the 
outlines are analysis results selected in other analyses.  
This is not possible with most CAE software today, and 
engineers usually need to export the data and do such 
presentation by other tools (e.g. Tecplot) manually.  This 
is tedious, unproductive, and prone to human errors.  
Such presentation is useful to compare different designs in 
deformation.  Other quantities may require different 
presentation techniques. 
 
 
Fig. 5. The log window showing all the steps performed 
 
 
 
Fig. 6 Presenting multiple analyses at once 
 
4.4.2 Contouring differences of two analyses 
Fig. 6 is only suitable for comparing deformed shapes.  
However, there are quantities that cannot be compared 
using outlines, such as stresses and strains.  Therefore, in 
order to understand differences of these quantities on 
different models, it is necessary to use different approaches 
than the one previously introduced. 
In order to present differences on field variables and how 
these differences are distributed in space.  The function 
that uses contours to present differences (computed 
automatically in the software) between two analyses is 
built in the prototype.  Fig. 7 shows such presentation.  
Such presentation can nicely show not only the magnitude 
S31-6
1114
國科會補助計畫衍生研發成果推廣資料表
日期:2011/10/31
國科會補助計畫
計畫名稱: 高效能無元素分析法之軟體架構暨其於大地工程之應用(II)
計畫主持人: 謝佑明
計畫編號: 98-2221-E-011-112-MY2 學門領域: 大地工程
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
無 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
