into two categories: range-based and range-free 
localization mechanisms. 
1. Range-Based Localization Mechanisms 
In range-based schemes, nodes determine their 
locations based on distance or angle estimations to 
some reference points with known coordinates. Such 
estimations may be acquired through different 
methods such as time of arrival (TOA) [11], time 
difference of arrival (TDOA) [7], angle of arrival 
(AOA) [6], or Receive Signal Strength Indicator 
(RSSI). These approaches required additional 
hardware, and the estimation could be effected by 
multi-path and noise. Because of the hardware 
limitations of sensor node and source errors, 
range-free localization approach is an effective 
alternative. 
2. Range-Free Localization Mechanisms 
In the range-free localization schemes, nodes 
determine their locations without using of time, angle, 
or signal strength measurements. In [2], each node 
estimates its location by calculating the center of the 
locations of all anchors it hears. If anchors are 
deployed regularly, the location error can be reduced, 
but this is almost impossible in WSN deployments. 
Ssu et al. proposed a localization mechanism [10] 
using the geometry conjecture (perpendicular 
bisector of a chord). If any two chords are obtained, 
the location of the sensor node can be calculated 
based on the conjecture.  
3. Hop-based Localization Mechanisms 
The “DV-Hop” approach [5] finds the number of 
hops from a node to each of the landmarks in the 
network and then multiplies hop count by average 
hop distance to estimate the range between the node 
and each landmark. The known positions of 
landmarks and these computed ranges are used to 
perform a triangulation to obtain estimated node 
positions.  
In [8], the method enhances DV-Hop by 
proposing an additional refinement phase. After a 
node has computed a coarse estimated position of its 
own location using DV-Hop, the node obtains the 
estimated positions from all of its neighbors. Then it 
assumes that these neighbor nodes are reference 
nodes, the node re-computes triangulation to refine 
its estimated position. 
In [4], they use the hop distances of sensor nodes 
from one or more designated sources in order to 
obtain estimations of inter-sensor Euclidean 
distances which are used to locate sensor positions. 
The use of the maximum communication range of a 
sensor node as the expected distance of a single hop 
results in errors in estimations. This is due to the fact 
that the distance to the furthest node is not 
necessarily equal to communication range and 
changes according to node density. 
In [1], they propose GPS-Free, a simple 
positioning system based on distances in number of 
hops between nodes. This localization scheme does 
not require the computation of complex algorithms 
and only needs neighborhood discovery. 
 
(五) 方法說明 
Our LPC algorithm also performs similar with the 
DV-Hop’s procedure of estimated hop length. The 
difference is that every landmark uses two power 
levels to estimate the hop lengths of two transmission 
range R and r. Let and Rˆ rˆ  be the estimated hop 
lengths of R and r, respectively. Each landmark i 
computes two estimated hop lengths, and , and 
prepares the distance packets for two power levels. 
DP is denoted the distance packet. The format of DP 
packet is DP(pk_id, lm_id, s_id, hop_len, lm_dis, loc, 
power), where pk_id is packet’s id, lm_id is 
landmark’s id, s_id is sensor’s id, hop_len is 
estimated hop length, lm_dis is estimated distance to 
landmark, loc is landmark’s location, and power is 
power level. If a node receives the first distance 
packet, it will add DP.hop_len and DP.lm_dis to the 
new estimated distance to landmark i, new_lm_dis. 
The sensor will store new_lm_dis to lm_disi and 
update the distance packet, DP.lm_dis = lm_disi. The 
sensor will broadcast two DP. One DP, setting 
DP.power=R, is broadcasted with R power level and 
another DP, setting DP.power=r, is broadcasted with 
r power level. Whenever a sensor receives the DP 
iRˆ irˆ
 —   — 2
