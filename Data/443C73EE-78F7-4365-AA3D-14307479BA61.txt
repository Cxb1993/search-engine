2 
行政院國家科學委員會補助專題研究計畫成果報告 
「最小 k 分割問題」與相關問題之演算法的進一步研究 
A further study on the minimum k-cut problem and  
some related problems 
計畫編號：NSC－98－2221－E－007－081 
執行期限：98 年 08 月 01 日至 99 年 07 月 31 日 
主持人：王 炳 豐   國立清華大學資訊工程學系 
 
一、摘要 
 
 給定一個圖形 G 和一個整數 k，「最
小  k 分割問題」  (the minimum k-cut 
problem) 討論的是如何用最小的 cost 將 
G 的 vertex set 分割為 k 個部份。這個
問題由於在實際生活中具有許許多多的
重要應用 (例如: clustering, VLSI design, 
task allocation in distributed computing 
systems, and network reliability)，所以一直
是計算機科學中最重要的基礎研究問題
之一。 
 計劃主持人在過去這一年全力投入這
一方面的研究，獲得了相當不錯的研究成
果。我們提出了兩個新的  divide-and- 
conquer approaches ， 分 別 能 將 一 個 
minimum k-cut problem 轉換成 O(2k−1kn3) 
個 (k−1)-cut problems 以及 O(n2k/2m) 個 
k/2-cut problems。利用這兩個新方法我
們將「最小 k 分割問題」在 7 ≤ k ≤ 28 時
的 upper bounds 降低，得到目前最好的結
果。我們的第一個方法同時也可以將 the 
all minimum 3-cuts problem 的  upper 
bound 降低一個 Õ(n) 的 factor。 
  
關鍵詞：最小 k 分割、圖形理論、演算
法設計與分析、資料結構、最大流量 
 
Abstract 
 
Let G be an edge-weighted undirected 
graph with n vertices and m edges. A k-cut is 
a partition of the vertex set into k non-empty 
disjoint subsets. The minimum k-cut 
problem is to find a k-cut that minimizes the 
total weight of the edges whose endpoints 
are in different subsets. The minimum k-cut 
problem has many important real-world 
applications, such as clustering, VLSI 
design, task allocation in distributed 
computing systems, and network reliability. 
It is one of the most important and 
fundamental problems in computer science 
and thus has received much attention in the 
literature. 
We have studied the minimum k-cut 
problem for one year and have already got 
good results: we have developed two new 
divide-and-conquer approaches for solving 
the minimum k-cut problem. The first 
approach reduces an instance of the 
minimum k-cut problem to O(2k−1kn3) 
instances of the minimum (k−1)-cut problem. 
The second approach reduces an instance of 
the minimum k-cut problem to O(n2k/2m) 
instances of the minimum k/2-cut problem. 
4 
and E is the edge set. Let n = |V| and m = |E|. 
Each edge (u, v) ∈ E has a nonnegative real 
weight w(u, v). Given an integer k ≥ 2, the 
minimum k-cut problem is to find a partition 
of the vertex set into k non-empty subsets that 
minimizes the total weight of the edges 
whose endpoints are in different subsets. 
The minimum k-cut problem has 
received much attention in the literature. 
Goldschmidt and Hochbaum [4] showed that 
the minimum k-cut problem is NP-hard if k is 
part of the input and presented an 
O( )/( log// mnmn kk 252322 +− )-time algorithm. 
Kamidoi, Yoshida, and Nagamochi [6] 
significantly improved the upper bound to 
Õ(ng(k)+1m) = O( 3171114 −− )/./( kkn ), where g(k) 
is defined by the recurrence: g(5) = 4, g(6) = 
5, and g(k) = 2k − 5 + g((k + k1/2) / 2 + 1) 
for k ≥ 7. Very recently, Xiao [11] gave an 
O(n4k−lgk)-time algorithm and Thorup [8] gave 
an Õ(n2k−2m)-time algorithm. These results 
are summarized in Table 1. 
  
3.2 Two new approaches for solving the 
minimum k-cut problem 
 
Most existing algorithms for the 
minimum k-cut problem are designed based 
upon the divide-and-conquer strategy. We 
introduce two new divide-and-conquer 
approaches. Let Tk denote the time 
complexity of finding a minimum k-cut. The 
first one reduces an instance of the minimum 
k-cut problem to O(2k−1kn3) instances of the 
minimum (k−1)-cut problem. Thus, our first 
approach shows that Tk = O(2k−1kn3Tk−1). The 
minimum 6-cut problem can be solved in 
O(n5mlog (n2/m)) time. By applying this 
result, our first approach requires 
Õ( )log2/(133 nkkn +− m) time for any k ≥ 7. For k = 
7, 8, 9, 10, this result improves the previous 
upper bound by a factor of O(n11−k). For 
example, when k = 7, our approach improves 
the upper bound by a factor of O(n4). A 
byproduct of our first approach is an 
improved Õ(n3m)-time algorithm for the all 
minimum 3-cuts problem. Our second 
approach reduces an instance of the minimum 
k-cut problem to O(n2k/2m) instances of the 
minimum k/2-cut problem. Thus, our 
second approach shows that Tk = 
Õ(n2k/2mTk/2 ). By applying our improved 
upper bounds for k = 5, 6, 7, 8, 9, the 
approach solves the minimum k-cut problem 
in Õ(n2k−2−d(k)m1+t(k)) time, where d(k) and t(k) 
is defined by the following recurrences: d(5) 
= 4, d(6) = 5, d(7) = 4, d(8) = 3, d(9) = 2, and 
d(k) = d(k/2) for k ≥ 10; and t(k) = 1 for k ≤  
Year k Time Complexity 
1994 any O( )/( log// mnmn kk 252322 +− ) [4] 
2006 any O( 3171114 −− )/./( kkn ) [6] 
2008 any O(n4k−lg k) [11] 
2008 any Õ(n2k−2m) [8] 
 
Table 1. Results of the minimum k-cut problem 
6 
[2] C. J. Colbourn, The Combinatorics of 
Network Reliability, Oxford University 
Press, Oxford, UK, 1987. 
[3] R. G. Downey, V. Estivill-Castro, M. R. 
Fellows, E. Prieto, and F. A. Rosamond, 
"Cutting up is hard to do: the 
parameterized complexity of k-cut and 
related problems," Electr. Notes Theor. 
Comput. Sci., Vol. 78, pp. 209-222, 
2003. 
[4] O. Goldschmidt and D. S. Hochbaum, 
"Polynomial algorithm for the k-cut 
problem for fixed k," Math. Oper. Res., 
Vol. 19, pp. 24-37, 1994. 
[5] J. Hao and J. Orlin, "A faster algorithm 
for finding the minimum cut in a 
directed graph," J. Algorithms, Vol.17, 
pp. 424-446, 1994. 
[6] Y. Kamidoi, N. Yoshida, and H. 
Nagamochi, "A deterministic 
algorithm for finding all minimum 
k-way cuts," SIAM Journal on 
Computing, Vol. 36, pp. 1315-1327, 
2006. 
[7] D. Naor, D. Gusfield, and C. Martel, "A 
fast algorithm for optimally increasing 
the edge connectivity," in Proceedings 
of the 31st IEEE Symposium on 
Foundations of Computer Science, pp. 
698-707, 1990. 
[8] M. Thorup, "Minimum k-way cuts via 
deterministic greedy tree packing," in 
Proceedings of the 40th annual ACM 
symposium on Theory of computing, 
pp. 159-165, 2008. 
[9] P. Tittmann, "Partitions and network 
reliability," Discrete Appl. Math., Vol. 
95, pp. 445-453, 1999. 
[10] V. Vazirani and M. Yannakakis, 
"Suboptimal cuts: their enumeration, 
weight, and number," in Proceedings of 
the 19th International Colloquium on 
Automata, Languages and 
Programming, pp. 366-377, 1992. 
[11] M. Xiao, "An Improved 
Divide-and-Conquer Algorithm for 
Finding All Minimum k-Way Cuts," 
in Proceedings of the 19th 
International Symposium on 
Algorithms and Computation, pp. 
208-219, 2008. 
[12] L.-P. Yeh, B.-F, and H.-H Su, "Efficient 
Algorithms for the Problems of 
Enumerating Cuts by Non-decreasing 
Weights," Algorithmica, Vol. 56, pp. 
297-312, 2010. 
 
98年度專題研究計畫研究成果彙整表 
計畫主持人：王炳豐 計畫編號：98-2221-E-007-081- 
計畫名稱：「最小 k 分割問題」與相關問題之演算法的進一步研究 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 3 3 100%  
博士生 2 2 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 0 1 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
 
