一篇電腦象棋的論文“人造智慧在電腦象棋
上的應用＂[8]，隔年，廖嘉誠發表了“利用
計算機下象棋之實驗＂[9]，到了1986年，黃
東輝在許舜欽教授指導下發表了“中國象棋
知識庫之設計與製作＂[10]，對知識庫做了完
整介紹。 
 電腦象棋的研究在 1980 年代發端 
[11]，而 1987 年宏碁電腦所舉辦的電腦象棋
大賽，則為電腦象棋的發展寫下了歷史的新
頁， 1988 年，曹國明在許舜欽教授的指導之
下，實作出象棋程式[12]，程式的審局函數除
了考慮子力價值與位置分外，並使用動態調整
位置分的方式改良審局，並參加1988 年第二
屆宏碁電腦所舉辦的電腦象棋大賽，結果獲得
第二名，賽後更持先手擊敗了棋力初段的象棋
神童蔡澄宇。 
1989 年電腦象棋正式納入國際電腦奧林
匹亞競賽項目，帶動了另一波電腦象棋研究風
氣。1990年左右，吳韌所設計的SURPRISE一
舉奪得第三、四屆電腦奧林匹亞冠軍，並於
1997年以C++語言重新編寫程式，改名為“夢
入神機＂，在當時的網路象棋伺服器(ICCS)上
進行廣泛測試，取得了傲人的成績。 
鄭武堯設計的象棋明星，在第二屆電腦奧
林匹亞中改名為“ELP(取自“象＂的英文名
稱Elephant前三個字)。ELP純粹以組合語言
寫成，搜尋速度驚人，也是電腦奧林匹亞比賽
的常勝軍，更在第六、七屆奧林匹亞比賽中勇
奪冠軍。 
2001 年中山大學的涂志堅設計了“縱馬
奔流＂[13]，其特色是採用了 bitfile 及
bitrank 加速審局函數，審局相當準確，搜尋
速度也相當快。在2004 年於台南舉行的第一
屆電腦象棋爭霸戰中，取得亞軍，並在第八屆
電腦奧林匹亞比賽奪得金牌。 
2002 年，東華大學的董昱驣在顏士淨教
授的指導下，提出了一套對局樹決策演算法
[14]，結合人類賽局策略與專家知識，並經過
實際的測試，證明此演算法為實際可行的。 
 2002 年，以余家興所設計的資料結構為
基礎，當時就讀台灣大學資訊工程研究所的吳
光哲研究了各種電腦西洋棋先進的搜尋技
術，並加上陳志昌的開局庫[15]，在許舜欽教
授及徐讚昇教授的指導下，實作出完整的象棋
程式“千慮＂，取得了2004 年電腦象棋爭霸
賽的第三名以及第九屆電腦奧林匹亞象棋比
賽金牌的佳績。而象棋程式“深象＂，就是基
於“千慮＂的基礎上，繼續加以研究與改良。 
電腦象棋的棋力不斷進步，差不多已經達
到七段左右的棋力，民國九十五年在台灣大學
舉辦的第七屆人腦對電腦大賽，由四個頂尖的
象棋程式對抗一位六段、兩位七段及一位八段
的象棋高手，創下了首次電腦擊敗八段人類棋
士的紀錄，在未來三、五年內，預估程式棋力
將達到九段，並具備挑戰人類棋王的實力。 
電腦象棋的複雜度比西洋棋稍微高一
些，在西元1996年“深藍＂[1]打敗人類西洋
棋棋王Kasparov 之後，象棋被認為是下一個
最有可能擊敗人類棋王的棋類遊戲，可望為人
工智慧領域樹立另一個重要的里程碑。 
此外，以西洋棋程式所研究的各種搜尋演
算法為參考對象，在象棋程式發展過程中發揮
了很大的影響力，而我們在探索及嘗試各種演
算法提高程式棋力的過程中，所發現的方法，
也可讓複雜度比象棋更高的棋類遊戲，如日本
將棋，作為參考與借鑒，從而在電腦博奕領域
中貢獻棉薄之力。 
本計畫以深藍 (Deep Blue)為借鏡對象，與許舜
欽教授的電腦象棋研究團隊合作，利用平行計
算技術在叢集電腦上，進一步提高下象棋程式
的棋力，以期達到打敗象棋特級大師的目標。 
目前所發展出來的分散式演算技術，已能有效
的將本校理學院所建置之PC cluster 系統的優
點發揮的淋漓盡致，其特點簡述如下：一、使
用彈性的網路架構〈同時使用Ring、Star、
Tournament tree 等拓樸架構〉，二、每個處理
 2
 除了上述二維陣列的表示方式之外，也可
以使用一維陣列來表示棋盤。另外，在產生合
法走子步時，為了檢查棋子是否會超出棋盤，
在棋盤的上方及左側加入邊界區域，以方便判
斷。 
比較兩種方式，在搜尋及審局函數中，大
量存取棋盤資料結構時，採用一維陣列 
board[BOARD_SIZE] 的表示方式少了一次 
address offset存取的動作，會比二維陣列表
示法來得快。 
當要產生棋子在棋盤上某一位置 N 的走
法時，往上移動一格的位置是N-10，往下移動
一格的位置是 N+10，往左一格是N-1，往右一
格則是N+1。 
有了可以表示棋盤上不同位置的一維陣
列之後，為了表示不同的棋子，我們必須對每
個棋子加以編號，其中空格和邊界也要給予不
同的號碼表示以茲識別，加上32 個棋子，所
以共用了34個號碼來表示棋盤上不同的棋子。 
根據上面所提到的盤面表示方法，就可以
產生棋子的走法了。首先以一個16 位元的整
數代表每個不同的走法，其中8個位元代表棋
子移動的出發點，另外8個位元代表棋子移動
的目的地，當我們要產生某個走法時，只要利
用簡單的邏輯運算 SHIFT、AND 及 OR 就可得
知，反之如果要從某個走法得知棋子移動的出
發點和目的地，只要作一次反運算即可。 
棋盤圖 
 
走法編碼 
這樣只能表達一種特定的走法，一般來
說，在某個盤面情況下，不管是輪紅方還是黑
方走子，總會有超過一種以上的走法，所以需
要另一種資料結構，來表達某個盤面下所有可
能的走法。既然走法的表示是一個整數，所以
另外使用一個一維陣列來紀錄某盤面下所有
可能的走法即可。而為了便於在產生所有走法
時，先進行簡單的排序，我們將走法粗略分為
吃子步及非吃子步，所謂的吃子步，即進行此
走法後可吃到敵方的棋子，非吃子步則不會吃
到敵方的棋子，產生走法時會先產生吃子步，
我們將其放在一維陣列的前半部份，而後半部
份則存放非吃子步，如此便能產生最簡單的走
法排序效果。 
 
走法陣列 
為了考慮走法陣列所需配置的大小，必須
要分別考慮最多的吃子步及非吃子步數目。 
最多走法數目列表 
棋
子 俥 傌 炮 兵 相 仕 帥
總
和
最
多
走
法
數
量 
17 
x 
2
8 
x 
2
17 
x 
2
3 
x 
5 
4+2 4 4
113
 4
為了加快搜尋速度及準確性我們
採用了一系列嶄新且有系統的搜尋演
算法。 
一、逐層加深(iterative deepening)搜
尋[2]： 
在實際應用上，對特定的盤面進行搜尋，
通常是有時間限制的，為了達到此目的，必須
給定有限的搜尋層數d，但由於不確定搜尋完
d 層必須花費多少時間，所以利用逐層加深搜
尋，一開始先搜尋一層，如果搜尋完一層時間
還沒用完，就繼續搜尋第二層，依此類推，一
直到所分配的時間用完為止，如此一來，自然
可以達到時間控制的目的。逐層加深搜尋的另
一個好處，則是可以配合同形表的使用，在搜
尋第k層時，優先搜尋第(k-1)層的最佳走法，
通常這樣可以提高裁剪的效率，減少搜尋的節
點數目。 
二、寧靜搜尋(quiescence search)： 
在時間限制之內，只能搜尋有限的層數，
如果在最後一層發生兌子的情況，因為時間已
經用完，搜尋層數不足以看到下一手對方吃回
我方子力，會誤以為己方佔優，這種情況，一
般稱之為水平效應(horizontal effect)，因
為搜尋層數的不足，而對盤面形勢造成誤判。
為了解決此一問題，有人提出了寧靜搜尋
(quiescence search)[3,4]，寧靜搜尋可以視
為一種選擇性搜尋，只針對吃子步及解將步作
展開，最後到達寧靜盤面(沒有子力交換的盤
面)為止。正常NegaScout搜尋層數搜尋完時，
若此時為非寧靜盤面，則接著由寧靜搜尋進行
搜尋，如下圖所示。
 
三、延伸搜尋(extension search)：如同
圖3-5所示，真正搜尋過程中的遊戲樹其實是
參差不齊的，在某些情況下，可以針對必要的
部份加深搜尋深度，提高盤面評價的準確性，
例如上述的寧靜搜尋是其中一個例子。但也不
能對太多節點作延伸搜尋，否則會因為搜尋節
點數目成長過快，導致搜尋效率低落。目前程
式中使用兩種延伸搜尋技術，第一種是將軍延
伸，如果遇到將軍盤面，因此時必須解將，而
通常解將步的步數並不多，所以此時加深搜尋
深度一層，並不會增加太多搜尋的節點數，但
又能對將軍攻擊的威脅性作更準確的評價。第
二種則是單步延伸，當某方被將軍，且解將步
只有一步時，除了將軍延伸之外，額外再加深
一層的搜尋深度，稱為單步延伸。 
四、空著裁剪(null move pruning)： 
Null Move 最早在1989 年被Beal 提出
[5][6][7]，Null Move主要精神是當己方不走
子，由對手連續走兩步時，如果減少搜尋深度
的淺層搜尋情況下，搜尋分數也會超過Beta，
那麼可以對此走法進行裁剪，因為這表示對手
即使連走兩步，情勢也不會對對手比較有利，
那麼此走法很可能是一步不好的走法。使用
Null Move 進行裁剪的好處是，可以裁剪掉大
量不好的走法，減少搜尋的節點數，從而提高
搜尋效率，但要注意的是，在某些情況下不能
使用Null Move 進行裁剪，例如在Zugzwang
盤面中便不應使用，所謂的Zugzwang 所指的
是被迫走子，即每一步都對己方不利，但卻又
不得不走。在中國象棋中，常常在殘局時遇到
即使連走兩步也不一定能夠佔優，甚至可能有
輪到誰走誰不利的局面，此時就不應該使用
Null Move。 
搜尋和審局函數是影響象棋程式棋力的
關鍵，原本程式雖然搜尋速度很快，但審局函
數卻太過簡單，只考慮簡單的子力價值與位置
分數，以致於常常會貪吃敵方弱子而作負。我
們對審局函數加以改良，嘗試加入其他審局函
 6
式中我們將棋局分為開局、中局、殘局三個階
段，分別使用不同的子力位置分表，以減少此
因素所造成的不準確。區分開局與中局的界
限，主要視雙方子力出動多寡而定，若雙方大
子數加起來已經出動了十個以上，就算進入了
中局；  
(三)除了不同位置的加分之外，另外必須
考慮每個棋子的靈活度，可以將靈活度定義為
“走法的選擇性＂，若某個棋子有越多走法可
供選擇，那麼這個棋子的靈活度就越高。一般
而言，若某方所有棋子的靈活度高於另一方，
則代表走子的選擇性較多，所以盤面對靈活度
高的一方，往往是有利的。 
將棋子在盤面上所能移動到達的位置數
目加總，就是靈活度，一般而言，不同棋子的
靈活度應乘上不同的權重分數，例如炮的靈活
度重要性小於馬，而車的靈活度又比相重要
等。為了簡化計算複雜度，一般只考慮車、馬、
炮的靈活度，而每種棋子的權重可參考下表訂
定，使馬的權重大於車，而車的權重又大於炮。 
棋子種
類 
車 馬 炮 
靈活度
權重 
5 8 1 
在實際程式當中，由於考慮到炮的靈活度
與其威力沒有一定的關係，所以審局函數略過
炮的靈活度不予計算，此外，為了簡化計算，
車的靈活度也不予考慮，所以程式中只計算馬
的靈活度。 
(四)控制點，棋盤上共有90個點，除了
擺放棋子的位置之外，至少還有58個空格是
棋戲雙方爭奪的焦點，如果某一方能控制越多
的空格，代表棋子走到這些空格時，即使有子
力交換，最後仍然由控制力強的一方佔優，也
就是說，控制這些空格越多，行棋時的自由度
越高。 
對棋盤上不同的空格來說，重要性也不一
樣，如果能控制離對方主帥越近的空格，越能
限制對方主帥的行動，所以可對棋盤上不同位
置的空格給予不同的權重，將雙方分別控制的
空格權重予以加總，就可以計算出控制點這一
項的分數。 
由於中國象棋中共有三十二個棋子，所以
棋盤上每個位置使用一個32bits的整數來紀
錄控制點，每個bit代表不同的棋子是否可控
制該位置，若是，則該bit設為1，若否，則
設為0，最後比較棋盤上每個位置被紅方及黑
方控制的bit總數，即可得知紅黑雙方各控制
了棋盤上幾個點。 
四、計畫執行成果 
在第一年的研究中，除了上述提到的幾個
審局函數考慮的因素之外，還有其他重要的棋
形特徵須加以考慮，如常見的空頭炮、炮鎮窩
心馬等，這些特徵的影響必須在十幾手，甚至
二十幾手棋以後才能看得出來，遠遠超出目前
搜尋深度所能到達的範圍，所以當這些特徵出
現時，必須另外加以扣分或加分，才能正確的
評估目前盤面分數。 
除此之外，前面所提及的子力價值分數，
只是靜態的，但真正在棋局進行的過程中，子
力價值應隨盤面變化，予以動態調整，例如在
盤面子力減少時，因為阻礙馬行走的棋子變少
了，所以此時馬的價值應予以加分；而在開、
中局時，兵卒的行動緩慢，所以分數不高，但
在殘局階段，或是雙方都沒有車的時候，兵卒
的數量往往決定了勝負，此時應該將兵卒的子
力價值加重，甚至超過一隻相的分數。 
在「深象」程式當中，嘗試將棋局的狀態
分為開、中、殘三個階段，分別給予不同的子
力價值分數，並針對特殊的兵種組合予以加分
或扣分，例如殘局時馬炮勝雙馬，此時會對馬
炮方予以加分。此外，位置分也不是一成不變
的，應隨著敵方陣形的改變隨之變動，例如飛
高象通常分數不高，但是當敵方跳象位馬時，
此時飛高象阻擋敵方馬前進是可行的，應予以
 8
實驗結果可以明顯的顯示切捨後的節
點數目大大變少了。下圖為累積十層的節點
數量比較圖。 
10層內節點數量比較圖
24
88836048389424601421814
44620273
63210
41689
25940
15079
79723659
24 292 1278
91036
0
10000
20000
30000
40000
50000
60000
70000
80000
90000
100000
1 2 3 4 5 6 7 8 9 10
層數
n
o
d
e
數
Cutoff Tree
Gradebook
 
 
由實驗結果，我們把原本8806323個節點
的開局庫達成了約99.46%的切捨率，在空間上
大大的減少了，但卻不影響象棋程式在開局時
的走步，並對O類節點之子節點產生多個B
類節點的數目做分析與效能的比較，以便讓使
用者明瞭B類多節點的數目N對切捨率之影
響，使其能針對個別切捨後的容量喜好選擇B
類多節點的數目N去做切捨 
。如下圖。
99.46%
83.96%
76.87%
69.78%
65.00%
70.00%
75.00%
80.00%
85.00%
90.00%
95.00%
100.00%
1 2 3 4
O類節點之子節點數
 切捨率
 
本計畫在第一年取得的研究成果，已實作
在「師大深象」電腦象棋軟體中，在2006年5
月底參加在義大利舉行之第 11 屆國際電腦象
棋奧林匹亞競賽中，榮獲銅牌。部份的研究成
果也發表於首屆中國計算機博奕錦標賽暨機
器學術研討會中。 
後續的計畫在未來研究方向上，若再配合
自動化展開開局庫，叢集電腦自動化的生成新
節點，以更新切捨樹，那在開局知識庫方面便
比較能更正準確性的問題。在研究平行化搜尋
之外，另一方面是審局函數的改良，審局函數
必須調整的參數很多，目前我們還沒有辦法對
所有的參數，以自動化學習的方式學習最佳解
法，大部分學習所得的結果，往往比不上人工
調整，目前能夠學習的參數，也只有類似子力
價值等，比較簡單的一些參數而已，這方面的
研究，也是可以努力的目標。 
附錄A 電腦象棋軟體「深象」的發展歷史 
NTUChess 是許舜欽教授在台大任教期
間，指導學生以C語言所撰寫的象棋程式，但
並沒有發展成熟，後來余家興從 NTUChess 抽
取出底層資料結構以及走法產生等基本象棋
函數，整理成程式庫。2002年，當時就讀於台
灣大學資訊工程研究所的吳光哲，在大學修專
題時，曾在許讚昇教授的指導下，研究過西洋
棋程式的搜尋演算法，以此為基礎，以及余家
興從NTUChess 整理出來的程式庫為骨架，從
2002年12月開始，逐漸發展出一個完整的象
棋程式，後來命名為千慮。2003年一月底，千
慮開始在網路上測試，為此加入了簡單的開局
庫，此時開局庫內的棋譜主要都是由網路上收
集而來，後來在2003年7月8日又加入了陳
志昌博士與許舜欽教授所研發的開局庫
book15，棋力進一步提升到六段左右，2004年
6 月 25 日，在第一屆世界電腦象棋爭霸賽前
夕，加入了新的開局庫book21，最後於該次比
賽中拿到第三名的佳績，稍後參加了2004年7
月在以色列舉辦的第九屆 Computer 
Olympiad，一舉奪得金牌。2005年，同樣就讀
於台大資訊工程研究所的蔡旭程，在中研院徐
讚昇教授的指導下，實做了亞洲棋規判斷的部
份，並由吳光哲整合到千慮當中。 
2004年8月，在林順喜教授及許舜欽教
授的指導下，於師大資工所舉行了第一次「電
腦棋類遊戲研究會」，主要以研究電腦圍棋與
 10
謝謝大
師 
 Pascal Tang 第六名 No 
深象 臺灣師
大 
吳光哲、黃文樟、
李任軒 
第十名 No 
最後各程式之間的對戰結果如下： 
後  
 手 
先 
手 
棋天
大聖 
象棋世
家 
深象 謝謝 千慮 
積
分 
棋天
大聖 
 0.5 – 
0.5 
1 - 0 1 - 0 1 - 0 7.5 
象棋
世家 
0 – 
1 
 1 - 0 1 - 0 1 – 0 4.5 
深象 0 – 
1 
1 – 0  1 – 0 0.5 – 
0.5 
3.5 
謝謝 0 – 
1 
1 – 0 0 – 
1 
 1 – 0 2.5 
千慮 0 - 1 0 - 1 1 - 0 0.5 – 
0.5 
 2 
上表 “1-0＂ 代表先手勝，“0-1＂ 代
表後手勝，“0.5-0.5＂代表雙方和棋。 
附錄C第十一屆Computer Olympiad的比賽結
果與分析 
比賽結果： 
第一名 棋天大聖(NeuChess) 
第二名 象棋世家(ShiGa) 
第三名 深象(Deep Elephant) 
第四名 謝謝大師(XieXie Master) 
第五名 千慮(Contemplation) 
從這次比賽來看，電腦象棋之間的競爭很
激烈，寸土必爭，從開局就開始戰鬥，前三名
的參賽程式都準備了一套獨特先手的開局，棋
天大聖先手走過宮炮，象棋世家則準備了先手
仙人指路開局，深象先手走飛相局，最後都取
得了不錯的戰果。 
程式
名稱 
先手
開局 
局數 
勝 負 和 積分 
棋天 過宮 4 3 0 1 3.5 
大聖 炮 
象棋
世家 
仙人
指路 
4 
3 1 0 3 
深象 
飛相
局 
3 
2 0 1 2.5 
此次比賽謝謝大師先手對千慮的比賽當
中，謝謝大師先手執紅，在殘局時由殘局知識
庫接手，順利取得了勝利，這也創下了首次在
國際性比賽上殘局知識庫發揮作用的紀錄。 
五、參考文獻 
[1] Murray Campbell, A. Joseph Hoane Jr., 
Feng-hsiung Hsu, “Deep Blue＂, Artificial 
Intelligence, Volume 134 , Issue 1-2, Jan. 2002. 
[2] R. D. Greenblatt , D. E. Eastlake and S. D. Crocker,
“The Greenblatt Chess Program＂, Fall Joint 
Computing Conf. Procs. Vol. 31, (San Francisco, 
1967) 801-810. Also in D. Levy (ed.), Computer 
Chess Compendium, Springer-Verlag, 56-66, 
1988. 
[3] Christian Donninger,“Null Move and Deep 
Search : Selective Search Heuristics for Obtuse 
Chess Programs＂, ICCA Journal, 
16(3):137-143, Sep. 1993. 
[4] H. Kaindl,“Dynamic Control of the Quiescence 
Search in Computer Chess＂, Cybernetics and 
Systems Research, R. Trappl (ed.), 
North-Holland, Amsterdam, 973-977, 1982. 
[5] Beal, D.F.,“Experiments with the Null-Move＂, 
Advances in Computer Chess 5, p.65-79.Elsevier 
Science Publishers, Amsterdam, The 
Netherlands. 
[6] Christian Donninger,“Null Move and Deep 
Search : Selective Search Heuristics for Obtuse 
Chess Programs＂, ICCA Journal, 
16(3):137-143, Sep. 1993. 
[7] Goetsch G. and Campbell M. S.“Experiments 
with the Null-Move Heuristic＂, Computers, 
 12
狂賀 
狂賀！！師大資工榮獲2006國際電腦象棋奧林匹亞競賽銅牌 
由林順喜教授指導的黃文璋 李任軒 黃士傑同學 
榮獲2006年 國際電腦象棋奧林匹亞競賽銅牌 
 
  
 
http://www.cs.unimaas.nl/olympiad2006/index.htm 
11th Computer Olympiad 
May 24 - June 1 2006, Turin, Italy 
The 11th Computer Olympiad will be held in Turin, Italy, in conjunction 
with the 14th World 
Computer-Chess Championship and the 5th Computer and Games 
conference (CG 2006). This time 
these events will be co-hosted with the human FIDE Chess Olympics, to 
be held in Turin between 
May 25 and June 4, 2006. 
For remarks with respect to content, email to: cg2006,cg2006,other remarks to 
webmasterwebmaster. 
 
