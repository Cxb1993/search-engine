 2
目錄 
中文摘要 
英文摘要 
一、 前言 
二、 研究背景與目的 
2.1 研究背景 
2.2 研究動機目的 
三、 文獻探討 
3.1 國內文獻與研究概況 
3.2 國外文獻與研究概況 
四、 研究方法與內容 
4.1 群組機器人系統平台機構建立 
 4.1.1 感測器模組設計與使用 
 4.1.2 電源電路設計 
 4.1.3 通訊介面 
 4.1.4 運動機構 
4.2 粒子群最佳化演算法理論探討 
 4.2.1 粒子群最佳化演算法 
 4.2.2 具慣性權重之粒子群演算法 
 4.2.3 時變加速係數之粒子群演算法 
 4.2.4 自適應層次粒子群最佳化演算法 
 4.2.5 改良型自適應層次粒子群最佳化演算法 
4.3 群組機器人目標搜尋演算法理論探討 
 4.3.1 群組機器人搜尋與移動方式 
 4
中文摘要 
本研究為兩年期多多年期計畫，目的在於運用粒子最佳化演算法，應用於群組機器人的
目標搜尋與引導。本計畫提出一個新型的個體迭代機制，以強化對全域最佳解之搜尋能力，
並以典型的測試函數驗證其優越性。藉由所提出的仿生搜尋的演算機制，可以使機器人快速
地在未知環境中進行搜尋目標物；進而藉由一致性理論為基礎，提出改良型一致性模糊控制
器，以實現群組機器人系統的編隊與導引控制。由模擬與實驗結果得知，結合粒子群最佳化
演算法，可優化模糊控制器的參數，使群組機器人的控制響應得以改善。 
 
關鍵詞：粒子群最佳化演算法、群組機器人、目標搜尋、編隊引導控制。 
 6
一、前言 
機器人系統是近幾年非常熱門的研究議題，服務型機器人主要是代替人類處理如反覆瑣
碎、重物搬運、潛在危險等工作，或是工作於不適合人類留滯的場所如高溫高壓場所、高山
極地、等。目前所發展之機器人整合感知、運動以及決策思考等功能，使機器人本身具有分
析環境感測資訊並思考決策下達運動命令之能力。隨著科技不斷突破與躍進，人們對科技的
依賴也越深，因此機器人不再只是面對簡單的程序問題，而是複雜的任務規劃。因此，單機
器人已無法獨立完成任務，群組機器人的合作目標搜尋與動態引導亦是本研究將探討的主題。 
二、研究背景與目的 
2.1 研究背景 
工業機器人自從 1970 年引入市場，目前已是自動化製造不可或缺的生產工具。隨著科技
的蓬勃發展，微電子、資訊及電機控制技術的進步，以及人類的活動範圍不斷擴大，機
器人應用也從傳統製造領域走向多元的發展。如採掘、建築、海洋開發、醫療、服務，
以及娛樂等行業，都提出了自動化和機器人化的要求。這些行業與製造業相比，主要特
點是工作環境的非結構化和不確定性，因而對機器人的要求更高，需要機器人具有移動
功能、對外感知能力以及自主規劃能力等。機器人主要有三大基本功能：感知與認知、
運動規劃與控制、學習。機器人能透過各種感測器去辨識所處的環境，如建構環境地圖、
辨識人臉等[1]。得到感測訊息後，運動規劃與控制系統就決定機器人下一步的行動與策
略，同時藉由學習的方式，修改機器人的行為模式以及運動方式。隨著人工智能、聲音
及圖形辨識技術、無線網路的不斷發展，新一代機器人將不再需要遙控，變得更加自立
與互動。在低成本、高速化、小型和輕量化、計算機控制、高精度化、以及視覺等技術
的飛速發展下，機器人的功能也將日益多元化和智能化[2]。 
隨著機器人（Robot）產業的蓬勃發展，國際間學術機構對機器人的研究儼然成為一股潮
流，目前已被開發出的機器人不論上天下海、會思考能交談、能跑能跳，甚至能做家事
等，種類可說是琳瑯滿目。隨著 21 世紀的社會結構變化，如資訊化及高齡化等，智慧型
機器人產業已與資訊科技（Information Technology；IT）產業及生化產業同為領導未來
的主要產業。根據聯合國統計資料顯示，估計 2025 年老年人口總數將高達 20 億人，高
齡化社會及可創造生產力的人口結構產生變化，將會衍生各種社會型態、經濟型態及消
費型態的轉變，更牽動整個國家或全球未來的發展，服務型機器人產品的開發已成為各
國發展重點。 
 8
本研究主要動機是在於單機器人對資訊的獲取、處理及控制能力等方面都是有限的，對
於複雜的工作任務及多變的工作環境，單機器人的能力更顯不足。群組機器人系統比單
機器人系統具有更強的優越性，主要表現在以下幾個方面： 
 N 個機器人具備合作及協調的特性，其能力可遠大於一個單機器人的 N 倍。 
 單一複雜機器人可由多個簡單機器人取代，其設計與製造更為容易且成本更低。 
 群組機器人系統效率較高。 
 擁有較佳的環境適應能力、較高的靈活性並具有強健性及自我組織能力等優勢。 
根據系統中機器人功能結構的不同，可將群組機器人系統分為相同結構系統和相異結構
系統。相同結構系統就是系統中每個機器人的結構相同、功能相同；相異結構系統中每
個機器人的結構和功能不盡相同。對於相同結構群組機器人系統研究的主要問題是設計
正確的控制方案和通信機制，使之能正確完成給定的任務；而對於相異結構群組機器人
系統的研究主要是解決如何在它們之間進行有意識的合作問題，另外還有動作選擇問
題、通信衝突問題的解決。本研究將以相同結構之群組機器人系統為主要研究裝置。 
本研究主要目的是將建構多功能性之移動式群組機器人系統（Swarm Robots System），以
粒子群最佳化演算法為基礎，使各自單機器人具備簡單的智慧型功能，再藉由無線網路
將訊息互相傳遞，以利全系統機器人能快速完成目標，並能避免互相碰撞及任務衝突等
問題。本計畫將分為粒子群群聚理論探討與實現、機器人硬體實現與製作及任務複雜度
等主題做深入研究；任務目標為搜尋空間中的特定目標物，群組機器人系統須能快速搜
尋抵達目標物，並將目標物搬移至指定位置；由於市售機器人單價過高，組成群組機器
人系統所需之經費並非所有研究單位所能負擔。因此，自行開發高性能低成本之研究用
機器人，將是跨入群組機器人研究的首要工作；將群聚理論實現於群組機器人系統中，
並針對群聚理論之收斂性問題進行探討與提出解決方案。 
 
三、文獻探討 
隨著機器人產業的蓬勃發展，有關機器人的研究已儼然成為一股潮流，目前已開發出能
思考、交談、照護、巡邏的智慧型機器人，其種類可謂琳瑯滿目[46][47][48]。機器人控制問
題至今仍有許多問題待解決，加上未來的發展不可限量，促使大批學術人才投入機器人製造
與控制；因此，如何開創出更符合人類需求的多功能機器人，將是所有研究人員共同的目標
與課題。參考文獻中比較具代表性的結果，比較、分析如下： 
3.1 國內文獻與研究概況 
 10
組機器人定位、環境探索、地圖建立及群組機器人合作搬運物體等。 
 
 動態環境下群組機器人隊形保持 
群組機器人隊形保持問題的研究包括如何形成隊行、如何在行進過程中保持隊形、如何
在行進過程中避開障礙物、如何根據需求隨時改變隊形及任意隊形的規劃[6]。早期的群
組機器人系統隊形保持問題研究主要集中在如何形成隊形和如何在行進過程中保持隊形
兩個方面。隊形保持方法中主要有領導者為基礎的方法、基於行為的方法和虛擬結構法，
而很多研究工作也都致力於對這些方法進行改進以提高系統的穩定性。近年來，群組機
器人系統隊形保持問題的研究主要集中在如何在動態未知環境下保持隊形，如何利用保
持隊形的群組機器人系統來完成給定任務，以及如何在保持隊形的同時避開環境中的各
種障礙等方面[7]。文獻[8]授予每台機器人共同掌握所有控制權，來維持機器人之間的隊
形，利用分解或分佈共同掌握控制策略，可在團體中有任何成員失敗時，由其他成員繼
續達成目標。 
 群組機器人定位、環境探索、地圖建立 
感知是智慧型機器人行動的基礎，在移動機器人中最主要的感知問題是定位和環境建
模，目前已有以視覺作路標辨識、內建地圖的全域定位、陀螺儀及 GPS 等多種定位方法。
但面對未知且非結構性的環境中，GPS 才能實現全域定位；但 GPS 亦會受到精度及安全
等因素限制。近年來，許多研究提出多種環境地圖建立與定位的同步處理方法，機器人
之間透過超音波、紅外線、雷射或影像等感測器相互探測，然後透過統計、濾波等方法
進行訊息整合，由此得到系統中個別機器人的相對位置。群組機器人系統如何完成未知
動態環境探索，環境地圖建立，並具有準確的定位能力是近年來群組機器人系統研究的
重點[9][10]；這些問題的研究具有許多潛在的應用前景，如危險環境探索、軍用機器人
編隊攻擊、偵察、清掃核廢料、噴灑農藥等。相關應用領域中，群組機器人系統具有單
機器人系統所無法比擬的優點，如群組機器人之間可以彼此交換位置資訊，為定位演算
法提供更豐富的定位參考資訊；其次，因為不同的機器人可以裝備不同類型的感測器，
而且機器人之間可以分享訊息；因此，群組機器人系統可以獲得更多的環境資訊，從而
提高整個系統的環境探測能力和定位能力[11][12]。文獻[13]中，利用群組機器人的方式
來完成區域探索的工作，而工作範圍以每台機器人可相互通聯為限制區域。考慮機器人
之間的距離及地圖校準的技巧，得以有效減少傳輸資料量，進而避免網路擁塞。文獻[14]
探討如何利用群組機器人，以最短的時間及最佳路徑的選擇，畫出所要的圖。 
 群組機器人合作搬運物體 
 12
四、研究方法與內容 
4.1 群組機器人系統平台機構建立 
 ◆機器人主要系統架構 
如圖 4.1.1 所示為移動式輪型機器人之系統架構，由五個部分組成，分別為控制核
心、運動機構、感測介面、通訊介面、電源電路；運動機構部分是由兩個步進馬達、兩
個海綿材質輪胎、步進馬達驅動電路構成，主要功能為提供機器人移動時之動力來源；
感測介面部分是由三軸加速度感測、電子羅盤模組、紅外線感測電路構成，主要功能為
機器人周圍感知訊號能力；通訊部分則由 UART 串列傳輸介面和 ZigBee 無線傳輸模組，
作為機器人與外界溝通或傳輸資料的能力。 
 
圖 4.1.1 群組機器人(單一)系統架構 
 
◆機器人移動平台機構 
整台機器人移動平台機構之硬體組成架構，可由圖 4.1.2 來表示之，機器人底層構成
由兩組步進馬達、輪軸和輪子，以連結座直接安裝鎖至底盤之中；控制核心電路與感測
電路板，直接裝置於底盤之上。為了節省空間將步進馬達驅動電路板，放置於控制核心
與感測電路板中間；各電路板訊號傳輸皆以排線完成，電源供應部分以一條電源線直接
連接電池，並聯至各個電路板之中。 
 14
 
圖 4.1.4 差動輪式機器人座標圖 
 
 
 
表4.1.1 主要硬體功能 
裝置設備或元件 功能描述 數量 
微處理機 整合感測訊號、LED 顯示控制、整合機器人資訊、移動驅動控制。 1 
紅外線感測模組 近距離偵測，用來探測週遭環境 8 
光敏電阻 用來感測機器人周圍亮度 1 
電子羅盤 用來偵測機器人之大地方位 1 
三軸加速度 用來測量機器人本身加速度量 1 
ZigBee 
無線傳輸模組 
作為機器人與電腦端，或機器人與機器人，
相互傳輸資料之裝置 2 
步進馬達(兩相) 帶動輪子使機器人移動 2 
海綿材質輪子 使機器人轉向，進行多方向移動 2 
LED 顯示 輔助顯示機器人狀態 8 
穩壓電源晶片 提供穩定電源至機器人 2 
鋰聚電池 提供整台機器人之電力來源 1 
   
     
 16
 
圖 4.1.6 壓電式加速度計機械原理表示圖 
 
c. 數位電子羅盤模組 
數位電子羅盤，也叫數位羅盤，是利用地磁場來定北極的一種方法。古代稱為
羅經，現代利用先進加工工藝生產的磁阻傳感器為羅盤的數字話提供了有力的幫
助。電子羅盤主要是利用地磁場來測量。要保證精確的測量，校正是必不可少的。
因為各個地方的地磁場並不是一樣的。同時，還有各種異常磁場的存在。電子羅盤
能應用於地質，衛星 GPS 系統，風水，越野車，航海，實驗儀器等。 
電子羅盤 HM55B 為獨立設計的雙軸指南針感測器模組，如圖 4.1.7，內建 3 伏
特轉換與過電流阻抗保護電路；可感應與量測朝向南方與東方的磁場強度，磁場強
度精密度為（microtesla, μT）範圍的微弱變化，經由韌體校正後可達 6 位元（64 個
方位指向）的精準解析度。 透過同步時脈介面的序列指令作控制傳輸，從開始量測
至取得方位角度之回覆資料僅需約 30 ~ 40 ms 的時間週期；常應用於無線和步行機
器人方向感測器、袖珍的手持電子羅盤及汽車電子指南針等。 
 
(a) (b) 
 
圖 4.1.7 電子羅盤 HM55B (a)實體圖 (b)腳位圖 
 
 
 18
 
(a) 
 
              
(b)                                     (c) 
圖 4.1.9 (a) ~ (c)、尋軌感測元件 CNY70 之排列形狀 
 
 
       
(d)                                            (e) 
   
      
(f)                                            (g) 
圖 4.1.9 (f) ~ (g)、尋軌感測元件 CNY70 之排列形狀 
 
 
表 4.1.2、尋軌感測元件 CNY70 排列之優缺點探討 
排列方式 優缺點 
一字型 優: 最大範圍橫向偵測(五行) 
缺: 縱向偵測只有一列，與只有一個感測器的效果一
樣，因此使用效率不高。 
V 字型 優: 橫向偵測範圍與為最多的五行，且縱向偵測也提高
至三列，將感測器向前移動可提前了解前方狀況。
缺: 如果機器人轉動方向使黑線剛好同時遮到三個感測
器，降低使用效率。 
倒 V 字型 優: 橫向偵測範圍與為最多的五行，且縱向偵測也提高
至三列。 
缺: 如果機器人轉動方向使黑線剛好同時遮到三個感測
器，降低使用效率，且中央感測器位置在最前方，
所以是為追蹤後方的情形，非我們想要的功能。 
 20
 
◆演算法設計 
1. 藉由五個感測器所接收到的值判斷機器人是否偏離黑線?因此在程式碼的撰
寫，上需依照不同的 case，給予機器人的兩個輪子做速度上的改變。將每個感測器
設定編號如圖 4.1.11 
 
圖 4.1.11 尋軌感測器編號示意圖 
 
 
圖 4.1.12 感應器判斷流程圖 
 
     為了讓機器人知道自己的位置，我們撰寫了一段程式碼，可以算出機器人行走的距離藉
以定位: 
 
Step1:   先利用 mplab 裡的 stop_watch 觀察每隔 1ms 就會執行中斷的程式碼，確切
中斷的時間(ex: 0.97ms)。 
 22
一小時多的連續運動。 
 
 
圖 4.1.14 鋰聚電池 
 
 
  4.1.3 通訊介面 
a. ZigBee 無線傳輸模組 
本台移動機器人所使用的 ZigBee 無線傳輸模組，其通訊架構如圖 4.1.15 所示，
則模組內部晶片為 UZ2400，規格如表 4.1.3。主要優點是低成本、簡單應用的 2.4G
射頻發射器，其繼承了 ZigBee 大部分的優點，同時又在 ZigBee 的基礎上提高傳輸
速度至 625Kbps；缺點是耗電大，發射時約消耗 3.3V~3.6V。 
 
表4.1.3 UZ2400之規格  
頻率 2.405GHz~2.480GHz 
傳輸速度 最大傳輸速度為 625Kbps 
通訊介面 UART (RS232) 
鲍率 可設定為 9600~115200bps 之間。 
電源供應 正常操作電壓在 3.3~3.6V。 
靈敏度 -95dBm 
輸入功率 最大輸入功率 5dBm 
 
 
 24
 
  4.1.4 運動機構設計 
本研究機器人之運動機構，主要是由兩個兩相六線式步進馬達所構成，如圖
4.1.16 所示為機器人之立體系統分解圖，其中包含ㄇ字型底座、海綿輪子、輪子軸
承、銅柱、螺絲、螺帽、電路板等；差動輪型機器人整個機構完成組合後，如圖 4.1.17
所示。 
  
 
圖 4.1.16 差動輪型機器人之立體分解圖 
 
 26
   

  otherwiseiterP
iterPbestfitnessiterPfitnessiterPbest
iterPbest j
j
i
j
i
j
ij
i
i )(
)()( if)(
)1(  
     
  (4.2.1) 
 )1( min arg)1(
)1(


iterPbestfitnessiterGbest ji
iterPbest
j
j
i
     
  (4.2.2) 
其中 )(fitness 函數表示為適應函數。則粒子的移動特性會依據上述個體最佳
解與群體最佳解的資訊以決定下次移動的方向與大小。因此粒子群演算法中速度更
新與位置更新之方程式分別表示為： 
 
 )()(                                     
)()()()1(
22
11
iterPiterGbestrc
iterPiterPbestrciterViterV
j
i
j
i
j
i
j
i
j
i
j
i


  (4.2.3) 
)1()()1(  iterViterPiterP jijiji   (4.2.4) 
其中 iter 表示為當時演算的迭代次數； 1r 、 2r 表示為介於 0 到 1 的隨機數值；
1c 、 2c 表示為粒子的加速度係數。圖 4.2.1 為 2 維度搜尋空間之粒子移動特性的示
意圖；粒子之速度變化是由速度慣性、個體最佳解與群體最佳解三個向量所組成。 
 
)(iterPi
)(iterVi )1( iterVi
)1( iterPi
)(iterPbesti
)(iterGbest
 
圖 4.2.1 粒子移動示意圖 
當 jiV 的情況發生時，會使粒子位置變動太過劇烈，因此加入最大速度限
制，以確保粒子位置變化在合理的範圍內，而使用程序為執行速度更新方程式後得
到下一次迭代之速度，並且未執行位置更新方程式前，進行速度限制其方程式為： 
 
  



otherwiseViterVsign
ViterVabsiterV
iterV jj
i
jj
i
j
ij
i
max
#
max
##
)1(
)1( if)1(
)1(   
 (4.2.5) 
 28
 Step 11： 判斷是否所有粒子都已計算過適應值與更新粒子各項資訊；若 psi  則 i = 
i + 1，並回到 Step 4；否則執行 Step 12。 
 Step 12：判斷迭代次數是否到達最大迭代次數， maxiteriter  若條件成立則演算終
止，否則 1 iteriter ，並且設定 i = 1 回到 Step 4。 
粒子群最佳化演算法的演算流程圖可表示於圖 4.2.2。 
 
dd
i VVsign max
# )(
dd
i VV max
# || 
 
圖 4.2.2 粒子群演算法之演算流程圖 
 
典型粒子群最佳化演算法改善機制為，分析慣性權重或加速度係數等參數對於演算
法搜尋能力的影響，以提出適應調整的技術。或是針對特定情況，增加對應的改善機制
 30
4.2.3 時變加速係數之粒子群演算法 
1999 年 P. N. Suganthan [115]使用類似時變慣性權重之概念用於調整個體最佳解
與群體最佳解之加速係數，稱之為時變加速度係數之粒子群最佳化演算法
（Time-Varying Acceleration Coefficients Particle Swarm Optimization，PSO-TVAC），
而加速度係數（ 1c 與 2c ）之變化如下所示： 
 
initialinitialfinal citer
itercciterc 1
max
111 )()(    (4.2.10) 
initialinitialfinal citer
itercciterc 2
max
222 )()(    (4.2.11) 
 
其中 initialc1 與 finalc1 分別表示個體最佳解之加速數係數的最初值與最終值，
initialc2 與 finalc2 則分別表示群體最佳解之加速數係數的最初值與最終值， iter 與
maxiter 代表著當時迭代次數與演算法之最大迭代次數。 
1c 參數的選擇影響演算法對於個體最佳解之方向搜尋的程度，而 2c 則與群體最
佳解之方向的搜尋能力有關聯。A. Ratnaweera 等人[96]針對不同的 1c 與 2c 的組合，
以數個測試函數進行測試，並且歸納出最佳的 1c 與 2c 的選擇， 1c 隨著迭代由 2.5 下
降至 0.5， 2c 則隨著迭代由 0.5 上升至 2.5。 
 
4.2.4 自適應層次粒子群最佳化演算法 
自適應層次粒子群最佳化演算法（Self-Organizing Hierarchical Particle Swarm 
Optimization，HPSO）是於 2004 年 A. Ratnaweera、S. K. Halgamuge 與 H. C. Watson 
[96]所提出。文獻中藉由一些測試函數觀察粒子群最佳化演算法，在搜尋最佳解的
過程中會陷入局部最佳解的位置，此現象與粒子群的初始設定有所關聯，因此加入
重新初始化粒子速度之機制（Reinitialization Velocity），以解決粒子群最佳化演算法
易陷入局部最佳解的問題。重新初始化機制的使用情況為當粒子在搜尋空間中停滯
時，即 0jiV 的狀態出現則啟動重新初始化機制。 
重新初始化機制之執行程序是先設定慣性權重為零，接著判斷粒子之速度是否
為零，當粒子速度為零時，則針對此一粒子的速度進行初始化的動作。初始化之方
 32
)(iterPi
)(iterPbesti
)(iterGbest
)1( iterVi
)1( iterPi
 
圖 4.2.3 自適應層次粒子群最佳化演算法二維示意圖 
 
本文提出隨機個體最佳解之機制，對於上述當個體最佳解更新時之較小的搜尋
範圍進行改善，以擴大搜尋的範圍。隨機個體最佳解之概念是當個體最佳解更新時，
則 0))()((  iterPiterPbest jiji 並且速度更新方程式變為： 
 
 )()()1( 22 iterPiterGbestrciterV jijiji    (4.2.14) 
 
對於粒子搜尋的範圍則只有當時位置到群體最佳解的座標軸上，為了改善此一
問題，則加入隨機個體最佳解以提高搜尋的範圍，其方程式入下所示： 
 
 
 )()(                     
)()()1(
22
11
iterPiterGbestrc
iterPiterPbestrciterV
j
i
j
i
j
i
j
rand
j
i


  (4.2.15) 
 
其中 jrandPbest 表示從粒子群中隨機挑選出其他粒子之個體最佳解。藉由上述之
方式，粒子的搜尋範圍可擴大到當時位置、隨機個體最佳解與群體最佳解的範圍，
其二維示意圖如圖 4.2.4 所示。 
)(iterPbestrand
)(iterPi
)1( iterVi
)1( iterPi
)(iterGbest
 
圖 4.2.4 隨機個體最佳解機制之二維示意圖 
 34
i = i + 1，並回到 Step 4；否則執行 Step 15。 
 Step 15：判斷迭代次數是否到達最大迭代次數， maxiteriter  若條件成立則演算終
止，否則 1 iteriter ，並且設定 i = 1 回到 Step 4 繼續演算。 
 
Step 10
Step 11
Step 7
Step 6
Start
Initialize position and velocity 
randomly of each particle
Initialize Pbest and iter = 1
Set the HPSO-RP 
parameters
Evaluate fitness for i-th particle
i = 1
fitness(P)<fitness(Pbest)
Update Pbest
Update Gbest
i > ps
Update particle velocity
Update particle position 
iter > itermax End
i + 1
iter + 1
Yes
No
YesNo
No
Yes
Generate Pbest randomly for 
velocity update
Reinitialize 
velocity
Yes
No
Step 1
Step 2
Step 3
Step 4
Step 5
Step 8
Step 9
Step 12
Step 13
Step 14
Step 15
No
Yes
dd
i VVsign max
# )(
0# diV
dd
i VV max
# || 
 
圖 4.2.5 具隨機個體最佳解機制之演算法流程圖 
 
 36
 
圖 4.3.2 群組機器人搜尋單一目標示意圖 
4.3.2 群組機器人搜尋過程中建立地圖 
群組機器人在環境中搜尋目標物時，首要工作是使機器人在搜尋過程中，建立
出一個環境地圖。在本研究中，環境地圖的模型基礎是以格點地圖表示，如物體外
型不規則，將以最小可包覆的正方形區塊表示[117]，如圖 4.3.3 所示。實際每個格點
的長寬設定為 34 公分，考慮機器人在行走時避免碰撞到障礙物，機器人底部面積小
於格點尺寸，故行走過的路徑並不會與格點產生重疊。 
 
 
圖 4.3.3 格點地圖示意圖 
 
一般常見的格點移動表示法有四方位與八方位兩種[118][119]。本文採用四方位
行進方向（如圖4.3.4），機器人只允許以直角前進，即只能具有「上(T)、下(B)、左
(L)、右(R)」等四個方向的動作，用於基本行進規則中，判斷下一次移動方向是由機
器人感測周圍障礙物訊息所決定。 
 38
 
圖 4.3.5 「仿生搜尋」演算法流程圖(Part1) 
 40
 
圖 4.3.6 障礙物感測與移動距離示意圖 
 
仿生搜尋在探索搜尋的過程中，可以建立出環境地圖，然由環境地圖可轉化為
路徑加權圖，由圖4.3.7得知，可在地圖死巷中（如點 ACD）或多路徑選擇處（如點
B），設立節點（vertex），而節點之間邊線（edge）的加權值，則為機器人行走格點
距離。 
 
圖 4.3.7 環境地圖與路徑加權圖 
 
4.4 群組機器人編隊與引導演算法理論探討 
本研究的目的即是希望將此動態目標導引至既定位置或路徑上。由於，動態目標本
身已具備移動及避障之能力，因此群組機器人系統將進行編隊，形成一道屏障，使動態
物體將此視為障礙物，並啟動避障行為。群組機器人系統維持包圍隊形，持續朝目標位
置移動，動態物體將藉由此包圍被導引至目標位置；此現象如同警車圍捕，迫使歹徒朝
陷阱前進，或空戰時的敵機俘虜。如圖 4.4.1 所示，圖中較大物體為動態目標，”…”虛線
是群組機器人系統之導引軌跡，”-.-”虛線是動態目標可能的移動軌跡。 
 42
置（xh，yh）進行控制，因此可藉由式(4.41)將機器人中心點轉化為機器人前方位置
其關係式如下： 
 







)(sin
)(cos
)(
)(
)(
)(
t
t
L
ty
tx
ty
tx
c
c
h
h


                 (4.4.1) 
 
機器人的移動變化模型，可藉由 v（機器人直線移動速度）及 （機器人旋轉
角速度）來獲得之，因此機器人中心點移動變化，可表示如式（4.4.2）所示： 
 








)(
)(
)(sin)(cos
)(sin)(sin
)(
)(
t
tv
tLt
tLt
ty
tx
h
h




                (4.4.2) 
 

L
),( cc yx
L
 
),( hh yx

v
R

x axis
y axis
h
r
 
圖 4.4.3 差動輪機器人模型示意圖 
 
機器人直線速度 v和角速度之產生，是靠著機器人左右輪旋轉達成，因此直線
速度 v和角速度，可由式（4.4.3）表示： 
 








R
L
LrLr
rr
t
tv


 //
2/2/
)(
)(
                       (4.4.3) 
 
其中 L 、 R 分別是左、右輪角速度。 
所以總和以上關係式（4.4.1）-（4.4.3）機器人運動學模型可表示成：器人直線
速度 v和角速度之產生，是靠著機器人左右輪旋轉達成，因此直線速度 v和角速度
 44
1v
),( 11 cc yx
),( 11 hh yx
Follower1
1
2v
),( 22 cc yx
),( 22 hh yx
2
3v),( 33 cc yx
),( 33 hh yx3
Follower2
Follower3
3113 
2112 
3223 
3v
 
圖 4.4.4 機器人與機器人隊形位置關係示意圖 
 
1v
),( 11 cc yx
),( 11 hh yx
Follower1
1
2v
),( 22 cc yx
),( 22 hh yx
2
3v
),( 33 cc yx
),( 33 hh yx
3
Follower2
Follower3
0v
),( 00 cc yx
),( 00 hh yxL

Leader
01
02
03
 
圖 4.4.5 領導與追隨機器人隊形位置關係示意圖 
4.4.3 通訊拓樸 
機器人之間的通訊拓樸架構，包含虛擬領導（Virtual Leader）及領導-追隨
（Leader-Follower）兩種；例如：虛擬領導架構如圖4.4.6所示，此架構中有5台機器
人並且無領導機器人，通訊拓樸狀態矩陣 A機器人表示與機器人通連關係，其通訊
狀態可表示成： 




















01000
10010
11010
00101
01100
555251
252221
151211
aaa
aaa
aaa
A




              (4.4.8) 
如圖4.4.7所示為領導-追隨架構，此架構中有5台機器人，其中有1台領導機器
人、4台追隨機器人，通訊拓樸狀態矩陣 A追隨機器人表示與追隨機器人之通連關
 46
其中 n為機器人的數目， iU 為機器人 i控制訊號、 ija 為機器人 i與機器人 j 通訊狀態、
X 為機器人位置狀態。 
若考慮領導-追隨架構的集中控制，則可表示成： 
 
             


n
j
iiijiji tXtXbtXtXaU
1
0 ))()(())()((               (4.4.11) 
 
其中 n 為追隨機器人的數目， iU 為追隨機器人 i控制訊號、 0X 為領導機器人位置狀態。 
若是領導-追隨架構的編隊控制，則可表示成： 
 
       


n
j
iiijiijiji tXtXbtXtXaU
1
00 ))()(())()((         (4.4.12) 
 
4.4.5 模糊編隊控制器設計 
式（4.4.12）所示，以協同演算法為基礎之控制策略，類似比例 P 控制器，可藉
由傳統線性理論求得增益常數。然而比例控制器面對複雜控制環境時，如隊形變換、
通訊拓樸變換、領導機器人移動速度加快等因素，響應結果會受其影響使控制效能
降低，甚至伴隨有穩態誤差的現象。所以利用智慧型控制理論可解決控制環境不確
定因素對系統響應所造成的影響，因此，本研究將式（4.4.13）中的控制量視為誤差
訊號 Err，誤差訊號作為模糊控制器輸入，以模糊控制器輸出作為編隊控制器之控制
訊號，如式（4.4.14）： 
 
               


n
j
iiijiijij tXtXbtXtXatErr
1
00 ))()(())()(()(        (4.4.13) 
            ))(( tErrFU FUZZY                                    (4.4.14) 
 
其中 F(‧)是模糊數學函數。 
傳統非線性控制理論之控制器設計過程複雜度將隨之提高；如倒階控制器，但
其控制器型式相當冗長，無法直觀的瞭解系統狀態與控制器輸出之關係。利用加入
專家經驗之智慧型控制理論設計非線性系統之控制器，可簡化設計程序。雖然模糊
控制理論已大量被使用於非線性系統中，但面對高階系統亦有其缺點，問題之一是
規則庫的維度增加致使規則設計複雜度呈指數劇增；圖4.4.8所示為以單輸入單輸出
模糊控制器之編隊控制架構。 
 48
 
圖 4.4.10 模糊歸屬函數 
 
表 4.4.1 模糊控制規則庫 
位置追蹤 
Input NB NS Z PS PB 
Output PB PS Z NS NB 
速度補償 
Input NB NS Z PS PB 
Output PB PS Z NS NB 
  
追隨機器人進行位置追蹤時若只考慮位置資訊，當領導機器人等速前進，追隨
機器人會隨著與領導機器人位置修正移動策略，當追隨機器人追蹤到領導機器人位
置後，因誤差為零因此追隨機器人會停下來，這樣情形永遠無法追蹤到領導機器人。
追隨機器人為了可以追到領導機器人的位置並且等速前進，領導機器人的速度資訊
就相當重要，因此需要位置和速度的訊息。為了克服這樣的情形，因此又加入一個
模糊積分型的速度補償控制器，如圖4.4.9下半部表示，速度補償控制器輸入，是以
誤差函數 Err 乘上一個比例增益 SF3，模糊函數輸出是需經由另一個比例增益 SF4，
最後經由一次積分後，才可獲得速度補償控制器輸出 UA，因此最後的模糊編隊控制
器輸出 UFuzzy，為位置追蹤控制器輸出 Up 與速度補償控制器輸出 UA之合成： 
                  APFUZZY UUU                               (4.4.16) 
 以上模糊控制器之設計，當中歸屬函數的設計必須仰賴專家經驗去作設
定，以及輸出入比例增益之選擇仍需不斷地調整，才能獲得良好的控制響應。為解
決此問題在此使用一種仿生最佳化演算法，本研究利用粒子群演算法來調適相關參
 50
                 43222122 ,,,,,,, SFSFfSSFSFfSP AAPPdi              (4.4.20) 

















1001
10001.0
99.001.0
99.001.0
1001
10001.0
99.001.0
99.001.0
4
3
2
2
2
1
2
2
SF
SF
f
S
SF
SF
f
S
A
A
P
P
 
 
其中 diP 為第 i 個粒子所在的位置；d 欲最佳化調整 CFFC 控制器參數為維度。  
以下是針對粒子群演算法最佳化 CFFC 步驟： 
Step1: 設定粒子群演算法所需之參數，如加速度係數 1c 、 2c 、最大速度限制 jVmax，
dj 、粒子群數量 ps與最大迭代數 maxiter 等。 
Step2:  隨機產生在 d 維度之 ps組粒子的位置 )0(diP 與速度 )0(diV ，其中 psi ,...,2,1 。 
Step3： 初始設定所有粒子之個體最佳解為初始位置， )0(didi PPbest  。並且設定粒
子個數指標 i = 1 與演算法迭代數 iter = 1。 
Step4： 計算第 i 個粒子之當時位置對應適應函數的適應值，即  )(iterPfitness di 。將每
個粒子所搜尋到的調整變數 diP 代入 CFFC 控制器中，從時間 0 至 ft =120s，
取樣時間為 st =0.2s，進行編隊控制系統模擬，之後計算 ITAE(含 X 軸與 Y
軸)之適應函數。 
Step5： 比較第 i 個粒子於第 iter 次迭代時之位置的適應值是否優於其個體最佳解
之適應值，即判斷條件式(4.4.20) cond1，若條件成立則執行 Step 6；否則跳
至 Step 8。 
Step6： 更新第 i 個粒子之個體最佳解，即計算式(4.4.20)。 
Step7： 當粒子之個體最佳解更新後，則依據式(4.4.21)更新群體最佳解，並執行 Step 
8。 
Step8： 將取得的記憶與群體資訊，即個體最佳解與群體最佳解，依據式(4.4.22)更
新粒子之速度，接著執行 Step 9。 
Step9： 判斷更新後之速度是否大於最大速度限制，若條件成立則計算式(4.4.24)，
接著執行 Step 10。 
Step10： 依據式(4.4.23)更新第 i 個粒子之位置。 
 52
  



otherwiseViterVsign
ViterVabsiterV
iterV jj
i
jj
i
j
ij
i
max
#
max
##
)1(
)1( if)1(
)1( (4.4.25) 
 
4.5 群組機器人任務行為整合方式 
本研究之群組機器人行為包含搜尋任務規劃及編隊引導任務規劃。搜尋任務規劃機器人
於隨機在空間中移動，並偵測前方是否有障礙物，將障礙物之距離訊息交由感測器換算，以
預先規劃路徑避免碰撞衝突；若尋獲目標則將任務切換至編隊引導任務，且告知其他機器人
目標已發現，如圖 4.5.1 (a)。編隊與引導任務規劃需分為領導或一般狀態，首先到達目標並結
合完畢之機器人視為領導，負責下達移動指令及規劃路徑；領導機器人另一個任務是判斷引
導圍捕機器人是否已經足夠，若目標物體無法圍捕則發出支援命令，請求其他機器人前往支
援；若已足夠，則停止支援請求，使其他機器人能持續進行搜尋目標之任務，如圖 4.5.1 (b)。 
 
 54
五、結果與討論 
 5.1 粒子群最佳化演算法比較-模擬結果 
本文將使用六組測試函數以驗證，所提出有隨機個體最佳解之自適應層次粒子
群最佳化演算法，對於複雜且多極值函數的最佳解之搜尋能力。其測試函數為
Sphere、Rosenbrock、Rastrigin、Griewank、Schaffer’s f7 與 Schwefel 函數，分別為
[96][102]： 



D
i
iyyf
1
2
1 )(  (5.1.1) 
 

 
1
1
22
1
2
2 )1()(100)(
D
i
iii yyyyf  (5.1.2) 
 


D
i
ii yyyf
1
2
3 10)2cos(10)(   (5.1.3) 
1)cos(
4000
)(
1 1
2
4  
 
D
i
N
i
ii
i
yyyf  (5.1.4) 
 

 
1
1
1.02
1
225.02
1
2
5 )1))(50(sin()()(
D
i
iiii yyyyyf  (5.1.5) 
 


D
i
ii yyDyf
1
5.0
6 )|sin(|9829.418)(  (5.1.6) 
其中，D 表示目標函數之維度， y 代表目標函數之變動參數。各個函數之搜尋
範圍、最佳解之參數與最佳目標函數值為表 5.1.1 所示；其中， D]100  ,100[ 表示
函數各維度的搜尋範圍均介於-100 至 100 之間。 
表 5.1.1 測試函數之最佳解及其函數值與搜尋範圍 
Function Optimal Position Optimal Value Search Range 
1f  [0, 0, …, 0] 0 D]100  ,100[  
2f  [1, 1, …, 1] 0 D]50  ,50[  
3f  [0, 0, …, 0] 0 D]10  ,10[  
4f  [0, 0, …, 0] 0 D]300  ,300[  
5f  [0, 0, …, 0] 0 D]100  ,100[  
6f  [420.96, 420.96, …, 420.96] 0 N]005  ,500[  
 56
各個粒子群最佳化演算法之平均群體最佳解目標函數值之搜尋響應為圖 5.1.13
至圖 5.1.18，其中縱軸座標表示為目標函數值取 10log 運算後之結果，而橫軸為演算
法之迭代次數。觀察圖 5.1.13 與圖 5.1.14 對於單極值函數 Sphere 函數與 Rosenbrock
函數 HPSO-RP 相較於其他的粒子群最佳化演算法，其可以迅速的收斂至最佳解，並
且保有較佳的搜尋精度。由圖 5.1.15 至圖 5.1.18 針對多極值函數之搜尋特性，HPSO
相較於 PSO-TVIW 與 PSO-TVAC 其演算法具有跳說局部最佳解的能力，而本文提出
之隨機個體最佳解機制，更進一步的提高的自適應層次粒子群最佳化演算法的收斂
速度與較佳最佳解函數值。 
表 5.1.2 各個粒子群演算法之參數設定 
Algorithm w  1c  2c  
Reinitialize Velocity 
Range 
PSO-TVIW [0.9, 0.4] 2 2  
PSO-TVAC [0.9, 0.4] [2.5, 0.5] [0.5, 2.5]  
HPSO  [2.5, 0.5] [0.5, 2.5] ]1.0  ,[ maxmax VV   
HPSO-RP  [2.5, 0.5] [0.5, 2.5] ]1.0  ,[ maxmax VV   
 
表 5.1.3 粒子群演算法之最佳適應函數值 
Algorithm Sphere Rosenbrock Rastrigin 
PSO-TVIW 21067.6   51010.1   56.1 
PSO-TVAC 361039.8   41017.4   49.3 
HPSO 231060.6   50.4 11.1 
HPSO-RP 461066.4   37.9 7.33 
Algorithm Griewank Schaffer’s f7 Schwefel 
PSO-TVIW 1.53 7.70 31085.3   
PSO-TVAC 0.02 4.41 31086.2   
HPSO 31066.5   0.85 31072.1   
HPSO-RP 31038.2   0.79 31053.1   
 
 58
 
圖 5.1.3 Rosenbrock 函數之二維示意圖 
 
圖 5.1.4 Rosenbrock 函數之側視圖 
 60
 
圖 5.1.7 Griewank 函數之二維示意圖 
 
圖 5.1.8 Griewank 函數之側視圖 
 62
 
圖 5.1.11 Schwefel 函數之二維示意圖 
 
圖 5.1.12 Schwefel 函數之側視圖 
 64
 
圖 5.1.16 Griewank 函數之搜尋響應 
 
圖 5.1.17 Schaffer’s f7 函數之搜尋響應 
 
圖 5.1.18 Schwefel 函數之搜尋響應 
 
 66
將三台機器人預設起始座標如圖5.2.3，依序放置在特定位置，分別走不同方向
(左、下、右)搜尋黑線如圖5.2.4，超音波探測器偵測與牆壁距離10公分皆以向右迴避。 
 
 
圖 5.2.3 實驗場地全景 
 
 
圖 5.2.4 機器人探索出口示意圖 
 
     當第ㄧ台機器人搜尋到黑線時如圖 5.2.5，會將目前位置座標傳給其他機器人，其餘的
機器人隨即前往第ㄧ台機器人發現的出口，並且與前面機器人保持距離如圖 5.2.6。 
 
 68
 
圖5.2.7 沒有透過通訊合作使機器人壓住翹翹板底端 
 
 
圖5.2.8 有透過通訊合作使機器人壓住翹翹板底端 
 70
5.3 群組機器人編隊引導-模擬與實作結果 
本研究將分別針對 Leader 低移動速度、Leader 較高移動速度的情形做探討。在模擬
響應各個圖中，（a）為機器人行走空間座標位置響應圖，圖中圓形實心為各台機器人起
始點，紅色、藍色、綠色之虛線分別為三台引導機器人，紫色為目標機器人，三角型空
心為機器人行走軌距，紫色虛線為目標機器人。另外，星型標記為機器人行走後各時間
點進行編隊情況，黑色虛線為引導機器人目前編隊的形狀，依照時間先後，黑色虛線愈
粗。（b）為目標與引導機器人 1 對 x 與 y 軸編隊位置隨時間之變化，（c）為目標與引導
機器人 2 對 x 與 y 軸編隊位置隨時間之變化（d）為目標與引導機器人 3 對 x 與 y 軸編隊
位置隨時間之變化。 
5.3.1 目標機器人低移動速度 
一般而言，引導機器人面對圓形軌跡追蹤及編隊相對的比直線複雜困難；圖 5.3.1
為一致性演算法結合 P 控制器之響應圖，可看出引導機器人可移動至目標機器人至
編隊位置附近，但是仍然與編隊位置有一段距離的誤差。圖 5.3.12 為加入 I 控制器
後的響應結果，雖然可追蹤到編隊位置，但是在控制初期無法達到理想控制響應。
圖 5.3.13 是模糊控制器結合速度補償的控制器未經最佳化調整模擬圖，可以發現控
制響應有過度補償調整的現象。圖 5.3.14 是模糊控制器結合速度補償的控制器經由
粒子群演算法最佳化後調整模擬圖，可以發現經由最佳化調整後，引導機器人可以
快速追蹤目標機器人，並且可以跟目標機器人編隊位置。 
150 200 250 300 350
360
380
400
420
440
460
480
500
Formation Keeping And Path Tracking
(a) X-Position(cm)
Y
-P
os
iti
on
(c
m
)
 
 
Leader
Follower1
Follower2
Follower3
 72
0 50 100 150 200 250
100
200
300
400
500
Leader vs Follower1 X&Y Position
(b) Time(sec)
X
&
Y
 P
os
iti
on
(c
m
)
 
 
Follower1 X
Leader X
Follower1 Y
Leader Y
0 50 100 150 200 250
100
200
300
400
500
Leader vs Follower2 X&Y Position
(c) Time(sec)
X
&
Y
 P
os
iti
on
(c
m
)
 
 
Follower2 X
Leader X
Follower2 Y
Leader Y
0 50 100 150 200 250
100
200
300
400
500
Leader vs Follower3 X&Y Position
(d) Time(sec)
X
&
Y
 P
os
iti
on
(c
m
)
 
 
Follower3 X
Leader X
Follower3 Y
Leader Y
 
圖 5.3.2  Case A- PI 控制器之模擬圖 
 
100 150 200 250 300 350 400
350
400
450
500
Formation Keeping And Path Tracking
(a) X-Position(cm)
Y
-P
os
iti
on
(c
m
)
 
 
Leader
Follower1
Follower2
Follower3
 74
5.3.2 目標機器人高移動速度模擬 
圖5.3.5一致性演算法結合 P 控制器響應圖，由此圖可看出引導機器人可移動至
目標機器人至編隊位置附近，但是仍然與編隊位置有一段記距離的誤差。圖5.3.6為
加入 I 控制器後的響應結果，雖然可追蹤到編隊位置，但是在控制初期無法達到理
想控制響應。圖5.3.7是模糊控制器結合速度補償的控制器未經最佳化調整模擬圖，
可以發現控制響應有過度補償調整的現象。圖5.3.8是模糊控制器結合速度補償的控
制器經由粒子群演算法最佳化後調整模擬圖，可以發現經由最佳化調整後，引導機
器人可以快速追蹤目標機器人，並且可以跟目標機器人編隊位置。 
150 200 250 300 350 400 450 500 550 600
200
250
300
350
400
450
500
550
600
650
Formation Keeping And Path Tracking
(a) X-Position(cm)
Y
-P
os
iti
on
(c
m
)
 
 
Leader
Follower1
Follower2
Follower3
0 50 100 150 200 250
0
200
400
600
Leader vs Follower1 X&Y Position
(b) Time(sec)
X
&
Y
 P
os
iti
on
(c
m
)
 
 
Follower1 X
Leader X
Follower1 Y
Leader Y
0 50 100 150 200 250
0
200
400
600
Leader vs Follower2 X&Y Position
(c) Time(sec)
X
&
Y
 P
os
iti
on
(c
m
)
 
 
Follower2 X
Leader X
Follower2 Y
Leader Y
0 50 100 150 200 250
0
500
1000
Leader vs Follower3 X&Y Position
(d) Time(sec)
X
&
Y
 P
os
iti
on
(c
m
)
 
 
Follower3 X
Leader X
Follower3 Y
Leader Y
 
圖 5.3.5 Case B- P 控制器之模擬圖 
 76
0 50 100 150 200 250
0
500
1000
Leader vs Follower1 X&Y Position
(b) Time(sec)X
&
Y
 P
os
iti
on
(c
m
)
 
 
Follower1 X
Leader X
Follower1 Y
Leader Y
0 50 100 150 200 250
0
500
1000
Leader vs Follower2 X&Y Position
(c) Time(sec)X
&
Y
 P
os
iti
on
(c
m
)
 
 
Follower2 X
Leader X
Follower2 Y
Leader Y
0 50 100 150 200 250
0
500
1000
Leader vs Follower3 X&Y Position
(d) Time(sec)X
&
Y
 P
os
iti
on
(c
m
)
 
 
Follower3 X
Leader X
Follower3 Y
Leader Y
 
圖 5.3.7 Case B- Fuzzy 控制器(未調整)之模擬圖 
150 200 250 300 350 400 450 500 550 600
200
250
300
350
400
450
500
550
600
650
Formation Keeping And Path Tracking
(a) X-Position(cm)
Y
-P
os
iti
on
(c
m
)
 
 
Leader
Follower1
Follower2
Follower3
0 50 100 150 200 250
0
500
1000
Leader vs Follower1 X&Y Position
(b) Time(sec)X
&
Y
 P
os
iti
on
(c
m
)
 
 Follower1 X
Leader X
Follower1 Y
Leader Y
0 50 100 150 200 250
0
500
1000
Leader vs Follower2 X&Y Position
(c) Time(sec)X
&
Y
 P
os
iti
on
(c
m
)
 
 Follower2 X
Leader X
Follower2 Y
Leader Y
0 50 100 150 200 250
0
500
1000
Leader vs Follower3 X&Y Position
(d) Time(sec)X
&
Y
 P
os
iti
on
(c
m
)
 
 Follower3 X
Leader X
Follower3 Y
Leader Y
 
圖 5.3.8 Case B- Fuzzy(PSO 最佳化)之模擬圖 
最後針對各種控制器的響應結果，進行誤差數據分析，如表 5.3.1、5.3.2 所示，
以編隊位置誤差的 IAE、ISE、ITAE、ITSE，從表中可以發現本研究所提出的均優
於所比較之控制器。 
 78
六、結論與建議 
6.1 結論 
本研究對粒子群最佳化演算法進行改善，使得演算法在解決多極值函數最佳化的問題
上，具有較佳的搜尋能力。本研究所提出之具隨機個體最佳解機制之自適應層次粒子群演算
法，對於不同的測試函數都可搜尋出較佳的函數值，並且擁有良好的收斂特性。並且粒子群
最佳化演算法應用於將群組機器人的障礙物感測上，以及將位置控制與速度追蹤控制的單輸
入單輸出模糊控制，結合粒子群演算法對模糊控制器參數進行最佳化，成功地驗證在多機器
人編隊引導控制，以及群組機器人透過通訊分工合作的能力，使群組機器人可以執行多種任
務和提昇工作效率。最後總結所完成工作可分成以下三大部分： 
◆ 粒子群演算法改良與應用 
粒子群演算法在對複雜函數進行求解時，為了取得精確的函數特性用以加強對全域最佳
解搜尋的能力，因此使用大量的粒子群數量，而導致演算法的花費過大，則降低演算法的效
能。對於減少粒子群演算法之粒子數量，卻不降低全域最佳解的搜尋能力為可探討的議題。 
粒子群演算法除了解決多極值函數的問題，還可進一步針對其他特定函數如多目標函數
或動態函數進行改善。改善的方式可以開發新的演算法架構，或是將粒子群演算法與現行的
理論做結合，如混沌、類神經網路以為以加強函數求解的全面性。 
◆ 群組機器人合作目標搜尋 
障礙物感測透過多種感測器，使群組機器人能偵測到周圍障礙物，藉以得知距離而不會
與障礙物牆面碰撞，使機器人能夠完成閃避障礙物功能。使用無線通訊傳輸，將多個機器人
資訊整合，合作控制出口搜尋一開始，多機器人在封閉的環境下，藉由彼此身上的感測裝置
偵測障礙物並找尋目標，當其中一台先找到目標物位置後，隨即經由 Zigbee 通訊協定來傳輸
位置訊息通知其他機器人，並一起循著該目標物方向走出。 
◆ 群組機器人編隊引導控制 
以一致性控制架構為基礎的編隊控制，所提出的控制方法有優於傳統 PI 與模糊控制器的
控制性能；在考慮目標機器人較高速度的狀態下，引導機器人都能追蹤到目標機器人而並且
保持相同速度進行編隊。 
6.2 相關建議 
國外針對群組機器人合作已陸續有研究報告出爐，反觀國內群組機器人的研究仍屬起步
階段，但相較於日本的人型機器人或美國的軍事型機器人等，群組機器人的研究並未與世界
脫軌，仍有迎頭趕上之機會。尤其是群組機器人的研究，國內學術界對群聚智能之理論分析
 80
參考文獻 
[1] J. J. Craig, “Introduction to Robotics Mechanics and Control,” 1989. 
[2] 黃漢邦，”機器僕人上台一鞠躬—由工業邁向家庭之路”，科學月刊第三十七卷第九期。 
[3] 林俊良，智慧型控制分析與設計，全華科技圖書，初版，2005。 
[4] C. Cai, C. Yang, Q. Zhu, and Y. Liang, “Collision Avoidance in Multi-Robot Systems,” Proc of 
the 2007 IEEE Int. Conf. on Mechatronics and Automation, pp.2795-2800, Aug. 2007. 
[5] S. Zeng, and J. Weng, “Online-Learning and Attention-Based Approach to Obstacle Avoidance 
Using a Range Finder,” Journal of Intelligent and Robotic Syst., vol.50, no. 3, p.219-239, Nov. 
2007. 
[6] X.J. Jing, “Behavior Dynamics Based Motion Planning of Mobile Robots in Uncertain 
Dynamic Environments,” Robotics and Autonomous Syst., vol.53, pp.99-123, Nov. 2005. 
[7] Y. Hao and S. K. Agrawal, “Planning and Control of UGV Formations in a Dynamic 
Environment: A Practical Framework with Experiments,” Robotics and Autonomous Syst., 
vol.51, pp.101-110, May 2005. 
[8] W. Ren and N. Sorensen, “Distributed Coordination Architecture for Multi-Robot Formation 
Control,” Robotics and Autonomous Syst., Aug. 2007. 
[9] Z. Q. Bao, “Ant Algorithm for Navigation of Multi-Robot Movement in Unknown 
Environment,” Journal of Software, vol.17, no.9, pp.1890-1898, Sept. 2006.  
[10] J. Zhao, J. Jiang, and X. Zang, “Cooperative Multi-Robot Map-Building Based on Genetic 
Algorithms,” IEEE Int. Conf. on Information Acquisition, pp.360-364, Aug. 2006. 
[11] W. Burgard, C. Stachniss, and F. E. Schneider, “Coordinated Multi-Robot Exploration,” IEEE 
Transm. on Robotics, vol.21, no.3, pp.376-386, June. 2005. 
[12] T. Benjamín, M.-G. Lourdes, M.-C. Rafael, A.-M. Moisés, M. Raúl, H. Seth, “Planning 
Exploration Strategies for Simultaneous Localization and Mapping,” Robotics and 
Autonomous Syst., vol.54, pp.314-331, April 2006. 
[13] W. Sheng, Q. Yang, J. Tan, and N. Xi, “Distributed multi-robot coordination in area 
exploration,” Journal of Robotics and Autonomous Systems, vol. 54, no. 12, pp. 945-955, 2006. 
[14] K.-H. Lee and J.-H. Kim “Multi-Robot Cooperation-Based Mobile Printer,” Robotics and 
Autonomous Syst., vol.54, pp.193-204, 31 March. 2006. 
[15] L. Vig and J. A. Adams, “Multi-Robot Coalition Formation,” IEEE Trans. on Robotics, vol. 22, 
no. 4, pp.637-649, 2006. 
[16] 高尚，楊靜宇，群智能算法及其應用，中國水利水電出版社，初版，2006。 
[17] F. Bergh and A. P Engelbrecht, “A Cooperative Approach to Particle Swarm Optimization,” 
IEEE Trans. on Evol. Comput., vol. 8, no. 3, 2004. 
 82
Microware Images,” IEEE Trans. on Antennas and Propagation, vol. 55, no.3, pp. 568-576, 
2007. 
[34] A. Chatterjee, etc., “A Particle-Swarm-Optimized Fuzzy-Neural Network for Voice-Controlled 
Robot Systems,” IEEE Trans. on Industrial Electronics, vol. 52, no. 6, pp. 1478-1489, 2005. 
[35] Y. Jin and J. Branke, “Evolutionary Optimization in Uncertain Environments-A Survey,” IEEE 
Trans. on Evol. Comput., vol. 9, no. 3, pp. 330-317, 2005. 
[36] D. Parrott and X. Li, “Locating and Tracking Multiple Dynamic Optima by a Particle Swarm 
Model Using Speciation,” IEEE Trans. on Evol. Comput., vol. 10, no. 4, pp. 440-458, 2006. 
[37] K. Yasuda, A. Ide, and N. Iwasaki, “Adaptive Particle Swarm Optimization,” IEEE Int. Conf. 
on Syst., Man and Cybernetics, vol.2, pp.1554-1559, Oct. 2003. 
[38] R. Mendes, J. Kennedy, and J. Neves, “The Fully Informed Particle Swarm: Simpler, Maybe 
Better,” IEEE Trans. on Evolutionary Computation, vol.8, no.3, pp.204-210, June 2004. 
[39] I. C. Trelea, “The Particle Swarm Optimization Algorithm: Convergence Analysis and 
Parameter Selection,” Information Processing Letters, vol.85, pp.317-325, March 2003. 
[40] 許桂樹，陳克群，李怡銘，感測器原理與應用，全華科技圖書，初版，2007。 
[41] M. Dorigo, and C. Blum, “Ant Colony Optimization Theory: A Survey,” Theoretical Computer 
Science, vol. 344, pp.243-278, Nov. 2005. 
[42] D. Payton, M. Daily, R. Estowski, M. Howard, and C. Lee, “Pheromone Robotics,” 
Autonomous Robots, pp.319-324, 2001. 
[43] M. Dorigo, V. Maniezzo, and A. Colorni, “Ant System: Optimization by a Colony of 
Cooperating Agents,” IEEE Transm. on Syst., Man, and Cybernetics-Part B: Cybernetics, 
vol.26, no1, pp.29-41, Feb. 1996. 
[44] M. Koudil, K. Benatchba, A. Tarabet, and E. B. Sahraoui, “Using Artificial Bees to Solve 
Partitioning and Scheduling Problems in Codesign,” Applied Mathematics and Computation, 
vol. 186, pp. 1710-1722, 2007. 
[45] D. Karaboga and B. Basturk, “ On The Performance of Artificial Bee Colony (ABC) 
algorithm,” Applied Soft Computation, vol. 8, pp. 687-697, 2008. 
[46] 李雅鈴，“小型足球機器人之設計與實現” ，碩士論文，淡江大學，2004。 
[47] 鄭建邦，“智慧型購物機器人之設計與研製” ，碩士論文，南台科技大學，2003。 
[48] 司順安，“分散式自主性即時自走車智慧型控制器之發展” ，碩士論文，長庚大學，2003。 
[49] 台灣大學-機器人知覺與學習實驗室，http://www.csie.ntu.edu.tw/%7Ebobwang/projects.html 
[50] 交通大學-智慧型系統整合實驗室，http://isci.cn.nctu.edu.tw/ 
[51] 交通大學-嵌入式系統實驗室，http://xlab.cn.nctu.edu.tw/ 
[52] 南台科大，機器人與伺服驅動實驗室，http://studftp.stut.edu.tw/~49222021/index.htm 
 84
[74] 柏克萊大學，http://robotics.eecs.berkeley.edu/wiki/pmwiki/pmwiki.php 
[75] 東京大學，http://www.arai.pe.u-tokyo.ac.jp/ 
[76] 早稻田大學，http://www.takanishi.mech.waseda.ac.jp/ 
[77] 富士通研究所，http://jp.fujitsu.com/group/labs/ 
[78] UT, http://www.utk.edu/ 
[79] USC, http://www.usc.edu/ 
[80] WSU, http://www.wsu.edu/ 
[81] MIT, http://web.mit.edu/ 
[82] Z. L. Gaing, “A Particle Swarm Optimization Approach for Optimum Design of PID 
Controller in AVR System,” IEEE Trans. on Energy Conversion, vol. 19, no. 2, pp. 384-391, 
2004. 
[83] M. A. Abido, “Optimal Power Flow Using Particle Swarm Optimization,” International 
Journal of Electrical Power and Energy Systems, vol. 24, no. 7, pp. 563-571, 2002. 
[84] J. Kennedy and R. Eberhart, “Particle Swarm Optimization,” in Proc. IEEE Int. Conf. on 
Neural Networks, vol. 4, pp. 1942-1948, 1995. 
[85] J. Yu, L. Xi, and S. Wang, “An Improved Particle Swarm Optimization for Evolving 
Feedforward Artificial Neural Networks,” Neural Processing Letters, vol. 26, no. 3, pp. 
217-231, 2007. 
[86] T. Xiang, X. Liao, and K.-W. Wong, “An Improved Particle Swarm Optimization Algorithm 
Combined with Piecewise Linear Chaotic Map,” Applied Mathematics and Computation, vol. 
190, no. 2, pp. 1637-1645, 2007. 
[87] J. Yu, S. Wang, and L. Xi, “Evolving Artificial Neural Networks Using an Improved PSO and 
DPSO,” Neurocomputing, vol. 71, pp. 1054-1060, 2008. 
[88] Y. Shi and R. Eberhart, “A Modified Particle Swarm Optimization,” in Proc. of the IEEE Conf. 
on Evolutionary Computation, ICEC, pp. 69-73, 1998. 
[89] Y. Shi and R. Eberhart, “Empirical Study of Particle Swarm Optimization,” in Proc. of the 
IEEE Int. Congr. Evolutionary Computation, vol. 3, pp. 1958-1962, 1999. 
[90] M. Clerc and J. Kennedy, “The Particle Swarm-Explosion, Stability, and Convergence in a 
Multidimensional Complex Space,” IEEE Trans. on Evolutionary Computation, vol. 6, no. 1, 
pp. 58-73, 2002. 
[91] V. Kadirkamanathan, K. Selvarajah, and P. J. Fleming, “Stability Analysis of the Particle 
Dynamics in Particle Swarm Optimization,” IEEE Trans. on Evolutionary Computation, vol. 
10, no. 3, pp. 245-255, 2006. 
 86
Simulation and Measurement,” IEEE Computational Intelligence Magazine, vol. 2, no. 2, pp. 
37-51, 2007. 
[105] T. Huang and A. S. Mohan, “A Microparticle Swarm Optimizer for the Reconstruction of 
Microwave Images,” IEEE Trans. on Antennas and Propagation, vol. 55, no. 3, pp. 568-576, 
2007. 
[106] H. Yoshida, K. Kawata, Y. Fukuyama, S. Takayama, and Y. Nakanishi, “A Particle Swarm 
Optimization for Reactive Power and Voltage Control Considering Voltage Security 
Assessment,” IEEE Trans. on Power Systems, vol. 15, no. 4, pp. 1232-1239, 2000. 
[107] A. A. EL-Dib, H. K. M. Youssef, M. M. EL-Metwally, and Z. Osman, “Optimum VAR 
Sizing and Allocation Using Particle Swarm Optimization,” Electric Power Systems Research, 
vol. 77, no. 8, pp. 965-972, 2007. 
[108] S. P. Ghoshal, “Optimization of PID Gains by Particle Swarm Optimizations in Fuzzy 
Based Automatic Generation Control,” Electric Power Systems Research, vol. 72, no. 3, pp. 
203-212, 2004. 
[109] H.-M. Feng, “Self-Generation RBFNs Using Evolutional PSO Learning,” 
Neurocomputing, vol. 70, pp. 241-251, 2006. 
[110] Y. Song, Z. Chen and Z. Yuan, “New Chaotic PSO-Based Neural Network Predictive 
Control for Nonlinear Process,” IEEE Trans. on Neural Networks, vol. 18, no. 2, pp. 595-600, 
2007. 
[111] C. C. Kao, C. W. Chuang, and R. F. Fung, “The Self-Tuning PID Control in a 
Slider-Crank Mechanism System by Applying Particle Swarm Optimization Approach,” 
Mechatronics, vol. 16, no. 8, pp. 513-522, 2006. 
[112] T. H. Kim, I. Maruta, and T. Sugie, “Robust PID Controller Tuning Based on the 
Constrained Particle Swarm Optimization,” Automatica, vol. 44, no. 4, pp. 1104-1110, 2008. 
[113] S. Patchararungruang, S. K. Halgamuge, and N. Shenoy, “Optimized Rule-Based Delay 
Proportion Adjustment for Proportional Differentiated Services,” IEEE Journal on Selected 
Areas in Communications, vol. 23, no. 2, pp. 261-276, 2005. 
[114] C. Karakuzu, “Fuzzy Controller Training Using Particle Swarm Optimization for 
Nonlinear System Control,” ISA Transactions, vol. 47, no. 2, pp. 229-239, 2008. 
[115] P. N. Suganthan, “Particle Swarm Optimizer with Neighborhood Operator,” in Proc. of 
the IEEE Int. Congr. Evolutionary Computation, vol. 3, pp. 101-106, 1999. 
[116] A. Oustaloup, F. Levron, B. Mathieu, and F. M. Nanot, “Frequency-Band Complex 
Noninteger Differentiator: Characterization and Synthesis,” IEEE Trans. Circuits Syst. I, vol. 
47, pp. 25-39, 2000. 
[117] A. Zelinsky, R. A. Javis, J. C. Byarne, and S. Yuta, “Planning Paths of Complete 
國科會補助計畫衍生研發成果推廣資料表
日期:2011/10/28
國科會補助計畫
計畫名稱: 基於粒子群演算法之群組機器人動態搜尋與導引
計畫主持人: 張永華
計畫編號: 98-2221-E-182-042-MY2 學門領域: 智慧型控制
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
本計畫為兩年期計畫，全期至 100 年 7 月 31 日止；全程計畫研究相關產出計國
外期刊 1篇、國外研討會 3篇、國內研討會 11 篇。計畫參與人員除主持人、共
同主持人外，另包含博、碩士生多人(限於所核定之額度，部分經費由長庚大學
補助)；計畫執行期間分別畢業博士生 1員、碩士生 3員，目前仍有數名研究生
持續以多機器人為題，進行相關研究。 
 
本計畫執行期間，與新加坡南洋理工大學負責之感測網路實驗室有密切的互
動，雙方對多代理人系統(Multi-agent systems)之研究有共同的興趣，期間兩
校共同發表一篇國際研討會論文：S. Liu, C.-L. Chen, L. Xie, and Y.-H. 
Chang, ’’Formation Control of Multi-robot Systems,’’ Int. Conf. on 
Control, Automation, Robotics and Vision, 2010。南洋理工大學謝立華教
授對本實驗室研究生的實務設計與整合能力深表肯定，未來也將會在此基礎
上，擴大雙邊的國際合作契機。 
 
在本計畫支持下，目前已經有部分結果獲國際知名期刊接受刊登：Y.-H. Chang, 
C.-W. Chang, C.-L. Chen, C.-W. Tao, ’’Fuzzy Sliding-Mode Formation 
Control for Multi-Robot Systems: Design and Implementation,’’ IEEE 
Trans. on Systems, Man, and Cybernetics, Part B: Cybernetics, accepted, 
2011。此訊息對持續進行中之研究工作，有著莫大的鼓舞作用；目前手邊正在
整理的文稿還有數篇，期待近期內會有正面的回應。 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
