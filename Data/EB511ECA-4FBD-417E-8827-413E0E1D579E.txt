Tadj and Choudhury [26], Choudhury et al. [27] and others. To date, very few authors have dealt with ordi-
nary discrete-time queues with server breakdowns. Recently, Atencia and Moreno [28] examined a discrete-time
Geo/G/1 retrial queue with a server subject to breakdowns and repairs. Wang and Zhang [29] treated a discrete-
time single-server retrial queue with geometric arrivals of both positive and negative customers in which the server
is subject to breakdowns and repairs. Notably, in Zhang and Tian [19], Tian and Zhang [20], Li and Tian [21],
Atencia and Moreno [28], and Wang and Zhang [29], no optimal analysis of discrete-time queues with vacation
policies and server breakdown was conducted. This fact motivates the present study of variant vacation policy for a
discrete-time Geo/G/1 queue with an un-reliable server, which operates a randomized vacation policy with at most
J vacations when the system is empty. Whenever the system becomes empty, the server deactivates and leaves for
a vacation. Once it has returned from the vacation, the server inspects the system and determines whether to take
another vacation, to remain dormant in the system, or to resume serving messages exhaustively.
The proposed model has potentially applications in practical systems, e.g. the packet switching router. In such
a system, the potential customers transmit packets across the network through the packet switching router. In many
small scale communication networks, all processes proceed synchronously. Many communication networks are
even organized with complete synchronization. Channel requests, grants, data transmissions, and receptions all
proceed in fixed time intervals. Consequently, in these systems’ packet sending, preprocessing, and processing
are done in a discrete-time manner. Once the customers send packets to the packet switching router, the received
packets are identified and processed if the server is idle. If the server is busy, the received packets are placed
in queue. The time required to process a packet is random and directly influenced by the packet size, so it is
assumed to have a general distributed process time. The packets waiting in queue are served according to a first in
first out discipline. To keep the packet switching router functioning well, some maintenance activities are needed.
For example, virus scan is an important maintenance activity for the mail server. It can be performed when the
packet switching router is idle and be programmed to perform on a regular basis (essential vacation). When one
maintenance activity is finished, packet switching router either executes another maintenance activity or enters the
idle state again and waits the contact messages arrive. In addition, in practice the packet switching router may
fail and can be repaired. Because the performance of such a system may be heavily affected by packet switching
router breakdown, such systems with a repairable capability are well worth investigating from the queueing theory
viewpoint.
This paper is organized as follows. The following section presents assumptions made concerning the discrete-
time system of interest. Section 3 elucidates the Markov chain of the discrete-time system and derives the proba-
bility generating functions of queue length in various server states and probability distributions of system perfor-
mance characteristics, which include their main expectation. Section 4 discusses the idle period, the busy period
and the breakdown period of the server. Section 5 derives the waiting times in the queue. Section 6 presents a cost
model to determine the joint optimal values (p∗,J∗) at a minimum cost. Some illustrative examples are included.
Conclusions are given in Section 7.
2 Model description
This study considers a discrete-time queue with a single-server in which time is divided into constant length
intervals (called slots). The probability of the simultaneous occurrence of an arrival and a departure is not zero in
discrete time, but is positive. Therefore, the order of the arrivals and departures must be determined. Two laws
may be applied: arrivals must precede departures (Late Arrival System (LAS) or Arrival First (AF) policy) and
departures must precede arrivals (Early Arrival System (EAS) or Departure First (DF) policy). These concepts and
related ones are elucidated elsewhere (Takagi [17]). There are two variants of LAS, LAS with immediate access
and LAS with delayed access. The difference between them is when a message arrives late in the nth slot during
the system is empty, the service is started in the nth slot (LAS with immediate access) and the service is started in
the (n+1)th slot (LAS with delayed access). The LAS policy with delayed access is adopted in the present model.
Figure 1 depicts various epochs in the LAS and server breakdowns.
Messages arrive according to a Bernoulli process with rate λ : λ (¯λ = 1−λ ) is the probability that a message
arrives (does not arrive) in each slot. The service times of the messages are mutually independent and identically
distributed according to a general probability mass function {bi}∞i=1, with probability generating function (PGF)
B(x) = Σ∞i=1bixi and the jth factorial moments B j. After all of the messages in a queue have been served, the
server operates a randomized vacation policy with at most J vacations. As soon as the system becomes empty,
the server immediately takes a vacation, the duration of which is a discrete random variable, V , with probability
mass function {vi}∞i=1, PGF V (x) = Σ∞i=1vixi and the jth factorial moments Vj. If at least one message is waiting to
be served at the end of a vacation, then the server immediately activates for service. Otherwise, if no message is
waiting in the queue, the server takes another vacation with probability p or remains dormant in the system with
probability p¯(= 1− p). This pattern continues until the number of vacations taken reaches J. If the system is
2
p˜im,k,i = p˜im,k−1,i+1λ + p˜im,k,i+1 ¯λ , 2≤ m≤ J,k ≥ 1, i≥ 1, (4)
Ω0 = p¯
J−1
∑
m=1
p˜im,0,1 ¯λ + p˜iJ,0,1 ¯λ +Ω0 ¯λ , (5)
pi1,i =
J
∑
m=1
p˜im,0,1λbiα¯ +
J
∑
m=1
p˜im,1,1 ¯λbiα¯ +Ω0λbiα¯ +pi1,i+1 ¯λα¯ +pi2,1 ¯λbiα¯ +pi1,1λbiα¯ + pˆi1,i,1 ¯λα¯, i≥ 1, (6)
pik,i =
J
∑
m=1
p˜im,k−1,1λbiα¯ +
J
∑
m=1
p˜im,k,1 ¯λbiα¯ +pik−1,i+1λα¯ +pik,i+1 ¯λα¯ +pik+1,1 ¯λbiα¯ +pik,1λbiα¯
+pˆik,i,1 ¯λα¯ + pˆik−1,i,1λα¯ , k ≥ 2, i≥ 1,
(7)
pˆi1,i, j =
J
∑
m=1
p˜im,0,1λbiαβ j +
J
∑
m=1
p˜im,1,1 ¯λbiαβ j +Ω0λbiαβ j +pi1,i+1 ¯λαβ j +pi2,1 ¯λbiαβ j +pi1,1λbiαβ j
+pˆi1,i, j+1 ¯λ + pˆi1,i,1 ¯λαβ j, i≥ 1, j ≥ 1,
(8)
pˆik,i, j =
J
∑
m=1
p˜im,k−1,1λbiαβ j +
J
∑
m=1
p˜im,k,1 ¯λbiαβ j +pik−1,i+1λαβ j +pik,i+1 ¯λαβ j +pik+1,1 ¯λbiαβ j
+pik,1λbiαβ j + pˆik,i,1 ¯λαβ j + pˆik−1,i,1λαβ j + pˆik−1,i, j+1λ + pˆik,i, j+1 ¯λ , k ≥ 2, i≥ 1, j ≥ 1.
(9)
In order to resolve Eqs. (1)-(9), we use the following generating functions.
Gm(x,z) =
∞
∑
k=0
∞
∑
i=1
zkxip˜im,k,i, ϕm(z) =
∞
∑
k=0
zkp˜im,k,1, 1≤ m≤ J,
GV (x,z) =
J
∑
m=1
Gm(x,z) =
J
∑
m=1
∞
∑
k=0
∞
∑
i=1
zkxip˜im,k,i,
GB(x,z) =
∞
∑
k=1
∞
∑
i=1
zkxipik,i, ϕB(z) =
∞
∑
k=1
zkp˜ik,1,
GR(x,y,z) =
∞
∑
k=1
∞
∑
i=1
∞
∑
j=1
zkxiy jpˆik,i, j, ϕR(x,z) =
∞
∑
k=1
∞
∑
i=1
zkxipˆik,i,1,
(| x |≤ 1, | y |≤ 1, | z |≤ 1)
and the normalization condition is
GV (1,1)+Ω0+GB(1,1)+GR(1,1,1) = 1.
To derive the Gm(x,z), we first multiply Eqs. (1)-(4) by xi and sum over i. Then for the results we obtained,
multiplying by zk and summing over k yields
x− τ
x
G1(x,z) =−τϕ1(z)+ ¯λV (x)pi1,1, (10)
and
x− τ
x
Gm(x,z) =−τϕm(z)+ p¯λV (x)p˜im−1,0,1, 2≤ m≤ J. (11)
where τ = ¯λ +λ z. Setting x = τ in Eqs. (10)-(11) yields
ϕ1(z) =
¯λV (τ)
τ
pi1,1, (12)
G1(x,z) =
¯λx(V (x)−V (τ))
x− τ pi1,1, (13)
ϕm(z) =
p¯λV (τ)
τ
p˜im−1,0,1, 2≤ m≤ J, (14)
and
Gm(x,z) =
p¯λx(V (x)−V (τ))
x− τ p˜im−1,0,1, 2≤ m≤ J. (15)
4
Substituting Eqs. (24), and (26)-(27) into Eq. (23) yields
GR(x,y,z) =
α ¯λxyz(R(y)−R(τ))(B(x)−B(∆))χ(z)
(y− τ)[x(1−αR(τ))− α¯τ ](B(∆)− z) pi1,1. (28)
Let S(z) be the PGF of the number of messages in the system. From Eqs. (19)-(20) and (27)-(28), we have
S(z) = GV (1,z)+Ω0+GB(1,z)+GR(1,1,z) =
¯λB(∆)χ(z)
λ (B(∆)− z)pi1,1. (29)
3.1 The derivation of pi1,1
Applying the normalization condition, S(z) = 1, yields
pi1,1 =
λ (1−δ )(1−ρH)
¯λ [(λV1+V (¯λ ))(1−δ J)− (δ −δ J)]
, (30)
where ρH = ρ [1+(α/α¯)R1] and ρ = λB1. Substituting Eq. (30) into Eq. (29) yields
S(z) = (1−ρH)B(∆)
(B(∆)− z) ·
(1−δ )χ(z)
[(λV1+V (¯λ ))(1−δ J)− (δ −δ J)]
. (31)
3.2 Expected number of messages in the system
Differentiating S(z) in Eq. (31) yields a numerator and denominator both of zero. Applying L’Hospital’s rule twice
yields the expected number of messages in the system:
LpV B = ρH +
λ 2(1−δ J)V2
2[(λV1+V (¯λ ))(1−δ J)− (δ −δ J)]
+
λ 2(1+ αα¯ R1)2B2+λρ αα¯ [R2+2R1+2 αα¯ R21]
2(1−ρH)
. (32)
3.3 Stationary distribution of server state
Define the following.
PV ≡ probability that server is on vacation;
PI ≡ probability that server is idle;
PB ≡ probability that server is busy;
PD ≡ probability that server is broken down;
Pon ≡ probability that server is turned on (working).
Po f f ≡ probability that server is turned off (vacation or idle).
Substituting Eq. (30) into Eqs. (19), (20), (27) and (28) respectively yields
PV = GV (1,1) =
λ (1−δ J)(1−ρH)V1
(λV1+V (¯λ ))(1−δ J)− (δ −δ J)
, (33)
PI = Ω0 =
[V (¯λ )(1−δ J)− (δ −δ J)](1−ρH)
(λV1+V (¯λ ))(1−δ J)− (δ −δ J)
, (34)
PB = GB(1,1) = ρ, (35)
and
PD = GR(1,1,1) = ρ
α
α¯
R1. (36)
Using Eqs. (33)-(34) yields
Po f f = PV +Ω0 = 1−ρH . (37)
Next, the probability that the system has no message is determined. Multiplying Eqs. (1) and (3) by xi and
summing over i, and then adding m from 1 to J yields
x− ¯λ
x
J
∑
m=1
∞
∑
i=1
xip˜im,0,i = p¯λV (x)
J−1
∑
m=1
p˜im,0,1− ¯λ
J
∑
m=1
p˜im,0,1+ ¯λV (x)pi1,1.
6
which implies the expected length of the idle period as
E(SQ) = I′Q(1) =
V (¯λ )(1−δ J)− (δ −δ J)
λ (1−δ ) . (41)
Let So f f be the turned-off period. From Eqs. (40) and (41), we have
E(So f f ) = E(SV )+E(SQ) =
(λV1+V (¯λ ))(1−δ J)− (δ −δ J)
λ (1−δ ) . (42)
4.2 Complete period
Following the preceding definition, the completion time is expressed as beginning when a message starts its service
and ending with the completion of that service. The completion time includes possible repair time. Let hk be the
probability that the completion time of a message lasts for k slots for the classical discrete-time Geo/G/1 queue
with an unreliable server. From Atencia and Moreno [28], the completion times are mutually independent and the
probability mass function of the completion time, {hk}∞k=1, is given by
hk = α¯kbk +(1−δ1,k)
k−1
∑
i=1
k−i
∑`
=1
Ci+`−1` α¯
iα`biP{ℜ1+ℜ2+ · · ·+ℜ` = k− i},
where δ1,k is Kronecker’s delta function.
Therefore, the PGF of {hk}∞k=1 is
H(z) =
∞
∑
k=1
α¯kbkzk +
∞
∑
k=2
k−1
∑
i=1
k−i
∑`
=1
Ci+`−1` α¯
iα`biP{ℜ1+ℜ2+ · · ·+ℜ` = k− i}zk
=
∞
∑
k=1
bk(α¯z)k +
∞
∑
i=1
∞
∑`
=1
Ci+`−1` bi(α¯z)
iα`
∞
∑
k=`
P{ℜ1+ℜ2+ · · ·+ℜ` = k}zk
=
∞
∑
k=1
bk(α¯z)k +
∞
∑
i=1
bi(α¯z)i
∞
∑`
=1
Ci+`−1` [αR(z)]
`
(
using Maclaurin series expension (1−w)−r =
∞
∑
k=0
Cr+k−1k w
k
)
= B
( α¯z
1−αR(z)
)
.
(43)
Let Φ be the complete period for the classical discrete-time Geo/G/1 queue with an un-reliable server. It comprises
the busy period and the breakdown period and can be expressed Φ = H +Φ1 +Φ2 + · · ·+ΦN(H), where N(H)
represents the number of messages during a completion time H of a message, and Φi represents the sub-completion
period due to the ith arrival during the completion time H. The distribution of Φi is the same as Φ, we can obtain
the PGF of complete period:
Φ(z) = H(λ zΦ(z)+ ¯λ z) = B
( α¯(λ zΦ(z)+ ¯λ z)
1−αR(λ zΦ(z)+ ¯λ z)
)
.
The complete period in the presented model begins as in one of the following four cases.
Case 1: m messages arrive during the first vacation which vacation time is k slots. After the completion of the
first vacation, the server begins service. This event occurs with probability
v
(m)
k =C
m
k λ m ¯λ k−mvk, k ≥ 1, 1≤ m≤ k.
Case 2: no message arrives at the preceding ( j− 1) vacations and m messages arrive during the jth vacation
which vacation time is k slots. At the end of the jth vacation, the server starts service. This case occurs
with probability
V (¯λ )(pV (¯λ )) j−2(pv(m)k ) = δ j−1v
(m)
k , 2≤ j ≤ J, k ≥ 1, 1≤ m≤ k.
8
slot n+1) and server is on the jth vacation, 1≤ j ≤ J;
WV (z)≡ PGF of the waiting time in the queue of a test message (that arrives in
the slot n+1) when server is on vacation;
WBD(z)≡ PGF of waiting time in the queue of a test message (that arrives in the
slot n+1) when the server is busy or broken-down;
WQ(z)≡ PGF of waiting time in the queue of a test message that arrives in the
slot n+1.
Case 1. Test message arrives during the jth vacation and finds k messages (k≥ 0) in the system; the test message
must wait until the preceding k messages have been served. Therefore
Wj(z) =
∞
∑
k=0
∞
∑
i=1
p˜i j,k,izi−1(H(z))k =
G j(z,H(z))
z
.
In this case, the test message may arrive in the 1st, 2nd, · · · , or Jth vacation. Hence,
WV (z) =
1
PV
J
∑
j=0
Wj(z) =
¯λ (1−δ J)[V (z)−V (¯λ +λH(z))]
PV (1−δ )[z− (¯λ +λH(z))]
pi1,1. (52)
Case 2. Test message arrives while the server is idle and is immediately served. In this case, the waiting time is
zero.
Case 3. Test message arrives while the server is active (including breakdown) and finds k messages in the system.
In this case, the waiting time in the queue of the message consists of (i) remaining completion time of
message that is served at time n+, and (ii) completion time of k−1 messages in queue at time n+.
For Case 3, replacing service time with completion time, it yields
WBD(z) =
1
ρH
∞
∑
K=1
∞
∑
i=1
ωk,iz
i−1(H(z))k−1 =
GH(z,H(z))
zH(z)ρH
=
¯λ{[1−V (¯λ +λH(z))+(1−H(z))V (¯λ )](1−δ J)− (1−H(z))(δ −δ J)}
(1−δ )(¯λ +λH(z)− z)ρH
pi1,1,
(53)
where ωk,i respresnts the probability that there are k messages in the system and the remaining completion time is
i slots when the state of the server is in the complete period.
Remark 1 Setting α = 0 in Eq. (27) yields the joint PGF for the number of messages in the system and the
remaining service time for Geo/G/1 queue with a reliable server and at most J vacations:
GBO(x,z) =
¯λxz(B(x)−B(τ))
(x− τ)(B(τ)− z) χ(z)pi1,1. (54)
Replacing the PGF of the service time with the PGF of the completion time in Eq. (54) yields the joint PGF for the
number of messages and the remaining completion time:
GH(x,z) =
¯λxz(H(x)−H(τ))
(x− τ)(H(τ)− z) χ(z)pi1,1.
From Eqs. (52)-(53), the PGF of waiting time in the queue is given by
WQ(z) = PVWV (z)+PI ·0+ρHWBD(z). (55)
Thus, we obtain the expected waiting time in the queue
E(WQ) =
λ (1−δ J)V2
2[(λV1+V (¯λ ))(1−δ J)− (δ −δ J)]
+
λB2(1+ αα¯ R1)2+ρ αα¯ [R2+2R1+2 αα¯ R21]
2(1−ρH) , (56)
which equals LpV B/λ −ρH/λ , and confirms the result of Little’s formula.
10
0
0.2
0.4
0.6 0.8
1
0
10
20
30
39
39.5
40
40.5
41
41.5
42
 J
 p
F( p,J)
F(p*,J*)=39.16
where p*=0,J*=1
Figure 2: Expected cost function for the different values of p and J when D > 0.
0
0.2
0.4
0.6
0.8
1 0
5
10
15
20
25
30
70
72
74
76
78
p  J
F(p*,J*)=79.16 where p*=1
 and J*=10 or more
F(p,J)
Figure 3: Expected cost function for the different values of p and J when D < 0.
12
N. Tian, Z.G. Zhang, The discrete-time GI/Geo/1 queue with multiple vacations, Queueing Systems 40 (2002)
283–294.
J. Li, N. Tian, The discrete-time GI/Geo/1 queue with working vacations and vacation interruption, Applied Math-
ematics and Computation 185 (2007) 1–10.
D.P. Gaver, A waiting line with interrupted service, including priorities, Journal of Royal Statistical Society Series
B 24 (1962) 73–96.
Y.H. Tang, A single-server M/G/1 queueing system subject to breakdowns- some reliability and queueing problem,
Microelectronics and Reliability 37 (1997) 315–321.
W. Li, D. Shi, X. Chao, Reliability analysis of M/G/1 queueing systems with server breakdowns and vacations,
Journal of Applied Probability 34 (1997) 546–555.
J. Wang, An M/G/1 queue with second optional service and server breakdowns, Computers and Mathematics with
Applications 47 (2004) 1713–1723.
L. Tadj, G. Choudhury, Optimal design and control of queues, TOP 13 (2005) 359–414.
G. Choudhury, J.-C. Ke, L. Tadj, The N-policy for an unreliable server with delaying repair and two phases of
service, Journal of Computational and Applied Mathematics, 231 (2009) 349–364.
I. Atencia, P. Moreno, A discrete-time Geo/G/1 retrial Queue with server breakdowns, Asia-Pacific Journal of
Operational Research 23 (2006) 247–271.
J. Wang, P. Zhang, A discrete-time retrial queue with negative customers and unreliable server, Computers and
Industrial Engineering 56 (2009) 1216–1222.
14
表 Y04 
 
二、與會心得 
 此次於第4屆計算科學與優化國際大會發表論文，會議本身可說為計算科學與優化
應用領域相當優異之國際會議，提報的論文至少都經過兩位審稿者的refereed，給予論文
最佳的評論及建議。規模不小，各地專家學者聚集於此會議，討論與交流非常熱列，較
熱門之場次，聆聽之觀眾皆滿座。會場詢問時間中，問題之尖銳、考量點之廣泛，使人
深刻體會到表達之技巧與學術研究之嚴謹的重要。 
本人提報的論文安排在4月17日的Pm 13:30-Pm 15:30 ”Computation Simulation and 
Analysis”場次，在該場次中本人所提報的題目為” A Discrete-Time Queue with Modified 
Vacation Policy”，在排隊理論裏，離散時間隨機化的假期控制策略幾乎沒有人研究，我
們利用輔助變數技巧與機率生成函數研究這具修改休假方策之離散時間排隊系統。在這
section與會的人員，有很多學者給予本人某些有用的comments，並提供不同思考角度，
並建議對本論文之後續研究有相關助益，因而觸發本人一些新的想法及概念。 
 
參加此次The 4th International Joint Conference on Computational Sciences and 
Optimization，可說獲益良多，感受到昆明的良好氣候，這個西南大城持續在進步中，
有些地方值得我們學習。除此之外，對於我本身之專業而言，藉由參與即聆聽精采的論
文發表場次外，與各地相同研究領域的菁英相處，並就研究主題進行研討的過程獲益匪
淺，更加堅定目前研究的主題與方向，並且暸解到目前研究主題之未來趨勢。因此，希
望在今年能夠朝著未來研究方向，接續以往之研究成果，再次參與明年的國際學術研討
會，使得自己的研究不斷的成長，並期望與各國先進並駕齊驅。 
 
三、建議 
 感謝國科會的用心，給予參與國際學術研討會的補助款項，使參加今年CSO 2011
減輕不少經濟負擔。此次參與會議所得非常豐碩，視野亦增進不少，透過與各國學者之
討論及互動，可參考其它學者之研究觀點，見賢思齊激發研究動機，對未來之研究方向、
題目、考慮因素等均有莫大助益，不但開拓本人的國際視野，提升本人的學術水準，更
能讓本人深刻體認學術須與國際學術潮流接軌和交流的重要性。 
 本人相當期望國科會對此一補助政策能持續實施。而實質經費的補助，才能引發國
內學者到國外發表論文的動機，以及克服經濟上之難題，使台灣的研究成果得以在國際
學術場合中展露，也相信有些於現場所得之震撼，並非在實驗室、電腦室閉門造車所能
得到的。 
 
四、攜回資料名稱及內容 
1. 大會詳細議程一冊； 
2. CSO 2011大會出版之所有論文光碟一片。 
 
五、其他 
    衷心感謝國科會給予補助此次研討會。 
 
A Discrete-Time Queue with Modified Vacation Policy 
 
Tsung-Yin Wang 
Department of Accounting Information 
National Taichung Institute of 
Technology, Taiwan 
ciwang@ntit.edu.tw  
 
Jau-Chuan Ke 
Department of Applied Statistics 
National Taichung Institute of 
Technology, Taiwan 
jauchuan@ntit.edu.tw 
 
Fu-Min Chang 
Department of Finance 
Chaoyang University of Technology 
Taiwan 
fmchang@cyut.edu.tw
Abstract—This paper examines a discrete-time Geo/Geo/1 
queue, in which the server operates a randomized vacation 
policy with at most J vacations. After all messages are served 
in the queue, the server leaves for a vacation immediately. If 
there are some messages waiting in the queue upon the server 
returning from a vacation, it serves the waiting messages 
immediately. If no messages present in the queue, the server 
takes another vacation with probability p or goes into idle state 
with probability (1-p) until the next message arrives. By using 
the supplementary technique, the joint generating  functions of 
the server state together with the system queue length and 
waiting time in the queue, vacation period, idle period, and 
busy period are derived. We also derive the distribution of the 
messages in the system at the busy initiation epoch and its 
expected length. Finally, a cost model developed to determine 
the optimum values of p and J at a minimum cost is also 
studied. 
Markov chain; Vacation; Waitin time; Busy cycle; Cost 
I.  INTRODUCTION  
Continue-time queues with vacations have attracted many 
researchers’ attention since Levy and Yechiali [1]. Details 
can be seen in the surveys of Doshi [2], Takagi [3], and Tian 
and Zhang [4]. On the other hand,  discrete-time queues 
have also received considerable attention in the last decades 
because discrete-time queues are more suitable to model and 
analyze the digital communication system (see Meisling [5], 
Hunter [6], Bruneel and Kim [7], Takagi [8], and 
Woodward [9]). An excellent and complete study on 
discrete-time queues with vacations has been presented by 
Takagi [8]. Zhang and Tian [10] investigated a Geo/G/1 
queue with multiple adaptive vacations. Tian and Zhang [11] 
analyzed a GI/Geo/1 queueing system with multiple 
vacations by matrix-geometric solution method. Using the 
same method as [11] to study a GI/Geo/1 queueing system 
with working vacation and vacation interruption was 
presented by Li and Tian [12]. In [10-12], they also gave the 
stochastic results for the queue length and waiting time. 
Samanta et al. [13] investigated a discrete-time single-server 
finite-buffer batch arrival queue in which the server takes a 
(single and multiple) vacation as soon as the queue length falls 
below ‘a’ customers at the completion of service and customers 
are served in batches according to the rule: at least ‘a’ 
customers are needed to start a service with a maximum 
serving capacity of ‘b’ customers of service. Chae et al. [14] 
studied the discrete-time GI/Geo/1 queue with a single 
geometric vacation and they also derived the decomposition 
property of the waiting time. Recently, Moreno [15] studied 
a Geo/G/1queueing system under multiple vacations and 
setup-closedown times, and the numerical study of the cost 
model was also presented.   
  However, in many real applications, the server may take  
a sequence of finite vacations in his idle time. For example, 
in a network access proxy system, the potential users send a 
service request across the network through the network 
access proxy system. Channel requests, grants, data 
transmissions, and receptions all proceed in fixed time 
intervals. That is, service request sending, preprocessing, and 
processing are done in a discrete-time manner. Once the 
customers send service requests to the proxy server, the 
received service requests are identified and processed if the 
server is free. When the server is busy, the received service 
requests are placed in queue. To keep the proxy server 
functioning well, some maintenance activities are needed. 
For example, virus scan is an important maintenance activity 
for the proxy server. It can be performed when the proxy 
server is idle and be programmed to perform on a regular 
basis (essential vacation). When one maintenance activity is 
finished, proxy server either executes another maintenance 
activity or enters the idle state again and waits the contact 
messages arrive. Because there is no mechanism to record 
how many contacting messages from various senders 
currently, it is appropriate for designing a program to collect 
information of contacting messages for the reason of 
efficiency. This motivates us to study a discrete-time 
Geo/Geo/1 queue with randomized vacations, where the 
server operates a randomized vacation policy with at most J 
vacations when system is empty. Whenever the system 
becomes empty, the server deactivates and leaves for a 
vacation. Once returning from the vacation, the server 
inspects the system and decides whether to take another 
vacation, to stay dormant in the system, or to resume serving 
the messages exhaustively. 
II. MODEL DESCRIPTION 
As we know, the time is divided into constant length 
intervals (called slots) in the discrete-time queue. Arriving 
messages may follow two different disciplines: one is called 
the late arrival system (LAS) if a potential arrival occurs 
within  and a potential departure occurs within 
; the other is called the early arrival system (EAS) if 
a potential departure occurs within  and a potential 
),( nn 
),( nn
),( nn
Differentiating  in (21), we note that the numerator 
and denominator are both 0. Applying L’Hospital’s rule 
twice and finally the expected number of messages in the 
system is given by 
)(zS
Jm
z
zVpz mm 
  2,~)(
)()( 1,0,1
 ,       (12) 
Jm
zx
zVxVpxzxG mm 
  2,~)(
)]()([),( 1,0,1
 .          (13) 

 2
)1(
)(
2
2 JVL 
 .               (22) Differentiating (11) and (13) with respect to x, it follows that  
,,2,1,~),( ,,
0 1
Jmxz
x
zxG
x ikmk i
ik
m 

 



  Using the Little’s formula, the mean of waiting time in the 
queue is given by 
and then setting , it yields 0 zx

 2
)1(
)(
2
J
Q
VW 
 .    
Jm
p
m
m  1,~ 11,0,  ,                       (14) 
where )( pV . 
 
From (5) and (14), we have  
1
1
0 )1(
])1()1([ 




p
p JJ .     (15) 
Multiplying (6) and (7) by kz and summing over it  yields ,k


 J
m
mB zzzGz
zz
1
)()()())(1(   
01
1
1,0,
~  

 zJ
m
m .  (16) 
Applying (10), (12), (14)  and (15), we obtain 
1))(1(
)()( 

zz
zzzGB             (17) 
where 
.
)1(
))(1()1)](()1()(1[)( 
 

JJ zVzzVz
Using (11), (13) and (14), we finally obtain 
1)1)](([
)1)](()([),( 



zx
zVxVxzxG
J
V .    (18) 
B. System Performances 
Let  be the PGF of the number of messages in the 
system. It follows from (15), (17) and (18) that  
)(zS
IV.  BUSY CYCLE 
This section studies the busy cycle which consists of 
vacation period, idle period, and busy period. Let us define 
the following. A vacation period starts at the departure 
instant of a message which leaves the system empty and 
terminates when the server remains dormancy in the system 
or serves the waiting messages upon returning from a 
vacation. An idle period is calculated from the server is 
dormant in the system at the end of a vacation to the end of 
the next succeeding slot during which an arrival occurs. A 
busy period starts at the beginning of a service and 
terminates when a service is completed and the system is 
empty. 
A. Vacation Period 
 The vacation period originates from two possibilities: 
the one is the length of vacations before the server goes into 
idle state, and the other is the length of vacations before the 
server turns into busy state. To compute the vacation period, 
we consider the following: 
 The joint PGF for the length of j (1 )j J   
vacations and the probability that no messages arrive 
during that vacation is given by pj /  where 
)( xpV   . 
 The joint PGF for the length of a vacation and the 
probability that at least one arrives during that 
vacation is given by )]()([ xVxV  .  
 From the inferences listed above, the PGF for the 
length of the vacation period is given by 
))()(()(
1
01
xVxV
p
p
p
xI
JJ
V    
 



 
1
2
0 )()1(
)()()(),1()( 

zz
zzzGzGzS BV 
 .    (19) 
Using the normalization condition , it yields  1)1( S

 
 )1)(1(1                           (20) 
)1(
)1)()(()( 1





p
xpVpp JJJ .    (23) 
where )()1)](([ 1
JJVV   . Equation (23) yields the expected length of the vacation 
period From (19) and (20), we have 
          
)1(
)1()( 1


 VSE
J
V
.                               (24) 


)1(
)()1()()(
z
zzSzS C
               (21) 
where  is the PGF of the number of messages in the 
system for the classical Geo/Geo/1 queue without vacation 
and  
)(zSC B.  Idle Period 
Subsequently, we derive the idle period. At the end of 
jth vacation, if there are no messages in the queue, the state 
of the server turns into the idle state with probability 
Jjj pp ,1)/(   , Jj 1 , where Jj ,  is Kronecker's delta )(
)1)(()(
z
zzSC 


 . 
Case 3. If =0,  is independent of and . D ),( JpF p J [1] Y. Levy and U. Yechiali, “Utilization of idle time in an M/G/1 
queueing system,” Management Science, vol. 22, 1975, pp. 202-211. It should be noted that the occurrence possibility of =0 is 
rare in practice use. 
D
[2] B.T. Doshi, “Queueing systems with vacations – a survey,” Queueing 
Systems, vol.1, 1986, pp. 29–66. For illustrative purpose, we perform some numerical 
experiments based on the following settings of system 
parameters: (i) 6.0 ; (ii) 8.0 ;(iii) Geometric vacation 
distribution with  .  25.11 V
[3] H. Takagi, Queueing Analysis: A Foundation of Performance 
Evaluation, Vacation and Priority Systems, Part 1, vol. 1. North-
Holland Elsevier, Amsterdam, 1991. 
[4] N. Tian and Z.G. Zhang, Vacation Queueing Models: Theory and 
Applications. Springer-Verlag, New York, 2006. The first example is performed by considering cost elements 
, ,  and  ( ), which 
justifies the analytic results of Case 1 (Figure 1). 
Alternatively, the second example considered cost elements 
, ,  and  (
50hC
20hC
100sC
600sC
10vC
10vC
15iC
30iC
22.3D
10 30.D ) is 
presented to demonstrate Case 2 (Figure 2). These results 
confirm the preceding inferences. 
[5] T. Meisling, “Discrete time queueing theory,” Operations Research, 
vol. 6, 1958, pp. 96–105. 
[6] J. J. Hunter, Mathematical Techniques of Applied Probability, 
Discrete Time Models: Techniques and Applications, vol. 2. 
Academic, New York, 1983. 
[7] H. Bruneel and B. G. Kim, Discrete-time models for communication 
systems including ATM. Kluwer Academic Publishers, Boston, 1993. 
[8] H. Takagi, Queueing analysis: A foundation of performance 
evaluation, Discrete-Time Systems, Vol. 3. North-Holland, 
Amsterdam, 1993. 
VI. CONCLUSIONS 
In this paper we have been introduced a randomized 
vacation policy for a discrete-time Geo/Geo/1 queueing 
system, in which a single server randomly takes at most J 
vacations when no messages present in the queue at ending 
of vacation completion instant. The presented model has 
potentially applications in practical systems, e.g. network 
access proxy system. We derived some important system 
characteristics, including the system length, vacation period, 
idle period, busy period and waiting time in the queue. A 
decision criterion for searching the joint suitable values 
 was also developed. For verifying the proposed 
optimization approach, some examples were illustrated 
numerically and the results confirmed our inferences.  
),( ** Jp
[9] M. E. Woodward, Communication and computer networks: modelling 
with discrete-time queues. IEEE Computer Society Press, Los 
Alamitos, CA, 1994. 
[10]  Z. G. Zhang and N. Tian, “Discrete time Geo/G/1 queue with 
multiple adaptive vacations,” Queueing Systems, vol. 38, 2001, pp. 
419-429. 
[11] N. Tian and Z. G. Zhang, “The discrete-time GI/Geo/1 queue with 
multiple vacations,” Queueing Systems, vol. 40, 2002, pp. 283-294. 
[12] J. Li and N. Tian, “The discrete-time GI/Geo/1 queue with working 
vacations and vacation interruption,” Applied Mathematics and 
Computation, vol. 185, 2007, pp. 1-10. 
[13] S. K. Samanta, M. L. Chaudhryb and  U. C. Gupta, “Discrete-time 
GeoX/G(a,b)/1/N queues with single and multiple vacations,” 
Mathematical and Computer Modelling, vol. 45, 2007, pp.93–108. 
[14] K. C. Chae, S.-M. Lee and S.-H. Lee, ”The discrete-time GI/Geo/1 
queue with single geometric vacation,” Quality Technology & 
Quantitative Management, vol. 5, 2008, pp. 21-31.   
[15] P. Moreno, “A discrete-time single-server queueing system under 
multiple vacations,” Stochastic Analysis and Applications, vol. 27, 
2009, pp. 221–239. REFERENCES 
0
0.2
0.4
0.6
0.8
1
0
10
20
30
21.5
22
22.5
23
23.5
p
J
co
st
F(p*,J*)=21.6832
where p* is 0 and 
J* is 1 or more
0
0.2
0.4
0.6
0.8
1 0
10
20
3083
84
85
86
87
88
89
Jp
co
st
F(p*,J*)=83.7609
where p* is 1 and
J* is 12 or more
 
Figure 1. The expected cost function for different                            Figure 2. The expected cost function for different 
                values of p and J for D>0.                                                                 values of p and J for D<0. 
99 年度專題研究計畫研究成果彙整表 
計畫主持人：王琮胤 計畫編號：99-2221-E-025-001- 
計畫名稱：有限個假期的隨機休假方策下服務者會故障的離散型時間排隊系統 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 1 1 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 1 1 100% 
相關論文於 2011
年發表於 applied 
mathematical 
modelling 題 目
為 On the 
discrete-time 
Geo/G/1 queue 
with randomized 
vacations 
and at most J 
vacations 
研究報告/技術報告 0 0 100%  
國外 論文著作 
研討會論文 1 1 100% 
篇 
參加 The Fourth 
International 
Joint Conference 
on Computational
Sciences and 
Optimization 
(CSO 2011),發表
題 目 為 A 
Discrete-Time 
Queue with 
Modified 
Vacation Policy
