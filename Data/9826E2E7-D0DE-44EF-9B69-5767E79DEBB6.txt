1 
 
 
行政院國家科學委員會專題研究計畫精簡報告 
 
運算格網中具延展性工作排程及負載平衡技術之研發與實作 
 
中文摘要 
 近年來，格網運算 (Grid computing)系統對於科學或工程方面的應用提供了一個
cost-effective 的高效能運算環境。格網系統為一種分散式系統，它允許在 runtime 情況下，
依照資源的可獲得性、能力、執行效能、花費與使用者的需求，對於分散在各個自治單位
的資源透過網際網路，進行分享計算資源及資料儲存服務。在一個格網運算系統中，通常
包含一群獨立的電腦系統，通訊協定，作業系統，中介軟體，程式設計環境，而形成一個
具備分散運算的環境。於此環境中，可以不斷地擴充運算節點，使得系統的異質性增高。
不同於傳統平行電腦系統，在格網運算系統中之各個運算節點都是獨立運作，而且個別被
不同的使用者執行不同的應用程式，而格網運算系統中之各個運算節點都被視為資源。使
用者透過單一介面存取此格網運算系統中各項資源。一個應用程式可以透過格網運算系統
中任一台運算節點，配置到格網運算系統中之多個運算節點進行運算。運算節點透過網際
網路彼此連結，分享資源。雖然格網運算系統可以提供高效能運算環境，但是整合格網中
各式異質性資源的使用仍然面臨許多挑戰。其中工作排程工具需要特別注意格網運算環境
的特性，諸如分散式的異質性資源(distributed heterogeneous resources)的處理及異質性資源
(heterogeneous resource)的可利用性(availability)。而這些異質性資源的運用狀況則需要透過
資源管理系統(resource management system)進行管理，其中包含監控可用資源的狀況，工作
的開始執行及支援程序的轉移(process migration)。另外，工作配置後，於執行時亦可能產
生負載失衡現象，進而導致整體系統效能下降。因此本計畫將針對工作排程工具及負載平
衡機制進行相關研究。 
本計畫針對工作在各個 site 的完成時間來進行評估，從中挑選出一個可以最早完成工
作的 site 來進行工作的分配。透過本計畫所提出的工作排程與處理器配置演算法，可得到
工作及整個工作列表在格網系統中的工作最早完成時間，並可縮短工作整體的執行長度。
在研究結果中，將可看出「需要大量計算的」、「需要大量傳輸的」、「需要大量計算且大量
傳輸的」等三種不同類型的工作，在不同的 meta-computer 環境中，最佳化格網排程演算法
的處理結果。 
關鍵詞：計算格網，工作排程，負載平衡，異質性，分散式計算 
 
3 
 
前言 
在近幾年的電腦科技發展中，不論是計算能力(Computing power)或儲存空間(Storage 
capacity)皆快速成長，因此有越來越多的研究專注在藉由不同格網系統(Grid system)，使用
分散的計算與儲存資源。格網計算(Grid Computing)已是一個相當重要並且可發揮電腦各項
資源使用效能，以解決動態、跨組織間合作的問題。因此，以格網計算概念為基礎，透過
網際網路與適當的中介軟體，可連結分散屬於不同管理區域、不同組織、跨國家與國際邊
界的電腦資源，例如計算資源、儲存裝置、科學儀器、資料庫、應用程式與各種不同的 I/O
設備。在格網計算環境中，虛擬組織(Virtual Organization, VO)由許多不同的管理區域所組
織而成。在同一個 VO 下的不同管理區域，只要領有相同 CA Server 所發給的 CA 認證，即
可使用 VO 中的資源。但對於不同 VO 中的資源，卻是沒有存取使用的權限。 
格網系統之相關研究包含許多議題：例如：目錄服務、合作分配、排程、及中介服務、
監控與診斷服務…等。其中有兩項重要議題：工作排程策略(job scheduling strategies)與資源
管理機制(resource management mechanism)。在格網系統當中，對於使用者所提出的工作要
求，若無適當的工作排程及處理器配置，雖然最後仍可將系統中的工作要求完成，但其所
得的執行時間長度過長，不但會造成系統中資源不必要的浪費，且工作的執行是沒有效率
的。因此，為充分發揮格網系統效能，工作排程及處理器配置為兩個重要的議題。 
 
研究目的 
在本研究中，主要的探討問題屬於 Distributed computing 研究領域。此研究在於如何使
用格網技術蒐集分散式計算資源，以組成龐大的計算資源，進而透過分散資源提供更好的
計算能力，縮短工作所需要的執行時間。由於在格網環境中，所有的資源是分散在不同的
位置，因此在格網環境中蒐集計算資源的資訊，再透過 Collective Layer 進行 Job Scheduling 
與 Processor Allocation，以獲得工作的執行、處理的最佳結果。 
在工作排程方面，一件工作在 meta-computing 環境當中的排程，比在任何一個單一平
行化的電腦還要複雜許多，這是因為它存在著在多方面的高度異質性、不同的本地排程策
略(local scheduling policies)以及其他因素。因此，如何在 Collective Layer 透過最佳化工作
排程與處理器的配置，來縮短所取得的工作執行時間，是很重要的討論議題。 
另外，在資源配置問題方面，以往的相關研究較少探討資料傳輸影響因素。因此在本
研究中，資料傳輸的因素亦加入花費模式(cost model)之計算。在考慮到異質性環境與不相
等網路速度的因素下，對於每個工作在派送前進行執行時間的評估。因此，本研究目的為
設計一套 processor allocation algorithm，計算出一件工作在不同 site 計算的完成時間，再比
較工作在各個不同 site 上可以得到的工作完成時間，取得一個可以最早完成工作的 site，並
將工作分配給此 site 來執行。最後，透過本研究所提出之 processor allocation algorithm，達
到最佳資源配置之目標，進而達到格網計算環境之效能提昇。 
另外，本研究中亦探討經濟模式演算法對於資源管理與工作排程策略之影響。傳統
system-centric 的資源管理策略強調提高 resource 的使用效率，但並未考慮 users 的 QoS，使
用者無法根據本身需求完成工作，使用 user-centric 策略讓 users 評估該如何利用資源滿足
所需。因此我們說 user-centric 的資源管理方式是一種符合使用者經濟的原則。在此經濟原
則之下，工作排程的決定都是動態的，隨時根據使用者的需求以及資源的加入退出彈性調
5 
 
計算時間與工作的傳輸時間。其公式可以簡單的 commicompii ttt ,, += 表示。工作的計算時間為
一件工作或子工作在某個 site 上所需花費的計算時間。而工作的傳輸時間有兩種，一種為
一件工作或子工作在同一 site 內兩個不同處理器間的傳輸溝通；另一種為在不同 site 間兩
個處理器間的傳輸溝通。在文獻[1]之研究已考慮到內部處理器間的傳輸溝通與外部處理器
間的傳輸溝通時間。在文獻[2, 3]研究中則探討所有在 multi-site scheduling 環境裡的工作必
須先提交給 Grid-Scheduler，並且工作是可以跨 site 執行的。在[4]研究中則提出了四種 cost 
model 的公式，所有在 multi-site scheduling 環境下的工作，如果有切割成不同的子工作，並
分散到不同的機器上去作執行時，則可以這四種公式計算出工作所需的執行時間。 
在經濟模式方面的相關文獻，Dr. Buyya[9, 10]發展 Grid Architecture for Computational 
Economy (GRACE) 架構配合不同的 economics models 套用在 Grid System 中，藉由此架構
幫助 users 以及 Resource provider 達到使用效率最大的功能，Resource provider 貢獻本身資
源並索取費用，利用 GRACE 當中各種排程定義費用的標準及執行策略；使用者則是依賴
GRACE 的 Broker 提出需求與 Grid 互動，Broker 則嘗試將 users 的需求和條件與 Grid 
providers 做最大的調度利用。此外相同的服務也許根據不同使用者而有所不同花費，或是
可根據特殊需求做調整，也可依照環境的影響像是記憶體或是頻寬的不同作適當的調配。
其餘相關研究方面，Economic models 大致可分為 price-based-model 和 non-price-based-model
兩種。在 non-price-based-model，users 互相交換擁有的資源以達到目標；price-based-model
則有貨幣制度，users 根據不同需求支付貨幣。price-based-model 分為多種不同的交易制度 [7, 
8, 9, 10]。 
 
研究方法 
在本研究實驗環境中，假設計算格網由許多獨立的 site 所組成，且每個 site 中又包含
許多的計算 node，每個 node 擁有不同數量的 processor，storage，memory 等，並擁有自己
的 local workload。在每個 site 中，不同 node 間透過內部高速網路連結起來。除了在不同的
meta-computer 的環境中(在本實驗中使用四種不同的 meta-computer 環境)，不同 site 內擁有
不同的 node 數量之外，另外再將每個 node 的架構設定為異質性，也就是使其 processor 的
數量不同及 processor 的 MIPS 不一，而其異質性則以隨機的方式產生。每個 site 擁有自己
的 site scheduler，在每個 site 之上以一個 meta-computer 來形成此環境，且在 meta-computer
中有個負責接收所有 site 所提出的工作要求的 meta scheduler，負責接收所有工作要求並進
行工作分配的計算與協調。在經過 Meta scheduler 計算之後，會將工作分配到最適合的 site
執行，分配後的工作會由 site 的 site scheduler 接收，並且依照自己 site 內的 policy 進行工
作處理。 
本研究亦提出一個具有彈性基於競價模式的比例分配策略，目的為讓 user i 在 deadline
時間 Di 內完成所有的工作，同時盡可能省下使用者的 cost。每個 resource r 擁有一個
Auctioneer 負責和 user broker 溝通進行競價，競價完後分配所屬的 resource 完成工作，當
user i 根據時間間隔 Pi將提出價格並將工作交付給 resource r 執行時，Auctioneer 會在每次
Pi的時間重新計算 user i 的工作進度及花費。resource r 訂出單位資源的最低價 minBidr和最
高價 maxBidr，user broker 只能在這個範圍當中出價競標資源，這個用意在於防止多個使用
者浮濫出價造成惡意競爭。當有兩個 users 同時參與競價，各自的 broker 會依照 user 需求
7 
 
計畫成果自評 
本計劃之研究成果已達到計劃預期之目標，其中之成果 [11]發表於 Journal of 
Supercomputing 國際知名期刊，而成果[12]則發表於 2007 年歐洲計算會議中，在會場中引
起多位學者的興趣與討論。未來相關研究成果將進一步整理，投稿到國外期刊。感謝國科
會給予經費補助才有此成果表現。明年度本實驗團隊將更加努力，建立更完善的研究環境，
以期進行更深入的研究議題。參與此計畫之工作人員亦從此計劃執行之過程中獲得不少學
術理論推演之經驗，更了解在格網運算系統中工作排程及負載平衡策略面臨之問題瓶頸，
對於參與研究計畫執行同學的認真，本人亦表達肯定與感謝。 
 
參考文獻 
1. Li, K., “Job scheduling and processor allocation for grid computing on 
metacomputers,” Journal of Parallel and Distributed Computing, Vol. 65, Issue. 11, 
pp. 1406-1418, November 2005 
2. Ernemann, C., Hamscher, V., Schwiegelshohn, U., Yahyapour, R., and Streit, A, 2002, “On 
Advantages of Grid Computing for Parallel Job Scheduling,” In Proceedings of the 2nd 
IEEE/ACM international Symposium on Cluster Computing and the Grid (May 21 - 24, 2002). 
CCGRID. IEEE Computer Society, Washington, DC, pp. 39-46. 
3. Yahyapour, R., “Design and evaluation of job scheduling strategies for grid computing,” 
Doctoral Thesis, Computer Engineering Institute, Lehrstuhl für Datenverarbeitungssysteme, 
November 2002. 
4. Hamscher, V., Schwiegelshohn, U., Streit, A., and Yahyapour, R., “Evaluation of 
Job-Scheduling Strategies for Grid Computing,” In Proceedings of the First IEEE/ACM 
international Workshop on Grid Computing, Lecture Notes on Computer Science Vol. 1971, 
pp. 191-202, Springer-Verlag, London, 2000. 
5. Sulistio, A., Cibej ,U., Robic ,B., and Buyya, R., A Tool for Modelling and Simulation of Data 
Grids with Integration of Data Storage, Replication and Analysis, Technical Report, 
GRIDS-TR-2005-13, Grid Computing and Distributed Systems Laboratory, University of 
Melbourne, Australia, Nov. 8, 2005. 
6. Sulistio, A., Poduval, G., Buyya, R., and Tham, C. K., On Incorporating Differentiated Levels 
of Network Service into GridSim, Future Generation Computer Systems (FGCS), ISSN: 
出席國際學術會議心得報告 
                                                             
計畫編號 NSC 95-2221-E-142-004- 
計畫名稱 運算格網中具延展性工作排程及負載平衡技術之研發與實作 
出國人員姓名 
服務機關及職稱 
國立台中教育大學 資訊科學學系 賴冠州 助理教授 
會議時間地點 Athens, Greece, September 25-27, 2007 
會議名稱 WSEAS International Conference on EUROPEAN COMPUTING CONFERENCE 
發表論文題目 An Auction-based Resource Allocation Strategy with a Proportional Share Model for Economic based Grid Systems 
 
一、參加會議經過 
此次參與在雅典舉行之 EUROPEAN COMPUTING CONFERENCE共計三天，於會議開
始前一天即到達雅典，會議的第一天上午由 Professor K. R. Rao、Professor Jim 
Cunningham，Professor Rui J. P. de Figueiredo，及 Professor Ulrich Albrecht等教授發表精
闢的演說作為研討會的開始。接著當天分成兩個平行的場次進行許多重要研究的論文發
表。本人選擇了 Neural Networks and Applications，Multi-Agent Systems及 Information 
Communication Technologies I 場次聽取相關研究的報告。會議的第二天本人參加了
Computer Applications in Modern Medicine，Computational Techniques and Algorithms I，
Natural Phenomena and Computer Models及 Information Communication Technologies II 場
次聽取相關研究的報告，同時獲悉許多新興起的研究主題，並了解目前國外大多數學者
主要的研究方向。當天晚上本人亦參加大會所舉辦的晚宴，並且與幾位國外學者教授認
識，交流意見。會議的最後一天上午在Web-based Applications場次，本人發表本計畫的
研究成果，並把握時間參加 Computational Techniques and Algorithms II場次聽取論文發
表，及與國外的教授認識的機會，希望能夠讓他們加深對台灣相關研究的深刻印象。 
二、與會心得 
參與此次會議過程中，本人聽取了許多優秀的論文發表，了解相關研究的發展現況與未
來趨勢，亦進一步了解部分以前未接觸過的研究議題而有交流的經驗。此次的國際學術
研討會議中有許多歐洲知名學者參與，彼此之間皆透過此會議的參與而得到最新的研究
技術與相關資訊。對於本次國際學術研討會議的參與，個人感受良多，不僅見識到相關
領域的研究學者，亦進一步了解其他相關領域的知識交流。最後，此次國際會議中，會
場的安排及邀請的演講學者都讓本人有所獲益。 
 
In this study, we integrate the proportional share model with the first-price sealed-bid auction model 
[2] to develop a new resource allocation strategy which aims to complete jobs by meeting their 
deadline and budget requirements with the lowest resource costs. The experimental results show 
that the proposed strategy could complete jobs before the deadline with lower budgets. The rest of 
this paper is organized as follows. Section 2 introduces related works. Section 3 presents the 
proposed algorithm. Experimental results and performance analyses are provided in Section 4. 
Concluding remarks are then offered. 
2. Related Works 
The economic-based Grid system must contain tools for users and resource providers to convey 
their needs and goals. In general, there are many resource allocation approaches developed for 
economic-based Grid systems; these approaches apply some parameters (e.g., deadline, budget and 
resource cost) to make decisions dynamically at runtime. Economic models could be divided into 
two categories [1, 2]: the non-price-based-model and the price-based-model. In the 
non-price-based-model, users share the resources together to meet their requirements; however, in 
the price-based-model, there are trading systems for users to bid for resources and services. The 
price-based-model includes commodity markets model, posted price model, bargaining model, 
tendering/contract-net model and auction model. In the auction model, a resource accepts the bids 
from many users to acquire it; then, the user making the highest bidding wins the auction. There are 
several resource allocation algorithms, including the deadline and budget constrained cost-time 
optimization algorithm [2, 4, 8], Grid classified optimization scheduling algorithm [9], the Analytic 
Hierarchy Process and History Based Policy algorithm [10], the Time Optimization algorithm with 
Auction-Based Proportional Share model [6]. 
In general, the Time Optimization algorithm with Auction-Based Proportional Share model [6] 
outperforms other proposed ones. However, it doesn’t support the flexible bidding time period, and 
then it couldn’t adjust the priority order to bid in real time. In addition to the lack of the flexibility 
of the bidding time period, this proposed algorithm [6] conservatively decides the initial bidding 
costs. The user broker uses the resource cost in the worst case scenario as the initial bidding cost to 
prevent the job’s execution time from exceeding the deadline. But, when the difference of the 
resource performance between the worst case and the average case is too big, it would cause the 
abnormal situation that the initial bidding cost excessively exceeds the expected bidding cost, and 
then wastes the budget. 
3. Proposed Algorithm 
In this study, we propose a Flexible Auction-based Resource Allocation (FARA) strategy with a 
proportional share model for Bag-of-Tasks (BoT) applications. This strategy aims to use lower 
budgets to complete jobs before their deadlines. The user broker retrieves useable resource in the 
local Virtual Organization (VO) from the Grid Information System (GIS). The operating steps of 
our proposed algorithm are listed as follows: 
 
We assume that user i updates the bid to resume participating the auction every 100 seconds in the 
time optimization scheduling [6]; however, our proposed FARA algorithm sets the bidding time 
period, Pi, according to the proportion of shared resources.  
The first time period for bidding is set as est_time. As for the initial bidding price step, the time 
optimization scheduling [6] uses the worst case for the initial bidding (i.e., it assumes that the user 
completes all jobs with the worst resource only); comparatively, our proposed FARA algorithm uses 
the average computing cost for the initial bidding. Table 2 and Table 3 show the simulation results. 
The P/C of the FARA algorithm is slightly higher than that of the time optimization algorithm; and, 
the FARA algorithm guarantees to finish all jobs before the deadline. The FARA algorithm allows 
users to adjust the bid price flexibly and complete all tasks within the deadline. Although part of the 
tasks would be assigned more expensive resources, the FARA algorithm still guarantees that all the 
jobs are completed before the deadline.  
Table 2. Simulation Results of the Time-optimization Scheduling 
User 1 2 3 4 5 6 7 8 9 10 
turnaround time 19962 20044 20101 19966 20062 19998 20012 20022 20036 20033
Finishing rate 20.04%19.93%19.86%20.04%19.92%20.00%19.99%19.97%19.95%19.96%
P/C 0.50 0.50 0.50 0.50 0.50 0.50 0.50 0.50 0.50 0.50
Table 3. Simulation Results of the FARA algorithm 
User 1 2 3 4 5 6 7 8 9 10 
turnaround 
time 3915 3920 3919 3933 3928 3930 3939 3924 3936 3942 
Finishing 
rate 
100
% 
100
% 
100
%
100
%
100
%
100
%
100
%
100
%
100
% 
100
% 
P/C 0.94 0.93 0.94 0.94 0.94 0.94 0.94 0.94 0.95 0.95 
5. Concluding Remarks 
This study proposes a flexible job allocation strategy for economic-based grids to complete jobs 
before the deadline with lower budgets. This study improves the time-optimization algorithm in the 
initial auction, and user brokers could flexibly adjust the bidding time and prices to complete jobs. 
Since the FARA algorithm allows users to adjust the bid price flexibly and thus complete all tasks 
within the deadline, the simulation results shows that the P/C of the FARA algorithm is higher than 
that of the time optimization algorithm. Moreover, the FARA algorithm guarantees to finish all jobs 
before the deadline. The experimental results show that the proposed strategy could outperform the 
Time Optimization algorithm with Auction-Based Proportional Share model [6]. 
This study only focuses on CPU resources; however, other resources (such as memory and network 
bandwidth) could be considered to make the resource allocation more comprehensive. 
