 2
Where ( )tτ  is the torque delivered by the 
motor characteristic, ( )m tτ  is the torque 
dissipated by the motor, and * ( )L tτ  is the torque 
dissipated by the load referred to the motor shaft.  
 
Figure 1 An equivalent circuit of an armature 
controlled DC motor. 
The motor can be controlled simply with 
PID control. But the position of the end effectors 
of the hands and legs will be affected with the 
error of each joint. We must modify this 
classical method in order to control the robot 
better. 
We can model the multi-axis robot system 
as a standard Eular-Lagrange dynamic equation, 
it can be written as: 
[ ]1 2
( ) ( , ) ( )
 = Tn
M C Gθ θ θ θ θ θ τ
θ θ θ θ
+ + =  
"
 (2)
Where ( ) n nM Rθ ×∈  denotes the inertia 
metrix, 1( , ) nC Rθ θ ×∈  denotes the viscous 
matrix, and 1( ) nG Rθ ×∈  denotes the torque 
generated by the gravity force. 
 We use the robust control method--sliding 
mode control to suppress effects of the 
modeling errors and disturbances [1][2]. Thus 
the final control block diagram becomes: 
Figure 2 Robust Independent Joint Control of 
Humanoid Robot  
Figure 3 to 6 shows the performance 
improvement of the modified sliding mode 
control method (simulated with a 2-link 
mechanism): 
 
0 1 2 3 4 5 6-1
-0.5
0
0.5
1
Time (sec)
A
ng
le
 E
rro
r o
f L
in
k 
1 
(d
eg
)
 
 
IJSMC
CTPID
IJPID
 
Fig. 3 Tracking angle error of the link 1. 
0 1 2 3 4 5 6-1
-0.5
0
0.5
1
Time (sec)
A
ng
le
 E
rro
r o
f L
in
k 
2 
(d
eg
)
 
 
IJSMC
CTPID
IJPID
 
Fig. 4 Tracking angle error of the link 2. 
0 1 2 3 4 5 60.02
0.04
0.06
0.08
0.1
0.12
0.14
Time (sec)
To
rq
ue
 o
f M
ot
or
 1
 (N
-m
)
 
 
IJSMC
CTPID
IJPID
 
Fig. 5 Output torque of the motor 1. 
0 1 2 3 4 5 6-0.04
-0.02
0
0.02
0.04
0.06
0.08
Time (sec)
To
rq
ue
 o
f M
ot
or
 2
 (N
-m
)
 
 
IJSMC
CTPID
IJPID
 
Fig. 6 Output torque of the motor 2. 
 
2 Real-Time Whole Body Stability Motion 
Control System 
 The relationship between COG(center of 
gravity) and ZMP(zero moment point) is very 
impartment. If the ZMP falls in the support 
polygon, the robot can walk stably without 
rotation.  
The preview control method is used here 
[3][4]: 
 First, the humanoid robot can be 
 4
where “Base” denotes the start point of forward 
kinematics, ,m irK  denotes the vector from base to 
the center of mass of linkage i, im  denotes the 
mass of linkage i. 
When a joint rotates, only parts of the whole 
body are rotated, the others are not rotated. The 
equation can be derived: 
, , , ,
1 1
p q
COG a i a i ua j ua j
i j
M r m r m r
= =
⋅ = ⋅ + ⋅∑ ∑K K K  (10)
Where M denotes the total mass of the robot, 
subscript “a” denotes the parts that are affected 
by the rotation, subscript “ua” denotes the parts 
that are unaffected by the rotation, and the 
vectors ( ,a irK  and ,ua irK ) denote the position of the 
center of mass of each affected part and each 
unaffected part.  
The equation can also be written as: 
COG a a ua uaM r M r M r⋅ = ⋅ + ⋅K K K  (11) 
Where aM  denotes the total mass of the 
affected parts, and uaM  denotes the total mass 
of the unaffected parts. 
The next position of COGrK  multiplied by the 
total mass M can be approximated as: 
, ,( ) ( )COG COG j a a a j ua uaM r r M r r M r⋅ + Δ = ⋅ + Δ + ⋅∑ ∑K K K K K  (12)
The uarK  is not affected by the rotation, so uarΔ K  
is equal to zero. The ,COG jrΔK  denotes the 
displacement of the whole robot’s COG caused 
by the rotation of the jth joint. And the ,a jrΔK  
denotes the displacement of the COG of the 
affected parts caused by the rotation of the jth 
joint. And the ,COG jrΔ∑ K  and the ,a jrΔ∑ K  
denote the total effects. 
Subtraction of the two equations above: 
, ,COG j COG a a jM r M r M r⋅ Δ = ⋅ Δ = ⋅ Δ∑ ∑K K K  (13)
The COGrΔK  is given to solve COG Jacobian and 
the relationship between 
,a jrΔK  and COG 
Jacobian is given by: 
,
a
COG a j COG
M
r r J
M
θΔ = Δ =∑K K   (14)
We can also use the F-Jacobian method to get 
the COG Jacobian of the fixed leg. 
, ,a j a j c jr rω θ→Δ = − ×KK K   (15)
In the coordinate of the fixed leg, the rotation 
of a joint rotates the parts that are lower than it. 
But in the world coordinate, the rotation causes 
the parts higher than the joint to rotate with an 
angular velocity with negative direction. 
 
Figure 9 Construction COG Jacobian—fixed leg
, ,
a
cog j a j c j
M
J r
M
ω →= − ×K K  (16)
COG Jacobian matrix of the other limbs can be 
found with: 
 
Figure10 Construction COG Jacobian swing leg
, ,
a
cog j a j c j
MJ r
M
ω →= ×K K  (17)
The Jacobian matrix becomes: 
θ
θ
θ
θ
θ
→
→
→
→
→ → → → →
⎡ ⎤ ⎡ ⎤ ⎡ ⎤⎢ ⎥ ⎢ ⎥ ⎢ ⎥⎢ ⎥ ⎢ ⎥ ⎢ ⎥⎢ ⎥ ⎢ ⎥ ⎢ ⎥⎢ ⎥ ⎢ ⎥= ⎢ ⎥⎢ ⎥ ⎢ ⎥ ⎢ ⎥⎢ ⎥ ⎢ ⎥ ⎢ ⎥⎢ ⎥ ⎢ ⎥ ⎢ ⎥⎣ ⎦⎢ ⎥ ⎢ ⎥⎣ ⎦⎣ ⎦
  
   
0 0 0 0
0 0 0
0 0 0
0 0 0
0 0 0
fixed fixed
fixed
swing f s swing
swing
LA f LA LA
LA
RA f RA RA
RA
H f H H
H
f C s C LA C RA C H CCOM
d J
d J J
d J J
d J J
d J J
J J J J Jd
 
(18)
 
The F-Jacobian method can solve inverse 
kinematics faster and get smoother trajectories 
as shown in Figure 11 to Figure 13: 
 
Figure11 Simulation results of computation time
 6
According to the correlation coefficients, it is 
not hard to figure out the EzmpXi/EzmpYi in 
each sub-phase is dominated by some 
coeXi/coeYi. In other words, we can utilize 
specific coeXi/coeYi to weight the residue of 
ZMP and COG position, and further produce the 
subsequent COG position from equations (19) 
to (22). 
Moreover, to overcome the robot modeling 
error and some unavoidable factors or 
uncertainty, real-time walking pattern 
modification is necessary. For example, robot 
might walk on the different ground friction or 
on the different material such as carpet rug, and 
so on. The original coeXi/coeYi chosen from 
sampling stage are not appropriate for all the 
situations. In the learning stage, the coeXi/coeYi 
can be modified dynamically by the ZMP 
variation of corresponding sub-phases in the last 
two walking cycle. The updated strategies and 
equations are explained below. 
k
i
k
i
k
i coeXcoeXcoeX δ+= −1  ((23)
k
i
k
i
k
i
k
i QcoeXsigncoeX ⋅+Ψ⋅⋅−= − ζδηδ )( 1
 
(
(24)
)( 21
2
−−
−=
−⋅=Ψ ∑ kjkji
ij
ij
k
i EzmpxEzmpxρ
 
(
(25)
)( 1
6
1
−
=
∑ ⋅= kj
j
ij
k
i EzmpxQ ρ
 
(
(26)
Here the kicoeX  and 1−kicoeX  mean the 
coefficient set in the ith sub-phase during the k 
th and k-1 th step, respectively. And the 1−kjEzmpx  
and 2−kjEzmpx  mean the ZMP tracking error in 
the jth sub-phase during the k-1 th and k-2 th 
step, respectively.  
From equation (23), the kicoeX  is updated 
by adding the coefficient compensator, kicoeXδ , 
and the last coefficient in the previous step, 
1−k
icoeX .  The coefficient compensator can be 
divided into two terms as shown in the equation 
(24). The first term kiH is inferred from the 
“trend” of the ZMP tracking error.  
As shown in the equation (25), the 
k
iΨ  is 
dependent on the difference of Ezmp  between 
the k-1th step and the k-2th step. That is, if the 
trend of ZMP tracking error ( 21 −− − kjkj EzmpxEzmpx ) is 
positive in the jth sub-phase, which means the 
ZMP tracking error in the jth sub-phase during 
the k-1th step becomes much larger than during 
the k-2th step, the coefficient compensator in 
the k th step should not change in the same 
direction with the k-1th step. The first term of 
equation (26), )( 1−kicoeXsign δ , is to record the 
coefficient compensator changing direction 
(positive or negative) in the k-1th step. In brief, 
by the term of the
k
iΨ , we can roughly evaluate 
the performance of last update strategy and 
modify its direction and magnitude. 
The second term is the linear combination 
of 1−kEzmpx  in the five sub-phases during the 
previous step. The weighting value is 
determined by the correlation coefficients ijρ . 
Since the term of 
k
iΨ  is to see the trend of ZMP 
tracking error, it can not exactly compensate the 
ZMP error. For example, the 
k
iΨ  is small when 
the ZMP tracking error in the k-1th step equal to 
the ZMP tracking error in the k-2th step. That is 
the coefficient compensator kicoeXδ  could be 
almost zero even if the 1−kEzmpx has not 
converged to zero yet. Hence, the Q  can 
provide another clue to adjust kicoeXδ . 
The ADAMS simulation results with and 
without CBC learning method are shown in 
Figure 15 and Figure 16. 
 
Figure 15 ZMP tracking result without CBC 
 
Figure 16 The ZMP tracking result using CBC
 8
-1
d d d d ep=M (F-C p -k p )∫   (28) 
But we need to convert the coordinate to the 
joint space, just as the equation below. 
-1
e =J ( )pθ θ   (29) 
 
Figure 22 Torque on the Ankle 
We can see from Figure 22 that the ankle torque 
is large persisting for a long period of time, this 
might occur when the foot is step on the uneven 
floor. This could make our robot fall down, if 
we don’t release this situation. 
 
Figure 23 Improved torque on the ankle 
After we adopt the impedance control on the 
ankle of our robot as in Figure 23, the torque on 
the ankle releases. The long period time of high 
ankle torque disappear. In the way, we can let 
our robot walking on the uneven surface. 
6. Localization and Mapping System of 
Intelligent Humanoid Robot 
Simultaneous Localization and Mapping 
One of the fundamental features for an 
autonomous robot is the ability to locate its 
position. However, it would be impossible to 
achieve localization without map information in 
an unknown environment. On the contrary, it 
could not build the map incrementally without 
information of the robot position. In other words, 
localization and mapping should be addressed 
simultaneously. 
In the third year, a new algorithm, 
Relative-Absolute SLAM (RASLAM), is 
proposed to resolve the simultaneous 
localization and mapping problem. RASLAM 
utilizes relative and absolute information to 
estimate the robot pose and map in uncertain 
environment. Moreover, by combining different 
kinds of metric SLAM techniques, such as 
scanning matching, occupancy grid map, and 
feature-based SLAM, RASLAM can be applied 
to various unstructured surroundings. 
To construct robust SLAM algorithm, 
RASLAM simultaneously maintains two kinds 
of maps, grip map gridM  and feature map featureM . 
Both of them have their merits and demerits in 
different environments. Thus, RASLAM 
dexterously extracts useful information from 
these maps and estimates robot position with 
them. Given the robot path, both of the maps are 
conditionally independent. When the robot 
receives new observation z  from the sensor, 
the observation will be split into two parts, 
gridz and featurez . Although there might be some 
coupled effects between gridz and featurez  due to 
coming from the same laser range image, we 
simply ignore them because of different 
modeling methods of them. In other words, the 
two kinds of observations are assumed to be 
independent. 
RASLAM can be described by equation 
(30). The first term in equation (30) is robot 
localization which is processed by GPF 
(Gaussian Particle Filter). The second and third 
terms describe the mapping process. It should 
be noticed that the grid map and feature map are 
conditionally independent when the robot path 
is given. Moreover, the robot relative motion 
ku  is estimated by ICP and odometry. 
 
 	
 
 	 
 	
mapfeature
kfeaturekfeature
mapgrid
kgridkgrid
onlocalizatirobot
kkfeaturekgridk
kkk
zxMp
zxMpuzzxp
uzMxp
),|(
),|(),,|(
),|,(
,
,,,=
 
(30) 
 
Figure 20 Robot Explorer II (REII). 
 10
some condition changes suddenly.  
Figure 23 Gyroscope-accelerometer module 
 
Figure 24 Force sensor and its ADC circuit 
A walking pattern generator is developed for 
generating the whole body trajectories of the 
robot. All trajectories of all motors of the robot 
are generated in the pattern generator in real 
time. Figure 25 shows the pattern generator: 
Figure 25 Force sensor and the ADC circuit 
The walking pattern generator combines the 
F-Jacobian method, the footstep planning 
system and the preview control method. After 
generating the basic walking pattern in the 
pattern generator, we will apply control theories 
such as modified sliding mode control and the 
CBC learning control method to control the 
robot in our desired behavior. 
 
四、結論 
In this year, the control and learning system 
is enhanced for the humanoid robot. With the 
learning and control theories, the robot can walk 
smoother and more stable. We also developed a 
real-time walking pattern generator to generate 
the basic trajectories of all motors on the 
humanoid robot. 
On the other hand, the sensory systems are 
also integrated. The gyroscopes, accelerometer 
and force sensors are used as feedback signals 
in order to make the robot more stable and with 
more robustness. SLAM (Simultaneous 
Localization and Mapping) system is also 
implemented on mobile robot and it will be 
integrated onto the humanoid robot, too. 
In this three-year project, we complete a 
humanoid robot that contains complex actuation 
system and sensory system. Trajectory planning 
systems for each joint and the over-all robot 
system are also developed. We have completed 
the hardware and the locomotion system of the 
robot. In fact, it’s just the beginning of an 
autonomous robot system. Many interesting 
topics on humanoid robots such as artificial 
intelligence for decision making or human- 
machine interaction or even consciousness of 
robots can be developmental or researched in 
the future. 
 
五、參考文獻 
[1]. T. Asfour and R. Dillmann, “Human-like 
Motion of a Humanoid Robot Arm Based 
on a Closed-Form Solution of the Inverse 
Kinematics Problem,” Proceedings of the 
IEEE/RSJ Int. Conf. on Intelligent Robots 
and Systems, pp. 3704-3709, 2003. 
[2] Chen-Tien Chang, Han-Pang Huang, and 
Jiun-Yih Kuan, “Independent Joint Sliding 
Mode Control of a Humanoid Robot Arm,” 
IECON, pp. 2754-2759, 2007 
[3] Shuuji KAJITA, Mitsuharu MORISAWA, 
Kensuke HARADA, “Biped Walking 
 
 
 
 
 
出國報告（出國類別：參加國際會議） 
 
 
 
 
參加國際會議報告 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
                      
服務機關：國立台灣大學 機械工程學研究所 
姓名職稱： 鍾書耘、管軍毅 研究生 
派赴國家：中國 
出國期間：96 年 12 月 15-18 日 
 
 
 
 
二. 與會心得 
此次研討會，總計包含 407 篇文章，投稿接受率約為 60%，
並分為 80 個場次發表，同一時段最多有九個場次同時進行。整個
研討會，共計有二十六個國家參與，而我們是所有與會報告人員
中，少數從臺灣而來。 
在會中一共發表兩篇文章，分別是 “A New Time-efficient 
Trajectory Planning Solution for Humanoid Robot Arms” 和 
“ Relative-Absolute Information for Simultaneous Localization and 
Mapping”。發表時兩篇文章都得到不錯的回響。 
本次會議大會安排了三個大會特別演講。三個特別演講的主
題 分 別 是  “Making Microrobots Move,” “The Research & 
Development of Advanced Robotics Technology in China,” 及 
“ Insect-Machine Hybrid System for Evaluating and Understanding an 
Adaptive”。從以上幾場演講可以發現，目前國際上，大家都將科技
的發展重點集中在仿生機器人之方向與機器人相關科技與經濟之
發展。同時，可以發現未來機器人發展目標，勢必更將朝向仿生及
類人形的方向前進。而除日、韓、美、德三國為發展重心，中國在
機器人領域也開始急起直追。 
 
 
 
 
 
三. 建議 
世界上已有許多國家針對機器人之領域，投注大量人物力，
以求在二十一世紀中獲得科技發展的領先地位。本會議為機器人與
仿生機器人領域最具水準的會議之一，國科會每年應儘量補助所有
論文發表者與會。 
四. 攜回資料 
大會論文集的光碟片二張及大會論文清單二本。 
 
 
 
