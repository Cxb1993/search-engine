中文摘要 
 
為了解決未來車輛內不斷提升的 ECU 數量，及其通訊網路訊號傳輸的資料量，以及在不
斷提升的電控系統比重的強烈需求下。本計畫預計建構一嵌入式車輛通訊網路之電子平台，
並以此為架構來研發及整合目前相關的車輛通訊網路技術-LIN、CAN 與 FlexRay。此嵌入式
電子平台是架構在 ARM-based S3C2440A（Samsung，ARM920T core）處理器，並以 Linux 2.6.24
作業系統及 QT 來開發圖形化的應用程式。其中，分別透過 USB 介面及 Ethernet 介面來開發
這三種車輛通訊網路協定的驅動程式。 
而為了設計出具備多種車輛通訊網路共用的 ECU，在此以 ARM-based STR912FX（ST，
ARM9 core）處理器為基礎，透過移植 μC/OS-Ⅱ來實現一泛用的嵌入式車輛 CAN/LIN 閘道
器。其中，分別實現嵌入式 CAN 與 LIN ECU 節點及嵌入式 CAN/LIN 閘道器來驗證與測試
CAN 與 LIN 通訊協定。 
本計畫分為三年依序執行： 
第一年 嵌入式車輛通訊網路電子平台之 CAN /LIN 驅動程式設計 
第二年 嵌入式 CAN/LIN 閘道器設計 
第三年 嵌入式車輛通訊網路電子平台之 FlexRay 驅動程式設計 
而此計畫是針對車輛通訊網路節點技術及嵌入式電子平台之通訊網路技術進行研製，並
於每一年計畫結束前配合實際車輛做為驗證平台，以發展嵌入式車輛通訊網路之電子平台以
及嵌入式 ECU 技術為最終目標。而相關的應用程式碼皆為開放原始碼，未來更助於相關技
術轉移以及與其他平台共用或是移植。 
 
關鍵詞：車輛電子通訊網路技術、嵌入式電子平台、CAN、LIN、FlexRay 
 
 III
目錄 
中文摘要 ………………………………………………………………………………………… I 
英文摘要 ………………………………………………………………………………………… II 
一、前言 ………………………………………………………………………………………… 1 
二、研究目的 …………………………………………………………………………………… 4 
三、文獻探討 …………………………………………………………………………………… 5 
四、研究方法 …………………………………………………………………………………… 6 
五、結果與討論 ………………………………………………………………………………… 27 
六、參考文獻 …………………………………………………………………………………… 32 
七、附錄 ………………………………………………………………………………………… 33 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 2
而要能在日趨複雜化的車用電控系統中準確又穩當地控制車子「手腳」，除了車用電子
設備完美的詮釋之外，設備與主要汽車電腦控制台（汽車電控系統中心）之間無礙的通訊（資
料傳輸）環境也格外重要。電子元件之間資料傳輸量越來越大，過去的線纜串聯技術已不敷
使用，過多的線纜連接只會增加安裝的困難，也讓車內電子控制單元（ECU）變得更加複雜。 
其中，在 20 多年前德國汽車廠，便提出了匯流排 CAN 通訊協定（Controller Area 
Network；控制器區域網路），這也是目前車用網路領域中被最常用到的技術。簡言之，CAN
是一項多工串列通訊協定，串聯起分散在車內電子模組資訊，是一種多主控、多重播送的車
內通訊協定，主要控制車內各電子系統裝置及 ECU 之間交換資訊，構成一道緊密的汽車電子
控制網路。 
以一般的汽車來說，車內骨幹網路系統，大致上可以分為動力系統網路（power-train 
network）、防鎖死煞車系統（Anti-Lock Braking System；ABS），兩種不同的系統網路，超
過 90％的廠商都會使用到 CAN 匯流排技術，有點類似網路分享器的概念，藉此減少線路的
安裝費用，可靠度也比較高，以車內較短的傳輸距離，CAN 能提供快速的傳輸速率。相較於
其它匯流排系統，CAN 通訊匯流排的這些特性，很自然地在汽車電控傳輸系統中受到廣泛應
用。可想而知，CAN 匯流排的相關應用與設計可以適時地切入到汽車電子中[1-18]。 
CAN 即控制器區域網路，是國際上應用最廣泛的現場匯流排之一。一開始，CAN 匯流
排在開發設計時，即作為汽車環境中的微控制器通訊，在車載各電子控制裝置 ECU 之間交換
資訊，形成汽車電子控制網路。比如在引擎管理系統、變速箱控制器、儀錶裝備和電子主幹
系統中，均嵌入 CAN 控制裝置。 
CAN 是區域控制型網路的其中一種協定，是＂多主對等＂式系統，與一般的＂一主多
從＂式系統不同(如，RS-485)。基本設計規範要求有高的位元速率，高抗電磁干擾性，而且
能夠檢測出產生的任何錯誤。隨著汽車上的電子裝置越來越多，各裝置間訊號傳遞也跟著複
雜話起來。 
在低成本考量下，LIN（Local Interconnect Network；互連式區域網路）次匯流排也成為
汽車網路系統中的串列通訊系統。這套系統是由歐洲汽車製造協會所開發出來，其具備短距
離、低速網路通訊、低成本的特色，被應用在汽車上各式電子系統的低速通訊協定。 
而 CAN 與 LIN 等兩種車內 LAN 網路的布建方式與其應用的 ECU 示意圖，如圖 1.2 所
示。 
Instrument
Central 
Body Ctrl
Power Train
ITS
Climate
Light 
St. Wheel Panel
Light
Light
Light
Motor
Control panel
Mirror
Mirror
Seat
Door Door
DoorDoor
Seat
Seat
Roof
Window Lift
LIN
CAN
CAN
Wiper
LIN
Htng
Htng
Htng
Htng
Interior
Light
WHtg
TrunH
CAN
LIN
 
圖 1.2、CAN／LIN 匯流排之車輛電子通訊網路平台的建構示意圖（http://www.lin-subbus.org） 
 4
二、研究目的 
從上述的說明中，可以瞭解到本計畫的目的即是建立一具備嵌入式車輛通訊網路之電子
平台，並針對第三年的設計與規劃來實現嵌入式車輛通訊網路電子平台之 FlexRay 驅動程式
設計。 
在此計畫中，延伸了前兩年所實現的過 CAN、LIN 與 FlexRay 車輛通訊網路建置出符合
新一代的車輛通訊網路各個所需的嵌入式電子平台。整個計畫的系統核心是以 S3C2440A
（Samsung 為主之嵌入式 Linux 作業系統，並以 QT 為圖形化介面來設計出符合人機介面操
作的應用程式。而透過 USB 介面即插即用的特性來設計 USB-CAN/LIN 介面卡的驅動程式，
以及經由 Ethernet 介面設計 FlexRay 驅動程式。而為了設計符合各個車輛通訊網路的 ECU
架構，我們以 ARM-based LPC2119/2129/2194 系列處理器（NXP 半導體公司）來設計出一
泛用型嵌入式 ECU。最後，將其延伸成嵌入式 CAN/LIN 閘道器。 
本計畫共分三年依序實現嵌入式車輛通訊網路之電子平台之 CAN /LIN 驅動程式設計
（第一年），嵌入式 CAN/LIN 閘道器設計（第二年）與嵌入式車輛通訊網路之電子平台之
FlexRay 驅動程式設計（第三年）。因此，可以看出第一年與第三年是著重在嵌入式車輛通訊
網路之電子平台中研究與開發 LIN，CAN 與 FlexRay 驅動程式，第二年則是著重在相對的泛
用型的嵌入式 ECU 設計。整體計畫是互補性極高，將車輛通訊網路的技術作完整的應用與
設計。 
當然，所研製的嵌入式車輛通訊網路之電子平台，未來更可移植到 PDA 或是相關手持
式的設備中。而相關部分的 Linux 原始碼更可開放，與相關的廠商做技術轉移或是整合的工
作。最後，透過這個計畫的實現，也可同時開發與取得車輛電子通訊網路的核心技術，將可
使得國內對於汽車電子通訊網路的技術得以深根與發展，並對於嵌入式系統的驅動程式的撰
寫與設計有著更深入的瞭解。 
 
 6
四、研究方法 
目前導入車用網路最積極且領先的是歐洲車廠，新車幾乎 100%都導入車輛電子通訊網
路系統，美國次之，日本則發展最遲。車輛電子通訊網路以歐洲 Robert Bosch 公司發展的車
載控制網路（CAN）為起始，美國則使用 J1850 獨立規格，日本車廠有各自發展的規格，不
過多已面臨淘汰。目前車用控制網路，多以 CAN 標準規格為發展依據。FlexRay 原本是因應
未來車輛系統線傳控制技術需求而發展，在更多的車廠、汽車零配件商和汽車電子供應商加
入聯盟之後，FlexRay 已朝整合式車用控制網路系統發展，包含車體系統、主被動安全系統、
動力系統、和資訊系統，都將整合於 FlexRay 網路架構上，充分展現 FlexRay 在高頻寬和高
安全性應用方面的優勢。 
由於 FlexRay 規格內容已大致確定，應用在 FlexRay 控制的 LSI 產品陸續開始出貨。因
此，汽車的研發正式開始運用車內 LAN 介面規格「FlexRay」。FlexRay 是車內 LAN 介面規
格當中通訊信賴性最高的規格，用來連結直接控制汽車行駛的系統。過去的技術使用許多結
構零件，相較之下使用 FlexRay 可以減輕車體的整體操作質量，使各個安全裝置的連動更容
易。 
為了直接以電子控制汽車的行駛，車內 LAN 介面規格 FlexRay 是實現線控煞車和線控
轉向等線傳控制技術 X-by-Wire 不可或缺的網路技術。X-by-Wire 是以電子驅動器和馬達，
將過去以油壓等機械來完成的機能，藉著電子控制來實現的技術。我們可以透過 X-by-Wire
的使用來更提升整體汽車的性能。舉例來說，少了油壓控制用的機棫零件，因此，得以降低
沈車的重量，提升燃油效率。此外，可以做到比過去的系統更精細的控制，故能提升安全性。
而藉由車用監視器自動偵測危險，同時自動煞車等安全裝置的操作連結也更加地容易。
FlexRay 的功能不只侷限於要求高信賴性的 X-by-Wire 等系統。 
嵌入式車輛通訊網路之電子平台目標為讓使用者達到坐在駕駛座的感覺，其中，須包含
有儀表板、大燈、尾燈、方向燈……等人機介面。除此之外，尚包含了一台模型車做為轉向
與轉速的模擬。稍前的研究中，已陸續分別設計相關的測試系統，但在此研究中，更進一步
的整合出一完整的嵌入式車輛通訊網路之電子平台。 
其中，各功能皆為一車內 ECU。 但因依照各成本上與速度安全性上的考量，將此功能
嵌入至各種不同網路，舉例來說，首先，如車燈控制等無須即時與低資料量的人機介面，以
較慢與低成本的 LIN 網路來達成。至於儀表顯示，如轉速此等需快速的資料變化，但卻無
安全的急迫性，便以中速的 CAN 網路來達成。最後，如煞車、油門與方向盤等精密以及大
資料量控制節點，目標以 FlexRay 網路來達成。 
在此嵌入式車輛通訊網路之電子平台中，延伸了兩個閘道器和三種主流通訊網路，並搭
載其 ECU 節點來做為本系統雛型架構。而經由這創新的設計平台模擬上的通訊網路，並加
入嵌入式系統去扮演閘道器角色，除了完成車用匯流排的功能之外，並進一步達到自動控制
的效果。 
如下圖 4.1 所示，為嵌入式車輛通訊網路之電子平台的架構圖。其中，右半部為 CAN
與 LIN 匯流排部分，左半部則為 FlexRay 網路部分。 
 
 8
時，由於 CAN 將 EUC 分離，可能因此造成事故，給駕駛人帶來危險。 
 
 FlexRay 晶片組 
FlexRay 是由資料連結層和實體層所構成(如圖 4.2 所示)。目前控制各層專用的晶片組樣
品已經開始出貨。Motorola 所開發的「MFR4100」與「協定規格 2.0」為依據的「MFR4300」，
以及 NXP 則推出具有實體層用的介面晶片組。FlexRay 是由實體層和資料連結層所構成，所
以在主機階層的應用軟體，以及在實體層以下連接器的形狀並不在規格的範圍之內。 
 
 
▼資料連結層
   (Motorola)
▼物理層
      (NXP)
主機階層
(微控制器)
介面階層
(主機用)
協定階層
介面階層
(通道用)
拓樸學階層
(通道的組成)
 
圖 4.2、構成 FlexRay 的兩個階段 
 
 
 兩種網路類型可以強化障礙應對能力 
FlexRay 能滿足汽車對資料傳輸速度和信賴性的高要求，同時還有許多設計能減少網路
的研發成本首先，FlexRay 實體層的資料傳輸速度最高每秒 10Mbps，可以抑制不必要的電磁
波，並提升電磁相容性(Electromagnetic Compatibility，EMC)。此外，它還可以阻止不必要的
訊框傳送。 
隨著網路接續型態和通道數目的不同，成本、資料傳輸速度和應對障礙的強度也會有所
不同。網路的其他的動態區段也可以相通，和其他的車輛通訊網路介面規格相比較下，有兩
個優點。一個是傳送和接收訊號的延遲晃動可以降到最低，因為可以對每一個溝通循環進行
時點修正。另一個優點是資料傳送的效率高，不會像 CAN 一樣因為資料傳輸衝突而造成延
誤。 
設計者可以選擇最適當的組合。網路的接續有匯流排型和星型(參考圖 4.3)。CAN 和其
他的車輛通訊網路介面規格多採用匯流排型，其優點是熟悉匯流排型的技術人員多，而且零
件成本較便宜。相較之下，星型網路接續方式的特徵在於，資料傳輸速度容易提升，而且錯
誤發生時，不容易影響其他節點。 
匯流排型和星型接續方式也可以混用。例如，當初為了節省成本而以匯流排型接續方式
 10
(a)不同階層和時間順序的協定
通訊週期階層
仲裁網格階層
寬帶域階層
微帶域階層
靜態區段
靜態時槽
寬帶域階層
微帶域階層
動態區段
微小封包時槽
簡易視窗網路閒置時間
時間
 
(b)靜態區段
訊框ID (1) 時間通道A
通道B 訊框ID (1)
1
通道A的時槽計數器
通道B的時槽計數器
1
訊框ID (2)
靜態時槽1
2
2 3
3
靜態時槽2 靜態時槽3
靜態區段
 
 
圖 4.4、在靜態區段和動態區段傳送訊框的方式不同 
 
FlexRay 的設計在靜態區段旁設置動態區段(a)。在靜態區段，時槽(靜態的時槽)ID 就是
訊框的 ID(b)。有 2 個通道時，資料傳送的方式有 3 種。圖 4.4 中的各個靜態區段說明了這 3
種資料傳送的方式。「1」在靜態時槽 1，通道 A 和 B 同時傳輸 ID(1)的訊框。「2」在靜態時
槽 2，只有通道 A 傳輸 ID(2)的訊框。在靜態時，槽 3 的兩個通道都不傳輸任何訊息。在動態
區段，時槽(微小封包時槽)的 ID 就是訊框的 ID(3)。和靜態區段不同的是，在動態區段，設
置微小封包時槽的時間點，各通道各自獨立。而未在圖中說明的是，在時點完全相同的微小
封包時槽，也可以傳送訊框。 
 
 12
 FlexRay 訊框和信號 
FlexRay 使用的通信訊框有三個區段：Header，Payload 與 Trailer 區段，如圖 4.6 所示。 
 
圖 4.6、FlexRay 通信訊框 
 
而與CAN網路的事件觸發協定不同的是，FlexRay使用時間觸發協定來轉移訊框。FlexRay
的時間觸發模式可以確保資料按照事先確定的時間表進行傳輸。此外，雙通信通道Ach和Bch
都能傳輸資料。 
在實體層，FlexRay根據uBP和uBM的不同電壓，使用不同的信號BP和BM進行通信。四
個信號(如圖4.7所示)代表了FlexRay匯流排的各種狀態： 
 Idle_LP： 低功率狀態 
 Idle： 無通信狀態 
 Data_1： 邏輯高 
 Data_1:邏輯低 
注意，在Data_1 和Data_0之間不允許有衝突 
 
圖 4.7、FlexRay 匯流排狀態 
 
 
 FlexRay 發展的工具鏈 
為了能在我們所規劃的車輛通訊網路電子平台中實現 FlexRay 驅動程式設計，我們必須具
備 FlexRay 節點或是 FlexRay 裝置，才可設計其相關的驅動程式，並進而從 PC 應用程式中移
植到Linux作業環境中。而如圖 4.8開發 FlexRay網路的工具鏈。因此，必須在其中選擇 FlexRay
所需的最小開發工具組。 
 14
 
圖 4.10、FlexRay 節點與 FlexRay 裝置連接測試示意圖 
 
 
但由於這一部分的開發工具組已部分損毀，且原廠公司已被合併為 EB (ELEKTROBIT 
CORPORATION)（http://www.elektrobit.com/）。因此，進而切入到更難的 FlexRay 節點開
發與拓樸網路的設計上。如此，才可完成本計畫所要制訂的目標。 
 
4.2 FlexRay 節點開發與設計 
在本系統的 FlexRay 網路中利用星狀拓樸的方式以兩個 ECU 節點和一個 FlexRay/CAN
閘道器建構出一個高達 10M Bps 的高速車載網路，並以高安全性和高及時性為導向，模擬實
車的底盤和傳動控制，如下圖 4.11 所示，為 FlexRay 網路拓樸設計圖。 
 
圖 4.11、匯流排網路拓樸示意圖 
Node1 Node2
Node3
 16
 
圖 4.13、FlexRay 的同步參數配置 
表 4.1、為點對點的群集參數配置表 
Protocol Parameter Value Unit 
gdMacrotick  1  us  
gMacroPerCycle  1000  Macroticks  
gNumberOfStaticSlots  20  
gdStaticSlot  31  MacroTicks  
gPayloadlengthStatic  4  16 bit Words  
gdMiniSlot  6  MacroTicks  
gdNIT  125  MacroTicks 
 
 
公式： 
Symbol windows＝1us；加在 Static、Dynamic 和 NIT 區段裡 
Static Segment＝gNumberOfStaticSlots* gdStaticSlot 
Dynamic Segment＝gNumberOfDynamicSlots* gdMiniSlot 
1 Cycle＝ Static Segment ＋ Dynamic Segment ＋ NIT 
1000us ＝(（20*31＝620us）＋1us)＋(（42*6=252us）＋1us)+（125us＋1us） 
 18
表4.2、FlexRay 工作排程(Task scheduling) 
Unit (us) Node1 Node2 Node3 
 Offset Period Offset Period Offset Period 
ApplTask1 50 1000 - - - - 
ApplTask21 - - 50 1000 - - 
ApplTask22 - - 300 1000 - - 
ApplTask23 - - 650 1000 - - 
ApplTask31 - - - - 50 1000 
ApplTask32 - - - - 300 1000 
ApplTask33 - - - - 650 1000 
SysTaskChassis 800 1000 - - - - 
SysTaskMotor - - 800 1000 - - 
SysTaskGateway - - - - 800 1000 
 
 ECU 配置 
本系統發展平台中，FlexRay 通訊控制器為 MC9S12XFR128 CC 系列，其對應驅動裝置
為 DECOMSYS 公司所建立的 COMMSTACK FlexRay 驅動配置碼以及 APPLICATION 
EXECUTION SYSTEM 配置工作調度表。所屬驅動配置確認後，結合前述四項步驟之 FlexRay
網路相關設定資訊，產生可供韌體開發程式編譯用檔案，以接續韌體程式設計。 
 
4.2.2  FlexRay 網路韌體程式設計 
根據 DECOMSYS 排程軟體所產生的 skAES 程式碼與其配置標頭檔與 COMMSTACK 程
式碼與其配置標頭檔後，在撰寫的程式碼中，主要包含的檔案含有 Stdio,string 等基本的
library、skTPI、FrSh、OsSh 等多種函式庫結合使用(參考圖 4.15)。 
 
 
圖 4.15、DECOMSYS 排程軟體多種函式庫 
 
 20
 
圖 4.16、FlexRay 節點功能示意圖 
 
圖 4.17、SK_S12XF512 硬體規劃示意圖 
 
如下圖 4.19 所示，上層板為 Freescale 半導體公司開發的 S12XFSTARTERKITE FlexRay
發展平台，下層板為自行設計開發的轉接電路板。 
 
 
圖 4.18、SK_S12XF512 整體電路圖 
 22
針對底盤控制的 FlexRay 節點的韌體程式設計，如下圖 4.22 所示，底盤控制節點流
程圖所示。如下圖 4.23 所示，為底盤控制節點以 UART 輸出的 DEBUG 結果。 
 
圖 4.22、底盤控制節點韌體設計流程 
 
圖 4.23、FlexRay Node1 網路測試結果 
 傳動控制節點(Node2) 
在傳動控制方面，此功能是以 Freesale 公司開發的原廠功能板上的 PMF(Pulse Width 
Modulator with Fault)模組，透過 PWM 的介面去控制遙控車的轉速以及轉向的功能，模擬實車
傳動控制的應用，如圖 4.24 所示，為傳動控制節點的動作區塊示意圖。 
 24
 
圖 4.25、傳動控制節點韌體設計流程 
 
圖 4.26、FlexRay Node2 網路測試結果 
 
4.2.2.2 FlexRay/CAN 閘道器(Node1) 
FlexRay/CAN 閘道器，為主要網路節點（Node3），由於目前車輛通訊網路，還是由 CAN
最為廣泛應用。因此，CAN 與 FlexRay 的資料轉換與傳遞，則變為相當重要。而 S12XF512
微處理器核心依然含有 CAN 的通訊控制器(S12MSCANV2)，相容於 Bosch 車商所制定的 CAN 
2.0A 與 CAN2.0B 協定，也是 MSCAN 規格內。如圖 4.27 所示，為 MSCAN 的方塊圖，擁有
接收傳送引擎、訊息過濾與緩衝。最後經由控制與狀態方塊，用中斷方式告知可否傳送或是
接收。 
 26
 
圖 4.29、FlexRay/CAN 閘道器韌體程式設計流程 
 
圖 4.30、FlexRay Node3 網路測試結果 
 
4.2.3 嵌入式車輛通訊網路電子平台之 FlexRay 驅動程式設計 
有了稍前對FlexRay節點與FlexRay裝置的整合測試，並進一步地模擬FlexRay節點的特性
後。緊接著，我們即可透過於第一年所建置的嵌入式車輛通訊網路電子平台來開發設計
FlexRay驅動程式設計。由於我們自行設計的FlexRay節點與拓樸網路是透過COM連接至PC主
機的。因此，可以很快速地來發展FlexRay驅動程式。利用採用Linux 2.6.24以上的核心及QT
所實現的圖形化介面即可設計出最具人性化操作的嵌入式車輛通訊網路電子平台之FlexRay
驅動程式。 
 
 28
 
(a) 
 
(b)  
圖 5.2、孕龍邏輯分析儀讀取的 FlexRay 網路封包示意圖 
 
根據測試結果，便可驗證本車載通訊電子網路模擬器之FlexRay訊號可透過市面上的儀表
來分析。也就代表著，此嵌入式車輛通訊網路電子平台上的FlexRay網路訊號可符合FlexRay 
V2.1A之通訊協定。 
 
5.1.2 CAN 訊號驗證 
在 CAN 訊號驗證上，主要採用 ZLG 所推出 USBCAN-I 智能 CAN 介面卡的來做 CAN 匯
流排分析資料，以確保平台上之網路為標準之 CAN 訊號。在車載通訊電子網路模擬器部分的
CAN 匯流排線上的鮑率值為 500k bps，可透由 ZLG 分析儀顯示的視窗驗證由嵌入式車輛通
訊網路電子平台上所傳出的 CAN 封包。ZLG 分析儀顯示出的封包結果包含 CAN 的 ID 碼、
CAN 的類型、資料長度和資料等。如下圖 5.3 所示，為使用 ZLG 智能 CAN 介面卡之分析軟
體所截取到的畫面。 
根據測試結果，便可驗證本車載通訊電子網路模擬器之CAN訊號可透過市面上的儀表來
分析。也就代表著，此嵌入式車輛通訊網路電子平台上的CAN網路訊號可符合CAN V2.0A/B
之通訊協定。 
 
 30
資料分析。如稍前所述，底盤控制資料主要為方向盤與踏板訊號，其中最前面的 Byte0 與 Byte 
1 為轉向資料，其後的 Byte 2 與 Byte 3 則為油門踏板的資訊。此外，最後的 Byte 4 與 5 則
為剎車踏板的資訊。以及 Byte 6 則是方向盤上之按鍵資訊。 
本研究之 FlexRay 訊號擷取分析最主要特點在於可循環的接收 FlexRay 網路上之資訊，
並且以時分秒的方式做顯示。如圖 5.5 所示，為嵌入式車輛通訊網路電子平台程式所擷取到
的 FlexRay 訊號畫面。透過其中的資料欄位，即可驗證可擷取到所需的 FlexRay 資料。此部
分是透過 Linux 2.6.24 所內建之 UART 之驅動程式來實現的。 
 
 
圖 5.5 、嵌入式車輛通訊網路電子平台程式之 FlexRay 協定分析與測試畫面 
 
5.2.2 CAN 訊號的擷取與分析 
針對其中的底盤控制節點做資料分析，底盤控制資料主要為方向盤與踏板訊號。最前面
的 Byte0 與 Byte 1 為轉向資料，其後的 Byte 2 與 Byte 3 則為油門踏板的資訊。最後的 Byte 
4 與 5 則為剎車踏板的資訊，以及 Byte 6 則是方向盤上之按鍵資訊。透過其中的資料欄位，
即可驗證 CAN 協定可擷取到所需之資料。 
如圖 5.6 所示，為嵌入式車輛通訊網路電子平台程式所擷取到的 CAN 訊號畫面。透過其
中的資料欄位，即可驗證可擷取到所需的 CAN 資料。 
此部分是透過 Linux 2.6.24 下所自行設計的 SPI 介面驅動程式，以連接一 MCP2515 CAN
控制器來實現的。 
 
 
圖 5.6、車載通訊電子網路協定分析儀主程式之 CAN 協定分析模組測試畫面 
 
 
FlexRay 資料 
CAN 資料
 32
六、參考文獻 
1. FlexRay Communications System Protocol Specification Version 2.1 
2. FlexRay Communications System Electrical Physical Layer Specification Version 2.1 
3. FlexRay Communications System Electrical Physical Layer Application Notes Version 2.1 
4. FlexRay Communications System Protocol Specification Version 2.1 
5. 王銘儀，即時排程在 10Mbps 車用電子網路之應用，國立中山大學，碩士論文，2007。 
6. 李旺軒，巫志倫，“車身 AFS 與車身網路整合之電控介紹”，車輛研測資訊，2005，11 
7. 羅清岳，車用電子－打造未來智能化汽車，嵌入式系統扮演要角，DigiTimes.com 
8. 羅清岳，車用電子控制單元(ECU)系統架構及解決方案－(上) ，DigiTimes.com 
9. 羅清岳，車用電子控制單元(ECU)系統架構及解決方案－(下) ，DigiTimes.com 
10. 許永和，許源鏞，賴大溪，黃屹偉，郭仲宇，李宗穎，”應用於車輛電子通訊網路之 USB-CAN Dongle
設計” ，第十一屆車輛工程學術研討會 
11. Pro.Dr.-Ing.K.Etschberger, “CAN-based Higher Layer Protocols and Profiles,” IXXAT Automation 
Gmbh., 2005. 
12. Jingcheng Wang and Xiaoming Wang and Xianglin Zhai and Hao Wang, “CAN/LIN hybrid network 
for automobile,” IEEE International Conference, Vol.14-16, pp. 348-352,2005.  
13. LIN Specification Package,LIN Protocol Specification—Revision 1.2,LIN Consortium,Nov,2000 
14. The Local Interconnect Network Consortium, www.lin-subbus.org.  
15. MOST Specification v2.4, MOST Cooperation, www.mostnet.de ,2005.  
16. 台灣工業銀行，IBTS，www.ibts.com.tw. 
17. 鐘榮峰，打通汽車任督二脈-連結！啟動！GO！，零組件雜誌，第 192 期，第 31-45 頁，2007. 
 
 
國科會補助計畫衍生研發成果推廣資料表
日期 2010年10月26日
國科會補助計畫
研發成果名稱
發明人
(創作人)
技術說明
技術移轉可行性及
預期效益
技術/產品應用範圍
產業別
計畫名稱:
計畫主持人:
計畫編號: 學門領域:
(中文)
(英文)
成果歸屬機構
(中文)
(英文)
嵌入式車輛通訊網路之電子平台研製
許永和
96 -2628-E -150 -001 -MY3 計算機結構與計算機系統
嵌入式車載通訊核心平台開發與研製
國立虎尾科技大學 許永和
為了解決未來車輛內不斷提升的ECU數量，及其通訊網路訊號傳輸的資料量，以
及在不斷提升的電控系統比重的強烈需求下。本計畫預計建構一嵌入式車輛通
訊網路之電子平台，並以此為架構來研發及整合目前相關的車輛通訊網路技術-
LIN與CAN。此嵌入式電子平台是架構在ARM-based
S3C2440A（Samsung，ARM920T core）處理器，並以Linux 2.6.9作業系統及QT
來開發圖形化的應用程式。其中，分別透過USB介面及Ethernet介面來開發這兩
種車輛通訊網路協定的驅動程式。
技轉內容：
一、嵌入式車載通訊核心平台設計
二、嵌入式車載通訊核心平台設計之無線USB Dongle驅動程式設計
三、嵌入式車載通訊核心平台設計之CAN/LIN驅動程式設計
四、嵌入式車載通訊核心平台設計之影音串流之驅動程式設計
電機及電子機械器材業
註：本項研發成果若尚未申請專利，請勿揭露可申請專利之主要內容。
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
參加 第十屆旺宏金矽獎 獲得評審團銅獎 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
