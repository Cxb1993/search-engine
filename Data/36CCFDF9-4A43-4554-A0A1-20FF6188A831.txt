2行政院國家科學委員會專題研究計畫成果報告
龍圖連結網路上容錯、通訊等拓樸性質之研究
On the fault tolerance and communication of the dragon interconnection
network
計畫編號：NSC 97-2221-E-142-006
執行期限：97 年 8 月 1 日至 98 年 7 月 31 日
主持人：方覺非 國立台中教育大學數位內容科技學系
共同主持人： 梁文耀 國立台北科技大學資訊工程學系
黃建宏 國立虎尾科技大學資訊工程學系
計畫參與人員: 詹鎮宇 國立台中教育大學數位內容科技學系
黃筱芃 國立台中教育大學數位內容科技學系
張明彥 國立台中教育大學數位內容科技學系
一、前言
本計畫的目的是希望能對一個新提出
的，degree 為常數的超立方體變型-龍圖
(Dragon graph)的容錯、通訊等拓樸性質加
以詳細研究探討。我們在本期研究中已完
成了以下項目:
1. 在前期研究(NSC95-2221-E-142-003)
中，我們找到了龍圖(Dragon graph)上的最
短 路 徑 演 算 法 (shortest path routing
algorithm)。但此演算法雖然是正確的，卻
必須記錄延著路徑的結點，而無法用
distributed 的方式，由每個結點收到
message 時，快速地決定下一結點來 route
message。而在本期研究中，我們已經找到
了有效的分散式最短路徑演算法。
2. 在前期研究(NSC95-2221-E-142-003)
中，我們設計了龍圖(Dragon graph)上的廣
播 演 算 法 (distributed broadcasting
algorithm)。此演算法雖然是正確的，但是
只是 centralized 的，而沒有 distributed 的
作法。而在本期研究中，我們已經找到了
有效的龍圖上的分散式廣播演算法。
3. 我 們 已 用 包 含 於 書 中
(embedding-in-books)方式，找出一種線性
鋪置(lay out) 將 Dragon graph 包含於常數
的 page 數。
二、計畫緣由與目的
無論是在超級電腦上，還是在叢集計算的
架構中，連結網路都扮演了一個重要的角
色。而一個好的連結網路應該具備以下幾
個特性 [4]:
1. 有效率的通訊：如何快速有效地在
各個處理機(也就是結點)之間傳遞資料，應
該是連結網路最重要的性質之一。而其討
論議題最基本的則是其圖形上的半徑
(diameter)；因為 diameter 的值決定了該連
結網路上，任意兩點之最短距離之極大
42. n 維 CCC 的 diameter 將近 2.5n 。
而 n 維龍圖的 diameter 介於 n 和 1.5n 之
間；相較於 CCC diameter 將近 2.5n 下降
了不少。
3. 使 用 Dragon graph 執 行
Ascend/Descend 演算法在 communication
時間上只需在 CCC 上 1/3 的時間。
基於以上三點，我們認為 Dragon graph
是一個很值得研究的連結網路。在本研究
中，我們試圖對 Dragon graph 上的基本通
訊演算法的建置做一番探究；這其中包含
了最短路徑演算法及完整的廣播演算法。
我們之前已經使用了電腦程式計算於
維度低於 20 的龍圖之 diameter。進一步
地，我們希望能得到龍圖之 diameter 的確
切公式。此外我們也希望使用 embed in
books 的方法討論 Dragon graph 之 layout
性質；以及試著建立龍圖上任兩點之間的
container 以 便 討 論 龍 圖 上 之
k-widediameter 等容錯性質。
三、文獻探討及研究方法
Dragon graph 是 Fang(也就是本計
畫主持人)提出的 [2]。在該論文中，Fang
闡述了龍圖的基本定義，其對稱性，能
有效執行 Ascend/Descend 演算法的特
性；並列出了電腦計算出的基本性質如
diameter, cost = diameter×degree 等。
我們在本計畫的研究中，分別用以
下的方法探討了相關的問題：
1. 最短路徑演算法：
我們將Dragon 上某結點X 至某結
點 Y 的最短路徑演算法，轉換成在 cycle
上某一點 X經歷(traversal) cycle 上某一
群結點的集合，並終止於某一點 Y的路
徑問題。經過了這樣的轉換，我們可以
計算出 Dragon graph 上 x 到 y 的最短
路徑。接著我們再找出在每一條 shortest
routing path上，每一組 current nod、source
node 以及 destination node 的關係；就可
以 發 展 出 一個龍圖上的 distributed
routing 演算法。
2. 廣播演算法：
我們用兩個 phase 來解 Dragon 上
的廣播演算法。由於 n 維 Dragon graph
具有 node-symmetric 性質， 我們假設
broadcasting 樹的樹根為 r0…0。
Phase 1. 令0r0…0 及1r0…0 分別
為 r0…0 之左右兒子。再依此例，一直
做下去可以可以得到一棵高度為 n-1 的
full binary tree。
Phase 2.我們定義了 Dragon graph 上某一
結點 xn xn-1… xk+1 r xk-1 …x2 x1 的 binary
sequence 為 xn xn-1… xk+1 xk-1 …x2 x1。而對
映到同一個 binary sequence 的不同結點 X
及 Y，如果 X 的 r-bit position 在 Y 的 r-bit
position 的左方，則我們稱 X 是 Y 的
Senior；或說 Y 是 X 的 Junior。我們觀察
上述的 full binary tree，可以發現在其上的
每一結點，其 Junior 都會在該 tree 中成為
其子孫。例如，1r00 的 Juniors: 10r0 和 100r
都是他的子孫。而每一個 binary sequence
