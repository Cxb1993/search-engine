1研究摘要：
本計畫以乙太網路為基礎建構出具控制器切換與網頁監控的分散式控制系統，該系
統具有控制站、收集站、伺服站與資訊管理站。其中控制站的控制器設計成可透過網頁
更換控制器的執行程式，亦可先在控制器內部嵌入自行開發並可解譯 PLC 指令的控制
程式，然後透過遠端網頁更改控制程式內部的控制碼。至於收集站則對控制站進行控制
接點的監視與收集，並透過網頁服務的方式將資料送至伺服站的資料庫儲存。伺服站內
部建置一資料庫、網頁服務元件，以及資訊管理站網頁程式。資訊管理站為一網頁監控
系統，可監控控制站的接點訊息進行動態繪圖，以及將控制器的執行檔或控制碼經由伺
服站傳至控制器內部，並能提供控制器的接點資料進行統計運算的功能。在控制站方
面，本文提出兩種控制器功能的切換方法，改善控制器在程式更換時造成設備停機的問
題；收集站與伺服站之間的資料交換使用網頁服務技術達成，避免 OPC 無法跨平台的
問題；資訊管理站的接點監控則使用 Asp.net Ajax 與 Silverlight 兩種技術的整合，大幅
改善傳統網頁監控無法動態繪製的問題或監控頁面持續更新所造成的閃爍現象。
人才培育成果說明：
參與本計畫執行之人員，已具備了如下之相關技術與訓練：
(1)於計畫執行中了解整合分散式控制系統與網頁監控之架構與概念。
(2)透過本計畫之執行進而訓練計畫執行人員學習對於嵌入式系統的程式設計與網頁服
務元件的設計。
(3)了解分散式控制系統的基本原理，與藉由資料交換技術進行各站別間的資料交換。
(4)了解系統的規劃與設計，並得知如何加以應用。
(5)培養對於一個計畫的執行能力與遇到問題之解決問題的能力。
計畫人員林後安、黃致原同學除投稿中國機械工程學會學術研討會論文，林後安同
學並配合此計畫之結果，進行相關主題之碩士論文研究。
技術研發成果說明：
本計畫為分散控制系統之控制器切換與網頁監控架構建置，所研發之系統架構如圖
1 所示。
圖 1 系統架構圖
本計畫主要研發成果條列於下：
1. 完成分散式控制系統之架構與網頁系統監控。
2. 可透過資訊管理站將控制碼或控制器執行程式透過乙太網路傳送至控制器內部，並
予以切換執行。
3. 使用 Asp.net Ajax 搭配 Silverlight 完成網頁即時監控系統
4. 於控制器內佈建置一 XML 檔案，完成跨平台的資料交換技術。
Controller
乙太網路 TCP/IP
網頁服務
瀏覽器
網際網
收集站
XML ControllerXML
伺服站
資訊管理
..... ControllerXML
.....
3圖 2 應用程式切換流程
2. 控制器程式指令碼更換
當類別被實體化之後，啟動類別內部的 Timer 物件，對指定路徑的資料夾做內部
檔案的判斷，如果為控制程式碼則觸發控制碼更換事件，如圖 3 所示。
圖 1 控制碼更換流程
資料儲存方面，選擇了 XML 當作控制器的資料儲存格式，並自行設計一類別可依照
控制器的控制模組名稱與 I/O 點數建立一個符合 XML 格式的檔案，其程式流程如圖 4
所示。
實體化類別
啟動 Timer
掃描指定資料夾
是否有控制碼檔案?
觸發事件
是
否
實體化類別
啟動 Timer
掃描指定資料夾
是否有控制程式?
觸發事件
是
否
5圖 4 控制器程式控制碼更換流程
收集站程式架構
收集站在本系統所扮演的角色為監視控制站的控制訊息與替伺服站收集控制站的
相關控制資料，並將此資料透過網頁服務的方式傳遞到伺服站的資料庫儲存。當收集站
程式啟動後透過網際網路取得控制站裡的 XML 檔案，並將控制模組的接點狀態顯示於
收集站程式介面上。此時收集站也會對所連接的控制站做資料收集，當資料收集完畢之
後透過網頁服務的方式將資料上傳到伺服站，圖 7 為收集站程式流程圖。
圖 5 收集站程式流程
程式啟動
檔案是否存在？
連線到控制站
擷取 XML 檔案
剖析 XML 檔案
顯示模組資料
是
停止擷取
程式關閉
否
收集 XML 檔案
傳送到伺服站
網頁服務
關閉程式
否
是
程式啟動
掃描硬體模組
依據硬體模組建立 XML 檔案
程序控制或資料收集
模組輸出與輸入接點狀態 更新 XML
載入新的控制碼
清除舊有控制
控制碼更換掃描
關閉程式？
程式關閉
是
否
71. 控制碼上傳頁的操作流程(圖 9)為選擇控制器的 IP，並開始撰寫控制碼，本研
究所使用的控制碼為 PLC 的指令碼(Instruction List, IL)，設計完控制碼之後會
呼叫網頁服務元件，並將控制器 IP 與控制碼傳給網頁服務元件，由元件進行整
理並存成檔案，再透過 ftp 的方式將檔案傳至控制器。規劃以伺服站而不直接
使用資訊管理站來傳檔案的原因在於考量往後如需要加入控制碼檢查機制，只
需更改網頁服務元件內部程式邏輯即可。
圖 7 控制碼上傳頁流程圖
2. 執行檔上傳頁的操作流程(圖 10)為選擇控制器的 IP 與上傳檔案路徑，接下來呼
叫網頁服務元件，並將控制器 IP 與檔案傳給網頁服務元件，由元件進行檔案檢
查，再透過 ftp 的方式將檔案傳至控制器。同樣的利用伺服站而不直接使用資
訊管理站來傳檔案的原因，為可由網頁服務元件來檢查執行檔是否符合控制器
所執行的檔案。
圖 8 執行檔上傳頁流程圖
3. 動態繪圖監視頁的操作流程(圖 11)為輸入使用者帳號，依帳號的使用權限顯示
監視接點，並將接點數值以動態的方式即時繪製圖形。
圖 9 動態繪圖監控頁流程
輸入帳號
依帳號顯示監視點
連接至控制站
擷取控制資料
即時繪製圖形
選擇控制器 IP
選取執行檔
確定上傳
呼叫網頁服務元件
檢查檔案相關資訊
利用 ftp 傳送至控制器
網頁服務元件
網頁操作
選擇控制器 IP
撰寫控制碼
確定更改
呼叫網頁服務元件
將控制碼存成檔案
利用 ftp 傳送至控制器
網頁服務元件
網頁操作
