 2
wTx + b = 0. The decision boundary tends to separate the whole set of prototypes in to two 
categories according to their labels, ie., it lays the prototypes with different labels on the both sides, 
wTx + b < 0 and wTx + b > 0, respectively. As shown the separation in Fig. 1, w denotes the vector 
normal to the decision boundary, and b the bias. As known, there are methods to generate a variant 
decision boundary but the boundary generated by SVM classifier shares the merit of the large 
margin [21]. The margin ρ, as the defined width of the maximal clearance which the classifier can 
achieve for separation, can be illustrated as the street clearance along the decision boundary (Fig. 1). 
The larger the margin is, the wider the clearance the agent can walk through intuitively. In general, 
ρ = 2/|w| can be geometrically obtained from the linear case of Fig. 1.  
 
0T =+ bixw
0T <+ bixw
0T >+ bixw
W
Margin
 
 
0T =+ bixw
0T <+ bixw
W
Margin 
0T >+ bixw
, : Margin SVs  
(a) Small margin     (b) Optimized large margin 
Fig. 1. A large margin can be achieved by the SVM. 
Employing kernel trick [22] for high dimensional similarity manipulation is the key to achieve 
the non-linear SVM success. Instead of the infeasibility of the direct manipulation of the inner 
product of the high dimensional feature map ϕ, the kernel function, )()(  ) ,( T jijik xxxx ϕϕ= , 
computes implicitly the inner product without mapping into such a high-dimensional space and 
reduces the corresponding computations. With kernel trick, the optimization problem of the SVM 
can be expressed briefly with the instantaneous error ξi: 
∑
=
+
l
i
ib 1
2
,
||
2
1minarg ξλw
w
, (1) 
subject to 
,1))(( ii
T
i by ξϕ −≥+xw  and ii ∀≥      0,ξ , (2) 
In the expression, the penalty factor λ denotes a scaling factor to regularize the total cost of ξi’s. The 
penalty factor controls the trade-off between maximum margin and the minimum total remaining 
error of the trained classifier. If a large value is given, the convex optimizer will compel the 
optimizer to avoid classification errors, and a highly precise decision boundary will then be 
obtained. By employing the Lagrange multipliers α = [α1, α2, …, αl]T for transferring the 
optimization problem (1)-(2) to a dual problem, and the model of SVM can eventually convert to a 
quadratic programming problem as follows: 
∑ ∑∑
= = =
−
l
i
l
i
l
j
jijijii kyy
1 1 1
) ,(
2
1  maxarg xx
α
ααα , (3) 
subject to  
 4
)},(),( , ,, ,|{ zxzxxxxxzz jijiobstjifree ssCC =≠∈∃∈=Γ , (8) 
where ),(distancemin),( zxzx x obstCs ∈= , produces a set of convex polygons Γ such that each polygon 
contains exactly one source prototype, and every point of a produced polygon is closer to its source 
prototype than to any others. For convenience, we call the vertices of the polygon edges as 
waypoints as they would potentially be visited in the path tracking. The Voronoi path PVor is hence 
defined as an arbitrarily picked path following the edges of the Voronoi tessellation from a waypoint 
near position I to a waypoint near position O. A candidate PVor, preferable to pave a road with the 
maximized clearance among the obstacles, is really advantageous to the collision-free safe criterion 
of the path planning. The preprocessor chooses then a short PVor in a possibility for consecutive 
process. The Voronoi tessellation can still be applied with the presence of block-obstacles. Nothing 
changes but the minimal distance s (8) from z to those obstacles is measured from the boundary if 
the block-obstacle is presented. 
IV. Modeling the Planner 
The planner, given a procedure with known I, O, and obstacles is devised to search a safe and 
smooth path in the Cfree. The whole structure of the planner is given as Fig. 3. 
 
Fig. 3. Flowchart of the model. 
A. Map Formatting 
A.1. Obstacles Representation 
As known, the SVM requires basically the individual prototypes in 
the input space. Obstacles in the working space hence must be 
decomposed as those scattered points, here called especially as obstacle 
singletons, for converting the working space into the planner input space 
to meet the requirement. The decomposition did the conversion, and 
abstracted the scattered sparse obstacle singletons as the prototypes. For 
larger obstacles, it can be expressed as a cluster of close singletons (Fig. 
4). In the study, we use a group of singleton grids which are placed together with a fixed gap p to 
represent a large obstacle. Hence, the block-obstacle can be decomposed into many obstacle 
singletons, and furthermore abstracted also as prototypes. The prototype generated from either 
obstacle singletons or block-obstacles is called natural prototype to distinguish them from the other 
type of auxiliary artificial prototypes. 
A.2. Pseudo-Obstacles for Outer Frame (POOF) 
 
p 
Fig. 4. Multiple singletons 
form a large obstacle. 
 6
obstacles, the agent taking the candidate path passing through the gaps narrower than p should be 
rejected to avoid the collision with the corresponding large obstacle block. The algorithm for a valid 
PVor is abbreviated as below: 
Algorithm 1 (Voronoi path selection): 
1. Initial a queue PVor with first edge EI1, the edge from I to its most closest waypoint z1; 
2. i = 1, smin = ∞; 
3. Evaluate all the waypoints zj having candidate edges connected to zi, and record all zj, j = 1 to l, in a list L; 
4. For j = 1 to l 
a. Evaluate all the possible passing gaps across Ei L(j), and record all the gaps’ length pk, k = 1 to m, in a list 
M; 
b. For k = 1 to m 
c.  If pM(k) ≤ p then return to step 4; 
d. If Euclidian distance sL(j)O < smin then jmin =L( j) and smin = s L(j)O; 
5. Save the edge Ei jmin to PVor; 
6. i = jmin; 
7. repeat steps 3-6 until the zi is the closest waypoint to O; 
8. Save the edge EiO to PVor, and return PVor; 
C. Prototype Labeling 
As described previously, PVor is a naïve path generated from I to O. Although the naïve path is 
substantially not smooth, it determines at least the approximated road that the SVM post-processor 
can only refine. Since the SVM is intrinsically a supervised learning classifier, it generates a 
separating boundary by learning from the adversary labeled prototypes. Tracing back the idea, the 
unlabeled prototypes can conversely be labeled using a known separating boundary even the 
boundary is naïve. The prototype labels are hence given easily by the partitions formed by PVor (Fig. 
6). To finish the labeling, it should consider more the pseudo POOFs. Since PVor is ended up at both 
I and O, the partition can not cover the POOFs (Fig. 6), and the separating boundary should 
therefore be extended from I and O to the space border. In the study, the default directions along the 
edges connected with the endpoints are adopted for the extension. 
D. SVM Path Generation 
A SVM path generator is in turn used to generate eventually the smooth path, PSVM, when all 
the preparations of the prototypes are done. As expected, the smoothing has taken effect with the 
RBF kernel as the red solid line in Fig. 6. 
V. Experiments and Discussions 
To assess the performance of the proposed 
model, a smoothness index SI is defined in 
advance for quantitative measures of 
smoothness. For calculations of SI, the eventual 
PSVM is first discretized into a sequence of 
connected uniformly-spaced linear segments. 
The SI then measures sequentially the slopes of 
the discretized segments and amounts to an aggregated value. For an unprejudiced comparison, SI’s 
of various paths in comparison must be calculated with the same number of segment-divisions. The 
SI reflects the smoothness of a planned path. In short, the smoother the path, the smaller the SI. 
Algorithm 2 (SI calculation): 
Vertices pi+3
I
O
dxi,1
dxi,2
pi+1
pi
Reference lineI
Reference line
Fig. 7. Calculating the SI. 
 8
into two completely separable classes by the PVor. It is no longer to take parameter λ 
into account in the SVM learning since there is no misclassification for trade-off. In 
the study, the model retaining λ is used to keep the curve flexible to reflect the 
influence of the obstacles. Here, a sufficient large value for λ, e.g., 1x103, suffice the 
model. 
The selection of σ, which is the width parameter of the RBF-kernel, is more 
difficult since it affects significantly the appearance of the induced path. In general, σ 
determines mainly the terrain unevenness of the planner input space as it shown in Fig. 
2. Whereas a loose value of σ may not reflect the terrain unevenness, an exaggerated 
value would smear the terrain surface. As those shown in Fig. 9(b), the variation of 
the planned paths differs with the settings of σ. A large value of σ produces generally 
a smoother path with narrow variation than that a small value of that. However 
smooth the path will become, the accompanying smeared surface may drift the path 
distant from the neutral position. The corresponding measures of SI and path length 
for variable λ and σ are available in Table II. To avoid the over-smooth condition and 
keep the flexibility in principle, a small σ is generally adopted. 
   
(a) σ = 1        (b) λ = 100 
Fig. 9. Effect of parameters λ and σ. 
C. Serving without POOF 
In fact, the PSVM is actually a decision boundary learned from the prototypes. It 
means the satisfaction of the PSVM depends substantially on the distribution of the 
prototypes, especially, the natural prototypes. The ideal of distribution is that the 
adversary labeled prototypes can clearly be separated along the orientation from I to 
O. The distribution creates approximately equal repulsive potentials on the opposite 
sides to form PSVM. Unfortunately, the requirement may not be adequate due to poor 
or imbalanced distribution of the prototypes. One example for such ill condition is 
shown in Fig. 10(a) and (b). Due to the sparsity, the PSVM is broken into fragmental 
curves which enclose only a part of the prototypes locally. The broken PSVM is 
eventually failed although an acceptable Voronoi path has been selected first. The ill 
condition can be improved by adding the surrounding POOF’s. Figure 10(c) and (d) 
λ = 1
λ = 10
λ = 100
σ = 1
σ = 2
σ = 4
 10
described in previous section III.A.3, a setting of θ=π/2 is adopted as default 
orientation of the handcuffs at I and O for a perpendicular direction of the agent start 
or stop. In general, the perpendicular direction is often the direction of PSVM in those 
two positions. In contrast to the most effortless orientation straightforward from I to O, 
the default direction is not always optimistic for an ideal PSVM. Keeping d = 1, Figure 
13 illustrates that different settings of θ may slightly change the PSVM using the same 
obstacle layout of Fig. 12. The related Table IV shows the change of θ effectively 
alters the path smoothness. We should also notice that an over-adjustment of θ may 
result in a bad effect as illustrated in Table IV.  
 
VI. Conclusion 
A SVM based path planner sought to provide a safe and smooth path for a mobile 
agent is successfully developed. With the most crucial property of induced wide 
clearance, the path planner is uniquely qualified for the purpose. The final two-stage 
model, merging SVM and Voronoi tessellation together, realizes the planner as an 
admissible model for achieving the motivated goal of this report. Giving a full 
development in theory, the experimental validations show excellent promising results 
in varieties of obstacle scenario. The model deserves further studies in both the related 
applications and extended model improvements. 
References 
1. T. Lozano-Pérez, and M. A. Wesley, “An algorithm for planning collision-free paths among 
polyhedral obstacles,” Communications of the ACM, vol. 22, no. 10, pp. 560-570, 1979. 
 
Fig. 12. Paths generated by different gap d.
Table III. Effect of changing gap d 
d SI Path Length TSVM 
0.2 5.23x10-1 6.86 2.82x10-1 
0.4 4.19x10-1 6.60 2.67x10-1 
0.6 3.62x10-1 6.48 2.52x10-1 
0.8 3.28x10-1 6.40 2.50x10-1 
1 3.05x10-1 6.35 2.50x10-1 
Table IV. Effect of changing orientation θ 
θ SI Path Length TSVM 
π/2 3.05x10-1 6.35 2.50x10-1 
0.45π 2.47x10-1 6.16 2.44x10-1 
0.40π 1.87x10-1 6.01 2.36x10-1 
0.35π 1.37x10-1 5.89 2.34x10-1 
0.30π 1.03x10-1 5.78 2.34x10-1 
π/4 0.86x10-1 6.03 2.66x10-1 
 
Fig. 13. Paths generated by different θ. 
d = 0.2
d = 0.6
d = 1.0
θ = 0.5π
θ = 0.4π
θ = 0.3π
行政院國家科學委員會補助團隊參與國際學術組織會議報告 
                                              98 年 11 月 09 日 
報告人姓名 楊棧雲 服務機構 北台灣 科學技術學院 職稱 副教授 
中文：2009 人、機、系統國際研討會  
會議正式名稱 
英文：International Conference on Man Machine System(ICOMMS 2009) 
會 議 時 間       自 98 年 10 月 11 日至年 10月 14 日 地點（國、州、城市） 馬來西亞檳城 
報告內容應包括下列各項： 
 
一、 參加會議經過 
2006 年本計畫共同主持人楊智旭教授曾參加過 ICoMMS2006，楊老師邀我今年
再度前往參加 ICoMMS2009，我就欣然同意前往，一方面協助文章的發表，一方面
廣泛地收集資訊，以為研究時參考。ICoMMS2009 的宗旨主要是討論人、機、系統
之間介面與整合設計的會議，大部分是控制領域相關的議題。由於人、機、系統應
用的層面廣泛因此也主辦單位予以分組討論。ICoMMS2009 會議主辦國馬來西亞非
常熱誠，所以在幾年的持續耕耘之後 ICoMMS 一系列的研討會也吸引了許多國際學
者的參與。我們在會議開始的第一天到達，在下榻旅館置放行裡後，旋赴會場報到，
加入三天的會議行程。 
ICoMMS 主要的參與者為馬來西亞本地人，與一些印度人為主。在與與會的許
多學者討論交換意見時，常帶有濃厚的英國式英文，聽起來較為吃力，所倖，檳城
有相當多的華僑，時有華人挺身而出充當助譯，有利於溝通交換意見，反而覺得溫
馨。今年的 ICoMMS 邀有來自澳州與本地的學者 Professor Gamini Dissanayake 與
Professor Shamsudin Hj. Mohd Amin 擔任 Keynote Speaker 講述機器人的發展，另當
地學者 Professor Dr Ali Yeon Md Shakaff 講述電子鼻與電子舌頭的研究，在硬體、訊
號擷取、訊號處理上的經驗與歷程很值得借鏡，另及許多農田裡的應用，令人印象
深刻。 
目前我們正在努力擴大與深化我們研究，包括其所站立的基礎與整合應用，所以我
們選擇一個較多應用的研討會參加。當然個人的研究與外在資訊的連結必須再消化
與了解，才能轉化成為有創意與價值的研究，但我們已感到滿足。馬來西亞的科技
發相對地落後台灣，但其國家內資源豐富，華人在當地亦有相當的社經地位，在這
個全球資源開發殆盡的綠能時代，其往後發展有一定的潛力，且其週邊國家皆有類
似環境，是全球重要的資源輸出地區，結合馬來西亞華人的力量，發展雙邊的伙伴
關係，一方面可紓解台灣日益向大陸頃斜的經貿發展，另一方面可取得豐富的資源，
對於資源匱乏的台灣可謂一舉數得。 
 
五、 其他 (論文摘要) 
本研究主要目標是在以模糊及可拓理論(Fuzzy and Extension Theory)發展一個
撞球機器人的攻擊/防守決策的控制器，以達到本研究之撞球機器人有能力仿效真實
人類在阻礙球局的攻擊/防守決策。一般所謂的顆星球(Cushion Shot)是指母球藉桌沿
反彈以擊中目標球入袋的攻擊策略，顆星球可以避開對手作球檔路，是一種經常被
使用的手段。通常，顆星球在撞擊桌沿後的計算，有四個條件需要考慮，包括：一
母球與目標球之間的距離，二母球與目標球袋之間的距離，三母球、目標球、與目
標球袋之間的角度，四及相關作擋的阻礙球資訊。藉由這球局中的這四項訊息提供
給控制器計算，以決定撞球機器人的相應對策。除此之外，母球與目標球在撞擊後
是否再度觸碰桌沿及是否沿桌沿行走也是要考慮的因素。本研究經由模糊及可拓理
論以推論撞球機器人的相應對策，建立一個優良的控制器。實驗顯示，在多數阻礙
球局中可擊出有效的顆星球，配合團隊之前的相關研究，可建立一個更具智慧的撞
球機器人系統，成效彰顯。 
  
 
 
 
 
 
 
 
 
 
98年度專題研究計畫研究成果彙整表 
計畫主持人：楊棧雲 計畫編號：98-2221-E-149-001- 
計畫名稱：安全平滑的機器人路徑規劃- 基於大邊限支向機之研究 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 0%  
研究報告/技術報告 0 1 5%  
研討會論文 0 0 0% 
篇 
 
論文著作 
專書 0 0 0%   
申請中件數 0 1 15%  專利 已獲得件數 0 0 0% 件  
件數 0 0 0% 件  
技術移轉 
權利金 0 0 0% 千元  
碩士生 0 1 15%  
博士生 0 0 0%  
博士後研究員 0 0 0%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 0% 
人次 
 
期刊論文 0 1 50%  
研究報告/技術報告 0 0 0%  
研討會論文 0 1 15% 
篇 
 
論文著作 
專書 0 0 0% 章/本  
申請中件數 0 0 0%  專利 已獲得件數 0 0 0% 件  
件數 0 0 0% 件  
技術移轉 
權利金 0 0 0% 千元  
碩士生 0 0 0%  
博士生 0 0 0%  
博士後研究員 0 0 0%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 0% 
人次 
 
 
