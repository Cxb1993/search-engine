息。 
 
本子計畫即針對數位內容傳輸需求，建立一個完整、合適的全域無礙IP 多媒
體數位內容之傳送網路及傳播平台。依據數位內容應用涵蓋範圍，分為短距離、區
域網路以及行動網路，運用及整合不同的傳輸技術，建立無縫隙的寬頻無線網路，
配合服務平台播放機制，以提供適時、適地、無所不在的數位化典藏內容服務。主
要工作項目包含： 
 
․All-IP Network 為基礎的多媒體重置網路傳輸平台：針對全IP 網路
(All-IPNetwork) 下， 多媒體內容傳送的需要，提出一套多媒體串流多播傳
輸平台。藉由此平台，提供使用者收看預錄式的多媒體節目，或是直播式
影音訊號，並結合動態的網路資源監控，確保多媒體播放的順暢(Smooth)。 
․BWA 無線寬頻接取 MMS多媒體簡訊應用服務：多媒體簡訊服務使得行動
設備(mobile device)間及應用(application)到行動設備的簡訊傳輸，具有全面
多樣性的內容，包括文字、圖片、聲音、影像。為了在現有的WiMAX/WLAN 
系統，提供BWA行動寬頻網路的應用，設計並發展實現全範圍且內容豐富
的U-Taiwan多媒體簡訊服務系統。 
 
1.2 本年度達成之目標 
 
賡續前兩年的研究成果，第三年（95/08/01~96/07/31）主要達成下列工作目標： 
 
․繼續擴充多媒體數位內容平台於無線網路環境下的 QoS 機制，完成以
IEEE802.21 MIH-based 的多媒體數位內容服務機制。 
․在無線感應網路，以 FPP (Finite projective plan)的理論為基礎，設計
FPP-MAC 通訊協定，有效降低 idle listening 的時間來實現省能目的，同
時兼顧端對端的延遲時間。 
․在 WiMAX/WLAN 多媒體簡訊服務雛形系統之下，實現多項 MMS 應用
服務，包括包括：影音即時分享、多媒體行銷宣傳、多媒體簡訊電子報、
行動寫真分享、學校/家庭聯絡簿、政府電子服務發佈、及數位行動檢舉
通報等項目。 
 
1.3 論文發表 
 
本研發團隊於第三年共計發表SCI期刊論文5篇【1-5】。 
 
2. IEEE 802.21 MIH-based 的多媒體重置網路傳輸平台： 
 
重點工作主要是針對，在異質無線寬頻網路環境中，部分層次的通訊協定及中介
軟體(Middleware)進行開發或提昇效能，俾利於提供高品質、無縫換手的多媒體資料
傳輸，支援各項服務，包括：網路語音(VoIP)、網路電視(IPTV)、影音分享、MMS
 
圖 1. MIH-based 的多媒體重置網路傳輸平台架構 
 
3. FPP-MAC: 以FPP為基礎的無線感應網路MAC通訊協定 
 
   無線感應網路 (WSN, Wireless Sensor Networks)的應用快速成長，但有別於其他
網路技術，WSN節點的電池，受限於佈置的環境及成本考量，甚少更新。因此，如
何省能及延長WSN的生命週期，便成為重要的研究課題之一。 
 
一般而言，耗能的主要來源不在於計算，而在於訊息的傳遞，因此本計劃的工作項
目之一就是依據 finite projective plan (FPP)的理論，設計一個MAC層通訊協定， 
來有效降低idle listening的時間，進而節省電池的耗能，延長WSN的生命週期。 
 
MAC層通訊協定的設計，主要分為reservation-based及contention-based。前者主要是
以TDMA或LEACH為代表，雖然簡單，但比較困難依據網路即時狀況，動態調整時
間槽的配置，以致於網路的擴充性能較差。相對而言，contention-based的通訊協定，
以IEEE 802.11為例，比較容易依照網路的特性，動態調整frame的duty-cycle，來有
效降低能源的浪費。 
 
過去幾年，有Sensor-MAC (S-MAC)的提出，雖然與802.11比較，S-MAC耗能較少，
但是造成end-to-end delay的增加。因此，後續有Timeout-MAC (T-MAC)以及
Pattern-MAC (P-MAC)的提出，改進S-MAC的缺點。本計畫則是以FPP理論為基礎，
依據當時網路的狀況，動態調整idle listening的時間來減少energy consumption，同時
放寬FPP的部分條件，希望能夠兼顧end-to-end的latency。 
 
經過模擬的結果，包括平均耗能(圖2、圖3及圖6)及平均延遲(圖4、圖5及圖7)，顯示
FPP-MAC不管在energy consumption或end-to-end latency皆優於S-MAC、T-MAC、及
P-MAC，尤其是在heavy traffic或是dense network的情況下，更能夠顯示FPP-MAC的
       
    圖5 Average end-to-end delay with high packet inter-arrival rates 
 
       
    圖6 Average energy consumption with different duty cycles 
 
       
    圖7 Average end-to-end delay with different duty cycles 
 
4. WiMAX/WLAN 寬頻無線網路多媒體簡訊服務 
DWDM Optical Mesh Networks”, to appear at Information Sciences: An 
International Journal. (SCI) 
2. I-Shyan Hwang, Ren-Yuan Cheng and Wang-Dauh Tseng, “A Novel Dynamic 
Multiple Rings-based Local Restoration for One-to-Multipoint Multicast 
Traffic in WDM Mesh Networks”, Photonic Network Communications, Vol. 14, 
No. 1, Aug. 2007, pp. 23-33. (SCI) 
3. I-Shyan Hwang, I-Feng Huang and Hung-Jing Shie, “Pragmatic Segment 
Protection Employing Distributed Multiple-ring Search in WDM Mesh 
Networks”, Journal of Information Science and Engineering, Vol. 23, No. 2, 
Mar. 2007, pp. 649-660. (SCI) 
4. I-Shyan Hwang, San-Nan Lee and Cheng-Jen Liang, “A QoS-based HRWA 
Multicast Scheme with Resource Constraint on WDM Mesh Networks”, 
Photonic Network Communications, Vol. 13, No. 1, Jan. 2007, pp. 1-12. (SCI) 
5. Pei-Chann Chang, Chen-Hao Liu, and K. Robert Lai, 2007, “A fuzzy 
case-based reasoning model for sales forecasting in print circuit board 
industries,” Expert Systems with Applications, Available online (SCI). 
 
Application of Agent Negotiation in Supporting Constructive
Learning
K. Robert Lai
Yuan Ze University
Department of Computer Science
& Engineering
135 Yuan-Tung Road, Chung-Li
Taiwan 32026 R.O.C.
krlai@cs.yzu.edu.tw
Chung Hsien Lan
Nanya Institute of Technology
Department of Information Management
414, Sec.3, Jhongshan E. Road, Chung-Li
Taiwan 32091 R.O.C.
chlan@nanya.edu.tw
Bo-Rue Kao
Yuan Ze University
Department of Computer Science
& Engineering
135 Yuan-Tung Road, Chung-Li
Taiwan 32026 R.O.C.
s909402@mail.yzu.edu.tw
Abstract: This study presents a novel model that integrates agent negotiation into constructive learning for enhanc-
ing interaction efficiency between learner and instructor and promoting learning motivation. A constraint-based
agent negotiation mechanism is employed to support a web-based learning environment in which instructor can
perceive learners’ feedback and receive suggestion about pedagogical strategies. Experimental results suggested
that the proposed methodology was able to improve learning effectiveness and learners also believed that the sys-
tem enhanced their learning motivation and increased the flexibility of course learning.
Key–Words: Intelligent systems in education, autonomous agents, constructive learning, agent negotiation, fuzzy
constraints.
1 Introduction
Learning is an active and constructive process of
recognition in which learners construct knowledge
from physical experiences and interaction. Effective
interaction methods, thus, could play a crucial role
in the success of a web-based learning [11]. Espe-
cially, the learners and instructors often bring different
ideas and perspectives during a learning process, and
these cognitive differences can be explored to enhance
the communications between instructors and learners.
Thus, a learning environment supporting effective in-
teraction is important mainly because the learners can
articulate their understanding and participate more ac-
tively in learning activities and the instructors can then
adjust their teaching strategy accordingly.
In a web-based learning environment, inconsis-
tency among ideas, concepts, or statements among the
learners and instructors might be negotiated to reach
a consensus. Negotiation is an interactive process that
includes competition and collaboration. It enables
instructors to realize learners’ needs and reach com-
mon consensuses in pedagogical strategy to promote
learning effectiveness. For autonomous, interaction
and flexibility, agent negotiation can play an important
role in supporting constructive learning [7]. Thus, the
main idea of this study is to develop a framework that
integrates agent negotiation to enhance the learner-
instructor interaction in a constructive learning envi-
ronment. The framework is designed with a consid-
eration of constructivism into a negotiation process to
support learning. In addition, the proposed methodol-
ogy employs a fuzzy constraint-based agent negotia-
tion mechanism to support effective interaction and to
assist all participants to achieve their expectation.
The remainder of this paper is organized as fol-
lows. Section 2 presents a concept of modeling e-
Learning as agent negotiation. Section 3 describes
constructive learning with negotiation along with a
computational model that is utilized to illustrate the
process of agent negotiation. Section 4 provides ex-
perimental results and evaluation of the questionnaire
followed by some concluding remarks in Section 5.
2 e-Learning as Agent Negotiation
e-Learning has been defined as the use of Internet
technologies to deliver a broad array of solutions that
enhance knowledge and performance of learning [16].
Instructors and learners generally spend more time
on a e-Learning course due to various course ma-
terials and flexible learning environment. Increases
on learner participation and interaction are evident as
the course progresses. Instructors are also more con-
cerned about the level of participation and interaction
with learners in a e-Learning environment [11]. In-
Proceedings of the 6th WSEAS International Conference on Applied Computer Science, Hangzhou, China, April 15-17, 2007      332
instructor and learners, the mechanism of agent ne-
gotiation is integrated into a learning environment.
It is necessary for learners to construct qualitative
models that are essential for a deep structural un-
derstanding of their own field [10]. Social construc-
tivism acknowledges that learning is a social activity
in which learners are involved in constructing consen-
sual meaning through discussions and negotiations.
During these discussions, learners can identify and
articulate their own views, exchange ideas, reorga-
nize their own views and negotiate shared meanings
[15]. Therefore, an ideal learning system should con-
sider learners’ experiences and views. In our study,
to enhance the flexibility and effectiveness in teach-
ing and learning, the mechanism of agent negotiation
that combines with constructivism is integrated into a
e-learning environment and the framework is shown
in Figure 2.
 
 Domain-specific 
knowledge 
 Experiences 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Intelligent Agent 
Learner Instructor 
Cognition 
 
Strategy 
 
 Domain-specific 
knowledge 
 Experiences 
 Activities 
 Senses 
Learning Map 
Course scheme 
 
Criteria 
(Negotiation issues) 
Figure 2: The framework of integrating agent negoti-
ation into constructive learning.
In this framework, instructor is free to construct
course scheme based on his or her domain-specific
knowledge, expectation and cognition for learners.
Through agent negotiation, instructor is able to dy-
namically realign teaching strategy to learners’ re-
sponse. When learners get the course activities, they
use criteria to evaluate pedagogical strategy and pro-
vide a feedback to instructor. In agent negotiation,
agents that represent learners choose a pedagogical
strategy from feasible alternatives in accordance with
the instructor’s knowledge and beliefs about learners’
intention and are responsible for offering their feed-
back about the course and their preference. During
the negotiation of pedagogical strategy, agents may
switch to another pedagogical approach with different
preference level by a concession strategy.
3.2 Negotiation Process and Computational
Model
Various negotiation mechanisms have been explored
from game theory [17], Bayesian [18], evolutionary
computation [13], to fuzzy constraint-based approach
[9]. Among them, fuzzy constraints can serve as a
natural means of modeling an agent’s requirements
involving imprecision and human concept over sin-
gle issues or combinations of multiple issues. They
are also appropriate for modeling trade-off between
different issues, and capturing the process by which
an agent relaxes its constraints to reach a partially
satisfactory deal. Therefore, the core computational
model in this study focuses on using fuzzy constraints
to represent personal interests and applies negotia-
tion strategies in making concessions between differ-
ent possible values for negotiation issues.
In what follows, we describe how to infer the pro-
cess of agent negotiation relies on fuzzy constraints in
supporting constructive learning. Following Figures
2, the negotiation process and its computational model
are described as follows.
Providing Course Schema
• S is a set of course units designed by the instruc-
tor, Si is a course unit in S and t is the number
of course units.
Initially, the instructor provides a sequence of
course units S1, .., St and requests every learner to
start with the same unit S1. After studying the initial
unit, learners evaluate the course unit to reflect their
learning effectiveness.
Evaluating Course Materials
Instructors and learners define their own fuzzy
membership functions to evaluate the effectiveness of
learning. These fuzzy membership functions for eval-
uation criteria are regarded as fuzzy constraints.
• Cp is a distributed fuzzy constraint network that
represents an agent Rp.
• ΠCp is the intent of a distributed fuzzy constraint
networkCp and represents the set of all potential
agreements for agent Rp. ΠCp is defined as
ΠCp = C¯
p
1 (T1) ∩ · · · ∩ C¯pm(Tm) (1)
where , m is the number of constraints and
Cpj (Tj) ∈ Cp, Tj is a subtuple of X and C¯pj (Tj)
is its cylindrical extension in the space X . X is
a tuple of n negotiation issues X1, . . . , Xn.
Progressing Negotiation
The process of negotiation is a series of deter-
mining how agents evaluate and generate alternatives
Proceedings of the 6th WSEAS International Conference on Applied Computer Science, Hangzhou, China, April 15-17, 2007      334
4 Experiment and Results
This experiment examined the usability and effective-
ness of a computational model that emphasizes con-
structive learning and critical thinking. 73 college stu-
dents learning a software certification course were se-
lected as study subjects. These students were divided
into the experimental group (n1 = 38) and the control
group (n2 = 35). They were assigned to undergo a
certification examination before the end of the course.
The experimental group participated the learning ac-
tivities using the proposed model, while the control
group represented traditional ways of studying and
reading for examination. The experimental process
consisted of the following six steps.
Step1: Providing Course Scheme
The instructor constructed course schema accord-
ing to his domain-specific knowledge and experi-
ences. There were two parts (Part A and B) containing
ten units (Unit A-1, A-2,. . . A-5 and B-1, B-2,. . . B-5)
in this course. Each unit was assessed the appropri-
ateness of various stages using fuzzy constraints. The
control group followed the fixed course scheme (from
A-3 to B-4) to study. The experimental group acted
according to the following steps.
Step2: Evaluating Course Materials
Students first learned the course unit (A-3). After
each student studied the course unit, he defined fuzzy
constraints to evaluate the unit according to the learn-
ing perception.
Step3: Negotiating and Adjusting Pedagogical Ac-
tivities
According to fuzzy constraints provided by the
instructor and students, agents adopted the concession
strategy to commence negotiating. When the negoti-
ation reached an agreement, the system automatically
provided the next appropriate unit for individual stu-
dent. The negotiation mechanism assisted the instruc-
tor and each student to organize the learning maps.
The statistical result presented that the average of
course units provided to students to learn is 5.21 in the
experimental group, while the number of course units
is 2 for the control group. The results also indicate
that most students in the experiment group considered
themselves can not comprehend the first course unit.
The system then assigned more course units to these
students to enhance their learning achievement. Table
1 shows the relation between the number of course
units and learning performance.
The correlation between the number of course
units and learning performance is 0.705 (p<0.01).
Thus, a positive correlation between the number of
course units and learning performance is found. An
increase in the score of the examination appeared to
be associated with an increase in the number of course
Table 1: The learning performance for learning course
units
 
 Number of course units 
 2 3 4 5 6 7 8 9 
Average 
score 
75.2 78.3 83.2 82.5 79.3 81.1 82.0 84.1 
 
units.
Step4: Analyzing Group Performance
The instructor then gave all students an exami-
nation related to software operation. Analytical re-
sults of t-test indicated that students who participated
in constructive learning had acquired more knowledge
than students who did not. Furthermore, quantitative
scores also indicate that the learning performance in
the experimental group is better than that in the con-
trol group.
The average of the experimental group is higher
than that of the control group. A t-test analysis for
performance indicates that the performance between
the two groups was significant (Table 2).
Table 2: Performance analysis
 
Students n Mean t-value p-value 
Experimental Group 38 80.23 1.91 0.012 
Control Group 35 75.86   
Level of significanceα =0.05 
 
Step5: Evaluating Questionnaire Results
Following the experiment, students provided
feedback via a questionnaire. A 5-point Likert scale
was employed to grade responses. Questionnaire re-
sults indicate that students regarded the agent as a
satisfactory approach for flexibly assessing courses,
autonomously learning, and enhancing their learning
performance. (Mean=4.08) Although some students
considered it was complex, most students believed
that the system helped them to reflect on and improve
their learning activities. Additionally, students felt
that by relying on fuzzy membership functions and
agent negotiation, the assessment model was flexible
and easy to use.
5 Conclusion
This study has proposed a concept of integrating agent
negotiation in supporting constructive learning. It al-
lows instructors and learners to negotiate the pedagog-
ical methods and course activities during the learning
Proceedings of the 6th WSEAS International Conference on Applied Computer Science, Hangzhou, China, April 15-17, 2007      336
A Fuzzy Constraint-based Agent Negotiation With Opponent
Learning
Ting-Jung Yu
Yuan Ze University
Department of Computer Science & Engineering
135 Yuan-Tung Road, Chung-Li, Taiwan, 32026
R.O.C.
s899409@mail.yzu.edu.tw
K. Robert Lai
Yuan Ze University
Department of Computer Science & Engineering
135 Yuan-Tung Road, Chung-Li, Taiwan, 32026
R.O.C.
krlai@cs.yzu.edu.tw
Menq-Wen Lin
Ching Yun University
Department of Information Management
229, Chien-Hsin Road, Chung-Li, Taiwan, 32026
R.O.C.
linmw@cyu.edu.tw
Bo-Rue Kao
Yuan Ze University
Department of Computer Science & Engineering
135 Yuan-Tung Road, Chung-Li, Taiwan, 32026
R.O.C.
s909402@mail.yzu.edu.tw
Abstract: This work offers a general framework of fuzzy constraint-based agent negotiation with opponent learn-
ing. The proposed approach via fuzzy probability constraint clusters the opponent’s information in negotiation
process as proximate regularities to increase the efficiency on the convergence of behavior patterns, and elimi-
nates the bulk of false hypotheses or beliefs to improves the effectiveness on beliefs learning. By using fuzzy
instance method, our approach can not only reuse the prior opponent knowledge to speed up problem-solving, but
also reason the proximate regularities to acquire desirable outcomes on predicting opponent behavior. Besides,
the proposed interaction method enables the negotiating agent to adapt dynamically based on expected objectives.
Moreover, experimental results suggest that the proposed framework allowed an agent to achieve a higher reward,
fairer deal, or less cost of negotiation.
Key–Words: Intelligence systems, multi-agent systems, agent negotiation, opponent modeling, beliefs learning,
fuzzy constraints.
1 Introduction
Agents need to achieve communication and sociabil-
ity each other in a multi-agent system. In order to
successfully interact, it is necessary to endow agents
with the ability to negotiate with others. Agent nego-
tiation has been recognized as an important activity in
e-commerce and has become one of principal research
subjects. In a multi-agent system, an agent typically
has incomplete information about the preferences or
decision-making processes of other agents. To that
end, many machine learning models [6, 13] have been
proposed for predicting opponent’s beliefs. In the re-
inforcement learning model [1, 16], the agent receives
an indication of the current state of the environment
as an input in each interaction. Then, the agent per-
forms an action to generate an output and to change
the state of the environment toward a more desir-
able resulting state by providing a reward or penalty.
However, the problem of slow convergence reveals
formidable computational obstacles to develop such
a model. On the other hand, the model-based learning
[3, 7] presented an architecture to learn the models of
rival agents. The learning models are used to infer a
best-response strategy and an algorithm is specified to
elucidate an opponent’s strategy from the earlier be-
liefs of the opponent. Nevertheless, all such frame-
works assume that agents can observe the states and
actions of other agents and share common knowledge.
Then, the Bayesian learning algorithm [15, 18] manip-
ulates occurrences of interest using probability distri-
butions. The probabilistic evaluation over the set of
occurrences of interest can be summarized from the a
priori knowledge as the reference of next proposed of-
fer. Even so, it needs a large set of training examples
to converge toward a correct prediction.
The theoretical concepts and practical applica-
tions [2, 4, 11, 17] of fuzzy constraints are ready,
so fuzzy constraint not only can be used to treat im-
precise and vague information inherited from fuzzy
logic, but also can be used to adapt to a continu-
Proceedings of the 6th WSEAS International Conference on Applied Computer Science, Hangzhou, China, April 15-17, 2007      31
to accept the counteroffer along with the aggregated
satisfaction value of counteroffer by an agent. If the
aggregated satisfaction value of counteroffer is supe-
rior to the one of offer at current or next round for
agent k and the counteroffer is one of feasible propos-
als or a potential agreement in ΠU ,X,C , then agent k
will accept the counteroffer as an agreement. Other-
wise, agents will perform the negotiation until one of
agents withdraws. The following aggregated satisfac-
tion value of the solutions is defined to evaluate offers
or counteroffers.
Definition 2 Aggregated satisfaction value: Given
the value of an offer (or counteroffer) u involving a
number of issues (x1, . . . , xn), the aggregated satis-
faction value of the offer u to agent k, denoted by
Ψk (u) , can be defined as a function of the values of
satisfaction with the issues as follows:
Ψk (u) =
1
n
∑n
j=1
µCkj
(xj), (1)
where µCkj (·) is the satisfaction degree of the con-
straint Ckj of agent k over issue j.
2.2 Negotiation Strategy
In agent negotiation, a strategy explicitly represents
agent’s expectation and intent. A strategy usually con-
sists of the concession strategy and the tradeoff strat-
egy. In the concession strategy, an agent makes a con-
cession by decreasing its previously aggregated satis-
faction value to generate an offer from a certain so-
lution space. In that space, the satisfaction degrees
of the constraints associated on the solutions equal or
exceed a certain threshold of acceptability. Even if
no solution enables the preference within the proposal
space to be met, an agent can use self-relaxation to
lower gradually the threshold of acceptability and thus
generate new, feasible proposals without giving up on
any of the agent’s demand. In the tradeoff strategy, an
agent generates and develops alternative in a specific
solution space without reducing its aggregated satis-
faction value. In that space, the degrees of satisfaction
in the constraints associated with the solutions equal
or exceed a particular threshold.
3 Opponent’s Behavior Learning
with Fuzzy Constraints
To learn opponent’s beliefs, a fuzzy constraint-based
approach, including strategy identification, instance
matching and adaptive interaction, is presented as fol-
lows.
0 0.5 1
1
0.5
UsualOccasional
RegularRare
Figure 1: The membership function of fuzzy proba-
bility constraints.
3.1 Strategy Identification
In our pervious work [9], the definition of meta strat-
egy is based on the different concession scales of ag-
gregated satisfaction values at adjacent negotiation cy-
cles. That is, a strategy can be described with some
critical concession scales. Instead of using exact con-
cession value like traditional Bayesian method, we
adopt a fuzzy concession value to group proximate
paradigms for avoiding the problem of slow conver-
gence. Hence, a strategy can be conveyed by a set
of related fuzzy concession values. To recognize an
opponent’s strategy, an agent can reduce or enlarge
concession value during afterward negotiation round,
and observe the variance of following fuzzy probabil-
ity constraints.
Usual(pk
′
is Ω˜k
′
j ), (2)
which means that P (pk
′
is Ω˜k
′
j ) is usual, in which
P (·) denotes a probability; pk′ means the set of fuzzy
concession values for opponent agent k
′
; Ω˜k
′
j is the sat-
isfaction degree of identifying the jth kind of strategy
for opponent agent k
′
, “pk
′
is Ω˜k
′
j ” is a fuzzy event
and “usual” indicates a fuzzy probability. The mem-
bership functions of fuzzy probability constraints can
be denoted as Figure 1.
If an agent’s strategy always reveals regularities,
it would need many evidences to support its behavior.
Using the fuzzy probability constraint, the noisy hy-
potheses or beliefs of opponent beyond the behavior
regularities can be eliminated. When the set of fuzzy
concession values matches one of the regularities of
meta strategies within the threshold of fuzzy proba-
bility constraint, an agent may conclude the belief of
opponent’s strategy.
3.2 Fuzzy Instance Matching
An agent may filter out approximate instances with
the same belief of opponent’s strategy from historical
instances. To further match the proximate instances,
Proceedings of the 6th WSEAS International Conference on Applied Computer Science, Hangzhou, China, April 15-17, 2007      33
less than or equal to the bounded negotiation round,
Time bounded, it means that the proximate histor-
ical instances would result in the failure outcome
during the bounded round. If the negotiation re-
sult fits the fuzzy probability constraint, Usual(M t
is successful), and the predictive success round,
vST imeStep, is larger than or equal to the bounded
negotiation round, it denotes that the proximate his-
torical instances would result in the successful out-
come until the bounded round is exceeded. In lines
22 to 27, if the predictive agreement A is acceptable,
the learning mechanism Instance match(·) would
be used to match the proximate instances into the
set of match instances C from historical instances
with the current instance M t. Then, the functions
Next concession degree(·) andNext offer(·) are
applied to predict the beliefs of next concession de-
gree and next offer for the opponent agent according
to the proximate instances. Otherwise, mechanism
would report a failure message. Based on the belief of
next offer for the opponent agent, the learning mecha-
nism Adaptive interaction(·) would further adopts
flexible adaptation method to construct the set of fea-
sible offers for agent itself at (t+ 1)th round. Finally,
an agent proposes an appropriate offer to the opponent
agent until one of agents withdraws.
4 Experiments
A negotiation may often be approved by maximiz-
ing the aggregated satisfaction value, minimizing the
number of proposals exchanged and ensuring fairness.
Fairness in negotiation is the minimization of the dif-
ference between the aggregated satisfaction values of
agents, which is achieved by maximizing the product
of the aggregated satisfaction values (PASV) of the
negotiating agents. The joint aggregated satisfaction
value (JASV), defined as the sum of the aggregated
satisfaction values of negotiating parties, is used to
measure the quality of the negotiation results. The av-
erage number of proposals exchanged is calculated to
evaluate the cost of the negotiation process. There-
fore, the following experiments are probed for above
different kinds of views.
A multi-issue bargaining scenario, which consists
of one buyer and one seller, is described as follows.
• The negotiation issues are price and time.
• The intervals associated with the issues are
[1000-3000] for price and [0-10] for time. Each
party’s membership function is monotonic de-
creasing and is constructed by generating a pair
of random real numbers from the interval associ-
ated with the issues.
Table 1: The negotiation outcomes of the different ap-
proaches over various views
Bayesian FCAN
Fair-based
interaction
Selfish-based
interaction
Economic-based
interaction
Price 0.2393 0.2808 0.204 0.1908 0.2957
Time 0.4307 0.4035 0.3703 0.3607 0.4637
Price 0.1342 0.2359 0.3161 0.3317 0.2117
Time 0.2597 0.2101 0.2441 0.2532 0.1481
0.335 0.3421 0.2871 0.2757 0.3797
0.197 0.223 0.2801 0.2925 0.1799
0.532 0.5651 0.5673 0.5682 0.5596
0.066 0.0772 0.0797 0.0795 0.0665
21 20.59 22.11 22.49 19.45
33 0 0 0 4
Method
Superificial learning Opponent learning
Run 100
Seller's ASV
Buyer's ASV
Avg. Seller's ASV
Avg. Buyer's ASV
Avg. PASV
Avg. Round
Failure Case
Avg. JASV
• The buyer agent’s and the seller agent’s urgency
values are 0.1 and 0.07 respectively.
• The buyer agent employs the opponent learning
mechanism and the seller agent applies a negoti-
ation method with superficial learning heuristics.
• The party that first proposes an offer is randomly
determined.
The following experiments introduce the
Zeuthen’s negotiation strategy in [15] to make its
decision of concession based on how much it has
to lose by running into conflict at that time, and
integrate the tradeoff strategy presented by Faratin
in [5] as the Bayesian approach with superficial
learning heuristics. Our pervious work in [10], fuzzy
constraint-based agent negotiation (FCAN), applying
an undeveloped learning heuristic is also viewed as
a superficial learning. To compare the performance
of negotiation, the Bayesian learning, FCAN, and
the proposed approach run 100 experiments for each
arrangement.
The negotiation outcome in Table 1 shows that
the average ASV for the buyer agent of Bayesian
learning, FCAN, and the selfish-based interaction are
0.197, 0.223, and 0.2925 respectively. These data il-
lustrates that our approach can require a higher reward
than FCAN and Bayesian learning. Also the outcome
indicates that the tuple of average JASV and PASV
of Bayesian learning, FCAN, and fair-based interac-
tion are (0.532, 0.066), (0.5651, 0.0772), and (0.5673,
0.0797). This fact demonstrates that our approach can
obtain a fairer deal than FCAN and Bayesian learn-
ing. Furthermore, the data exhibits that the average
number of proposals exchanged of Bayesian learning,
FCAN, and economic-based interaction are 21, 20.59,
and 19.45 respectively. Such information reveals that
our approach can earn a less cost of negotiation than
FCAN and Bayesian learning. To sum up, the pro-
posed approach did allow an agent to achieve a better
reward, impartial deal, or less round of negotiation.
Proceedings of the 6th WSEAS International Conference on Applied Computer Science, Hangzhou, China, April 15-17, 2007      35
Scheduling via Agent Negotiation : A Fuzzy Constraint-based
Approach
K. Robert Lai
Yuan Ze University
Department of Computer Science
& Engineering
135 Yuan-Tung Road, Chung-Li
Taiwan 32026 R.O.C.
krlai@cs.yzu.edu.tw
Menq-Wen Lin
Ching Yun University
Department of Information Management
229, Chien-Hsin Road, Chung-Li
Taiwan, 32026 R.O.C.
linmw@cyu.edu.tw
Bo-Rue Kao
Yuan Ze University
Department of Computer Science
& Engineering
135 Yuan-Tung Road, Chung-Li
Taiwan 32026 R.O.C.
s909402@mail.yzu.edu.tw
Abstract: This work presents a general framework for modeling a distributed scheduling problem via fuzzy
constraint-based agent negotiation. Fuzzy constraints, in this way, are used not only to represent the require-
ments that jobs being scheduled must satisfy, but also to specify the possibilities prescribing to what extent the
solutions are suitable for scheduling to rank the solutions. Furthermore, fuzzy constraint-based agent negotiation
provides a systematic method to gradually relax the requirements to generate a local schedule, and then utilizes
possibility functions to select an alternative that is subject to the others’ acceptability. Each agent, who is in charge
of different aspects of the scheduling problem, not only distributively solves its problems to maximize its local ob-
jectives, but also iteratively proposes its local schedules with other agents to gradually move toward a satisfactory
and globally beneficial schedule. Experimental results suggest that the proposed approach is focused not only on
the minimization of parameters such as makespan and tardiness, but also on the economical effects to maximize
the profits of the enterprise.
Key–Words: Planning and Scheduling, Distributed Problem Solving, Multi-Agent Systems, Fuzzy Constraints.
1 Introduction
Scheduling is a process to allocate limited resources
over time to satisfy a collection of jobs. But, real-
world scheduling problems are often inherently dis-
tributed, that is, constraints and preferences of each
entity in the problem might not be accessible to
each other. Thus, two major methodologies, dis-
tributed problem solving (DPS) and multi-agent sys-
tems (MAS), have been proposed to model distributed
scheduling problems.
In DPS approaches, the task of schedule is de-
composed into a set of sub-problems and solved by the
individual entities to achieve a global interest. How-
ever, the coordination strategy and information shar-
ing in DPS are usually incorporated into an integral
part of the system [1, 13]. Thus, it does not have
the sophisticated reasoning required for social inter-
action and cannot deal with the autonomous nature of
the components.
In contrast to DPS, MAS approaches solve the
scheduling problem via autonomous agents interac-
tion to maximize their own welfare. Based on some
negotiation strategies, agents act from their individ-
ual perspectives to negotiate with others to obtain a
compromise schedule. Yet they are not assumed to
achieve the common goal cooperatively. Several ne-
gotiation models of MAS have been proposed for the
scheduling problems [3, 10]. Among them, contract
net protocol, a commonly used negotiation model, in-
volves a process of task announcement, bidding, and
awarding to establish a deal among agents [12]. Rely-
ing on this protocol, several bidding-based or auction-
based approaches have demonstrated a flexible man-
ner for resources selection and allocation [4, 8, 10].
While these negotiation models are proved to be ef-
fective and easy to implement, a drawback of these
approaches is myopic, i.e. the choice of a resource is
usually based on a local evaluation, and it could fail to
support for more complex and less structured negoti-
ations.
This paper presents a general framework for
modeling a distributed scheduling problem via fuzzy
constraint-based agent negotiation. Fuzzy constraints,
in this way, are used not only to represent the re-
quirements that jobs being scheduled must satisfy, but
also to specify the possibilities prescribing to what ex-
tent the solutions are suitable for scheduling to rank
the solutions [2, 5]. Furthermore, fuzzy constraint-
based agent negotiation provides a systematic method
Proceedings of the 6th WSEAS International Conference on Applied Computer Science, Hangzhou, China, April 15-17, 2007      37
Creq represents the required resource constraint
which defines the set of possible resources are
required by an activity. Creq(ij,H) implies that
activity aij can be performed by a set of alterna-
tive resources Hij . For each candidate resource
Rh ∈ Hij is held by resource agent kRh .
Creq(ij,H): rij = Rh, Rh ∈ Hij (3)
Definition 3 (Fuzzy constraint network for a re-
source agent) : A resource agent kRh , which holds
resource Rh and concerns with processing time,
capacity, and problem-specific constraints, can be
represented as a fuzzy constraint network Nk
R
h =
(UkRh ,XkRh ,CkRh ), where
• XkRh is a tuple of the objects of resource agent
kRh , including start time shj , processing time phj ,
and end time ehj associated to activity ajh which
requires resource Rh.
• CkRh is a set of the fuzzy constraints of resource
agent kRh , in which
Cpro represents processing time constraint
which defines the possible duration of processing
time for an activity. Durations are determined by
tuning the machine or allocating the amount of
resources. Cpro(hj) implies that the processing
time phj of activity ahj are bounded by possi-
ble duration P˜hj which is represented as a fuzzy
number.
Cpre(hj): ehj = shj + phj , phj ∈ P˜hj (4)
Ccap represents the capacity constraint which
limits the available capacity of resource over
time. Ccap(hj,hq) implies that the processing
times of activities ahj and ahq which are per-
formed on the resource Rh, cannot overlap on
times.
Ccap(hj,hq): shj ≥ ehq or shq ≥ ehj (5)
When planning a schedule, both the job agents
and resource agents govern activity by maintaining
the consistency of inter-constraints Cjr(ijh), which
requires that activity aijh, performed by a resource
agent kRh , has to start and finish within a specified time
window [sij , eij] assigned by a job agent kJi , where
Cjr(ijh): shj ≥ sij and ehj ≤ eij (6)
For evaluating and find more satisfactory sched-
ules, the aggregated satisfaction value of the local
schedule is defined as follows.
Definition 4 Given an local schedule U involving a
number of objects (x1, . . . , xn), the aggregated satis-
faction value of an local schedule U to agent k, de-
noted by Ψk (U) , can be defined as a function of the
values of satisfaction with the objects as follows:
Ψk (U) =
1
n
∑n
j=1
µCkj
(xj), (7)
where µCkj (·) is the satisfaction degree of the con-
straint Ckj of agent k over objects j.
Ψk (U) can be viewed as a constraint among the
objects to represent the preference over the combina-
tion of objects, and determine whether to accept or
reschedule conflicting events. Thus, Ψk (U) is used
by agent k to make trade-offs among objects for local
schedules, and also regarded as an objective function
to measure the quality of the local schedule U pro-
duced by the agent k.
For each job and resource agent, which is model-
ing as fuzzy constraint satisfaction problem (FCSP),
the local schedule U is sequencing of activities with
minimizing violation degrees of constraint satisfying.
For solving FCSP to generate the feasible local sched-
ules Bku for each agent, a branch and bound algorithm
is adopted. Pruning will occur when constraints vio-
lated degree of partial sequencing u is lower than the
α-cut. And only the local schedule U which satisfac-
tion degree is greater than or equal to threshold Ψkth
should be selected into Bku.
However, maintaining the consistency of activ-
ities by job agents may incur constraint violations
for resource agents and vice-versa. Thus, negotia-
tion mechanism is employed to resolve the conflicts
among the agents. Yet, how does the agent negoti-
ate with other agents to decide its local scheduling so-
lution to reach an agreement that benefits all agents
with a high satisfaction degree of fuzzy constraints,
and move toward the deal more quickly?
To that end, the negotiation strategies are adopted
by agents to determine the negotiation process in
scheduling. These strategies determine how agents
evaluate and generate local schedules to reach an
agreement that is most in their self-interest or per-
form global goals. Agents exchange local schedules
throughout the negotiation according to their own ne-
gotiation strategies. Whenever an local schedule is not
acceptable by other agents, they make counter-offers
by making concessions or by finding new alternatives
to move toward an agreement. Hence, a concession
strategy is presented, and a trade-off strategy is pro-
posed to find alternatives.
In a scheduling process, agents employ the con-
cession strategy to compromise their private schedules
Proceedings of the 6th WSEAS International Conference on Applied Computer Science, Hangzhou, China, April 15-17, 2007      39
kC
01 i = 1;  1.0; 1.0;Deal False; Failure False;
02 repeat
03   if Receive "Tell(U',K',k)" then
04      if (U') (U) and (U') then
05         Deal True;
06      else
07         ;
08         while
k k
th i
k k k
i
k
nPS
D
P D
<   m m
< t < t
m
mM
(True)
09             if {} then
10                 U* _ ( , );
11                 if U* {} then
12                     exit; end if;
13             else
14                 if Chk_com( ) = True
k
i
k
i
k
k
Sel offer
D
D
z
m
z
u
u
B
B M
M  then
15                     ;
16                     LocalSch( , , U', ); end if;
17                 if Chk_tra( ) = True then
18                     LocalSch( , , U', );
k
i
k
i
k k
th th
k k k
th i
k k k
th i
r
D
D
D
D
<  < 
 < 
 < 
u
u
B
M
B
1
end if;
19                 if {} then
20                     ;  
21                     if  then
22                         Failure True;  
23                         exit; end if; end if;
2
k
i
k
k k
i i
kk
i
D
D D
D G

 
m

m
u
B
kC
4         end while; 
25         if (U') (U*) and (U') then
26             Deal True;
27         else
28             Tell(U*,K,K');end if;end if;
29 until Deal = True or Failure = True;
k k k
i
P D< t < t
m
Figure 1: Agent behavior for scheduling.
The process of each agent’s behavior for scheduling
is shown in Fig. 1.
Given the local schedule (time interval of activi-
ties) U′ = {uk1 , ...,ukJ} from agents K ′, each agent
k find the solution concurrently and independently for
obtaining the feasible solution. Using Definition 8,
a local schedule U∗ = {u∗k1 , ...,u∗kJ} would be se-
lected from the feasible schedules Bku and proposed
to the corresponding agents K ′ (in line 10). To ensure
that the next local schedule solution U∗ is better than
the previous solution U for gradually converge, the
constraint Θk (U′,U∗) > Θk (U′,U) has to be satis-
fied. If no solution found (in lines 13 to 23), agent k
will relax the constraint to the next acceptable thresh-
old Ψki+1 to create a new feasible solution space B
k
u
(Bku = C
k
u, in lines 14 to 16) by concession strategy
(Definition 5); or will create a new alternative solu-
tion space Bku (B
k
u = T
k
u, in lines 17 and 18) by
trade-off strategy (Definition 6). Solution space Bku
is obtained from LocalSch which adopt a branch and
bound algorithm. Strategies will be decided along the
meta strategy M of agent k (in line 7). If agent k faces
no feasible proposal that matches the expected satis-
faction value at the threshold αki , with the capability
of self-relaxation, the agent lowers its threshold of ac-
ceptability to the next threshold αki+1 until it generates
an expected offer U∗ or the threshold is less than δk
(in line 19 or 23) in which case the negotiation fails
and terminates.
4 Experiments
In what follows, we conduct several experiments to
compare the effectiveness of our model with contract
net protocol-based negotiation (CNP), extended con-
tract net protocol negotiation (ECNP), and a well-
known priority rule, longest processing time (LPT)
[4, 11]. The manufacturing problem composed of
five shops, each equipped with predefined resource
and processing time is deterministic. The number of
orders (jobs) is varied from 5 to 15 to examine the
effects of the conflicts which arise between the de-
mands of orders and the production capacities in the
resources. Results are averaged over 100 different
randomly generated data sets in which consist of the
requirements from orders, including the unit price and
delivery date. For simplicity, all agents employ a fixed
concession strategy with 0.1 urgency value.
5 6 7 8 9 10 11 12 13 14 15
0.35
0.4
0.45
0.5
0.55
0.6
0.65
0.7
0.75
0.8
0.85
Number of Orders
Cu
sto
me
r s
ati
sfa
cti
on
 of
 de
liv
ery
 da
te
5 6 7 8 9 10 11 12 13 14 15
20
25
30
35
40
45
50
55
60
65
70
Pe
rfo
rm
an
ce
 of
 sc
he
du
lin
g s
olu
tio
n (
ma
kes
pan
)
Number of Orders
LPT
CNP
ECNP
FCAN
LPT
CNP
ECNP
FCAN
(a) Performance of scheduling solution (makespan) (b) Customer satisfaction of delivery date
Figure 2: Performance comparison in makespan and
customer satisfaction of delivery date.
In the experiment, the proposed approach along
with LPT, CNP, and ECNP approaches are evaluated
by the scheduling performance and customer satisfac-
tion. We first evaluate the minimize makespan and
maximize customer satisfaction of delivery date when
the cost is limited, and the results are shown in Fig. 2.
On the other hand, Figure 3 illustrates the results of
an experiment to balance the profit and customer sat-
isfaction when minimizing the production cost. Both
in Figures 2 and 3 show that LPT and CNP have infe-
rior performance and higher disturbance in all criteria
when number of orders (demand conflicts) is increas-
ing. Through iterative bidding, ECNP is more aware
about resource contention and performs better than
LPT and CNP. However, these approaches with local
decision cannot guarantee the overall system perfor-
Proceedings of the 6th WSEAS International Conference on Applied Computer Science, Hangzhou, China, April 15-17, 2007      41
