consideration of runtime system, we conduct an 
adaptive migration policy to approach the dynamic 
resource allocation.  Experimental results 
demonstrate that the proposed algorithms improve the 
IO access and reduce the IO response time with 
effectiveness.  Using our work, a heterogeneous 
storage system can maximize the benefit of a SSD on 
performance and the benefit of a HDD on capacity. 
英文關鍵詞： Cloud Computing, Storage Cloud, Storage 
Virtualization, Heterogeneity, Solid-State Drive 
(SSD) 
 
I 
 
中文摘要 
 
儲存虛擬化是儲存資源的抽象化呈現方式，能將多個實體儲存設備抽象化成虛擬的儲存資源，藉
由儲存虛擬化的技術可屏蔽底層異質性儲存設備的複雜度，達到透明化的整合存取方式以提供儲存即
服務的雲端運算環境。本計畫的主要研究內容是研發一套適用於大規模儲存設備的儲存虛擬化技術以
實現儲存雲的環境，今年的主要研究成果是完成支援區塊層級的異質儲存系統，並研發儲存資源的分
層管理機制。對此，本計畫在 Linux 系統中研發的技術能對實體區塊層級的儲存設備(如 HDD 與 SSD)
進行虛擬化，可提供跨機器的儲存虛擬化環境。在此環境中，異質儲存設備的分層管理機制主要根據
三項指標來計算高效率的資源配置方式：IO 存取特性、硬碟存取特性以及 IO 存取頻率。此外，考量
系統運行中的使用情況，研究可適性的資料搬遷機制來達到動態資源配置的目的，並透過實驗證明所
提出的演算法能夠有效的改善 IO 存取與降低回應時間。基於本計畫的研究成果，異質儲存系統可在
SSD 的高性能以及 HDD 的高容量特性中取得共存的最大效益。 
 
關鍵詞：雲端運算、儲存雲、儲存虛擬化、異質性、固態硬碟 
 
III 
 
目錄 
 
中文摘要............................................................................................................................................................... I 
Abstract ................................................................................................................................................................ II 
目錄.................................................................................................................................................................... III 
一、 前言 ............................................................................................................................................................ 1 
二、 研究目的 .................................................................................................................................................... 1 
三、 文獻探討 .................................................................................................................................................... 1 
四、 研究方法與執行進度 ................................................................................................................................ 2 
五、 結果與討論 ................................................................................................................................................ 6 
參考文獻.............................................................................................................................................................. 6 
 
 
 
2 
 
源。因此我們採用 Host-based 的實作方式來串起單一台伺服器上的多個儲存設備，並能整合多台
伺服器上的儲存資源，藉此來實作出一可動態配置的虛擬磁碟儲存池系統。 
Host-based 的方法是透過軟體的方式，將儲存虛擬化的相關功能實作在 device driver 與 OS 的
I/O module 之間，透過攔截 OS 對底層所下的 I/O request 來做到虛擬化的功能。這種軟體的做法很
多 OS 都有支援，如 Linux 作業系統的 Logical Volume Manager (LVM) [5]或是 Windows 作業系統的
Logical Disk Manager (LDM) [6]都是直接透過 kernel 來支援儲存虛擬化的技術。基於伺服器做法的
好處是不需要額外的硬體來支援虛擬化的實現，而且基本上，任何 OS 支援的儲存設備都可以拿來
當作虛擬化的實體儲存媒體，整體實作上也比較簡單，只要管好上層 OS 的 I/O 指令到底層 device 
driver 的對映就好了。然而缺點是，這種做法通常只能管到一台伺服器中的單個或是多個儲存設
備，所以其容錯的能力只能是多個儲存設備壞一個可以繼續服務，若是整台機器掛了就無法繼續
提供服務。此外，Host-based 的軟體是相依於不同的作業系統，因為要替不同的 OS 來實作不同的
儲存虛擬化軟體。 
相關的 Host-based 方法，最廣泛被使用的是 LVM 技術。LVM 能在單一系統中對實體磁碟作
虛擬化儲存管理系統，透過 Physical Volume (PV)、Volume Group (VG)以及 Logical Volume (LV)的
分層管理，能提供單一伺服器內虛擬磁碟資源的創建、配置、調整等功能。然而 LVM 所能管理的
儲存設備規模有限，不適用在大規模的儲存設備環境中，尤其是像雲端運算中的儲存設備是分散
在不同伺服器上的儲存資源。Petal [7]是一個適用於儲存網路環境的儲存設備管理系統，採用分散
式的區塊設備管理方式來進行虛擬化，透過 ATM 網路架構連結伺服器上的 Petal Server 形成一較
大的虛擬儲存池，並實現快照與副本功能來維護檔案資料，但由於支援的系統環境比較特殊，因
此應用的環境不如 LVM 管理系統廣泛。Network Block Device (NBD) [8]是一種能夠將遠端的儲存
設備作為本地端 block device 使用的技術，透過 TCP 的方式，client 可以連線到 server 端，存取遠
端的儲存空間。NBD server 是執行在 user-space 的程式，透過檔案系統的 IO 存取底層的儲存資源，
因此，透過此技術掛載的儲存空間，較不適合拿來做為 root 檔案系統，也需要考量因彼此互相掛
載而發生的 deadlock，此外，儲存空間的動態調度較不靈活，資源的可彈性將有所限制。 
另一方面，由於雲端環境的異質儲存設備特性，本計畫除了儲存虛擬化技術的研發之外，另
一項重點研究是探討 SSD 與一般 HDD 共存的分層管理機制。相關論文中，大多主張利用 SSD 作
為快取能夠有效加快 IO 存取，但有研究[9]指出，SSD 在 random write 的存取行為中，效能比一般
的 HDD 還要差。相關的研究如 HeteroDrive [9]和 I-CASH [10]也陸續提出共存的方法，並能有效地
取得其中的均衡機制，甚至延長 SSD 的生命週期[11]。然而，這些研究主要探討一台機器內的儲
存設備，鮮少針對資料的價值或是跨台的異質儲存系統進行探討。 
由上述可知，目前相關的 block-level 技術仍有待探討的空間，鑑於此，本計畫研發一套
Host-based 儲存虛擬化管理系統，針對跨機器的異質儲存設備進行虛擬化，並對於虛擬儲存空間進
行資源的分層管理，針對實際使用狀況如 IO 特性、儲存設備的性能以及資料的價值來進行虛擬儲
存資源的動態調度研究與探討。 
四、 研究方法與執行進度 
在本計畫中，由於所牽涉的操作情境大多屬於系統層級的資源調度範疇，因此，大部分的系
統雛型開發都將聚焦於 kernel space 中進行模組撰寫，以延伸 Linux 系統對儲存設備的管理功能。
本年度的研究項目主要可分為兩大部分：SSD 儲存設備的虛擬化，以及虛擬資源的分層管理機制。
整體系統的概觀圖，如圖一所示。其中實體儲存設備包含一般硬碟 HDD、固態硬碟 SSD 以及透過
iSCSI [12]連結的遠端硬碟，在此複雜的異質儲存系統中，可讓上層應用（如檔案系統或一般使用
4 
 
此外，可根據實際運作的情況與需求，動態的調整虛擬儲存資源內的實體儲存空間以提高儲
存設備的使用效率。為達此目的，本項目主要可區分為兩大部分：監控模型與搬遷演算法。
對於異質性的儲存環境，我們首先監控每個請求的存取特徵以及區塊被存取的使用情況，並
根據不同儲存設備的特性研究有效的區塊搬遷演算法，藉以動態地分配存取區塊與適當的儲
存資源。整體系統架構如圖二所示，茲將主要的研究方法說明如下。 
 監控模型 
監控模型的目的主要是針對資料區塊與虛擬資源空間的對映，找出最合適的資
源配置方法。被紀錄的類型主要有兩種，其一是區塊存取的頻率，頻率越高者，越
需要被快速的取得資料；其二是異質儲存設備的硬體特性，主要考量 HDD、SSD 以
及跨網路的 iSCSI。根據此監控的類型，可以推導出一個數學模型來評估區塊存取
頻率與硬體特性之間的影響關係，目標在於提高此分數來達到最大效益的資源配
置，藉以降低整體虛擬資源的存取回應時間。 
  搬遷演算法 
基於監控資訊所評估出的價值，將會驅動系統是否需要進行資料搬移的動作。
本項目針對系統的狀態提出兩種搬遷的機制，其概念如圖三所示，主要精神都是將
頻繁被存取的區塊，搬移到 SSD 以加快存取的回應時間。但當系統正處於忙碌狀態
時，需要採用線上交換的機制來達到即時的動態配置；當系統處於閒置狀態時，則
採用大幅重新配置的機制來達到更佳的資源分配。 
 
圖二、異質儲存環境之分層管理架構圖 
6 
 
五、 結果與討論 
本計畫在今年度已完成兩大研究目標：支援 SSD 儲存設備的虛擬化雛型系統，以及異質儲存
系統的分層管理機制。針對第一部分，本年度研發相關的關鍵元件可對實體 SSD 儲存設備進行虛
擬化，提供一單位內的儲存虛擬化環境，並可依照不同的使用請求配置所需的虛擬儲存資源，並
且利用攔截 IO 要求然後重新導向的機制，完成實體資源與虛擬資源之間的 IO 操作動作，透過虛
擬儲存資源的管理，可提供上層對於虛擬資源的存取與調度請求，同時也保證了上層應用在使用
虛擬儲存資源上的通透性，並有助於第二部分的分層管理機制研究。另一方面，針對異質儲存設
備的環境，本計畫進而探討分層管理機制的方法，透過實驗觀察出不同的存取特性與不同的儲存
設備之間存在某種適當的配置方式。基於此觀察所得到的結果，進一步建構一套數學模型來適用
異質儲存設備的資源配置問題，可根據三項指標：IO 存取特性、硬碟存取特性以及 IO 存取頻率，
來計算最大效益的資源配置方式。此外，考量系統運行中的使用情況，研究可適性的資料搬遷機
制來達到動態資源配置的目的，並透過實驗證明所提出的演算法能夠有效的降低 IO 存取的回應時
間，相關研究成果也投稿至國際會議 CloudCom 2012 並已被接受且即將發表。 
參考文獻 
[1] M. Armbrust, A. Fox, R. Griffith, A. D. Joseph, R. H. Katz, A. Konwinski, G. Lee, D. A. Patterson, 
A. Rabkin, I. Stoica, and M. Zaharia, “Above the Clouds: A Berkeley View of Cloud Computing,” 
EECS Department, University of California, Berkeley UCB/EECS-2009-28, February 10 2009. 
[2] B. Hayes, “Cloud Computing,” Communications of the ACM, vol. 51, pp. 9-11, 2008. 
[3] P. M. Chen, E. K. Lee, G. A. Gibson, R. H. Katz, and D. A. Patterson, “RAID: High-performance, 
reliable secondary storage,” ACM Computing Surveys, 26(2), pp. 145-185, 1994. 
[4] D. Patterson, G. Gibson, and R. Katz, “A Case for Redundant Arrays of Inexpensive Disks (RAID),” 
In Proceedings of the ACM SIGMOD International Conference on the Management of Data, pp. 
109–116, 1988. 
[5] RedHat: Logical Volume Manager, http://sources.redhat.com/lvm/, 2005. 
[6] Logical Disk Manager, http://en.wikipedia.org/wiki/Logical_Disk_Manager.  
[7] E. Lee and C. Thekkath, “Petal: Distributed virtual disks,” In Proceedings of the ACM 7th 
International Conference on Architectural Support for Programming Languages and Operating 
Systems (ASPLOS) (Cambridge, Mass., Oct). ACM Press, New York, 1996, 84–92. 
[8] Network Block Device, http://nbd.sourceforge.net/.  
[9] Sang-Hoon Kim, Dawoon Jung, Jin-Soo Kim and Seungryol Maeng. “HeteroDrive: Reshaping the 
Storage Access Pattern of OLTP Workload Using SSD,” International Workshop on Software 
Support for Portable Storage (IWSSPS), 2009, pp. 13–17. 
[10] Jin Ren and Qing Yang. “I-CASH: Intelligently Coupled Array of SSD and HDD,” IEEE High 
Performance Computer Architecture (HPCA), 2011, pp. 278–289. 
[11] Gokul Soundararajan, Vijayan Prabhakaran, Mahesh Balakrishnan and Ted Wobber. “Extending 
SSD Lifetimes with Disk-Based Write Caches,” ACM USENIX conference on File and storage 
technologies (FAST), 2010, pp. 8–8. 
[12] J. Satran, et al. iSCSI (Internet SCSI), IETF draft-satran-isci-01.txt (Jul. 10, 2000); see 
www.ece.cmu.edu/~ips. 
出席國際學術會議報告 
出席人員：鍾葉青 
國立清華大學資訊工程學系  教授 
會議名稱：國際程式碼產生及最佳化會議 
一、主要任務摘要 
出席參加 2012年國際程式碼產生及最佳化會議。 
二、經過 
2012年國際程式碼產生及最佳化會議 (CGO 2012)，於 2012年 3月 31日至 4月 4
日在美國加州聖荷西舉辦。 
這次大會的 Keynote總共有 2個：“Increasing Industry Impact of Compiler Research”
和 “Hardware Software Co-design for Visual Computing”。除了參加 keynote之外，也參與
其他的會議 session。CGO 2012 會議 session 有以下幾個：Compilation，Optimization，
Parallelization，Dynamic Instrumentation, Error Detection，GPU Optimization，Profiling and 
Program Characterization，Memory Management，Program Analysis。而其中的許多 session，
都展示了目前世界上各個研究單位在程式碼產生及最佳化議題最新的研究方向以及成
果。 
三、心得 
國際程式碼產生及最佳化會議的規模年年增長，這顯示出了程式碼產生及最佳化的
重要性，同時，也顯示計算機架構相關研究的重要性，目前世界各地學者在這些方面的
研究仍然持續地在創新以及進展中。 
由於電腦硬體不斷的快速發展，以 GPU的多核心運算架構的出現，程式碼產生及最
佳化一直是很熱門的研究主題，而相關的研究應用更是不勝枚舉。今年在此研討會中出
現的相關主題包含了編譯，最佳化，平行處理，動態程式加入，錯誤偵測，GPU最佳化，
程式特徵化，記憶體管理，程式分析。其中值得注意的是，隨著 CPU 與 GPU多核心的
國科會補助計畫衍生研發成果推廣資料表
日期:2012/10/25
國科會補助計畫
計畫名稱: 儲存虛擬化(雲端計算及雲端資安技術研發)
計畫主持人: 鍾葉青
計畫編號: 100-2218-E-007-012- 學門領域: 推動計畫-資安
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
無 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
