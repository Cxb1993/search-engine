行政院國家科學委員會補助專題研究計畫 ■ 成 果 報 告   □期中進度報告 
 
最佳考慮部份欠撥之倉儲與多零售商聯合存貨策略 
 
計畫類別：■ 個別型計畫  □ 整合型計畫 
計畫編號：NSC 97－2221－E－224－030 
執行期間：97 年 08 月 01 日至  98 年 07 月 31 日 
 
計畫主持人：蘇純繒 教授 
計畫參與人員：陳桂嫻、丁秋瑤 
 
 
成果報告類型(依經費核定清單規定繳交)：■精簡報告  □完整報告 
 
本成果報告包括以下應繳交之附件： 
□赴國外出差或研習心得報告一份 
□赴大陸地區出差或研習心得報告一份 
■出席國際學術會議心得報告及發表之論文各一份 
□國際合作研究計畫國外研究報告書一份 
 
 
處理方式：除產學合作研究計畫、提升產業技術及人才培育研究計畫、
列管計畫及下列情形者外，得立即公開查詢 
          □涉及專利或其他智慧財產權，□一年□二年後可公開查詢 
          
執行單位：國立雲林科技大學工業工程與管理學系 
 
 
中   華   民   國  九十八   年   七   月   十五   日 
 
貨模式種類，主要可分為缺貨候補與銷貨損
失，缺貨候補為當顧客的需求產生時，因為缺
貨而造成無法滿足顧客的需求，此時顧客需求
會等到貨物到達時才被滿足。而銷貨損失則為
當顧客的需求無法立刻被滿足時，顧客不會等
待補貨而立即轉而向其他廠商購買來滿足需
求，即產生銷售買賣損失。 
 2
存貨控制政策對於存貨數量控制影響很
大，而存貨控制政策又可細分為下列幾種方
式：1.(s,Q)存貨系統，其執行意義是當存貨水準
低於再訂購點s時，則訂購一個固定的存貨數量
Q，此存貨政策的優點是簡單明瞭、易於使用，
但缺點對於存貨水準的變化無法立即掌握，存
貨水準不足時才訂貨會因此無法應付突然的大
量訂單，研究此存貨模式的文獻有Das(1976)、
Matheus and Gelders(2000)。2.(s,S)存貨控制系
統，其意義為當存貨庫存量低於再訂購點s時，
則訂購不固定數量使得存貨最高庫存量達到
S，與(s,Q)存貨控制系統最大不同點在於每次訂
購的數量是不固定的，也因為其為非固定訂購
數量，所以在使用上也較為複雜且難懂，但對
於存貨數量的控制績效較好(Zohurl Kabir and 
Al-Olayan, 1996)。3.(R,S)存貨控制系統，每隔R
時間單位，就訂購足夠的數量使得存貨最高庫
存量達到S，此種存貨控制方式屬於定期盤存
制，其補貨時間有固定週期。4.(R,s,S)存貨系
統，其意義為每隔一段時間R，就盤點存貨庫存
量，若是存貨水準低於再訂購點s，則訂購足夠
的產品數量，使得存貨最高庫存量達到S，這種
存貨方式也是屬於定期盤存制的一種，除了有
固定補貨週期之外，與(R,S)存貨系統不同點之
處為考慮了存貨系統的再訂購點s，此存貨控制
系統的存貨數量控制績效較其他方式好，但是
其在最佳解的求解過程也相對的複雜許多，而
此存貨系統的相關研究在Silver et al.(1998)有詳
細介紹。 
 
2.2 缺貨候補 
當儲存點的存貨庫存量消耗用盡之後，若
顧客需求繼續產生，則會因缺貨而無法滿足，
必須等到下次補貨之後才有足夠的貨撥給顧
客，此延遲交貨情形稱為缺貨候補。缺貨候補
可以分為完全欠撥與部分欠撥兩種，最早
Park(1982)的存貨模式首先考慮加入允許缺貨
的限制，其考慮在缺貨期間內的欠撥率為一個
固定比率，而之後Wee(1995)在退化性存貨模式
中加入部分欠撥的觀念，其假設在缺貨期間的
欠撥率是介於0和1之間的固定常數。除欠撥率
設定外，顧客等候廠商補貨的時間長短也會影
響其決定是否要等待欠撥，Chang and Dye(1999)
在退化性存貨模式中考慮部分欠撥，且欠撥率
與等候廠商下次補貨的時間相關。在部分欠撥
相關的研究文獻Papachristos and Skouri(2000)建
立一個退化性的存貨模式，其在存貨模式中考
慮缺貨期間的欠撥率為等候補貨時間的負指數
函數。本研究所考慮的缺貨情形是部分欠撥，
且在缺貨期間內的欠撥率為一固定常數。 
 
2.3 連續盤存制(R,Q)存貨控制系統 
過去學者對於(R,Q)存貨控制政策的研究，
Van der Laan et al.(1996)提出具有丟棄性質產品
的再製造存貨系統，其使用(R,Q)存貨策略作為
存貨控制方式。Ganeshan(1999)建構一供應鏈模
式，以最小化總成本為目標，在顧客服務水準
的限制之下，求解出其存貨模式之最佳再訂購
點與訂購數量，也就是(R,Q)的值，並且探討當
回收率改變時，對供應鏈成本的影響。Namit and 
Chen(1999)考慮一連續盤存的(R,Q)之存貨模
式，探討前置期的需求量，假設前置期需求量
服從 Gamma ),( βα 分配，藉由模擬透過給定特
殊的α 值計算出訂購週期的訂購量、缺貨機
率，其所研究的存貨模式目的是要求解出
值以使得存貨系統的總成本達到最小化。 
rQ、
 
2.4 二階層存貨模式 
多階層存貨模式最早由 Clark and Scarf 
(1960)所提出，探討序列式多階存貨問題，主要
目的為得到多階層存貨模式的最佳購買數量。
本研究探討二階層存貨系統，系統由兩個階層
所組成，第一階層為一個中央倉儲中心，第二
階層由數個零售商所組成，顧客需求會發生在
各個零售點間，中央倉儲中心負責供貨給第二
階層的各個零售點。二階存貨模式相關的文獻
可區分為： 
1. 需求型態 
過去二階層存貨模型研究假設第二階層中
的零售商其面對的顧客需求符合普瓦松分配，
Dada(1992)處理具有運輸優先順序的二階層存
貨模式，其假設零售商所面對的顧客需求符合
普瓦松分配，倉儲中心與零售商之間的運輸時
間 假 設 為 符 合 彼 此 獨 立 的 指 數 分 配 。
Axsäter(2005)針對分散式二階存貨控制，探討其
存貨控制的決策，且此文獻提出一個較簡單的
方法來計算零售商與倉儲中心的存貨成本。
Chen and Zheng(1997)所研究的二階存貨模式則
是假設其顧客需求符合 Compound Poisson。此
外大多數的文獻皆假設各零售商之間的需求為
彼此各自獨立。 
2. 連續盤存制與定期盤存制 
Chakravarty and Shtub(1986)針對二階存貨
系統加入(s,Q)存貨政策，在需求與前置時間皆
為隨機情況下，透過模擬了解安全庫存及庫存
配置系統。Chew and Johnson(1996)於二階存貨
模式中使用(s,Q)存貨模式，在顧客需求符合
Erlang 分配的假設限制下，計算推導其顧客的
服務水準。Chen and Zheng(1994、1997)分別針
對連續盤存制(s,Q)的二階存貨模式，考慮在分
散式存貨資訊以及隨機需求的限制下，推導出
其存貨系統的相關庫存成本。連續盤存制的(s,S)
存貨政策研究，Chew and Tang(1995)於二階存
貨模式中加入(s,S)存貨政策，並且計算推導出倉
儲中心其單位時間內的期望缺貨數量。
iQ ：零售商 i 的批量數 
 
iθ ：零售商 i 的欠撥率 
) , ,( iiwi SRRC ：零售商 i 每單位時間的持有、短
缺、與銷貨損失成本 
)( ww RC ：倉儲中心的每單位時間期望持有成本 
C ：每單位時間的期望總成本，亦即
 ∑+ =Ni iiwiww SRRCRC 1  , ) ,()(
ip ：零售商 i 的每單位時間的缺貨成本 
iπ ：零售商 i 的每單位時間的銷貨損失成本 
iμ ：零售商 i 每單位時間的平均需求 
iVar ：零售商 每單位時間需求之變異數 i
)( wi Lμ ：中央倉儲中心訂單的前置時間內零售商
的平均需求 i
圖 3- 2 (R,Q)存貨模式系統 )( wi LVar ：中央倉儲中心訂單的前置時間內零售
商 的需求之變異數 i  
)(, wki Lp ：中央倉儲中心訂單的前置時間內零售
商 有 個訂單的機率 i k 3.4.2 建立存貨模式 本研究存貨模式共三個部分，第一部份為
倉儲中心其前置時間內需求的平均值與變異
數，第二部分為倉儲中心的存貨與延遲情況，
第三個部分為零售商的存貨與缺貨候補情況。 
)( w
w
i Lμ ：中央倉儲中心訂單的前置時間內倉儲
中心的平均需求(由零售商 所發出的
訂單需求) 
i
)( w
w
i LVar ：中央倉儲中心訂單的前置時間內 1. 倉儲中心前置時間內需求的平均值與變異數 倉儲中心的需求之變異數(由零 當零售商向倉儲中心下訂單時，因為倉儲
中心本身有其前置時間，包括向外部供應商訂
購產品的時間以及將產品運送到零售商的運輸
時間，而在這一段前置時間內，倉儲中心的需
求是各零售商需求訂單的加總，所以在倉儲中
心前置時間內的倉儲中心總需求是首要計算的
部分，而要求得倉儲中心的需求量首先要推導
在倉儲中心前置時間內零售商 有 個訂單需求
的機率，也就是 ，假設在倉儲中心前置
時間內的需求服從常態分配，第一個訂單在需
求
i k
)(, wki Lp
x 之後產生，而 x 均勻地分佈在 區域之
間，如果倉儲中心前置時間內的需求介於
),0( iQ
iQkx )1( −+ 和 ikQx + 之間，則我們透過常態分配
標準化與相關的機率函數可以求得 個訂單需
求的機率，在常態的情況之下，倉儲中心前置
時間之內零售商的訂單個數並不會很多，因為
在常態情況之下倉儲中心的前置時間不會很
長，所以零售商的批次數量就會比較少。而把
和 加總起來就可以得到
和 ，即倉儲中心前置時間內需求的平均
值和變異數。此部分未考慮再訂購點因素，因
此模式不受再訂購點影響。 
k
)( w
w
i Lμ )( wwi LVar )( ww Lμ
)( w
w LVar
售商 所發出的訂單需求) i
)( w
w Lμ ：中央倉儲中心訂單的前置時間內倉儲
中心的總需求(零售商所發出的訂單需
求總量)，即 N  )(
1i=)：中央倉儲中心訂單的前置時間內倉儲
中心的總需求之變異數(零售商所發
出的訂單需求總量)，即  
w
w
i L∑ μ
( w
w LVar
∑
=
N
i
w
w
i LVar
1
)(
 
3.4 存貨模式 
3.4.1 系統運作之程序 
本研究之二階層存貨系統中，中央倉儲中
心負責滿足零售商的需求訂單，而第二層的零
售商面對的是顧客需求，零售商根據本身的存
貨水準選擇訂購存貨的數量和時間，當零售商
本身的存貨庫存量降至再訂購點 R 時，則零售
商會向中央倉儲中心發出批次數量為 Q 的訂
單，其訂購的貨物會在經過前置時間 單位時
間後到達零售商。如圖 3-2 所示，當存貨水準降
至再訂購點 R，A 點為發出訂單的時間，則經
過前置時間 單位時間後，在時間 B 接受到所
訂購的產品，而原本經過訂購之後的存貨水準
應為 單位，因為在接收到產品前的前置時
間內還有顧客需求，因此接收到產品之後的實
際庫存量小於 。 
iL
iL
QR +
QR +
2. 倉儲中心的存貨與延遲情況 
接下來，針對倉儲中心的存貨與延遲狀況
做成本模式的推導，我們考慮倉儲中心的某個
再訂購點 ，對於倉儲中心的存貨狀況，首先
要計算出倉儲中心的平均持有存貨水準，對於
倉儲中心延遲的部分，也要計算出零售商的訂
單在倉儲中心內的平均延遲時間及其變異數。
假設對於所有的零售商而言，延遲時間均為相
同，而在此推導階段會使用到以下的參數符
號，其定義如下： 
wR
iI ：零售商 i 的存貨水準(i=0,1,2,……N) δ ：零售商訂單在倉儲中心的延遲時間 
我們定義δ 的平均數與變異數為 δμ 以及
 4
δμμ += iLTi L                               (17) 
i
ii
i
iiiiii
i
i L
LID
L
LIDLIDLID
L
IE ⋅
⋅⋅−⋅
⋅=⎟⎟⎠
⎞
⎜⎜⎝
⎛ ⋅⋅−⋅=
−−−−−
6
)(
2
)(
6
)(
2
)(1)(
3232 θθ  (21) 
δVarVar LTi =                                (18) 
有了 和 之後，我們可以進一步推導LTiμ LTiVar
)(LTiμ 和 的值，如下所示： )(LTVari 其中 )])(
)(
()
)(
)(1
([
1
))((
)(
2
LT
LTQR
H
LT
LTR
H
Q
LT
ID
i
iii
i
ii
i
i
i σ
μ
σ
μσ −+−−+−=
−  
i
LT
ii LT μμμ =)(                             (19) 當 1=iQ 時，零售商的平均缺貨候補水準 )(LTVari =               (20) LTiiLTii VarVar 2)(μμ +
i
ii
i
iiiiii
i
i L
LID
L
LIDLIDLID
L
IE ⋅
⋅⋅−⋅
⋅=⎟⎟⎠
⎞
⎜⎜⎝
⎛ ⋅⋅−⋅=
−−−−−
6
)(
2
)(
6
)(
2
)(1)(
3232 θθ  (22) 接下來我們令 )(LTiμ 和 服從常態分
配，零售商 i的存貨位置均勻分佈在
之間，我們利用一個範圍介
於 之間的連續分配來取代原本的
分配，然後根據不同的 值我們可以得到零售
商的總缺貨數： 
)(LTVari
] ,...,2 ,1[ iiii QRRR +++
) ,1( iii QRR ++
iQ
其中 )
)(
)(1
()()(
LT
LTR
GLTID
i
ii
ii σ
μσ −+=−  
有了平均缺貨候補水準後，就可以計算出
其缺貨候補成本為 當 時 1>iQ
(23)   
6
)(
2
)(
               
6
)(
2
)(
)(
32
32
i
iii
i
iii
i
ii
i
ii
iii
L
LIDp
L
LIDp
L
LID
L
LID
pIEp
⋅
⋅⋅⋅−⋅
⋅⋅=
⎟⎟⎠
⎞
⎜⎜⎝
⎛
⋅
⋅⋅−⋅
⋅×=
−−
−−−
θ
θ
 
 )]
)(
)(
()
)(
)(1
([
1
))((
          
)
)(
)(
(
)(
1)]([
1
1)(
2
1
LT
LTQR
H
LT
LTR
H
Q
LT
dxdy
LT
LTx
LT
yRx
Q
ID
i
iii
i
ii
i
i
i
iQ
yR
i
i
i
i
i
i
σ
μ
σ
μσ
σ
μϕσ
−+−−+−=
−×∫ ∫ +−−=
∞
+
−
2
)(
)(            
)1()(            
 )1()]
)(
)(
()
)(
)(1
([
1
))((
)(
2
0
0
2
ii
ii
L
i
L
i
iii
i
ii
i
i
i
LID
LID
dttID
dtt
LT
LTQR
H
LT
LTR
H
Q
LT
Ib
i
i
⋅⋅−⋅=
⋅−×∫=
∫ ⋅−×−+−−+−=
−−
−
−
θ
θ
θσ
μ
σ
μσ
6
)(
2
)(
           
 ]
2
)(
)([           
)()(
32
0
2
0
iiii
L ii
ii
L
ii
LIDLID
dt
LID
LID
dtIBIB
i
i
⋅⋅−⋅=
∫ ⋅⋅−⋅=
∫=
−−
−−
−−
θ
θ  
其中當 時， 1>iQ
)]
)(
)(
()
)(
)(1
([
1
))((
)(
2
LT
LTQR
H
LT
LTR
H
Q
LT
ID
i
iii
i
ii
i
i
i σ
μ
σ
μσ −+−−+−=
−  
當 1=iQ 時， ))(
)(1
()()(
LT
LTR
GLTID
i
ii
ii σ
μσ −+=−  
另外一方面，因為缺貨導致銷貨損失的懲
罰成本令其為 ，則零售商的銷貨損失懲罰成
本計算如下： 
penC
i
iiii
i
i
iipen L
LIDLID
LT
Q
RC 1]}
6
)(
2
)(
[)](
2
1
{[
32
×⋅⋅−⋅−−++=
−− θμπ   (24) 
其中當 時，1>iQ
)]
)(
)(
()
)(
)(1
([
1
))((
)(
2
LT
LTQR
H
LT
LTR
H
Q
LT
ID
i
iii
i
ii
i
i
i σ
μ
σ
μσ −+−−+−=
−  
若是當 時 1=iQ
)
)(
)(1
()()(
LT
LTR
GLTID
i
ii
ii σ
μσ −+=−    
當 1=iQ 時， ))(
)(1
()()(
LT
LTR
GLTID
i
ii
ii σ
μσ −+=−  
2
)(
)(            
)1()(            
)1()
)(
)(1
()()(b
2
0
0
ii
ii
L
i
L
i
ii
ii
LID
LID
dttID
dtt
LT
LTR
GLTI
i
i
⋅⋅−⋅=
⋅−×∫=
∫ ⋅−×−+=
−−
−
−
θ
θ
θσ
μσ
6
)(
2
)(
           
 ]
2
)(
)([           
)()(
32
0
2
0
iiii
L ii
ii
L
ii
LIDLID
dt
LID
LID
dtIBIB
i
i
⋅⋅−⋅=
∫ ⋅⋅−⋅=
∫=
−−
−−
−−
θ
θ  
有了平均缺貨候補數後，我們可以進一步
推導出 的值，也就是零售商期望持有存貨
水準，如下所示： 
+)( iIE
)25(       )()(
2
1
            
)()()(
−
−+
+−++=
+=
ii
i
i
iii
IELT
Q
R
IEIEIE
μ
   
最後我們計算系統的總成本，我們將系統總成
本分成倉儲中心成本與零售商成本，而倉儲中
心的成本可表示成如下所示： 
有了零售商缺貨數之後，我們可以進一步
計算出平均缺貨候補水準： 
+= )()( wwww IEhRC                        (26) 
而零售商的成本為： 當 時，零售商的平均缺貨候補水準 1>iQ
 6
6.當參數 遞增時， 以及TC也隨之遞增；當
參數 遞減時， 、 以及TC也隨之遞減。 
3p 3R
3p wR 3R
 8
表 1 第一個 Model 敏感度分析結果 
參數 參數 wR 1R  2R  3R  TC 
0.15 0.000 4.693 8.834 26.80 32.91
0.225 0.000 4.566 8.771 26.64 32.57
0.3 0.000 4.429 8.702 21.82 27.48
0.375 0.000 4.296 8.636 26.31 31.86
θ  
0.45 0.000 4.142 8.563 26.14 31.48
0.5 0.000 4.433 8.702 21.82 27.31
0.75 0.000 4.436 8.702 21.82 27.40
1 0.000 4.429 8.702 21.82 27.48
1.25 0.000 4.433 8.704 21.82 27.57
wh  
1.5 0.000 4.431 8.701 21.81 27.66
0.5 0.000 6.083 9.757 24.92 20.53
0.75 0.000 5.202 9.176 23.23 24.51
1 0.000 4.429 8.702 21.82 27.48
1.25 0.000 3.728 8.292 20.59 30.10
ih  
1.5 0.000 3.054 7.928 19.48 32.26
2.5 0.000 0.000 8.706 21.81 24.48
3.75 0.000 3.010 8.704 21.82 26.39
5 0.000 4.429 8.702 21.82 27.48
6.25 0.000 5.326 8.715 21.82 28.25
1p  
7.5 0.000 5.971 8.703 21.82 28.83
10 0.000 4.433 6.880 21.82 25.63
15 0.000 4.434 7.995 21.82 26.75
20 0.000 4.429 8.702 21.82 27.48
25 0.000 4.430 9.214 21.82 28.03
2p  
30 0.000 4.435 9.610 21.82 28.45
5 0.000 4.433 8.703 15.83 22.08
7.5 0.000 4.434 8.703 19.60 25.37
10 0.000 4.429 8.702 21.82 27.48
12.5 0.000 4.435 8.703 23.37 29.02
3p  
15 0.000 4.431 8.702 24.55 30.22
 
4.2 第二種模型  1 >= iw QqQ ，且
以下例說明上述的模型求解過程。假設有
一個二階層存貨系統，其相關參數的數值如下： 
第一階層倉儲中心的資料為： 
倉儲中心的前置時間 1=wL  
倉儲中心的持有成本 1=wh  
倉儲中心的批量數  2=wQ
第二階層零售商的資料為： 
零售商個數  3=N
零售商1與零售商2單位時間內的平均需求
321 == μμ  
零售商3單位時間內的平均需求 63 =μ  
零售商1與零售商2單位時間內的顧客需求速
率 321 == λλ  
零售商3單位時間內的顧客需求速率 63 =λ  
零售商的前置時間  1321 === LLL
零售商1每單位時間的缺貨成本  51 =p
零售商2每單位時間的缺貨成本  202 =p
零售商3每單位時間的缺貨成本  103 =p
零售商的持有成本  1321 === hhh
零售商1與零售商2每單位時間的銷貨損失成
本 321 == ππ  
零售商3每單位時間的銷貨損失成本 43 =π  
零售商1與零售商2的批量數 421 == QQ  
零售商3的批量數  63 =Q
零售商1與零售商2每單位時間的需求之變異
數 321 ==VarVar  
零售商3每單位時間的需求之變異數 63 =Var  
零售商的欠撥率 3.0=θ  
現欲在存貨成本最小化的條件之下，求解
倉儲中心與下游各零售點的再訂購點，以及其
最小的存貨成本，首先將上述的參數值代入式
(28)，其求解作業步驟如下： 
步驟一：使用基因演算法求解參數值帶入之後
的成本模型，得到 、0.000005=wR
3.4323951 =R 、 、7.7956652 =R
20.3790993 =R 。 
步驟二：將 、 、 、 帶入成本模型可得
到最小存貨成本，其值為27.6582。 
wR 1R 2R 3R
接下來針對成本模型中各個參數進行敏感
度分析，從表2的敏感度分析結果，可以得到決
策變數與其他參數之間的關係： 
1.當參數θ 遞增時， 隨之遞增， 、 、
卻隨之遞減；當參數
wR 1R 2R 3Rθ 遞減時， 隨之遞減，
、 、 隨之遞增。 
wR
1R 2R 3R
2.當參數 遞增時，TC 也隨之遞增；當參數
遞減時， 和 TC 也隨之遞減，但是 卻反
而隨之遞增。 
wh wh
wR 2R
3.當參數 遞增時，TC 也隨之遞增，但 1、 、
卻隨之遞減；當參數 遞減時，TC 也隨之
遞減，但是 、 、 卻隨之遞增。 
ih R 2R
3R ih
1R 2R 3R
4.當參數 遞增時， 、 、 3 、TC 也隨之
遞增；當參數 遞減時， 、TC 也隨之遞減，
但是 卻隨之遞增。 
1p wR 1R R
1p 1R
2R
5.當參數 遞增時， 、 、 2 、TC也隨之
遞增；當參數 遞減時， 、TC也隨之遞減。 
2p wR 1R R
2p 2R
6.當參數 遞增時， 、 3、TC也隨之遞增；
當參數 遞減時， 、TC也隨之遞減，但是
卻隨之遞增。 
3p wR R
3p wR
1R
表 2 第二個 Model 敏感度分析結果 
參數 參數 wR 1R  2R  3R TC 
0.15 0.000 3.696 7.929 20.79 28.42
0.225 0.000 3.568 7.864 20.59 28.05
0.3 0.000 3.432 7.795 20.37 27.65
0.375 0.000 3.286 7.725 20.17 27.25
θ  
0.45 0.000 3.134 7.652 19.92 26.82
0.5 0.000 3.433 7.798 20.37 27.60
0.75 0.000 3.430 7.796 20.38 27.63
1 0.000 3.432 7.795 20.37 27.65
1.25 0.000 3.431 7.794 20.38 27.68
wh
1.5 0.000 3.432 7.795 20.38 27.71
0.5 0.000 5.113 8.869 23.49 20.60
0.75 0.000 4.220 8.282 21.80 24.45
1 0.000 3.432 7.795 20.37 27.65
1.25 0.000 2.709 7.376 19.13 30.31
ih  
1.5 0.000 2.027 7.005 18.01 32.50
表 4 第四個 Model 敏感度分析結果 第一階層倉儲中心的資料為： 
倉儲中心的前置時間 1=wL  參數 參數 wR 1R  2R  3R  TC 
0.15 0.0000 5.192617 9.321 23.22 27.92572
0.225 0.00023 5.069577 9.260 23.02 27.55399
0.3 0.00024 4.93409 9.191 22.81 27.16812
0.375 0.000017 4.793337 9.123 22.59 26.76709
θ  
0.45 0.000012 4.644248 9.051 22.36 26.34970
0.5 0.000036 4.936723 9.191 22.81 27.12351
0.75 0.000002 4.93311 9.191 22.81 27.14581
1 0.00024 4.93409 9.191 22.81 27.16812
1.25 0.000086 4.934814 9.191 22.81 27.19042
wh
1.5 0.000469 4.933923 9.191 22.81 27.21275
0.5 0.000091 6.579172 10.24 25.89 6.735599
0.75 0.00000 5.701977 9.667 24.21 17.26825
1 0.00024 4.93409 9.191 22.81 27.16812
1.25 0.000079 4.229921 8.782 21.57 36.53426
ih  
1.5 0.000021 3.558137 8.418 20.47 45.43373
2.5 0.000003 0.000185 9.191 22.81 24.16432
3.75 0.000016 3.519821 9.194 22.81 26.08063
5 0.00024 4.93409 9.191 22.81 27.16812
6.25 0.000734 5.825711 9.192 22.81 27.92946
1p
7.5 0.000015 6.468553 9.191 22.81 28.51160
10 0.000003 4.934866 7.373 22.81 25.32131
15 0.000002 4.935667 8.485 22.81 26.43486
20 0.00024 4.93409 9.191 22.81 27.16812
25 0.000576 4.934055 9.702 22.81 27.70936
2p
30 0.000033 4.93431 10.09 22.81 28.13561
5 0.000289 4.932959 9.191 16.83 21.77108
7.5 0.0000 4.93364 9.191 20.59 25.06194
10 0.00024 4.93409 9.191 22.81 27.16812
12.5 0.000006 4.932198 9.191 24.36 28.70031
3p
15 0.000005 4.933667 9.192 25.54 29.89581
倉儲中心的持有成本 1=wh  
倉儲中心的批量數  2=wQ
第二階層零售商的資料為： 
零售商個數  3=N
零售商1與零售商2單位時間內的平均需求
321 == μμ  
零售商3單位時間內的平均需求 63 =μ  
零售商1與零售商2單位時間內的顧客需求速
率 321 == λλ  
零售商3單位時間內的顧客需求速率 63 =λ  
零售商的前置時間  1321 === LLL
零售商1每單位時間的缺貨成本  51 =p
零售商2每單位時間的缺貨成本  202 =p
零售商3每單位時間的缺貨成本  103 =p
零售商的持有成本  1321 === hhh
零售商1與零售商2每單位時間的銷貨損失成
本 321 == ππ  
零售商3每單位時間的銷貨損失成本 43 =π  
零售商1與零售商2的批量數  121 == QQ
零售商3的批量數  13 =Q
零售商1與零售商2每單位時間的需求之變異
數  321 ==VarVar
零售商3每單位時間的需求之變異數 63 =Var  
零售商的欠撥率 3.0=θ  
現在存貨成本最小化的條件之下，求解倉
儲中心與下游各零售點的再訂購點，以及其最
小的存貨成本，首先將上述的參數值代入式
(28)，然後進行求解的作業，其求解作業步驟
如下： 
步驟一：使用基因演算法求解參數值帶入之後
的成本模型，得到 、
、 、
。 
0.00024=wR
4.934091 =R 9.1919922 =R
22.8151643 =R
 
4.5 敏感度分析結果討論 
根據4.1節至4.4節所得到的敏感度分析結
果，探討各個參數對存貨系統成本以及倉儲中
心與零售商再訂購點的影響，並分析各種現象
發生的原因。 
步驟二：將 、 、 、 帶入成本模型可得
到最小存貨成本，其值為27.1681。 
wR 1R 2R 3R
接下來針對成本模型中各個參數進行敏感
度分析從表4的敏感度分析結果，可以得到決策
變數與其他參數之間的關係： 
1.欠撥率 
當零售商缺貨訂單欠撥率上升的時候，缺
貨候補可以降低本研究存貨系統的成本，因為
當欠撥率上升，其代表的意義是有越多的顧客
願意等待廠商補貨，則如此一來可以減少銷貨
損失成本的增加，而且也降低缺貨成本的發
生，進而達到成本減少的效果。 
1.當參數θ 遞增時， 、 、 、TC 卻隨之遞
減；當參數
1R 2R 3Rθ 遞減時， 、 、 、TC 隨之
遞增。 
1R 2R 3R
2.當參數 遞增時，TC 也隨之遞增；當參數
遞減時， 、 、TC 也隨之遞減。 
wh wh
2R 3R
3.當參數 遞增時，TC 也隨之遞增，但 、 1R 、
、 卻隨之遞減；當參數 遞減時，TC
也隨之遞減，但是 、 、 卻隨之遞增。 
ih wR
2R 3R ih
1R
2.持有成本 
當持有成本上升的時候，倉儲中心與零售
商的再訂購點卻反而隨之下降，原因是當持有
成本上升的時候，系統選擇降低再訂購點來減
少存貨的持有量，而持有存貨量減少也導致持
有成本下降，進而使得系統總存貨成本減少，
以達到降低成本的功效。 
2
4.當參數 遞增時， 、TC 也隨之遞增，但是
3 卻隨之遞減；當參數 遞減時， 、 、
TC 也隨之遞減。 
R 3R
1p 1R
R 1p wR 1R
5.當參數 遞增時， 2R 、TC也隨之遞增；當參
數 遞減時， 、TC也隨之遞減。 
2p
2p 2R 3.缺貨成本 
6.當參數 遞增時， 、TC也隨之遞增；當參
數 遞減時， 、 、 、TC也隨之遞減。 
3p 3R
3p 1R 2R 3R
當缺貨成本上升的時候，倉儲中心與零售
商的再訂購點也隨之上升，是因為在零售商允
許部分欠撥的限制條件下，當需求量增加的時
 10
 12
17. Jackson, P. L., 1988, “Stock allocation in a 
two-echelon distribution system or What to 
do until your ship comes in”, Management 
Science, vol. 34, no. 7, pp. 880-895. 
18. Kanchanasuntorn, K. and Techanitisawad, A., 
2006, “An approximate periodic model for 
fixed-life perishable products in a 
two-echelon inventory–distribution system”, 
International Journal of Production 
Economics, vol. 100, pp. 101-115. 
19. Matheus, P. and G.elders, L., 2000, “The (R, 
Q) inventory policy subject to a compound 
Poisson demand pattern”, International 
Journal of Production Economics, vol. 68, pp. 
307-317. 
20. Namit, K. and Chen, J., 1999, “Solutions to 
the (Q,r) Inventory Model for Gamma 
Lead-time Demand”, International Journal of 
Physical Distribution & Logistics 
Management, vol. 29, no. 2, pp. 138-151. 
21. Papachristos, S. and Skouri, K., 2000, “An 
optimal replenishment policy for 
deteriorating items with time-varying 
demand and partial-exponential 
type-backlogging”, Operations Research 
Letters, vol. 27, pp. 175-184. 
22. Park, K. S., 1982, “Inventory models with 
partial backorders”, International Journal of 
Systems Science, vol. 13, pp. 1313-1317. 
23. Seifbarghy, M. and Jokar, M. R. A., 2006, 
“Cost evaluation of a two-echelon inventory 
system with lost sales and approximately 
Poisson demand”, International Journal of 
Production Economics, vol. 102, pp. 
244-254. 
24. Silver, E. A., Pyke, D. F. and Peterson, R., 
1998, “Inventory Management and 
Production Planning and scheduling 3rd ed”, 
Wiley, New York. 
25. van der Heijden, M. C., 1999, “Multi-echelon 
inventory control in divergent systems with 
shipping frequencies”, European Journal of 
Operational Research, vol. 116, pp. 331-351. 
26. Van der Laan, E., Dekker, R., Salomon, M. 
and Ridder, A., 1996, “An (s, Q) Inventory 
Model with Remanufacturing and Disposal”, 
International Journal Production Economics, 
vol. 46, no. 2, pp. 339-350. 
27. Verrijdt, J. H. C. M. and de Kok, A. G., 1996, 
“Distribution planning for a divergent 
depotless two-echelon network under service 
constraints”, European Journal of Operational 
Research, vol.89, pp. 341-354. 
28. Wee, H. M., 1995, “A deterministic lot-size 
inventory model for deterioration items with 
shortages and a declining market”, 
Computers & Industrial Engineering, vol. 22, 
pp. 345-356. 
29. Zohurl Kabir, A. B. M. and Al-Olayan, A. S., 
1996, “A stocking policy for spare part 
provisioning under age based preventive 
replacement”, European Journal of 
Operational Research, vol. 90, pp. 171-181. 
 1 
A Metaheuristic to Solve a Traveling Salesman Problem 
 
Wu-Hsien Shen, Chwen-Tzeng Su 
 
Department of Industrial Engineering and Management 
National Yunlin University of Science and Technology 
123 University Road, Section 3, 
Douliou, Yunlin, 64002, Taiwan, R.O.C. 
 
Abstract 
During the past few years, most researches done on 
traveling salesman problems (TSP) emphasize the use of 
meta-heuristics method combined with different 
mechanisms or controlling parameters to improve the 
solution quality and results. Very few researches 
investigate extensively on the nature of the topic in 
designing a more efficient mathematical calculation. 
Therefore, this study aims to examine the intrinsic 
qualities of the traveling salesman problems and apply 
the appropriate topic qualities to develop a set of 
efficient heuristic method in performing the 
mathematical computations. This should provide a more 
effective means in solving the problem. Our research 
shall start off by conducting an enumerative approach in 
finding all solution space a small-scale problem. In our 
analysis of and conclusion on solution space, it is 
discovered that the question of solution space has 3 
distinct characteristics. Then based on the on the solution 
space properties of the problem, we develop a heuristic 
algorithms to calculate and solve the traveling salesman 
problem. Finally, the simulation experiment results prove 
that the method used in this research is better and more 
effective than other meta-heuristics. 
 
Keywords: Traveling Salesman Problem, 
Meta-heuristics, Heuristic Algorithms. 
 
1. INTRODUCTION 
The early 20th century saw the rise of Tabu Search (Liu et 
al., 2003), Simulated Annealing (Budinich, 1996), 
Genetic Algorithm (Affenzeller & Wanger, 2003), Ant 
Algorithm (Chu et al. 2004), and Neural Network (Leung 
et al.,2004). During this time, numerous researchers 
conducted extensive studies on these algorithms, theories, 
and applications. These calculations methods were 
generally called meta-heuristics. Its primary application 
target is the difficult problems in combinatorial 
optimization, otherwise known as NP-Hard problems. As 
a result of the successful application of meta heuristic on 
various NP-Hard problems in combinatorial optimization, 
meta-heuristics is therefore deemed as a powerful tool in 
handling combinatorial optimization. 
After a comprehensive review of several 
meta-heuristics studies done in the recent years (Osman, 
1996), it was noticed that a lot of researchers geared their 
work towards the following directions: First, to 
completely imitate every kind of meta-heuristics under 
different combinatorial optimizations; Second, to analyze 
which meta-heuristics method produces a more effective 
result under similar combinatorial optimizations; Third, 
to correct the meta-heuristics structure by using specific 
meta-heuristics on combinatorial optimizations and by 
means of experimental simulation, or by combining 
specific mechanisms in order to increase the 
effectiveness of the meta-heuristics algorithm. In each of 
the above-mentioned research positions, researchers do 
not fail to discover different applications of 
meta-heuristics. Nevertheless, it should also be noted that 
the foundation of most of these studies were based on 
previously discussed meta-heuristics methods and were 
combined with various mechanisms and controlling 
variables, or altered certain structures to match the 
problem. Only a number of them explored the intrinsic 
qualities of the problem prior to designing an even more 
flawless meta-heuristics method. 
This study believes that all problems possess their 
own distinctive properties. In solving a problem, one 
should first aim directly at these properties and 
comprehend them thoroughly. This is important in 
preparing a more efficient solution to the problem. Hence, 
this research aims to explore and discuss the 
combinatorial optimization model in handling a traveling 
salesman problem. We shall begin with understanding 
the intrinsic qualities of the problem (i.e., characteristics 
of solution space) followed by a thorough discussion on 
how to design an effective heuristics algorithm. 
 
2. Description of the Problem and Analysis of the 
Intrinsic Qualities of Solution Space 
 
2.1 Analyzing the Properties of Solution Space 
 
This research uses the enumerative approach to identify 
all angles of the TSP problem, and then subjects all 
answers to inductions and analysis in an attempt to 
determine the qualities of solution space. Since the 
property of the TSP problem produces an excessively 
huge answer (15!/2=6.53 × 1011) when the scale is 
increased (n=15), it is then difficult to finish within the 
given timeframe. Therefore, in analyzing the qualities of 
solution space, this research is limited to small-scale 
problems; and to go as far as to solve large-scale 
problems, it would be necessary to adopt the optimum 
route collected from TSPLIB problems to strengthen the 
evidence. Below are several routes derived from 
simulation results and the optimum routes derived from 
TSPLIB problems to help illustrate the properties of 
solution space.  
 
2.1.1 First Property of Solution Space 
First, let us examine the matter at hand based on the 
simulation result for small-scale problems. Figure 1, 
which is the Figure for the optimum route of each 
experiment, shows that “the optimum solution is 
 3 
 
Table 1. The most of the nearly optimum routes 
No. Path Values 
1 0 9 4 2 1 7 8 5 3 6 0 1793.121 
2 0 4 9 2 1 7 8 5 3 6 0 1841.208 
3 0 9 4 2 1 7 5 8 3 6 0 1853.015 
4 0 2 4 9 1 7 8 5 3 6 0 1863.526 
5 0 2 9 4 1 7 8 5 3 6 0 1880.267 
6 0 9 4 2 1 7 8 3 5 6 0 1888.015 
7 0 9 4 2 1 7 3 5 8 6 0 1896.661 
8 0 2 4 9 6 3 5 8 7 1 0 1900.939 
9 0 9 4 2 1 7 5 3 8 6 0 1900.993 
10 0 4 9 2 1 7 5 8 3 6 0 1901.103 
11 0 9 4 2 1 3 5 8 7 6 0 1903.355 
12 0 9 4 2 1 8 7 5 3 6 0 1904.452 
13 0 9 2 4 1 7 8 5 3 6 0 1906.481 
14 0 2 4 9 1 7 5 8 3 6 0 1923.420 
15 0 9 4 2 6 3 5 8 7 1 0 1924.163 
16 0 4 9 2 1 7 8 3 5 6 0 1936.102 
17 0 9 4 2 1 8 5 3 7 6 0 1936.692 
18 0 4 2 9 1 7 8 5 3 6 0 1937.827 
19 0 2 9 4 1 7 5 8 3 6 0 1940.162 
20 0 9 4 2 1 8 3 5 7 6 0 1941.024 
 
sequence is the same, only this time it is reversed. 
However, the cluster sequence of No.86 is not at all 
reversed because it is ABDC.  Its target value is 
significantly different from the optimum value. Of 
course No.86 is not the only exceptional case. Surely, if 
we examine more solutions then we will discover more 
about this type of characteristic.  
Generally speaking, this characteristic conforms to 
the theories and provides a better solution route. In fact, 
its changes in certain areas are very limited and can even 
form a cluster in the said areas. With regard to the logical 
design of the heuristics algorithm, this research is going 
to be involved in the localized optimum solution since it 
is unavoidable to do so especially if during the process of 
neighborhood search, the pitch line exchange in the 
cluster group has not been collected under certain 
conditions. Therefore, cluster exchange is something to 
consider when conducting a neighborhood solution 
search, aside from the cluster 2-Opt exchange. By doing 
so, it is imperative to use an inferior solution method to 
indicate the search range for various solution spaces. 
This shall contribute to the solution quality of heuristics 
algorithm.  
Another issue to address is how to appropriately 
mark off the clusters. From the point of view of 
simulation experiment, the clusters defined by TSP do 
not exactly refer to mutual and neighboring nodes. In 
other words, a shorter distance facilitates the converging 
of cluster but should still rely on a better route sequence. 
It certainly cannot be denied that nodes nearest to each 
other can easily be grouped together, although not 
absolutely.  
 
2.2 Brief Summary 
In analyzing the solution space qualities, this research 
employed simulation experiment methods for small-scale 
problems. The solution space qualities of the 3-point TSP 
problems gathered from the analysis are as follows:  
1. The best solution is definitely a closed circular 
route with no overlaps. 
2. Nearly optimum routes are either 
non-overlapping circular routes or routes with 
overlapping points in few neighboring cities.  
3. Certain nodes in nearly optimum solution 
spaces may form a cluster. Aside from the 
variations in the crunodes sequence within the 
clusters, the sequence among clusters may 
also vary.  
Although it is impossible to perform an analysis of 
large-scale problems, the author believes that the basic 
principles and qualities of large- and small-scale 
problems are almost similar. In the succeeding sections, 
the TSP problem of the solution space serves as the 
foundation of this research as it attempts to design and 
develop a heuristics algorithm.  
 
3. Structure of the Heuristics Algorithm 
The 3 qualities of the solution space discussed in Section 
2 serve as the groundwork in this section as an attempt to 
design and develop a Heuristics algorithm. A algorithm 
can be divided into 2 parts: The first part is called the 
pre-assignment which searches for a portion of the 
solution space in advance. It establishes the regulatory 
databank of the relationships between node clusters. The 
cluster results among nodes are analyzed, and its results 
act as the learning mechanism for the succeeding search 
process. The second part is the follow-up search for the 
most optimum heuristics algorithm.  
Section 2.2.3 indicated that a cluster relationship 
exists between solution space nodes given a big number 
of sample problems. However, this type of cluster is not 
generally of close proximity but rather, it is a bigger 
cluster of relevant route sequence. Therefore, this 
research aims to probe into the related rules to establish 
the relevant regulatory databank in the first part. For the 
second part, it shall design a limited 2-Opt exchange for 
the neighborhood search in order to increase the validity 
of the latter.  In the meantime, there is a need to take 
into account the most optimum local loop and the 
acceptance of a provisional inferior solution. This 
portion matches up the tolerated value K% from the 
inferior solution. The entire structure of the algorithm is 
shown in Figure 3.  
 
3.1 Establishing the Pre-Assignment’s Relevant 
Regulatory Database 
The objective in setting up a regulatory databank is to 
provide a good quality data specimen needed in 
establishing the basis for node clusters. Moreover, the 
group pattern databank that will likewise serve as the 
2-Opt exchange rule within and among clusters for the 
succeeding Heuristics Algorithm. 
 
3.1.1 Beginning Solution 
The first and second solution space properties imply that 
if a non-overlapping route is found during the 
preliminary solution or if too many intersecting routes 
 5 
exchange can only find a pitch line exchange in identical 
clusters under a restricted neighborhood search. This is 
so in order to avoid creating too many ineffective 
calculations. In the event that a better solution is found, 
there is a need to evaluate whether a new cluster-style 
databank is required to proceed with a 2-Opt cluster 
exchange. The terminating condition for this phase is that 
all pitch line exchanges in each cluster should no longer 
be able to find a new solution. In this case, the 
neighborhood search in this phase is fully accomplished, 
and we are now ready to enter the next phase, that is, 
finding the most optimum mechanism for the local loop. 
The algorithm steps are arranged as follows:  
(1) Use the existing Xn as a basis for the 
cluster-style databank. Select pitch lines 
from an identical cluster to perform a 2-Opt 
exchange within the cluster.  
(2) Determine whether the new solution is better: 
The new optimum provisional solution is 
represented by Xq=Xn. Evaluate if there is a 
need for a new cluster-style databank. If yes, 
return to Step (1); if not, proceed to Step (3).  
(3) After completing the exchange in all clusters 
and in all pitch lines, move on to Step (4). 
Otherwise, go back to Step (1).  
(4) End of phase. Proceed to most optimum 
solution mechanism for a local loop.  
 
3.2.2 Most Optimum Solution Mechanism for a Local 
Loop  
This study is based on the principles of the 3 solution 
space qualities. With regard to the most optimum 
solution mechanism for a local loop, 2-Opt exchange 
among clusters is used. That is, this exchange rule selects 
and exchange pitch lines from 2 different clusters to 
broaden the scope of our search. This mechanism entails 
the acceptance of inferior solutions although not all 
inferior solutions are absorbed. It is only done within the 
tolerated percentage K%.  Neighborhood search is 
repeated to perform an exchange within the cluster. If no 
solution is accepted, continue applying the exchange 
rules between clusters. The terminating condition for this 
phase is when all pitch line exchanges in each cluster can 
no longer an acceptable solution.  This marks the end of 
the phase. The algorithm steps are arranged as follows:   
(1) Use the existing Xn as a basis for the 
cluster-style databank. Select pitch lines 
from different clusters to perform a 2-Opt 
exchange between clusters.  
(2) Determine whether the target value C(X’) of 
the new solution X’ derived from the pitch 
line exchange between clusters is within the 
acceptable range, that is, 
C(X’)<C(Xn)(1+K%). If acceptable, the new 
Xn=X’ may proceed to Step (3). Otherwise, 
jump to Step (4).   
(3) Determine whether C(Xn) is smaller than 
C(Xq). Check out the new temporarily 
superior solution Xq=Xn, and decide if there 
is a need for a new cluster-style databank 
then proceed to Step (5). If they are equal, 
proceed to Step (5) as well.  
(4) After completing the exchange between 
clusters and pitch lines, jump to Step (6). 
Otherwise, go back to Step (1). 
(5) At the end of the algorithm for the most 
optimum solution mechanism for a local 
loop, return to neighborhood search 
mechanism and continue searching.  
(6) Record the last result. This marks the end of 
this phase.  
 
4. Simulation Experiment 
This experiment is divided into 2 parts: First is the 
empirical data, and the comparison of threshold 
algorithm and genetic algorithm;  second is the TSPLIB 
problems compared with this study’s Heuristic algorithm 
and most optimum results for TSPLIB problems. The 
empirical data uses 30, 50, and 100 nodes as the 
simulation problem In the 2-dimensional space empirical 
node data of 1000 x 1000, each sample undergoes the 
simulation experiment for 30 times. Under the TSPLIB 
Problems, this research chose 5 different simulations, 
namely: TSPLIB Problems eil51, st70, karoA100, ts225, 
and pcb442. The methods used in this study are then 
compared with the cost errors of the most optimum 
solution for TSPLIB Problems. The cost error formula is 
as follows: 
100%
SolutionBest  Problems TSPLIB
SolutionBest  Problems TSPLIB -Solution  Final
×  
 
4.1 Empirical Experiment Data Analysis  
This experiment made use of empirical nodes data mode. 
The 3 different problem scales (n) were classified into 30, 
50, and 100 nodes and served as our simulated 
experiment models. We focused on TA algorithm, GA 
algorithm, and the heuristics algorithm of this study 
(represented by SHA). The simulation experiment was 
done 30 times. 
As for the simulation experiment results, this study 
initially examined the statistical data under various forms 
of algorithm to determine if the final solutions present 
any remarkable discrepancies. The examination method 
is actually a variance analysis based on SPSS which has 
a standard deviation of 0.05. The result was subjected to 
various problem scales and showed that our algorithm 
has a significant statistical discrepancy with 
meta-heuristics, TA, and GA. This indicates that the 
results derived from the 3 methods may produce 
discrepancies under different problem scopes. The 
average value derived from performing the simulation 
experiment for 30 times is shown in Figure 4. Tukey 
multiple comparison is used to discuss our data analysis.  
3000.00
6500.00
10000.00
13500.00
30 50 100
n
O
bje
ct
iv
e 
V
alu
es
TA
GA
SHA
 
Figure 4. Average Value Derived from Different 
Algorithm Experiments 
 
出席國際學術會議心得報告 
計畫編號 NSC 97－2221－E－224－030 
計畫名稱 最佳考慮部份欠撥之倉儲與多零售商聯合存貨策略 
出國人員姓名 
服務機關及職稱 
蘇純繒 
國立雲林科技大學工業工程與管理研究所教授 
會議時間地點 June 22 - 24, 2009 , Imperial Palace Hotel and Casino, Las Vegas, Nevada USA
會議名稱 18
th International Conference on Software Engineering and Data Engineering 
(SEDE-2009) 
發表論文題目 A Metaheuristic to Solve a Traveling Salesman Problem 
 
一、參加會議經過 
本次SEDE 2009 研討會於98年7 月22 日至24 日在美國拉斯維加斯市的Imperial Palace Hotel舉
行。研討會於7月22日上午7:45分開始，上午09:00進行專題演講，首位演講者為惠普實驗室的資
深研究專家Dr. Tom Malzbender，講題是“Reflectance Imaging: A Simple Approach to Seeing Surface 
Detail”，他的演講內容兼具學務理論與實務應用，非常精采，獲得所有與會人士的一致好評。隨
後即展開4個場次共計有18位的學者進行論文發表。7月23日上午再度安排一場專題演講，主講人
是任教於德州大學奧斯汀分校電腦工程系的教授Dr. Don Batory，他演講的題目是“Refinement and 
Optimization of Data-Flow Architectures”，也是學術界該領域最新的研究成果。當天的論文發表場
次共計6場，有22位學者發表研究論文，我們的論文被安排在這一天下午Session 2B的場次發表，
該場次的時間是 2:15到3:45 ，地點在 SAMPAN Room。Session 主持人是來自Metropolitan State 
University的Dr. Brahma Dathan 教授，他也是本場次第二篇論文的作者。我們是第四篇報告的論
文，而前面三篇報告的論文，第一篇和第二篇的作者均來自美國，第三篇的作者來自馬來西亞，
所以這個場次有兩位美籍學者和兩位亞洲籍學者，非常的國際化，也因為發表的論文研究領域極
為不同，但是與會學者都對其他學者發表的研究內容有極高的興趣，主持人Dr. Brahma Dathan還
與與會人士討論不同論文之特殊貢獻與獨到之處，看法非常精闢，也引導與會人士發表自己的看
法，讓大家有良好的互動，收獲豐富。第三天安排三個場次10篇的論文發表，因此研討會三天下
來，每位與會人士都覺得收獲豐富，也對主辦單位各項活動的貼心安排極為滿意。 
二、與會心得 
本次會議在酷熱且乾燥的賭城拉斯維加斯市舉辦，在氣溫高達攝氏四十多度的豔陽下，本人從洛
杉磯搭乘巴士前往拉斯維加斯，也是畢生難忘的經驗，研討會所在的旅館一樓是賭場大廳，研討
會場在樓上，所以每次進會場前都很想先試一試手氣。在研討會中碰到許多來自各國的學者，大
家都借助出席研討會來促進學術交流及提昇學術地位，所有與會者能夠聆聽到更多不同領域的文
章，獲益良多。而每一次的國際研討會都有不同的收穫，並且所遇到的專家學者都不盡相同，各
國的學者各有特色，大家一起分享自己的成果，相互知識交流，結交不少業界與學界朋友，此些
專家學者經歷皆非常豐富，未來筆者期望能夠邀請這些學者專家來校與學生演講，期望除了增加
學生的專業知識外更能增加其國際觀。因此，學校與各教育單位應多多鼓勵學生與教師參與此類
國際型之活動。最後，感謝國科會的支持與補助。 
 2 
definitely a sealed circuit route with no intersecting 
junctions”. Under medium to large-scale TSPLIB 
problems, a similar phenomenon is found.  
With regard to TSP problems, the intersections 
produced in traveling routes represent unnecessary and 
excess routes. Therefore, this characteristic basically 
conforms to the ideas presented in theories. Considering 
the logical thinking behind the design of Heuristics 
algorithm, finding a non-intersecting route during the 
initial stages of the solution process or avoiding too 
many intersecting routes in the adjoining search can 
absolutely facilitate and contribute to the efficiency of 
the heuristics algorithm. 
 
(a)
0
100
200
300
400
500
0 200 400 600 800 1000
 
(b)  
(c)  
Figure 1. (a)n =10 (b)TSPLIB pr76 (c)TSPLIB kroc100 
Optimum Routes 
2.1.2 Second Property of of Solution Space 
As regards the nearly optimum route derived from the 
simulation experiment results, Figure 2 shows that “the 
nearly optimum route form a non-intersecting and closed 
circuit route, or may perhaps intersect in very few 
adjacent cities”. Based on the most optimum gathered 
from the results, Table 1 shows that most of the nearly 
optimum routes actually the result of a two-section lines 
2-Opt interchange (Lin, 1965, 1973). For example: the 
No.2 in 0-4 and 9-2 section line interchange is 
transformed into No.1 in 0-9 and 4-2. No.3 in 7-5 and 
8-3 section line interchange is transformed into No.1 in 
7-8 and 5-3. By and large, this characteristic also 
conforms to the ideas embraced by the theories, that is, 
nearly optimum routes and the optimum route should 
never have a significantly large discrepancy. 
Nevertheless, we derive another clue from this angle, 
namely, the 2-Opt interchange is localized within a 
specific group. For this reason, the model most probably 
can be sorted out into 4 groups: node 0, 9, 4, 2 make up 
the first cluster, node 1 forms 1 cluster, node 7, 8, 5, 3 
forms another cluster, and node 6 forms 1 cluster.  
Therefore, when it comes to the logical design of 
heuristics algorithm, 2-Opt section lines modification 
method is the most effective. However, this does not 
indicate a random selection of any 2 section lines to 
perform an interchange because by doing so, it is easy to 
create null and void calculations during the process. This 
process should be bound by conditions and restriction, 
that is, interchange can occur only within clusters so that 
it is able to contribute to the effectiveness of the 
heuristics algorithm.  
0
100
200
300
400
500
600
700
800
900
1000
0 100 200 300 400 500 600 700 800 900 1000
0
100
200
300
400
500
600
700
800
900
1000
0 100 200 300 400 500 600 700 800 900 1000
0
100
200
300
400
500
600
700
800
900
1000
0 100 200 300 400 500 600 700 800 900 1000
0
100
200
300
400
500
600
700
800
900
1000
0 100 200 300 400 500 600 700 800 900 1000
 
0
100
200
300
400
500
600
700
800
900
1000
0 100 200 300 400 500 600 700 800 900 1000
0
100
200
300
400
500
600
700
800
900
1000
0 100 200 300 400 500 600 700 800 900 1000
0
100
200
300
400
500
600
700
800
900
1000
0 100 200 300 400 500 600 700 800 900 1000
0
100
200
300
400
500
600
700
800
900
1000
0 100 200 300 400 500 600 700 800 900 1000
 
Figure 2. Nearly Optimum Routes 
2.1.3 Third Property of Solution Space 
This section is quite similar to the example given above. 
In Section 2.2.2, we said that the models can be 
classified into 4 groups: section points 0, 9, 4, 2 make up 
the first cluster (called Cluster A), section point 1 is 
another cluster (called Cluster B), section points 7, 8, 5, 
3 make up a cluster (called Cluster C), and section point 
6 forms another cluster (called Cluster D). 2-Opt 
interchange is localized within specific groups. But there 
is another phenomenon that can be seen here, namely, 
“Certain section points in the nearly optimum solution 
for the solution space will from a cluster. 
Aside from the small changes in the crunode sequence of 
the clusters, there are also differences in the sequences 
among the clusters.” For example: The optimum cluster 
sequence is ABCD. No.8, No.15, No.58, No.67, No.85, 
and others have a cluster sequence of ADCB. Naturally 
since the TSP problem is a closed circuit, then the 
 4 
 
Figure 3. Framework of the Heuristics Algorithm 
 
are avoided during the neighborhood search, then we 
would have eliminated a great deal of travel routes 
solutions and at the same time increase the quality of our 
solution.  
How to produce a non-overlapping route is the 
major consideration at this stage. This research used the 
Space Filling Curve (SFC) in order to produce a 
non-overlapping route in a 2-dimensional space and 
preliminary solution route structure. SFC is extensively 
applied in finding optimum solutions for various groups. 
For example, the shortest route for the traveling salesman 
performed by Bargholdi and Platzman (1982), the 
warehouse storage problem drawn up by Bargholdi and 
Platzman (1988), the facilities arrangement model by 
Bozer et al. (1994), Robert and Paul’s (1994) dissection 
of the vehicular route solution for a development plan, 
the Hilburt Curves used by Lu (2003) as a basis for huge 
space data cluster strategy, the SFC used by Chen (2002) 
in his neighborhood space search, etc.  
This research makes use of the 3 most commonly 
used space filling curves, namely: Hilbert Curves, RGB 
Curves, and Peano Curves. These curves will be used to 
complement the space node groupings in our traveling 
salesman problem. We shall develop 9 kinds of space 
filling curves for a total of 12 SFC to make up our 
preliminary route structure.  
 
3.1.2 2-Opt Exchange Rules Applied in the 
Neighborhood Search 
The steps in conducting a neighborhood search relies on 
the 2-Opt exchange to find a better solution specimen. 
This research can guarantee the effectiveness of 2-Opt 
exchange in connection with neighborhood search.  In 
carrying out this type of search, we do not impose any 
restrictions at all. On the contrary, we want to reinforce 
an extensive scope to achieve more flawless specimen 
data.  
 
3.1.3 Voracious Search Rules  
This step involves the use of voracious acceptance rule 
using n preliminary solutions divided into m neighboring 
spaces according to the selected voracious search rule. 
The primary goal is to find a better node route sequence 
so that as the data specimens become better, we will be 
able to achieve the appropriate specimen data route for 
our research problem  
 
3.1.4 Use a Relevant Rule to Establish a Cluster-Style 
Databank 
This step employs relevant Apriori algorithms to build a 
cluster-style databank.  The algorithm has 2 major 
phases: 1. Find a big item set; 2. Use the big item set to 
establish a relevant rule.  Since this research aims to 
establish a cluster data, the important thing is to identify 
which nodes belong to the same cluster.  The relevant 
rule in that group is not the weigh-bearing point in this 
phase.  Therefore, this research only needs the big item 
set from the first phase of the relevant Apriori algorithm 
rules. The algorithm steps are as follows:  
(1) Scan the n x m specimen databank before 
designing the support level for each entry. 
Determine whether they conform to the 
minimum support level S% (Min Support) 
and then decide on the big item sets.  
(2) Use (1) to find the biggest entry set that will 
serve as the Seed Set. Use the Seed Set to 
produce a potential big entry set called 
Candidate Item Set.  
(3) Scan the specimen databank. Calculate the 
support level of each candidate item set, and 
then decide whether the candidate set is 
indeed a big item set that will be form the 
next round of seed set. Go back to step (2) 
until no more new candidate item set can be 
produced.  
Only a single biggest item set can be found from 
the mathematical calculations above. Thus, this research 
will go back to the last scanning process to find the 
second biggest item set until all nodes have been 
distributed to each set.  
 
3.2 Follow-Up Heuristics Algorithm   
Designing and developing the follow-up Heuristics 
algorithm is based on the solution space qualities 
discussed in Section 2.2. The primary algorithm structure 
consists of 2 parts: (1) Neighborhood search mechanism; 
(2) Optimum mechanism for the local loop. See Figure 4 
for the algorithm flow chart. The classifications are 
explained below:   
 
3.2.1 Neighborhood Search Mechanism  
The neighborhood search mechanism in our heuristics 
algorithm is based on the principles of the second 
solution space quality. 2-Opt exchange is used to conduct 
the neighborhood search and set the search conditions. 
2-Opt exchange must be performed in identical clusters. 
In other words, based on the node cluster data of the 
pre-assignment databank in Section 3.1.4, 2-Opt 
