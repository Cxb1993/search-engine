低功率非同步處理器與快取記憶體的研究與設計(II) 
“Design of Low-power Asynchronous Processors and Cache Systems II” 
計畫編號：NSC 97-2221-E-018 -026 - 
執行期間：97 年 8 月 1 日 至 98 年 8 月 31 日 
主持人：張孟洲 國立彰化師範大學電子工程學系副教授 
 
一、 中文摘要 
在前一年的計畫中，我們主要著重於非同
步處理器的架構研究，並利用「非同步電路合
成系統 Balsa」完成非同步處理器 AsynRISC
的設計。今年的研究重點主要集中在低功率非
同步電路的電路階層（circuit-level）設計，提
出一個新的低功率電路的設計技術，此技術結
合了「非同步電路」與「絕熱邏輯」這兩種低
功率技術的優點，稱為「交握式準絕熱邏輯」
（ Handshaking Quasi-Adiabatic Logic ；
HQAL）。 
HQAL 採用 dual-rail 的資料編碼方式，並
且採用非同步交握式方式來傳送資料。因此，
HQAL 具有非同步電路的優點：沒有時脈歪斜
問題、沒有因 clock tree 所導致的功率消耗，
並且在沒有資料輸入時，沒有動態功率消耗。
HQAL 的邏輯閘的電源是由「交握控制鏈」
（Handshake Control Chain）所控制，當 HQAL
邏輯閘沒有輸入資料時，它得不到電源；只有
當 HQAL 邏輯閘有輸入資料時，它才獲得電
源，並且以跟絕熱邏輯相似的方式運作，而達
到低功率消耗。利用交握控制鏈，HQAL 避免
了發生在傳統非同步絕熱邏輯(Asynchronous 
Adiabatic Logic；AAL)電路裡 data token 被蓋
過的問題。 
模擬結果顯示8位元管線Sklansky加法器
的 HQAL 實現方式比傳統 CMOS 實現方式在
輸入資料率為700MHZ的情況下節省了 33.1%
的功率消耗，在輸入資料率為 10MHZ 的情況
下節省了 72.5%的功率消耗。 
英文摘要 
In this project, we have proposed a novel 
low-power logic circuit, called handshaking 
quasi-adiabatic logic (HQAL), which combines 
the advantages of asynchronous circuits and 
adiabatic logics. The HQAL logics adopt 
dual-rail encoding, and employ handshaking to 
transfer data between the adjacent modules. 
Hence, HQAL has the advantages of 
asynchronous circuits: no clock skew problem, 
no power dissipation due to the clock tree, and 
no dynamic power dissipation when there are no 
input data. The power line of the HQAL logic 
gates is controlled by the handshake control 
chain (HCC). A HQAL logic gate is not supplied 
with power when it has no input data. Only when 
a HQAL gate has acquired its input data, it can 
gain the power and then operate in a way similar 
to the adiabatic logic. Hence, the HQAL logic 
can achieve low power dissipation. With the 
handshake control chain, the HQAL circuit can 
avoid the problem of data token overriding, 
which may occur in conventional asynchronous 
adiabatic logic (AAL) circuits. Simulation 
results showed that the HQAL implementation 
of a pipelined Sklansky adder can achieve 33.1% 
reduction in power dissipation, compared to the 
CMOS implementation, for a data rate of 700 
MHz and 72.5% reduction in power dissipation 
for a data rate of 10 MHz. 
接受到 Empty token 而使得的輸出為無效值，
導致第 i 級邏輯單元的電源被拿掉而產生錯
誤。這種錯誤起源於 AAL 中相鄰兩級電路沒
有 request、acknowledge 等交握信號。 
若我們以 AAL 實現傳輸延遲時間差異性
大的邏輯閘，再將這些邏輯閘組成管線電路，
如圖 3 所示，在 45nm 製程而輸入資料頻率為
200MHZ 環境下做模擬，模擬結果如圖 4 所
示，標示 A、B 和 C 的圈選處為出錯的波形，
即 valid data token 被蓋過的地方。 
 
aal_test4 aal_test4 aal_test4 aal_test4 a_f a_t 
b f 
b t 
o f
o t
b f 
a t 
a f inv 
C&R 
Vc1 
C&R 
Vc2 
1bit 
Fulladder 
C&R 
AND 
Vc3 
inv 
C&R 
Vc4 
b t 
 
圖 3:傳輸延遲時間差異性大的 AAL 管線電路方塊圖 
 
 
圖 4: AAL 管線電路 data token 被覆蓋(overridden)的
地方 
為了改良 AAL 的問題，我們提出新的結
合「非同步電路」與「絕熱式邏輯」這兩種技
術的方法，稱為 Handshaking Quasi-Adiabatic 
Logic (HQAL)。HQAL 不僅保有「非同步電路」
與「絕熱式邏輯」兩者的優點，更避免了 data 
token 被蓋過的問題。 
 
三、 研究方法及成果 
我們所提出的交握式準絕熱式邏輯
handshaking quasi-adiabatic logic (HQAL) 由
絕熱式邏輯區塊和交握控制鏈 handshake 
control chain (HCC) 所組成，如圖 5 所示。 
與 AAL 相似的地方是 HQAL 的絕熱式邏
輯區塊使用 2N-2N2P 邏輯實現，輸入和輸出
也使用 dual-rail 的編碼方式。而 HQAL 的絕熱
式邏輯區塊電源是由交握控制鏈來控制和提
供。 
如圖 5 所示，每級的交握控制鏈由三個部
份所組成，分別為完成偵測器 Completion 
Detector(CD)、反相器和 C-element。第 Si級的
完成偵測器是用來偵測絕熱式邏輯閘的輸入
資料的有效性。如果輸入資料是 valid data 
token，則完成偵測器標示為 Ri的輸出處為 1，
而如果輸入資料是 empty token，Ri則為 0。 
第 Si 級的 C-element 標示為 Vci 的輸出
處，是用來產生電源以提供給 Si級的絕熱式邏
輯區塊。藉由調整 C-element 裡電晶體的尺
寸，使得 Vci 產生緩慢上升和下降的電壓，以
減少絕熱式邏輯區塊所產生的功率消耗。當
Ri為 1（表示本級已收到一個 valid data token）
而 Ri+1 為 0（表示下級已收到一個 empty 
token），則 Vci的電壓逐漸由低態上升為高態。
同樣地，當 Ri為 0（表示本級已收到一個 empty 
token）而 Ri+1 為 1（表示下級已收到一個 valid 
data token），則 Vci的電壓逐漸由高態下降為
低態。因為 HQAL 管線電路的輸入資料為連
續交替的 valid data tokens 和 empty tokens，所
以必須等到上一筆 valid data token 傳送到 Si+2
級，Si 級才能開始處理下一筆 valid data 
token。因此，HQAL 可避免掉 data token 被下
一筆 data token 蓋過的問題。 
Handshake Control Chain
R2 R1 R3 R4 
Ack5Ack1
CD CD 
Adiabatic 
Logic Gate
Adiabatic 
Logic Gate 
Adiabatic 
Logic Gate 
O
utput D
ata 
Input D
ata Vc1 Vc2 Vc3 Vc4
S1 
Adiabatic 
Logic Gate
C C 
CD 
C 
CD 
C 
CD = Completion Detector 
C = C-element 
S2 S4 S3 
圖 5: 我們提出的 HQAL 系統區塊圖 
觀察圖 5 得知，HQAL 裡的每個絕熱式邏
輯區塊都需要三個交握式控制元件，這種架構
會產生額外的硬體和功率消耗，為了讓 HQAL
在硬體和功率消耗上更有效率，我們提出二個
簡化 HQAL 電路的方法，如圖 6 所示。 
表 1 為比較以 CMOS 和 HQAL 實現的二
種邏輯閘的平均功率消耗，這兩種邏輯閘分別
用來產生總合訊號（F=A⊕B⊕C）和進位訊號
（F=A⋅B+B⋅C+A⋅C）給半加器。F=A⊕B⊕C
的絕熱式邏輯閘可節省 90.8-97.7%的平均功
率消耗，而 F=A⋅B+B⋅C+A⋅C 的絕熱式邏輯閘
可節省 69.6-91.4%的平均功率消耗。 
 
表 2: 比較以 HQAL 和傳統 CMOS 邏輯分別實現的 8
位元 Sklansky 樹狀加法器在不同輸入資料率的整體電
路產生的平均功率消耗 
 平均功率消耗 (nw)  
HQAL 輸入資料率
(M op./s) CMOS 
絕熱邏輯 
區塊 控制電路 
總功率消
耗 
節省
(%) 
10 1913.7 61.363 464.85 526.213 72.503
50 4735.5 275.71 2153.5 2429.21 48.702
100 8268.6 541.16 4269.8 4810.96 41.816
200 15308 1064.6 8404.4 9469 38.143
300 21995 1597.1 12735 14332.1 34.840
400 29004 2114.4 16651 18765.4 35.302
500 35974 2656.4 20741 23397.4 34.959
600 43729 3227.9 25121 28348.9 35.171
700 49587 3789.1 29373 33162.1 33.124
 
表 3: 比較以 HQAL 和傳統 CMOS 邏輯分別實現的 8
位元 Sklansky 樹狀加法器在不同運作速度上的整體電
路因靜態漏電流產生的平均功率消耗 
 平均靜態功率消耗 (nw)  
 CMOS HQAL  
CMOS
頻率 
(M Hz) 
邏輯 Latches 總功率消耗 邏輯
控制電
路 
總功率
消耗 
節省 
(%) 
0 465.79 410.77 876.56 95.624
10 467.54 415.20 882.73 95.654
50 472.46 431.74 904.2 95.757
100 478.42 452.23 930.65 95.878
200 491.10 493.63 984.73 96.104
300 505.10 534.46 1039.56 96.310
400 535.58 623.46 1159.04 96.690
500 536.15 643.32 1179.47 96.748
600 548.81 656.37 1205.18 96.817
700 561.84 699.26 1261.1 
0.334 38.027 38.361
96.959
 
表 2 為比較以 CMOS 和 HQAL 實現的 8
位元五級管線 Sklansky 加法器的平均功率消
耗，並分別列出使用 HQAL 實現方式的所有
絕熱式邏輯閘和交握控制鏈的平均功率消
耗。由於 HQAL 裡的絕熱式邏輯閘的電源不
是由交流電源提供，而是由交握控制鏈所提
供，所以交握控制鏈消耗了大部份的功率。然
而，HQAL 的實現方式的整體功率消耗還是比
CMOS 的實現方式小。HQAL 的實現方式在輸
入資料率為 700MHZ的情況下節省了 33.1%的
功率消耗，而在輸入資料率為 10MHZ 的情況
下節省了 72.5%的功率消耗。 
像超純量處理器的龐大數位系統在特定
的短期間內可能只用到它功能單元的一部
份，而其他功能單元則閒置。一個閒置的功能
單元可能因漏電流和時脈對端點電容充放電
而仍然有功率消耗。HQAL 電路的優點是不會
提供電源給閒置的邏輯區塊，且其漏電流功率
消耗可以忽略。表 3 為比較以 CMOS 和 HQAL
實現的8位元五級管線Sklansky加法器的靜態
功率消耗，模擬時電路的輸入保持為常數 0 或
empty tokens。由於電路沒有輸入時，HQAL
裡的絕熱式邏輯區塊沒有電源，且其漏電流功
率消耗可以忽略，所以 HQAL 的實現方式可
減少 95.6%的靜態功率消耗。 
 
四、 結論與討論 
本研究提出一個新的邏輯形式，稱為
Handshaking Quasi-Adiabatic Logic 
（HQAL）。HQAL 結合「非同步電路」與「絕
熱式邏輯」這兩種低功率技術的方法。當交握
控制鏈在處理有效運算時，它才提供電源給
HQAL 裡的絕熱式邏輯區塊。利用交握控制
鏈，HQAL 電路可避免 data token 被蓋過的問
題。模擬結果顯示， 8 位元管線 Sklansky 加
法器的 HQAL 實現方式比傳統 CMOS 實現方
式在輸入資料率為 700MHZ 的情況下節省了
33.1%的功率消耗，在輸入資料率為 10MHZ
的情況下節省了 72.5%的功率消耗。在沒有輸
入的情況下，HQAL 裡的絕熱式邏輯區塊沒有
電源，且其漏電流功率消耗可以忽略，所以
HQAL 的實現方式可減少 95.6%的靜態功率消
耗。 
本研究的相關研究結果發表在 MWSCAS 
2009 (The 52nd. IEEE International Midwest 
Symposium on Circuits and Systems)及其他三
個研討會。 
 
五、參考文獻 
可供推廣之研發成果資料表 
□ 可申請專利  □ 可技術移轉                                      日期： 年 月 日 
國科會補助計畫 
計畫名稱：低功率非同步處理器與快取記憶體的研究與設計(II) 
計畫主持人：張孟洲 
計畫編號：NSC 97-2221-E-018-026 學門領域：微電子學門 
技術/創作名稱 「交握式準絕熱邏輯」（Handshaking Quasi-Adiabatic Logic；HQAL） 
發明人/創作人 張孟洲 
技術說明 
中文： 
本研究提出一個新的低功率電路的設計技術，此技術結合了
「非同步電路」與「絕熱邏輯」這兩種低功率技術的優點，稱為「交
握式準絕熱邏輯」（Handshaking Quasi-Adiabatic Logic；HQAL）。
HQAL 採用 dual-rail 的資料編碼方式，並且採用非同步交握式
方式來傳送資料。因此，HQAL 具有非同步電路的優點：沒有時脈
歪斜問題、沒有因 clock tree 所導致的功率消耗，並且在沒有資料
輸入時，沒有動態功率消耗。HQAL 的邏輯閘的電源是由「交握控
制鏈」（Handshake Control Chain）所控制，當 HQAL 邏輯閘沒有
輸入資料時，它得不到電源；只有當 HQAL 邏輯閘有輸入資料時，
它才獲得電源，並且以跟絕熱邏輯相似的方式運作，而達到低功率
消耗。利用交握控制鏈，HQAL 避免了發生在傳統非同步絕熱邏輯
(Asynchronous Adiabatic Logic；AAL)電路裡 data token 被蓋過的問
題。 
模擬結果顯示 8 位元管線 Sklansky 加法器的 HQAL 實現方式
比傳統 CMOS 實現方式在輸入資料率為 700MHZ 的情況下節省了
33.1%的功率消耗，在輸入資料率為 10MHZ 的情況下節省了 72.5%
的功率消耗。 
附件二 
※ 1.每項研發成果請填寫一式二份，一份隨成果報告送繳本會，一份送 貴單位
研發成果推廣單位（如技術移轉中心）。 
※ 2.本項研發成果若尚未申請專利，請勿揭露可申請專利之主要內容。 
※ 3.本表若不敷使用，請自行影印使用。 
Handshaking Quasi-Adiabatic Logic 
 
Meng-Chou Chang and Chia-Chang Tsai 
Department of Electronic Engineering 
National Changhua University of Education 
Changhua, Taiwan 
Email:mchang@cc.ncue.edu.tw 
 
  
Abstract—This paper proposes a novel handshaking quasi-
adiabatic logic (HQAL) circuit, which combines the advantages 
of adiabatic logics with those of asynchronous circuits. A 
HQAL circuit is composed of adiabatic logic blocks and the 
handshake control chain (HCC). The power of the adiabatic 
logic blocks in HQAL is controlled and supplied by the HCC, 
and the logic blocks in HQAL become active only when 
performing useful computations. With the handshake control 
chain, the HQAL circuit can avoid the problem of data token 
overriding, which may occur in conventional asynchronous 
adiabatic logic (AAL) circuits. Simulation results showed that 
the HQAL implementation of a pipelined Sklansky adder can 
achieve 33.1% reduction in power dissipation, compared to the 
CMOS implementation, for a data rate of 700 MHz and 72.5% 
reduction in power dissipation for a data rate of 10 MHz. 
I. INTRODUCTION 
Reducing power consumption has become an important 
issue in VLSI and System-on-Chip design areas. 
Asynchronous logic and adiabatic logic both have been 
considered as promising techniques for low power circuit 
design.  
In an asynchronous system, each sub-module operates at 
its own rate and employs handshaking to synchronize with 
its neighbors only when it needs to exchange information. 
Asynchronous circuits have the advantages of low electro-
magnetic emission, no clock skew problem, average case 
rather than worst case performance, no power dissipation due 
to the clock tree, and robustness towards variations in 
temperature, supply voltage and fabrication process 
parameters.  
Adiabatic logic [1,2,3] achieves low power consumption 
by using AC power supplies to charge output node 
capacitances during the evaluate phase and recover the 
charge back to the power supplies during the discharge phase. 
With AC power supplies, adiabatic logic can maintain small 
voltage drop across conducting transistor switches during the 
evaluate/discharge process, and thus the energy dissipated by 
the conducting transistor switches can be minimized. This is 
in contrast to conventional CMOS logic where the constant 
power supply may cause large voltage drop across the 
conducting transistor switches and thus a larger amount of 
energy may be dissipated by the transistor switches. 
Arsalan and Shams have proposed a novel logic design 
methodology, called asynchronous adiabatic logic (AAL) [4], 
to combine the benefits of adiabatic logic with those of 
asynchronous logic. An AAL circuit is composed of two 
types of blocks, adiabatic logic blocks and Control and 
Regeneration (C&R) blocks. In contrast to conventional 
adiabatic logics where the adiabatic blocks are generally 
driven with externally supplied clock phases, each adiabatic 
block in the AAL circuit is controlled and powered with the 
control signal generated by the C&R block, and each 
adiabatic block is supplied with power only when 
performing useful computations. 
However, as we will discuss in the next section, a 
pipelined AAL circuit suffers from the problem that a 
succeeding data token in the pipeline might override its 
preceding data token. In the paper, we propose a new logic 
style, called Handshaking Quasi-adiabatic Logic (HQAL), 
which combines the advantages of adiabatic logics with 
those of  asynchronous circuits but without the problem of 
data token overriding.  
II. RELATED WORK: ASYNCHRONOUS ADIABATIC LOGIC 
As shown in Figure 1, an AAL circuit consists of two 
types of blocks, adiabatic logic blocks and Control and 
Regenerate (C&R) blocks. The power of an adiabatic logic 
block in AAL is controlled and supplied by its associated 
C&R block. The C&R block is employed to detect the 
validity of input data to the adiabatic logic block, and to 
generate ramp-like output voltage, denoted by Vc in Figure 1, 
to supply the power for the adiabatic logic block when the 
input data is valid. After the adiabatic logic of the current 
stage has generated its output data, the output data is then 
used as input data to the next logic block, and causes the next 
C&R block to become active.  
The adiabatic logic blocks in AAL can be implemented 
with 2N-2N2P logic [2], whose input and output adopt dual-
rail encoding. The C&R blocks can be implemented with 
conventional CMOS OR gates, whose transistor size is 
logic gates in Si start to evaluate logic at the same time; when 
Vci changes from HIGH to LOW, all adiabatic logic gates in 
Si generate empty tokens as output.  
The second simplified HQAL implementation is 
illustrated in Figure 4(b). If some adiabatic logic gate, 
denoted by G(i,j), has largest propagation delay among all 
logic gates in the stage Si, the completion detector of stage 
Si+1 can be replaced with a simple OR gate which takes the 
output of logic gate G(i,j) as input. For example, suppose 
that adiabatic logic gate G(1,2) in Figure 4(b) has largest 
propagation delay among the three logic gates in stage S1, the 
completion detector of S2 now can be replaced by a OR gate, 
which only detects the validity of the output of G(1,2), the 
slowest logic gate in stage S1. Figure 5 shows the schematic 
diagram for the HQAL implementation of an 8-bit pipelined 
Sklansky adder. The transistor count is 80 for the handshake 
control chain and 700 for the overall adder, so the handshake 
control chain does not cause excessive hardware overhead in 
this example. 
O
utput D
ata 
CD 
Adiabatic 
Logic Gate 
G(1, 1) 
C 
Input O
utput C
onnections
Adiabatic 
Logic Gate 
G(1, 2) 
Adiabatic 
Logic Gate 
G(1, 3) 
CD 
Adiabatic 
Logic Gate 
G(2, 1) 
C 
Input O
utput C
onnections
Adiabatic 
Logic Gate 
G(2, 2) 
Adiabatic 
Logic Gate 
G(2, 3) 
CD 
Adiabatic 
Logic Gate
G(3, 1) 
C 
Input O
utput C
onnections
Adiabatic 
Logic Gate
G(3, 2) 
Adiabatic 
Logic Gate
G(3, 3) 
S1 S2 S3
R1 R2 R3 
Vc1 Vc2 Vc3
Ack1 Ack4
(a) 
Input D
ata 
 
O
utput D
ata 
CD 
Adiabatic 
Logic Gate 
G(1, 1) 
C 
Input O
utput C
onnections
Adiabatic 
Logic Gate 
G(1, 2) 
Adiabatic 
Logic Gate 
G(1, 3) 
OR 
Adiabatic 
Logic Gate 
G(2, 1) 
C 
Input O
utput C
onnections
Adiabatic 
Logic Gate 
G(2, 2) 
Adiabatic 
Logic Gate 
G(2, 3) 
OR 
Adiabatic 
Logic Gate
G(3, 1) 
C 
Input O
utput C
onnections
Adiabatic 
Logic Gate
G(3, 2) 
Adiabatic 
Logic Gate
G(3, 3) 
S1 S2 S3
R1 R2 R3 
Vc1 Vc2 Vc3
Ack1 Ack4
(b) 
Input D
ata 
 
Figure 4.  Simplifying the hardware of HQAL. (a) Using a single C-
element for multiple adiabatic logic gates, (b) using OR gate to replace the 
completion detector. 
Handshake Control Chain  
Figure 5.  Schematic diagram for the HQAL implementation of an 8-bit 
pipelined Sklansky adder 
IV. SIMULATION RESULTS 
In order to evaluate the performance of the proposed 
handshaking quasi-adiabatic logic, an 8-bit five-stage 
pipelined Sklansky adder was implemented in both 
conventional CMOS logic and HQAL. The simulations were 
performed with Hspice for input data rate in the range of 10-
700 million operations per second using transistor models of 
BPTM (Berkeley Predictive Technology Model) 45nm 
process technology. The simulation results are summarized 
in Table I, Table II, and Table III.  
TABLE I.  POWER DISSIPATION COMPARISON BETWEEN HQAL AND 
CMOS IMPLEMENTATION OF LOGIC GATES  
 Power dissipation (nw) for 
logic gate F=A⊕B⊕C 
Power dissipation (nw) for logic 
gate F=A⋅B+A⋅C+B⋅C 
Input 
data rate
(M op./s)
CMOS HQAL
adiabatic
logic 
Power 
savings 
(%) 
CMOS HQAL
adiabatic
logic 
Power
savings
(%) 
10 47.895 1.0624 97.782 14.671 1.262 91.398
50 102.6 5.9443 94.206 31.415 6.1785 80.333
100 170.17 11.714 93.116 51.751 11.972 76.866
200 321.42 24.335 92.429 89.739 24.064 73.184
300 450.74 38.34 91.494 128.77 36.696 71.503
400 573.2 49.826 91.307 178.82 49.779 72.163
500 719.57 62.322 91.339 218.2 61.525 71.803
600 877.57 74.783 91.478 236.55 70.463 70.212
700 974.65 89.357 90.832 241.76 73.584 69.563
 
Table I gives power dissipation comparison between 
CMOS and HQAL implementation of two logic gates, which 
are used to generate the sum signal (F=A⊕B⊕C) and the 
carry signal (F=A⋅B+A⋅C+B⋅C) for a half adder. The HQAL 
adiabatic logic gate with F=A⊕B⊕C can achieve 90.8-97.8% 
reduction in power dissipation, and the HQAL adiabatic 
