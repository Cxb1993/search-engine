 1
行政院國家科學委員會專題研究計畫成果報告 
最簡定址架構之類化型小腦模型控制器的硬體實現 
Hardware Implementation of A Simple Structure of Addressing 
Technique for CMAC_GBF 
計畫編號：NSC 94-2213-E-231-011- 
執行期限：94 年 8 月 1 日至 95 年 7 月 31 日 
主持人：江青瓚   清雲科技大學電機工程系 
共同主持人：江東昇   清雲科技大學電機工程系 
 
一、摘要 
 本計畫提出開發最簡定址架構之類化型小腦模
型控制器(S_CMAC_GBF)的硬體設計，並且依照設
計完成軟體模擬以及現場可規劃邏輯閘陣列
(FPGA)晶片之硬體實現。透過軟體來驗證硬體測試
的結果，包括速度測試及即時傳送接收的測試。最
簡定址架構之類化型小腦模型控制器和類化型小
腦模型控制器之差異在於前者後有固定的定址架
構程序、記憶體數減少，同時亦保有學習收斂的特
性。最簡定址架構之類化型小腦模型控制器是將原
本同樣採用高斯函數之類化型小腦模型控制器的
每層多個區段的架構改為每層只有一個區段的簡
單定址架構。在硬體的選擇上，採用 Altera 系列晶
片做為硬體實現之標的，可使最簡定址架構之類化
型小腦模型控制器具有體積小、執行速度快、減少
記憶容量等優點，更擴展其應用之廣度與深度。實
測結果證實在速度上比電腦 I/O 速度(大約毫秒等
級)快上一千倍，各筆誤差比小於 0.25%。 
關鍵詞：最簡定址架構技術，類化型小腦模型控制
器，現場可規劃邏輯閘陣列，高斯函數，硬體實現 
 
Abstract 
The hardware design and implementation of a 
simple structure of addressing technique for 
CMAC_GBF (S_CMAC_GBF) is proposed in this 
study.  The computer software simulation and FPGA 
hardware realization are completed according to the 
design.  Hardware evaluation, including system 
speed and real time transmission/receiving, is 
validated by the result of software simulation. The 
S_CMAC_GBF is better than CMAC_GBF because 
of its simple structure of addressing technology, less 
memory usage and same guaranteed learning 
convergence.  Same Gaussian function is employed 
by S_CMAC_GBF and CMAC_GBF, but the 
structure of several blocks in each layer is replaced by 
the simpler structure of only one block in each layer.  
In hardware selection, the Altera series chips will be 
used to reach the characteristics of small size, fast 
execution speed, less memory, and broader 
application region.  In realistic evaluation, a 
nonlinear function was employed to analyze the result 
and performance.  The system speed is faster than 
computer I/O speed (about msec level) over 1000 
times. 
Keywords:  Simple Structure of Addressing 
Technique, CMAC_GBF, FPGA, Gaussian Function, 
Hardware Implementation. 
 
二、緣由與目的 
本研究的目的是要開發及設計一最簡定址架構
之類化型小腦模型控制器(S_CMAC_GBF)之硬體
架構，並以 FPGA 晶片來實現及測試。最簡定址架
構之類化型小腦控制器(S_CMAC_GBF)定義了最
簡單之定址架構程序，不僅讓類化型之小腦模型控
制器(CMAC_GBF)從此具有固定的定址程序，更加
縮小記憶體之用量。同樣地，最簡定址架構之類化
型之小腦模型控制器(S_CMAC_GBF)仍保有與類
化型之小腦模型控制器相同之學習收斂特性，亦加
強了系統性能的精確度。本研究以最簡定址架構之
類化型小腦模型(S_CAMC_GBF)為藍本，設計其硬
體架構，並以 FPGA 來實現。而此原型 FPGA 以非
線性函數學習之實際應用來測試，以展示其功能。 
 
三、研究方法 
首先介紹最簡定址架構之類化型小腦模型控
制器 (S_CMAC_GBF)及其模擬成果，接著介紹
S_CMAC_GBF 之硬體架構設計。然後以電腦軟體
模擬二非線性系統呈現目前之成果，最後以此二例
子實際測試所設計之硬體。 
 
3.1 最簡定址架構之類化型小腦模型控制器之基
本架構(S_CMAC_GBF) 
S_CMAC_GBF 的學習方法和 CMAC_GBF 是
一樣的。不過在架構上卻不一樣，在輸入變數的量
化上，不同於以往的小腦模型控制器的量化方法。
以往輸入變數量化成多個區段，並用向右位移的方
法使得每一層的區段排列都不一樣，可是在
S_CMAC_GBF 中每一層就是一個區段。而每一層
區段也是和 CMAC_GBF 的區段相同，都有不同的
高原波形，而每一層的高原波形乘上高度就等於每
一層的高斯函數波形，也就是每一層的權重值。如
圖一，根據 CMAC 的回想過程可以知道，
S_CMAC_GBF的輸出就是這20層的權重值(weight)
總和。而 S_CMAC_GBF 的學習方法則同樣以
CMAC_GBF 所使用的學習方法來修正回想過程中
所 需 的 參 數 值 ， 並 經 過 反 覆 的 學 習 後 使
S_CMAC_GBF 的輸出可得到與 CMAC_GBF 同樣
GBF_ROM
address generator1
1]0:10[ x
1_]0:10[ xmean
1_]0:9[ xvar
1]0:9[ k
2]0:10[ x
2_]0:10[ xmean
2_]0:9[ xvar
2]0:9[ kGBF_ROM
address generator2
clocktersGBF_parame]0:41[
k]0:19[
 
圖三 高斯函數記憶體位址產生器模組 
 
b. 參數記憶體模組 
參數記憶體模組包括 5 個記憶體模組，分別是
， 之 mean 參數記憶體 ( , 
)、 ， 之 variance 參數記憶體
( , )及 v 參數記憶體
( )。 ， 之 mean 參數記憶體、 ，
之 variance 參數記憶體及 v 參數記憶體儲存用來計
算輸出值所需的參數，其中 mean 參數記憶體和 v
參數記憶體有 n 筆 11 位元資料，而 variance 參數
記憶體則有 n 筆 10 位元的資料。 
1x 2x ROM__ 1xmean
ROM_2_ xmexn 1x 2x
ROM__ 1xvar ROM_2_ xvar
ROM_v 1x 2x 1x 2x
而取得每一個記憶體資料的方法是利用計數
器(counter)當作參數記憶體的輸入來取得，當計數
器為 0 時，輸出存放在記憶體位址 0 的資料，當計
數器計數到 1 時則輸出存放在記憶體位址 1 的資
料，也就是利用計數器的所計數的數值代表要取得
的記憶體之位址，因此要設計可以從 0 計數到 n 的
計數器來取得參數記憶體的資料，然後因為 mean、
variance 及 v 參數開始輸入的時間都不同，所以在
此模組中需要 3 個計數器來分別當作 mean、
variance 及 v 參數記憶體的輸入，以便在正確的時
間取得參數記憶體的資料。圖四為定址架構為 n=20
層之參數記憶體模組。 
1_]0:10[ xmean
1_]0:9[ xvar
2_]0:10[ xmean
2_]0:9[ xvar
ROM__ 1xmean
ROM__ 2xmean
ROM__ 1xvar
ROM__ 2xvar
ROM_v
menacount _]0:4[
varcount _]0:4[
vcount _]0:4[ v]0:10[
count_mean
count_var
count_v
clock
20bits11 ×
20bits11 ×
20bits11 ×
20bits11 ×
20bits11 ×
tersGBF_parame]0:41[
 
圖四 參數記憶體模組 
 
c. 高斯函數記憶體模組 
高斯函數記憶體是用來儲存乘以 1000 倍後的
高斯函數值，所以會有 762 筆 10 位元的資料，然
後依照依照查表法的方法將前一級的高斯函數記
憶體位址產生器模組所產生的記憶體位址當作輸
入來取得記憶體內的高斯函數值，並輸出到下一個
模組。因為在前一級有兩個高斯函數記憶體位址產
生器，且每一個輸入變數會產生 n 筆的高斯函數記
憶體位址，所以在此模組中也會各自取出 n 筆高斯
函數記憶體裡的高斯函數，然後再送到下一個模
組。如圖五為定址架構為 n=20 層之高斯函數記憶
體模組。 
GBF_ROM11
]0:9[ k
2]0:9[ k
)exp(]0:9[ 1k−
)exp(]0:9[ 2k−GBF_ROM2
762bits10 ×
762bits10 ×
)exp(]0:19[ k−k]0:19[
 
圖五 高斯函數記憶體模組 
 
d. 乘加器模組 
此模組由乘法器(MUX)和累加器(ACC)所組
成。當前一級的高斯函數記憶體模組輸出兩個高斯
函數值後，把這兩個高斯函數值和 (高度)先用乘
法器做相乘，可得到 S_CMAC_GBF 之權重值。因
為前一級的高斯函數記憶體會產生n筆的高斯函數
值，而參數記憶體中也會產生 n 筆的 v(高度)，所
以就會得到 n 筆的權重值，最後將所得到的 n 筆的
權重值放入累加器中累加，當累加完後的結果即為
S_CMAC_GBF 的輸出。 
v
在此模組中也要設計一個的計數器，用來判斷
累加器是否將 n 筆權重值累加完成。當計數器從 0
計數到 n-2 時，累加器內的累加暫存器會一直和輸
入相加，當計數器計數到 n-1 時，則將累加暫存器
的資料輸出，同時做清除的動作，使累加暫存器為
0，以便讓累加器可以重新累加第二筆輸入變數的
權重值。圖六為定址架構為 n=20 層之乘加器模組。 
)exp(]0:9[ 1k−
)exp(]0:9[ 2k−
MUX1
ACC
counter
[4:0]count
v]0:10[
clock
weight]0:30[
MUX1
exp_]0:19[ m
y]0:35[
)exp(]0:19[ k−
圖六 乘加器模組 
 
3.3 S_CMAC_GBF 硬體架構之程式設計 
在硬體架構程式設計所採用的軟體為Altera公
司的 QuartusⅡ 4.0 版硬體設計軟體。至於硬體描
述語言(HDL)則使用 Verilog HDL 來設計。在程式
中每1個動作的啟始時間都是由時脈週期的上緣觸
發來決定，如此可以正確的計算出運算所需的時
間，當作計數器及每 1 個程式動作的基準點，可避
免因為硬體在做運算時所出現的時間延遲問題。 
設計以 2 個輸入、1 個輸出及定址架構為 20
層 的 S_CMAC_GBF 為 主 。 其 中 輸 入 是
S_CMAC_GBF 要模擬的函數之各種可能的數值，
實際的範圍在-1 到+1 之間，而為了解決小數的問
題及提高解析度，所以選擇乘以 1000 倍當作輸入
變數的範圍，也就是-1000 到+1000 之間(11 位元)，
而輸出則是為配合硬體測試之 RS232 串列傳輸而
限制其範圍在-100 到+100(8 位元)之間。 
設計此 S_CMAC_GBF 的步驟如下：先以輸入
變數( , )和已學習完成之平均值(mean)、變異數
(variance)計算各自的高斯函數 中的 k 值。
每 1 個輸入變數各有 20 筆的平均值和變異數，所
1x 2x
)exp( k−
 3
(2) 建立模擬波形檔：開啟一個可以用來模擬
硬體動作的波形檔，然後加入所設計之 3
個輸入及 1 個輸出，包括 1 個時脈頻率
clock、2 個 11 位元的 S_CMAC_GBF 之輸
入 、 及 1 個 8 位元的 S_CMAC_GBF
之輸出 y。 
1x 2x
(3) 設定時脈頻率(clock)：在系統的頻率設定
上，可從 QuartusⅡ的 Compilation Report
的 Timing Analyzer 中所得到的系統最高頻
率 來 選 擇 ， 而 系 統 的 頻 率 高 低 和
S_CMAC_GBF 的輸出所需時間有非常直
接的關係，當系統的頻率愈高時，每一個
輸出所需的時間會愈少。而當本論文設定
除法器之計算週期為 20，且使用的邏輯閘
數目沒有超過所選擇的晶片時，從 Timing 
Analyzer 中可以知道系統的最高頻率為
42.02MHz，也就是等於 23.8ns，因此選擇
使用 25ns 為一個 clock 來當作模擬的時脈
頻率，相當於系統頻率為 40MHz。 
(4) 設定模擬時間：在選擇了要採用的時脈頻
率後，再來是選擇要模擬的時間範圍，因
為此 S_CMAC_GBF 的硬體架構為 20 層，
所以每 1筆輸入變數只需要 20 個週期即可
以產生 1 筆輸出，而在選擇 1 個週期為
25 後 就 可 以 算 出 1 筆 輸 出 需 要ns
snsns μ5.05002520 ==× 的時間，而模擬
的輸入變數有 1024 筆，並且由表一可知，
第一筆輸出需要 53 個週期，所以還要再加
上 53-20=33 個週期的時間，也就是
snsns μ825.08252533 ==× ，然後就可算出
所有的輸入變數需要模擬的時間為
mssss 513.0825.512825.05.01024 ≈=+× μμμ
，因此設定模擬時間為 0.513ms。 
(5) 設定輸入變數：接下來設計 2 組 1024 筆的
資料當作模擬的輸入變數，範圍為-1000 到
+1000 之間，在此是採用(8)式及(9)式函數
於 Borland C 軟體模擬所產生之 2 組 1024
筆測試 pattern 當作輸入變數，取範圍為
-1000 到+1000，然後連續的每 20 個週期
( sμ5.0 )輸入 1 組輸入變數。 
(6) 開始進行模擬：當完成了所有的設定後，
就可以開始進行 S_CMAC_GBF 之硬體模
擬，並在完成模擬之後由波形圖顯示輸出
結果。 
圖八為 QuartusⅡ軟體的模擬結果。此模擬的
輸出 y 為 8 位元，如將此模擬的 8 位元輸出除以 100
倍後可驗證此輸出和函數 f及函數g的目標值相符。 
 5
 
(a) 從輸入變數 到高斯函數值( )之模
擬波形 
1x )exp( 1x−
 
(b) 從高斯函數值( )到 weight 之模擬波形 )exp( x−
 
 
(c) 從 weight 值到累加器輸出 out 之模擬波形 
 
 
(d) 多筆連續輸出 y 
 
 
(e) 每一筆輸出所需的執行時間之模擬波形 
圖八 QuartusⅡ軟體模擬函數 f 之模擬波形 
 
而針對函數 f 及函數 g 所做的 QuartusⅡ軟體
模擬結果將其除以100後求得的總平方根誤差及平
均誤差列於表二，而其目標值與 Quartus II 輸出值
之比較及誤差如圖九、圖十。 
由於比較 Borland C 及 QuartusⅡ的軟體模擬
結果後可發現兩者有誤差，其原因之一為 Quartus
Ⅱ模擬之輸入變數、參數及高斯函數值皆是取小數
點後3位數並以四捨五入的方式所取得之整數型態
的數值，因此 tss 才會產生差異。還有因為程式中
之數學運算後之結果如有小數的話會以無條件捨
去的方式捨去，如此才會造成 tss 之差異。另外一
個因素則是 S_CMAC_GBF之輸出是限制在-100 到
+100 之間的範圍，因此捨去之數值也會影響 tss 的
大小，雖然如此，但其誤差還可維持在很小且可接
受之範圍內。 
 
表二 QuartusⅡ軟體模擬函數 f 及函數 g 之總平方
根誤差及平均誤差 
Function tss Average error/pattern
),( 21 xxf  4.2867 0.0042 
),( 21 xxg  4.3926 0.0043 
 
-1.5
-1
-0.5
0
0.5
1
1.5
0 200 400 600 800 1000
target out/100
 
(a) 函數 f 目標值與 S_CMAC_GBF 輸出值之比較 
 
在速度上 FLEX10KE 系列採用  16MHz 及
32MHz 之系統頻率，則平均每一筆輸出所需之時間
分別為 sec25.1 μ 與 sec625.0 μ 。而在 Stratix 系列則
採用 50MHz 之系統頻率，則平均每一筆輸出所需
之時間為 sec4.0 μ 。在正確性上，對於函數 ( )21,ˆ θθf
其誤差總值為  與  Quartus 模擬結果
一樣。另一函數 也得到一樣之結果。完整
之紀錄列於表四。圖十三與十四分別為函數
與 目標值與 FPGA 輸出值之 3 維
立體比較圖。 
4.5908=tss ( 21,ˆ θθg
 7
)
)( )21,ˆ θθf ( 21 ,ˆ θθg
 
表四 Borland C、Quartus II 與 Hardware 其 tss 值之
比較 
 Training Test Quartus II Hardware
20e_f 0.6531 0.4794 4.5908 4.5908 
20e_g 0.7401 0.7933 4.3926 4.3926 
 
-1
-0.5
0
0.5
1
-1
-0.5
0
0.5
1
-1
-0.5
0
0.5
1
 
(a) 函數 之目標值 ( 21 ,ˆ θθf )
 
-1
-0.5
0
0.5
1
-1
-0.5
0
0.5
1
-1
-0.5
0
0.5
1
(b) 函數 之 FPGA 輸出值 ( 21 ,ˆ θθf )
)圖十三 函數 目標值與 FPGA 輸出值之 3
維立體圖比較 
( 21 ,ˆ θθf
-1
-0.5
0
0.5
-1
-0.5
0
0.5
-1
-0.5
0
0.5
1
 
(a) 函數 ( )21 ,ˆ θθg 之目標值 
-1
-0.5
0
0.5
1
-1
-0.5
0
0.5
-1
-0.5
0
0.5
1
 
(b) 函數 ( )21 ,ˆ θθg 之 FPGA 輸出值  
圖十四 函數 ( )21 ,ˆ θθg 目標值與 FPGA 輸出值之 3
維立體圖比較 
 
4.2 討論 
從軟體模擬與硬體實測之結果，展示出設計之
S_CMAC_GBF硬體具有優異之速度與正確性。在
實測中一個輸出所需時間遠比電腦之I/O快，在精
準度上雖然較電腦為差，其原因為位元數所限，捨
去法所造成之誤差。雖說如此其每筆測試誤差僅為
0.0045以下，相當於不到0.25%之誤差已獲至良好
之成果。在記憶體使用上，此二函數僅使用
20×5=100個記憶體也遠比CMAC_GBF少。 
 
 
