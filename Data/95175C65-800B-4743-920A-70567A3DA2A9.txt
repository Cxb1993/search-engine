 1
報告內容 
    隨著個人行動計算設備與無線通訊網路的蓬勃發展，由於行動隨意式網路(Mobile Ad Hoc 
Networks, MANET)是一種於無基礎建設架構，它可以在任何時間、地點、環境來建置，加上不斷
進步的無線通訊以及電池技術的發展，使得 MANET 的各項應用如雨後春筍般的出現，已成為無線
通訊科技發展的重點之一。然而，MANET 是經由無線的連結與可任意移動的行動節點(node)所建
構成的網路，節點與節點之問無法預設互信的關係(trust relationship)，再加上每個節點可任意移動，
而網路拓樸(topology)可能會快速地改變、重組。因此，如何在 MANET 環境中提供安全性的保障
已成為重要的課題。 
    入侵偵測系統(Intrusion Detection System, IDS) 是網路安全中一個重要角色，藉由收集本身或
其他系統及網路上的資訊，IDS 能即時偵測到由內部或外部對系統所進行不當地破壞，或沒有經過
授權的系統資源使用。然而，與有線網路環境相比，IDS 在 MANET 環境下的部署面臨更多的困難，
由於沒有類似有線網路中有集中式的監控點，因此在正常節點與惡意節點之間的行為區別不夠明
顯，同時由於行動設備受限於有限的能源和頻寬，而 IDS 在偵測時會耗費大量的能源與頻寬，如何
在能源限制下有效部署 IDS 也是一個重要的研究議題。另外，當 MANET 有網路安全事件發生時，
(例如：當某個惡意節點的不當運作且迅速移動時)，如果沒有一個正確與迅速 IDS 回應機制(IDS 
response)的完善後續管理服務，再好的 IDS 也無法達到應有的效益。因此，在 MANET 中需具有效
益的 IDS response 機制。然而，在 MANET 中惡意節點可能移動迅速以迴避偵測，所以 IDS response
機制必須能迅速緩和(mitigate)安全的漏洞所帶來的傷害，並利用聯合防禦的方式，達到區域聯防。
除此之外，一個有效益 IDS response 機制不僅要能將一般的狀態資訊記錄儲存起來，且能進一步的
分析攻擊者的攻擊模式和來源，並能還原(Reconstruct)攻擊時的原貌，當作未來法律鑑識(Forensics)
之用。但是，由於 MANET 的每個節點資源有限，因此一個有效益的 IDS response 機制亦需能依儲
蓄容量狀況來動態調整收集的資料量，且無論在即時(real-time)或非即時的記錄之特定事件下，均
能還原(reconstruct)及鑑識(forensics)。所以如何在有限資源情況下，建立一個新的證據收集控管機
制來確保網路鑑識資料收集的品質，並且能針對鑑識服務要求和封包接收遺失兩部分降低損耗成本
是一大的挑戰。 
本計畫已將研究成果發表於“A Context Adaptive Intrusion Detection System for MANET”, Computer 
Communications, (SCI/EI) Impact Factor: 0.933，詳細研究內容報告請參閱以下論文。 
ment strategy suggested by the National Institute of Standards and
Technology (NIST) in traditional IP networks [2], the MANET IDS
deployment needs to adhere to unique requirements owing to
the ad hoc and mobile nature of a MANET.
A network node intrusion detection (NNID) system is installed
on each node to be protected, and serves to monitor only packets
sent to and from the particular node in which it resides [3]. This ba-
sic IDS deployment strategy resolves major operational issues
including the lack of pre-trust relationships, quick topology change
and encryption. However, NNID does not cater to resource con-
straints on nodes and hence, it is not suitable for application in
MANETs. By leveraging the NIDS deployment strategy, we devel-
oped a context adaptive IDS controller to advise the IDS to contin-
ually perform intrusion detection while being prepared for a
possible ‘‘cut through” if it is likely that the energy in the node will
not be sufﬁcient to sustain a lifetime requirement. We then pro-
posed a Context Adaptive Intrusion Detection System (CAIDS)
which is able to adapt to the current node context – with consider-
ation given to residue energy, security threats and trafﬁc loading –
for accommodating and inspecting new arriving packets. The CAIDS
system is ﬁrst modeled as a Continuous TimeMarkov Chain (CTMC)
[4] and then solved by a commercial optimization tool, LINGO. Per-
formance is evaluated by a reward function that discovers a proﬁt-
able way to perform intrusion detection and delivers security
beneﬁts while meeting the energy budget. This study demonstrates
empirically that the CAIDS model intelligently monitors and recog-
nizes security breach attempts while adhering to the resource bud-
get plan over the period of the expected network lifetime.
The remainder of this paper is organized as follows. Section 2
reviews previous works on MANET IDS deployments. Section 3 de-
scribes our proposed Context Adaptive Intrusion Detection System,
CAIDS. Section 4 details the CAIDS model and provides an example
for the reward function. Section 5 illustrates the numerical analysis
for the reward function of CAIDS. Finally, Section 6 draws a conclu-
sion and outlines possible future extensions of this work.
2. Related works
In Mobile Ad Hoc Network (MANET) environments, each node
acts as a router to transfer, receive and determine routes in the net-
work. Researchers and practitioners have addressed many techni-
cal challenges concerning MANET operations such as limited
resources and rapid topological changes. Among the challenges ad-
dressed for MANETs, the challenge of providing good security
assurances for communication through the network is the most
important. In particular, an Intrusion Detection System (IDS) plays
an essential role in overall security protection and is critical for
identifying potential attacks. A good MANET IDS should provide
an accurate detection rate. However, without applying appropriate
deployment strategies, even the best IDS cannot achieve its pri-
mary defense goal of the intrusion detection and protection.
Conventional IDSs can be categorized as either host-based or
network-based with respect to the type of information sources
[2]. Host-based IDSs (HIDSs) can analyze activities that occur in
an individual computer system. This allows security threats to be
detected directly from the processes that the users are involved
in. On the other hand, the Network-based Intrusion Detection Sys-
tem (NIDS) employs a centralized packet snifﬁng mechanism to
monitor all network trafﬁc through the protected domain. In the
infrastructure network environment, NIDS can be deployed in the
following four possible locations [2]: (1) demilitarized zone
(DMZ); (2) outside an external ﬁrewall; (3) major network back-
bones; and (4) critical subnets. In traditional IP networks, NIDS
can be easily deployed based on the IDS deployment strategy rec-
ommended by NIST. However, there are technical challenges inher-
ent to MANET environments. For instance, topology can change
rapidly due to mobile node movement or signal fading in MANET
environments, and as a result conventional IDSs deployment
schemes may not perform effectively. Consequently, the IDSs de-
signed to operate in MANET require additional features and face
deployment issues as follows:
 No pre-trust relationship: There is no trusted central server and
no pre-trust relationship among nodes. As such, each node
needs to ﬁnd a cost-effective way to protect itself.
 Sudden topology change: It is difﬁcult to set up a secured con-
nection and maintain a trusted route after a sudden topology
change. If a node with reliable and stable IDS services, the issue
remains to locate a new IDS node when it has been
disconnected.
 Encryption: Nodes encrypt network trafﬁc packets to ensure the
privacy of sensitive information. As a result, NIDS will not
detect any intrusion because it cannot analyze encrypted
packets.
 Resource constraints: MANET is composed of resource-con-
strained nodes. Any IDS for MANET must ﬁnd a cost-efﬁcient
way to operate and deliver the expected security beneﬁts
within resource constraints.
In consideration of network costs for real-time packet sampling
and packet examination hardware, Kodialam and Lakshman [5]
have developed a game theory approach for effective deployment
of NIDS that does not exceed a given total sampling budget. Their
results show that there is a trade-off between the intrusion path
picked by the intruder and the sampling strategy chosen by the
network operator. Similarly, Agah et al. [6] have used a game the-
ory approach to develop a defense strategy between an attacker
and a wireless sensor network. Conversely, Patcha and Park [7]
have developed Utility based Dynamic Source Routing (UDSR) to
prevent attacks. UDSR incorporates the total utility of each route
where utility is a value that is maximized in the game theory ap-
proach. However, it is very difﬁcult to replicate their approach
for MANET environments because heavy game theory computation
processes are needed to recalculate system parameters whenever
there is a change in link state or topology.
A typical hierarchical routing protocol in a MANET consists of
intra-cluster and inter-cluster routing, whereby nodes are grouped
in clusters and each cluster is represented by a cluster head [8]. The
inter-cluster communication is enabled through cluster-head
nodes. Intuitively, cluster heads represent the best location to per-
form the IDS function [9]. Obimbo et al. [10] proposed a tightly
coupled IDS location method, integrating IDS with routing proto-
cols to achieve certain security levels. However, their tightly-cou-
pled approach is not appropriate for MANETs due to two factors:
(1) the system will crash if an attacker compromises a node at a
high position in the hierarchy; and (2) it is very costly to execute
clustering algorithms where cluster heads should be trusted en-
ough in conﬁdence to carry out the tasks while maintaining en-
ough energy for communication and intrusion detection. In
contrast, Mell and McLarnon [11] have proposed using internal
nodes in the system hierarchy as mobile agents that randomly
move around the network. Mobile agents are able to prevent the
system from crashing but it is very expensive to maintain mobile
agents due to trust and energy issues.
Huang and Lee [12] proposed an improved cluster formation
protocol (each node with its own intrusion detection agent) run-
ning under run-time resource constraints, which outperforms con-
ventional cluster-based detection schemes (with the cluster
functioning as the intrusion detection agent). However, Huang
B.-C. Cheng, R.-Y. Tseng / Computer Communications 34 (2011) 310–318 311
case energy consumption (WCEC). In other words, the reserved
energy is calculated by Eq. (1) for this round, which is consumed
during operations of regular packet processing and extra intru-
sion detection cost if needed
X ¼ EðL=TÞ  C ð1Þ
Therefore, this reserved energy is no longer available unless it is
released when this period expires.
 Alert collector (AC): the AC gathers security alerts from either
other nodes or the system’s experience [15]. It performs the
basic alert aggregation operations that include alert format
standardization, clustering and alert correlation. After a set of
subsequent alerts has been received, they are correlated with
the Common Vulnerabilities and Exposures (CVE) identiﬁer in
order to count subsequent alerts over the same period. The
attacking probability (w) is used as a reference based on which
current network security status is indexed by severity level and
the total number of collected alerts.
w ¼
X10
i¼1
Wi  NiCi ð2Þ
where i is the severity level ranged from 1 to 10; Wi is the
weighting factor for the severity level i; Ni is the total numbers
of alerts at the severity level i; Ci is the threshold of the alert
numbers at the severity level i.
The AC helps estimate the probability of being attacked by an in-
truder by providing the security attacking probability.
 Trafﬁc recorder (TR): TR records and computes the trafﬁc load in
terms of the service requesting and servicing rate at the session
level.
 IDS controller: the objective of the IDS controller is to determine
whether or not to perform intrusion detection on received pack-
ets. The IDS controller calculates an optimal intrusion detection
execution plan for a MANET node according to the energy bud-
get restrictions; while considering other context information
(such as security threats and trafﬁc loading). The energy budget
used should at a minimum enable mobile nodes to develop a
clearer understanding of current security levels, intrusion
detection options, and potential outcomes of various planning
and decision making scenarios. In this section, the emphasis is
on how the IDS controller is designed to adapt to the current
context in terms of residual energy, current alert levels to
potential security threats and the trafﬁc load. The pseudo-code
of the IDS controller is given in Fig. 2.
4. Context Adaptive Intrusion Detection model
This section details our proposed Context Adaptive Intrusion
Detection System (CAIDS) model, which is designed for enabling
MANET nodes to operate efﬁciently in various security contexts.
In this paper, we consider a comprehensive model that encom-
Energy Sensor
Alert Collector
MANET Node
Traffic Recorder
Application
MAC
Preprocessor
IDS Controller
 ρ
ψ
Ε
Context Adaptive Intrusion Detection System
Intrusion Detection Engine
Fig. 1. CAIDS architecture.
Fig. 2. The pseudo-code for the IDS controller.
B.-C. Cheng, R.-Y. Tseng / Computer Communications 34 (2011) 310–318 313
RMRT ¼ cMRT
Xn
j¼o
Xm
i¼0
iPi;j ð11Þ
RTRT ¼ cTRT
Xn
j¼o
Xm
i¼0
j 1 w j
mþ n
 
Pi;j ð12Þ
The reward function of CAIDS can thus be deﬁned as:
R ¼ RMRT þ RTRT
¼ cMRT
Xn
j¼o
Xm
i¼0
iPi;j þ cTRT
Xn
j¼o
Xm
i¼0
j 1 w j
mþ n
 
Pi;j ð13Þ
4.2. An example of CAIDS model
In order to further clarify our proposed CAIDS model, we pro-
vide an example here to detail how the reward, R, can be calcu-
lated. For a round we assume that the reserved energy X is 100
energy units, and that the attack probability w is 0.3. The parame-
ter a is set to 0.5 while the trafﬁc intensity of the route trafﬁc (de-
noted q) is set to 80, where l0 = l1 = l. We also assume that the
ratio eTRT/eMRT = 0.7 (or eMRT/eTRT = 1.482). With eTRT = 1, we obtain
eMRT = 1.482 eTRT = 1.482. The quantities m and n can be derived
from Eq. (8):
m = aX/eMRT ﬃ 34, where m is a positive integer,
n = (1  a)X/eTRT = 50, where n is a positive integer.
Based on Eq. (13), we assume that the reward is equally
weighted for both MRT and TRT classes (cMRT = cTRT = 1 unit).
Hence, the reward, R is obtained:
R ¼ RMRT þ RTRT ¼
X50
j¼0
X34
i¼0
iPi;j þ
X50
j¼0
X34
i¼0
j 1 0:3 j
34þ 50
 
Pi;j
An optimization tool, LINGO, is used to solve the stationary proba-
bility for each operating state of the CAIDS model. A value for re-
ward can then be determined, which in this case is 69.699 units.
0 0.2 0.4 0.6 0.8 1
AttackProbability ( Ψ )
20
40
60
80
R
ew
ar
d 
(R
)
A-TRT
α=0.2
α=0.4
α=0.6
α=0.8
A-MRT
Ω =100
ρ=λ/μ=80
ε MRT /ε TRT =1.482
Fig. 4. Reward, R, of the CAIDS model with variable attack probability, w.
Fig. 3. Two-dimensional state transition rate diagram for the CAIDS model.
B.-C. Cheng, R.-Y. Tseng / Computer Communications 34 (2011) 310–318 315
 In an extreme case with the attacking probability w = 1 the A-
TRT performs the worst, with a minimum reward value. A-
MRT still maintains a constant reward because it always per-
forms security monitoring. Of all the three schemes, the CAIDS
scheme with a = 0.8 generates the highest reward as indicated
in Fig. 4.
The proposed IDS controller can adjust the value of a appropri-
ately in response to different security levels. From the above re-
sults obtained, we would recommend a larger value of a for the
network that is vulnerable to attacks; a smaller value of a is recom-
mended when the arrival router trafﬁc is secure. By providing dy-
namic adjustment to the value of a, CAIDS is more efﬁcient than
both A-MRT and A-TRT when dealing with the security threats
while under energy constraints.
5.2. The impact of the ratio of eMRT/eTRTon the reward function R
In this section, we discuss the impact of eMRT/eTRT on the reward
function R, where the eMRT/eTRT is deﬁned in Eq. (5). Eq. (6) implies
that the ratio eMRT/eTRT is strongly correlated to the quantity of
MRT-class router trafﬁc, m. The value of m is small when eMRT/eTRT
is large, whereas the value of m becomes large when eMRT/eTRT be-
comes small. Fig. 5 presents the reward, R, versus the energy ratio
eMRT/eTRT for various values of a, with other parameters ﬁxed. Here,
we set q = 80, X = 100 units and w = 0.3. In Fig. 5, the Y-axis illus-
trates the reward function, R, and the X-axis denotes the value of
the energy ratio eMRT/eTRT, which varies from 1.111 to 2.5. Without
any loss of generality, the value of eTRT is set to one unit of energy.
From Fig. 5, we make the following observations:
 The rewards for A-TRT remain constant when eMRT/eTRT varies
because A-TRT does not perform security monitoring and thus
energy consumption is reduced.
 Consider an extremely ‘‘best-case” scenario where performing
security monitoring consumes zero energy (i.e. eMRT/eTRT = 1).
Under such circumstances, A-MRT generates a maximum
reward value. However, in practice the monitoring task may
introduce signiﬁcant energy overhead, especially for a MANET.
As the energy overhead for performing the security monitoring
increases gradually (i.e. the ratio eMRT/eTRT increases gradually),
the reward value of A-MRT decreases rapidly.
 CAIDS always performs better than the A-MRT when the ratio
eMRT/eTRT is greater than 1.4.
 CAIDS may perform worse than the A-MRT scheme if execution
of the monitoring task introduces too much energy overhead
(i.e. the ratio eMRT/eTRT = 2.5 and 2); however, CAIDS can still
outperform A-MRT if the ratio eMRT/eTRT is small (eMRT/
eTRT = 1.482; i.e., eTRT/eMRT = 0.7).
Based on variations ineMRT/eTRT, the appropriate value of a can be
chosen to meet the energy cost required to perform monitoring. As
the energy required to monitor becomes higher, we can choose a
smaller a value. Conversely, a larger a value can be chosen when
the energy required to monitor becomes lower. By dynamically
adjusting the value of a, CAIDS is more ﬂexible and robust than
either A-MRT or A-TRT in dealingwith various energy requirements.
5.3. The impact of q on reward function R
In this study, we analyze the performance of our CAIDS model
under various trafﬁc intensities ranging from 20 to 200. Fig. 6
20 40 60 80 100 120
ρ=λ/μ
20
40
60
80
R
ew
ar
d 
(R
)
A-TRT
A-MRT
Ω =100
Ψ (Attacked Probability) = 0.3
εMRT /ε TRT = 1.428
Fig. 6. The reward, R, of the CAIDS model with trafﬁc load q (q = k/l).
B.-C. Cheng, R.-Y. Tseng / Computer Communications 34 (2011) 310–318 317
 3
附錄 
論文發表成果(A) 
本計畫皆能順利達到預期目標，在計畫期間(08/2009~10/2010)共計產出下列成果(計 4 篇期刊
論文、2 篇國際學術會議論文、2 篇國內學術會議論文) 
z 期刊論文 
1. Bo-Chao Cheng, Ryh-Yuh Tseng, “A Context Adaptive Intrusion Detection System for 
MANET”, Computer Communications, Online publication complete: 13-JUL-2010, DOI 
information: 10.1016/j.comcom.2010.06.015 (SCI/EI); Impact Factor: 0.933 
2. Bo-Chao Cheng, Huan Chen, Ryh-Yuh Tseng, “Quality Assurance Evidence Collection Model 
for MSN Forensics”, Special Issue on Intelligent Manufacturing system and Security & 
Assurance (IMSA) for Journal of Intelligent Manufacturing, Volume 21, Number 5, 
p.613~p.622, 10/2010, (SCI/EI); Impact Factor: 0.938 
3. Bo-Chao Cheng, Yi-An Tsai, Guo-Tan Liao and Eui-Seok Byeon, “HMM machine learning 
and inference for Activities of Daily Living recognition”, Journal of Supercomputing (JoS), 
Volume 54, Number 1 p.29~p.42, 10/2010. (SCI/EI); Impact Factor: 0.687 
4. Bo-Chao Cheng, Huan Chen and Guo-Tan Liao, “A Novel Marking Probability Distribution 
Using Probability Propagation in Hierarchical WSN”, LNCS 5487, pp. 265-274, 
Springer-Verlag, April 2009. [EI] 
z 學術會議論文 
國際： 
1. Guo-Tan Liao, Li-Ru Chen, Bo-Chao Cheng, Huan Chen and Ping-Hai Hsu, “Building 
Intrusion Path Graphs for Security Incident Handling Procedures”, The 2010 International 
Symposium on Communications and Information Technologies (ISCIT 2010), Tokyo, Japan, 
Oct. 26-29, 2010. 
2. Bo-Chao Cheng, Guo-Tan Liao, Wei-Jie Liau and Huan Chen, “Worm Infection Locality 
Supports for Efficient Traceback Forensics”, The 3rd International Workshop on Forensics for 
Future Generation Communication environments (F2GC-09), Korea 
 
國內： 
1. 陳俊佑 楊孟翰 廖國潭 鄭伯炤, “Message Verification Based on Multi-level Fuzzy 
Comprehensive Evaluation in VANETs＂, 中華民國第十八屆模糊理論及其應用研討會 
2. 林敬凱、沈豊彬、鄭伯炤, “Enhancement of Forensic ICMP Traceback Investigations through 
Embedded MIB Module Techniques”, TANET 2010 臺灣網際網路研討會 
 
 2
一、參加會議經過 
    此 Workshop 會議（F2GC-09）於 2009 年 12 月 10 日至 2009 年 12 月 12 日在韓
國濟州島西歸浦市的 Haevichi Hotel & Resort 舉行，此會議地點是蠻大型的飯店，位
於海邊，風光明媚，加上空氣清新，令人心曠神怡。此次 F2GC-09 是與 The 2nd 
International Conference on Computer Science and its Applications (CSA 2009)及其他的
Workshop 會議合併舉行。10 號下午為會議正式開幕演講，而我們的論文被安排於
2009/12/11 號下午的 Section 17 中發表，我們於 12 號下午會議結束後便搭機回國了。
與會當中，我們除了聆聽各國發表論文者演講之外，學習其欲表達之資訊，並拍照
加以記錄留念，以供回國之後對有興趣之論文議題進一步研究。 
   
 
二、與會心得 
   雖然此次參加會議的演講主題與無線網路的移動管理及瀰漫式運算有關，不過我
們對於其中一篇發表論文“A Privacy-Secure Content Trading System for Small 
 4
發表之論文收錄於此會議論文集第二冊 555~560 頁，以下附上該論文第一頁之摘要。 
 
 
 
Collected digital evidences can also be useful in the juridical 
context according to the forensic information [2][3]. However, 
it is very difficult to use raw traffic data to reconstruct the 
attacking path and thus locate the source of the attack. 
Traceback problem, as such, becomes an imperative and very 
challenging task in network forensics. There exist many 
solutions to address the traceback problem. Some researches 
are ineffective and some are operated under special network 
scenarios. Random Moonwalk Trace-Back Algorithm (RMT) 
developed by the Carnegie Mellon University is one of the 
most effective approaches to address this problem. However, 
RMT neglects to consider the locality features in attacks. In 
this paper, we propose a more efficient “Locality Steering 
Trace-Back (LST)” algorithm to improve the performance of 
the RMT by the locality features of worm infections. 
The rest of this paper is organized as follows. Section 2 
reviews the past works on the network forensics. Section 3 
presents the principle and illustrates the pseudo-code of the 
proposed LST algorithm. In Section 4, the simulation results of 
the LST is evaluated and compared with that of the RMT. The 
performance metrics in terms of positive rate, false negative 
rate and computation time are used to evaluate the 
effectiveness of the proposed algorithm. Finally, Section 5 
summarizes the contributions and future work. 
II. RELATED WORK
Two network tracing problems are widely being studied in 
network forensics: IP traceback and traceback across stepping-
stones. The IP traceback problem focuses on how to identify 
the origins of IP packets when the source IP addresses of these 
packets are spoofed. The traceback across stepping-stone 
problem focuses on how to identify the origin of an attacker 
through a chain of compromised intermediate hosts (the 
stepping stones). The emphasis of this work is restricted to the 
second issue that is so-called stepping-stone traceback.  
There are several approaches that have been proposed to 
resolve the IP traceback issue. Generally speaking, it can be 
classified into two typical solutions: probabilistic packet 
marking (PPM) [4][5] and ICMP traceback [6].  
• The PPM approach enforces marking the packets on 
routers based on the marking probability. The marking 
is done by attaching the traversed path information and 
the addresses of the routers on the marked packets. 
According to the marking packets collected on the 
victim, it is possible to trace back the attacker by 
reconstructing the attack path. 
• On the other hand, the ICMP traceback approach 
operates as follows. Every router chooses, with a very 
small probability, one of the forwarding packets as a 
sample packet whose content is copied into a special 
ICMP traceback message including information about 
the adjacent routers along the path to the destination. 
By this means, the victim can reconstruct the attack 
path and locate the original attacker. 
Other schemes on IP traceback researches can be found in 
Ning’s short tutorial background on IP traceback [7]. However, 
the above two IP traceback schemes have high computing 
complexity which may exhaust the computing resource of 
routers. These schemes also introduce a lot of traffic overheads. 
To address the stepping-stone traceback issue, a novel 
scheme called the Random Moonwalk Trace-Back Algorithm 
(RMT) [8][9] was proposed by Carnegie Mellon University 
(CMU). RMT can traceback an attack and reconstruct the 
attacking path according to the logs on the tracing nodes. 
RMT sets up network conversation information, the host 
contact graph (HCG), constructed on the collected traffic flow 
logs. HCG marks each conversation flow with a timestamp to 
indicate when the traffic flow occurs. Figure 1 shows a HCG 
of the hypothetical network that is undergoing many host 
conversation flows which include normal traffic (denoted as 
gray lines) and the stepping-stone attack traffic (marked as 
black lines). Each horizontal line from A to O represents a 
host in this network and each arrow stands for communication 
between two hosts. The host A is the root of the stepping-
stone attack, and the HCG contains 3 major branches 
propagated into a host attack tree: (1). A→B→C; (2). 
A→D→G and A→D→E→F; and (3). A→K→M→O. With the 
HCG constructed, RMT is able to identify attack source and 
reconstruct attacking path.  
Figure 1. The host contact graph (HCG) 
However, RMT fails to consider the locality features of the 
attacks. In this paper, we propose an efficient “Locality 
Steering Trace-Back (LST)” algorithm to improve the 
performance of the RMT with the locality features of the 
worm infection. The proposed LST algorithm is designed to 
follow the trail of a worm attack based on the correlation and 
locality of the attacking behaviors. It thus can have high 
accuracy and performance for traceback. 
III. LOCALITY STEERING TRACEBACK ALGORITHM
After an extensive observation on the network worms 
infection behaviors [10][11], we find that worms belong to the 
same type of the attack style behaves similarly. Such similarity 
represents the common characteristics of the specific attack. 
There exist strong correlations between two similar attacks. 
These correlations are called “the localities”. In this section, we 
first describe an AI computer security tool can embed our 
proposed solution, the locality steering traceback (LST) 
algorithm, to enhance security incident management. Then we 
explore four types of localities which will be applied to our 
proposed trackback algorithm, the LST algorithm. 
resides in the locality (L) input parameters in order to 
characterize attack behaviors. Table 2 outlines the parameters 
used in the LST Algorithm. The inputs parameters include W,
d, ǻt, L, N, d_walk and W_walk. The notation and parameter 
description are summarized in Table 2. The output derived is 
the Host Attack Tree (HAT) including the infected nodes on 
the attack paths. 
Table 2. The LST running parameters 
 Description Initial Value 
W The total number of walks wanted to walk through.  User Input
d The maximum steps for each walk.  User Input
ǻt
The time interval defined as the maximum 
time allowed between two consecutive edges 
in a walk. 
User Input
L One worm is categorized which kind of locality while spreading infection. 
User Input
N The returned edges with the highest traversal count of n. 
User Input
d_walk The current step count for this walk sample.  0 
W_walk The total number of walks traversed. 0 
With the HCG produced by Netflow and flow-tools, LST 
uses worm infection locality to “walk” through the potential 
attack path on the HCG to derive the HAT. The worm 
infection locality can be expressed in (1) where L is computed 
by the sum of every locality, and ωi is the weight of each 
locality (li).
¦
=
=
=
di
ai
ii lL *ω  (1) 
The execution of LST is described as follows and the pseudo 
code is shown in Figure 3. 
Figure 3. LST pseudo code 
Step 1: Locate the notified victim node in HCG and set the 
parameters d, ǻt, W, and L for this victim node. 
Step 2: Execute the loop till W_walk is equal to W, or else go 
to step 5. 
Step 3: Select an edge in the front of time slot ǻt according to 
L, then add one to d_walk, and then accumulate the 
count of the selected edge by 1.  
Step 4: Determine the Boolean (d_walk is not equal to d) AND 
Boolean(existence of edges in front ǻt of time slots), 
and if it is TRUE, go to step 3, or else add one to 
W_walk and then go to step 2. 
Step 5: Return the edges with higher counts. 
IV. EXPERIMENT AND EVALUATION
In this session, we compare the performance of the LST 
and RMT algorithms. The purpose is to prove that LST 
provides higher accuracy (in terms of false positive and false 
negative) and more efficiency (in terms of processing time) 
than that of RMT. To address the problem of how to collect 
real network traffic (including worm and normal) on our 
limited network infrastructure, we constructed various worm 
host attack trees  (such as those for CodeRed, Sasser, and 
Blaster) from our local network, and then we randomly insert 
normal flows to those host attack trees to increase the network 
size and complexity. Figure 4 shows the concept of the host 
attack tree containing the original attack path (indicated as 
black nodes with bold and red arrows) and added normal traffic 
flows (denoted as gray nodes with gray arrows). This event 
traffic is added to emulate the noises for LST and RMT 
algorithms in order to investigate the detection accuracy of 
these two algorithms. To present our experiment results clearly, 
we first define a number of terms as follows. 
• Host Contact Graph (G): A graph includes the worm 
attacking traffic and normal traffic. 
• Host Attack Tree (T): A tree only includes infected 
nodes with the attacking paths. 
• E (T): An edge set contains all edges of G. 
• ρ (T): An edge set contains all attacking edges of T. 
• θ (S, G, N): An edge set contains the returned edges 
with the highest traversal count of N from G by a 
trace-back algorithm, S. 
• |X|: The cardinality of the set X 
• False Positive (FP): FP = |θ (S, G, N)- ρ (T)| / |ρ (T)| 
• False Negative (FN): FN = |ρ (T)- θ (S, G, N)| / |ρ (T)| 
Figure 4. Original host attack tree with the added normal traffic flows 
01 begin 
02     while( W_walk != W) do 
03  choose an edge e1(u1, v2) according to  
L (u1; source; u2: destination); 
04 counter(r1)++; 
05 d_walk++; 
06 while( d_walk != d) && Ф(e) in the ǻt) do 
07  choose an edge e2(u2, v2) according to  
L (v2 = u1); 
08  counter(e2)++; 
09  d_walk++; 
10 end while; 
11 W_walk++; 
12    end while; 
13    return the edges with the highest traversal count of N;  
14 end
is impossible to observe directly by either network traffic 
monitoring MIB (such as RMON/RMONII) or security logs. 
Through our experiments, we discover that LST keeps lower 
false positive rate and spends less convergence time than those 
of RMT (Random Moonwalk Trace-Back Algorithm). In the 
future, we expect to develop a Worm Forensic Analysis System 
taking LST as kernel with automatic recovery mechanisms to 
support highly efficient security management. 
REFERENCES
[1] S. Bono, “Stepping Stone Detection Analysis,” Available: 
http://www.cs.jhu.edu/~fabian/courses/CS600.424/course_papers/sampl
es/SteppingStones.pdf
[2] T. Grance, S. Chevalier, K. Kent, and H. Dang, “Guide to computer and 
network data analysis: Applying forensic techniques to incident 
response,” Draft NIST Special Publication. 
[3] T. Nisase and M. Itoh, “Network forensic technologies utilizing 
communication information,” NTT Technical Review 2(8) (2004). 
[4] S. Savage, D. Wetherall, A. Karlin, and T. Anderson, “Network Support 
for IP Traceback,” ACM/IEEE Transactions on Networking, 9(3), June 
2001. 
[5] B.-C. Cheng, C.-F. Huang, W.-C. Chang, and C.-S. Wu, “Developing 
and Implementing IHPM on IXP 425 Network Processor Platforms,” 
Information Security Applications, Springer-Verlag, p.218-p231, LNCS 
3786, 2006. 
[6] S. Bellovin, M. Leech, and T. Taylor, “ICMP Traceback Messages,” 
Internet Draft: draft-ietf-itrace-04.txt, expires August 2003.  
http://tools.ietf.org/html/draft-ietf-itrace-04
[7] N. Peng, “A Little Background on Trace Back,” Available: 
http://discovery.csc.ncsu.edu/~pning/Courses/csc774-S03/on-trace-
back.pdf   
[8] Y. Xie, V. Sekar, D. Maltz, M. Reiter, and H. Zhang, “Worm Origin 
Identification Using Random Moonwalks,” In Proceedings of the IEEE 
Symposium on Security and Privacy(Oakland 2005), Oakland, CA, May 
2005. 
[9] V. Sekar, Y. Xie, D. Maltz, M. K. Reiter, and H. Zhang, “Toward a 
Framework for Internet Forensic Analysis,” ACM SIGCOMM 
HotNets’04. 
[10] Symantec Corporation, “Symantec Internet Security Threat Report, 
Trends for January 05–June 05,” Available: http://www.symantec.com
[11] D. R. Ellis, J. Aiken, K. Attwood, and S. Tenaglia, “A Behavioral 
Approach to Worm Detection,” In Proceedings of the 2004 ACM 
Workshop on Rapid Malcode, pp. 43-53, October 2004. 
 2
一、參加會議經過 
    此國際研討會（ISCIT 2010）於 2010 年 10 月 26 日至 2010 年 10 月 29 日在日本東京都千代
田區的明治大學(Meiji University)舉行。明治大學為日本知名私立大學，創校已有 130 周年，並設
有博物館，雖然未進入博物館參觀，但於校園內可見到周年慶的活動看板，散發該學校教育無數
學子的文藝氣息。此 2010 通信與信息技術國際研討會於 10/26 舉行會議註冊報到與歡迎會，27 號
上午為會議開幕式，當天有三場專題演講(Keynote Speech)，而我們的論文被安排於 2010/10/27 號
下午的 WA1-6 Software 2 場次中(14:20~16:00)發表。與會當中，我們除了聆聽論文發表演講之外，
也觀察主持人對於會議流程的控制情況與演講者的表達方式，並將值得學習之處烙印於腦海中。
當然，我們也於研討會報到入口處拍照記錄以茲留念，最後於 29 號下午搭機平安順利地回國。 
 
二、與會心得 
    大會的演講主題有 “Wireless Sensors Networks: Challenges and Opportunities＂與“Visual 
Quality Evaluation for Images and Videos＂等等精湛演講，而此次會議中發表的眾多論文有涵蓋訊號
處理與影像處理方面，包含探討感測網路與 P2P 網路等等研究議題，雖然平常較少閱讀訊號與影
像的研究論文，不過希望透過參加這次會議的洗禮，可以打開一點通口，增加一些研究背景。令
人印象深刻的一件事，還有另一位台灣學生的英語表達十分流利，雖然礙於時間限制而無法充分
講述其論文內容，但其整體表現算是同一場次中名列前茅的。此次與會最大的收穫則是必須思考
如何在極度緊張以及只有眼睛注視的投影片資料情況下，還能以英文完整地表達，此成為重要的
學習目標，需藉由平時不斷地學習英文思考，才能有一點點成長。此外，這次到日本參加會議也
發現到一件事，不僅有很多日本當地學生與世界各國研究人員參加，也有不少台灣國人前往參加，
可見台灣對於這種國際會議也重視的。最後，從待在日本這一小段時間的所見所聞，以學術研究、
交通建設與國際活動舉辦規模等等來說，我們都應該以朝向世界水平看齊，並秉持著保有人道精
神，以服務大眾為宗旨。 
三、建議 
    感謝教育部與學校提供補助款，對於許多無經濟能力的學生們，實是一大福祉。希望此國際
學術交流之補助政策能持續下去，也能有更多學生可以參加國際會議，或是作為國際交換學生，
Building Intrusion Path Graphs for Security Incident 
Handling Procedures 
Guo-Tan Liao1, Li-Ru Chen2, Bo-Chao Cheng3, Huan Chen4 and Ping-Hai Hsu5 
1234Department of Communications Engineering, National Chung-Cheng University, Taiwan 
E-mail: 1loboyoh@gmail.com, 2greener@comm.ccu.edu.tw, 3bcheng@ccu.edu.tw, 4huan@ee.ccu.edu.tw  
5Information and Communications Research Laboratories, ITRI, Taiwan 
E-mail: 5becker@itri.org.tw  
 
 
Abstract—Hardening network services and network 
architecture is the best defense and the easiest way to reduce 
security risks. However, there is no effective solution to correlate 
all weaknesses, network topology with connectivity, and 
intrusion alerts. As a result, it can be difficult for network 
administrators to determine the root cause of a security incident. 
In this paper, we propose “GReat Evil ENcroachments 
Eradicator (GREENER)”, which can analyze the above network 
information in-depth and establish an intrusion path graph to 
display comprehensive information of security breaches. With 
the help of GREENER, system administrators can discover 
detailed information about an incident and rapidly remove 
network intrusion issues associated with the hardening process 
to prevent the same type of intrusion from happening again. This 
study has demonstrated that GREENER meets the requirements 
for mitigating security threats and provides a practical security 
incident response solution.  
I. INTRODUCTION 
Ensuring network security is a long term effort and 
challenging task. The nature of network security is such that it 
is “easy to attack but hard to defense” and therefore, it is 
difficult to design a security mechanism that can proactively 
disrupt or defend all types of security attacks; these attacks 
are constantly changing their attacking behaviors to avoid 
being detected and prevented. In other words, it is impossible 
to ensure a 100 percent incident-free secure network. Hence, 
there is a need to deploy a new security management process, 
hardening network services and network architecture, which 
is the best defense and easiest way to reduce security risks. 
A vulnerability assessment determines whether there have 
been known weaknesses and gives system administrators in-
depth recommendations regarding how to fix and improve the 
security of their networks. However, current vulnerability 
assessment tools only present the weaknesses of the various 
host information and do not integrate this information with 
other information, such as network topology and intrusion 
alerts. This is an impediment for the tool as it prevents 
network managers from being fully aware of the real 
weaknesses of the entire network system associated with the 
relationship of weaknesses between individual hosts and the 
reality of intrusion situations. 
Network intrusion detection systems (NIDS) [1] monitor 
the network activity to identify possible network attacks and 
alert network administrators about suspicious intrusions. In 
practice, an intrusion is a highly prevalent infection that is 
associated with many adverse alerts. Nevertheless, NIDSs are 
usually criticized for triggering thousands of false positives 
per day. The challenge of dealing effectively with intrusion 
alerts is in eliminating false positive alerts and efficiently 
organizing bulks of raw alerts that may be correlated as a 
result of the root cause. 
In the two above solutions, there are no correlations drawn 
between vulnerability weaknesses, network topology with 
connectivity and intrusion alerts. As a result, it is extremely 
difficult for the network manager to determine the root cause 
of a security incident. In this paper, we propose a new root 
cause diagnosis system, GReat Evil ENcroachments 
Eradicator (GREENER), which constructs an intrusion path 
based on correlation analysis. By providing a graphical 
representation of the intrusion path, GREENER provides a 
cost-effective security incident handling process and risk 
mitigation strategies that allow upper-level managers to 
identify the origin of the intrusion which can then be traced 
back to a failure of the hardening procedures. It is necessary 
for network managers to either eliminate the vulnerability that 
causes the system to be compromised or to develop an 
approach to prevent the damage caused by the same attack in 
the future. 
The remainder of this paper is organized as follows. 
Section II presents the background and related works and 
Section III introduces the proposed GREENER architecture 
and algorithm. Experimental results are presented in Section 
IV and finally concluding remarks are made in Section V. 
II. RELATED WORKS 
When we are securing a practical network, it is important to 
consider multi-stage and multi-host attacks because the 
attacker will try to penetrate the compromised systems. Due 
to the potential interactions between multiple hosts and 
components, the security hardening process becomes much 
more difficult and requires knowledge of things such as 
vulnerability, security policy and network topology. Current 
vulnerability assessment (VA) tools are designed to scan the 
enterprise network automatically and locate the weaknesses, 
including applications and the operating system, of individual 
systems. However, if the vulnerabilities of the system are too 
many, it becomes impossible to fix all vulnerabilities due to 
limited resources and time during the hardening process. 
These VA tools are unable to obtain the relationships between 
267978-1-4244-7010-5/10/$26.00 c2010 IEEE ISCIT 2010
protected within the entire network and system 
vulnerabilities. 
 Network Topology repository: provides network 
topology information about the entire network that is 
to be protected.  
 Network Information repository: provides network 
information about the entire network that is to be 
protected, such as firewall rules and network 
connectivity between the systems and network attack 
program information.  
 IDS: provides analyzed intrusion alerts, classified 
according to attack characteristics, attack source and 
attack target.  
 Manager Interface: provides a visual representation 
of the information, vulnerabilities and analyzed 
intrusion alert information for the network manager. 
 GREENER Processor: generates Attack Graph, 
Evidence Graph and Intrusion Path Graph (IPG). In 
this architecture, GREENER gathers information 
about network topology, network information and 
vulnerability information, and uses these three types 
of information accordingly with vulnerability 
information of the network to be protected to obtain 
the Attack Graph. It then uses the network intrusion 
detection system to gather and analyze network 
intrusion alerts and then uses the analyzed intrusion 
alerts to generate the Evidence Graph. Lastly, it 
compares the Attack Graph and Evidence Graph to 
generate the Intrusion Path Graph. In the following 
sections, we detail the algorithms used by GREENER 
to generate the Attack Graph, Evidence Graph and 
Intrusion Path Graph. 
A. Attack Graph Algorithm 
Suppose there is an example topology with firewall rules as 
shown in Fig. 2. A ruleset of the firewall rules enforce the 
firewall to perform the following actions: Rule 1 allows 
INTERNET users to connect to the WEB server, where the 
connection port is 80; Rule 2 allows WEB located in DMZ 
makes any connections to INTERNET; Rule 3 and 4 tell the 
firewall to allow WEB to connect to the POND machine, 
where the connection ports are 139 and 445; Rule 5 allows all 
INTERNAL machines (including POND and INTDB) make 
any connections to INTERNET; and Rule 6 denies all other 
inbound/outbound connections. 
Based on the example in Fig. 2, the algorithm analyzes the 
network topology, network connectivity [9] as well as 
vulnerability information and classifies them in the 
Vulnerability Connectivity Matrix (VCM), which lists all 
vulnerabilities for each pair of connectivity as shown in Table 
2. In the table, ANY represents any network service that can 
connect the attack source to the attack target and NONE 
represents any network service that cannot connect the attack 
source to the attack target, while all other entries represent the 
name of the vulnerability targeted when some source attacks a 
target. According to this table, we then put attack targets with 
some vulnerability and the attack source that can target an 
attack based on that vulnerability into the Attack Graph by the 
following method listed in Fig. 3. A node in the Attack Graph 
contains the vulnerability name, attack source, attack target 
and includes hidden information about the network topology 
and network connectivity. 
DMZ
Internal Network
FirewallWEB
INTERNET
PONDINTDBVA
IDS
VA: Vulnerability Assessment
IDS: Intrusion Detection System
Firewall Ruleset
DenyAnyAnyAnyAny6
AllowAnyINTERNETAnyINTERNAL5
Allow445PONDAnyWEB4
Allow139PONDAnyWEB3
AllowAnyINTERNETAnyWEB2
Allow80WEBAnyAny1
ActionDportDestinationSportSource
IDS
 
Fig. 2   An example topology with the firewall rules 
Table 2   Vulnerability Connectivity Matrix 
Dst 
Src 
INTERNET WEB POND INTDB 
INTERNET ANY 
PHPBB-SQL 
INJECTION, 
PHPBB-XSS 
NONE NONE 
WEB ANY ANY 
MS04-012, 
MS06-040, 
MS04-011, 
MS03-039, 
MS06-035, 
MS04-007, 
MS06-035, 
MS05-027, 
MS05-043, 
MS03-026, 
MS02-045, 
MS04-022, 
MS03-043 
NONE 
POND ANY ANY ANY 
MS06-040, 
MS04-011, 
MS05-047, 
MS04-007, 
MS06-035, 
MS05-027, 
MS05-039, 
MS05-043, 
SRVSVC-PIPE 
INTDB ANY ANY ANY ANY 
 
 
 
1 Input: Vulnerability Connectivity Matrix (VCM) 
2 Output: Attack Graph AG 
3 Let AG be a graph = (VAG, EAG) | V: set of vertex, E: set of edge  
4 Define ν: a vertex ∈VAG, associated with three attributes (Vuln,Src,Dst) 
5 Begin 
6 For each element Γ in VCM  
7    insertNode(Γ.Vuln, Γ.Src, Γ.Dst) into AG 
8 For each node ρ in AG 
9    For each node ν  in AG 
10      If ρ.Dst = ν.Src then 
11         addEdge(ρ,ν); 
12 End 
Fig. 3   Attack Graph algorithm 
269
2. Through WEB’s backdoor procedure, it logons to the 
WEB system, discovers that it can connect to the 
neighborhood service of POND in the intranet from WEB, 
and that the service has the vulnerability MS06-040. 
3. Thus, an attack procedure is uploaded from INTERNET 
to WEB and, from the attack on POND by WEB, system 
administrator privileges are obtained.  
4. Following this, a tunnel is built in WEB, allowing 
INTERNET to use WEB to connect to POND remotely.  
5. After connecting to POND and entering the intranet, it 
also discovers that the internal information repository 
INTDB’s network neighborhood service also has the 
vulnerability MS06-040. 
6. The same attack procedure on WEB is then uploaded. 
INTDB is attacked and system administrator privileges 
are obtained. 
A. Constructing attack graph 
The vulnerability scan results from using Nessus on WEB, 
POND and INTDB are as such: 17 severe vulnerabilities, 8 
major vulnerabilities, 11 mid-level vulnerabilities and 1 minor 
vulnerability. In the results, WEB has 2 severe and major 
vulnerabilities, POND has 13 severe and major vulnerabilities 
and INTDB has 8 severe and major vulnerabilities. The severe 
and major vulnerability detailed information is shown in 
Table 4. If attacks targeting severe vulnerabilities are 
successful, the attacker can obtain administration or execution 
privileges, while successful attacks against major 
vulnerabilities can impair the system or enable extraction of 
important system information. By using the Attack Graph 
algorithm, the Attack Graph can be drawn from the 
vulnerability information (as shown in Fig. 6). 
Table 4   Severe and major vulnerability information 
Machine Service Port Nessus ID Vulnerability Machine Service Port 
Nessus 
ID Vulnerability
WEB http (80/tcp) 15780 PHPBB-SQL INJECTION POND 
netbios-ssn 
(139/tcp) 11110 MS02-045 
WEB http (80/tcp) 23968 PHPBB-XSS POND cap (1026/tcp) 13852 MS04-022 
POND epmap (135/tcp) 21655 MS04-012 POND 
epmap 
(135/tcp) 11890 MS03-043 
POND netbios-ssn (139/tcp) 22194 MS06-040 INTDB 
netbios-ssn 
(139/tcp) 22194 MS06-040 
POND netbios-ssn (139/tcp) 12209 MS04-011 INTDB 
netbios-ssn 
(139/tcp) 12209 MS04-011 
POND netbios-ssn (139/tcp) 11835 MS03-039 INTDB 
netbios-ssn 
(139/tcp) 21193 MS05-047 
POND netbios-ssn (139/tcp) 21696 MS06-025 INTDB 
netbios-ssn 
(139/tcp) 12054 MS04-007 
POND netbios-ssn (139/tcp) 12054 MS04-007 INTDB 
netbios-ssn 
(139/tcp) 22034 MS06-035 
POND netbios-ssn (139/tcp) 22034 MS06-035 INTDB 
netbios-ssn 
(139/tcp) 18502 MS05-027 
POND netbios-ssn (139/tcp) 18502 MS05-027 INTDB 
netbios-ssn 
(139/tcp) 19408 MS05-039 
POND netbios-ssn (139/tcp) 19407 MS05-043 INTDB 
netbios-ssn 
(139/tcp) 19407 MS05-043 
POND netbios-ssn (139/tcp) 11808 MS03-026     
 
 
Fig. 6   Attack Graph 
 
Fig. 7   Evidence Graph 
271
國科會補助計畫衍生研發成果推廣資料表
日期:2011/01/27
國科會補助計畫
計畫名稱: 安全保障的行動隨意網路入侵檢測系統機制
計畫主持人: 鄭伯炤
計畫編號: 98-2221-E-194-023- 學門領域: 網路
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
I). 協助產業技術發展: 
與工研院合作開發以下技術 
1. Privacy-Preserved Security for healthcare solutions 
(11/24/2010~12/24/2010) 
2. AMI 系統安全機制研究 (05/01/2010~11/30/2010) 
II). 主辦 Smart Grid Security and Communications (SGSC2011: May 26th -
28th, 2011 – Busan, Korea； http://sgsc.ee.ccu.edu.tw/) 
III). 國外會議議程委員: 
1.ICS 2010: The Workshop on Computer Networks and Web Technologies 
2.2010 International Symposium on Service, Security and its Data 
management technologies in Ubi-comp (SSDU-10) 
3.WiCON 2010 NET Track (WiCON 2010 Networking Track). 
4.Publicity Chairs: The 2009 International Workshop on Forensics for
Future Generation Communication environments (F2GC-09) 
5.The 5th Annual International Wireless Internet Conference Net Track
(WICON 2010) 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
