1 
 
1. 摘要 
1. 1中文摘要 
本成果報告敘述本計畫第三年之研究進度與目前所獲得之成果。具體成果包括： (1) 整
合核心處理器與連結網路，完成FPGA仿真（2）編寫USB驅動程式及軟體，完成開發平
台與FPGA平台溝通介面（3）移植MPEG-4解碼器在並使用資料流模型(Data-flow Model)
在多核心處理器平台，探討效能改進。 
關鍵詞：多核心處理器、FPGA仿真、資料流模型 
1.2 Abstract 
In this report, we describe the project status and present the results that we have achieved for 
the third year. Specifically, we have come up the following results: (1) Integrate the core 
processors and inter-connection network for FPGA emulation, (2) Implement USB driver and 
software for communication between FPGA and development environment (3) Exploiting 
parallelism of MPEG-4 decoder with dataflow programming on multicore processor. 
Keywords: Multicore, FPGA Emulation, Dataflow model 
2. 緣由及目的  
近年來，越高的核心頻率往往帶來更高的耗電量與熱能，因目前處理器散熱技術一直無
法有效的突破，所以目前高效率處理器的研究方向漸漸從高核心頻率轉移到多核心處理
器，多核心處理器是將多個頻率較低的處理器封裝在同一顆晶片中，其熱能問題會因為
頻率較低而得以解決，而多個核心處理器可以補足因為頻率較低而產生的效率降低的問
題。 
傳統多核心晶片多採用SMP的架構，但是SMP的架構的擴充性相當差，我們歸納出下列
三項影響SMP 系統效能的因記憶體存取速度、記憶體匯流排速度與作業系統的限制，增
加記憶體存取速度可以從硬體架構上改善。 
此外近年IC 的面積已經變的越來越龐大，複雜度也越來越高，再加上系統晶片(SoC)、
多核心晶片(Multi-Core Chip)的盛行，要設計一IC 所花費時間也越來越多，傳統設計IC 
的方法已經不可行，因此本計畫採用電子系統設計(ESL)來解決這個問題。 
為了解決系統晶片(SoC)設計所產生的問題，通常以更高抽象化的觀念來描述整個系統，
交易級電子系統層級(ESL, Electronic- System-Level)的設計流程便孕育而生，ESL 以抽象
方式來描述系統晶片(SoC)設計，且能讓研發人員有充裕的時間分析設計內容、提供功能
的正確的虛擬模型，以配合軟體發展與展現硬體設計的程序。 
3. 文獻探討與研究方法 
本計畫前兩年具體已經如期完成(1) 實作多核心處理器周期正確模擬器。(2) 實作連結網
路周期正確模擬器。（3）整合核心處理器與連結網路模擬器。（4）多核心除錯器。（5）
3 
 
 
圖 2 Eclipse 架構 
除錯環境使用了Open Source軟體Eclipse CDT來完成，圖2是Eclipse的內部架構圖，Eclipse
的設計容與許多原件以外掛(Plugin)的方示連結到在一起，CDT是其中一個外掛，用來對
C/C++程式除錯，其功能包含： 
 整合編輯器 
 語法高亮顯式 
 中斷點 
 單部執行 
 記憶體、暫存器、反組譯碼顯示 
CDT的底層是呼叫GDB來完成除錯功能，而GDB是透過GDB/MI介面來與CPU連結，因此
我們可以分析GDB/MI的格式來完成處理器的除錯功能。 
FPGA與PC溝通的介面採用Cypress USB Chip，Cypress也有提供底層的Driver，我們可以
透過其API來存取USB的裝置，圖3顯示FPGA除錯環境所需軟體的架構圖： 
5 
 
EmuLoadProgram()，這個函式則是用來載入程式到處理器內，SetBreakpoint()則是用來設
定中斷點，圖6顯示以上三個API的功能。 
 
圖6 載入程式、執行程式、等待中斷之API 
EmuWritePM/EmuWriteDM/EmuReadDM這個函式則是用來存取處理器內部的暫存器或
者記憶體。圖7顯示以上三個API的功能。 
 
圖7 讀取記憶體API 
 
在多核心系統中，除了硬體之外，應用程式的效能和系統軟體以及Programming Model也
有很大的關係，因此本計劃利用資料流模型(dataflow mode)來編寫應用程式，在資料流模
型中，所有的工作(Task)都是平行運行的，工作之間利用以資料流進行溝通，以此廣義的
定義來說，LabVIEW [1], Simulink [2], Streamware[3], StreamIt [4] and Servo [5]都屬於這類
模型。 
在資料流模型中，必需要把程式表示成資料流模型，圖8顯示MPEG4解碼器的資料流模
型，在此模型中有五個Task：可變長度解碼器(VLD)，反量化器(IQ)，反離散餘弦轉換器
(IDCT)，反運動補償(IMC)，由於解碼之後的圖像會為下一禎的反運動補償，因此我們將
反運動補償(IMC)分為兩個Task，分別執行單數及偶數禎的反運動補償(IMC)。 
7 
 
 
圖10 排程演算法 
有了排程之後，要將Task對應到實體核心，圖11顯示MPEG-4解碼器的各個Task分配到處
理器的5個核心的例子。 
 
圖11 MPEG-4解碼器在處理器5核心的運行的例子 
隨著核心的增加，應用程式的效能也會隨著增加，圖12顯示應用資料流模型，在不同核
心下MPEG-4解碼器的效能。 
1) Given a multicore Processor with N cores and a duplication number m. 
2) Construct a DAG from dataflow model. The nodes of DAG are the tasks generated from 
modules in original dataflow model. A module generates m duplications of the task. An 
edge of DAG indicates the dependency of two tasks. Tasks generated from two modules 
with a channel of the same duplication are dependent. A stateful module would also 
produce edges between different duplications. The latency of nodes is the sum of 
computation latency and the communication latency. 
3) Compute the earliest start time (Estart) of all nodes. 
4) Allocate tasks of a stateful module to the same core. 
5) Choose the tasks with the minimum Estart to schedule. Tasks of a stateless module are 
allocated to cores with minimum workload. 
6) Update Estart of unallocated nodes. Repeat step 4 until all tasks are allocated. Increase m 
and repeat step 2-5 until the decrease of estimated execution time is less than a certain 
threshold. 
9 
 
[5] Donln, “Transaction Level Modeling: Flow and Use Models”, Hardware/Software Codesign and System Synthesis, 2004. 
CODES + ISSS 2004. International Conference on, 8-10 Sept. 2004, pp. 75-80. 
[6] “Methodology for Hardware/Software Co-verification in C/C++”, Proc. Asia and South Pacific Design Automation Conf. 
(ASP-DAC 00), ACM Press, 2000, pp. 405-408. 
[7] Luca Benini, Davide Bertozzi, Davide Bruni, Nicola Drago, Franco Fummi, Massimo Poncino, “SystemC Cosimulation 
and Emulation of Multiprocessor SoC Designs, “ Computer, vol. 36,  no. 4,  pp. 53-59,  Apr.,  2003. 
[8] SystemC: “http://www.systemc.org”. 
[9] WinSock: “http://www.msdn.com”. 
[10] Behrouz A. Forouzan, “Inefficiency in Mobile IP, TCP/IP Protocol Suite Three Edition”, McGraw-Hill Publishers, 2006, 
pp. 646-647. 
[11] L. Benini, D. Bertozzi, D. Bruni, N. Drago, F. Fummi, M. Poncino, “Legacy SystemC Co-Simulation of Multi-Processor 
Sysem-on-Chip”, in Proceedings of the 2002 IEEE International Conference on Computer Design: VLSI in Computers 
and Processors (ICCD’02), 2002 
[12] John L Hennessy, David A. Patterson, “Computer Architecture, A Quantitative Approach 3rd edition”, MORGAN 
KAUFMANN, 2002 
[13] Lai, C. L. Lei, and H. H. Chiou, "A False-Sharing Free Distributed Shared Memory Management Scheme," to appear in 
IEICE Trans. on Fundamentals of Electronics, Communications and Computer Sciences, Vol.E83-D, No.4, 2000. 
[14] S. -D. Wang, C. -S. Chi, and K. -C. Su, "EASY: A Dynamic Distributed Shared Memory System,"Proceedings of 1995 
Workshop on Distributed System Technologies and Applications, Tainan, Taiwan, July 1995. (Proc., pp. 41-48). 
[15] Wen-Yew Liang, Chun-Ta King and F. Lai, "Adsmith: An Object-Based Distributed Shared Memory System for Network 
of Workstations," IEICE Trans. on Information & Systems, Vol. E80-D, No. 9, pp. 899-908, September 1997. 
[16] H.H.Wang and R.C.Chang (1994). A Distributed Shared Memory System with Self-Adjusting Coherent Scheme, Parallel 
Computing, Vol.20, No.7, pp. 1007-1025. 
[17] Daniel Lenoski, James Laudon, Kourosh Gharachorloo, Wolf-Dietrich Weber, Anoop Gupta, John Hennessy, Mark 
Horowitz, Monica S. Lam, "The Stanford Dash Multiprocessor," Computer, vol. 25, no. 3, pp. 63-79, Mar., 1992. 
[18] K. Li and P. Hudak. Memory coherence in shared virtual memory systems. In Proc. of the 5th Annual ACM Symp. on 
Principles of Distributed Computing (PODC'86), pages 229-239, August 1986. 
[19] IBM Kilocore, http://www.ibm.com 
[20] CIC, http://www.cic.org.tw 
[21] SoC Technology Center, http://www.stc.itri.org.tw 
[22] ITU-T, http://www.itu.int/home/index.html 
[23] ISO/IEC, http://www.iso.org/ 
[24] Yung-Chang Chiu, Ce-Kuen Shieh, Jing-Xin Wang, Alvin Wen-Yu Su, Tyng-Yeu Liang, "A Real Time MPEG-4 Parallel 
Encoder on Software Distributed Shared Memory Systems", accepted by Second Internation Symposium on Parallel and 
Distributed Processing and Applications(ISPA'2004) , December 13-15, 2004 
[25] Samsung, http://www.samsung.com 
[26] ARM, http://www.arm.com 
[27] Mathwork, http://www.mathworks.com 
11 
 
[49] D. Zhang, Q. J. Li, R. Rabbah, and S. Amarasinghe, "A Lightweight Streaming Layer for Multicore Execution," in 
Workshop on Design, Architecture, and Simulation of Chip Multiprocessors, Dec, 2007. 
[50] M. K. Velamati, A. Kumar, N. Jayam, G. Senthilkumar, P. K. Baruah, R. Sharma, S. Kapoor, and A. Srinivasan, 
"Optimization of Collective Communication in Intra-cell MP," Lecture Notes in Computer Science, vol. 4873, 2007. 
 
96年度專題研究計畫研究成果彙整表 
計畫主持人：謝錫 計畫編號：96-2221-E-006-191-MY3 
計畫名稱：分散式多核心嵌入式原型系統--總計畫 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 1 1 100%  
研究報告/技術報告 0 0 100%  
研討會論文 1 1 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
 
