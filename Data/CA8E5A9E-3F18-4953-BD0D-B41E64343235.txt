4470
IEICE TRANS. COMMUN., VOL.E88–B, NO.12 DECEMBER 2005
PAPER IEICE/IEEE Joint Special Section on Autonomous Decentralized Systems
Energy-Eﬃcient Data-Centric Routing in Wireless Sensor
Networks∗
Hong-Hsu YEN†a), Member, Frank Yeong-Sung LIN††b), and Shu-Ping LIN††c), Nonmembers
SUMMARY Incorporating sensor nodes with data aggregation capabil-
ity to transmit less data flow in wireless sensor networks could reduce the
total energy consumption. This calls for the eﬃcient and eﬀective data-
centric routing algorithm to facilitate this advantage. In the first part of
this paper, we model the data-centric routing problem by rigorous mixed
integer and linear mathematical formulation, where the objective function
is to minimize the total transmission cost subject to multicast tree con-
straints. With the advancement of sensor network technology, sensor nodes
with configurable transmission radius capability could further reduce en-
ergy consumption. The second part of this paper considers the transmis-
sion radius assignment of each sensor node and the data-centric routing
assignment jointly. The objective function is to minimize the total power
consumption together with consideration of construction of a data aggre-
gation tree and sensor node transmission radius assignment. The solution
approach is based on Lagrangean relaxation in conjunction with the novel
optimization-based heuristics. From the computational experiments, it is
shown that the proposed algorithms calculate better solution than other ex-
isting heuristics with improvement ratio up to 169% and 59% with respect
to fixed transmission radius and configurable transmission radius for net-
work with 300 random generated nodes.
key words: energy saving, data aggregation, data-centric routing, La-
grangean relaxation, wireless sensor networks
1. Introduction
The wireless sensor networks are types of nascent technolo-
gies that probe and collect environmental information, such
as temperature, atmospheric pressure and irradiation by pro-
viding ubiquitous sensing, computing and wireless commu-
nication capabilities. Wireless sensor networks are simi-
lar to mobile ad-hoc networks (MANETs) in that both in-
volve multi-hop communications. However there are two
main diﬀerences. First, typical communication mode in
wireless sensor networks is to transmit data from multiple
data source nodes to one data sink node. This is a kind of
reverse-multicast rather than communication between any
pair of nodes in MANETs. Second, since data are col-
lected by multiple sensors there must be some redundancy
in reported data, which are being transmitted by numerous
sources. This would rapidly deplete the energy of sensors
Manuscript received March 30, 2005.
†The author is with the Department of Information Manage-
ment, Shih Hsin University, Taiwan.
††The authors are with the Department of Information Manage-
ment, National Taiwan University, Taiwan.
∗Earlier version of this paper appears in Proc. of IEEE ICC
2005.
a) E-mail: hhyen@cc.shu.edu.tw
b) E-mail: yslin@im.ntu.edu.tw
c) E-mail: r92018@im.ntu.edu.tw
DOI: 10.1093/ietcom/e88–b.12.4470
and result in disconnected network. Data aggregation, there-
fore, has been put forward as a particularly useful function
for routing in terms of energy consumption in wireless sen-
sor networks [5], [6].
Sensor nodes are usually scattered in a sensor field.
When any event occurs, such like surging irradiation or
temperature declining below certain threshold, sensor nodes
within specific sensing range detect this event and collect
the data which would be transmitted to the sink node for tak-
ing further processing. We refer to each sensor node as data
source since data are generated from sensors, and the sink
node as data sink. The application scenario described above
is called event-driven model in which sensors are assigned
to detect a particular event. There are two other diﬀerent ap-
plications of wireless sensor networks, namely, periodic and
query-based. In periodic scenario, sensors probe environ-
mental information periodically and report their measure-
ments back to the sink node. All sensors in this kind of net-
works are necessitated to be synchronized such that all sen-
sors sense information and report it simultaneously. Query-
based scenario is applied to user-oriented applications. User
can query information from certain area of sensors to ac-
quire measurements that user interested in.
In event-driven model if specific event happens, raw
data are collected and processed before transmission. Re-
dundant and useless data are discarded. The local raw
data are first combined together and the aggregated result is
transmitted to sink node. Interestingly, data are routed along
reverse multicast tree where multiple data sources transmit
information back to the sink node (e.g. Fig. 2). Every non-
leaf node on this reverse multicast tree could perform data
aggregation function to summarize the outputs from down-
stream data sources. This process is called data-centric
routing.
Data aggregation is the key to the data-centric rout-
ing, not only combining the data coming from diﬀerent
sources and eliminating redundancy, but also minimizing
the total number of transmissions involved in data routing
in such a way to save energy of sensors. In addition to re-
dundancy suppression, other aggregation function could be
MAX, MIN, and SUM. In this paper we assume that every
node posses data aggregation capability, which transmits a
single aggregated packet if it receives multiple input packets
to the same data sink. Figure 1 gives an example of data-
centric routing where the average temperature is reported to
the data sink. The aggregation function is AVG. Label x(y)
at each node represents the local temperature measurement
Copyright c© 2005 The Institute of Electronics, Information and Communication Engineers
4472
IEICE TRANS. COMMUN., VOL.E88–B, NO.12 DECEMBER 2005
signment of sensor nodes to further reduce total energy con-
sumption. Hence, the energy-eﬃcient data-centric routing
problem (EDCR) in wireless sensor network could be for-
mally defined as minimizing total power consumption sub-
ject to reverse-multicast tree, and configurable transmission
radius. We propose the Lagrangean relaxation scheme in
conjunction with the optimization-based heuristics to solve
these two problems. From the computational experiments,
the proposed solution approaches are superior to the existing
heuristics.
The remainder of this paper is organized as follows.
In Sect. 2, a MILP formulation of basic model of the DCR
problem is proposed. In Sect. 3, solution approaches to ba-
sic model based on Lagrangean relaxation are presented.
In Sect. 4 heuristics to basic model are developed for cal-
culating good primal feasible solution. In Sect. 5, compu-
tational results of DCR problem are reported. In Sect. 6,
mathematical formulation of EDCR problem is proposed.
In Sect. 7, solution approaches to extension model based on
Lagrangean relaxation are presented. In Sect. 8, heuristics
are developed to get good primal feasible solution of EDCR
problem. In Sect. 9, computational experiments of EDCR
problem are reported. Finally, Sect. 10 concludes this paper.
2. Problem Formulation to DCR Model
A data-centric wireless sensor network is modeled as a
graph in which sensors are represented as nodes and the
arc connected two nodes indicates that one node is within
the other’s transmission radius. The definition of notations
adopted in the formulation is listed below.
G The set of all multicast groups
Dg The set of data source nodes for the multi-
cast group g
L The set of all links in the graph
Pgd The set of candidate paths from the data
source node d to the sink node of multicast
group g
hg Longest distance of shortest path to reach
farthest data source node for multicast
group g
al Unit power aware transmission cost asso-
ciated with the link l
δpl The indicator function which is 1 if the link
l is on the path p and 0 otherwise
In this formulation, we generalize the formulation to
consider multiple multicast groups, i.e. multiple data sink
node. The decision variables for the wireless sensor net-
works routing problem are denoted as follows.
Cl Number of data units transmitted through
link l
ygl 1 if the multicast group g uses the link l and
0 otherwise
xgpd 1 if the multicast group g uses the path p to
reach the source node d and 0 otherwise
The data-centric routing problem in wireless sensor
networks is then formulated as the following combinatorial
optimization problem (IP).
ZIP = min
∑
l∈L
alCl (IP)
subject to:
∑
g∈G
ygl ≤ Cl ∀l ∈ L (1)
Cl ∈ {0, 1, 2, 3, ...., |G|} ∀l ∈ L (2)∑
p∈Pgd
xgpdδpl ≤ ygl ∀g ∈ G, l ∈ L, d ∈ Dg (3)
ygl = 0 or 1 ∀g ∈ G, l ∈ L (4)∑
l∈L
ygl ≥ max
{
hg,
∣∣∣Dg
∣∣∣
}
∀g ∈ G (5)
∑
d∈Dg
∑
p∈Pgd
xgpdδpl ≤
∣∣∣Dg
∣∣∣ygl ∀g ∈ G, l ∈ L (6)
∑
p∈Pgd
xgpd = 1 ∀g ∈ G, d ∈ Dg (7)
xgpd = 0 or 1 ∀p ∈ Pgd, g ∈ G, d ∈ Dg. (8)
The objective function of (IP) is to minimize the to-
tal data transmission cost for the wireless sensor networks,
which equals to the total multicast routing cost. Constraint
(1) requires that the number of multicast groups adopting
link l on its multicast tree should be less then or equal to the
number of data units transmitted through link l. Constraint
(2) requires that number of data units on link l be at most
cardinality of G, i.e. sensor node can aggregate data belong-
ing to the same multicast group. Constraint (3) requires that
if one path is selected for the group g destined to the des-
tination d, the path must also be on the tree adopted by the
multicast group g.
Constraints (4) and (5) require that number of links on
the multicast tree adopted by multicast group g be at least
the maximum of hg and
∣∣∣Dg
∣∣∣. Note that both hg and
∣∣∣Dg
∣∣∣ are
legitimate lower bounds on the number of links on the mul-
ticast tree adopted by the multicast group g [10]. From the
computational experiments, introducing Constraint (5) will
significantly improve the solution quality. Note that
∣∣∣Dg
∣∣∣ and
hg could be calculated in advance, as shown in the Calcu-
late hg algorithm proposed in [10].
The left hand side term of Constraint (6) calculates the
number of paths destined for data source nodes pass through
link l for a multicast group. The right hand side term of
Constraint (6) is at most
∣∣∣Dg
∣∣∣. When the union of the paths
4474
IEICE TRANS. COMMUN., VOL.E88–B, NO.12 DECEMBER 2005
( ∑
d∈Dg
u2dgl)/|Dg| + u3gl + al , so that the arc weight for link l is
the same for all data source nodes of multicast group g. This
ensures that the union of the shortest paths destined to every
data source in a multicast group shall be a tree. In order to
take account the transmission cost, we also incurs al on the
arc weight. The computational complexity for first heuristic
is O(|G||N |2).
The basic idea of the second heuristic is GIT. Accord-
ing to [6], GIT is a better heuristic than shortest path tree
heuristics. By leveraging on the solutions to the dual prob-
lem (LR), we set the arc weight for link l as al + u3gl. And
then we implement the GIT heuristics to construct the tree.
The first term al is used to reflect the transmission cost. The
second term u3
gl reflects the penalty cost for link l to be a link
in a cycle. By incorporating the al+u3gl as the arc weight, we
try to achieve minimum transmission cost and the gain from
data-centric routing (tree) at the same time. The computa-
tional complexity of second heuristic is O(|N |2 ×∑g∈G
∣∣∣Dg
∣∣∣).
In the following, we show that complete algorithm (de-
noted as LGR) to solve (IP).
Algorithm LGR
begin
Initialize the Lagrangean multiplier vector (u1, u2, u3) to
be all zero vectors;
run Calculate hg;
UB := very large number; LB := 0;
improve counter := 0; step size coeﬃcient := 2;
for iteration := 1 to Max Iteration Number do
begin
run subproblem (SUB1);
run subproblem (SUB2);
run subproblem (SUB3);
calculate ZD;
if ZD > LB then LB := ZD and improve counter := 0;
else improve counter := improve counter + 1;
if improve counter = Improve Threshold then
improve counter := 0; δ := δ / 2;
run Primal Heuristic Algorithm;
if ub < UB then UB := ub;
/* ub is the newly computed upper bound. */
run update-step-size;
run update-Lagrangean-multiplier;
end;
end;
The computational complexity for algorithm LGR is
O(|N |2 ×∑g∈G
∣∣∣Dg
∣∣∣ + |L||G| log |L|) for each iteration.
5. Computational Experiments to DCR Model
The proposed algorithms to basic model for the data-
centric routing problem developed in Sects. 3 and 4 are
coded in C and run on a PC with INT ELT M PIII-1.3G.
Max Iteration Number and Improve Threshold are set to
2000 and 50 respectively. The step size coeﬃcient δ is ini-
tialized to be 2 and will be halved when the objective func-
tion value of the dual problem is not improved for iterations
up to Improve Threshold.
Two source placement models, namely, event-driven
and random-source model are tested. In random-source
model, non-sink nodes are randomly selected to be data
source nodes. Unlink in event-driven model, the source
nodes are not necessarily clustered. Query-based applica-
tions and periodic applications could be classified as the
random-source model. We construct the network topology
for |N |=300 nodes which are randomly placed in a 1 × 1
square unit area. The power aware transmission cost (al) is
defined as 100 × Euclidean distance if link length does not
exceed the transmission radius. In Fig. 3 and Fig. 5, maxi-
mum communication radius is configured as 0.125. That is
to say al = 100 × Euclidean distance if length of link l ≤
0.125, otherwise al = ∞. In Figs. 3–6, SPT, CNS and GIT
are the solution approaches proposed in [6]. Heuristic 1 and
heuristic 2 are the solution approaches proposed in Sect. 4.
Each plotted point in Figs. 3–6 is a mean value over 5 simu-
lation results.
Figure 3 shows the transmission cost of diﬀerent num-
ber of source nodes in random-source model. We could
see that the second heuristics proposed in Sect. 4 outper-
forms than the other four solution approaches under all dif-
ferent number of source nodes. As the number of data
source nodes grows, the improvement ratio is more signif-
icant. Figure 5 shows the similar computational results for
event-driven model. Figure 4 shows the transmission cost
for diﬀerent communication radii for fixed 10 source nodes
in random-source model. Heuristic 2 still outperforms than
other approaches. Note that as decreasing the communi-
cation radius, the improvement ratio of second heuristic is
larger. This occurs because when transmission radius is
small, only links with shorter distance could exist. The rout-
ing path must have more hops in order to reach destination.
Therefore, the advantage resulting from data aggregation
will be more significant.
Similar computational results could also be observed
Fig. 3 Transmission cost vs. number of sources in random-source model.
4476
IEICE TRANS. COMMUN., VOL.E88–B, NO.12 DECEMBER 2005
∑
s∈S
∑
p∈Psq
xspδp(n,k) ≤ |S | · y(n,k) ∀n, k ∈ N (19)
∑
k∈N
y(n,k) ≤ 1 ∀n ∈ N (20)
y(n,k)dnk ≤ rn ∀n, k ∈ N (21)
rn ∈ Rn ∀n ∈ N (22)
y(n,k) = 0 or 1 ∀n, k ∈ N (23)∑
p∈Psq
xsp = 1 ∀s ∈ S (24)
xsp = 0 or 1 ∀s ∈ S , p ∈ Psq. (25)
rn Transmission radius of the node n
y(n,k) 1 if the link (n, k) is on the tree
xsp 1 if the data source node s uses the path p
to reach the sink node q
The objective function of (IP1) is to minimize total
power consumption of the data aggregation tree for trans-
mitting data to the sink node. Constraint (17) requires that
if one path p is selected for source node s to reach sink node
q, the path must also be on the tree. This constraint also en-
forces that if link (n, k) is on the path p adopted by source
node s to reach sink node, then y(n,k) must be 1.
Constraint (18) and (23) require that total number of
links on the aggregation tree be at least the maximum of h
and the cardinality of S . Just as (IP) in Sect. 2, introducing
constraint (18) is to improve the solution quality.
Constraint (19) is to restrict the union of the paths des-
tined for data source nodes contains a cycle just as Con-
straint (6) in (IP). Constraint (20) is an outgoing link con-
straint. All intermediate nodes on the aggregation tree
should have only one outgoing link (e.g. node 4 has two
incoming link and only one outgoing link in Fig. 2(a)). Con-
straint (24) and (25) require that any data source adopts only
one path destined for sink node in aggregation tree. By en-
forcing Constraints (19), (20), (24), and (25) the union of
the paths shall be a reverse multicast tree.
Constraint (21) is a transmission radius coverage con-
straint. This constraint enforces that if link (n, k) is used by
aggregation tree, the transmission radius of node n should
be large enough in order to cover node k. Constraint (22) in-
dicate the set of possible transmission radii for sensor node,
which is a discrete and finite set. By enforcing Constraints
(21) and (22), we ensure that every link on the aggregation
tree is covered within the transmission radius of the origin
node of the link.
After presenting the mathematical formulation of the
EDCR model, we could summarize the major diﬀerence be-
tween the DCR and EDCR model. In the DCR model, after
the maximum transmission radius is given, the topology of
whole network can be constructed. Hence, the data centric
aggregation algorithm developed for DCR model could also
be applied to wired sensor network when al represents the
link cost of physical link. On the other hand, in the EDCR
model, the transmission radius of sensor node is also a de-
cision variable. In other words, network topology needs to
be determined by the transmission radius assignment of the
sensor node. Such transmission radius assignment makes
EDCR model more general than the DCR model.
7. Lagrangean Relaxation to EDCR Model
The algorithm development is based upon Lagrangean re-
laxation. In (IP1), by introducing Lagrangean multiplier
vector v1, v2, v3, we dualize Constraints (17), (19) and (21) to
obtain the following Lagrangean relaxation problem (LR1).
ZD1(v1, v2, v3) = min
∑
n∈N
en(rn)
+
∑
n∈N
∑
k∈N
∑
s∈S
v1(n,k)s

∑
p∈Psq
xspδp(n,k) − y(n,k)

+
∑
n∈N
∑
k∈N
v2(n,k)

∑
s∈S
∑
p∈Psq
xspδp(n,k) − |S | · y(n,k)

+
∑
n∈N
∑
k∈N
v3(n,k)(y(n,k)dnk − rn) (LR1)
subject to:
∑
n∈N
∑
k∈N
y(n,k) ≥ max{h, |S |} (26)
∑
k∈N
y(n,k) ≤ 1 ∀n ∈ N (27)
rn ∈ Rn ∀n ∈ N (28)
y(n,k) = 0 or 1 ∀n, k ∈ N (29)∑
p∈Psq
xsp = 1 ∀s ∈ S (30)
xsp = 0 or 1 ∀s ∈ S , p ∈ Psq. (31)
We can decompose (LR1) into three independent subprob-
lems.
Subproblem 4: for rn
min
∑
n∈N
en(rn) − rn
∑
k∈N
v3(n,k)
 (SUB4)
subject to (28).
Subproblem 5: for y(n,k)
min
∑
n∈N
∑
k∈N
v3(n,k)dnk − v2(n,k)|S | −
∑
s∈S
v1(n,k)s
 y(n,k)
(SUB5)
subject to (26), (27), and (29).
Subproblem 6: for xsp
4478
IEICE TRANS. COMMUN., VOL.E88–B, NO.12 DECEMBER 2005
end;
end;
And the computational complexity for LGR1 is
O(|N |2 × |S | + ∑
n∈N
|Rn|) for each iteration.
9. Computational Experiments to EDCR Model
The proposed algorithms to EDCR model developed
in Sects. 7 and 8 are coded in C and run on a PC
with INT ELT M PIII-1.3G. Max Iteration Number and Im-
prove Threshold are set to 1000 and 25 respectively. The
step size coeﬃcient δ is initialized to be 2 and will be halved
when the objective function value of the dual problem is not
improved for iterations up to Improve Threshold. The com-
putational time is all within five minutes for all tested cases.
Random-source model is tested. In random-source
model, non-sink nodes are randomly selected to be data
source nodes. We construct the network topology for
|N |=150 nodes which are randomly placed in a 1 × 1 square
unit area. The transmission power falls as 1/dn [7], n ≥
2, where d represents the Euclidean distance. Thus, the
cost of power aware function en(rn) is defined as square of
100 × Euclidean distance if link length does not exceed the
maximum transmission radius. The set of all possible trans-
mission radii of sensor node n (Rn) is configured to begin
from 0 to maximum transmission radius. Elements in the
radius set are increased by 0.01 successively. In Fig. 7, max-
imum transmission radius is set to be 0.15. Each plotted
point in Figs. 7 and 8 is a mean value over 5 experimental
results. In all of experiments we assume that there is only
one group in sensor networks. In order to show the solution
quality of our proposed algorithm, we implement three al-
gorithms developed in [6] to determine the aggregation tree
and then to determine the minimum transmission cost for
comparison.
Figure 7 shows the transmission cost of diﬀerent num-
ber of source nodes in random-source model. We could see
that the second heuristics proposed in Sect. 8 is superior to
the other four solution approaches under all diﬀerent num-
Fig. 7 Transmission power consumption cost vs. number of sources in
random-source model.
ber of source nodes. In addition, as the number of data
source nodes grows the improvement ratio is more signif-
icant, which is similar to the DCR model. Figure 8 shows
the transmission cost for diﬀerent maximum transmission
radii fixed 8 source nodes in random-source model. The
maximum transmission radius is the maximum allowable
transmission range that sensor nodes can chose. Heuristic
2 still outperforms than other approaches. Note that as de-
crease of the transmission radius, the improvement ratio of
second heuristic is larger. This result shows the similar re-
sults in the DCR model. Another interesting point is that
the cost decreases with increasing maximum transmission
radius because of the expanded feasible region. However,
we can observe that when the maximum transmission radius
is increased to a certain point (e.g. 0.17 in Fig. 8), the cost
can not be reduced any more. This is because the power
consumption cost is defined as the square of transmission
radius, and the cost will be increased rapidly when the large
transmission radius is chosen. Therefore, even though the
maximum allowable transmission radius is increased, we
will not be willing to turn on the larger transmission radius.
From Table 2, the improvement ratio of heuristic 2 in
EDCR over SPT, CNS and GIT is up to 59%, 49% and 10%
respectively. The convergence behavior of our proposed al-
gorithm is shown in Fig. 9. In most of the cases we ob-
serve that the upper bound is good enough (within 1% gap
in comparison with the final upper bound) at 100th iteration.
Thus, when in real-time environment, we could stop the so-
lution procedure at 100th iteration to reduce the computa-
tional time by 10 times (from 5 minutes to 30 seconds) with
only at most one percent solution quality penalty. Figure 10
Fig. 8 Transmission power consumption cost vs. maximum transmission
radius in random-source model.
Table 2 Improvement ratio of heuristic 2.
Improvement Ratio Fig. 7 Fig. 8
SPT 59 49
CNS 49 33
GIT 10 10
4480
IEICE TRANS. COMMUN., VOL.E88–B, NO.12 DECEMBER 2005
Hong-Hsu Yen received his B.S. degree in
Industrial Engineering from National Tsing Hua
University in 1990, and M.S. degree in Electri-
cal Engineering from National Taiwan Univer-
sity in 1995 and Ph.D. degree in Information
Management from National Taiwan University
in 2001. He joined the faculty of the Depart-
ment of Information Management at Shin Hsin
University in 2001. His research interests in-
clude network planning, network optimization,
performance evaluation and QoS routing.
Frank Yeong-Sung Lin received his B.S.
degree in electrical engineering from the Elec-
trical Engineering Department, National Taiwan
University in 1983, and his Ph.D. degree in elec-
trical engineering from the Electrical Engineer-
ing Department, University of Southern Califor-
nia in 1991. After graduating from the USC,
he joined Telcordia Technologies (formerly Bell
Communications Research, abbreviated as Bell-
core) in New Jersey, U.S.A., where he was re-
sponsible for developing network planning and
capacity management algorithms. In 1994, Prof. Lin joined the faculty
of the Electronic Engineering Department, National Taiwan University of
Science of Technology. Since 1996, he has been with the faculty of the
Information Management Department, National Taiwan University. His
research interests include network optimization, network planning, perfor-
mance evaluation, high-speed networks, wireless communications systems
and distributed algorithms.
Shu-Ping Lin received his B.S. degree in
Information Management Department from Na-
tional Chi Nan University in 2003 and M.S. de-
gree in Information Management from National
Taiwan University in 2005. His research in-
terests include network optimization and algo-
rithms.
  
MAC Aware Energy-Efficient Data-Centric 
Routing in Wireless Sensor Networks 
 
Frank Yeong-Sung Lin              Hong-Hsu Yen            Shu-Ping Lin and Yean-Fu Wen 
Dept. of Information Management,      Dept. of Information Management,     Dept. of Information Management, 
National Taiwan University,              Shih Hsin University,             National Taiwan University, 
Taipei 106, Taiwan,                  Taipei 116, Taiwan,                 Taipei 106, Taiwan, 
yslin@im.ntu.edu.tw                 hhyen@cc.shu.edu.tw     r92725018@ntu.edu.tw, d89002@im.ntu.edu.tw  
 
Abstract— Incorporating sensor nodes with data aggregation 
capability to transmit less data flow in wireless sensor networks 
could reduce the total energy consumption. However, the penalty 
from data retransmissions due to collision could jeopardize the 
advantages from data aggregation. In this paper, for the first 
time, we consider the energy consumption tradeoffs between the 
data aggregation and retransmission in wireless sensor network. 
By using the CSMA-CA MAC protocol, the retransmission 
energy consumption function is well formulated. We propose a 
rigorous non-linear mathematical formulation, where the 
objective function is to minimize the total energy consumption of 
data transmission subject to data aggregation tree and data 
retransmission. The solution approach is based on Lagrangean 
relaxation in conjunction with the optimization-based heuristics. 
From the computational experiments, it is shown that the 
proposed algorithms could construct more energy efficient data 
aggregation tree with MAC layer retransmission mechanism than 
existing data centric algorithms up to 93%. 
Keywords—Data aggregation, MAC aware energy-efficient 
data-centric routing, retransmission, Lagrangean relaxation, 
wireless sensor networks 
I.   INTRODUCTION 
The wireless sensor networks (WSN) probe and collect 
environmental information, such as temperature, atmospheric 
pressure and irradiation to provide ubiquitous sensing, 
computing and communication capabilities. WSN has two 
important and interesting characteristics. First, typical 
communication mode in WSN is from multiple data source 
nodes to one data sink node. This is a kind of reverse-multicast 
rather than communication between any two pair of nodes in 
MANETs. Second, if specific event happens, data are collected 
by multiple sensors and sent back to the sink node. 
Intermediate node that is on the reverse-multicast path could 
receive multiple data from the data source nodes. In order not 
to transmit redundant and useless data back to the data source 
node, intermediate node along the reverse-multicast path 
should collect and process data before transmission to save 
energy. Otherwise, it would results in disconnected network 
with rapidly energy depletion of sensors. This kind of Data 
aggregation capability has been put forward as a particularly 
useful function for routing in terms of energy consumption in 
WSN [2]. In addition to redundancy suppression, other 
aggregation function could be MAX, MIN, or SUM. For 
example, in Fig. 1, node n1, n2, and n3 are the data source 
nodes that probe the temperature (each with 60, 65 and 63) 
and sent back the MAX temperature back to sink node. If node 
S could aggregate (i.e. MAX = 65) these data before sending 
back the sink node, the total number of transmission times for 
node S could be reduced from 3 to 1. 
From the routing path point of view, interestingly, data are 
routed along reverse multicast tree where multiple data 
sources transmit information back to the sink node [6]. Every 
non-leaf node on this reverse multicast tree could perform data 
aggregation function to summarize the outputs from 
downstream data sources. This process is called data-centric 
routing. In data-centric routing, the key issue is how to 
construct the reverse multicast tree in such a way to save the 
total energy consumption. Most of the existing research 
literatures construct the tree by only taking consideration of 
data aggregation aspect [2][6]. However, there is one more 
issue that is important to the construction of data aggregation 
tree, MAC layer retransmission issue. 
s
r1 n1  n 2
n3
n4
Sink Node Link on 
aggregation tree
Total Energy Consumption = 5.05
r3
r2
 
Figure 1. Tradeoff between data aggregation and data retransmissions 
(without considering data collision due to interference) 
In WSN, sensor nodes that are within each other’s 
transmission radius try to transmit simultaneously would result 
in collision. When collision occurs, retransmission is required 
to ensure the data is successfully received. Data retransmission 
times are affected by the total number of sensor nodes whose 
transmission radius covers the receiver. In other words, the 
more flows that the non-leaf node on the aggregation tree are 
aggregated, the higher probability that the sender will incur 
data retransmission. Unfortunately, retransmission, which 
incurs extra energy consumption, will jeopardize the 
advantage from data aggregation. In other words, constructing 
good data aggregation tree should consider the tradeoff 
between data aggregation issue and MAC layer retransmission 
issue. 
This full text paper was peer reviewed at the direction of IEEE Communications Society subject matter experts for publication in the IEEE ICC 2006 proceedings.
1-4244-0355-3/06/$20.00 (c) 2006 IEEE
The decision variables are denoted as follows. 
xsp 
1 if the data source node s uses the path p to 
reach the sink node q and 0 otherwise 
y(n,k) 
1 if the link from node n to node k is on the tree 
and 0 otherwise 
rn Transmission radius of the node n 
znk 
1 if the node k is covered within transmission 
radius of the node n and 0 otherwise 
cnk 
Retransmission times of the node n to transmit 
data to the node k 
The analysis of retransmission is conducted as follows. First 
of all, we assume that each sensor node is equipped with a 
CSMA-CA compatible transceiver. Based on the analysis in 
[4], we derive the mean retransmission times of a sender. We 
assume that each transmission conforms to Geometric 
distribution and each sensor node generates data packets that 
follow Poisson distribution with a certain rate, λ. Successful 
transmission of data from a sender to a receiver is influenced 
by the number of senders whose transmission radius covers 
the receiver. By considering the receiver side collisions in 
terms of the communication radius of sensor nodes, the hidden 
terminal problem is also implicitly contemplated. In 
CSMA/CA protocol, when sender want to transmit packet to 
the receiver, it will first issue the RTS control frame and then 
waits for the CTS frame from the receiver to make sure the 
contention is success or not [4]. By considering the turnaround 
time (which is 2θ) between sender and receiver, the overall 
contention period is RTS + SIFS + 2θ. Then the average 
retransmission times from node n to node k is as follows: 
Average Retransmission Times(n,k)  
.11
)2(
),( ∑
==
∈
++−
Nj
jkzSIFSRTSknsuccess e
p θλ
 (0) 
The meaning of (0) is the mean value of the Geometric 
distribution where the successful transmission probability, say 
psuccess, is that no data transmission is occurring at any node 
whose transmission radius covers receiver node k within the 
contention period (RTS+SIFS+2θ). 
∈Nj jkz  calculates the 
total number of senders whose transmission radius covers the 
node k. 
The MAC-DCR in WSN is then formulated as the following 
combinatorial optimization problem (IP). 
ZIP = ∑ ∑
∈ ∈
⋅


+
Nn
nn
Nk
nkdata recRTSt )()(min         (IP) 
subject to: 
),(),( kn
Pp
knpsp yx
sq
≤
∈
δ    ,n ,Nk∈ Ss∈  (1) 
|}S| ,max{),( hy
Nn Nk
kn ≥
∈ ∈
  (2) 
),(),( kn
Pp
knpsp
Ss
ySx
sq
⋅≤∑∑
∈∈
δ  Nkn ∈,  (3) 
1=
∈ sqPp
spx  Ss ∈  (4) 
1),( ≤
∈Nk
kny  Nn ∈  (5) 
nk
nkn z
M
dr ≤−  Nkn ∈,  (6) 
nnknk rdz ≤  Nkn ∈,  (7) 
nkkn zy ≤),(  Nkn ∈,  (8) 
∑≥
∈
++−
−−
Nj
jk
kn
zSIFSRTS
My
nk
e
ec
)2(
)1( ),(
θλ
  Nkn ∈,  (9) 
1or    0 =spx   sqPpSs ∈∈∀ ,   (10) 
1or    0  ),( =kny   Nkn ∈,   (11) 
1or    0 =nkz   Nkn ∈,   (12) 
nn Rr ∈   Nn∈   (13) 
0≠nr  Sn∈   (14) 
}2,...., 1, ,0{ Tcnk ∈   Nkn ∈, .  (15) 
The objective function of (IP) is to minimize total energy 
consumption from data transmission and retransmission. 
Constraint (1) requires that if the path p is selected for the 
source node s to reach the sink node q, the path must be on the 
tree. This constraint also enforces that if the link (n, k) is on 
the path p adopted by the source node s to reach the sink node, 
then y(n,k) must be 1. Constraint (2) and (11) require that total 
number of links on the aggregation tree is at least the 
maximum of h and the cardinality of S. Note that both h and |S| 
are legitimate lower bound on the total number of links on an 
aggregation tree and they could be calculated in advance [3]. 
Introducing constraint (2) will significantly improve the 
solution quality. The left-hand term of constraint (3) calculates 
the number of paths, which are destined for the sink node and 
passing through the link (n, k) on aggregation tree. The 
right-hand term of constraint (3) is at most |S|. When the union 
of the paths destined for the sink node does exist a cycle, and 
this cycle contains link l, then constraint (3) would not be 
satisfied since there would be many paths pass through this 
link. In other words, constraint (3) is to enforce that the union 
of the paths does not contain a cycle [6]. Constraints (4) and 
(10) require that any data source adopts only one routing path 
destined for sink node. Constraint (5) is the outgoing link 
constraint. All intermediate nodes on the aggregation tree 
should have only one outgoing link. For example, in Fig. 1, 
node S has only one outgoing link to the sink node. 
Constraints (3), (4), (5), and (10) enforce that the union of all 
routing paths shall be a tree. 
Constraints (6) and (7) specify the transmission radius 
coverage constraints. If nkn dr ≥ , znk should be equal to 1 and 
0 otherwise. Using znk we can calculate the total number of 
sensor nodes whose transmission radius covers sensor node k, 
and the total number of sensor nodes covered by transmission 
radius of sensor node n. Constraint (8) is a necessary 
constraint that relates decision variable y(n,k) to znk. If y(n,k) 
equals to 1 then znk also must be 1.  
Constraint (9) calculates the retransmission times of the 
node n to transmit data to the node k. Note that only the sensor 
nodes on the aggregation tree need to calculate the 
retransmission times. Therefore, when y(n,k) = 1, the right side 
of constraint (9) is the same as Equation (0) to enforce the 
retransmission times should be at least the average 
retransmission times. When y(n,k) = 0, the right side of 
∀
∀
∀
∀
∀
∀
∀
∀
∀
∀
∀
∀
∀
Σ
Σ
ΣΣ
Σ
Σ
This full text paper was peer reviewed at the direction of IEEE Communications Society subject matter experts for publication in the IEEE ICC 2006 proceedings.
  
(SUB2), it may violate the tree constraint. Thus, we propose a 
drop heuristic to eliminate those links that form the cycle on 
the tree. 
The complete algorithm (denote as LGR-Primal) for the 
getting primal feasible solutions is depicted as follows: 
1. Based on the solutions of (SUB2) we can get the set of 
decision variables, xsp, from which we can decide which link, 
y(n,k), is used on the routing path by source s. After 
determining y(n,k), if y(n,k) is 1, we set the arc weight on the 
corresponding link to be 2
1
|| nk
Ss
nks
u
S
u
+
∑
∈ ; otherwise, we set 
the arc weight to be infinity. Repeat this step for every data 
source node. 
2. According to the arc weight calculated in Step 1, we sort the 
links from smallest to largest arc weight. 
3. We sequentially examine all links from the link with the 
largest arc weight to the smallest, but we ignore the links 
with infinity costs. We remove each link say link (n, k) from 
the routing path and check whether every source node still 
has a routing path to the sink node. If any source node is 
unable to reach the sink node after removing link (n, k), we 
restore link (n, k) onto the routing path. If every source 
nodestill has a routing path to reach the sink node, we 
remove (n, k) and investigate the next link until all the links 
used by the union of routing path xsp have been examined. 
After executing the step 3 of LGR-Primal, we get a data 
aggregation tree without any cycles. The computational 
complexity of the LGR-Primal is )|||(| 3NSO . The complete 
algorithm of Lagrangean relaxation (denote as LGR algorithm) 
to solve (IP), which includes algorithms to solve each 
subproblem in Sec. III and LGR-Primal, has the same 
flowchart as in [6]. The computational complexity for LGR 
algorithm is )|||(| 3NSO  for each iteration. 
V.   COMPUTATIONAL EXPERIMENTS 
The proposed algorithms for constructing a data aggregation 
tree are coded in C and run on a PC with PIV-2G. In LGR 
algorithm, Max_Iteration_Number[6] and Improve_Threshold 
[6] are set to 2000 and 30 respectively. The step size 
coefficient, δ [6], is initialized as 2 and is halved when the 
objective function value of the dual problem is not improved 
by iterations up to Improve_Threshold. The computational 
time for the following computational experiments is all within 
five minutes. 
We assume that a sensor network operates in periodic mode 
(i.e. the sensor nodes periodically report information to the 
sink node). The network topology comprises N (= 150 in Fig. 
3 and 4, up-to 250 in Fig. 5) sensor nodes randomly placed in 
a 1×1 square unit area. The cost of the energy consumption 
function, )( nn re , is defined as the square of 100×Euclidean 
distance multiplied by energy consumption per millisecond 
when the sensor node is transmitting data. The set of all 
possible transmission radii of a sensor node n (Rn) is 
configured to begin from 0 to the maximum communication 
radius (e.g. 0.25 in Fig. 3). Elements in the radius set are 
increased by 0.01 successively. The CSMA related parameters 
(RTS, SIFS, θ) are the same setting as in [4]. To evaluate the 
solution quality of our proposed algorithm, we implement four 
existing algorithms for comparison. The SPT, GIT and CNS 
algorithms are proposed in [2] and the forth algorithm, CCA, 
is described in [5]. Note that all these four heuristics construct 
the data aggregation tree without considering the MAC layer 
collision effect. In addition, since CCA algorithm addresses 
the latency issue so that the data aggregation tree is a balance 
tree. From the computational results, the balance tree suffers 
from severe retransmission energy loss so that the total energy 
consumption is five times worse than our LGR algorithm. 
Therefore, we did not plot the results from CCA in Fig. 3-5 for 
better demonstrating the comparison between LGR algorithm 
and other three heuristics. Each plotted point in Fig. 3-5 is a 
mean value over 10 simulation results. 
Fig. 3 shows the total energy consumption under different 
number of source nodes. It is shown that LGR algorithm can 
get best solution quality in terms of total energy consumption 
as compared with other heuristics. In addition, we observe that 
when the number of source nodes is large (e.g. 80, 90, 100), 
the solution quality LGR algorithm over other heuristics are 
even more significant. When the number of source nodes is 
large, we have a larger aggregation tree as compared to 
aggregation tree constructed by small number of data source 
nodes. Larger aggregation tree results in the greater 
probability for collision. Hence, the heuristics algorithms that 
do not address the MAC collision effect suffer from severe 
retransmission.  
In Fig. 4, we examine the effect of communication radius on 
energy consumption with 90 source nodes. It is shown that 
LGR algorithm can still get best solution quality in terms of 
total energy consumption as compared with other heuristics. 
Interestingly, it is shown that large maximum communication 
radius did not give any advantage for MAC aware energy 
efficient data aggregation tree. On the contrary, large 
communication radius leads to severe collision that could 
jeopardize the advantages from data aggregation. Hence, with 
considering the tradeoff between collision and data 
aggregation, small communication radius should be the best 
communication radius setting for sensor node. 
10 20 30 40 50 60 70 80 90 100
120
160
200
240
280
320
360
400
440
480
520
En
er
gy
 C
on
su
m
pt
io
n
Number of Sources
Figure 3. Energy consumption with different no. of source nodes
 LGR
 SPT
 GIT
 CNS
Maximum Communication Radius = 0.25
 
This full text paper was peer reviewed at the direction of IEEE Communications Society subject matter experts for publication in the IEEE ICC 2006 proceedings.
