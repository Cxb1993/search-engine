 1 
行政院國家科學委員會補助專題研究計畫成果報告 
3D 武術招式動作分析與合成之研究(2/2) 
A Research on the 3D Motion Analysis and Synthesis of Martial Art 
 
 
中文摘要 
 
 近來在電影和遊戲的場景中，動畫的需
求促使研究出更有效率的方法來產生動畫資
料。由於計算慣性運動需耗費大量的人力與
時間，為了增加動畫產生的效率，我們利用
已存在的資料來合成新的動作資料。在本篇
報告中，我們提出一種花費少量時間金錢的
方法將舊有的動畫資料合成出更多不同的動
作。 
利用這些舊有的動畫資料，我們可以合
成出不同的新動畫資料。在我們的方法中，
首先將動畫資料按照身體部位做分割，用以
產生各個部位的多重圖式，產生的方法是透
過計算姿勢之間的差異程度來決定姿勢與姿
勢之間的關係。在計算完所有動作圖後，我
們就能決定動畫資料姿勢中的連接路徑來產
生新的動畫資料，由於圖中身體的每個主要
部位所找到的路徑皆不相同，因此我們就可
合成出更多不同的混合動畫資料。 
 
關鍵詞：電腦動畫、動作合成 
 
Abstract 
 
 The recent demands on animation from 
virtual environment in movies and games have 
encouraged the studies in generating animation 
data in more effective ways. Conventional 
motion generation method requires a great 
amount of cost and time. To increase the 
effectiveness of motion generation, we should 
re-use the existing data and synthesize the new 
motion data. In this report we proposed a 
method to increase the variety of motions from 
the original motion data using low amounts of 
cost and time.  
Using the existing data, we can synthesize 
new motions that differ from the sample 
motions. In our method, animation data is 
segmented into several body parts. We then 
calculate the frame-to-frame relation by 
calculating the frame distance in order to 
generate the multi-graph which represents 
available motions of each body part. By 
traversing all motion graphs together we 
determine the clip combination and blend them 
to generate new motion data. Since the graph 
traversal of each body parts varies in paths, we 
can generate the combination of existing 
motions. 
 
Keywords: Animation, Motion synthesis 
 
 
一、前言 
 
以動作捕捉裝置捕捉下來的動畫資料為
基礎的研究廣泛地被應用在遊戲、動畫及電
影工業等產業，因此許多學者紛紛提出不同
的方法來分析這些各式各樣的動畫資料。由
此可見人物動畫資料的分析對於這些產業來
說受益相當大。動畫資料的合成是相當重要
的；利用既有的動畫資料來合成出具有多樣
性變化的動畫資料。如此一來便可降低捕捉
動作所花費的成本，提高動畫資料的利用
率。因此我們針對武術的動畫資料提出新的
技術做分析與研究，並整合去年舊有的技術
完成一個完整的武術動畫分析與合成系統。 
以往動畫資料的產生是由動畫設計師產
生關鍵姿勢（key frame），並靠電腦去計算中
間的姿勢，這個方法需要花費許多的人力與
時間。有了 motion capture 技術之後，產生
動畫資料所需要的人力與時間較以往減少。
但實際上，對於不同的應用需要不同的動畫
資料，因此就得替每個應用額外捕捉不同的
資料。由於 motion capture 的設備昂貴，使得
 3 
 
能性[9]，為了提高邊的數量也就是增多結合
的可能性，因此可將多個節點合成一個節
點[5]。另一種提高動作組合的方法是分別將
手與腳的動作從一個動作中切割出來並套到
其他的動作[6]，如同texture synthesis的方法
一樣，都是利用已知的動作特性，如依據身
體下半部的姿勢來確定身體上半部的動作並
加以合成，最後利用統計的模式便可建立出
動作的線性組合[7]。但圖式動作合成的最大
的缺點便是其所合成出來的結果會跟現有的
動作很相似。
 
四、研究方法 
 
動作資料是由多個姿勢組成。每個姿勢
都會記錄該時間點其身體上關節的資訊，包
括旋轉角度、位置、大小等。因此在一個大
量的動作資料中會存在許多重複的姿勢，此
種現象表示該動作結束後可接著做另一個動
作而產生一連續動作。但除了考慮姿勢的相
似度之外，這兩個姿勢的混合必須要有足夠
的鄰近姿勢以產生較好的混合結果。圖式動
作合成（motion graph motion synthesis）便是
尋找這些姿勢並把動作資料整理成一個圖
（graph），因此新的動作合成便是在圖中找
一條路徑。 
在我們的方法中，邊（edge）代表動作
而節點（node）代表相同的姿勢，因此我們
可以把連續的一組動作看成是在圖中互相連
接的邊，每當動作結束都會停留在某個節點
上。我們為身體的每個部位皆建立了一個
圖，以下為我們的步驟： 
 將完整動作依據身體的部位進行分
割。 
 替每個部位建立一個圖。 
 計算該部位的姿勢對其他姿勢
的差異。 
 將差異較小的姿勢擷取出來，
並經過篩選而成節點的姿勢集
合。 
 建立圖的節點。 
 將把所有的動作變成圖上的
邊。 
 合成時，挑選想要合成的部位，並
挑選某個邊。 
 在動作轉換時，混合該部位的相鄰
兩個動作的結束姿勢與開始姿勢。 
 將上個步驟所產生的部位姿勢套用
在身體的該部位，以得到最後的結
果。 
 
4.1 身體部位的分割（Body Segmentation） 
方法中的第一個步驟是將完整的姿勢分
割成很多的部位姿勢，骨架式的動畫（skeletal 
based animation）資料把關節資訊記錄成一樹
狀結構，如圖一所示。 
 
 
圖一：動作資料的結構，每個關節的資訊將由樹狀結
構所組成。 
 
在結構中，每個關節只能有一個parent，一個
sibling，和一個child。圖二顯示傳統的關節
資料結構。 
 
計算關節的世界座標時，我們把角色的
世界座標乘於根關節（root joint）的矩陣，
並將乘出來的結果傳到它的child關節。同樣
地，針對每個關節，將拿到的矩陣再乘上關
節本身的矩陣，再將乘積後的結果傳到它的
child關節。此外，我們也必須把從parent關節
傳下來的矩陣傳到sibling關節。圖三說明關
節矩陣的計算流程圖。 
 
 5 
 
圖六：傳統的動作圖，在我們的方法中節點包含多個
姿勢相似姿勢，而每個邊是個動作。 
 
 我們的多重動作圖比傳統的動作圖還更
詳細，因為把每個部位合成的可能性都變成
一個獨立的動作圖，如圖七所示。在我們的
實作上，我們將一個人物分為身體、左手、
右手、左腳以及右腳，每個節點代表一組相
似的身體部位姿勢。 
 
圖七：多重動作圖，每個身體的部位皆擁有自己的動
作圖，而且動作的合成也是獨立進行。 
 
4.3 姿勢距離（Frame-to-frame distance） 
 在新的動作合成的過程中姿勢之間的轉
換過程是很重要的！為了保證轉換過程的品
質，混合的姿勢必須是相似的，因此我們必
須要計算每個姿勢之間的差異程度（也就是
姿勢的距離）。 
 在計算姿勢的距離之前，首先要將兩個
想要算的姿勢做對齊（alignment），每個身體
部位必須採取不一樣的對齊方式，不同的動
畫資料結構也會有不同的關節對齊方式，以
下是依照我們所使用的動畫資料結構而設計
的 對 齊 方 式 ： 手 的 部 分 ， 將 肩 膀
（clavicle-upper arm joints）對齊，腳的部分，
將腿部關節（thigh-calf joints）對齊，身體的
部分，將骨盆關節（pelvis-spine joints）對齊。 
 計算距離的方式有很多種，如計算關節
的Euclidian[9][5]距離、關節的速度[10]以及
關節的加速度[10]等，但在我們的實作中，是
計算關節的旋轉角度差距並做 weighted 
sum[10]，其公式如下： 
( ) ),log(, 1 biaibiai jjjjd −=    (1) 
jai 是姿勢 a 的第 i 關節的旋轉角度，jbi 是姿
勢 b 的第 i 關節的旋轉角度。此計算方式包
含鄰近姿勢的距離以考量速度的影響，
log(jai-1,jbi)算出來為一向量 v，意思是說物體
從 jai 方向旋轉到 jbi 方向的量值為在主軸
(v/||v||)上旋轉 2||v||。由於離開 root 越遠的關
節會造成視覺上的誤差，因此必須加重它們
的重要性，因此將 children 關節的權重調整
到比 parent 關節還大，最後姿勢的距離計算
公式為： 
∑
∑=
i
biaii
ab w
jjdw
D
),(
    (2) 
Dab 是姿勢 a 到姿勢 b 的距離，wi 是關節 i 的
比重。 
為了能快速地得到兩兩距離的資訊，我
們事先把距離資訊建成二維表格，而每個格
點內容的值代表其兩個姿勢的距離。我們將
二維表格用灰階圖來顯示，則會像圖八一樣。 
 
 
圖八：姿勢距離的灰階圖，比較白的畫素代表兩兩姿
勢差異較大，相反地，較黑的畫素代表兩個相似的姿
勢。 
 
混合姿勢需要有足夠長度的鄰近姿勢，
因此當滿足足夠長度鄰近姿勢的格點時，便
會選為候選節點，所以將不足混合長度
（blending length）的格點拿掉（實際上是更
改它們的距離為最大值），而挑選適合的節點
條件為圖九所示。 
 
 7 
 
 
圖十二：動作圖以及原本動作資料的比較。 
 
4.5 動作混合（Motion blending） 
 合成的最後步驟就是把兩個動作做混合
而接在一起。主要是利用節點的共同姿勢
（common pose）來做混合。假設動作a的最
後一個姿勢為Fea，而動作b的第一個姿勢為
Fsb，為了產生動作a到動作b的轉換，必須混
合 Fea 之 前 的 鄰 近 姿 勢 以 及 共 同 姿 勢
（common pose）之前的鄰近姿勢，也就是先
將Fea跟共同姿勢混合而產生新的姿勢Fac，再
把Fsb跟共同姿勢混合而產生新的姿勢Fbc，最
後把Fac跟Fbc做混合，以及把Fsb之後的鄰近姿
勢以及共同姿勢的之後的鄰近姿勢做混合，
而得到最後的結果。如圖十三說明整個混合
過程。 
 
 
圖十三：動作混合的過程以及共同姿勢（common pose）
的用途。 
 
針對每個身體部位的關節，我們更改它的矩
陣。並利用較好的線性內插方法 SLERP
（Spherical Linear Interpolation）將關節的旋
轉角度做內插。 
 
五、結果與討論 
5.1 實驗數據： 
我們使用的是個人電腦其規格為 P4 
3.0GHz CPU、1G 的主記憶體以及 GeForce 
FX5700LE 的顯示卡，使用 C++的程式語言
和 DirectX API，人物的動作資料記錄 30 個
關節的位置等資訊，動作資料長度為 88 秒，
每秒 30 個姿勢，也就是相當於 2664 個姿勢，
由於 DirectX API 的需求，因此檔案格式採用
便利的.X 資料格式。 
5.2 動作距離的格狀圖（Distance grid）： 
從動作格狀圖我們可以看到動作資料裡
的有許多相似的姿勢，代表著有很多重複的
姿勢，如圖十四所示。 
 
圖十四：我們所用的動作資料的距離格狀圖。 
 
門檻值的設定是相當重要的，因為會影
響到距離格狀圖的產生結果，圖十五顯示不
同的門檻值以及相對應所產生的動作格狀圖
及節點的數量。 
 
圖十五：不同的門檻值所產生的動作格狀圖，藍色點
表示選為節點的姿勢，而門檻值分別為 0.05，0.1，
以及 0.2。 
 
表格一顯示不同的門檻值以及相對應產
生的節點及邊的數量。門檻值較大會產生較
多數量的節點及邊，表示會有較多的動作轉
變，但混合品質會降低，圖十六說明門檻值
的調整對於品質的影響。 
 
門檻值 0.1 0.25 0.5 
節點數量 4 8 16 
邊的數量 2 13 39 
表格一：不同門檻值所產生的節點和邊的數量。 
 
 9 
參考文獻 
 
[1] Abe, Y., Liu, C. K., and Popovi´c, Z. 
Momentum-based parameterization of 
dynamic character motion. In Proceedings 
of the 2004 ACM 
SIGGRAPH/Eurographics symposium on 
Computer animation (2004), pp. 173–
182. 
[2] Arikan, O., and Forsyth, D. A. Interactive 
motion generation from examples. In 
Proceedings of the 29th annual conference 
on Computer graphics and interactive 
techniques (2002), pp. 483–490. 
[3] Fang, A. C., and Pollard, N. S. Efficient 
synthesis of physical valid human motion. 
ACM Transaction on Graphics 22, 3 
(2003), pp. 417–426. 
[4] Gleicher, M. Motion editing with 
spacetime constraints. In Proceedings of 
the 1997 symposium on Interactive 3D 
graphics (1997), pp. 139–148. 
[5] Gleicher, M., Shin, H. J., Kovar, L., and 
Jepsen, A. Snaptogether motion: 
Assembling run-time animation. ACM 
Transaction on Graphics 22, 3 (2003), pp. 
702–702. 
[6] Ikemoto, L., and Forsyth, D. A. Motion 
re-use: Enriching a motion collection by 
transplanting limbs. In Proceedings of the 
2004 ACM SIGGRAPH/Eurographics 
symposium on Computer animation (2004), 
pp. 99–108. 
[7] Kovar, L., and Gleicher, M. Flexible 
automatic motion blending with 
registration curves. In Proceedings of the 
2003 ACM SIGGRAPH/Eurographics 
Symposium on Computer animation 
(2003), pp. 214–224. 
[8] Kovar, L., and Gleicher, M. Automated 
extraction and parameterization of motions 
in large data sets. ACM Transaction on 
Graphics 23, 3 (2004), pp. 559–568. 
[9] Kovar, L., Gleicher, M., and Pighin, F. 
Motion graphs. In Proceedings of the 29th 
annual conference on Computer graphics 
and interactive techniques (2002), pp. 
473–482. 
[10] Lee, J., Chai, J., Reitsma, P. S. A., Hodgins, 
J. K., and Pollard, N. S. Interactive control 
of avatars animated with human motion 
data. ACM Transaction on Graphics 21, 4 
(2002), pp. 491–500. 
[11] Liu, C. K., and Popovi´c, Z. Synthesis of 
complex dynamic character motion from 
simple animations. ACM Transaction on 
Graphics 21, 3 (2002), pp. 408–416. 
[12] Popovi´c, Z., and Witkin, A. Physically 
based motion transformation. In 
Proceedings of the 26th annual conference 
on Computer graphics and interactive 
techniques (1999), pp. 11–20. 
[13] Tak, S., young Song, O., and Ko, H.-S. 
Spacetime sweeping: An interactive 
dynamic constraints solver. In Proceedings 
of the Computer Animation (2002), pp. 
261–270. 
[14] Witkin, A., and Kass, M. Spacetime 
constraint. In Proceedings of the 15th 
annual conference on Computer graphics 
and interactive techniques (1988), pp. 
159–168. 
 
 
 
 
 
 
SIGGRAPH是電腦圖學中最為重要的國際學術交流會議，主題涵蓋相當廣泛，包括影像處理
分析與應用、人物角色動畫、光影特效處理與模擬、物理模擬、計算幾何、Image-Based 
Modeling、流體模擬、Video Processing、Shape Deformation、Articulation等各個領域。
今年的SIGGRAPH 在加州的聖地牙哥舉辦。在會議中，接觸許多經驗豐富的學者讓我有許多
新的啟發。希望日後可以利用這些新想法發表更好的論文。 
 
三、建議 
經由這次參與國際會議的經驗，不論是在視野的開拓上或是學術交流方面，個人認為受益良
多。因此，本人非常希望國內相關主管機構能夠盡量補助國內大學院校老師與博士班研究生
出席國際學術會議。如此一定能夠提升未來各領域研究人才的素質，進而提高台灣未來之研
發競爭力。 
 
四、攜回資料名稱及內容 
名稱：SIGGRAPH 2007 Full Conference DVD。 
內容：Art Gallery, Computer Animation Festival, Courses, Educators Program, Emerging 
Technologies, Panels, Papers, Posters, Sketches, and Special Sessions programs。 
 
 
五、其他 
感謝國科會提供的研究經費，讓本人能順利參與圖學領域中的國際盛會。 
 
Wktai   Page 2 of 3 
 
16:00-17:30 Poster Session 
   隨後，大會安排參訪浙江大學的 CAD&CG國家重點實驗室。 
   晚間，大會於 Hangzhou XianXinJu Tea House舉行歡迎晚宴，會中把握機會與各國相關
領域學者交流。 
2006/6/27： 
    08:30  與昨日相同，大會安排兩場邀請演講，但今日邀請業界知名專家進行演說： 
           Hans Peter Seidel, MPI, Germany 與 Michael Kass, Pixar。 
    10:30 與前日相同之進行程序，但有三個平行的 Session同時進行： 
          Session A4： Session Chair: Ahmad Nasri 
          Subdivision Surfaces (1) 
          Session B4： Session Chair: Hans Peter Seidel 
          Surfaces and Shapes (1) 
          Session C4： Session Chair: Jiaoying Shi 
          Visualization  
    14:00 午餐後繼續進行三個平行的場次： 
Session A5： Session Chair: Soon Ki Jung 
Virtual Reality (1) 
Session B5： Session Chair: Vidya Setlur 
Facial Expression and Image Processing 
   15:40  
        Session A6： Session Chair: Bing-Yu Chen 
Simulation and Motion Synthesis (1)  
        Session B6：Session Chair: Shuming Gao 
Shape Matching  
 
2006/6/28 本日為 CGI最後一天的議程 
    08:30  Session B7： Session Chair: Fuhua (Frank) Cheng 
Digital Geometry Processing (2)  
Session C7：Session Chair: Fabian Di Fiore 
Natural Phenomena Rendering (2)  
Session D7：Session Chair: Daniel Thalmann 
Simulation and Motion Synthesis (2) 
 
 
    10:00 Session B8： Session Chair: Zhang Hongxin 
           Surfaces and Shapes (2) 我們被安排在此發表文章。 
     Session C8：Session Chair: Luciana Nedel 
Rendering, Tiling and Face Identification 
     Session D8： Session Chair: WonSook LEE 
Simulation and Motion Synthesis (3) 
 
    11:30  Session B9：Session Chair: Abdulwahed Abbas 
Subdivision Surfaces (2)  
Session C9： Session Chair: Anatole Lecuyer 
Virtual Reality (2)  
