本計畫之執行結果產生 
三篇碩士論文： 
一. 中英文摘要 
1.1 以提前偵測為基礎之快速 H.264/AV 編
碼器畫面內預測技術（臧松翔） 
新一代的 H.264/AVC Intra Prediction 技
術提供了許多的預測模式和最佳碼率失真
的最佳化(rate-distortion optimization ,RDO)，
但其代價是計算量大幅的增加，故 Intra 
Prediction 計算量的降低是 H.264/AVC 相關
研究重點之一。本論文提出一個以提早偵測
為基礎之新的演算法 early detection for intra 
prediction (EDIP)來降低計算量；本論文利用
多種方法如:IPCM detection、smooth block 
detection ，  SAD(Sum of the absolute 
differences) detection 等方法來降低計算量。
和 H.264/AVC JM 10.2 標準版本比較，本論
文的方法平均降低了 71%計算量，而代價是
PSNR 平均些微下降約 0.066 dB，及 bitrate
平均上升約 2.353% 
 
Early Detection Based Algorithm for fast H.264/AVC 
Intra Prediction 
H.264/AVC Intra Prediction the next generation of 
technology to provide a lot of the Prediction model and 
best of the distortion rate (Rate-Distortion Optimization, 
RDO) , but it’s brings the complexity and computation 
load increase drastically. The calculation reduce of the 
Intra Prediction H.264/AVC related research is very 
important. This paper presents a fast mode decision 
algorithm for H.264/AVC called Early Detection for Intra 
Prediction (EDIP) to reduce the amount of computation, 
this paper using various methods such as: IPCM detection, 
smooth block detection, SAD (Sum of the Absolute 
Differences) detection to reduce the amount of 
computation. Early Detection for Intra Prediction (EDIP) 
algorithm compared with H.264/AVC JM 10.2 standard 
version, this paper methods to reduce the average 71 % of 
the computation, while the average price is PSNR slight 
decline of about 0.066 dB, and Bitrate average increase of 
about 2.353 %. 
1.2 快速 H.264 編碼之量化後零係數提前偵
測演算法（陳冠名） 
我們提出在 H.264 上，能省略量化和反
量化步驟之提前偵測量化後零係數(Early 
Detection Zero Quantized Coefficients, 
EDZQ)改善流程，針對每個處理殘餘方塊中
每個係數，事先推導出其提前偵測量化後零
係數臨界值(Threshold for Early 
Detection Zero Quantized Coefficients, 
TH_EDZQ)，當整數 DCT 之核心轉換或 HT 後
之係數取絕對值符合此臨界值(TH_EDZQ)時，
就可以精準的找出符合量化為零之元素。 
除此之外我們提出提前偵測量化後零係數
臨界值中之最小值(THmin_EDZQ)來判斷是否
跳過量化與反量化步驟流程；實驗結果顯示，
在 QP51 時，整體編碼時間分別有 6.01%和
7.83%最大改善幅度，另外就單純以量化與
反量化編碼時間這個角度來觀看，4個視訊
整體中最大改善幅度更高達 54.56%和
60.26% 。 當 使 用 QP28 為 TH_EDZQ 與
THmin_EDZQ 之分界點，將使其於高 QP 到低
QP 時，都有最佳的改善效果。 
 
EARLY DETECTION OF ZERO QUANTIZED 
COEFFICIENTS for fast H.264 Encoding 
 
H.264/AVC uses many powerful techniques to 
achieve significant gains in compression efficiency and 
visual quality compared with priori video coding 
standards such as MPEG4. However the high coding 
efficiency requires huge computation.  
1.3 無線監控之 H.264 視訊品質調整省電操
作研究（陳懷恩） 
本論文考量高壓縮效率的 H.264 視訊
於無線網路 802.11 上的傳輸研究，利用即
時從無線網路偵測的通道狀況參數，加上跨
層的技術來達到以最小的能量消耗來改變
視訊品質。在調整視訊品質(PSNR)的方法有
二.以提前偵測為基礎之快速 H.264/AV 編碼器畫面內預測技術（臧松翔） 
 
ABSTRACT 
 
新 一 代 的 H.264/AVC Intra 
Prediction 技術提供了許多的預測模
式 和 最 佳 碼 率 失 真 的 最 佳 化
(rate-distortion 
optimization ,RDO)，但其代價是計算
量大幅的增加，故 Intra Prediction
計算量的降低是H.264/AVC相關研究重
點之一。本論文提出一個以提早偵測為
基礎之新的演算法 early detection 
for intra prediction (EDIP)來降低
計算量；本論文利用多種方法如:IPCM 
detection、smooth block detection ， 
SAD(Sum of the absolute differences) 
detection 等方法來降低計算量。和
H.264/AVC JM 10.2 標準版本比較，本
論文的方法平均降低了 71%計算量，而
代價是PSNR平均些微下降約0.066 dB，
及 bitrate 平均上升約 2.353%。 
 
1. INTRODUCTION 
 
H.264/AVC 是由 ITU-T 和 ISO 聯合制定的新一代視
訊壓縮標準[1]，和現在的 MPEG-1/2/4 視訊標準比較，
H.264/AVC 能提供更高的編碼效能，因此 H.264/AVC 
很適用於視訊電話、視訊會議等相關應用。但是，為
了能達到更高的壓縮效率和視覺品質，H.264 採用許
多 新 的 編 碼 技 術  [1] ， 並 利 用 最 佳 碼 率 失 真 比
(rate-distortion optimization,RDO)成本函數來達到最
佳 編 碼 效 能 ， 因 此 ， 各 項 視 訊 應 用 場 合 皆 採 用
H.264/AVC 為標準，例如 DVB-T，DVB-H，Blu-Ray，
HDV，以達到更好的頻寬使用率，或更高的儲存空間
的利用率。相對的 H.264/AVC 帶來了非常龐大的計
算量，使得 H.264/AVC 難以達成即時通訊的應用，
因此如何降低其計算量是我們所需解決的問題。 
 許 多 學 者 都 朝 著 降 低 計 算 量 來 進 行 研 究
[6]~[17]。其中知名演算法 Pan[6] 利用 Sobel 簡單的
濾波器計算出像素點在水平與垂直分量的強度，來判
斷物體紋理的方向來達到化簡的目的。知名演算法
Jhing-Fa Wang[7]提出了一種結合 MPEG-7 紋理分類、
次取樣，濾波器的方法來節省時間。我們發現許多
Intra Prediction 加速的方法都是基於使用濾波器來進
行前處理的方法來達到目的，基於以上理由本文章提
出了一種新的方法利用原始區塊和重建後的區塊之
間的關係來達到加速的目的，比起 Pan[6]，Jhing-Fa 
Wang[7]方法的由實驗結果證明，他可以多節省約
11%的時間。 
 
在篇文章中第二章介紹 Intra Prediction 相關文獻
回顧，第三章介紹提出新的演算法 early detection for 
intra prediction(EDIP)之內容，第四章為實驗結果，第
五章為結論。 
2. Intra Prediction 文獻回顧 
 
        在新的編碼技術裡降低空間冗餘的技術為
框內預測，它利用了邊緣像素預測來達到其目的，框
內預測利用目前的編碼區塊可先由上面與左邊的邊
緣像素值來重建影像，再將原始影像與預測出來的影
像作矩陣相減所得到的值，去經過離散餘弦轉換
(discrete cosine transform:DCT)、量化(quantizeation)、
編 碼 (entropy coding) 來 增 加 它 的 壓 縮 效 率 ，
H.264/AVC 在 4×4 亮度方面提供了九種預測模式，
16×16 亮度方面提供了四種預測模式，8×8 彩度以提
供了四種預測模式，每個預測模式都有它的預測方向，
與其預測素值的算法。 
 
A.4×4 亮度模式: 
圖 1 為的九種預測模式，其中圖 1(a)的 a-p 的英文數
字為目前將要預測的編碼像素值，利用大寫英文數字
A-Q 的邊緣像素值經過由圖 1(b)所表示的八種預測
方向與 DC 預測模式來預測其小寫像素值。 
 
圖 1 
B.16x16 亮度模式 
 
16x16 亮度模式和 4X4 亮度模式很相似，他有四
種預測模式，預測也是靠左邊和上面之大寫英文像素
值來推導小寫英文像素值，他的大預測範圍比較適合
平坦區塊。 
<I16DC_TH，代表其紋理平坦因 此跳到步驟 4，不 
成立則步驟 3。 
 
3.做 INTRA16X16、INTRA4X4 和 IPCM。直到 INTRA
流程結束。 
 
4 .做 INTRA16X16 和 IPCM。直到 INTRA 流程結     
束。 
 
這裡 I16DC_TH 如何判別，我們提出了一個叫 
sec-to-bitrate 的效率指標以後簡稱 SBR， 我們利用不
同門檻值所得出來△BITRATE，和△TIME 的比值取
最小，來判斷要使用哪一個門檻。這裡我們 I16DC_TH
分別使用 0，512，1024，1536，2048 來測試，如表 4。 
SBR 定義為: 
 
        (△TIME/△BITRATE)*100 (四捨五入) 
 
△TIME 代表現在門檻值所實驗出來的時間減之前門
檻值所實驗出來的時間 
 
△BITRATE 代表現在門檻值所實驗出來的 bitrate 減
之前門檻值所實驗出了的 bitrate 
 
這裡我們 I16DC_TH 選擇 1024 基於他雖然 SBR 不是
最小，但它的節省時間比較多和 bitrate 只比 SBR 最
小的些微上升。 
 
 
C.smooth block detection 在亮度 4x4 
 
      由之前介紹亮度 4x4 有 9 種模式，其中一個為
DC 模式，其出現時機為圖片紋理平坦區域；也就是
說每像素周圍的值非常接近或同樣的值。假設裡面有
些個平坦的 4X4 區域的話，他必須經由 9 次運算才
能抓出來，為了解決這問題。 
基於以上理由我們提出了一個判別區塊是否平坦的
數學式如下 
                   3 31S ( ( , ))4*4 0 0
s i j
i j
∑= ∑= =
      
(5)                    
 
              (6) 
       
s 代表一個 Macroblock 其平均值、INTRA 4x4 DC 代
表一個 Macroblock 的加權值，I4DC_TH 為判別是否
平坦的門檻值。 
和之前亮度 16x16 類似步驟如下: 
1.計算(5)得 S，再計算(6)得 INTRA 4X4_DC 
 
2. 進 行 INTRA 運 算 時 ， 如 果 INTRA 4X4_DC 
<I4DC_TH，代表其紋理平坦因 此跳到步驟 4，不 
成立則步驟 3。 
 
3. 把亮度 4x4 種模式都做完。束。。 
 
4 . 只做亮度 4X4 DC 模式。 
 
這裡 I4DC_TH 我們也是利用 SBR 得知，如表 5。 
 
 
 
D. SAD(Sum of the absolute differences) detection 
我們提出一個演算法，我們先計算 Intra Prediction 每
個模式的 SAD 值(利用原本畫面減重建畫面)；這裡用
SAD 來進行前處理是因為 distortion 還要經過平方運
算，因此 SAD 在亮度 4X4 有 9 個、亮度 16X16 有 4
個，彩度 8x8 有 4 個。 
 
i.亮度 4x4 (表 6) 
1.INTRA4X4 一共有 9 個模式，因此計算過後， 他
一共有 9 個 SAD。 
2.選最小 SAD 所代表的模式，簡稱 I4_MODE_X。 
3.取 I4_MODE_X 相鄰的兩個方向。 
4.計算 I4_MODE_X 和相鄰他的兩個模式還有 DC 模
式。 
 
ii. 亮度 16x16(表 7) 
1 亮度 16X16 一共有 4 個 MODE，因此計算過後，他
一共有 4 個 SAD。 
2. 選 最 小 SAD 所 代 表 的 MODE ， 簡 稱 
I16_MODE_X。 
3.計算 I16_MODE_X 和 DC 模式。 
 
iii.彩度 8x8(表 8) 
1.INTRA chroma 有 U、V 共有 8 個 SAD。及 U 有 4
個，V 有 4 個。 
2. 選 最 小 的 SAD 所 代 表 的 MODE ， 簡 稱
Ichroma_MODE_X。 
3.如果 Ichroma_MODE_X 為 DC 值我們只算 DC 
MODE。 
如果最小的 SAD 所帶表之 MODE 不為 DC MODE，
我們只計算 Ichroma_MODE_X 和 MODE3。 
 
4. 實驗結果 
 
 
 
表 1 IPCM 不同 QP 測試表 
foreman 
QP IPCMON/OFF PSNR bitrate 
0 IPCM_OFF 73.488 19762.02 
  IPCM_ON 73.508 19761.29 
1 IPCM_OFF 70.258 19253.41 
  IPCM_ON 70.272 19253.37 
2 IPCM_OFF 63.983 18178.42 
3 3
INTRA 4X4 DC ( | ( , ) |)
0 0
s i j S
i j
∑= −∑= =
Average -0.062 2.602 -71.522 
  hing-Fa Wang [7] 
Sequence PSNR bitrate% SAVE_TIME%
Foreman -0.02 2.14 -60.35 
Container -0.011 3.129 -59.12 
Silent -0.013 2.998 -59.45 
Coastguard -0.036 2.83 -61.49 
Average -0.021 2.915 -59.84 
  Pan[6] 
Sequence PSNR bitrate % SAVE_TIME%
Foreman -0.285 4.437 -65.38 
Container -0.234 3.695 -56.36 
Silent -0.183 3.54 -65.17 
Coastguard -0.106 2.361 -55.02 
Average -0.422 3.508 -60.483 
 
表 10 EDIP CIF 
 EDIP Algorithm 
Sequence PSNR bitrate% SAVE_TIME%
Paris -0.043 3.244 -72.36 
Mobile -0.082 1.08 -70.826 
Tempete -0.063 1.968 -71.715 
Stefan -0.093 2.123 -72.224 
Average -0.07 2.104 -71.781 
 Jhing-Fa Wang [7] 
Sequence PSNR bitrate% SAVE_TIME%
Paris -0.016 2.594 -62.49 
Mobile -0.036 1.702 -59.58 
Tempete -0.019 2.257 -61.01 
Stefan -0.017 2.659 -58.5 
Average -0.022 2.303 60.39 
 Pan[6] 
Sequence PSNR bitrate% SAVE_TIME%
Paris -0.23 3.21 -57.779 
Mobile -0.255 3.168 -59.806 
Tempete -0.229 3.514 -57.697 
Stefan -0.242 3.717 -57.972 
Average -0.243 3.402 -59.23 
5.結論 
 
透過數種所觀察到的現象與實驗，本論文提出了
以 H.264 JM 10.2 標準版為基礎，基於 RDO 可以減少
計算 MODE 的 EDIP 演算法，來達到節省計算量，且
部分演算法還可以依據不同場合調整門檻值，以利於
不同場合的需求，例如在極有限頻寬的情況下，可調
低門檻值來因應頻寬的不足，但同時也能減輕部份的
系統資源。 在頻寬充裕的場合裡可以調高門檻值，
來節省更多系統資源。 
 
 從實驗結果我們可以得知，提出來的 EDIP 演算
法比官方版本的編碼器可以節省時間達到約 71%，他
所付出的代價是 PSNR 稍微的下降和 bitrate 稍微的提
昇，會造成這原因是因為，我們提出的 EDIP 演算法
可以逼近原先 RDO 的演算法，但是不能完全的選擇
最佳模式，因此在部分地方上所選的 MODE 可能不
是最好的，所以會造成 PSNR 的下降和 bitrate 的增加。
在 PSNR 的下降裡，其實是可忽略的，因為平均下降
大約 0.066dB，在一般的視覺是很難察覺出來的，尤
其在使用為 QICF(176*144)的格式，0.066dB 機乎看
不出來。 
 
REFERENCES 
 
 [1]  Thomas Wiegand, Gary Sullivan, Ajay Luthra, “Draft 
ITU-T Recommendation and Final Draft International 
Standard of Joint Video Specification (ITU-T Rec. H.264 | 
ISO/IEC 14496-10 AVC),” Joint Video Team (JVT) of 
ISO/IEC MPEG & ITU-T VCEG, May 2003. 
[2]     ITU-T, “Advanced video coding for generic 
audiovisual services,” ITU-T Recommendation H.264, March 
2005. 
[3]http://iphome.hhi.de/suehring/tml/doc/ldec/html/index.html    
(2008.6.30) 
[4]   Iain E.G. Richardson, “H.264 and MPEG-4 Video 
Compression - Video Coding for Next-generation Multime 
[5]  戴顯權、陳瀅如、王春清，「多媒體通訊原理、標準與
系統」，紳藍出版社，第二版，2003。 
[6]  F. Pan, X. Lin, S. Rahardja, K.P. Lim, Z. G. Li, D. Wu 
and S. Wu, “Fast modedetection algorithm for intraprediction 
in H.264/AVC video coding,” IEEE  Trans.Circuits and 
Systems for Video Technology, vol. 15, no. 7, pp. 813-822, 
July,2005 
[7] Jhing-Fa Wang; Jia-Ching Wang; Jang-Ting Chen; 
An-Chao Tsai; Anand Paul;“A novel fast algorithm for intra 
mode detection in H.264/AVC encoders “ 
Circuits and Systems, 2006. ISCAS 2006. Proceedings. 2006 
IEEE International  Symposium on 21-24 May 2006 
Page(s):4 pp. 
[8]  F. Fu, X. Lin, and L. Xu, "Fast intra prediction algorithm 
in H.264-AVC," in  Proceedings of 7th International 
Conference on Signal Processing, 2004, vol. 2,  pp. 
1191-1 194.Y. W. 
[9]  C. S. Won, D. K. Park, and S. J. Park, "Efficient use of 
MPEGG-7  edge  histogram descriptor," ETRI Journal, vol. 
24, no. 1, pp. 23-30, February 2002. 
[10]  J. Kim and J. Jeong, “Fast intra-mode detection in 
H.264 video coding using 
    simple directional masks,” 2005 Visual Communications 
三.快速 H.264 編碼之量化後零係數提前偵
測演算法（陳冠名） 
ABSTRACT 
 
我們提出在 H.264 上，能省略量化和反量化步驟之提
前偵測量化後零係數(Early Detection Zero Quantized 
Coefficients, EDZQ)改善流程，針對每個處理殘餘方
塊中每個係數，事先推導出其提前偵測量化後零係數
臨界值(Threshold for Early Detection Zero Quantized 
Coefficients, TH_EDZQ)，當整數 DCT 之核心轉換或
HT 後之係數取絕對值符合此臨界值(TH_EDZQ)時，
就可以精準的找出符合量化為零之元素。 
除此之外我們提出提前偵測量化後零係數臨界值中
之最小值(THmin_EDZQ)來判斷是否跳過量化與反量
化步驟流程；實驗結果顯示，在 QP51 時，整體編碼
時間分別有 6.01%和 7.83%最大改善幅度，另外就單
純以量化與反量化編碼時間這個角度來觀看，4 個視
訊整體中最大改善幅度更高達 54.56%和 60.26%。當
使用 QP28 為 TH_EDZQ 與 THmin_EDZQ 之分界點，
將使其於高 QP 到低 QP 時，都有最佳的改善效果。 
keyword 
 
1. INTRODUCTION 
H.264/AVC uses many powerful techniques to achieve 
significant gains in compression efficiency and visual 
quality compared with priori video coding standards 
such as MPEG4. However the high coding efficiency 
requires huge computation.  
 
新 一 代 視 訊 壓 縮 標 準 H.264 採 用 了 CAVLC ， 
Deblocking Filter， Intra Prediction 等各種創新演算法
[1][2]，使得 H.264 整體壓縮效率遠比以往 MPEG-1，
MPEG-2，H.263 等視訊標準來得優異[5]，甚至是
MPEG-4 壓縮效率的兩倍。但是 H.264 高壓縮效率的
代價，就是龐大的計算量，越佳的壓縮效率通常需要
越多的運算處理。因此如何在不影響 R-D performace
下，降低計算量是大家努力的研究議題。 
另外從[6]中可知， Motion Estimation 佔整體運算量
最高，而在許多方法被提出改善其複雜度之後，佔整
體運算量次之之整數 DCT 與量化部份，也成為改善
的對象。 
在 H.264 視訊壓縮編碼過程，經由整數 DCT 和量化
運算後，發現在低位元率的視訊或是移動緩慢的視訊
序列中，存在著許多被量化為零的係數比例偏高，甚
至是整個 4x4 量化方塊大小都為零(all-zero block, 
AZB) [4]，故整數 DCT 與量化就成為研究重點。 
相關之 AZB 文獻 review→提出與方法差異處之演算
法 
 
上述之方法都是找出一個與 SAD 相關之數學關係式，
來跳過整個 AZB，藉於此，我們提出一個不同於以
往以 Block 為單位，而是以核心轉換後單一係數為單
位，來判斷是否能省略每個係數之量化與反量化步驟，
達到節省冗餘之計算量 
 
The rest of the paper is organized as follows. Section 2 
introduces the integer transformation and quantization 
of H.264. Section 3 derives the proposed algorithm from 
a theoretical point of view. In Section 4, some 
experimental results are presented to show the 
effectiveness of the proposed algorithm. Finally, the 
concluding remarks are located in Section 5. 
 
 
2. INTEGER TRANSFORMATION AND 
QUANTIZATION IN H.264 
 
H.264 在轉換方面使用以整數 DCT 來避免反轉換時
產生誤差，其整數 DCT 定義 [3] 如下： 
 ( ) ECXCY T ⊗=             
(1) 
其中
⎥⎥
⎥⎥
⎦
⎤
⎢⎢
⎢⎢
⎣
⎡
−−
−−
−−=
1221
1111
2112
1111
C , 
⎥⎥
⎥⎥
⎥⎥
⎥⎥
⎦
⎤
⎢⎢
⎢⎢
⎢⎢
⎢⎢
⎣
⎡
=
4242
22
4242
22
22
22
22
22
babbab
abaaba
babbab
abaaba
E
 
2
1=a , 5
2=b
 
, 2
1=d  
 
其中 ( )TCXC 我們稱為核心轉換(Core Transform)，我
們使用符號 ijW 代表之，有了上述整數 DCT Y 後和
H.264 提供一組從 0-51 之量化參數，其 H.264 量化公
式被定義 [3] 如下： 
 ( )
)()( ijij
ijij
WsignZsign
qbitsfMFWZ
=
>>+⋅=
            
(2) 
其中 )6/(15 Qpfloorqbits +=  
符號>> 即為位元右移。 ()sign 為取出括號內係數之
正負號。常數 f ，當預測誤差如為畫面內方塊時(intra 
block)時，其值為 3/2 )6/(15 Qpfloor+ ，如為畫框間方塊
時(inter blocks)時，其值為 6/2 )6/(15 Qpfloor+ ，而 MF
如 Table 1，而 Table 1 可以使用如數學矩陣 (3) [4]
表示之。 
Table 1: Multiplication factor, MF [3] 
 
Qp%6
Positions
(0,0),(0,2)
(2,0),(2,2)
Positions 
(1,1),(1,3) 
(3,1),(3,3) 
 
Other 
positions
0 13107 5243 8066 
最後，我們使用以 TH_EDZQ_Table(51, Intra)為例子
如 Fig. 1 所示，4x4 方塊中以 zigzag 掃瞄方式一一對
每個核心轉換後之係數取絕對值判斷是否小於等於
臨界值，如果小於等於臨界值則直接跳過量化與反量
化動作，直接處理下一個係數，可省略這之間冗餘之
流程。 
 
After Core Transform 
-38 -2591 76 367
25 -28 49 -99
-12 25 -26 25
15 -39 17 -12  
 
    TH_EDZQ_Table(51, Intra) 
|Wij| > TH_EDZQ (51, r, Intra ) ?
         
597 960 597 960
960 1533 960 1533
597 960 597 960
960 1533 960 1533  
 
After use TH_EDZQ_Table(51, Intra) 
0 -2 0 0
0 0 0 0
0 0 0 0
0 0 0 0  
Fig. 1: 使用臨界值判斷示意圖 
 
 
3.2 提前偵測量化後零係數之臨界值最小值： 
 
針對 3.1 節所求得之臨界值(TH_EDZQ)，考量複雜度
是否再精簡的角度，我們試著取其臨界值中之最小值
(THmin_EDZQ)來判斷是否跳過量化與反量化步驟，而
TH_EDZQ 與 THmin_EDZQ 關係如 Fig. 2 所示。 
 
346 533 346 533
533 833 533 833
346 533 346 533
533 833 533 833                  
346=min{346,533,833}
 
),,44(__ InterrTableEDZQTH            ),44(_min InterEDZQTH  
Fig. 2: for example of THmin_EDZQ(44, Inter)  
 
會考量使用以此觀點的原因如下： 
1、可以節省存取 TH_EDZQ_Table(Qp, r, Inter/Intra)
的矩陣時，須再一次透過類似指標間接參考這個
值的方式取得所需之值，因而額外付出所花費的
時間。 
2、不需因建立 TH_EDZQ_Table(Qp, r, Inter/Intra)所
需之矩陣，因而使用較大量記憶體空間(資源有限
之小型系統更適合) 。 
 
當 使 用 所 得 的 量 化 後 零 係 數 臨 界 值 中 之 最 小 值
(THmin_EDZQ)來當臨界值並不會影響任何 PSNR 和
bit-rate，因為當臨界值取用最小值時，代表其門檻是
更嚴格的；我們試著以 Fig. 3 之範例來說明，整數
DCT 後之係數，其取絕對值後，因大於量化後零係
數臨界值中之最小值(THmin_EDZQ)而不會滿足我們
提出的條件值，使其無法進入 Proposed 改善流程而
省略量化步驟，但由於不滿足我們提出的改善條件流
程，故會進行執行 H.264 量化公式，而由於整數 DCT
核心轉換後之係數取絕對值小於實際上之臨界值
(TH_EDZQ)，最後依然仍會被量化為零。 
 
After Core Transform 
100 433 300 430
520 536 533 546
200 -50 250 235
123 -11 523 245  
TH_EDZQ_Table                      
THmin_EDZQ 
346 533 346 533
533 833 533 833
346 533 346 533
533 833 533 833                    
346
 
 
After use TH_EDZQ_Table             After use 
THmin_EDZQ 
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0                    
0 433 0 430
520 536 533 546
0 0 0 0
0 0 523 0  
 
                                   
After Quantisation for  
                                            
non-zero coefficients 
same result
                   
0 0 0 0
0 0 0 0
0 0 0 0
0 0 0 0  
Fig. 3: Uses THmin_EDZQ still have same result. 
 
 
但是從 Fig. 3 可知，使用零量化係數臨界值中之最小
值(THmin_EDZQ)為臨界值後，有可能須要再經過量化
運算的動作，進而增加運算量，可是當 QP 越大時，
伴隨著臨界值 (THmin_EDZQ)變大，符合此臨界值
(THmin_EDZQ)的數量也就越多，其效果更是幾乎和使
用臨界值(TH_EDZQ)時的效果相當，如 Fig. 4 所示。 
 
After Core Transform 
559 195 -79 0
-426 -261 24 -3
31 -199 -27 -2
-13 -78 47 -69  
 
TH_EDZQ_Table(28, Inter)             THmin_EDZQ(28, 
Inter) 
53 83 53 83
83 130 83 130
53 83 53 83
83 130 83 130                    
 
Fig. 7: 使用 TH_EDZQ 改善符度(Q and IQ 編碼時間) 
 
而 Fig. 8，使用量化後零係數臨界值中之最小值
(THmin_EDZQ)來判斷是否跳過量化步驟時，跟使用量
化後零係數臨界值(TH_EDZQ)一樣的改善趨勢，而在
QP51 時，akiyo 視訊改善從 6.01%提升到 7.83%，成
長快 1.5%，而 4 個視訊整體也從平均改善 5.42%提升
到平均改善 7.03%，另外就單純以量化與反量化編碼
時間的角度來觀看(如 Fig. 9) ，4 個視訊整體平均改
善幅度也從 45.14%提升至 54.93%，正好呼應了第 3.2
節所提到的，使用(THmin_EDZQ)除了能節省為了找尋
符合其條件之臨界值所花費記憶體存取時間外，又因
為於 QP 越高時，越能和使用(TH_EDZQ)為臨界值有
相當之效果。 
上述說明，顯示使用(THmin_EDZQ)為臨界值時，於高
QP 有著較使用(TH_EDZQ)為臨界值較高之改善幅度，
有了上述現象後，我們針對使用量化後零係數臨界值
中之最小值 (THmin_EDZQ)與量化後零係數臨界值
(TH_EDZQ)的改善幅度作單視訊比較，如 Fig. 10 所
示，結果顯示，4 個視訊於高 QP 時，使用臨界值
(THmin_EDZQ)來當作 3.3 節的 TH 時，於高 QP 都可
獲得較高的改善幅度，而低 QP 時則效果較差；相反
的，4 個視訊使用臨界值(TH_EDZQ)來當作 3.3 節的
TH 時於低 QP 時，都可獲得較高的改善幅度，於 QP
時的效果則較差，因此大約可求出 Qp28 為兩種臨界
值分界點。 
 
 
Fig. 8: 使用 THmin_EDZQ 改善符度(Q and IQ 編碼時
間) 
 
 
Fig. 9: 使用 THmin_EDZQ 改善符度(Q and IQ 編碼時
間) 
 
 
(a) akiyo 
 
(b) bus 
 
(c) foreman 
Q and IQ Time (Use TH_EDZQ v.s. JM10.2)
0.00%
10.00%
20.00%
30.00%
40.00%
50.00%
60.00%
16 20 24 28 32 36 40 44 48 51
QP
Sa
ve
 T
im
e 
(%
)
akiyo_cif.yuv
bus_cif.yuv
foreman_cif.yuv
mobile_cif.yuv
Total Encoding Time (Use THmin_EDZQ v.s. JM10.2)
0.00%
1.00%
2.00%
3.00%
4.00%
5.00%
6.00%
7.00%
8.00%
9.00%
16 20 24 28 32 36 40 44 48 51
QP
Sa
ve
 T
im
e 
(%
)
akiyo_cif
bus_cif
foreman_cif
mobile_cif
Q and IQ Time (Use THmin_EDZQ v.s. JM10.2)
-10.00%
0.00%
10.00%
20.00%
30.00%
40.00%
50.00%
60.00%
70.00%
16 20 24 28 32 36 40 44 48 51
QP
Sa
ve
 T
im
e 
(%
)
akiyo_cif
bus_cif
foreman_cif
mobile_cif
akiyo_cif
0.00%
1.00%
2.00%
3.00%
4.00%
5.00%
6.00%
7.00%
8.00%
9.00%
16 20 24 28 32 36 40 44 48 51
QP
Sa
ve
 T
im
e (
%
)
THmin_EDZQ
TH_EDZQ
bus_cif
0.00%
1.00%
2.00%
3.00%
4.00%
5.00%
6.00%
7.00%
8.00%
16 20 24 28 32 36 40 44 48 51
QP
Sa
ve
 T
im
e (
%
)
THmin_EDZQ
TH_EDQ
foreman_cif.yuv
0.00%
1.00%
2.00%
3.00%
4.00%
5.00%
6.00%
7.00%
8.00%
16 20 24 28 32 36 40 44 48 51
QP
Sa
ve
 T
im
e (
%
)
THmin_EDQ
TH_EDZQ
.  
Fig. 11 對應到 JM10.2 dct_luma function 之流程圖 
 
 
 
NO
YES
YES
NO
NO
(Integer DCT)
for all 4x4 coeff
run=-1;
coeff_ctr=0;
(Inverse HT)
YES
coeff_ctr < 4 ?
absm(m1[j][i]) >  TH_EDZQ ?
coeff_ctr ++
Level != 0 ?
m1[j][i]=ilev
( RLC )
run = -1;
(Quantization)
 level =(absm(m1[coeff_ctr]) * levelscale[qp_rem][0][0] 
+ (leveloffset[qp_per][0][0]<<1)) >> (q_bits+1);
run++;
ilev=0;
(Inverse 
Quantization)
(HT for DC coeff)
get m1[j][i] value
pick out DC coeff
NO
YES
YES
NO
NO
YES
coeff_ctr < 16 ?
absm(img->m7[n2+j][n1+i])>  TH_EDZQ ?
coeff_ctr ++
Level != 0 ?
m1[j][i]=ilev
( RLC )
run = -1;
(Quantization)
level=(absm(img->m7[n2+j][n1+i])*levelscale[qp_rem][i][j]
+leveloffset[qp_per][i][j])>>q_bits;
run++;
ilev=0;
(Inverse 
Quantization)
run=-1;
coeff_ctr=1;
(Inverse Integer 
DCT)
b8 < 1 ?
b4 < 4 ?
YES
NO
NO
b4=0;
b8=0;
b4 ++
b8 ++
YES
YES
YES
Start
8x8 
residual 
data
End
 
Fig. 13 對應到 JM10.2 dct_chroma function 之流程圖 
sequences including Foreman, containers and Stefan 
are used in the experiments.  
The simple frame copy technique in H.264 is used 
when a frame can not be recovered. 802.11 wireless 
protocol with two-ray ground reflection model [22][23] 
for radio propagation are used in NS2 for simulation.  
 
  3. OBSERVATION, ANALYSIS AND PROBLEM 
3.1 The Observation  
We assume that the MWC implement a simple 
transmitting power saving technique as shown in Figure 
2: the antenna transmitting power is turned ON, when 
there are bits to be transmitted; otherwise the antenna 
transmitting power is turned OFF.  
 
Figure 2: A diagram for transmission power and data 
Based on the above assumption, we have  
n
n
n
BT
BW
=                                              
(1) 
Where nT is the time (in seconds) required to transmit 
the n_th frame， nB is the number of bits used to encode 
the  n_th frame at the physical layer for radio 
transmission. BW n  (bandwidth) is the transmission bit 
rate of the 802.11b channel, which is a non-stationary 
parameter, we assume BW a constant (11Mbps) for 
simplicity of the derivation. Then, the energy required to 
transmit the n_th frame nE  is derived as follows: 
M
n n tE T P= × , thus Mnn t
n
BE P
BW
= ×            
(2) 
From Equation (2), we know that energy required to 
transmit the n_th frame is a function of number of 
encoded bits for the n_th frame as well as the 
transmitting power.          
Experiments show that video quality (averaged 
frame PSNR) is a function of quantization parameter QP 
in H.264as well as the receiving signal strength SNR at 
base station. Experiments on Foreman sequence reveal 
this fact as shown in Figure 3 that higher (lower) video 
quality in PSNR can be achieved either stronger (weaker) 
receiving signal strength (higher SNR) at the physical 
layer in base station or smaller QP (larger QP) setting in 
H.264 encoder.  
 
Fig. 3: PSNR vs. SNR for Foreman at various QP 
That is a certain video quality can be achieved by two 
methods: Method 1: Adjusting bit rates by adjusting QP 
in H.264 encoder and Method 2: Adjusting the receiving 
signal strength 
BSNR  at base station by adjusting the 
transmitting power at the MWC MtP . We further 
observe that the two methods require different energy 
consumption from the MWC battery. Therefore, our first 
research goal is to know which method consumes less 
energy to achieve assigned video quality. 
 
3.2 The Analysis 
The relationship between energy consumption, QP 
(encoded bits) and transmitting power at MWC system 
is as follows: E_mwc_n = nE + codecE _n, where 
E_mwc_n is the total energy consumption in MWC 
system. nE  is the transmitting energy for the n_th 
frame and codecE _n is the energy consumption in 
H.264 codec and the network layers. In this appear, we 
limit our attention on the transmitting energy only.   
A new assigned video quality can be achieved by 
either method 1 or method 2 from an old video quality. 
The transmitting energy consumption required by 
method 1 (adjusting QP, thus encoding bits) and method 
2 (adjusting transmitting power, thus SNR) are 
E_n_new_1 and E_n_new_2 separately. We have  
Method 1: E_n_new_1= M
oldnt
n
newn p
BW
b
__
_ ×    (3) 
Method 2: E_n_new_2= M
newnt
n
oldn p
BW
b
__
_ ×    (4) 
Where status ( oldnb _ , M oldntp __ ) are total encoded bits 
and the transmitting energy required for the n_th frame 
before (old) the quality adjustment. If video adjustment 
by method 1, the new status is ( newnb _ , M oldntp __ ); if by 
method 2, the new status is ( oldnb _ , M newntp __ ).     
3.3 The Experiments 
Based on the analysis above, we conduct experiments 
to investigate whether method 1 or method 2 is more 
energy efficient.  Three CIF video test sequences 
foreman, container and Stefan of 100 frames are used 
representing moderate, smooth and fast motion 
respectively.  
   Under the condition that transmitting power from the 
Foreman 1.28 1.30 1.24 1.31 1.31 0.05
Containe
r 1.31 1.33 1.30 1.32 1.32 0.02
Stefan 1.21 1.32 1.30 1.38 1.29 0.06
Average 1..27 1.32 1.28 1.34 1.31 0.05 
Thus, for QP decrement of 2, we may let BPτ =1.31. 
For QP increment of 2, the BPτ =
28
30
=
=
QP
QP
b
b
=1/1.30=0.778. thus, the average BPτ  with increment 
QP of N is the reciprocal of  average BPτ  with 
decrement QP of N. 
BPτ  for other QP increment of N is not shown due to 
limit of pages. 
 
4.3 Selection based on Dynamic Estimation of BPτ   
Selection based on constant BPτ  is simple but not 
precise enough. We propose an estimation procedure for 
more precise BPτ  as follows:  
Step 1. The MWC detects scene changes and records the 
total encoded bits for the next GOP (Group of 
Pictures say 10 frames) as oldb . 
Step 2. When MWC receives the QPΔ  value from the 
base station, it adjusts QP accordingly and 
records the total encoded bits for one GOP as 
newb . 
Step 3. MWC calculate BPτ =
old
new
b
b   and tranmit to 
base. 
 
4.4 OVERALL PROCEDURE  
The overall procedure contains two parts: 
Part 1: The initial QP and MtP  setup procedure. 
Step1 Human operator selects the QP and BSNR  or by 
default 
Step2 Base station calculates MtP according to the 
selected BS N R  
Step3 Base station transmits MtP and QP to MWC. 
Step4 Base station checks whether the received BSNR  
consist with the selected BSNR in step 1. If not, 
base station ask MWC to adjust MtP accordingly, 
until the received and selected BSNR  are 
consistent. 
Part 2: Video Quality Adjustment 
Step1.The human operator chooses ( 1, 2,...)QPΔ ± ± to 
adjust video quality. Note that high quality 
video cost more bandwidth and MWC battery 
energy. 
Step2.Base Station gets 
QP
QPQP
BP b
b Δ+=τ from MWC 
(see sec.4.3). 
Step3.Base Station calculates /M MR t new t oldP P P= , where 
M
t oldP and 
M
t newP are obtained based on 
current BSNR  and 1BSNR +  respectively. 
 Step4.Base station checks if BPRP τ≥  then 
requests MWC updates QP+ QPΔ in H.264, 
otherwise ask MWC to adjust transmitting 
power to Mt newP obtained in Step 3.  
Step5.Base station updates the monitoring parameters 
to the operator’s interface. If the human 
operator does not satisfied with the results of 
adjustment, then to determine what kind of an 
argument have been control. If it is QP then go 
back to Step 1,otherwise go back to Step 3. 
We illustrate the procedure by example and experiment 
using Foreman sequence, with BtP =1 watt and MSNR
=5: 
Part 1: The initial QP and MtP  setup procedure. 
After initial set up procedure the operator selects the 
QP=34 and BSNR =3dB. The MWC sets the 
corresponding M oldtp _ =0.63 watt as calculated by 
base station. 
Part 2: Video Quality Adjustment 
Step1. The operator sets 2−=ΔQP for better video 
quality. (Assume the operator’s subjective target 
video quality is equivalent to PSNR=28.9 dB) 
Step2. MWC estimates
QP
QPQP
BP b
b Δ+=τ =1.27 and transmit 
back to base station. 
Step3.  Base station increments BSNR  by 1 ( BSNR
=4dB now) and calculates M newtp _ =0.79 watt 
and /M MR t new t oldP P P=  = 0.79/0.63=1.25. 
Step4. Since BPRP τ< (1.25 < 1.27), so base station 
adopts method 2, i.e. asks MWC to increase 
transmitting power to M newtp _ =0.79 watt  
Step5. The base station updates parameters in operator 
interface accordingly.  
Now, the received video quality is PSNR = 
28.0dB which is not satisfied the operator’s 
subjective target video quality of 28.9dB. 
The base station repeats Step 3.  
Step3.Base station increment BSNR +1 =5dB and 
calculates the corresponding 1.00MtP w=  and 
/M MR t new t oldP P P=  = 1.00/0.63=1.59. 
Step4. Since BPRP τ< (1.59>1.27), so base station 
decide to adopts method 1 and asks MWC to set 
QP from 34 to 32 in H.264.  
Step 5. The received video quality is PSNR=29.7dB> 
target quality of 28.9dB. So, Base station updates 
 
表 13 Foreman_cif 視訊在 MSNR =5, BSNR =7 時傳送能量消耗比 
B
tP =1,
MSNR =5, BSNR =7 
 46-44 30-28 14-12 
M
tP (mJ) 34 222 2955 
Proposed(mJ) 34 222 2394 
Saving  0% 0% 18.98%
 
表 14   Foreman_cif 視訊在 MSNR =7, BSNR =7 時傳送能量消耗
比 
B
tP =1,
MSNR =7, BSNR =7 
 46-44 30-28 14-12 
M
tP (mJ) 21 140 1864 
Proposed(mJ) 21 140 1511 
Saving 0% 0% 18.94%
 
由上表觀察出當視訊 Foreman 在不同的 MSNR
與不同的 BSNR 下，能量消耗的節省比率相當
的接近為 17.14%~19.00%。另外，在相同視
訊中當 QP 較小(即總位元數較多)的時候所
能夠節省的能量較其他 QP 值來的要多。因
此我們針對動作量多(即總位元數多)的視訊
Stefan 做相同的比較實驗。 
    表 15、表 16 與表 17 為 Stefan_cif 固定
在 BSNR =3，而 MSNR 分別為 3、5 與 7 的情況
下所做的消耗比較。 
 
表 15  Stefan_cif 視訊在 MSNR =3, BSNR =3 時傳送能量消耗比 
B
tP =1,
MSNR =3, BSNR =3 
 46-44 30-28 14-12 
M
tP (mJ) 41 486 3133 
Proposed(mJ) 35 404 2398 
Saving  14.63% 16.87% 23.46%
 
 
 
 
 
表 16  Stefan_cif 視訊在 MSNR =5, BSNR =3 時傳送能量消耗比 
B
tP =1,
MSNR =5, BSNR =3 
 46-44 30-28 14-12 
M
tP (mJ) 35 307 1977 
Proposed(mJ) 29 255 1513 
Saving  17.14% 16.94% 23.47%
 
表 17 Stefan_cif 視訊在 MSNR =7, BSNR =3 時傳送能量消耗比 
B
tP =1,
MSNR =7, BSNR =3 
 46-44 30-28 14-12 
M
tP (mJ) 22 193 1247 
Proposed(mJ) 19 161 955 
Saving  13.64% 16.58% 23.42%
 
表18表19表20為Stefan_cif固定在 BSNR =5，
而 MSNR 分別為 3、5 與 7 的情況下所做的消
耗比較。 
 
表 18 Stefan_cif 視訊在 MSNR =3, BSNR =5 時傳送能量消耗比 
B
tP =1,
MSNR =3, BSNR =5 
 46-44 30-28 14-12 
M
tP (mJ) 71 770 4966 
Proposed(mJ) 71 640 3800 
Saving  0% 16.88% 23.48%
 
表 19  Stefan_cif 視訊在 MSNR =5, BSNR =5 時傳送能量消耗比 
B
tP =1,
MSNR =5, BSNR =5 
 46-44 30-28 14-12 
M
tP (mJ) 45 486 3133 
Proposed(mJ) 45 404 2398 
Saving 0% 16.87% 23.46%
 
表 20  Stefan_cif 視訊在 MSNR =7, BSNR =5 時傳送能量消耗比 
B
tP =1,
MSNR =7, BSNR =5 
 46-44 30-28 14-12 
M
tP (mJ) 28 307 1977 
Proposed(mJ) 28 255 1513 
Saving 0% 16.94% 23.47%
 
表 21、表 22 與表 23 為 Stefan_cif 固定在 BSNR
=7，而 MSNR 分別為 3、5 與 7 的情況下所做
的消耗比較。 
表 21  Stefan_cif 視訊在 MSNR =3, BSNR =7 時傳送能量消耗比 
B
tP =1,
MSNR =3, BSNR =7 
 46-44 30-28 14-12 
M
tP (mJ) 112 1220 7870 
Proposed(mJ) 112 1014 6023 
