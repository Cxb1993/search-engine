具有低功率快取記憶體架構的嵌入式處理器設計
“Design of an Embedded Processor with Low-power Cache Architecture”
計畫編號：NSC95-2221-E-018-025
執行期間：95年 8月 1日 至 96年 7月 31日
主持人：張孟洲 國立彰化師範大學電子工程系副教授
一、中文摘要
本計畫的目的是低功率快取記憶體的架
構與電路的研究與設計。在低功率快取記憶體
的架構改良上，我們提出的快取記憶體架構
PTWP 結合 Phased-Tag架構與 Way-Prediction
架構的優點，以降低標籤比對位元的長度、提
早剔除不可能的候選標籤，並預測可能匹配的
候選標籤來優先作比對，以達到降低快取記憶
體的動態功率消耗。在低功率快取記憶體的電
路層次方面，我們採用的 memory cell 結合
word line voltage control及 power gating技術以
降低閘極跟源極、渠極的電壓降，進而減少因
閘極漏電流所產生的靜態功率消耗。
英文摘要
This project deals with the design of
low-power cache both in the architecture level
and in the circuit level. In the architectural level,
the proposed lower-power cache architecture,
PTWP, combines the advantages of the
phased-tag scheme and the way-prediction
scheme such that the power dissipation due to
tag comparison can be effectively reduced. In the
circuit level, the design of the memory cells in
PTWP exploits both word line voltage control
and power gating to reduce the voltage across the
gate and diffusion and thus the power dissipation
due to static leakage current can be effectively
reduced.
二、計畫的緣由與目的
隨著科技的進步與 VLSI製造技術的快速
發展，處理器的操作頻率在短短的幾年中，有
著跳躍式的成長。然而一些隱憂也逐漸浮出檯
面，其中最大的隱憂即是「功率消耗」與「散
熱」的問題。功率消耗與散熱的問題對於應用
於系統晶片的嵌入式處理器尤其嚴重。因此在
現今嵌入式處理器中，加入減少功率消耗的設
計，成為近年來最熱門的研究主題。而快取記
憶體所消耗的功率佔整體處理器功率消耗的
一大部分，例如，在 Intel StrongARM處理器
中，快取記憶體所消耗的功率是整個處理器消
耗功率的 43% ，而在 PowerPC系列的處理器
中，快取記憶體其功率消耗佔了整體功率消耗
的 35%。並且隨著處理器性能的提升，快取記
憶體所佔比例越來越大，此趨勢將越明顯。
降低快取記憶體的功率消耗可分為兩種
方法。第一種方法，是在快取記憶體架構層次
上的改良，如設法減少 Tag比對的位元數、Tag
比對的次數、避免不必要的 cache line存取。
第二種方法，是在快取記憶體電路層次上改
良，如採用新式的memory cell，以減少 memory
cell的動態及靜態功率消耗。
在快取記憶體架構層次上的改良方面，有
各種架構被提出，如 Phased-tag cache [1]、Way
prediction cache [2]等等。在一個傳統的M-way
set-associative cache中，當索引(index)指向所
要的集合(set)時，集合內所有 way的標籤就會
同時進行比對的動作，而且標籤中的每一個位
元都會作比對完畢，而標籤的比對動作將浪費
大量的功率消耗。在 Phased-tag cache 中，每
一個 way的標籤拆成兩部份，當 index選定了
某一個 set 準備開始進行標籤比對的動作時，
cache 中的 tag 長度為 n-bit，我們將每個 way
的 n-bit tag取 k bits獨立出來，稱為 partial tag。
處理器送出的 tag會先跟每個way的 partial tag
比對，若某一 way 不符合，該 way 立刻被剔
除，不作其餘 tag bits的比對。在 way prediction
方面，對每一個 set，會記錄該 set最近 m個被
存取的 set（對 4-way set-associative cache，
m=2，故需額外 4bit記錄該 set最近被存取的 2
個 set）。若有多個 way的 partial tag比對成功，
則由way predictor決定挑哪一個way優先比對
其餘的 tag bits。
Normal RAM Read/Write Circuitry
from
set
decoder
word line
match line
‧‧‧‧‧
‧‧‧‧‧
‧
‧
‧
bitbit
word line
N1 N2
N3
Partial tag from the processor
partial tag
match line
圖三：部分標籤比對的電路設計
0
20
40
60
80
100
compress go gcc Average
Normalized Power Dissipation
traditional
PTWP cache
圖四：PTWP cache與傳統 cache的功率消耗比較
在傳統的快取記憶體中 word line 直接與
set decoder 的輸出相連，而在部分標籤的部
份，由於有 k-bits標籤需要先行比對，然後藉
由比對後的結果來控制 way的啟動，所以在記
憶體每一個集合中的每一個 way前面，添加了
一個 AND gate，此 AND gate 將 partial tag
match line和 set decoder輸出相連，只有在部
份標籤比對為 match的時候，這個 way才能動
作。圖三說明部分標籤比對的電路設計，由於
這個部份有額外的控制裝置，因此對於傳統的
快取記憶體來說，會有些許的 delay，為了減
少這個部份的比對的時間，來緩和 delay的效
果，我們在部份標籤比對的地方使用 CMOS
CAM cell來執行部份標籤的比對。
Wattch 是一個 C 語言所寫成之處理器與
快取記憶體的性能/功率消耗分析軟體，受到
學術界與工業界的普遍認可。我們改寫
Wattch，使其快取記憶體與我們的 PTWP cache
架構相符。圖四是使用Wattch分析比較 PTWP
cache 與傳統 cache 的功率消耗的結果。該模
擬 使 用 三 個 SPEC benchmark 程 式
--compress、go、gcc；cache 的參數為 4-way
set-associative、128 sets、block size=32。由圖
四可發現我們的 PTWP cache 架構比起傳統
cache架構可以減少 69%的動態功率消耗。
Vs
Vth
N4N3
N5
Q
Q2
Qb
BLBB
W
R
WL
P4
VthP3
WL
P1 P2
N1 N2
圖五：PTWP中採用的 SRAM cell及其 layout
另外在電路層次的降低功率設計方面，我
們採用圖五的 memory cell。爲了降低快取記憶
體 memory cell動態功率消耗，我們使用單端
位元線執行寫入動作以節省動態功率消耗
[3]。由於此方法只使用一條位元線作寫入動
作，在其執行動態寫入動作時，可大幅減少充
放電造成的功率消耗，而且根據一般統計，記
出席國際學術會議心得報告
計畫編號 NSC 95-2221-E-018 -025
計畫名稱 具有低功率快取記憶體架構的嵌入式處理器設計
出國人員姓名
服務機關及職稱
張孟洲
國立彰化師範大學電子工程學系副教授
會議時間地點
27-30 May 2007
美國紐奧良 New Orleans
會議名稱 2007 IEEE International Symposium on Circuits and systems
發表論文題目 Motion Detection by Using Entropy Image and Adaptive State-LabelingTechnique
一、 參加會議經過
五月二十六日從桃園國際機場搭飛機出國，途中經洛杉磯、亞特蘭大轉機，於五月二
十七日清晨抵達 ISCAS 2007會議所在地紐澳良。ISCAS 2007會議從五月二十七日到三十日
在希爾頓飯店共舉行四天。本次會議共有三場 keynote speech。第一場 keynote speech 邀請
到 Sun Microsystems, Inc.的研發部門副總 Greg Papadopoulos博士來演講，講題為「Redshift:
The Massive Explosion of and its Implication for Circuits and Systems」。第二場 keynote speech
邀請到德州儀器公司 Silicon Technology Development部門的副總 Dennis Buss博士，講題為
「Si Technology Roadmap for Ubiquitous Computing」。第三場 keynote speech邀請到MIT的
Rosalind W. Picard 教授，講題為「Emotional Intelligence Technology and the Death of
Clippy」。會議共有 892篇論文發表，分成 124個 lecture sessions跟 57個 poster sessions。
我參與聽講的 session多半跟 Low-power circuit design及 Video technology有關。我自己的論
文發表被安排在五月三十日的早上。此行的主要目的是參與 ISCAS 2007研討會，會議結束
隔天五月三十一日，即從紐奧良機場搭機回國，於六月二日早晨抵達桃園國際機場。
二、 與會心得
Motion Detection by Using Entropy Image and
Adaptive State-Labeling Technique
Meng-Chou Chang
Department of Electronic Engineering
National Changhua University of Education
Changhua, Taiwan
Email:mchang@cc.ncue.edu.tw
Yong-Jie Cheng
Department of Electrical Engineering
Chang Gung University
Tao-Yuan, Taiwan
Abstract—This paper proposes an improved motion detection
method based on the entropy image and the adaptive state-
labeling algorithm. In our method, a spatio-temporal sliding
window is built for each pixel, and the pixels in the sliding
window are assigned state labels according to our adaptive
state-labeling technique. The state label distribution in the
sliding window is used to construct the entropy image, in which
a pixel with lower entropy is considered as part of a moving
object. In this paper, we have compared our motion detection
method with the MRF (Markov random field) based method,
the STEI (spatio-temporal entropy image) method, and the
DSTEI (difference-based spatio-temporal entropy image)
method. Experimental results show that our motion detection
method is robust and has lower computational complexity.
I. INTRODUCTION
Detection of moving objects is a very important task in
many applications, such as surveillance, traffic monitoring,
activity analysis, semantic object segmentation and content-
based video retrieval. Temporal differencing [1], background
subtraction [2], and optical flow [3] are popular approaches
to moving object detection. Temporal differencing is very
adaptive to dynamic environments, but it is sensitive to the
noises [4]. Background subtraction has the advantage of
providing the most complete feature data, but is very
sensitive to dynamic scene changes due to lighting and
extraneous events [4]. Optical flow methods have high
computational complexity and thus can not be applied in
real-time applications without specialized hardware.
Ma and Zhang proposed a motion detection method
based on the spatio-temporal entropy [5]. In their method, a
spatio-temporal histogram is generated by accumulating
pixels in the spatio-temporal sliding window. Then the
histogram is used to build the spatio-temporal entropy image
(STEI), in which the magnitude of entropy indicates the
significance of motion. Since the STEI method is a statistical
measurement of variation, it is more robust to noises than
traditional difference based methods. In [6], Jing et al.
proposed a motion detection method based on the difference-
based spatio-temporal entropy image (DSTEI). The DSTEI
method overcomes the problem that the STEI method can not
differentiate the high entropy caused by motion and spatial
structure of the image.
In this paper, we propose an improved motion detection
method based on the entropy image and the adaptive state-
labeling technique. Our method has the advantages of
robustness and lower computational complexity than the
STEI and DSTEI methods. This paper is organized as follows.
Section II introduces the related motion detection methods,
STEI and DSTEI. Section III presents our motion detection
method. Experimental results are analyzed in Section IV, and
conclusions are given in Section V.
II. RELATED WORKS: SPATIO-TEMPORAL ENTROPY
IMAGE
Ma and Zhang have proposed a motion detection method
based on entropy [5]. In their method, a spatio-temporal
entropy image (STEI) is built, and those pixels with larger
entropy in the STEI are considered as part of moving objects.
The following explains how to construct the entropy
image STEI. Let (x,y)t denote pixel (x,y) in frame t. In the
STEI method, a spatio-temporal sliding window is first
formed for each pixel to obtain the corresponding spatio-
temporal histogram. The spatio-temporal sliding window S
for (x,y)t is defined as
    ,0,2/,2/|),( LktwyjwxijiS k 
where parameters w and L control the size of the sliding
window. Figure 1 shows the pixels used to form the spatio-
temporal sliding window for pixel (x,y)t.
The w×w×L pixels in the sliding window are then
classified into Q bins according to their intensity, and are
accumulated to obtain the spatio-temporal histogram. Let
Hx,y,q denote the number of pixels belonging to bin q in the
sliding window of pixel (x,y), then {Hx,y,1,…, Hx,y,Q}
represent all the components of the histogram. Once the
histogram is obtained, the corresponding probability density
function (pdf) for component q can be calculated by
and more state labels of 2 exist in the sliding window
associated with moving objects.
frame(t-2)
aw(t-1)
B
A
B
A
B
A
frame(t-1) frame(t)
(a)
2 2 2
2 2 2
2 2 2
1 1 1
1 1 1
1 1 1
0 0 0
0 0 0
0 0 0
aw(t-2) aw(t)
(b)
aw(t-1)
2 2 2
2 2 2
2 2 2
1 1 1
2 2 2
2 2 2
0 0 0
2 2 2
2 2 2
aw(t-2) aw(t)
(c)
Figure 3. An example of the adaptive state-labeling algorithm. (a) The
frame sequences. (b) The state labels in the sliding window of point A. (c)
The state labels in the sliding window of point B.
(a) (b)
(c) (d)
(e) (f)
Figure 4. Detection results of four motion detection algorithms. (a) The
original image from the video sequences. (b) Result of the STEI method. (c)
Result of the DSTEI method. (d) Result of our method. (e) Result of the
MRF method. (f) The moving object extracted by using our method.
Once the spatio-temporal sliding window is built, the
state labels in the sliding window are used to generate the
spatio-temporal histogram. Let Hx,y,l denote the number of
state labels of l in the sliding window, then {Hx,y,0, Hx,y,1,
Hx,y,2} represent all the components of the spatio-temporal
histogram. The three probability density functions for the
state labels are
N
H
P
N
H
P
N
H
P yxyx
yx
yx
yx
yx
2,,
2,,
1,,
1,,
0,,
0,, ,,  ,
where N is the number of state labels in the sliding
window. The spatio-temporal entropy of pixel (x,y) now can
be calculated by
)log()log()log( 2,,2,,1,,1,,0,,0,,, yxyxyxyxyxyxyx PPPPPPE  .
In our method, those pixels belonging to moving objects tend
to have smaller entropy, and those pixels belonging to static
scenes tend to have larger entropy. If the spatio-temporal
entropy of a pixel is smaller than the entropy threshold ETH,
the pixel is considered as part of a moving object.
IV. EXPERIMENTAL RESULTS
In order to evaluate the performance of our algorithm, we
have implemented the software of four motion detection
algorithms, including STEI, DSTEI, MRF (Markov random
field) [7], and our proposed method. The simulation is
performed on a PC with 2.4 GHz Pentium 4 CPU and 1G
RAM. The test benchmarks include 16 video sequences,
captured by a web camera, with an image size of 352×288
pixels. The various parameters used in the algorithms are set
as follows: the width of the adjacent window w is set to 3,
the frame length of the sliding window L is set to 3,
parameter Q is set to 20 in the STEI and DSTEI methods, and
ITH and ETH are set to 12 and 0.3 respectively in our proposed
method.
Figure 4 shows the motion detection results for the four
algorithms. Figure 4(a) shows the original image from the
video sequences. Figure 4(b) shows the result of the STEI
algorithm, and it can be seen that the edge pixels of static
scenes are mistakenly detected as part of moving objects.
Figure 4(c) shows the result of the DSTEI algorithm. The
result of our method is given in Figure 4(d). Compared with
the DSTEI algorithm, the moving object detected by our
algorithm has a more precise outline and retains more details.
As shown in Figure 4(e), the detection result of the MRF
algorithm is good, but the MRF algorithm is very time-
consuming. Figure 4(f) shows the moving object extracted
from the original image by using the mask in Figure 4(d) and
morphological operations.
TABLE I. COMPUTATION TIME COMPARISON OF FOUR ALGORITHMS
Algorithms
MRF STEI DSTEI Ours
Average
computation time
per frame
0.538s 0.144s 0.0596s 0.0263s
