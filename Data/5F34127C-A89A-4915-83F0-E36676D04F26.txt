在晶片系統架構下以編譯技術輔助之動態硬體調節與低功率指令排程研究(2/2) 
  ©國立東華大學資訊工程學系雍忠助理教授 2 
一、 中文摘要 
 
在晶片系統架構下以編譯技術輔助之動態硬體調節與低功率指令排程研究 
 
關鍵詞：指令排程、晶片系統、低功率消耗、動態硬體調節、編譯技術 
 
隨著近年來的 IC 設計技術已逐漸朝向晶片系統(System-On-a-Chip, SOC)的系統上發
展。大量的資訊家電等應用也隨之誕生。硬體設計廠商使用 IP(Intellectual Property)設計廠
商所提供的 IP，以快速開發複雜的應用系統。其中，能量的消耗往往是系統開發所考量的
重要因素之一。因此，我們希望能夠藉由編譯器的技術，依據每個程式的硬體使用狀況，
以求達到最佳的能量消耗及效能。 
相同的功能，但使用到不同的指令及 IP 會造成電量消耗的不同。而在程式的執行過程
中，並非所有系統上的元件及匯流排都需要同時處於開啟的狀態。因此，我們希望根據不
同程式的需求，排列出最佳指令順序，以及可以動態地調整硬體的使用狀況，將不需要使
用到的 IP 或匯流排控制元件關閉，等到有需求時再開啟。 
總體而言，我們歸納以下幾點本計畫的目的及方向。 
一、 基於目前已經逐漸發展成熟的指令排程技術[LLH03, and LTM95]，以降低
電能消耗為目標，考慮每個指令所需消耗的電量，進而發展出新的指令排
程技術。 
二、 運用新型的動態調節硬體架構，分析程式執行時的行為模式，以最少的能
量消耗及硬體使用，完成程式的執行，進一步降低完成程式執行所需的電
能消耗。 
三、 整合動態調節硬體及指令排程等技術，並將這項技術運用在多段頻率通訊
架構的 SOC 系統上。 
本計畫的目標是希望能夠運作現有的編譯技術，從軟體最佳化的角度出發，配合新型
的硬體動態調節技術與多段頻率技術，發展出新的指令排程演算法，達到降低系統執行所
需消耗的能量之目的。 
 
在晶片系統架構下以編譯技術輔助之動態硬體調節與低功率指令排程研究(2/2) 
  ©國立東華大學資訊工程學系雍忠助理教授 4 
三、 報告內容 
1. 前言 
 
政府從今年度開始編列預算，並整合各界力量，積極推動晶片系統(SOC)計畫，希望能
在三至五年內，使台灣成為「全球 SOC 設計與服務中心」。這個新領域極需將程式語言技
術、系統設計技術、積體電路設計技術、及類比或數位訊號處理等專才整合在一起，團結
合作，讓台灣硬體設計科技提昇，成為台灣的下一個高附加價值及技術密集型產業。 
近年來，針對硬體設計電能消耗(Power Consumption)的研究蓬勃發展。愈來愈多的硬
體需求將電能消耗列為所考量最重要的要素之一。但是現有的編繹技術，大都只做到程式
的執行效能最佳化 (Performance Optimization) 及程式碼大小的最佳化 (Code Size 
Optimization)，甚少考慮到程式執行時的電能消耗問題。因此，我們希望能運用並改良現有
的編譯最佳化技術，發展出電能消耗最佳化的程式指令排程(Instruction Scheduling)技術，
以軟體最佳化的方法達到系統電能消耗最佳化的目的。 
有關電能消耗的研究，有許多科技論文著重於硬體設計和特殊應用的改良。例如，針
對 RSA (Rivest, Shamir, and Adlema)加解密演算法、DSP(Digital Signal Processor) Multiplier- 
Accumulator (MAC) 、 MPEG 加 解 壓 縮 (Compression and Decompression) 與 Fourier 
Transformation 等演算法的硬體實作。這類研究由硬體的角度來進行系統設計最佳化，大多
以特定的個案進行改良，至於進一步推廣至適用於各式各樣系統的最佳化設計，則較少論
述。 
系統硬體電能消耗的主要因素之一，就是 transistor 的位元電位轉換(0→1 或 1→0)所造
成的電能消耗 [VVAL96, LLHT03]。為了降低程式在執行過程中所產生的位元轉換，我們
計算程式中所有指令的漢明距離(Hamming Distance)，並計算調整指令的執行順序且可以正
確計算的排列組合，計算出基本區段(block basic)內指令的漢明距離總合最小的執行順序。
這樣一來，在指令擷取(Instruction Fetch)階段，匯流排的電能消耗就能夠大幅的降低。 
在 System on Chip (SoC)的架構下，每個 IP 所消耗的功率並不一致，不同的指令所使
用到的 IP 也不盡相同。因此，編譯器在將原始程式(Source Program)編譯成目的碼(Object 
Code)的時候，便可依照電能消耗的不同，在執行效能與程式碼大小等不同的最佳化目標之
間計算出最佳的指令排列順序。 
此外，最新的系統硬體設計大都使用了動態調整頻率(Frequency)或電壓(Voltage)的設
計，如 Dynamic Voltage Scaling 的支援。在效能的需求並不是那麼重要的使用情形下，我
們可以藉由調降頻率或電壓，達到減少電量消耗的目的。 
在晶片系統的架構裡，每個資源(Resource，指由 IP 所組成的資源)，可以透過特定的
拓樸網路(Topology)，利用資料封包(Data Packets)彼此合作完成工作。這是一種微網路(micro 
network)的架構，其內部的通訊匯流排(Communication Bus)都需要由交換器(Switch)來決定
資料封包應該傳送到目的地。由於資源的使用度會依程式的需求而不同，因此有些路徑可
能經常處於滿載的狀況下，而其餘的路徑則經常處於停擺中。 
當系統設計加入能控制每個交換器運作狀態的指令後，如昇降頻率、昇降電壓、關閉
或開啟 IP 等功能，我們可以在編譯時期(Compile-Time)分析程式的執行行為，適當的加入
這些指令，動態調整系統的硬體狀態，讓不需使用到的資源能夠處於低電能損耗(Power 
leakage)的狀態，以降低整個系統的電能消耗 [HPK99, LTM95, BM00, TRL01, and GVH00]。 
 
在晶片系統架構下以編譯技術輔助之動態硬體調節與低功率指令排程研究(2/2) 
  ©國立東華大學資訊工程學系雍忠助理教授 6 
3. 文獻探討 
 
Previous work on power evaluation has been done at various levels, which may be divided 
into four categories [GVH00]: 
 Logic-level approaches simulate a gate-level design and measures switching activity of 
design nodes, executing orders of magnitude faster than circuit-level approaches. 
 Behavioral-level approaches estimate power of a behavioral HDL description before a 
synthesized design is obtained.  While fast, such approaches are not as accurate for 
cores as approaches that take advantage of the fact that cores can be presynthesized. 
 System-level approaches are introduced for mapping workload to as set of resources, 
where workload would be a measure of the computational activity and the resources 
represent the hardware. 
 Instruction-level approaches are proposed to evaluate the power consumption of 
microprocessor cores.  Given a program execution trace, energy is computed as the 
sum of the energy consumed when a particular instruction is followed by another, and 
energy consumed by other effects such as stalls and cache misses. 
The increasing popularity of power constrained mobile computers and embedded systems 
drives the need for analyzing and optimizing power in all components of a system, while software 
constitutes a major component of the systems [TMW94, TMW96].  If the current is drawn by 
the CPU during the execution of a program, an instruction level power analysis helps formulating 
power models that provide the fundamental information to evaluate the power cost of the entire 
program. 
Shiue and Chakrabarti [SC00] propose an integer linear program (ILP) model for low power 
scheduling and resource binding.  Their experiments show a power reduction with the ILP 
model, ranging from 8.2% to 34.4% depending on the software. 
Mohanty et al [MRC03] apply an ILP model to the peak power minimization problem with 
multiple supply voltages and multicycling.  Their experiments present an average peak power 
between 60% and 75%. 
 
在晶片系統架構下以編譯技術輔助之動態硬體調節與低功率指令排程研究(2/2) 
  ©國立東華大學資訊工程學系雍忠助理教授 8 
5. 結果與討論 
 
本計畫研究重點在於結合動態硬體調節、及指令排程等技術，發展低功率指令排程
技術。以期能在編譯時期，就能針對低功率的要求達到最佳化。 
本計畫為期兩年，第一年度計畫將先由分析低功率指令排程技術開始著手，完成此
一系統雛型。在本計畫第一年度的執行，我們分別就電腦系統 pipeline 的架構及 VILW
的 pipeline 架構，提出新的 peak power minimization 演算法，整理出兩篇研究論文，現在
已進入審查階段。 
本計畫第二年度計畫著重於分析 SOC 之微網路架講，同時將這兩年的研究成果進
行整合，並實作此完整低功率指令排程技術。本計畫第二年完成之工作項目及成果如下： 
 收集 SOC 微網路傳輸功率消耗及硬體調節之相關資料。 
 分析各種路由演算法特性。 
 發展動態調節硬體運作模式演算法。 
 改良低功率消耗指令排序雛型。 
 建立指令排程之指令選擇策略。 
 實作整合功率消耗及硬體動態調節指令排程技術。 
在本計畫今年度的執行，我們就 VILW 的電腦系統，運用 ILP 的架構，提出新的
peak power minimization 演算法，整理出兩篇研究論文，其中一篇已在國內研討會發表
[YLC06]，另一篇也已進入審查階段。 
 
