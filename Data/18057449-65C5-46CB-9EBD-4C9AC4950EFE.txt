 2 
 
2.2 目的 
根據 VoIP 的特性，不但成本低廉，僅需負
擔一般網路存取服務的使用費，還能夠合併更多
功能的附加應用服務。另外 VoIP 應用在
peer-to-peer 的網路下，更可進一步提供具有擴充
性 (Scalability)、強健性 (Robustness)與容錯性
(Fault Tolerant)的即時語音傳輸服務。 
本研究計畫的第一個部分除了建構 VoIP 的
P2P 網路實驗平台，加入 P2P 的網路元件到現有
的 VoIP 軟體上，嘗試修改成非 client-server 架構
的 P2P VoIP。也就是讓 VoIP 使用者處於 P2P 的
overlay 網路下，當 peer 們的連通變化時，VoIP
使用者還能夠順利地持續通話，並盡可能保有通
話品質，也可以透過實驗模擬當使用者處於動態
變化的 P2P overlay 網路下使用 VoIP 進行語音通
訊時的服務品質，藉以進行研究與改良以提升
P2P VoIP 的服務品質。 
本計畫的第二個部分就是要利用現今最有
防護力的 AES 加密系統，針對語音封包加密，
然而 AES 若在很長的一段時間內使用相同的秘
密金鑰(Secret Key)，以目前硬體的發展速度，勢
必容易遭受破解，所以必頇每隔一段時間內更換
新的金鑰，為了能有效且安全地更換新的金鑰，
必頇透過網路傳輸協商金鑰所具備的參數與資
訊，故本研究將採用安全的金鑰交換機制來進一
步提供 P2P VoIP 的有效語音通訊安全防護機制。 
三、 在應用層群播上進行 Conferencing 
VoIP 服務 
3.1 應用層群播 
應用層群播的原文是「Application Layer 
Multicast」或是稱縮寫為 ALM，顧名思義就是將
群播的功能實做在應用層之上，不再依賴網路上
的路由器來提供服務。也有人將 ALM 講成
Overlay Network[5]，在字面上 Overlay 是覆蓋在
上面的意思，所以 Overlay Network 便是一個覆
在別的網路之上的另一個網路，中文有人稱作
「疊加網路」或「重疊網路」，但事實上，Overlay
涵蓋的範圍又比 ALM 更大了。在應用層組織了
一個虛擬的、邏輯上的網路，並覆蓋在現有的網
際網路之上，而這個網路就由所有群播群組的成
員來組成，因此所有成員也就肩負了在這個
Overlay Network 中路由器的角色。 
如圖 1所示，ALM 基本的概念就是由發送端
將資料送給某一位需要這份資料的人，收到的人
再轉送下去如圖 1所示，而不是所有的使用者都
向同一個人取得這份資料。透過這個方式將資料
送到所有需要這份資料的人手上之後，這個路徑
就可以視為一個邏輯的網路拓撲。 
不過這樣子一個傳一個的作法會造成資料
從起始點傳送到終點的時間拉長，因此這並不是
一個有效率的網路拓撲，就開始有許多人在計畫
中開始提出了不同的技術來組成一個有效率的
網路拓撲。 
 
使用者系統
路由器
伺服器1
用戶端1
用戶端2
用戶端3
串流伺服器
 
圖1. ALM 基本概念示意圖 
應用層群播的優點包括了： 
 不再依賴路由器維護群播群組狀態，從此不再
受到路由器效能或容量的限制，更容易擴展成
更大的群播群組。 
 不必升級網路設備或受制於骨幹網路路由器
不提供服務的限制。  
 可以實行更多的附加功能如： 
 擁塞控制：當某處的網路過於擁塞或是封包遺失
率過高時可以依照路由演算法適度的調整網路
拓撲結構來改善情況。 
 可靠度：可以針對個別的封包遺漏情況進行重傳
或利用擁塞控制的方式來提供較網路群播更好
的資料傳送可靠度，這是網路群播不容易達到的
部分。 
 安全機制：在應用層群播時，要讓每一個應用或
每一個連線都使用不同種的加密或是認證方式
會比在網路群播容易的多。 
 
因為沒有了路由器為群播的節點進行群播
路由轉送，用來組成這個邏輯的網路拓撲的自我
組織演算法變成了應用層群播機制有效運作的
核心。也由於應用層群播的機制完全運作於應用
層上，所以便會讓這個機制無法瞭解實際網路連
接的情況，通常只能夠透過幾種度量衡來評估網
路狀況的好壞，例如：延遲 (delay) 、頻寬
(bandwidth)、封包遺失率(loss rate)。每種不同的
機制都會有不同的路由演算法以及不同的衡量
標準來搭配以達到較佳的效果。 
3.2 應用層群播樹架構 
在 Conferencing VoIP 系統中的超級代理人
在本計畫中將稱為先知(Oracle)，它瞭解各個群播
 4 
2. Oracle 根據自己記錄的群播樹結構，包括成員
所在的階層、已服務的成員數和頻寬大小，找
到位於群播樹底層的葉節點，並將這個葉節點
的資訊放在 Forward 訊息中告知新加入的成
員。 
3. 新成員可以透過訊息中的提示，向 Oracle 所
指出的葉節點送出 Join 訊息，表示自己需要
加入群播樹中。 
4. 收到加入要求的成員，首先檢查自己是否是在
穩定狀態，並且察看是否還有多餘的頻寬可以
服務新的成員。假設不檢查自己狀態便貿然接
受新的連接，而自己正處於離開或是雙親節點
離開的修復期間，新加入的成員便很可能需要
再去尋找不同的地方加入。當符合以上規則之
後，成員開始轉送語音封包並送出 OK 訊息提
示新加入的成員。 
5. 在完成動作之後，新成員與其雙親節點皆會透
過 Update，向 Oracle 告知自己目前的頻寬消
耗狀況以及所在樹中的位置。而 Oracle 可以
透過這樣的訊息來瞭解剛接受新成員的節點
是否還有能力服務其他新加入的節點，假如該
成員已無多餘的頻寛，那便應該將它移出葉節
點的列表。 
6. 另一方面，可以透過 Update 訊息來進行簡單
的驗證工作，假設雙親節點送出了一個
Update，而 Oracle 顯然沒有接收過這個新成員
加入的要求，那便可以判斷這個新成員是個非
法的使用者。 
 
圖3. 葉節點選擇方法 
 
1. Join
2. Forward
3. Join
4. OK
5. Update
5. Update
Oracle
New Member
 
圖4. 新成員加入群播樹方法 
3.3.2 成員離開 
成員離開群播樹之時，應該要避免因為自己
突然離開而造成所屬成員封包遺失問題，因此成
員應該要依循正確的方式離開，等待底下成員回
報完成新的連接之後自己才可離開。 
在圖 5的例子中，成員離開群播樹時的程序
如下： 
1. 圖中紅色的成員正準備要離開群播樹，它會使
用Leave訊息通知其雙親節點以及所有的子節
點。 
2. 節點在收到自己的雙親節點要離開時，應盡快
使用 Recover 訊息向 Oracle 提出修復的要求。 
3. Oracle 收到修復連結的要 Recover 訊息時，
Oracle 會從自己所儲存的資料中，找尋適當的
節點。在它找到能力足夠的節點之後，可以利
用 Forward 通知受到中斷影響的成員。 
4. 受到中斷的成員在收到訊息之後，便會依照提
示去找尋新的成員進行修復動作。 
5. 新的雙親節點同樣會檢查自己是否也同樣是
中斷的成員以及頻寬是否足夠，如果符合的條
件那便可以建立連接，並送出語音內容以及
OK 訊息來通知新連接的成員。 
6. 最後同樣需要所有受到影響的成員送出
Update 訊息來告訴 Oracle 這些情況。 
Oracle
2. 
Repair3. 
Forward
1. Leave
1. Leave 1. Leave
3. 
Forward
4. Repair
4. 
Repair
6. 
Update
6. 
Update
5. OK
6. 
Update
Leaving Node
Parent Node
SiblingSibling
Child
Child
 
圖5. 群播樹成員離開方法 
3.3.2.1 選擇新的雙親節點 
Oracle 在選擇用來修復受到中斷影響的節點
時，會優先選擇與要離開系統成員的兄弟節點
(Sibling Node)作為中斷成員新的雙親節點，如果
該層的成員皆沒有多餘的頻寬可以服務這個中
斷的成員，Oracle 便會向下一層進行搜尋。假設
這其中都沒有仍有剩餘頻寬的節點，最後中斷的
節點便會在葉節點處進行修復。雖然這樣破壞了
ABTP 較大的成員應該保持在群播樹上層的規
則，但是假如該成員保有優勢的 ABTP，它仍然
能夠很快的透過群播樹調整來提昇自己在樹中
的位置。 
 6 
 
圖9. 群播樹調整示意圖 
群播樹調整還有許多必要的限制，那便是所
有相關的節點必頇保持在穩定的狀態下，也就是
說發起群播樹調整的成員必頇要有一個保持著
連接的雙親節點以及祖父節點。如此一次只進行
一件事情的方式避免了群播樹結構發生迴圈的
情況，否則成員一邊進行修復，一邊進行調整，
往往造成迴圈的發生。另一個限制便是要發起群
播樹調整的成員，其頻寬必頇要大於雙親節點，
否則以時間成長速度相同的情況下，該成員的
ABTP 值遲早會再被超過。 
另一方面本計畫探討了群播樹調整所影響
到的範圍，也就是在每個節點的外分支度不同的
情況下，群播樹調整的方法需要盡量減少受影響
的成員。如圖 10所示，因為 30 大於 20，所以
ABTP 值為 30 的成員提出群播樹調整，選擇子節
點中 ABTP 最小的成員更換連接至自己雙親節
點，也就是成為 20 的子節點，其他成員則與 30
一併提升位置。 
100
30
20
100
15 10
20
22
30
22
15
10
100
30
20
100
10 22
20
1830
10
22
18
15
15 16
(a) (b)
16
 
圖10. 群播樹調整對成員的影響 
根據上面的分析可以看出，透過這個方法在
任何的情況下影響的節點最多都只會有四個。假
如群播樹調整發起者或者它的祖父節點還有多
餘的頻寬的話，那受到影響的節點將會更少。 
3.5 群播樹間語音資料的加密防護 
圖 11即為語音會議金鑰交換流程，當主持人
Host 邀請 G1 加入會議通話時，透過 ECDH 機制
以及 SIP 協商出一把共同金鑰 K1，而雙方即可
利用 K1 針對語音封包做加解密，以進行安全語
音通話。若此時 Host 又邀請 G2 加入會議，雙方
也必頇透過上述流程協商出另一把共同金鑰
K2。但三人之通話必頇使用同一把金鑰來對語音
封包做加解密，故 Host 隨機產生三人共同的密
鑰 KR，並透過 AES 使用 K1 為加密金鑰對 KR
加密傳給 G1，相同地，也使用 K2 為加密金鑰對
KR 加密後傳給 G2，而收到此密文的 G1 與 G2，
便利用與 Host 共同密鑰 K1 與 K2 解密，即可得
到共同金鑰 KR，爾後皆利用 KR 對語音封包做
加解密。 
1.Generate:
Ep1(a1,b1) , 
G1=(x1,y1);
NH1 , PH1
5.Compute:
K1
7.Generate:
Random Number 
KR
8.Encrypt KR with 
K1
3.Generate:
NG1 , PG1
6.Compute:
K1
10.Decrypt KR 
with K1
2.Invite
Ep1(a1,b1) , 
G1=(x1,y1) ,
 PH1
 4. 200 OK  
PG1
9.Ciphertext
(KR)
11.Generate:
Ep2(a2,b2) , 
G2=(x2,y2);
NH2 , PH2
15.Compute:
K2
17.Generate:
Random Number 
KR
18.Encrypt KR 
with K2
13.Generate:
NG2 , PG2
16.Compute:
K2
20.Decrypt KR 
with K2
12.Invite
Ep2(a2,b2) , 
G2=(x2,y2) ,
 PH2
 14. 200 OK  
PG2
19.Ciphertext
(KR)
Host
Guest 
G1
Guest 
G2
 
圖11. 語音會議金鑰交換流程 
四、 實驗及結果分析 
4.1 實驗環境及規劃 
在這一章節中，將會比較 ABTP 與其他不同
的群播樹調整標準的效能分析，藉以瞭解 ABTP
對群播網路穩定及效能的優點。實驗由
OMNeT++ 4.0[8]來模擬群播網路中所會發生的
各種情況，OMNeT++是一套離散事件的模擬環
境，本計畫利用它來模擬群播代理人(MA)加入群
播網路、離開網路，以及成員在系統中交換位置
的最佳化動作，並且模擬網路連接頻寬的變化與
語音封包傳輸的延遲。模擬程式的運作透過各個
模組之間透過傳送訊息互相溝通，來保持群播樹
結構的完整，也藉此計算並比較不同種最佳化標
準所造成的控制訊息數量多寡。 
實驗數據將會分成兩種方式來呈現，第一類
用於表現不同種最佳化規範在不同成員數量(不
同的群組大小)時的表現，包括每個成員平均的： 
 控制訊息數量 
 成員離開時對群播樹造成的衝擊 
 樹狀結構深度 
而第二類折線圖則表現在固定成員數量的
狀況下隨著系統運行時間的增加，各種最佳化規
範對於 End-to-end delay 的影響。 
在第一類實驗所使用的參數如下表所示： 
 8 
 
圖15. 群播樹高度與成員數量關係 
4.2.5 時間對最佳化演算法與 end-to-end delay 造
成的影響 
模擬系統中有 600 個穩定成員，並且執行了
3600 秒之後的結果。由圖 16可以看到在成員加
入期間由於樹狀結構拉長，延遲時間也就慢慢增
加，但是經過一段時間的最佳化收斂之後，情況
會漸漸轉好。雖然 ABTP 在模擬結束之前並不是
服務時間最短的，因為它還加入了成員在線時間
的考量，而且仍然可見有服務延遲時間逐漸收斂
縮短的趨勢。 
 
 
圖16. 服務延遲時間與執行時間關係 
五、 計畫成果自評 
本研究計畫成果利用了應用層群播代理人
的方式，嘗試建構具有網路層群播效率與單播穩
定度的應用層群播樹，並透過應用層群播代理人
所形成的動態網路會議電話重疊網路，該重疊網
路的擴展性、穩定度與負載分享可以有效提供網
路會議電話參與者的通話服務品質，並且透過有
效的應用層群播代理人間的金鑰交換機制與語
音封包加密來有效建置網際網路上是具有高私
密性防護的網路會議電話重疊網路。 
本計畫成果報告書中的多項實驗項目，包含
了建構的重疊網路上針對文獻上既有的不同最
佳化標準來比較群播樹的調整次數、控制訊息的
數量、群播樹成員離開的影響、群播樹高度與服
務延遲等效能數據後，驗證了所提平均頻寬與上
線時間乘積(ABTP)度量值可以建構出有效的網
路會議電話重疊網路，提供大型網路會議電話參
與者的通話與服務品質，並相信所提網路會議電
話重疊網路的建構機制可以進一步應用到網際
網路視訊會議，同時有效提供網際網路上雙向的
即時語音與視訊傳送。 
本計畫成果除了會盡快將衡量客觀語音通
話品質的 E-Model 與 PESQ 實驗數據加入到研究
成果，並發表相關論文。未來更希望盡快能完成
開發與建置出本計畫相關的 P2P VoIP 實際系統
平台，特別是將所提最佳化方法建置到現有軟硬
體系統與不同網路環境上(IPv4/v6)，也就是與現
有相關的 VoIP 軟體進行整合開發與測試，包含
與 public domain 上的 SIP server, voice codec 
library與RTP library等重要開放原始碼平台的整
合測試。並針對開發出的實際系統平台進行網際
網路上的測試以了解實際通話品質與各項效
能，開發出來的實際系統也會開放原始碼回饋社
群。 
參考文獻 
[1] Salman A. Baset and Henning G. Schulzrinne, "An 
Analysis of the Skype Peer-to-Peer Internet 
Telephony Protocol," INFOCOM 2006, 25th IEEE 
International Conference on Computer 
Communications, April 2006, Page(s):1 – 12.  
[2] R. G. Cole, J. H. Rosengluth, "Voice Over IP 
Performance Monitoring," ACM SIGCOMM, 
Computing and Communications Review, April. 
2001.  
[3] ITU-T Recommendation G.107, "The E-Model, a 
computational model for use in transmission 
planning," December 1998. 
[4] ITU-T Recommendation P.862, "Perceptual 
evaluation of speech quality (PESQ): An objective 
method for end-to-end speech quality assessment of 
narrow-band telephone networks and speech codecs, 
" Feb. 2001.  
[5] David Andersen, et al., "Resilient overlay 
networks," SIGOPS Oper. Syst. Rev., vol. 35, pp. 
131-145, 2001. 
[6] G. Tan and Jarvis S. A., "Improving the Fault 
Resilience of Overlay Multicast for Media 
Streaming," Parallel and Distributed Systems, 
Transactions on, vol. 18, pp. 721-734, 2007. 
[7] U.S. Network Latency, 
1 
 
ICUMT 2009 國際學術研討會會後心得 
計畫編號  NSC 97-2221-E-130-005 
計畫名稱  
建置 Peer-to-Peer VoIP 應用平台－有效的即時語音傳輸與安全防護機
制 
出國人員姓名  
服務機關及職稱  
巫微曦 
銘傳大學資訊工程研究所  
會議時間地點  
12/Oct/09 ~ 14/Oct/09 
Pulkovskaya Park Inn , Saint Petersburg  
會議名稱  
2009 International Workshop on Peer-To-Peer Networking ( P2PNet'09) of 
International Conference on Ultra Moderm Telecommunications (IEEE 
Sponsored)  
發表論文題目  
Load-Sharing Overlay Network Design for Ubiquitous Video Surveillance 
Services 
 
一、參加會議經過  
2009/10/11 日從台灣出發搭乘荷蘭航空到阿姆斯特丹轉機，輾轉到達會議舉行地點:俄羅斯聖彼得
堡的 Park Inn 飯店。旅途中因為運氣不佳，搭乘得飛機常常出現一堆狀況，使得從台灣到達俄羅
斯聖彼得堡整整花了超過 28 個小時。 
這次出國發現想要用英文在俄羅斯溝通是用處不大，普遍俄羅斯人不懂英文，隔日到達俄羅斯聖
彼得堡，在不懂俄語的狀況下，只能比手畫腳的問路與使用 google map 與俄文翻譯，終於在換了
一次地鐵與搭了兩趟公車後到達與會地點 Park Inn 飯店。 
下午，P2PNet Workshop 的第一場次就輪到我發表論文，這是我第一次完全使用英文報告論文，
雖然之前有演練過很多遍，但是一上台報告之後幾乎是腦袋一片空白，甚至也猜想自己講述的底
下聽眾是否能懂，但是這次難忘的經驗讓我知道以後英文報告可以加強的地方，整天參與會議下
來收穫良多。會議結束之後也參與了大會舉辦的會後餐會，和許多來自不同國家的研究人員一同
吃飯，並且交換彼此資訊。 
會議論文如附件。 
二、與會心得 
此次參與 ICUMT2009 國際學術研討會報告 Load-Sharing Overlay Network Design for Ubiquitous 
Video Surveillance Services） 一論文，會議地點選在俄羅斯聖彼得堡，此次行程有兩大目的如
下，故於這兩點之心得分別報告之。 
3 
 
同國家的學者和研究生有更進一步的了解和認識，像是來自加拿大，德國，波蘭，義大利
與南美洲等國家的許多學者，這些來自不同國家的學術圈內人共同聚集在一處討論，吃飯
與聊天，這也讓我的人生記憶裡留下深刻印象。  
5 
 
than ever via individuals, communities, organizations, 
companies and government. However, most of these 
widely-deployed video surveillance systems provide their 
users some intelligent surveillance services via client-server 
architecture over IP networks. It’s well-known that delivering 
surveillance videos in client-server network architecture will 
incur service bottleneck at server side due to resource 
consumption of network bandwidth and computing power. 
Meanwhile, another scalability issue of further creating new 
diversified video surveillance services among existent video 
surveillance systems will also come from the client-server 
architecture. 
In this paper, we propose an effective multicast overlay 
network for UVS services to overcome the above-mentioned 
scalability issues. In this proposed UVSMON (UVS multicast 
overlay network), not only the stable overlay network while 
users’ frequent leaves/joins, but also  the load balancing 
function for UVSMON are proposed.  
The remainder of this paper is organized as follows. In 
Section II, we describe the details of proposed UVSMON and 
its related work and issue. The load balancing algorithm for 
UVSMON is presented in Section III. Section IV describes 
simulations for load-balancing UVSMON and the simulations 
results. Finally, we conclude the paper and future work. 
Internet
public 
Subnet A
private 
Subnet B
Personal ADSL
Subnet
Smart 
Camera
MA
Super Agent
 in public
Surveillance
Video Server
Surveillance
Video Server
MA
MA
Surveillance 
Video Server
Digital
Camera
CCTV 
Camera
 
Figure 2. Previous architecture of UVS [6]. 
II. ARCHITECTURE OF UVSMON 
The previous UVS work [6] was proposed to effectively 
provide nomadic users scalable, ubiquitous and private access 
to video surveillance services through super agent and 
multicast agents (i.e. MAs) as shown in Figure 2. In this 
section, we briefly review UVS architecture, its advantages 
and further introduce the multicast overlay network built from 
MAs and load-balancing issues. 
A. UVS with Ubiquity, Privacy, Reliability and Scalibility 
As illustrated in Figure 2, UVS can be deployed to 
interconnect with first-generation, second-generation and 
third-generation surveillance system. Surveillance video from 
CCTV camera in first/second generation surveillance system 
can be fed into computer’s video capture card. Then, the 
surveillance video will be compressed, packetized and 
multicast to Internet users through the applied MAs on 
different subnets, because most of the Internet router turns off 
IP multicast to prevent irrelevant flooding traffic. 
For another example from third-generation surveillance 
system, the IP camera usually applies unicast (e.g. HTTP/TCP) 
to deliver surveillance video packets to its users. To overcome 
the scalability issue of applying unicast in IP camera for UVS, 
the source MA (i.e. sMA), which is in the same subnet with 
the IP camera, not only play the role of a user of IP camera to 
help to forward the surveillance video to other users in the 
same subnet via scalable multicast, but also deliver the 
surveillance video to another MA (i.e. dMA) in different 
subnet via unicast tunnel. Then, the dMA will multicast the 
surveillance video packets to its subnet users.  
Besides, the surveillance systems may reside in private 
networks among Internet, super agent (SA) in public network 
is needed to relay the surveillance video from private network 
to Internet users through MA. Therefore, MA and SA are 
applied in UVS to achieve ubiquity. 
However, delivering live surveillance videos on the public 
and shared Internet must effectively preserves the privacy and 
reliability. Therefore, [6] further applied Diffie-Hellman key 
negotiation algorithm to negotiation encryption keys for 
AES-encrypted surveillance videos, which are delivered 
between sMA and dMA either with or without SA relay, to 
provide UVS privacy protection. 
Then, to effectively resist potential packet loss during 
delivering live surveillance videos over shared Internet to 
prevent from playback quality degradation, FEC error control 
codes are applied to recover lost packets without incurring 
round-trip packet-retransmission delay for surveillance videos 
delivered between sMA and dMA either with or without SA 
relay. Thus, delivery reliability for surveillance videos can be 
simply achieved for UVS. 
Surveillance
spot 
sMA0
dMA1 dMA2 dMA3 dMAn-1 dMAn
unbalancing load for n 
connections
 
Figure 3. Simple UVSMON tree with degree n for rooted sMA. 
Though ubiquity, privacy and reliability can be achieved in 
UVS through MAs and SA while delivering surveillance 
videos, scalability issue will further result from the multicast 
overlay network (i.e. UVSMON) formed by MAs. For 
example, a popular video surveillance spot is viewed by users 
over n different subnets. As shown in Figure 3, sMA may 
establish n different unicast tunnels with n dMAs (i.e. dMA1, 
7 
 
III. LOAD BALANCING FOR UVSMON 
UVSMON is an overlay network composed of a SA and 
different MAs on different subnets over Internet to effectively 
provide ubiquitous video surveillance service for a dedicated 
camera on surveillance spot. A UVSMON’s MAs are 
dedicated computer systems or software applications to 
receive a surveillance video from some source MA (sMA) and 
the multicast to their local subscribers, or uncast again to one 
or more other destination MAs (i.e. dMAs) over different 
subnets as illustrated in Figure 5. Then, SA will take 
responsibility to forward the surveillance video from MA, 
which is located in private subnet, to another MA to furnish 
the UVS service [6].  
However, the topology of UVSMON will change from 
time to time, because the Internet users can subscribe or 
unsubscribe the UVS service at any time and then the 
corresponding MA may join or leave the UVSMON while 
either it’s subnet users subscribe or no user subscribe UVS 
service. Meanwhile, every dMA in different subnet preserves 
different capabilities of system resources and outbound 
network bandwidth in forwarding surveillance video, so we 
propose a load balancing scheme for UVSMON to prevent 
overloading dMA from jeopardizing perceptual quality of 
UVS service for end users. 
A. MA Join/ Leave to/from UVSMON 
According to the long tail theory of customer demographic 
[11], usually most of the customers like newly joined MAs of 
UVSMON won’t stay with UVSMON for a long period. To 
further reduce the processing overhead of reconnecting 
disjoint trees in UVSMON while a non-leaf node of MA 
occasionally leaves from UVSMON, the new dMA should be 
joined to the leaf node of MA in UVSMON. 
1
. JR
(cid
, rid
)
2
. R
P
(d
M
A
le
a
f , cid
, rid
)
3. Join(cid, rid)
4. Ok(cid, rid)
5
. 
U
P
(d
M
A
n
e
w
, 
ci
d,
 r
id
)
6
. U
P
(d
M
A
le
a
f , cid
, rid
)
dMAnew dMAleaf
UVSMON Link
SA as an 
oracle  
Figure 6. UVSMON join procedures for a new dMA (i.e. dMAnew). 
The procedures of a new MA joining to UVSMON are 
illustrated in Figure 6. New dMA denoted as dMAnew sends a 
join request (JR) with a camera identifier (cid) and its 
registration identifier (rid) to SA to ask SA for connection 
address of a leaf node of dMA (dMAleaf) in UVSMON tree. 
Then, SA further plays as an oracle of original UVSMON to 
send back the reply message (RP) with corresponding 
connection address of a leaf node dMAleaf, which the new 
dMAnew can be connected to, in UVSMON. Therefore, the SA 
must maintain all up-to-date topology information for 
UVSMON to effectively and correctly reply the UVSMON 
access request with a capable leaf node of handling the 
forwarding surveillance video to the new subscriber dMAnew. 
That’s the reason why SA is called the super agent. 
After the dMAnew receive the connection information of 
dMAleaf, dMAnew will formally send a join message with the 
same cid and rid to the dMAleaf to request the connection to 
UVSMON. The new connection will be established for 
dMAnew from dMAleaf after dMAnew receives positive replay 
message (OK) from dMAleaf and then both dMAnew and 
dMAleaf will send their update message (UP) respectively to 
acknowledge SA to update the UVSMON topology 
information. 
While a MA needs to leave from the UVSMON because 
all the users in its subnet sequentially unsubscribe the UVS 
service and it has no obligation to forward surveillance video 
for other MAs (i.e. the child nodes of leaving dMA), the child 
nodes must reconnect to other MAs in the UVSMON to 
continue the UVS service. 
As shown in Figure 7, procedures of a non-leaf node dMAl 
leaving the UVSMON without breaking UVS service of its 
child nodes are illustrated. The dMAl will first send leaving 
requests (LR) with the camera identifier (cid) and its 
registration identifier (ridc2) to acknowledge not only its parent 
node to cease forwarding surveillance video later, but also its 
child nodes (e.g. dMAc1 and dMAc2 in Figure 7) to seek other 
new parent nodes of MAs to replace their old parent dMAl for 
continuing UVS video streaming. 
1. LR(cid, rid)
1. LR(cid, ridl)
Lin
k o
f UV
SM
ON
3. RP(dMAs2, cid, ridc2)
4. UR(cid, ridc2)
6. UP(dMAs2, cid, ridc2)
Parent 
node
SA as an 
oracle
Sibling node(dMAs2)Sibling node(dMAs1)
Leaving 
node
dMAl
Child 
node(dMAc2)
Child 
node(dMAc1)
4. UR(cid, ridc1)
5. OK(cid, ridc2)
5. OK(cid, ridc1)
2. RR(cid, ridc1)
2. RR(cid, ridc2)
3. RP(dMAs1, cid, ridc1)
6. UP(dMAc2, cid, ridc2)
6. UP(dMAs1, cid, ridc1)
6. UP(dMAc1, cid, ridc1)
X
X X
OO
 
Figure 7. Leaving procedures for a node of dMAl with two child nodes. 
For example in Figure 7, the acknowledged child nodes 
(e.g. dMAc1 and dMAc2) will send recover requests (RR) with 
the same camera identifier (cid) and their registration 
identifiers (e.g. ridc1 and ridc2) to SA to ask for connections 
information of new parent nodes. The oracle SA will send 
back reply messages (RP) with the connection information of 
new parents (e.g. dMAs1 and dMAs2) to the acknowledged 
child nodes (e.g. dMAc1 and dMAc2). Then, the acknowledged 
child nodes for parent node’s leaving will be able to directly 
send update requests (UR) with the cid and their registration 
identifiers (e.g. ridc1 and ridc2) to their new parent nodes (e.g. 
9 
 
 ABTP follows the long-tailed distribution: the one who 
stay longer in the system can have larger ABTP value 
easily. Even if a node has large bandwidth, it may not have 
larger ABTP value because his lifetime is small. As time 
goes by, a node in UVSMON with large bandwidth can 
have an extremely large ABTP value and this node will 
stand in the very high level of the UVSMON tree. 
 ABTP can avoid the unnecessary optimizations: a 
bandwidth change will cost one node’s level changed. 
In following section, we will present the simulations and 
performance results for the load balancing optimizations with 
ABTP criterion for the proposed UVSMON. 
IV. SIMULATIONS AND PERFORMNACE RESULTS 
To demonstrate our proposed load balancing scheme for 
UVSMON, we use the well-known simulation tool OMNeT++ 
4.0 [16] construct a vital UVSMON with new MAs joining, 
old MAs leaving and timely UVSMON adjustment for load 
balancing optimizations (i.e. criteria of bandwidth only, life 
time only, BTP, averaging bandwidth only and ABTP). The 
optimization criterion of averaging bandwidth only is 
abbreviated as ABO and it considers only the averaging 
bandwidth part of ABTP. The detailed simulation parameters 
and corresponding values are listed in Table I.  
Table I.  Table of simulation parameters for UVSMON. 
Parameter Values 
MA quantity 2000, 4000, 6000, 8000, 10000 
degree of MA 2 to 5 out-degree (uniform distribution) 
link bandwidth Mean:400kbits, Std: 10, normal distribution 
link delay Mean:0.08s, Std: 0.05, normal distribution 
optimization 
(Opt.) 
Bandwidth only(B), Life time only(T), BTP, 
Averaging bandwidth only(ABO), ABTP 
simulation time 20000 seconds 
Opt. cycle 40 second 
During the simulation for UVSMON, we recorded the 
count of control messages and service disruptions, tree depths 
and service latency for different optimization criteria. We will 
perform each test cases five times to find out the mean and 
standard deviation of these simulation results. 
 
Figure 9. Average number of control messages applied in different 
optimization criteria. 
As shown in Figure 9, ABTP criterion outperforms less 
overhead of control message than the other four optimization 
criteria. Those criteria (i.e. B and ABO) without considering 
life time preseve more control message. It’s because more 
possibility of high-level nodes leaving the UVSMON tree 
indicated more control messages are needed to repair the 
UVSMON for continuing UVS service, if MA’s life time is 
not condiered in optimization for load balancing. 
While old MA leaving UVSMON or the UVSMON 
adjustment for load balancing, service disruption may occur to 
degrade the quality of UVS video streaming service for those 
dMAs under the deattached parent in UVSMON. According 
the results from Figure 10, ABTP also preseves less average 
count of service disruption to help UVSMON to achieve better 
quality of UVS service. 
.  
Figure 10.  Average count of service disruption during different criteria. 
As shown in Figure 11, ABTP optimization criterion keeps 
lower depths of UVSMON tree than other criteria except the 
test case of MA quantity 2000. Those optimization criteria 
without considering life time will keep the less depths than 
others in most of test cases. 
 
Figure 11.  Average UVSMON tree depth applying different criteria. 
While the depth of UVSMON tree getting larger, the UVS 
service latency for bottom dMAs is also getting longer. As 
shown in Figure 12 for the test case of MA quantity 6000, the 
values of service latency will get more and more after 
simulation starts and the time goes by. It’s because the tree is 
growing and the increasing depth also indicates the increading 
service latency.  
While the member of MAs in UVSMON tree reaches 6000 
and some of this MAs may leave from the UVSMON tree, the 
service latency will stop increasing due to the adjustment of 
