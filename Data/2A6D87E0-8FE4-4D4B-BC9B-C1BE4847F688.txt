I中文摘要
半導體產業變化愈來愈快且其脈動益發難以掌握，半導體晶圓製造業者必須
不斷縮短製造週期時間以維持其競爭優勢。然而，光罩層數隨著先進半導體製程
的演進而持續增加，製造週期時間也因而變得愈來愈長，因此，半導體晶圓製造
業需要新的方法來協助他們持續縮短製造週期時間。此外，電子業已逐漸邁入消
費性產品主宰的時代，客戶對製造週期時間較短的急單需求也愈來愈強烈，因此
晶圓代工業者必須有能力提供製造週期時間的差異化服務，意即更多的急單，方
能在消費性電子時代中取得競爭優勢。然而，較多的急單會拉長製造週期時間的
平均值與變異，要提供製造週期時間差異化服務，必須建立一個能衡量急單對製
造週期時間平均值與變異的方法模式。
在實際的半導體晶圓廠環境中，運用等候模式來預測製造週期時間有其限
制，而使用電腦模擬來建立一個晶圓廠中所有機台的製造週期時間預測模式，在
實務上可行性也不高。此外，對於有限定機台以及等候時間限制的機台，現有研
究很少加以探討。有鑑於此，本研究希望能運用資料挖礦的相關技術來發掘機台
的製造週期時間與相關因素之間的複雜關聯，並同時考量限定機台與等候時間限
制這兩個因素。本研究比較許多類神經網路技術以及支援向量迴歸，確認當中最
適合用來預測機台製造週期時間的方法。同時，本研究也評估了許多對可能影響
機台製造週期時間的相關因素重要度加以排序的方法，以確認各機台有相關的影
響因素。運用本研究所建立的資料挖礦模式，急單對於製造週期時間的影響可以
被量化地衡量，因此可促進製造週期時間差異化服務的可行性。同樣運用已建立
的資料挖礦模式，可以針對相關影響因素做重要性排序，以協助晶圓廠運用有限
資源來改善重要的影響因素，進而發揮最大的效果。此外，本研究進一步建立可
相互支援的機台群組間最佳化的機台數配置以及各加工站的最佳化標準在製品
存貨水準，以進一步提供縮短平均製造週期時間的機會。本研究所提出的方法已
被實際應用於某晶圓製造整合元件廠以及某晶圓代工廠，應用的結顯示本研究所
出的方法在實務上有顯著的效度與效果。
在半導體製造管理中，良率是反映製程本身是否有重大問題的一項績效指
標，良率的高低也是直接反映在晶圓廠的成本與獲利能力上。目標良率的達成主
要是決定於其良率的學習率程度，而影響良率學習率的因素有很多，如：製程本
身的複雜性、設備本身的複雜性、產品組合的複雜性、人員本身經驗、新舊設備
的問題、製程的週期時間、製程導入的時間、在製品的單位時間產量等。其中各
生產優序（Priority）貨批的生產週期 (Cycle Time, CT) 及數量與良率之間的關
係卻顯少被探討，因此如何釐清在不同生產優序下的生產參數，其影響良率學習
之關係與表現，即是本論文欲探討之重點。首先我們以生產週期時間等為主要生
產參數並且配合不同的生產優序，藉由田口方法（Taguchi Methods）的應用，以
尋求最佳的實驗參數配置。再以類神經網路（Artificial Neural Network ）的分析
技術，釐清不同生產優序下的生產參數影響良率學習的程度。透過實際生產數據
的實驗與模式驗證後，吾人即可發展出以類神經網路為基礎的良率學習之決策模
式，往後無論是進行生產績效上的取捨分析（Trade off Analysis）；或是決定製程
上的最佳的生產優序批量組合，均是有實質且正向的幫助。
III
ABSTRACT
Cycle time reduction is crucial for semiconductor wafer fabrication companies to
maintain competitive advantages as the semiconductor industry is becoming more
dynamic and changing faster. Nevertheless, while the number of mask layers has
being increased in more advanced technology nodes, the theoretical cycle time is
lengthened. Thus there are stronger needs for novel approaches to continuously
reduce cycle time for semiconductor wafer fabrication. Furthermore, as
semiconductor devices are increasingly employed in consumer electronics,
differentiated cycle time service through hot lots is crucial for semiconductor wafer
foundries to maintain competitive advantages in the consumer era. However, more hot
lots lead to longer mean and variance of cycle times. There is a strong need for
developing a model to simulate the impacts of hot lots on the mean and variance of
cycle times of both regular lots and hot lots to enable differentiated cycle time
services.
On one hand, the existing queueing models for predicting cycle time of tool sets
in fabs have limitations in real settings, and simulation model is not feasible to deal
with all the tool sets in a semiconductor wafer fabrication facility (fab). On the other
hand, little research has been done to predict the cycle time of tool sets with tool
dedication and waiting time constraint. This study aims to fill the gap by applying
data mining techniques to explore the complex relationships between cycle time and
related factors for individual tool sets taking into account tool dedication and waiting
time constraint. In particular, several data mining techniques including neural
networks and support vector regression are compared to investigate which one is most
suitable for modeling the cycle time of tool sets in the fab. Moreover, this study
concludes that classification and regression tree (CART) is more suitable than
competitive techniques to rank the potential variables that might influence cycle times,
and to identify the relevant variables by the selected technique for modeling the cycle
times of tool sets. By exploring the patterns from the built data mining models, the
impact of hot lots on cycle times can be modeled so as to support the decision making
for determining the quota of different classes of hot lots given a required lead time for
regular lots. Furthermore, the data mining models can be utilized to prioritize related
factors so as to properly make use of the limited resources to reduce mean and
standard deviation of cycle times. Moreover, two optimization models with regard to
tool allocation among interchangeable tool sets and the determination of standard WIP
for individual processing steps were derived from the data mining models to provide
more solutions for cycle time reduction. An empirical study was conducted in a IDM
(integrated device manufacturer) wafer fab and a wafer foundry fab of a leading
semiconductor company in Taiwan to validate the proposed approach. The results
showed practical viability of our approach.
In semiconductor production management, the pass rate is a performance index
used to reflect manufacturing process problems, and pass rate is directly embodied in
the wafer foundry cost and profitability. Target pass rate realization mainly depends
on pass rate learning speed, and there are a lot of factors influencing pass rate learning
speed, such as manufacturing process complexity, equipment complexity, product mix
complexity, personnel experience, equipment replacement, process cycle time,
VCOONTENTS
中文摘要..................................................................................................................................... I
ABSTRACT.................................................................................................................................. III
CHAPTER 1 INTRODUCTION....................................................................................................1
1.1 Background and significance ........................................................................................1
1.2 Motivation.....................................................................................................................3
1.3 Research objectives ......................................................................................................4
1.4 Organization of the dissertation ...................................................................................4
CHAPTER 2 LITERATURE REVIEW ............................................................................................5
2.1 Reduction of mean and variance of cycle time in semiconductor wafer fabrication...5
2.2 Cycle time prediction for tool sets................................................................................6
2.3 Standard WIP determination and WIP balance control..............................................10
2.4 Tool allocation.............................................................................................................11
2.5 Data mining.................................................................................................................12
2.6 Variable ranking ..........................................................................................................15
CHAPTER 3 THE APPROACH ..................................................................................................16
3.1 Define problems..........................................................................................................16
3.2 Prepare data ...............................................................................................................23
3.3 Construct data mining models....................................................................................23
3.4 Verify the data mining models....................................................................................24
3.5 Patterns/ rules exploration and application ...............................................................24
3.6 Study of Pass Rate Learning Variables ........................................................................25
3.7 Taguchi Method Application Procedure .....................................................................26
3.8 Artificial Neural Network Application Procedure .......................................................28
CHAPTER 4 EMPIRICAL STUDIES ...........................................................................................29
4.1 Problem definition ......................................................................................................29
1CHAPTER 1 INTRODUCTION
1.1 Background and significance
Semiconductor wafer fabrication is a key industry in the electronics supply chain and
contributes substantially to the global economy. Bullwhip effect indicates that demand fluctuations
increase as you travel upstream in the supply chain, (Lee, Padmanabham, and Whang, 1997). As
shown in Figure 1.1, semiconductor wafer fabrication suffers larger demand fluctuation due that it
is located far upstream in the electronics supply chain, and the bullwhip effect would be more
serious if the wafer fabrication cycle time was longer. Figure 1.1 also illustrates that wafer
fabrication dominates the cycle times of the whole supply chain. Electronic products are
characterized by proliferating product variety and shorter product life cycles, and these
characteristics make the demand more fluctuant. Both the bullwhip effect and the shorter product
life cycles make it necessary for the semiconductor wafer manufacturers to reduce the lengthy
fabrication cycle times, so as to shorten the response time to the demand fluctuation in the supply
chain. In addition to its importance to the electronics supply chain, cycle time reduction is also
crucial for semiconductor wafer manufacturers to maintain competitive advantages due that cycle
time reduction can reduce cost of work-in-process inventory, require smaller space for storage, and
improve wafer yield by shortening engineering response time. In addition to the importance of
reduction for mean cycle time, in a make-to-order environment where it is desirable to be able to
state an order lead time with a specific confidence, both the mean and standard deviation of cycle
time should be kept short and make the customer lead time short (Hopp and Spearman, 2001).
Wafer foundry fabs run with a make-to-order production system and the wafer foundry business
will be an important and growing portion of the future semiconductor industry (Wu, Hung, and Lin,
2006), hence the reduction for variance of cycle time is getting more important.
Despite the importance of cycle time reduction to semiconductor wafer fabrication and the
electronics supply chain, the manufacturing cycle time has been gradually lengthened as the
semiconductor process technology advances. To keep path with the so-called Moore's law (the
number of transistors per chip doubles every 18 months) so as to continuously reduce cost per
transistor, semiconductor manufacturers keep decreasing feature size and complicating device
designs. As a result, the number of mask layers has being increased as the feature size continues to
be shrunk and the device designs become more complicated, as illustrated in Table 1.1, which is
summarized according to the International Technology Roadmap for Semiconductors (ITRS),
edition 2001~2007. To normalize the effect of number of mask layers on total cycle time, cycle time
per mask layer is the key performance measure adopted by ITRS for benchmarking the
performances of cycle time for individual semiconductor wafer fabrication facility (fabs) in the
3cycle times, there is a need for developing a model to simulate the impacts of volume of hot lots on
the mean and variance of cycle times of hot lots and regular lots respectively, and to support the
decision making for determining the proper ratio of hot lots in a fab.
1.2 Motivation
Most of the existing studies for reduction of mean and variance of cycle time in the
semiconductor wafer fabrication focus on implementation of lot dispatching, employment of
optimal batching policy, lot release control, or productivity improvement. Facing the challenge that
raw process time has been lengthened, there is a need for alternative methods to continuously
reduce mean and variance of cycle time for semiconductor wafer fabrication. Due that most of
existing methods assume that the production environments in a fab are uncontrollable, such as tools,
processes and workers. Hence it will be valuable for to explore proper performance measures of
tools, processes and workers, and to investigate their influences on cycle time in a fab.
The mean and variance of fab cycle times are the accumulated results of cycle time of
individual tool sets in the fab. In this study, fab cycle time for a lot is defined as the time for a lot
from the start to the end of the process in the fab, and a tool set is defined as a group of tools that
perform similar processing steps. Queueing and simulation models are common approaches in
predicting the cycle time of tool sets in a fab. However, most of the queueing models may result in
unsatisfactory performance in practice (Shanthikumar, Ding, and Zhang, 2007). The major reason is
that most of queueing models have limitations in real settings due to the restrictive assumptions
upon which these models are based and few real-world systems conform to the requisite limitations
(Uzsoy, and Martin-vega, 1992; Chambers and Mount-Campbell, 2002). In particular, conventional
queueing theory assumes all the servers are identical in a service center. However, tool dedication
constraint for wafer fabrication requires that certain tools in a tool set can process only part of
products or processing steps. That is, the tools in the tool set are not identical in a fab
(Shanthikumar, Ding, and Zhang, 2007). Queueing theory also assumes that when there are jobs in
the queue, a server will immediately serve a job once the server is idle. In wafer fabrication, a job in
a queue might not be processed when a tool is idle if there was waiting time constraint between the
tool set and its downstream tool sets (Connors, Feigin, and Yao, 1996). This kind of cases would
happen when the WIP level of downstream tool set was too high to potentially exceed the
predefined specification of waiting time constraint. As the advances of process technologies, there
are more tool dedications and waiting time constraints in modern fabs, which make it more difficult
to use queueing models for predicting the cycle times of tool sets. Comparing to queueing models,
simulation is usually used to analyze operation dynamics at very detail levels (Chou and Wu, 2002).
Nevertheless, the construction and implementation of a simulation requires significant effort and
5CHAPTER 2 LITERATURE REVIEW
In this chapter, this study reviewed prior researches with regard to reduction of mean and
variance of cycle time and prediction for cycle time of tool sets in semiconductor wafer fabrication.
Literatures with regard to the application of the cycle time prediction model are also investigated,
including standard WIP determination and tool allocation. Finally, this study reviewed data mining
methods that are employed in this study for building models for cycle time prediction and arrival
rate prediction.
2.1 Reduction of mean and variance of cycle time in semiconductor wafer fabrication
In past two decades, many studies have been done on reduction for mean and variance of cycle
time in the semiconductor manufacturing industry. The purpose of the literature review in this
section is to understand the foci of previous researches, and to infer some new directions for
reducing mean and variance of cycle time in the future for the semiconductor wafer fabrication.
Therefore, rather than attempts a comprehensive review, here this study simply provides an
overview of related researches that proposed methods for reducing mean and variance of cycle time
in wafer fabrication, and the literatures are mostly surveyed from journal papers and are only
limited to the application for semiconductor wafer fabrication, as summarized in Table 2.1, and they
are categorized by this study into 8 categories:
1) Lot dispatching: the decision of which lot to be processed next at a particular tool set.
2) Batching policy: the decision of the number of lots to be processed simultaneously in a
batch and the processing sequence of batches in front of a batch-processing tool set.
3) Lot release control: the decision of when and how many lots to be released into the fab.
4) Productivity improvement: the engineering methods to reduce raw process time, increase
availability, avoid infrequent and long down times, or reduce tool dedication.
5) Staffing level: The decision for determining headcount for tool maintenance.
6) Tool maintenance dispatching: The decision of which tool preventive maintenance to be
executed next by the maintenance staff.
7) Layout design: The design for layout of tools in a fab.
8) Lot size policy: The determination of lot size for releasing into a fab.
Table 2.2 further summarizes the literatures listed in Table 2.1, it can be seen that most
literatures in the past focus on, ordered by number of papers in the category, lot dispatching,
batching policy, lot release control, and productivity improvement. It can also be found in table 2.2
that all the surveyed literatures suggests method for reducing mean cycle time, while methods for
reducing cycle time variance are relatively few, and are most related to lot dispatching and lot
7Tang, and Collins, 1996; Wang, Wu, and Qiao, 2007) in semiconductor wafer fabrication. However,
a simulation model requires an enormous amount of input data, including tool detail data, WIP
management policies, and product information. Due to the nature of simulation modeling, numerous
replications are needed to perform confident statistical analysis. Therefore, it could be difficult and
extremely time-consuming to explore what-if analysis (Shanthikumar, Ding, and Zhang, 2007).
Partly because that the construction and implementation of a simulation requires significant effort
and lengthy computer time (Connors, Feigin, and Yao, 1996), most of the above literatures are
limited to specific tool sets or an ideal mini-fab and almost no literature has employed simulation to
model the cycle time of all tool sets in a real fab.
Compared with simulation, analytical models based on Little’s law and queueing theory can be
much faster for achieving desired results. Queueing models have been frequently applied in
researches to predict cycle time of a fab or cycle times of individual tool sets. Chen et al. (1988)
applied the M/M/1 queueing network model to evaluate mean cycle times of tool sets and the fab.
Compared with observed data, they claimed that the predictive accuracy is within 1% to 11% for
total cycle time of the case fab, while the predictions for individual tool sets are typically bad and
were not reported. Connors, Feigin, and Yao (1996) developed queueing network models for
different types of tool sets. Their results showed that 68% of the mean queueing time estimates fall
within the 95% confidence intervals obtained from simulation. Huang, Chang, and Chou (2001)
developed an M/M/c approximation for multi-server batch-service tool sets with multiple process
recipes. The estimation error for mean queueing time is below 12% compared with simulation.
Miltenburg, Cheng, and Yan (2002) applied four open queueing network models to tool sets of three
fabs. They claimed that the mean fab cycle time predicted by each model is 5-10% higher than the
actual values, but the predictions for individual tool sets were not reported. Fowler et al. (2002)
developed an approximated G/G/m model with batching processing. The approximate performance
measures are compared with those of simulation. They claimed that the mean of the absolute
percentage error for mean cycle time is 4.73% when the setting of the case is low traffic intensity,
exponential mix, constant inter-arrival and service times, low batch size, single server and single
product. Hopp et al. (2002) developed an optimized queueing network capacity planning tool to
support wafer fab design. They claimed that the deviation of predicted mean fab cycle time is 30%
less than the results of the simulation. Hu and Chang (2003) developed a backward queueing
network analysis model to derive flow control parameters that can be utilized to obtain tangible
requirements for WIP levels. They claimed that the accuracies for mean cycle times of tool set is
greater than 97%, while the accuracies for standard deviation of cycle time are about 10–20%,
compared to those of the simulation results. Jacobs et al. (2003) and Jacobs et al. (2006), for
9fabrication are based in heavy-traffic limit theorem, and have relatively larger errors in moderate
and light traffics (Boxma, Cohen, and Huffels, 1979; Olsen, 2001). In practical applications,
approximation errors in light traffic are less important, but the error in moderate traffic is as
important as the error of heavy traffic (Kimura, 1986). Kimura (1986) provided an approximation
for G/G/m queue by interpolating between the light-traffic limit and the heavy-traffic limit. In
average, Kimura’s approximation performs better than other G/G/m queueing approximation over
the full range of utilization. But it performs worse than other alternatives when utilization is higher
than 0.9, i.e. in heavy traffic.
With the tool-dedication characteristic, the capacity of a tool set would be reduced because the
tools cannot mutually support to cope with fluctuation in arrival rate of different products (Wu,
Chiou and Chen, 2008). Hence, tool dedication would have impact on cycle times of individual tool
sets. Akçali et al. (2001) investigate the effects of various process control mechanisms for
photolithography on the cycle-time at the process and at the overall fab via a simulation study. Their
experimental results show that the dedicated tool assignment policy increases both the average and
the variation of production cycle time. The flexible tool assignment policy (i.e. less tool dedication)
significantly decreases both the average and the variation of production cycle time. Chung, Huang,
and Lee (2006) proposed an integer programming model to solve the capacity allocation problem
for photolithography workstation taking into account the constraint of tool dedication. The objective
of the model is to minimize the capacity utilization deviation among all tools. However, the benefit
of the proposed model on cycle time is not reported. Wu, Chiou, and Chen (2008) developed a
dispatching algorithm to improve on-time delivery for a make-to-order semiconductor wafer fab
with tool dedication and mask set-up. Simulation experiments show that the algorithm outperforms
the previous methods both in on-time delivery rate, cycle time, and only slightly less than the best
benchmark in throughput.
To assess the impact of hot lots on cycle time, Ehteshami, Petrakian, and Shabe (1992) applied
simulation to study the impact of hot lots on the cycle time of hot lots and regular lots for a
simplified fab configuration. Lots with the same priority class are further prioritized at a tool set
using the First-In-First-Out (FCFO) rule. They concluded that as the proportion of hot lots in WIP
increases, the mean and standard deviation of cycle times for both hot lot and regular lots increase.
And the effect is more significant as the fab utilization is higher. Narahari and Khan (1997) also
used simulation to evaluate the impact of hot lots on the mean and standard deviation of cycle time
for hot lots and regular lots under different dispatching disciplines. The results conform to the
finding of Ehteshami, Petrakian, and Shabe (1992). Furthermore, they suggested that the
Last-In-Fist-Out (LIFO) discipline yields the lowest standard deviation of cycle times for regular
11
Kang, and Lin (2001), except that it is applied for process layer rather than for process steps. The
standard WIP for a process layer equals to the intrinsic WIP (process time multiplied by throughput)
multiplied by a controlling parameterα, the controlling parameter is larger for more difficult layer
and is determined by fab engineers based on their experiences. The objective of WIP balance is to
maintain the actual WIP levels close to the desired levels, i.e. the standard WIP levels, so as to
balance the flow of wafer lots through the fab (Kim. Yea, and Kim, 2002). Hence, the setting of
standard WIP levels influences the production cycle time of a fab significantly (Qiu, 2005).
Nevertheless, despite many reported models for determining the standard WIP levels, in practice,
the WIP levels are determined by trial-and-error approaches (Tu and Li, 1998). In particular, Kuo,
Liu, and Chi. (2008) proposed a hybrid method combining queueing models and data mining
techniques to determine the standard WIP of individual processing steps taking waiting time
constraint into account. The standard WIP levels are used as the base for the MIVS to control the
WIP balance.
2.4 Tool allocation
Capacity planning plays an important role to solve the trade-off between cost and cycle time of
a fab. Many studies have been presented to address the trade-off for capacity planning of a fab. The
objective of capacity planning is to achieve target cycle time with minimal cost, or to minimize
cycle time within a prescribed cost budget. In previous works for long-term capacity planning of
semiconductor wafer fabrication, WIP or cycle time of a tool set is usually evaluated by queueing
models or by simulation. For examples, Connors, Feigin, and Yao (1996) developed queueing
models for different types of tool sets, and proposed a marginal allocation procedure that minimize
the total tool investment cost for achieving a target cycle time. Similarly, Hopp et al. (2002)
developed an optimized queueing network to minimize the total tool investment cost required to
meet specified output and cycle time target. Iwata, Taji, and Tamura (2003) applied queueing
models to quantify the effect of fab scale on cycle time and production cost, and to determine the
number of tools of each tool set that meets required levels of cycle time and production cost within
budget constraint. Grewal and Robinson (1998) developed a dynamic simulation analysis
methodology that provides fab with the information needed to purchase cost-effective equipment
sets that could achieve cycle time objectives at various production volume levels. Nazzal,
Mollaghasemi, and Anderson (2006) built a simulation model of the production line of the fab, the
tool sets that significantly influence production cycle time were identified through experiments. The
simulation model was used to evaluate the effect of acquisition of additional tools on cycle time
reduction. Chung, Huang, and Lee (2006) proposed an integer programming model to solve the
capacity allocation problem for photolithography workstation taking into account the constraint of
13
2.5.1 Neural network
Among data mining techniques, NNs form the backbone of most of the data mining techniques
(Smith and Gupta, 2000). Compared to mathematical models and computer simulations, neural
network can be trained with observed data, and it is not necessary to develop difficult algorithms
and statistical models (Chambers and Mount-Campbell, 2002). Neural network can provide
solutions in problems for which conventional mathematics, algorithms and methodologies are
unable to find a satisfactory solution (Lolas and Olatunbosun, 2008). The most popular neural
network is the multi-layer perceptron neural network. A fully connected feed-forward neural
network is shown as Figure 2.1. The number of nodes in input layer and that of output layer depend
on the characteristics of the problem, while the optimal number of nodes in the hidden layer can be
determined through experiments. The input (aj) to a node j equals to the sum total of the
multiplication of each input weight by its value of input node layer. Through the activation function
(f), the output value of a node can be determined. The sigmoid function is the most popular choice
of the activation function, and the output value for node j is computed as:
ja-j e
)f(a


1
1
The applications of NNs involve tasks of regression, classification, and clustering. For instance,
Hsu and Chien (2007) developed a hybrid approach that integrates spatial statistics and ART
(Adaptive Resonance Theory) NNs to efficiently extract patterns from wafer bin maps associating
with defects for effective trouble shooting and yield enhancement. NNs are the most popular data
mining techniques for the regression task and have inherent capability to map nonlinear relationship
between the input and output factors (Smith and Gupta, 2000; Kirkos, Spathis, and Manolopoulos,
2007). There are three popular NNs for regression task: back-propagation neural networks (BPNN),
recurrent neural networks (RNN), and radial basis function neural networks (RBFNN).
1) Back-propagation neural networks: BPNN are multi-layer feed-forward NNs with an input
layer, an output layer and one or more hidden layers between the input and output layers. In a
BPNN, each layer is connected to other layer through the weight lines. The neurons in a layer
receive weighted inputs from neurons in the lower layer and then produce a response value to
neurons in the upper layer. The training process consists of adjusting the weights, and the objective
is to minimize the mean square error between the modeled outputs and desired outputs. In BPNN,
the learning algorithm modifies the weights starting at the output layer, and then moving backward
through the hidden layer in the direction in which the mean square error decreases most rapidly.
There are three popular learning algorithms for comparison: gradient descent with momentum (GD),
conjugate gradient descent (CG) and Levenberg-Marquardt (LM) (Fu, Liang, and Li, 2007). For the
15
training data (Chen and Shih, 2006). SVR has several advantages over other typical NNs, such as a
global and unique solution and fast convergence (Byvatov et al., 2003; Chen and Shih, 2006). In
SVR, the kernel function needs to be chosen. There are three commonly used kernel functions:
linear, RBF (Gaussian), and polynomial kernels. The epsilon parameter has to be determined for all
kernel functions. The gamma parameter must be chosen for RBF and polynomial functions. For
polynomial function, the degree parameter should be assigned.
2.6 Variable ranking
Due to the existence of irrelevant and redundant variable, selecting only relevant variables for
most machine learning algorithms can improve prediction accuracy, speed up the training process,
and provide a better understanding of the variables (Setiono and Liu, 1997; Guyon and Elisseeff,
2003).
Variable selection approaches are generally classified into wrapper and filter methods ( Yoon,
Yang, and Shahabi, 2005). It is called a wrapper method if any data mining task is involved in the
process for selecting subset of variables. On the contrary, it is called a filter method. Filter methods
select variables by ranking individual variables with their correlation to the target variable. The
simplest filter method is to evaluate each variable based on its square of correlation coefficient to
the target variable. Principal component analysis (PCA) has been widely applied in data mining for
multivariate data analysis and dimension reduction. PCA is a linear method for redundancy
reduction which compresses the description of the data along the dimensions of smallest variability
(Shental et al., 2002). In particular, Amiri et al. (2008) applied PCA to rank the variables, and to
support the decision for supplier selection. Jalali-Heravi et al. (2007) used PCA to rank and select
variables, and then the BPNN was generated using the selected variables to predict the target
variable. Wrapper methods perform variable selection in the process of training and are usually
specific to given learning machines, for instance, decision trees such as ID3, C4.5, and CART
(Classification and regression tree) use an evaluation function at each search stage to select the
variable that has the best ability to discriminate among the class (Blum and Langley, 1997). In
particular, CART can deal with categorical and continuous variables, and has a build-in mechanism
to perform variable ranking (Breiman et al., 1984). Though there are other more sophisticated
wrapper methods, their improvements for predictive performance are not always significant (Guyon
and Elisseeff, 2003).
17
Both the cycle time prediction and arrival rate prediction are prediction tasks in data mining
that deal with continuous data. Due that neural networks are the most commonly used dada mining
techniques for predicting a continuous value, hence this study select neural networks as the data
mining technique for predicting cycle time and arrival rates of individual tool sets.
3.1.1 Determine output and input variables
A Arrivale rate prediction
According to the experiences of practitioners in the case fab, there are potential relationships
between the arrival rate of a tool set and the departure rates of specific technology from specific
tool sets, inclduing upstream tools and the tool itself in previous duration. Therefore, the output
variable is defined as the mean arrival rate, and the input variables are the departure rates of specific
technology from individual tool sets in previous duration. Nevertheless, the suitable input variables
for a specific tool set need to be identified by data mining techniques that will be descibed in
section 3.1.2.
B Cycle time prediction
In this study, tool sets are classified into two types:
1) Single processing: the tools can process only one wafer at a time, while the lot under
process will not leave the tool until all the wafers of the lot complete the process. In
particular, plasma etch, chemical vapor deposition, ion implanter, and photolithography are
mostly single processing tools.
2) Batch processing: the tools can process many wafers at the same time, and even can
process many lots simultaneously. Lots with the same process recipe have to wait to form a
batch to be processed together, upon process the batch is split into individual lots before
they leave the tool. For examples, diffusion furnace and wet station are usually batch
processing tools.
A neural network represents a model for predicting one of the 5 output variables for a specific
tool set: 1) mean cycle time of regular lots, 2) standard deviation of cycle time of regular lots, 3)
mean cycle time of hot lots, 4) standard deviation of cycle time of hot lots, and 5) mean cycle time
of total lots. It is noted that the standard deviation of total lots is not concluded in the output
variable due that it has no managerial meaning for practice in a fab. The input variables for
individual types of tool set are defined as followings.
Single processing tool sets
The determination of the inputs for the BPNN stemmed from the factors identified by queueing
19
the effective process time in addition to the variation of downtime. Therefore, this study
incorporates five factors into the inputs of a NN model: 1) the mean lot size, 2) the standard
deviation of the lot size, 3) the mean number of operators, 4) the standard deviation of the number
of operators, and 5) the mean number of recipes. To discriminate the effect of lot size and setup for
changing recipe from process recipe on process time, the mean and standard deviation of process
time are calculated based on lots with full lot size, i.e. 25 pieces of wafer, with the same recipe as
the previous lot. Utilization in Eq. (3.1) is derived from four parameters: 1) mean arrival rate, 2)
mean process time, 3) mean number of tools, and 4) mean available rate. In order to investigate the
individual impact of these four factors on cycle time of tool sets, the four factors are used as
individual inputs instead of using the utilization. Ca in (3.1) is derived from the standard deviation
of the inter-arrival time multiplied by the mean arrival rate. Since the arrival rate has been defined
as an input and in order to avoid inter-dependency between input factors, this study uses the
standard deviation arrival rate per hour (Dλ) to substitute Ca in (3.1). To explore the impact of hot
lots on cycle time, two variables are included: 1) the mean percentage of arrival rate of hot lots,
including super hot lots and rush hot lots, and 2) the mean percentage of arrival rate of super hot
lots, out of the arrival rates of all lots. For convenience, this study uses the standard deviation of the
available rate per hour (Dv) to substitute Cr in (3.1) because it is easier to collect data for Dv than for
Cr in a real fab. Finally, this study includes the mean rework rate and the mean percentage of hold
WIP, which are neither considered by queueing models. In summary, there are 17 input variables for
single-wafer processing tool sets without waiting time constraint, as illustrated in Table 3.1. From
the viewpoint of practitioners, the derived variables are more manageable in practice that the
original variables in conventional queueing models, and may facilitate reduction of mean and
variation of cycle time for individual tool sets in a fab.
For single processing tool sets, the predictive accuracy for mean cycle time of NN will be
compared with queueing models in heavy traffic and moderate traffic, respectively. For heavy
traffic, Eq. (3.1) is applied. As to moderate traffic, this study refers to Kimura’s approximation
(Kimura, 1986), as shown in Eq. (3.2).The light traffic condition is not discussed in this study due
that there is almost no such conditions for tool sets in an typical fab, and the precision in light traffic
is not of major practical importance for most applications (Whitt, 1993).
      tρ-1
tρ
cc
M/D/mk
c-1
D/M/mk
c-1
2
cc
W
11)2(m
2
e
2
a
2
e
2
a
2
e
2
a 


 


 
1
1 (3.2)
21
batch processing tool, the mean and standard deviation of lot size are excluded in the inputs.
Whereas, the batch size may affect the process time because a larger batch size will result in a
longer setup time, thus the mean and standard deviation of batch size are incorporated into the
inputs. To discriminate the effect of batch size and setup for changing recipe from process recipe on
process time, the mean and standard deviation of process times for batch processing tools are
calculated based on batches with full batch size, e.g. 150 pieces of wafer, with the same recipe as
the previous batch. The input variables for batch processing tools set are summarized in Table 3.2.
Waiting time constraint is another critical constraint that makes queueing models limited.
Figure 3.2 illustrates an example for several tool sets that are restricted by waiting time constrains.
For instance, the waiting times for lots at tool set B are not allowed to exceed 4 or 8 hours for
different products. Thus the WIP of a downstream tool sets is constrained by the required waiting
time. Whereas the WIP level of upstream tool sets is affected by the waiting time specification and
its downstream WIP levels. Hence the cycle times of tool sets with waiting time constraints are
distorted by the constraints. To evaluate the influence of waiting time constraint on cycle time, this
study introduces two inputs for downstream tool sets (e.g. tool set B and C in Figure 3.2) that are
subject to waiting time constraints:
1) Mean ratio of lots with waiting time constraint (rw): the percentage of arrived lots that are
subject to waiting time constraint out of all lots that arrived at the tool set in the duration.
Taking tool set C in Figure 3.2 for example, 50% of arrived lots are subject to waiting time
constraint with 8 hours, 30% of lots are subject to waiting time constraint with 12 hours, and
there is no waiting time constraint for the remaining 20% lots. Therefore, the rw for tool set
C is 80% (50% + 30%).
2) Mean waiting time limit for lots with waiting time constraint (tw): the average waiting time
allowed for lots subject to waiting time constraint for a tool set. Taking Figure 3.2 for
example, the tw for tool set C is 9.5 hours for the 80% lots with waiting time constraint
([50% × 8 + 30% ×12] / [50% + 30%]) and the tw for tool set B is 6 hours ([50% × 4 + 50%
× 8] / [50% + 50%]).
In summary, for a tool set without waiting time constraint, or a tool set with waiting time
constraint but it has no downstream tool set (such as tool set C in Figure 3.2), the inputs are defined
in Table 3.1 and Table 3.2 according to the type of the tool set. For a tool set with waiting time
constraint and it has downstream tool sets (such as tool set A and B in Figure 3.2), the inputs of its
downstream tool sets are also included. Take Figure 3.2 for example, the inputs of tool set A include
the inputs of tool sets B and C. And the inputs of tool set B include the inputs of tool sets C. Figure
23
variables for individual variable ranking methods.
In summary, there are 12 (3×4) combinations of variable ranking and prediction techniques.
The optimal combination of data mining techniques is evaluated with the least normalized mean
square error (NMSE) in Eq. (3.7) for testing data.
   
n
y,...,yMiny,...,yMax
yy
NMSE
n
1i
2
n1n1
i
'
i







 (3.7)
iexampledatafortargetModeledy
iexampledatafortargetActualy
where
'
i
i


B Cycle time prediction
To investigate which data mining technique is most suitable for predicting the cycle times and
to validate the effectiveness of the selected data mining technique, a simple simulation is built to
mimic the affects of input factors on mean and standard deviation of cycle times for a single
processing tool set. The results of the simulation with different combinations of input variables are
used to generate training and testing datasets for NNs. Three NN techniques: 1) BPNN, 2) RNN,
and 3) RBFNN and SVR are employed for comparison. For each technique, different combinations
of network architecture, learning algorithm and parameters were experimented. The optimal setting
for each technique is evaluated with the least NMSE for testing data. Meanwhile, two queueing
approximations Eq. (3.1) and (3.2) are also compared with the selected data mining technique.
3.2 Prepare data
The second step is to collect the required data. In order to increase the data samples, in each
data sample of a data set, each variable represent the mean or standard deviation in a rolling-7-day
duration according to the definition of input and output variable defined in section 3.1. Therefore,
there are N-6 data examples assume that the durations for data collection are N days. Among them,
the latest n data samples were extracted for testing. For the remaining N-n-6 data samples, the last 6
ones were discarded since they have time overlap with the first testing data sample. Thus, N-n-12
data samples were used for training.
To be ready for use, variables that did not change in the training data set were ignored due that
they did not help the training process.
3.3 Construct data mining models
In this step, the training data set is used to generate an explanation of the target variable in
25
In addition, the data miner and domain experts can translate the data mining results into
improvement actions in practice. By use of the patterns stored in the trained BPNN, the prediction
for arrival rates of individual tool sets can be updated periodically, and serve as the input for the
cycle time prediction model. The sensitivity analysis on the trained cycle time prediction model can
be utilized to determine the marginal WIP reduction per a specific percent of improvement on each
factor of each tool set, so as to determine a rank of ordering of the relative importance of individual
variables for a tool set, or to determine a rank of ordering of the relative importance of individual
tool sets for a variable. The results can help practitioners to make use of limited resources to take
actions for improving the key performance indices, which are defined as controllable variables,
based on the priori. Furthermore, sensitivity analysis can support the decision-makings for 1)
determining the suitable ratio of hot lots, 2) determining the optimal lot size, and 3) determining the
allocation of resources, such as tools and operators, among tool sets.
The proposed data mining framework is a cyclic process. This study suggests the practitioners
to go back to previous step to update the historical data, and conduct the data mining processes
periodically so as to seek opportunities for continuous improvements.
3.6 Study of Pass Rate Learning Variables
3.6.1 Independent Variable
In this study, independent variables were formulated to overcome the problem in previous
literature that not all variables are studied together, and they were based on the expert improvement
experience. It concluded with three types, which are process introduction time length, wafer cycle
time, and wafer quantity. The priority factor was considered, and wafer cycle time and wafer
quantity were combined with various priorities to form independent variables, including:
1. Process introduction time length (age): denotes time length passed after semiconductor process
introduction, in unit of month.
2. Cycle time per layer of super hot run (CTPL_SHR): denotes the average cycle time per layer of
the highest priority wafer lot in the current month. As the super hot run is not subject to existing
production schedules, it has the shortest cycle time, in unit of day.
3. Cycle time per layer of hot run (CTPL_HR): denotes the average cycle time per layer of the
second highest priority wafer lot in the current month, with the same attribute as CTPL_SHR
but a lower priority, in unit of day.
4. Cycle time per layer of normal run (CTPL_NORM): denotes the average cycle time per layer of
a normal wafer lot in the current month. As the normal run is subject to production schedule and
processing conditions, it has the longest cycle time, in unit of day.
5. Quantity of super hot run (QTY_SHR): denotes the average quantity of a super hot run per
month, in unit of lot.
6. Quantity of hot run (QTY_HR): denotes the average quantity of a hot run per month, in unit of
lot.
7. Quantity of normal run (QTY_NORM): denotes the average quantity of a normal run per month,
in unit of lot.
27
3.7.2 Select Response
The response of this study is the RMSE (Root Mean Square Error) of each test after each use
of the Artificial Neural Network learning:
 2
0
n n
n
p
t y
n n

(3.10)
where: np is the number of test groups.
n0 is the number of nodes in the quantity layer.
tn is the actual value of the nth test group.
yn is the model quantity of the nth test group.
The target is to minimize error, hence, this is a Smaller-the-Better research pattern.
3.7.3 Identify Control Factors and their Levels
Various experimental parameters of the Artificial Neural Network coupled with the shift effect
of cycle times with respect to priority were the main control factors of this study, and every factor
has three levels (L), such as:
1. F1: Nodes of Hidden Layer.
2. F2: Artificial Neural Network Learning speed.
3. F3: No. of Iteration
4. F4: Time Shift of CT for Super Hot Lot .
5. F5: Time Shift of CT for Hot Lot.
6. F6: Time Shift of CT for Product Lot.
3.7.4 Orthogonal Table Selection and Variable Assignment
Based on the above, L182137 is selected as the orthogonal table for the experiment, and the first
factor cell and the last factor cell are blank because there is no extra factor needed.
3.7.5 Experiment Execution and Data Collection
Through factor assignments in the L182137 orthogonal table, this study carried out Artificial
Neural Network learning and validating to collect data on error performance under each factor
combination.
3.7.6 Calculate Error SN Ratio for Each Factor Combination
By means of the Smaller-the-Better formula in the Taguchi Method:
2
10
1
1
10*log
n
i
i
y
n 
     (3.11)
The Error SN Ratio of each factor combination is calculated for further analysis.
3.7.7 Accomplish Effect Diagram of Each Factor, Determine Optimal Factor Assignment
From the factor error SN Ratios, this study selected the level when the factor had the maximal
SN Ratio, as the optimal level of factor, and determined the optimal factor assignment of the ANN
experimental parameter through factor effect diagram analysis.
29
CHAPTER 4 EMPIRICAL STUDIES
In this chapter, the data mining approaches defined in chapter 3 are applied to a real fab. The
data used for this study have been collected from an 8-inch wafer fab of the case company in the
Hsinchu Science-based Industrial Park, Taiwan. The fab produces two product categories, one is
Flash ROM (Read Only Memory) with the production mode of make-to-stock (MTS) and the other
one is Mask ROM which is a product with make-to-order (MTO) mode. In general, the
make-to-order products accounts for 10~20% of the production volume, hence the reduction of
mean cycle time is more important than the reduction of variation of cycle time for the fab. In
addition, given the same production percentage for the make-to-order product, the percentage of
make-to-order product differs among individual tool sets.
There are 87 tool sets in the case fab and Appendix A lists the basic information of individual
tool sets in the fab, including type of tool (single or batch processing), process function,
interchangeable tool sets, upstream-down relationships, and the number of inputs for cycle time
prediction. Table 4.1 summarizes the number of tool sets for each type of tools. It can be seen that
the number of tool sets with waiting time constraint accounts for 41% (36 tool sets out of total tool
sets) of the total tool sets.
4.1 Problem definition
4.1.1 Evaluating date mining techniques for arrival rate prediction
To validate the effectiveness of different combination of methods for variable ranking and
prediction, and to investigate which one is most suitable for predicting the arrival rates of tool sets,
a simulation is built to represent the dynamics among tools in a fab. The simulation model is built
by the discrete event simulation packages of eM-Plant 7 to generate training and testing datasets.
There are 23 tool sets (tool set A ~V) and 3 technologies (Technology 1, 2 and 3). The process
routes of individual technologies are illustrated in Figure 4.1, and the number of tools and process
times of individual technologies for individual tool sets are summarized in Appendix B. The
inter-arrival time ranges from 15.5 to 20 minutes with step = 0.5 minute. The percentage of
technology A ranges from 20 to 40% with step = 10%. The percentage of technology B ranges from
20 to 40% with step = 10%. Therefore, there are 10×3×3 = 90 scenarios. The inter-release time and
percentage individual technologies for each week are listed in Appendix C. The simulation assumes
no setup time and no down time for tool sets. The dispatch rule follows the FCFS (First Come First
Serve) discipline. After a 10-week warm-up period, two data are collected for the last 90 week: 1)
departure rate (lot/per hour) of individual technologies on individual tool, and 2) arrival rates
(lot/per hour) for individual tool sets. In addition, 6 more data are collected for further use in section
31
4.1.2 Evaluating date mining techniques for cycle time prediction
To validate the effectiveness of different data mining techniques and to investigate which one is
most suitable for predicting the cycle times of a tool set, a simple simulation is built to mimic the
affects of input factors on the mean and standard deviation of cycle times. The simulation model is
built by the discrete event simulation packages of eM-Plant 7 (by Tecnomatix Technologies, Ltd.) to
generate training and testing datasets. The mean inter-arrival time ranges from 6 to 10 minutes with
step = 2 minutes. The standard deviation of inter-arrival time ranges from 3 to 5 minutes with step =
1 minute. The mean process time ranges from 0.8 to 1.0 hour with step = 0.1 hour. The standard
deviation of process time ranges from 0.1 to 0.3 hour with step = 0.1 hour. The number of tools
ranges from 8 to 10 with step = 1. Therefore, there are 3×3×3×3×3 = 243 data samples. Among all
the samples, 54 data samples with utilization equal to or greater that 100% are excluded and there
are 189 available data samples. 30 data samples are randomly extracted to be used for testing, while
the remaining samples are used for training. The random extraction process is conduct for 5 times
and hence there are 5 datasets. The output are defined as mean cycle time and standard deviation of
cycle time, and there are 5 inputs: 1) mean inter-arrival time, 2) standard deviation of inter-arrival
time, 3) mean process time, 4) standard deviation of process time, and 5) number of tools. 4 data
mining techniques for prediction are compared: 1) BPNN, 2) RNN, 3) RBFNN, and 4) SVR. For
each technique, different combinations of setting for network architecture, learning algorithm and
parameters were experimented, as shown in Table 4.2, and the frequently used sigmoid transfer
function is applied for BPNN, RNN and RBFNN. The optimal setting for each technique is
obtained as the one with the least NMSE for testing data. This study use the package of
NeuroSolutions 5 (by Neurodimensions, Inc.) to develop the models of BPNN, RNN and RBFNN,
and applied the package of STATISTICA 7 (by STATSOFT, Inc.) for SVR. Through experiments,
the optimal setting of network architecture, learning algorithm and parameters were illustrated in
Table 4.5. Table 4.6 and Table 4.7 illustrate the NMSE and MAPE, for mean cycle time and
standard deviation of cycle time respectively, of the 4 techniques with optimal settings. It shows
that, for both mean and standard deviation of cycle times, BPNN significantly outperforms other
models in terms of NMSE. Therefore, the BPNN using LM learning algorithm with one hidden
layer is suggested by this study for cycle time prediction in practical application to real fabs.
Nevertheless, the number of hidden neurons needs further experiments due that the actual number
of input factors of individual tool sets in the fab is different from that of the simulation here.
With the same testing data, this study applied queueing models in heavy and light traffics to
compare them with the BPNN for the predictive accuracy (1-MAPE), as shown in Table 4.8. It
demonstrates that BPNN outperforms queueing models over the full range of tool utilization. It is
33
it is noted that the prediction accuracy of the proposed methods declines as the arrival rate decrease.
4.3.2 Cycle time prediction
Based on the results of section 4.1.2, the BPNN using LM learning algorithm with one hidden
layer was used to model the relationship of an output variable with inputs. Therefore, the number of
BPNN models are 522 (87 tool sets × 6 outputs). The number of input factors for individual tool
sets range from 15 to 212 depending on the type of the tool set and the number of downstream tool
sets subject to waiting time constraint. To determine the suitable number of hidden neurons for
different number of input variables, experiments are conducted by setting the number of hidden
neurons to be 0.2~0.6 of input variables. Through trail-and-error, it is found that when the number
of iterations is greater than 15000, a stable training NMSE can be obtained for the most complicated
BPNN that have the largest number of inputs, as shown in Figure 4.3 for the mean cycle tile of total
lots of tool set L2. It is also observed that no over-fitting is found when the iterations is set as 15000,
thus the number of iterations was set as 15000 for all BPNN models. The optimal number of hidden
neurons that reach minimal testing NMSE for different number of inputs is also experimented and
the results are summarized in Figure 4.4. The regression formula will be applied for further
experiments with different number of inputs that need to determine the suitable number of hidden
neurons.
Though the input variables are logically derived from queueing models and practical constraint,
still there might be irrelevant input variables for cycle time prediction. Referring to the results of
variable ranking for arrival rate prediction, CART is also applied here to rank the importance of the
original inputs. The proposed method is to add the input variables one by one according to the
importance of the variables, starting from the one with highest importance, when the testing NMSE
is not improved further, the present variables are regarded as relevant to the output variable, while
the others are inferred as irrelevant. Taking tool set L2 for example, as illustrated in Figure 4.5,
the 5 variables rh, Dλ, Dv, Do and r are excluded from the inputs due that they do not help
improve the testing NMSE. Table 4.10 summarizes the average percentage of individual input
variables selected by individual output variables.
In summary, 435 (87 tool sets × 5 outputs) BPNN models with the optimal input variables
network are built, and the BPNN models are also saved for further use to explore rules and patterns
for developing practical improvement actions. Meanwhile, the results of the 40 single processing
tool sets without waiting time constraint will be compared with queueimg models for prediction
accuracy. Table 4.11 summarizes the average prediction accuracy of the BPNN models for mean
and standard deviation of cycle time of different lot priority classes. The results are quite
35
To further explore insights for effect of different input variables on cycle times, sensitivity
analyses based on the trained BPNNs for regular lots are conducted to depict the common
qualitative relationship of individual variables with mean and deviation of cycle time for regular
lots, as shown in Table 4.13. The sign “＋”represents positively related and the sign “－”
represents negatively related. In particular for mean batch size, the sign “－→＋”represents that it
is negatively related to cycle time at the outset, then turn to be positively related as the mean batch
size reach a specific level. In addition, the percentage of tool sets that conform to the common
qualitative relationship for each input variable is also illustrated. To derive practical rules further,
domain experts of the fab had developed managerial implications, as shown in Table 4.14. Table
4.14 may act as the guidance for developing feasible plans for improving specific factors of
individual tool sets. It is noted that mean arrival rate is determined by business condition and is
regarded as controllable, hence it is not addressed in Table 4.14. The case fab has taken many
actions to improve related input variables based on the managerial implications, for examples:
1) Level tool availability: there are two kinds of preventive maintenances (PM): 1) PM1 is
executed by operators who work at both day and night by shifts and 2) PM2 is executed by
engineers who work at day shift only. Figure 4.10 illustrates an example that most of
preventive maintenances of a tool set used to be executed at day shift. Thus, the variation of
the available rate is fairly high. Given that unscheduled down time (DOWN) is quite random,
when partial PM1 are transferred from day shift to night shift, the variation of available rate
is significantly reduced. Consequently, the average Dv of all tool sets has been reduced by
17%.
2) Contradictory variables: the second example addresses the contradictory variables. Results
of sensitivity analysis indicate that both mean and standard deviation of lot size are
positively correlated to mean cycle time. However, these two factors are negatively
correlated, as shown in Figure 4.11, by taking a tool set for example. Sensitivity analysis
was conducted to simulate the compound effect of the two contradictory variables on mean
cycle time of the tool set, as shown in Figure 4.12. It indicates that the optimal lot size for
the tool set is 24.12, whereas the actual lot size is 23.68. Hence it was suggested to merge
lots of same products with smaller lot size until the mean lot size reaches the optimal level.
Another example regards to a tool set for photo-resist strip process. It is expected that
merging some recipes with shorter process time to a recipe with longer process time might
reduce the number of recipes and reduce the variation of process time while lengthen the
mean process time. However, these variables are also contradictory. Sensitivity analysis can
be employed to support the decision making. Table 4.15 illustrates that merging recipe B
37
percentage of a specific input variable j of a specific tool set i to the entire fab is defined by
Equation 4.1 and Equation 4.2 for mean cycle time (△μCT%ij) and standard deviation of cycle
time(△σCT%ij) respectively. It should be noted in Equation 4.2 the MTO% is included due that the
standard deviation of cycle time has impact on lead time of MTO products, rather than on MTS
products. Furthermore, Equation 4.2 is not applicable for a 100% MTS fab, e.g. a pure IDM
(Integrated Device Manufacturer) fab.



 n
1i
iCT
m
1i
iCT
ijCT
λμ
λΔμ
%Δμ
i
j
ij
(4.1)



 n
1i
iiCT
m
1i
iCT
ijCT
MTO%λσ
MTO%λΔσ
%Δσ
i
ij
(4.2)
jvariabletorelatedsetstoolofNumberm
fabtheinsetstoolallofNumbern
where
j 

△μCT%ij and △σCT%ij represent the percentage of reduction for mean cycle time and standard
deviation of cycle time of the fab owing to a specific percentage of improvement on an input
variable j of tool set i. Hence they can be used to assess the individual benefit of related plans to
mean cycle time and standard deviation of cycle time. Nevertheless, there is a need to weight
△μCT%ij and △σCT%ij for prioritizing all input variables so as to allocate limited resource e to the
39
fluctuations of individual input variable in terms of the CV (Coefficient of variation) of weekly
values for individual variables. It illustrates that arrival rate is much more fluctuant than other
variables. Therefore, this study proposes to make use of the built BPNN models for predicting the
arrival rate in the next week. As for other input variables, the value in week k-1 is applied. The best
allocation is evaluated by the one that reach the minimal total WIP of the interchangeable tool sets.
The expected WIP of individual tool sets can be derived by Little’s law:
rateArrivaltimeCycleWIP 
By conducting sensitivity analysis on the trained BPNN for cycle time prediction and combing
the Little’s law, the WIP for different combinations of tools can be simulated, as shown in Figure
4.16 that is an example of tool cluster A composed of tool set A1 and A2. In the example, the
propose number of tools is 8 and 12 for tool set A1 and A2 respectively due that the allocation is
expected to minimize total WIP of the tool cluster.
It is noted that the proposed tool allocation is based on the predicted arrival rates and value of
other variables in last week. Hence the expected total WIP by the proposed tool allocation is
evaluated again by using the actual values of arrival rate and other variables in week k. For
comparison, 2 allocation methods are also evaluated through sensitivity analysis: 1) the expected
WIP by ideal tool allocation using the optimal tool allocation using the actual value of arrival rate
and other variables, and 2) the expected WIP by the actual tool allocation using the actual value of
arrival rate and other variables in week k. Table 4.17 summarizes the difference for evaluating the 3
methods. Taking tool cluster A again for example, as shown in Figure 4.17, it is proposed allocation
can obtain lower total WIP that the actual allocation, and the WIP level is quite close to the ideal
allocation. It is also noted the tool number allocation between tool set A1 and tool set A2 is (9, 11)
in previous week, the proposed allocation is (8, 12) for the week, and the actual allocation for the
week is (10, 10). That is, the proposed tool allocation suggests fab planners to transfer one tool from
tool set A1 to tool set A2 while, on the contrary, the actual allocation transferred one tool from tool
set A2 to tool set A1.
To estimate validity of the proposed approaches, we evaluated the total fab WIP under different
levels of fab utilization that is defined as the average utilization of the bottleneck tool sets in the
week. Sensitivity analyses were conducted for all the tool clusters in the fab for 10 weeks with
different fab utilization. Due that tool cluster J and K are subject to the same time constraint, they
are grouped together for summarizing the results, and so are tool cluster L, M, N and O. Table 4.18
summarizing the expected WIP level of individual tool clusters for different methods of tool
allocation. Based on Table 4.18, Table 4.19 calculates the reducible WIP, comparing to the actual
41


 
 O
1o
J
1j
ijoij
J
1j
ijoij
iio
PassTeck%
PassTeck%
STDWIPSTDWIP (4.5)
0Pass:no
1Pass:Yes
isettoolbyprocessedostepprocessingincludesjtechnologyofrouteIfPass
isettoolatjtechnologyofratearrivalofPercentageTech%
where
ijko
ijo
ijo
ij




The data mining models for predicting arrival rate and cycle time of each tool set are built and
saved by using the data samples produced in section 4.4.1. And according to the results of previous
sections, CART is applied to determine the rank of importance for potential input variables for
prediction of both arrival rate and cycle time. For arrival rate prediction, SVR using RBF kernel
function with epsilon = 0.006 and gamma = 1.5 is employed to determined the optimal input
variables. For cycle time prediction, BPNN using LM learning algorithm with one hidden layer is
applied and the number of hidden neurons BPNN follows the results shown in Figure 4.4.
The simulation model built in section 4.4.1 is applied to validate the benefit of the proposed
approach for standard WIP determination. The percentage of technology A, B and C are fixed as
30%, 30% and 40% respectively. The inter-arrival time ranges from 15.5 to 18 minutes with step =
0.5 minute. 2 other methods for standard WIP determination are compared:
1) Historical approach: the standard WIP of each processing step in week k is set as the
average WIP of the processing step in week k-1.
2) Queueing-model approach: The standard WIP of individual tool sets are defined by
Equation 3.3 and Equation 3.3 for single processing tools and batch processing tools
respectively. The utilization is derived from the prediction for arrival rates for week k,
while other variables use the historical average in week k-1. Then the WIP of tool sets is
allocated to corresponding processing steps by Equation 4.5.
Hence there are 18 scenarios for the simulation. Figure 4.20 illustrates the procedure for
implementing the simulation. For the first 5-week warm-up period, FIFO discipline is adopted. The
simulation is paused at the end of week 5. Then necessary data needed for prediction of arrival rate
and cycle time, and average WIP of individual processing steps are collected in week 5. Meanwhile,
the mean utilization of the bottleneck tool set, i.e. photo scanner, is also collected. When the
standard WIP of individual processing steps are updated, change the dispatching rule to MIVS and
43
4.6 and Equation 4.7 respectively.
y
pμ
μ
n
1i
ir-CT
CT_fab_r
i
 (4.6)
y
pμ
μ
n
1i
ih-CT
CT_fab_h
i
 (4.7)
layersmaskofnumberMeany
isetstoolofvisitofnumberMeanp
where


Assume that the cycle times of regular lots and hot lots for all tool sets are independent, the
modeled standard deviation of fab cycle time per mask layer for regular lots and hot lots can be
obtained by Equation 4.8 and Equation 4.9 respectively.
y
pσ
σ
n
1i
2
i
2
CT_ri
'
CT_fab_r

 (4.8)
y
pσ
σ
n
1i
2
i
2
CT_hi
'
CT_fab_h

 (4.9)
It is observed that the modeled standard deviation of fab cycle time per mask layer is greater than
the actual standard deviation due that the cycle times of individual tool sets are actually dependent
on others, and dispatching rules tend to pull-in the delayed lots. To deal with the issue, the model
STDEV of cycle times are compared with the actual STDEV of output lots for the weekly data.
Through try and error, it is observed that the STDEV of cycle time for regular lots is most
correlated to the modeled vaule 5 weeks ahead, as shown in Figure 4.21.a. While the STDEV of
cycle time for hot lots is most correlated to the modeled vaule 2 weeks ahead, as shown in Figure
4.21.b. For the case fab, the regression formulas in Figure 4.21 are applied to transferr the modeled
STDEV of cycle times into expected STDEV of cycle times for regular lots and hot lots, as defined
in Equation 4.10 and Equation 4.11 respectively.
0357.01295.0  ' lotularCT_fab_reglotularCT_fab_reg σσ (4.10)
0377.01362.0  ' lotCT_fab_hotlotCT_fab_hot σσ (4.11)
Under different combination of level for individual input variables, the expected mean and
45
by means of L182137orthogonal table assignment and SN Ratio comparison, as shown in Table 4.28:
Then, based on optimal experimental factor combination obtained, Artificial Neural Network
was used to calculate RMSE values of various processes, as shown in Table 4.29.
After confirming the optimal experimental factor assignment model, overall sensitivity
analysis was conducted on every pass rate factor of the ANN model. The results are summarized as
follows:
1. Production introduction time is inversely proportional to D0 improvement rate (see Figure 4.24),
or, as the production cycle matures, the D0 improvement rate goes down gradually or even
becomes negative.
2. Given cycle time with respect to varied priorities, D0 improvement varies, but in general, they
remain in inverse proportion (see Figure 4.25), or, as the cycle time shortens, the D0
improvement rate rises.
3. D0 improvement rate may vary with quantities of various priorities, but in general, they remain in
positive proportion (see Figure 4.26), or, as quantity increases, the D0 improvement rate rises
gradually.
In addition, multi-period analysis revealed that for the same production parameters at different
priorities, performance of different processes compromised each other; and after comparing against
data of the other process, production parameter performance varied as well. The comparison data is
shown in Tables 4.30 to 4.33, where Age denotes production introduction time, SHL, HL, and
PROD denote product lots at various priorities respectively, and QTY denotes quantity.
Based on the above, the followings conclusions are made:
1. In terms of a 21 month production cycle, two different processes influenced the D0 improvement
rate in the same trend. In other words, production cycle time was in inverse proportion to the D0
improvement rate; cycle time at different priorities was in inverse proportion to the D0
improvement rate; and production quantity at different priorities was in positive proportion to the
D0 improvement rate. But as Process 1 was not as mature as Process 2, the D0 improvement rate
appeared better in the small hot run; on the contrary, Process 2 was very mature technically and
the mass production run had a better D0 improvement rate.
2. From a multi-period perspective, cycle time of the super hot run had the optimal improvement
rate, regardless of the process used because the initial period of production used a small batch yet
short cycle time super hot run to improve the systematic defect of the process, resulting in fast
pass rate learning.
3. Based on the above conclusions, the quantity of the super hot run, regardless of the process used,
had a maximal impact on the D0 improvement.
4. In terms of process introduction time, Process 1 belongs to a totally new process. Due to
knowledge and experience buildup the D0 improvement rate rose month by month in the first 7
months. On the other hand, Process 2 was modified on the basis of Process 1; hence there was no
learning speed ramping phenomenon like Process 1.
47
APPENDIX
Appendix A Basic data of tool sets in the case fab
Tool Set
Inter-change-able
tool set
Process function Tool type
Downstream tool set
for waiting time
constraint
# of original
inputs
# of total
input for
NN
A1 A2 CVD Single processing 17 17
A2 A1 CVD Single processing 17 17
AA Dry etch Single processing 16 16
AG Implanter Single processing 16 16
AI Implanter Single processing 16 16
AJ CVD Single processing 15 15
AK CVD Single processing 17 17
AL Dry etch Single processing 17 17
AR Rapid thermal process Single processing 17 17
AV Scrubber Single processing 17 17
AW Scrubber Single processing 16 16
B1 B2 Dry etch Single processing 17 17
B2 B1 Dry etch Single processing 17 17
BB Dry etch Single processing 15 15
BD Photo scanner Single processing 17 17
BG Photo scanner Single processing 17 17
BH Dry etch Single processing 16 16
BL Bake Single processing 17 17
BM CVD Single processing 17 17
BN CVD Single processing 17 17
C1 C2, C3, C4 CMP Single processing 17 17
C2 C1, C3, C4 CMP Single processing 17 17
C3 C1, C2, C4 CMP Single processing 17 17
C4 C1, C2, C3 CMP Single processing 16 16
D1 D2 CVD Single processing 17 17
E1 E2 Dry etch Single processing 17 17
F1 F2, F3 Dry etch Single processing 17 17
F3 F1, F2 Dry etch Single processing 17 17
49
Appendix A Basic data of tool sets in the case fab (continued)
Tool Set
Inter-change-able
tool set
Process function Tool type
Downstream tool set
for waiting time
constraint
# of original
inputs
# of total
input for
NN
M2 M1, M3 Furnace Batch processing 17 17
M3 M1, M2 Furnace Batch processing BI, M2, O3 16 69
N1 N2 Furnace Batch processing 19 19
N2 N1 Furnace Batch processing BJ 17 35
O3 O1, O2 Furnace Batch processing AE, M2 17 51
Z Furnace Single processing 19 19
AN Dry etch Single processing BC, D2, H1 17 71
BA PR strip Single processing 19 19
BC PR strip Batch processing D2, H1 17 54
D2 D1 Furnace Single processing 19 19
F2 F1, F3 Dry etch Single processing BA, H1 17 54
H1 H2 PR strip Single processing 18 18
AB Furnace Batch processing 16 16
AS Furnace Single processing 17 17
AU CVD Single processing AB, AS 17 50
AC Furnace Batch processing 19 19
AO PR coater Single processing AC, AP, BF 17 70
AP Photo developer Single processing AC 17 36
BF Photo stepper Single processing AC, AP 17 53
AQ Wet station Single processing X 17 36
X PR strip Batch processing 19 19
AM Dry etch Single processing 18 18
AY Dry etch Single processing AM 17 35
BE Photo scanner Single processing E2 17 36
E2 E1 Dry etch Single processing 19 19
AT N Rapid thermal process Single processing 17 17
J2 J1 Wet station Single processing AT, K2, U, Y 17 89
K2 K1 CVD Single processing 19 19
U CVD Single processing AT, K2, Y 17 72
Y CVD Single processing 19 19
51
Appendix C Inter-release time and % of technologies for the mini fab simulation
Week
Inter-release
time (min)
Tech A% Tech B% Tech C % Week
Inter-release
time (min)
Tech A% Tech B% Tech C %
1~11 20 20% 20% 60% 56 17.5 20% 20% 60%
12 20 20% 30% 50% 57 17.5 20% 30% 50%
13 20 20% 40% 40% 58 17.5 20% 40% 40%
14 20 30% 20% 50% 59 17.5 30% 20% 50%
15 20 30% 30% 40% 60 17.5 30% 30% 40%
16 20 30% 40% 30% 61 17.5 30% 40% 30%
17 20 40% 20% 40% 62 17.5 40% 20% 40%
18 20 40% 30% 30% 63 17.5 40% 30% 30%
19 20 40% 40% 20% 64 17.5 40% 40% 20%
20 19.5 20% 20% 60% 65 17 20% 20% 60%
21 19.5 20% 30% 50% 66 17 20% 30% 50%
22 19.5 20% 40% 40% 67 17 20% 40% 40%
23 19.5 30% 20% 50% 68 17 30% 20% 50%
24 19.5 30% 30% 40% 69 17 30% 30% 40%
25 19.5 30% 40% 30% 70 17 30% 40% 30%
26 19.5 40% 20% 40% 71 17 40% 20% 40%
27 19.5 40% 30% 30% 72 17 40% 30% 30%
28 19.5 40% 40% 20% 73 17 40% 40% 20%
29 19 20% 20% 60% 74 16.5 20% 20% 60%
30 19 20% 30% 50% 75 16.5 20% 30% 50%
31 19 20% 40% 40% 76 16.5 20% 40% 40%
32 19 30% 20% 50% 77 16.5 30% 20% 50%
33 19 30% 30% 40% 78 16.5 30% 30% 40%
34 19 30% 40% 30% 79 16.5 30% 40% 30%
35 19 40% 20% 40% 80 16.5 40% 20% 40%
36 19 40% 30% 30% 81 16.5 40% 30% 30%
37 19 40% 40% 20% 82 16.5 40% 40% 20%
38 18.5 20% 20% 60% 83 16 20% 20% 60%
39 18.5 20% 30% 50% 84 16 20% 30% 50%
40 18.5 20% 40% 40% 85 16 20% 40% 40%
41 18.5 30% 20% 50% 86 16 30% 20% 50%
42 18.5 30% 30% 40% 87 16 30% 30% 40%
43 18.5 30% 40% 30% 88 16 30% 40% 30%
44 18.5 40% 20% 40% 89 16 40% 20% 40%
45 18.5 40% 30% 30% 90 16 40% 30% 30%
46 18.5 40% 40% 20% 91 16 40% 40% 20%
47 18 20% 20% 60% 92 15.5 20% 20% 60%
48 18 20% 30% 50% 93 15.5 20% 30% 50%
49 18 20% 40% 40% 94 15.5 20% 40% 40%
50 18 30% 20% 50% 95 15.5 30% 20% 50%
51 18 30% 30% 40% 96 15.5 30% 30% 40%
52 18 30% 40% 30% 97 15.5 30% 40% 30%
53 18 40% 20% 40% 98 15.5 40% 20% 40%
54 18 40% 30% 30% 99 15.5 40% 30% 30%
55 18 40% 40% 20% 100 15.5 40% 40% 20%
53
4547–4562.
Chen W. and Shih, J, 2006, “Comparison of support-vector machine and back propagation neural
networks in forecasting the six major Asian stock markets,” International Journal of
Electronic Finance, vol. 1, no. 1, pp. 49–67.
Chern, C. and Liu, Y., 2003, “Family-Based Scheduling Rules of a Sequence-Dependent Wafer
Fabrication System,” IEEE Transactions on Semiconductor Manufacturing, vol. 16, no. 1,
pp. 15–251.
Chien, C. F. and Chen, L. F., 2008, “Data mining to improve personnel selection and enhance 
human capital: A case study in high-technology industry,” Expert Systems with
Applications, vol. 34, no. 1, pp. 280–290.
Chou, Y. and Wu, C., 2002, “Economic analysis and optimization of machine portfolio in 
semiconductor manufacturing,” IEEE Transactions on Semiconductor Manufacturing, vol.
15, no. 4, pp. 447–453.
Chung, S. H., Huang, C. Y., and Lee, A. H., 2006, “Capacity allocation model for photolithography
workstation with the constraints of process window and machine dedication,” Production
Planning & Control, vol. 17, no. 7, pp. 678–688.
Cohen, M. A., Deshpande, V., and Wang, Y., 2004, “Managing Supply Chains with Differentiated
Service Requirements—Models and Application,” The Practice of Supply Chain
Management: Where Theory and Application Converge, pp. 175–196.
Connors, D., Feigin, G., and Yao, D., 1994, “Scheduling Semiconductor LinesUsing a Fluid
Network Model,” IEEE Transactions on Robotics and Automation, vol. 10, no. 2, pp.
88–98.
Connors, D. P., Feigin, G. E., and Yao, D. D. , 1996,“A queueing network model for semiconductor 
manufacturing,” IEEE Transactions on Semiconductor Manufacturing, vol. 9, no. 3, pp.
412–427.
Dabbas, R. M., Chen, H., Fowler, J. W., and Shunk, D., 2001, “A combined dispatching criteria 
approach to scheduling semiconductor manufacturing systems,” Computers & Industrial
Engineering, vol. 39, pp. 307–324.
Dabbas, R. M. and Fowler, J. W., 2003, “A New Scheduling Approach Using Combined
Dispatching Criteria in Wafer Fabs,” IEEE Transactions on Semiconductor Manufacturing,
vol. 16, no. 3, pp. 501–510.
Dance, D. and Jarvis, R., 1990,“Using Quantity Models Accelerate Learning Curve Progress,” Int’l 
Semiconductor Manufacturing Science Symposium, 21-23 May, pp. 21-23.
Duwayri, Z., Mollaghasemi, M., Nazzal, D., and Rabadi, G., 2006, “Scheduling setup changes at 
bottleneckworkstations in semiconductor manufacturing,” Production Planning & Control,
vol. 17, no. 7, pp. 717–727.
Ehteshami, B., Petrakian, R. G., and Shabe, P. M., 1992, “Trade-Offs in Cycle Time Management:
Hot Lots,” IEEE Transactions on Semiconductor Manufacturing, vol. 5, no. 2, pp.
101–106.
Fayyad, U., Piatesky-Shapiro, G., and Smyth, P., 1996, “The KDD process for extracting useful 
knowledge from volumes of data,” Communications of the ACM, vol. 39, no. 11, pp.
27–34.
Fowler, J. W., Phillips, D. T., and Hogg, G. L., 1992, “Real-Time Control of Multiproduct
Bulk-Service Semiconductor Manufacturing Processes,” IEEE Transactions on
Semiconductor Manufacturing, vol. 5, no. 2, pp. 158–163.
55
Transactions on Semiconductor Manufacturing, vol. 14, no. 4, pp. 395–405.
Hung, Y. and Chen, I., 1998, “A simulation study of dispatch rules for reducingflow times in
semiconductor wafer fabrication,” Production Planning & Control, vol. 9, no. 7, pp.
714–722.
Hung, Y. and Chen, I., 2000, “Dynamic operator assignment based on shifting machine loading,” 
International Journal of Production Research, vol. 38, no. 14, pp. 3403–3420.
Ignizio, J. P., 2004,“Optimal maintenance headcount allocation: an application of Chebyshev Goal
Programming,” International Journal of Production Research, vol. 42, no. 1, pp. 201–210.
Iwata, Y., Taji, K., and Tamura, H., 2003, “Multi-objective capacity planning for agile
semiconductor manufacturing,” Production Planning & Control, vol. 14, no. 3, pp.
244–254.
Jacobs, J. H., Etman, L. F. P., van Campen, E. J. J., and Rooda, J. E., 2003, “Characterization of 
operational time variability using efective process times,” IEEE Transactions on
Semiconductor Manufacturing, vol. 6, no. 3, pp. 511–520.
Jacobs, J. H., van Bakel, P. P., Etman, L. F. P., and Rooda, J. E., 2006, “Quantify variability of 
batching equipment using efective process times,” IEEE Transactions on Semiconductor
Manufacturing, vol. 19, no. 2, pp. 269–275.
Jalali-Heravi, M., Shahbazikhah, P, Zekavat, B., and Ardejani, M. S., 2007, “Principal Component 
Analysis-Ranking as a Variable Selection Method for the Simulation of 13C Nuclear
Magnetic Resonance Spectra of Xanthones Using Artificial Neural Networks,” QSAR &
Combinatorial Science, vol. 26, no. 6, pp. 764–772.
Kermanshahi, B., 1998, “Recurrent neural network for forecasting next 10 years loads of nine 
Japanese utilities,”Neurocomputing, vol. 23, no. 1–3, pp. 125–133.
Kim, S., Yea, S., and Kim, B., 2002, “Shift Scheduling for Stepper in the Semiconductor Wafer 
Fabrication Process,” IIE Transactions, vol. 34, pp. 167–177.
Kim, K., 2003, “Financial time series forecasting using support vector machines,” 
Neurocomputing,” vol. 55,no. 1–2, pp. 307–319.
Kim, B. and Park, K., 2005, “Modeling plasma etching process using a radial basis function 
network,” Microelectronic Engineering, vol. 77, no. 2, pp. 150–157.
Kimura, T., 1986, “A two-moment approximation for the mean waiting time in the GI/ G/S queue,” 
Management Science, vol. 32, no. 6, pp. 751–763.
Kirkos, E., Spathis, C., and Manolopoulos, Y., 2007, “Data Mining techniques for the detection of 
fraudulent financial statements,” Expert Systems with Applications, vol. 32, no. 4, pp.
995–1003.
Konarski, C., Peruffo, N., and Warren, R., 2001, “The Need for Speed: IBM’s Raw Process Time 
ReductionSuccess Means Faster Turnaround Time for Customers,” MicroNews, vol. 7, no.
4, pp. 8–10.
Kuo, C. J., Liu, C. M., and Chi, Liu, C. Y., 2008, “Standard WIP Determination and WIP Balance
Control with Time Constraints in Semiconductor Wafer Fabrication,” Journal of Quality,
vol. 15, no. 6, pp. 409–423.
Leachman, R. C., Kang, J., and Lin, V., 2001, “SLIM: Short Cycle Time and Low Inventory in 
Manufacturing at Samsung Electronics,” Interfaces, vol. 32, no. 1, pp. 61–77.
Lee, C. and Chen, C., 1997, “A Dispatching Scheme Involving Move Controland Weighted Due
Date for Wafer Foundries,” IEEE Transactions on Components, Packaging, and
57
without state-dependent setups,” Operations Research Letters, vol. 28, no.32, pp. 113–123.
Qi, C., Sivakumar, A. I., and Gershwin, S. B., 2008, “Impact of Production Control and System
Factors in Semiconductor Wafer Fabrication,” IEEE Transactions on Semiconductor
Manufacturing, vol. 21, no. 3, pp. 376–389.
Qiu, R. G., 2005, “Virtual Production Line Based WIP Control for Semiconductor Manufacturing 
Systems,” International Journal of Production Economics, vol. 95, no. 2, pp. 165–178.
Robinson, J. K., Fowler, J. W., and Bard, J. F., 1995, “The use of upstream and downstream 
information in scheduling semiconductor batch operations,” International Journal of
Production Research, vol. 33, no. 7, pp. 1849–1869.
Robinson, J. K. and Giglio, R., 1999,“Capacity planning for semiconductor wafer fabrication with 
time constraints between operations,” in Proceedings of the 1999 Winter Simulation
Conference, pp. 880–887.
Saito, K., 2007, “A RobustDispatching Algorithm for Autonomous Distributed Manufacturing of
Mixed VLSI Products,” IEEE Transactions on Semiconductor Manufacturing, vol. 20, no.
3, pp. 299–305.
Saraswat, K. C. et al., 1994, “Rapid Thermal Multiprocessing for a ProgrammableFactory for
Adaptable Manufacturing of IC’s,” IEEE Transactions on Semiconductor Manufacturing,
vol. 7, no. 2, pp. 159–175.
Scholl, W. and Domaschke, J., 2000, “Implementation of modeling and simulation in 
semiconductor wafer fabrication with time constraints between wet etch and furnace
operations,” IEEE Transactions on Semiconductor Manufacturing, vol. 13, no. 3, pp.
273–277.
Setiono, R. and Liu, H., 1997, “Neural-network feature selector,” IEEE Transactions on Neural
Networks, vol. 8, no. 3, pp. 654–662.
Shanthikumar, J. G., Ding S., and Zhang, M. T., 2007, “Queueing theory for semiconductor 
manufacturing systems: a survey and open problems,” IEEE Transactions on Automation
Science and Engineering, vol. 4, no. 4, pp. 513–522.
Shental, N., Hertz, T., Weinshall, D., and Pavel, M., 2002, “Adjustment learning and relevant 
component analysis,” Lecture Notes in Computer Science, vol. 2353, pp. 776–790.
Smith, K. A. and Gupta, J. N. D., 2000, “Neural networks in business: techniques and applications 
for the operations researcher,” Computers & Operations Research, vol. 27, no. 11, pp.
1023–1044.
Su, M.D. Quality Engineering, Chinese Society for Quality, Taipei (2004).
Sung, C. S. and Choung, Y. I., 1999, “A neural network approach for batching decisions in wafer 
fabrication,” International Journal of Production Research, vol. 37, no. 13, pp. 3101–3114.
Tu, Y. M. and Li, R. K., 1998, “Constraint Time Bufer Determination Model,” International
Journal of Production Research, vol. 36, no. 4, pp. 1091–1103
Tu, Y. M. and Liou, C., 2006, “Capacity determination model with time constraints and batch 
processing in semiconductor wafer fabrication,” Journal of Chinese Institute of Industrial
Engineers, vol. 23, no. 3, pp. 192–199.
Uzsoy, R. M., Lee, C., and Martin-vega, L. A., 1992, “A review of production planning and 
scheduling models in the semiconductor industry part I: system characteristics,
performance evaluation and production planning,” IIE Transactions, vol. 24, no. 4, pp.
47–60.
Wang, C. N. and Wang, C. H., 2007, “A simulated model for cycle time reduction by acquiring
59
Table 1.1 ITRS roadmap for wafer fabrication cycle time.
Year
Technology
node (nm)
Number of
mask layers
Raw
process
time per
mask layer
(day)
X-factor
Cycle time
per mask
layer (day)
Total cycle
time (day)
% of queue
time to
cycle time
2001 130 25 0.50 3.20 1.60 40.0 68.8%
2002 115 27 0.50 3.20 1.60 43.2 68.8%
2003 100 29 0.50 3.20 1.60 46.4 68.8%
2004 90 31 0.50 3.20 1.60 49.6 68.8%
2005 80 33 0.52 3.10 1.60 52.8 67.7%
2006 70 33 0.48 3.10 1.50 49.5 67.7%
2007 65 33 0.48 3.10 1.50 49.5 67.7%
2008 57 35 0.48 3.10 1.50 52.5 67.7%
2009 50 35 0.46 3.05 1.40 49.0 67.2%
2010 45 35 0.46 3.05 1.40 49.0 67.2%
Average growth % per
year
3.81% -0.95% -0.53% -1.47% -0.25% 2.28%
Note:
1. X-factor: cycle time per mask layer/raw process time per mask layer.
2. % of queue time to cycle time: (X-factor-1)/X-factor
61
Table 2.1 Summary of researches on reduction of mean and variance of cycle time in wafer
fabrication (continued)
Author(s) Year Focus or findings Category Method
Reduction
for cycle
time
variance
Wang, Wu,
and Qiao 2007
Apply the compound priority
dispatching rule
Lot
dispatching
Simulation ∨
Wu, Chiou,
and Chen 2008
Dispatching rule for tools with
tool-dedication and mask setup
Lot
dispatching
Simulation ∨
Glassey and
Resende 1988
Apply starvation avoidance policy to
control lot release
Lot release
control Simulation
Wein 1988 Apply workload regulating inputpolicy to control lot release
Lot release
control Simulation ∨
Glassey,
Shanthikumar,
and Seshadri
1996 Apply linear control rules for lotrelease
Lot release
control Simulation
Lin and Lee 2001
Determine the optimal standard WIP
of the fab so that the fixed-WP control
policy can be applied
Lot release
control
Queueing
model ∨
Qi, Sivakumar,
and Gershwin 2008
Apply WIPLOAD control policy for
lot release
Lot release
control Simulation ∨
Glassey and
Weng 1991
Using information on future arrival of
lots for determining when to start a
batch for a single tool
Batching
policy Simulation
Fowler,
Phillips, and
Hogg
1992
Using rolling forecast on future
arrival of lots for determining when to
start a batch
Batching
policy Simulation
Weng and
Leachman 1993
Apply the minimum cost rate heuristic
for determining when to start a batch
Batching
policy Simulation ∨
Robinson,
Fowler, and
Bard
1995
Determine optimal batch size using
information of upstream and
downstream tools
Batching
policy Simulation
Sung and
Choung, 1999 Determine optimal batch size
Batching
policy
Neural
networks
Fowler, Hogg,
and Phillips 2000
Batching policy for control of
multiproduct bulk server on diffusion
and oxidation processes
Batching
policy Simulation
Fowler et al. 2002 Determine optimal batch size Batchingpolicy
Queueing
model, GA
Phojanamong-
kolkij, Fowler,
and Cochran
2002 Determine minimal batch size Batchingpolicy
Queueing
model, GA
Saraswat et al. 1994 Replace batching furnace with rapidthermal multiprocessing tools
Productivity
improvement Simulation
Konarski,
Peruffo, and
Warren
2001
Reduce raw process time by process
step elimination, tool configuration
modification, and replacing furnace
operations by rapid thermal
processing tools
Productivity
improvement Simulation
Akçali,
Nemoto, and
Uzsoy
2001
Avoid infrequent and long down
times and reduce tool dedication for
photolithography area
Productivity
improvement Simulation ∨
63
oik Mean number of operators per hour for tool set i in week k
Doik Standard deviation of number of operators per hour for tool set i in week k
rik Mean number of recipes for tool set i in week k
wik Mean rework rate for tool set i in week k
hik Mean percentage of hold WIP for tool set i in week k
Table 3.2 Input factors for batch processing tools
Factor Description
m0ik Mean nominal number of tools for tool set i in week k
u ik
Mean percentage of usable tools for individual lots which arrived at the tool set i in
week k
λik Mean arrival rate per hour for all lots for tool set i in week k
Dλik Standard deviation of arrival rate per hour for tool set i in week k
rhik Mean percentage of hot lots (super hot lot & rush hot lot) for tool set i in week k
rsik Mean percentage of super hot lots for tool set i in week k
v ik Mean available rate for tool set i in week k
Dvik Standard deviation of available rate per hour for tool set i in week k
t0ik
Mean process time for full batch of with same recipe as previous lot for tool set i in
week k
Dt0ik
Standard deviation of process time for full batch of with same recipe as the previous
batch for tool set i in week k
bik Mean batch size for tool set i in week k
Dbjk Standard deviation of batch size for tool set i in week k
oik Mean number of operators per hour for tool set i in week k
Doik Standard deviation of number of operators per hour for tool set i in week k
rik Mean number of recipes for tool set i in week k
wik Mean rework rate for tool set i in week k
hik Mean percentage of hold WIP for tool set i in week k
Table 4.1 Summary of tool sets in the fab
Tool type Without timeconstraint
With time
constraint Subtotal
Single processing 40 24 64
Batch processing 11 12 22
Subtotal 51 36 87
Table 4.2 Range of parameter for experiments
Technique Range of parameters
BPNN
Learning algorithm: GD, CG, LM
# of hidden layer=1~2
# of hidden neurons= 2~8, step =1
Learning rate (for GD)=0.1~0.9, step = 0.2
Momentum (for GD)=0.1~0.9, step = 0.2
RNN Network: Jordan, ElmanLearning algorithm: GD, CG, LM
65
RBFNN
Learning algorithm for output layer: CG
# of Gaussian=50
Learning algorithm for output layer: CG
# of Gaussian=50
SVR
Kernel function: RBF
Epsilon=0.006
Gamma = 1.5
Kernel function: RBF
Epsilon=0.006
Gamma = 1.0
Table 4.6 Comparison of NMSE and MAPE for mean cycle time
Training Testing
Experiment Item
BPNN RNN RBF SVR BPNN RNN RBF SVR
NMSE 0.00069 0.00033 0.00557 0.00100 0.00243 0.00603 0.01162 0.00380
1
MAPE 1.98% 1.50% 7.23% 2.28% 2.88% 4.04% 9.01% 5.20%
NMSE 0.00058 0.00011 0.00598 0.00147 0.00274 0.01341 0.01275 0.00557
2
MAPE 1.67% 1.12% 8.60% 2.78% 2.41% 4.22% 9.88% 4.66%
NMSE 0.00050 0.00023 0.00810 0.00104 0.00202 0.00285 0.01019 0.00395
3
MAPE 1.44% 1.36% 9.27% 2.32% 2.04% 2.43% 9.72% 4.98%
NMSE 0.00055 0.00099 0.00863 0.00139 0.00227 0.00224 0.01608 0.00529
4
MAPE 1.53% 2.51% 8.29% 2.70% 2.68% 4.28% 10.56% 6.54%
NMSE 0.00048 0.00022 0.00672 0.00094 0.00169 0.00269 0.00950 0.00355
5
MAPE 1.64% 1.44% 8.15% 2.20% 2.18% 2.80% 10.65% 6.46%
NMSE 0.00056 0.00038 0.00700 0.00117 0.00223 0.00544 0.01203 0.00443
Average
MAPE 1.65% 1.59% 8.31% 2.46% 2.44% 3.55% 9.96% 5.57%
Table 4.7 Comparison of NMSE and MAPE for standard deviation of cycle time
Training Testing
Experiment Item
BPNN RNN RBF SVR BPNN RNN RBF SVR
NMSE 0.00181 0.00126 0.00648 0.00145 0.00275 0.00425 0.00974 0.00551
1
MAPE 5.80% 5.13% 10.51% 5.38% 6.76% 7.94% 12.16% 10.78%
NMSE 0.00166 0.00104 0.00539 0.00198 0.00488 0.00813 0.00971 0.00752
2
MAPE 6.10% 4.78% 9.99% 5.92% 9.07% 9.31% 12.90% 9.56%
NMSE 0.00181 0.00173 0.00626 0.00147 0.00317 0.00360 0.00965 0.00557
3
MAPE 5.61% 5.53% 10.93% 5.40% 7.67% 7.75% 11.57% 9.65%
NMSE 0.00184 0.00136 0.00510 0.00155 0.00260 0.00301 0.01000 0.00589
4
MAPE 6.02% 5.13% 9.99% 5.48% 6.60% 6.42% 12.78% 10.85%
NMSE 0.00148 0.00124 0.00567 0.00174 0.00439 0.00421 0.00751 0.00661
5
MAPE 5.68% 5.34% 9.72% 5.68% 8.38% 8.06% 12.76% 11.62%
NMSE 0.00172 0.00133 0.00578 0.00164 0.00356 0.00464 0.00932 0.00622
Average
MAPE 5.84% 5.18% 10.23% 5.57% 7.70% 7.90% 12.44% 10.49%
Table 4.8 Comparison of prediction accuracy for mean cycle time
Tool
utilization
% of samples BPNN
Heavy-traffic
queueing model
Moderate-traffic
queueing model
≧90% 9% 97.44% 94.67% 85.54%
80%~90% 15% 97.58% 91.67% 88.99%
70%~80% 22% 97.23% 89.84% 95.37%
60%~70% 18% 96.84% 81.96% 87.77%
50%~60% 20% 98.26% 70.63% 72.95%
67
h 100.0% 89.4% 88.3% 58.5%
rw 53.3% 45.4% 48.1% 9.3%
tw 65.0% 44.3% 34.2% 30.4%
Average 85.9% 71.0% 71.5% 63.9%
Table 4.11 Accuracy for cycle time prediction by BPNN
With original inputs With optimal inputs
Lot priority
Mean cycle time STDEV of cycletime Mean cycle time
STDEV of cycle
time
Total lots 88.54% 92.37% 88.54%
Regular lots 88.65% 87.11% 92.12% 89.76%
Hot lots 89.83% 82.88% 94.51% 86.14%
Table 4.12 Comparison of prediction accuracy for mean cycle time of total lots for single
processing tool sets without waiting time constraint
Tool utilization % of samples BPNN
Heavy-traffic
queueing model
Moderate-traffic
queueing model
≧90% 13% 92.46% 88.52% 77.84%
80%~90% 28% 91.23% 83.78% 87.33%
70%~80% 31% 92.21% 77.90% 83.17%
60%~70% 17% 91.30% 71.76% 72.20%
50%~60% 6% 92.42% 66.07% 66.92%
≦50% 3% 92.06% 58.02% 60.93%
Average: 91.82% 78.52% 79.97%
Table 4.13 Common relationship between input variables and cycle time
% of tool sets conform to the relationship
Input variable
Common relationship
with mean and
STDEV of cycle time Mean cycle time STDEV of cycle time
m0 － 94% 85%
u － 92% 87%
λ ＋ 95% 93%
Dλ ＋ 94% 88%
rh ＋ 90% 82%
rs ＋ 91% 80%
69
Variable Base Merge recipe Binto A
Merge recipe C
into A
t0 1.2328 1.3438 1.3624
Dt0 0.1082 0.1009 0.0943
r 8 7 7
Mean cycle time 2.421 2.361 2.444
Table 4.16 Expected reduction of cycle time per 10% improvement on each input variable
Variable
Reduction of Mean
cycle time for tool
set E2
Reduction of
STDEV of cycle
time for tool set E2
Reduction of Mean
cycle time for tool
set BE
Reduction of
STDEV of cycle
time for tool set
BE
m0_E2 1.21 1.26 1.36 6.52
u_E2 0.41 0.53 1.50 2.75
λ_E2 1.43 2.61 7.44
Dλ_E2 0.85 1.51 1.69 7.23
sh_E2 0.74 3.36
rh_E2 0.27 0.51 0.41 1.20
v_E2 1.38 6.38
Dv_E2 0.67 0.81 1.42 3.85
t0_E2 1.15 1.79 8.34
Dt0_E2 0.94 1.25 2.35 2.89
l_E2 0.81 1.04 2.11 1.66
Dl_E2
o_E2 0.89 1.55 0.58 0.73
D0_E2 0.64 0.68 0.96 3.40
r_E2 1.04
w_E2 0.78 1.05 1.19
h_E2 0.93 0.47 0.52 2.19
rw_E2 0.17 0.17 0.76 0.57
tw_E2 0.43 0.58 2.55 1.12
Table 4.17 Variable for evaluating WIP of different methods for determining number of tools
Input variable
Method for
allocation
Number of tools Arrival rate Other variable
Actual allocation Actual
Proposed allocation Proposed
Optimal allocation Optimal
Actual value in week
i Actual in week i
71
Reducible WIP_ideal 9712 10661 15256 13208 16920 13145 13799 20144 19142 15106
Reducible WIP%_proposed 7.6% 6.5% 8.4% 8.4% 11.7% 8.7% 8.2% 14.9% 14.9% 12.3%
Reducible WIP%_ideal 10.2% 8.8% 10.8% 10.5% 14.1% 11.1% 11.1% 17.9% 17.6% 15.0%
Reducible WIP_proposed 48 18 211 654 2643 109 198 1648 2248 1458
A
Reducible WIP_ideal 110 129 281 735 2745 248 351 1876 2376 1458
Reducible WIP_proposed 41 0 79 42 41 0 48 48 74 29
B
Reducible WIP_ideal 50 36 98 42 55 0 55 51 83 50
Reducible WIP_proposed 730 987 3706 1181 2665 1603 1929 3411 1771 1974
C
Reducible WIP_ideal 817 1108 4304 1394 2813 1738 2200 3730 1771 2115
Reducible WIP_proposed 547 93 418 448 2689 253 231 0 1561 0
D
Reducible WIP_ideal 547 391 418 512 2863 253 270 58 1605 126
Reducible WIP_proposed 454 241 332 346 803 226 0 1674 900 0
E
Reducible WIP_ideal 553 295 331 346 851 556 242 1674 994 91
Reducible WIP_proposed 436 1337 1458 2135 515 1745 1119 5586 4503 2701
F
Reducible WIP_ideal 512 1496 1584 2264 594 1745 1233 5642 4583 2818
Reducible WIP_proposed 141 91 130 154 194 230 225 198 48 79
G
Reducible WIP_ideal 151 100 130 173 218 241 241 199 54 87
Reducible WIP_proposed 326 0 533 212 218 175 0 111 0 0
H
Reducible WIP_ideal 383 77 592 287 218 253 91 111 85 80
Reducible WIP_proposed 575 1011 705 1357 1086 166 886 248 1114 0
I
Reducible WIP_ideal 644 1101 783 1395 1085 316 1065 537 1243 214
Reducible WIP_proposed 1448 1665 1776 1483 1750 1835 1710 1467 0 1653
J, K
Reducible WIP_ideal 1579 1820 1929 1649 1750 1974 1903 1649 863 1863
Reducible WIP_proposed 2487 2457 2467 2547 1335 3954 3877 2426 4032 4544L, M,
N, O Reducible WIP_ideal 4366 4108 4805 4412 3729 5822 6147 4617 5484 6206
Table 4.20 Comparison of cycle time of different approaches for standard WIP determination
Mean cycle time per mask layer
(day)
STDEV of cycle time per mask layer
(day)
Bottleneck
utilization Historical
approach
Queuing-
model
approach
Proposed
approach
Historical
approach
Queuing-
model
approach
Proposed
approach
99.3% 2.217 2.152 2.100 0.494 0.463 0.406
96.3% 1.898 1.841 1.758 0.465 0.437 0.389
93.2% 1.667 1.581 1.498 0.429 0.401 0.352
90.1% 1.547 1.463 1.365 0.414 0.388 0.342
85.6% 1.465 1.375 1.233 0.387 0.363 0.319
Table 4.21 Comparison of benefit for cycle time of different approaches for standard WIP
determination
Bottleneck
utilization
Reduced % for mean cycle time
comparing to historical approach
Reduced % for STDEV of cycle time
comparing to historical approach
73
Percentage of super hot lot: 3%
Fab utilization 90% (λ=170) 95% (λ=187) 99% (λ=194)
Hot lot% 4% 8% 12% 16% 20% 24% 4% 8% 12% 16% 20% 24% 4% 8% 12% 16% 20% 24%
Mean cycle
time of regular
lot
6.0 7.1 9.1 11.2 12.2 13.4 6.2 8.3 9.5 12.9 15.7 15.7 7.0 8.5 10.9 13.4 17.4 17.4
STDEV of
cycle time of
regular lot
9.6 15.0 26.3 27.9 48.1 55.8 9.8 16.1 34.0 47.7 54.8 54.8 9.7 18.5 32.3 52.9 55.9 55.9
Mean cycle
time of hot lot
3.5 4.2 5.3 5.5 5.7 6.6 3.5 4.2 5.3 5.5 5.7 6.6 3.5 4.2 5.3 5.5 5.7 6.6
STDEV of
cycle time of
hot lot
5.1 7.5 10.0 13.7 17.3 22.1 5.1 7.5 10.0 13.7 17.3 22.1 5.1 7.5 10.0 13.7 17.3 22.1
Table 4.24 Hot lots’impact on cycle time of the fab in June, 2008 (unit: day/mask layer)
Percentage of super hot lot: 1%
Fab utilization 90% 95% 99%
Hot lot% 4% 8% 12% 16% 20% 24% 4% 8% 12% 16% 20% 24% 4% 8% 12% 16% 20% 24%
Mean cycle
time of
regular lot
2.05 2.15 2.23 2.35 2.49 2.60 2.15 2.22 2.32 2.46 2.60 2.71 2.40 2.53 2.60 2.74 2.89 3.05
STDEV of
cycle time of
regular lot
0.39 0.40 0.42 0.44 0.47 0.50 0.41 0.42 0.44 0.46 0.49 0.52 0.45 0.47 0.50 0.51 0.55 0.57
Lead time of
regular lot,
s=0.95
2.69 2.81 2.92 3.08 3.25 3.42 2.82 2.91 3.04 3.21 3.40 3.56 3.15 3.30 3.41 3.58 3.79 4.00
Mean cycle
time of hot lot 1.15 1.14 1.17 1.22 1.30 1.37 1.19 1.19 1.21 1.28 1.34 1.42 1.34 1.33 1.36 1.43 1.50 1.61
STDEV of
cycle time of
hot lot
0.21 0.21 0.22 0.23 0.24 0.25 0.22 0.22 0.23 0.24 0.25 0.27 0.25 0.25 0.25 0.27 0.28 0.30
Lead time of
hot lot, s=0.95 1.50 1.49 1.53 1.59 1.69 1.79 1.56 1.56 1.58 1.68 1.75 1.85 1.75 1.75 1.78 1.87 1.96 2.10
Percentage of super hot lot: 2%
Fab utilization 90% 95% 99%
Hot lot% 4% 8% 12% 16% 20% 24% 4% 8% 12% 16% 20% 24% 4% 8% 12% 16% 20% 24%
Mean cycle
time of
regular lot
2.12 2.20 2.33 2.44 2.57 2.70 2.21 2.34 2.43 2.52 2.67 2.84 2.47 2.62 2.70 2.86 3.01 3.17
STDEV of
cycle time of
regular lot
0.40 0.41 0.44 0.46 0.49 0.51 0.42 0.43 0.45 0.48 0.50 0.54 0.47 0.49 0.51 0.53 0.57 0.60
Lead time of
regular lot,
s=0.95
2.78 2.88 3.05 3.20 3.37 3.54 2.89 3.05 3.17 3.31 3.50 3.73 3.25 3.43 3.54 3.74 3.95 4.15
Mean cycle
time of hot lot 1.17 1.20 1.20 1.26 1.34 1.40 1.23 1.23 1.26 1.31 1.39 1.47 1.38 1.39 1.42 1.48 1.57 1.64
STDEV of
cycle time of
hot lot
0.22 0.22 0.22 0.24 0.25 0.26 0.23 0.23 0.24 0.25 0.26 0.27 0.26 0.26 0.26 0.28 0.29 0.31
Lead time of
hot lot, s=0.95 1.54 1.57 1.57 1.65 1.74 1.83 1.61 1.61 1.65 1.71 1.82 1.92 1.81 1.82 1.85 1.94 2.05 2.15
Percentage of super hot lot: 3%
Fab utilization 90% 95% 99%
Hot lot% 4% 8% 12% 16% 20% 24% 4% 8% 12% 16% 20% 24% 4% 8% 12% 16% 20% 24%
Mean cycle
time of
regular lot
2.23 2.32 2.45 2.55 2.72 2.83 2.32 2.45 2.53 2.67 2.82 2.98 2.63 2.74 2.83 2.95 3.14 3.34
STDEV of
cycle time of
regular lot
0.42 0.44 0.46 0.48 0.50 0.53 0.44 0.46 0.48 0.50 0.53 0.56 0.50 0.51 0.53 0.56 0.59 0.62
75
hot lot
Lead time of
hot lot, s=0.95 1.40 1.42 1.43 1.50 1.59 1.68 1.46 1.47 1.50 1.56 1.66 1.75 1.65 1.65 1.68 1.77 1.85 1.97
Percentage of super hot lot: 3%
Fab utilization 90% 95% 99%
Hot lot% 4% 8% 12% 16% 20% 24% 4% 8% 12% 16% 20% 24% 4% 8% 12% 16% 20% 24%
Mean cycle
time of
regular lot
2.03 2.11 2.22 2.33 2.46 2.59 2.12 2.21 2.31 2.41 2.56 2.72 2.38 2.50 2.57 2.70 2.88 3.03
STDEV of
cycle time of
regular lot
0.38 0.40 0.42 0.44 0.46 0.49 0.40 0.42 0.43 0.46 0.48 0.51 0.45 0.47 0.48 0.51 0.54 0.57
Lead time of
regular lot,
s=0.95
2.65 2.77 2.91 3.05 3.22 3.39 2.78 2.90 3.02 3.17 3.35 3.56 3.12 3.26 3.36 3.54 3.76 3.97
Mean cycle
time of hot lot 1.13 1.14 1.15 1.21 1.28 1.34 1.17 1.18 1.20 1.25 1.33 1.40 1.33 1.32 1.35 1.42 1.48 1.58
STDEV of
cycle time of
hot lot
0.21 0.21 0.22 0.23 0.24 0.25 0.22 0.22 0.23 0.24 0.25 0.27 0.25 0.25 0.25 0.27 0.28 0.30
Lead time of
hot lot, s=0.95 1.48 1.49 1.51 1.58 1.67 1.76 1.53 1.54 1.58 1.64 1.74 1.84 1.74 1.73 1.77 1.86 1.94 2.07
Table 4.27 Maximal percentage and lead time of hot lot under different fab utilization and
percentage of super hot lot in Sep, 2008
Maximal percentage of hot lot Expected lead time per mask layer ofhot lot (day)
Fab uti.
rs 90% 95% 99% 90% 95% 99%
1% 16.2% 15.7% 14.3% 1.45 1.51 1.66
2% 13.1% 12.8% 12.0% 1.44 1.51 1.68
3% 8.9% 8.0% 0.2% 1.49 1.54 ----
Table 4.28 Optimal experimental factor combination
F1 F2 F3 F4 F5 F6
L1 14.1
9
9.97 13.0
2
11.8
6
11.1
7
10.7
7
L2 10.5
3
13.2
5
12.2
1
11.7
2
12.0
3
10.9
0
L3 10.0
5
11.5
5
9.55 11.0
9
11.5
7
13.1
0
Hidden node is L1, learning speed is L2,
number of iterations is L1, and time shifts
are L1, L2 and L3 respectively.
Table 4.29: RMSE in terms of optimal experimental factor assignment
Process 1 Process 2
Test
group
Actual Model Error Actual Model Error
1 0.170 0.614 0.444 0.656 0.104 -0.552
77
CT of
PROD -0.0062 Worst
QTY of
SHL 0.0392 Best
QTY of HL 0.0068 Worst
QTY of
PROD 0.0146 Moderate
Table 4.33 D0 Improvement Rate Comparison in Process 2 (the first 7 months)
Variable D
improvement
rate
Priority
comparison
Age -0.0559 No prioritycomparison
CT of SHL -0.0423 Moderate
CT of HL -0.0644 Worst
CT of
PROD -0.0345 Best
QTY of
SHL 0.75 Best
QTY of HL 0.0726 Moderate
QTY of
PROD 0.024 Worst
79
Tool set A
Tool set B
Tool set C
50% lots: tw=4 hours
50% lots: tw=8 hours
50% lots: tw=8 hours
30% lots: tw=12 hours
20% lots: without waiting time constraint
Figure 3.2 The tool sets with waiting time constraints
Mean utilization (?)
Factors of queueing models
Mean number of tools
(m)
Mean process times (t)
CV of inter-arrival times
(Ca)
CV of effective process
times (Ce)
Factors proposed by this study
Mean arrival rate (?)
Mean lot size (l)/
Mean batch size (b)
Mean number of tools (m)
Mean process times for full
lot/batch size (t0)
Mean available rate (v)
Mean percentage of usable
tools (u)
Mean available rate (v)
Mean batch size (b)
Mean number of recipes
(r)
STDEV of process times for
full lot/batch size (Dt0)
Mean number of recipes (r)
STDEV of lot size (Dl)/
STDEV of batch size (Db)
STDEV of available rate (Dv)
Mean number of operators (o)
STDEV of number of
operators (Do)
STDEV of arrival rate (D ?)
Mean percentage of super
hot lots (rs)
Mean percentage of hot lots
(rh)
Mean ratio of lots with
waiting time constraint (rw)
Mean waiting time limit for
lots with waiting time
constraint (tw)
Mean percentage of hold
WIP (h)
Practical
constraints
Mean rework rate (w)
Figure 3.3 Deriving the input factors for predicting mean and standard deviation of cycle times
81
# of Iteration
N
M
S
E
--- Training
--- Testing
Figure 4.3 NMSE of arrival rate prediction for tool set L2
y = 0.332x + 3.3743
R?= 0.9605
0
10
20
30
40
50
60
70
80
0 50 100 150 200 250
O
pt
im
al
nu
m
be
ro
fh
id
de
n
ne
ur
on
s
Number of inputs
Figure 4.4 Optimal number of hidden neurons vs. number of inputs
83
0
10
20
30
40
50
60
70
80
90
100
m0 u ? D? rs rh v Dv t0 Dt0 b Db o D0 r w h rw tw
Im
po
rt
an
ce
Input variable
Mean cycle time
STDEV of cycle time
Figure 4.7 Importance of individual variables for regular lot of batch processing tool
0
10
20
30
40
50
60
70
80
90
100
m0 u ? D? rs rh v Dv t0 Dt0 l Dl o D0 r w h rw tw
Im
po
rt
an
ce
Input variable
Mean cycle time
STDEV of cycle time
Figure 4.8 Importance of individual variables for hot lot of single processing tool
85
8.0
8.5
9.0
9.5
10.0
10.5
11.0
11.5
12.0
12.5
23.3
23.5
23.6
23.8
23.9
24.1
24.2
24.4
24.5
24.7
5.6 5.2 4.9 4.5 4.2 3.8 3.5 3.1 2.8 2.5
C
yc
le
tim
e
(h
ou
r)
l
Dl
Actual
Optimal
Figure 4.12 Relationship between cycle time and combination of mean lot size and standard
deviation of lot size
0
1
2
3
4
5
6
7
7 9 11 13 15 17 19 21 23 1 3 5
N
um
be
ro
fo
pe
ra
to
r
Hour
Before
0
1
2
3
4
5
6
7
7 9 11 13 15 17 19 21 23 1 3 5
N
um
be
ro
fo
pe
ra
to
r
Hour
After
Figure 4.13 Balance manpower among hours
87
0
200
400
600
800
1000
1200
1400
1600
1800
2000
2200
11 10 9 8 7 6 5
9 10 11 12 13 14 15
W
IP
(p
cs
)
Tool number allocation
WIP of A1
WIP of A2
Total WIP
A1
A2
Proposed
allocation
Figure 4.16 To obtain the proposed tool allocation
0
200
400
600
800
1000
1200
1400
1600
1800
2000
2200
11 10 9 8 7 6 5
9 10 11 12 13 14 15
W
IP
(p
cs
)
Tool number allocation
WIP of A1
WIP of A2
Total WIP
A1
A2
Actual in
week i
Ideal in
week i
Actual in
week i-1
Proposed
in week i
Figure 4.17 Percentage for reducible WIP under different fab utilization levels
89
y = 0.1295x + 0.0357
R?= 0.9023
0.0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0 1 2 3 4 5 6
S
TD
E
V
of
fa
b
cy
cl
e
tim
e
pe
r
m
as
k
la
ye
r
Weighted sum of STDEV of cycle time (–5 weeks)
(a) Regular lots
y = 0.1362x + 0.0377
R?= 0.8776
0.00
0.05
0.10
0.15
0.20
0.25
0.30
0.35
0 0.5 1 1.5 2 2.5
S
TD
E
V
of
fa
b
cy
cl
e
tim
e
pe
r
m
as
k
la
ye
r
Weighted sum of STDEV of cycle time (–2 weeks)
(b) Hot lots
Figure 4.21 Relationship between modeled and actual STDEV of fab cycle time
91
2.1
2.3
2.5
2.7
2.9
3.1
3.3
3.5
3.7
3.9
4.1
4.3
4.5
3% 5% 7% 9% 11% 13% 15% 17% 19% 21% 23% 25%
Le
ad
tim
e
pe
r
m
as
k
la
ye
r
(d
ay
)
Percentage of hot lots
rs=1%
rs=2%
rs=3%
(a) Fab utilization = 90%
2.1
2.3
2.5
2.7
2.9
3.1
3.3
3.5
3.7
3.9
4.1
4.3
4.5
3% 5% 7% 9% 11% 13% 15% 17% 19% 21% 23% 25%
Le
ad
tim
e
pe
r
m
as
k
la
ye
r
(d
ay
)
Percentage of hot lots
rs=1%
rs=2%
rs=3%
(b) Fab utilization = 95%
2.1
2.3
2.5
2.7
2.9
3.1
3.3
3.5
3.7
3.9
4.1
4.3
4.5
3% 5% 7% 9% 11% 13% 15% 17% 19% 21% 23% 25%
Le
ad
tim
e
pe
r
m
as
k
la
ye
r
(d
ay
)
Percentage of hot lots
rs=1%
rs=2%
rs=3%
(c) Fab utilization = 99%
Figure 4.23 Impact of hot lot on fab cycle time under different fab utilization in September, 2008
-1
-0.5
0
0.5
10 13
.2
16
.4
19
.6
22
.8 26 29
.2
32
.4
35
.6
38
.8 42
AGE
D
0
im
pr
ov
em
en
t
Figure 4.24 Sensitivity Analysis of Production Cycle versus D0 Improvement Rate
93
PUBLISHING PAPER
Journal of Quality Vol. 15, No. 6 (2008), 409-423.
Standard WIP Determination and WIP Balance Control
with Time Constraints in Semiconductor Wafer Fabrication
Chung-Jen Kuo1* Chih-Ming Liu2 Chih-Yang Chi3
1,2,3 Department of Industrial Engineering and Engineering Management, National Tsing Hua University, Taiwan
(Received 03/2008; Revised 08/2008; Accepted 09/2008)
Abstract
For a semiconductor wafer fabrication factory (fab), how to determine the standard Work-In-Process (WIP)
levels is a critical decision that influences the effectiveness of WIP balance control for achieving the desired
throughput with a shorter production cycle time. This study proposes a WIP determination model that takes time
constraints into account. For the bottleneck workstation, a standard WIP that assures the desired throughput of the
fab is determined by using backpropagation neural networks (BPNN). A decision tree model is applied to identify
the critical factors that influence the WIP of the bottleneck, and then the BPNN is applied to determine the total
WIP level of the fab needed to sustain the standard WIP of the bottleneck. The standard WIP of each
non-bottleneck workstation is determined by applying a queuing model. This study also proposes a hybrid
dispatching rule to control the WIP balance, as well as minimize production cycle time deviation. The simulation
results confirm that the proposed WIP determination model can help decision-makers determine suitable WIP
levels that can enable shorter production cycle times and smaller production cycle time deviations. Furthermore,
the results also demonstrate that the proposed hybrid dispatching rule can improve the quality of dispatching
decisions by further improving the production cycle time deviation.
Keywords: standard WIP, WIP balance, production cycle time, time constraint, backpropagation neural network, decision
tree, queuing model
95
necessary. For the sole purpose of WIP balance, in general there will be many lots with the same
priority in the queue of a workstation. Hence there will be room for further reducing the cycle
time deviation by adding a second priority layer to the dispatching rule, in addition to the WIP
balance priority. The second purpose of this paper is to propose a hybrid dispatching rule to
sustain the WIP balance in a fab and further reduce the cycle time deviation.
This paper is organized as follows. Following this introduction, this paper presents a
literature review of models for determining standard WIP levels in a semiconductor fabrication
line and related methods for WIP balance control. Section 3 describes the proposed standard WIP
determination model and dispatching rule. Section 4 illustrates numerical examples for the WIP
determination model and presents the results of simulation experiments. The final section
summarizes the conclusions.
2. LITERATURE REVIEW
2.1 Standard WIP determination
Simulations have frequently been used to estimate WIP levels. Most of these studies have
focused on the determination of the total WIP level in a fab for application to a fixed-WIP policy
(Wein, 1988; Miller, 1990; Bonvik et al., 1997). Both Pai (2004) and Chiang et al. (2008) used
simulations to derive the total WIP level for a back-end manufacturing operation and the WIP
profile of each workstation, and these WIP profiles are used for WIP balance control. Though in
practice, simulation is frequently used to determine a suitable WIP level, the construction and
implementation of a simulation requires significant effort and lengthy computer time (Connors et
al., 1996). Furthermore, since the construction of a simulation model is based on a specific
system, it cannot serve as a generic solution (Tu and Li, 1998; Lin and Lee, 2001). In general,
there are nearly one hundred workstations in a typical fab, making it almost impossible to
determine the standard WIP for each workstation by simulation. Several previous studies have
used queuing models to estimate the performance of a fab such as WIP levels and cycle times.
Queuing model can answer questions quickly under some conditions and ignore certain details
(Burman et al., 1986; Connors et al., 1996; Lin and Lee, 2001). Burman et al. (1986) developed a
queuing network model to estimate the WIP level and cycle time for a semiconductor
manufacturing line. They found that the estimated WIP level of the queuing model deviated from
that of the simulation model by 7-20%. Chen et al. (1988) constructed a simple queuing network
model to predict the throughput and cycle time of a fab. The values predicted by their model were
found to be within an error of 10% compared to those actually observed. Connors et al. (1996)
developed an open queuing network model to estimate the cycle time of the different tool types
found in semiconductor wafer fabrication. Lin and Lee (2001) applied a queuing model to
determine the total WIP level so that a fixed-WIP control policy could be applied. Lee and Kim
(2002) used a queuing model to determine the proper WIP level of each layer. The most visible
problems with such queuing models are the restrictive assumptions upon which they are based
(Uzsoy and Martin-vega, 1992), and few real-world systems conform to the requisite limitations
97
average WIP profiles. Leachman et al. (2001) suggested a balance index to express the difference
ratio of the actual WIP to the target WIP for a downstream step. The lower the balance index
value, the more urgent the step is. Lee and Kim (2002) proposed a balance ratio to evaluate the
WIP balance status. Both the balance index and balance ratio represent the difference between the
actual WIP and the target WIP, divided by the target WIP; hence there will seldom be wafer lots
with the same priority. Chiang et al. (2008) proposed a hybrid dispatching rule with priorities that
combine the WIP deviation and the critical ratio (the ratio between the remaining time to the
customer’s due date and work time remaining to complete the product). However, the trade-off
between the weight of the WIP deviation and the weight of the critical ratio must be considered
by production managers.
The MIVS rule proposed by Li et al. (1996) is relatively simple and has been widely adopted
in the semiconductor manufacturing industry to sustain the WIP balance of a fab. Therefore this
study adopted MIVS as a first-layer dispatching rule for pursuing the WIP balance of a fab. Since
MIVS has only four priorities, and there will be many lots with the same priority in the queue of a
workstation, there will be room for further reducing the deviation of cycle time by adding a
second-layer dispatching rule. This study incorporated the X-factor rule into the MIVS to
investigate its benefit for cycle time deviation.
3. STANDARD WIP DETERMINATION MODEL AND HYBRID
DISPATCHING RULE
When a fab is not fully loaded, the release rate for wafer lots determines the throughput for
the entire fab. When a fab is fully loaded, the throughput of the bottleneck workstation
determines the throughput for the entire wafer. Hence the critical WIP level for the bottleneck
workstation must be determined first. Then the required total WIP level for the fab can be derived
from the relationship between the botleneck’s WIP and the fab’s WIP.
Since the WIP level of a workstation with a time constraint must conform to the defined time
widow, the method for determining the standard WIP for this kind of workstations must be
different from that used for regular non-bottleneck workstations that are not restricted by time
constraints. Finally the remaining standard WIP levels for the fab, excluding the standard WIP of
the bottleneck and those of specific workstations with time constraints, are allocated to the
regular non-bottleneck workstations by applying a queuing model.
The following notations are used in this paper:
99
Assuming that the WIP of the bottleneck is normally distributed with the standard deviation
Ld, the required probability for achieving the critical WIP is Pb, and z1-Pb is the minimal z value
correspondent with the required Pb, the standard WIP (Ls) for the bottleneck workstation should
be computed as equation (1). If the fab is not fully loaded, the standard WIP of the bottleneck
workstation is determined by the same methods for non-bottleneck workstations, as described in
sections 3.3 and 3.4.
d
Pb-1
cs LzLL  (1)
3.2 Determining the standard WIP of the fab
To mitigate the problem of overestimation or underestimation when estimating the WIP level
by applying the queuing model, this research had the goal of finding a suitable total WIP level for
the fab that was close to the WIP level in actual practice, and then using it as the base for
adjusting the WIP levels of the non-bottleneck workstations derived from the queuing model.
Therefore, we used observed data and applied the BPNN to model the relationship between the
WIP of the bottleneck and the WIP of the fab to determine the suitable total WIP level of the fab.
In practice, the WIP of bottleneck increases as the fab WIP increases. However, the statistical
regression between the two variables performs poorly in predictive accuracy due that the
performances of both bottleneck and non-bottleneck workstations influence the association
between the bottleneck WIP and fab WIP. To reduce the network complexity of the BPNN for
modeling the relationship between the bottleneck and the fab WIP, we applied a CART
(Classification and Regression Tree) decision tree to identify the critical factors that will
influence the WIP of the bottleneck workstation. For the decision tree, the WIP of bottleneck was
defined as output. According to the queuing model and the expert opinion from the industry, the
fab WIP and five performance measurements for each workstation are used as inputs in the
decision tree model: 1) Ca, 2) Cs, 3) m, 4)μ, and 5) v.
In the BPNN for modeling the relationship between the WIPs of the bottleneck and the fab,
the output was defined as the WIP level of the bottleneck, and the inputs are the critical
performance measurements identified by the decision tree model. A sensitivity analysis of the
trained BPNN was used to determine a WIP level for the fab that was suitable for sustaining the
standard WIP level of the bottleneck, under specific levels for other input factors.
3.3 Determining the standard WIP of regular non-bottleneck workstations
When the standard WIP of the fab and the standard WIP of the bottleneck are determined, the
gap between them equals the sum of standard WIP for all of the regular non-bottleneck
workstations. To allocate the sum of the standard WIP levels for all of the regular non-bottlenecks
to each workstation, this study used the approximation proposed by Whitt (1993) for the GI/G/m
queuing model to determine the modeled standard WIP of workstation i (Lmi), as illustrated in
equation (2). The sum of the modeled WIP levels will not be equal to the sum of the standard
101
probability than Ls2, and hence Ls1 should be chosen as the standard WIP for the workstation.
Conversely, if Ls1 is greater than Ls2, Ls2 should be set as the standard WIP instead. Therefore, the
standard WIP (Ls) for a workstation with a time constraint is computed as:
)L,Min(LL s2s1s  (7)
3.5 Hybrid dispatching rule
Once the standard WIP of each workstation is determined, this standard WIP should be allocated to all of the
operations processed by the workstation, taking into account the product mix. Then this paper adopts the MIVS rule
to keep the WIP of each operation and each workstation near the standard level, and hence maintain the WIP balance.
In the MIVS, the highest priority will be given to an operation (feeder) with a WIP that is higher than or equal to the
standard and with a downstream operation (bleeder) that has a lower WIP than the standard. Conversely, the lowest
priority will be given to an operation with a WIP that is lower than the standard and with a downstream operation
that has a WIP higher than or equal to the standard. The four dispatching priorities in the MIVS for the queue of a
workstation are shown as the left part of Figure 2.
The MIVS uses categorical priorities, so there will be many lots with the same priority in the
queue of a workstation. Hence there will be room for further reducing the cycle time deviation by
adding the second-layer priority to the MIVS dispatching rule. The accumulative X-factor (Xaccu)
defined in equation (8) is an index to measure the relative amount of cycle time spent compared
to the raw process time for a lot. Prioritizing lots with higher X-factors is expected to have the
effect of reducing the cycle time deviation among lots. Therefore, this study incorporated the
X-factor into the original MIVS to act as a second layer of prioritization. Figure 2 illustrates the
hybrid dispatching rule we proposed. Lots at an operation are first prioritized by the first-layer
rule, and then lots with the same priority in the first layer but with a larger accumulated X-factor
will be given a higher priority in the second layer.
timeprocessrawAccu.
timecycleAccu.
X accu  (8)
Figure 2. The hybrid dispatching priority rule
1st layer dispatching (MIVS) 2nd layer dispatching
Bleeder
WIP <
Standard
WIP≧ 
Standard
WIP≧ Standard Priority 1 Priority 2 accuXMax
Feeder
103
13000
14000
15000
16000
17000
0 1000 2000 3000 4000 5000 6000
B
o
tt
le
n
ec
k
m
o
ve
(p
cs
)
Bottleneck WIP (pcs)
Cs = 0.26
Cs = 0.28 (avg.)
Cs = 0.30
13000
14000
15000
16000
17000
0 1000 2000 3000 4000 5000 6000
B
o
tt
le
n
ec
k
m
o
ve
(p
cs
)
Bottleneck WIP (pcs)
μ = 80
μ = 83 (avg.)
μ = 86
Figure 3. The relationship between bottleneck WIP and bottleneck move
4.2 Determining the standard WIP of the fab
The fab we studied has 94 workstations and, as described in section 3.2, there are 5
performance measurements for each workstation. Therefore, together with the fab WIP, there are
a total of 471 performance measurements that could potentially influence the WIP level of the
bottleneck. We used STATISTICA v7.0 to build a CART decision tree model. There are 347 data
examples and all of them are used to develop the decision tree and the minimal number of
examples in a node is set as 40. Figure 4 illustrates that 14 performance measurements out of 471
ones are identified by the decision tree. For examples: 1) If the fab WIP (L_fab) is higher than
138549, the mean WIP for the bottleneck (L_b) is 6362, 2) When the fab WIP is less than or
equal to 138549 and the service rate of the bottleneck (μ_b) is higher than 83.1, the mean WIP for
the bottleneck is 2611, 3) When the fab WIP is higher than 138549 and Ca of workstation CLB
(Ca_CLB) is less than or equal to 0.313, the mean WIP for the bottleneck is 7499. A fab generally
consists of nearly one hundred workstations, making it quite complex to manage its dynamics.
The proposed procedure makes this task easier because the decision tree can extract out critical
ones from the mass performance measurements for sustaining the WIP of the bottleneck over the
desired level, helping to achieve the maximal throughput of the fab with less effort.
105
same bottleneck WIP will be reduced.
0
1000
2000
3000
4000
5000
6000
7000
84000 86000 88000 90000 92000 94000 96000 98000 100000102000104000
B
o
tt
le
n
ec
k
W
IP
(p
cs
)
Fab WIP (pcs)
Ca_CLB = 0.30
Ca_CLB = 0.33 (avg.)
Ca_CLB = 0.36
Figure 5. The relationship between the fab WIP and bottleneck WIP
4.3 Determining the standard WIP of regular non-bottleneck workstations
Since the standard fab WIP is 96674 pcs and the standard WIP for the bottleneck workstation is 4576 pcs,
at present the sum of the standard WIP for all of the regular non-bottleneck workstations is 92098 pcs
(96674-4576). For the parameters in equation (2), m is constant andρis set according to the design scenario, Ca
and Cs are calculated by averaging the historical data of each workstation. By applying the four parameters in
equation (2) for each workstation, the modeled WIP of each workstation is defined and the sum of the modeled
WIP for the non-bottleneck workstations equals 87256 pcs (this is underestimated compared to the standard
WIP, probably because the utilization of the non-bottleneck workstations is relatively high when the fab is fully
loaded). The standard WIP for each non-bottleneck workstation is then derived from equation (3).
Table 3 lists the standard WIP Ls1 for five workstations with time constraints. The Ls1 values for the five
workstations will be compared with the Ls2 values defined in the next section to decide whether some of them
should be replaced by Ls2.
Table 3. The standard WIP (Ls1) levels for workstations with time constraints
Workstation Ls1
DCS 41
FLW 452
GAT 573
OXIDE 5228
TUN 811
4.4 Determining the standard WIP of non-bottleneck workstations with time constraints
107
MIVS MIVS Hybrid
dispatch
MIVS MIVS Hybrid
dispatch
1 99.9% 72.3 70.7 70.1 68.7 68.9 14.8 13.3 13.5 12.6 11.3
2 99.7% 65.5 63.3 63.0 61.9 61.2 14.7 13.1 13.3 12.2 11.2
3 99.4% 61.7 57.8 57.0 54.8 54.6 14.1 12.8 13.2 11.9 11.1
4 99.1% 59.7 52.4 52.0 49.2 49.3 13.8 12.3 12.5 11.6 10.7
5 97.1% 54.3 47.9 47.0 44.6 44.5 13.4 12.0 12.2 11.5 10.6
6 94.7% 52.8 46.6 45.2 42.5 42.9 13.3 11.9 12.1 10.9 10.4
7 93.4% 52.7 45.9 43.9 41.9 42.5 13.4 11.9 12.1 10.9 10.4
8 92.2% 51.0 45.2 43.3 41.7 41.8 13.2 11.8 11.9 10.7 10.3
9 91.0% 49.6 43.7 43.0 40.7 40.0 13.0 11.6 11.5 10.5 10.1
10 89.3% 46.5 41.9 40.2 37.2 37.5 12.9 11.5 11.2 10.4 10.0
Ten scenarios were used in the experiment to test the performance of the five combinations under different
capacity loading levels for the fab. For scenarios 1 to 4 in Table 5, the bottleneck utilization was greater than
99%, and hence, the standard WIP of the bottleneck was determined by the model described in section 3.1. For
scenarios 5 to 10, the standard WIP of the bottleneck was determined by the same model as that used for the
regular non-bottleneck workstations, as described in section 3.3. Thirty simulation runs were made for each
scenario and each combination of standard WIP and dispatching methods. The performance measurements of
interest were the mean cycle time and standard deviation of cycle time, which were collected after a 90-day
warm-up period.
Table 5 and Figure 6 show the results of the simulation. Figure 6 shows that both the mean and standard
deviation of the cycle time for the hybrid WIP determination model are obviously shorter than that of the FIFO,
historical-based and queuing-model-based WIP determination methods for most scenarios, while the benefit of
reducing the mean cycle time is not significant when the bottleneck utilization is higher than 99.7%. Figure 6
also shows that the hybrid dispatching rule does not obviously reduce the mean cycle time, but the standard
deviation of the cycle time is obviously reduced. Figure 6 also indicates that, for both the mean and standard
deviation of the cycle time, there is no significant difference between the historical-based-model and the
queuing-based-model. This phenomenon can be explained by considering that if we average the history of the
observed WIP in a statistical manner, the WIP should approach the same value as predicted by the queuing
model (Li et al., 1996).
109
model that determines the standard WIP of a bottleneck by using BPNN instead of a queuing
model, and takes into account the time constraints. A CART decision tree model extracted out the
critical factors for sustaining the bottleneck WIP and eased the management for a complex fab. A
hybrid dispatching rule was also proposed that incorporates the X-factor into the MIVS, to
control the WIP balance and minimize the cycle time deviation simultaneously.
A simulation model was tested that used the real numerical data of a fab in the Hsinchu
science-based industrial park in Taiwan. From the simulation results, it can be confirmed that the
hybrid WIP determination model we proposed can help decision-makers to determine more
appropriate WIP levels, enabling a shorter production cycle time and smaller production cycle
time deviation. Furthermore, the results also demonstrated that the proposed hybrid dispatching
rule can improve the quality of dispatching decisions by further improving the production cycle
time deviation.
Appendix: Introduction to BPNN
Neural networks attempt to mimic the actions of biological neurons. A fully connected
feed-forward neural network is shown as Figure A.1. The number of nodes in input layer and that
of output layer depend on the characteristics of the problem, while the optimal number of nodes
in the hidden layer can be determined through experiments. The input (aj) to a node j equals to
the sum total of the multiplication of each input weight by its value of input node layer. Through
the activation function (f), the output value of a node can be determined. The sigmoid function is
the most popular choice of the activation function, and the output value for node j is computed as:
ja-j e
)f(a


1
1
i
1 4
j
3
Input layer Hidden layer Output layer
2
wij
wj4wi3
w13
w2j w23
w34
w1j
Figure A.1. A fully connected feed-forward neural network
Backpropagation is the most commonly used algorithm for the supervised training of
feed-forward neural networks. The backpropagation algorithm works by modifying the weight
111
References
1. Alpaydin, E., Altinel, K. and Aras, N., 1996, Parametric Distance Function vs. Nonparametric Neural Networks for Estimating
Road Travel Distances, European Journal of Operational Research, 92, 230-243.
2. Backus, P., Janakiram, M., Mowzoon, S., Runger, G.C. and Bhargava, A., 2006, Factory Cycle-Time Prediction with a
Data-Mining Approach, IEEE Transactions on Semiconductor Manufacturing, 19(2), 252-258.
3. Bonvik, A. M., Couch, C. E. and Gershwin, S. B., 1997, A Comparison of Production-line Control Mechanisms, International
Journal of Production Research, 35(3), 789-804.
4. Burman, D. Y., Gurrola-Gal, F. J., Nozari, A., Sathaye, S. and Sitarik, J. P., 1986, Performance Analysis Techniques for IC
Manufacturing Lines, AT&T Technical Journal, 65(4), 46-57.
5. Chambers, M. and Mount-Campbell, C. A., 2002, Process Optimization via Neural Network Metamodeling, International
Journal of Production Economics, 79, 93-100.
6. Chauvet, F. C., Proth, J. and Wardi, Y., 2001, Scheduling No-Wait Production with Time windows and Flexible Processing
Times, IEEE Transactions on Robotics and Automation, 17(1), 60-69.
7. Chen, H., Harrison, J. M. Mandelbaum, A., Ackere, A. C. and Wein, L. M., 1988, Empirical Evaluation of a Queueing
Network Model for Semiconductor Wafer Fabrication, Operations Research, 36(2), 202-215.
8. Chiang, D. M., Guo, R. and Pai, F., 2008, Improved Customer Satisfaction with a Hybrid Dispatching Rule in Semiconductor
Back-end Factories, International Journal of Production Research, 46(17), 4903-4923.
9. Chien, C., Hsiao, A. and Wang, I., 2004, Constructing Semiconductor Manufacturing Performance Indexes and Applying Data
Mining for Manufacturing Data Analysis, Journal of the Chinese Institute of Industrial Engineers, 21(4), 313-327.
10. Chien, C. and Chen, C., 2007, A Novel Timetabling Algorithm for a Furnace Process for Semiconductor Fabrication with
Constrained Waiting and Frequency-based Setups. OR Spectrum, 29(3), 391-419.
11. Connors, D. P., Feigin, G. E. and Yao, D. D., 1996, A Queueing Network Model for Semiconductor Manufacturing, IEEE
Transactions on Semiconductor Manufacturing, 9(3), 412-427.
12. Goldratt, E. and Cox, J., 1986, The Goal: A Process of Ongoing Improvement, North River Press, New York.
13. Hopp, W. J. and Spearman, M. L., 2001, Factory Physics: Foundations of Manufacturing Management, Irwin McGraw-Hill,
London, UK.
14. Hsu, P.L., Hsu, P.I., Chang, P.C. and Chiu, C., 2006, Regression Trees Approach for Flow-time Prediction in Wafer
Manufacturing Processes Using Constraint-based Genetic Algorithm, International Journal of Production Research, 44(24),
5327-5341.
15. Huang, C. L., Huang, Y. H., Chang, T. Y., Chang, S. H., Chung, C. H., Huang, D. T. and Li, R. K., 1999, The Construction of
Production Performance Prediction System for Semiconductor Manufacturing with Artificial Neural Networks, International
Journal of Production Research, 37(6), 1387-1402.
16. Kim, S., Yea, S. and Kim, B., 2002, Shift Scheduling for Stepper in the Semiconductor Wafer Fabrication Process, IIE
Transactions, 34, 167-177.
17. Leachman, R. C., Kang, J. and Lin, V., 2001, SLIM: Short Cycle Time and Low Inventory in Manufacturing at Samsung
Electronics, Interfaces, 32(1), 61-77.
18. Lee, Y. H. and Kim, T., 2002, Manufacturing Cycle Time Reduction Using Balance Control in the Semiconductor Fabrication
Line, Production Planning & Control, 13(3), 529-540.
19. Li, S., Tang, T. and Collins, D. W., 1996, Minimum Inventory Variability Schedule with Applications in Semiconductor
Fabrication, IEEE Transactions on Semiconductor Manufacturing, 9(1), 145-149.
20. Liao, D. and Wang, C., 2004, Neural-network-based Delivery Time Estimates for Prioritized 300-mm Automatic Material
Handling Operations, IEEE Transactions on Semiconductor Manufacturing, 17(3), 324-332.
21. Lin, Y. H. and Lee, C. E., 2001, A Total Standard WIP Estimation Method for Wafer Fabrication. European Journal of
Operation Research, 131(1), 78-94.
22. Miller, D. J., 1990, Simulation of a Semiconductor Manufacturing Line, Communications of the ACM, 33, 98-108.
23. Narendra, K. S., 1996, Neural Networks for Control: Theory and Practice. Proceedings of the IEEE, 84(10), 1385-1406.
24. Pai, F., 2004, WIP Management Model for Semiconductor Back-end Manufacturing, Journal of American Academy of
Business, Cambridge, 5(1/2), 357-363.
25. Qiu, R.G., 2005, Virtual Production Line Based WIP Control for Semiconductor Manufacturing Systems, International
Journal of Production Economics, 95, 165-178.
26. Scholl, W. and Domaschke, J., 2000, Implementation of Modeling and Simulation in Semiconductor Wafer Fabrication with
Time Constraints between Wet Etch and Furnace Operations, IEEE Transactions on Semiconductor Manufacturing, 13(3),
273-277.
27. Tu, Y. M. and Li, R. K., 1998, Constraint Time Buffer Determination Model, International Journal of Production Research,
36(4), 1091-1103.
28. Uzsoy, R., Lee, C. and Martin-vega, L. A., 1992, A Review of Production Planning and Scheduling Models in the
Semiconductor Industry Part I: System Characteristics, Performance Evaluation and Production Planning, IIE Transactions,
24(4), 47-60.
