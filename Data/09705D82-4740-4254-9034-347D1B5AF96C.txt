 2 
具安全機制之協議問題在有線與無線整合網路架構下之最佳化協定 
 
計畫主持人：王淑卿 
共同主持人：嚴國慶 
計畫參與人員：林宜屏、陳慶維、林雨農、姜志承、陳俊榮 
 
Abstract 
Traditionally, it is very important in delivering the data with secretly and low cost in a 
distributed environment. Use the reliable method to assist the organization in communicating with 
each other needs to be discussed. Thus, we propose the Two-Phase Agreement (TPA) protocol to 
solve those problems by verifying the received messages and achieve the agreement. The TPA 
protocol will assist the organization in achieving the agreement and generate a common key to 
verify it. Similarly, there are many faults and attacks in the network, such as interruption, 
interception, modification and fabrication. The messages from a source might be changed. However, 
we can use the TPA protocol to remove these influences of faulty. 
The proposed TPA protocol doesn’t only decrease the complexity of messages but also 
increase the capability of fault tolerant. Similarly, it is more reliance via the secret key in a real 
distributed system. This protocol can solve agreement problem in net-meeting between the arbitrary 
processors, likes the sub-companies communication with the main-company or makes a decision in 
the company conference. 
Keywords: Net-Meeting, Security, Byzantine Agreement, Consensus, Decision Making 
 
1. Introduction 
The organization needs a secret protocol to assist them in achieving agreement with each other 
in a distributed environment. Because the sub-companies of organization maybe locate at different 
places, they need to communicate with each other. Generally, the organization gains the decision by 
voting via message exchanged. There are many messages need to be delivered in intranet, Internet 
or extranet. Those messages will expose in an unsafe environment and can be corrupted or modified 
arbitrarily. Then, the security and the privacy will be tested. For this reason, this paper proposes a 
secret agreement method Two-Phase Agreement (TPA) protocol to assist the organization in 
verifying the messages and achieving the agreement. 
 4 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
Because the messages exchanged in the network consists of a series of the bits, this paper will 
use the (0,1) to represent the exchanged messages. This representation is showed by Lamport in 
1982[10] first and is called the Byzantine Agreement [1,2,10]. Byzantine Agreement was solved to 
make system run and agree on a common value even if certain processors in a distributed 
environment were failed. This paper will use the basic Byzantine Agreement primitive protocol to 
achieve the voting between the organizations. Subsequently, the messages will be checked by 
verifying and agree on a common value. 
It is more and more important in the current environment to understand the security of the 
message exchange. Thus, this paper shows the Tow-Phase Agreement protocol is composed of the 
Key Agreement Phase and Vote Agreement Phase. The Key Agreement Phase focuses on generating 
the common key and the Vote Agreement Phase focuses on achieving the agreement decision in a 
distributed environment. The protocol of TPA is showing in Figure 2. 
Phase1: Generate the common key 
Phase2: Use the key to encrypt the message 
and achieve the agreement  
Figure 1. The architecture of the TPA in the net-meeting 
 
 
 
Interface
 
Interface
 
 
CSCW 
groupware 
Vk (m) 
Vk (m) 
Vk (m) 
Vk (m) 
Processors 
Processors Processors 
Processors 
 6 
Key Agreement Phase:
  
Message Exchange Phase: 
One of the processor acts for Secret Maker, and send the Sk to others. 
Round 1: 
Secret Maker multicasts the Sk to other processors through (n-1) CMs. 
Each processor receives the Sk. from the Secret Maker. 
Round 2: 
Each processor multicasts the Sk to other processors through (n-1) CMs. 
Each processor receives the values sent by other processors.  
Each processor constructs the vector Ski( the vector of processor i). 
Decision Making Phase: 
Taking majority value of the vector to construct the MAJ, and it would obtain the same value 
Vk. So   
we can use the Vk to encrypt the initial message that would like to transfer in the Vote 
Agreement Phase. Thus, the Key Agreement Phase is completed. 
Figure 3. Key Agreement Phase to generate common key. 
 
According to the Figure 3, the Key Agreement Phase generates the common value as the secret 
key. The Key Agreement likes the protocols of traditional BA agreement. The secret maker 
broadcasts its initial message to others. Each processor receives and stores the message sent from 
the secret maker. Subsequently, all of processors broadcast their value to others in the next round. 
Then the Key Agreement Phase generates the verification key (Vk) and can use it to encrypt the 
initial message in Vote Agreement phase. This protocol can use various encryption methods, likes 
the Diffie-Hellman[2]. Each processor uses Vk to encrypt the initial message as Vk (m) in Vote 
Agreement Phase. To multicast the Vk(m) through (n-1) CMs in the first round. Subsequently, 
receive other processors’ Vk (m) values via (n-1) CMs and construct vector Vi (vector of process i) 
in the second round. The Vote Agreement Phase is shown in Figure 4. 
 
 
 
 
 
 
 
 8 
 
 
 
 
 
 
 
 
 
 
 
 
  
  
                        
   
  
  
                         
  
  
  
                          
 
 
  
  
                          
 
  
  
                         
  
 
  
  
 
Figure 6(b). Construct the vector Vi Figure 6(c). Take the majority value 
Figure 6. The example of generating common key 
V1 V2 V3 V4 V5 V6 
1 1 1 1 0 0 
1 1 1 0 0 1 
1 1 1 0 0 1 
1 1 1 0 0 1 
1 1 1 0 0 1 
1 0 1 1 0 1 
1 0 1 1 0 1 
1 
Taking majority 
V1  = 
1 
Taking majority 
V2  = 
1 
Taking majority 
V3  = 
1 
Taking majority 
V4  = 
1 
Taking majority 
V5  = 
1 
Taking majority 
V6  = 
Figure 6(a). The vector received in the first 
round Figure 5. The processors in a distributed 
environment 
 10 
 
  
  
                                                                                       
 
                                                                                                                                                                                                                                
 
 
 
 
 
 
 
 
   
 
                                                                                       
 
       
 
 
 
 
 
  
 
                                                                                       
 
 
 
 
 
                                                                                                                                                                                                                                                    
  
 
     
 
1 1 1 1 1 1 1 
1 1 1 1 0 1 1 
1 1 1 1 1 1 1 
1 1 1 1 1 1 1 
1 1 1 1 1 1 1 
0 1 0 0 0 0 0 
1 1 1 1 1 1 1 
1 1 1 1 0 0 1 
1 1 1 1 1 0 1 
1 1 1 1 0 1 1 
1 1 1 1 1 0 1 
0 1 0 0 1 1 ? 
1 1 1 1 1 1 1 
1 1 1 1 0 1 1 
1 1 1 1 1 1 1 
1 1 1 1 1 1 1 
1 1 1 1 1 1 1 
0 1 0 0 0 0 0 
        Figure 7(b). Construct the matrix 
MATi (Cont’d) 
         Figure 7(c). Take the majority 
value (Cont’d) 
          Figure 7. The example of executing TPA (Cont’d) 
DEC1 = φ (because row6= 0 = ¬ v1 and v1 = 1) 
φ 
Taking majority 
MAT1  = 
DEC2 = φ (because row6= ? and v62 = 1 = v2) 
MAT2  = 
φ 
Taking majority 
DEC3 = φ (because row6= 0 = ¬ v3 and v3 = 1) 
MAT3  = 
φ 
Taking majority 
 12 
 
According to the Figure 7, we can achieve a safe agreement in net-meeting. The Key 
Agreement Phase generates a common key and the Vote Agreement Phase uses the common key to 
encrypt its initial message subsequently. Finally, the Vote Agreement Phase achieves the agreement 
in a distributed environment. The Figure 7 shows the complete procedure and the result of the 
protocol TPA for the six processors with two CMs failed in fully connected environment. Thus, the 
Key Agreement Phase and Vote Agreement Phase will achieve the decision in a net-meeting in a 
distributed environment. In next section, we will show the complexity of TPA about the message 
amounts and the message passing times. 
 
3. Characteristics of the TPA 
However, we have some different results from traditional net-meeting. We proposal the 
protocol needs only simple message exchange via the TPA method to generate a common key in a 
distributed environment. Subsequently, this protocol can safe achieves the agreement. According to 
the prior literatures, each processor needs to achieve the agreement is very hard in a distributed 
environment. Those protocols must conform to some assumptions, likes the ((n -1)/3) assumption 
[10,14,16], faulty types and faulty tolerance, so on. Those faulty models will influence on the 
tolerant number in a distributed environment, so we use the TPA protocol to verify and improve 
these problems. The complexity of message exchanges is described as follow: 
Table 1 shows the protocol TPA in complexity aspect. Similarly, we use the above example as 
Figure 5. There are six processors and fifteen CMs in our environment. We will compute the TPA 
in the complexity of message amount and the message passing times. 
In Message Amount aspect: The TPA needs n amount of exchanged messages to support the 
secret maker sends the verification key (Vk) to others in Key Agreement Phase. In Vote Agreement 
Phase, all of the processors will broadcast (n-1) Vk(m) in the first round. Subsequently, the 
processors will multicast again. In the second round, it needs 5n amount of exchanged messages. 
Thus, the total number of exchanged messages are (7n-1) = 41. 
In Message Passing Times: The Key Agreement Phase method’s verification key is generated 
from the secret maker. So, we need only one round to gain the key. Similarly, the Vote Agreement 
Phase needs two rounds to achieve the agreement. Thus, the total numbers of message passing times 
are 3 round. 
 14 
vi, for 1≤ j ≤ n. When CMij is under the influence of malicious fault, we consider the 
following two cases after running the first round. 
Case 1: vij = vi 
Since there are at most n/2-1 malicious faulty CMs connected with 
processor j, at most n/2-1 values that may be ¬vi’s in the second round. The 
number of vi’s is [(n-1)-(n/2-1)]+1= n/2+1 in the i-th row; therefore, the 
majority of the i-th row in MAT
 i is vi. 
Case 2: vij = ¬vi 
There are at most n/2-1 malicious faulty CMs. Therefore, in the second 
round, the total number of ¬vi‘s does not exceed (n/2-1)+1= n/2 and the 
number of vi‘s is at least [(n-1)-(n/2-1)]= n/2. If n is an even number, then 
n/2=n/2, the majority of the i-th row in MATj cannot be determined. If n is 
an odd number, then n/2<n/2. Hence, the majority of the i-th row in MATj 
is vi.  
 
Lemma 4: If (¬∃MAJk =¬ vi) and {(∃MAJk =?) and (Vki =Vi)} in MATi, then DECi = φ is 
healthy. 
Proof: If MAJk does not exist or cannot be determined, there are exactly n/2 v’s and n/2 ¬v’s 
in the k-th row. Let vki = v in MATi, then, all n/2 ¬v’s should be received in the 
second round. Notably, n/2-1 malicious faulty CMs are in the system. Therefore, in 
the second round, processor i at least receives a value from processor k without any 
disturbance. The initial value of processor k should disagree with the initial value of 
processor i; hence it is correct to choose DECi = φ 
If vki = ¬vi, we claim that ¬vi ought to be passed by a faulty CM from processor k, and 
the initial value of processor be ¬vki = vi. 
To prove, if CMki is healthy, then the initial value of processor k should be ¬ vi. By 
Lemma 2, the majority value of the k-th row in MATi is ¬vi. This is contradiction with 
the condition of (¬∃MAJk = ¬ vi). 
If the initial value of processor k was ¬vi, then, by Lemma 3, MAJk should be either 
¬vi or cannot be determined for vki = vi. It is a contradiction.   
 
 16 
processors with initial value vi agree on. Similarly, for the healthy 
processor p with initial value ¬vi, the majority value of the p-th row in 
MATj, 1≤j≤n, should be either vi or cannot be determined with ¬vij = vi. 
All healthy processors with initial value ¬vi agree on φ, too. 
Part 2: If a healthy processor agrees on vi, then all healthy processors should 
agree on vi. 
If the healthy processor i with initial value vi and DECi = vi, but there 
exists some healthy processor j, j ≠ i, which has DECj ≠ vi. Therefore, 
such a situation is impossible. To demonstrate this impossibility, if DECj 
=φ, by Part 1, then DECi = φ. This contradicts the above assumption. 
If DECj = ¬vi, unless the initial value of processor j is ¬vi; otherwise, it 
is impossible according to the definition of a consensus problem. 
However, if the initial value of processor j is ¬vi, by Lemma 4, MAJi 
equals to ¬vi or cannot be determined with vji = vi in MATi. Then, DECj 
= φ, it is a contradiction. Hence, all healthy processors should agree on 
the same value by the definition of consensus problem. 
(2) Validity: 
To prove this case, the initial value of all processors should be the same. If there is 
a value ¬vi in MATj, 1≤j≤n, then the value must be attributed to a malicious faulty 
link. There are at most n/2-1 malicious faulty links; hence, there is at most 
n/2-1 ¬vi‘s in each row. Since the value received in the first round may be ¬vi, 
the majority of each row for all MATj should be vi. Therefore, all healthy 
processors should agree on vi.  
 
Theorem 3: The most amount of information exchanges by TPA protocol is O(n2). 
Proof: In the first round, each processor sends out at most (n-1) copies of its initial value to 
the other processors. In the second round, an n-element vector is sent to the other at 
most n-1 processors in the environment; therefore, the total number of message 
exchanges are at most (n-1) + (n*(n-1)). This finding implies that the complexity of 
information exchange is O(n2).  
 
 18 
Byzantine Agreement Protocols,” in the Proceedings of Pacific Rim International 
Symposium, 1997, pp. 122-129. 
[10] T. Rabin and M. Ben-Or, “Verifiable Secret Sharing and Multiparty Protocols with Honest 
Majority,” ACM, 1989, pp.73-85. 
[11] K. Shima, H. Higaki, and M. Takizawa, “Fault-Tolerant Causal Delivery In Group 
Communication,” in the Proceedings of International Conference of Parallel and Distributed 
Systems, 1996, pp. 302 -309 
[12] M. Steiner, G. Tsudik, and M. Waidner, “CLIQUES: a new approach to group key 
agreement,” Distributed Computing Systems, 1998. Proceedings. 18th International 
Conference on , 1998,pp.380 -387 
[13] M. Steiner, G. Tsudik, and M. Waidner, “Key agreement in dynamic peer groups,” Parallel 
and Distributed Systems, IEEE Transactions on , Volume: 11, Issue: 8 , Aug. 2000,pp.769 
-780 
[14] S. C. Wang, Y. H. Chin, and K. Q. Yan, “Byzantine Agreement in a Generalized Connected 
Network Model,” in IEEE Transactions on Parallel and Distributed System, 6(4), 1995, pp. 
420-427. 
[15] T, Yamaoka, K. Tsujino, T. Yoshida,and S. Nishida, “Supporting mutual understanding in 
collaborative design project,” Computer Human Interaction, 1998. Proceedings. 3rd Asia 
Pacific , 1998,pp.132 -137. 
[16] K.Q Yan and S.C. Wang “Reaching Fault Diagnosis Agreement on An Unreliable General 
Network,” Information Sciences, Vol. 170, No. 2-4, pp. 397-407, 2005 February. 
 
 
2 
12)  Satellite Communications  
13)  Ultra-Wideband Communications 
14)  Signal Processing for Communications 
15)  Testbeds and Hardware Development 
16)  Other topics 
  
2. Wireless Networking Symposium 
1)  Ad Hoc, body-area and sensor Networks 
2)  Cellular systems (2G/2.5G/3G/4G and beyond)  
3)  Self Organizing Network (SON) and Femtocell Networks 
4)  WLAN, WPAN, WMAN, and wireless wide area networks  
5)  Wireless networks for vehicle, underwater, UAVs communications  
6)  Wireless mesh networks  
7)  Inter-networking of wireless heterogeneous and multi-tier networks  
8)  Protocols (Routing/Switching, flow and congestion control, multicasting, …)  
9)  Resource management, mobility management, and admission control  
10)  Network planning, capacity analysis, and topology control  
11)  Testbeds and deployment  
12)  Multimedia communications 
13)  Other topics 
  
3. Optical Communications and Networking Symposium 
1)  Architectures and technologies for metropolitan, core and local networks  
2)  Control and management for optical networks  
3)  Next-generation SONET/SDH  
4)  Optical access networks (PON, EPON, WDM-PON, …)  
5)  Optical (WDM/OCDM/OTDM) network and switch architectures  
6)  Optical network test beds, field trials and experiments  
7)  Optical networking for grid, storage and multimedia services  
8)  Optical packet, burst and label switching  
9)  Planning and optimization of optical networks  
4 
 
二、與會心得 
 
此次出席會議的專家學者來自多個國家，包括：美國、香港、中國大陸、日本、韓國、
法國、英國、澳洲及台灣。台灣地區則包括清華大學、東華大學及本校朝陽科技大學、…
等。本校能以私立學校的研究成果，與這麼多國立優秀的學者在國外共同分享研究成果，
真是倍感榮幸。
 
會議中，除了學術界的先進前輩之外，亦有許多的參與者是來自工業界及其所屬研究機
構，對於實務方面的見解與經驗，頗值得學術界做教學與研究時的參考。筆者所提論文，
題目為『A Three-Phases Scheduling in a Hierarchical Cloud Computing Network』，安排在第一
天下午的議程中發表。此篇文章在進行論文匿名審查時，獲得 Reviewers 極高的肯定。 
由於現今電腦網路頻寬及硬體設備相關技術的持續發展演進，使得網際網路的相關應用
更加蓬勃發展。架構在網際網路的雲端運算(Cloud Computing)為一新興的分散式系統之概
念，其使用較低效能的主機來達到高可靠性及高效率的運算能力。由於雲端運算概念的興
起，使得網際網路服務的應用，已透過雲端運算擴大其服務層面的廣度及服務內容的深度。
但由於雲端運算主要是透過分散的服務節點(電腦或資源)協力合作完成一個大型的工作，
也就是將工作分割成若干個子工作，再將這些子工作分配給這些分散的節點進行服務。因
此，如何將工作有效的切割並分配到每一個服務節點上，才不會造成某些服務節點負擔過
重，而某些服務節點卻是閒置的情況，則是一個值得探討的議題。 
為增加雲端運算系統的可靠性(Reliability)、穩定性(Stability)以及資源有效且公平被使
用，本研究以現今企業最常應用於雲端運算的階層式網路拓樸架構為基礎，並提出三階段
排程演算法，以 ESJF(Enhanced Shortest Job First)、EOLB(Enhanced Opportunistic Load 
Balancing)與 EMM(Enhanced Min-Min)排程演算法進行工作的配置，使得每個需要執行的工
作都能被分配到適當的資源並有效的改善每個服務節點的負擔與降低資源的浪費，提供階
層式雲端運算網路拓樸之負載平衡。 
在雲端運算的環境下，需要龐大的運算服務節點來提供使用者相關的應用與服務。因
此，如何將分散在各區域的節點經由連結的方式，讓節點與節點間建構一個拓樸架構，並
有效運用這些資源，讓使用者端能在最短的時間內得到服務回應。因此，本研究以 SJF 排
班演算法為基礎加入搶先排班機制提出 ESJF 排班演算法，使複雜度較高的工作盡量避免被
6 
 
會場照片
 
 
 
 
8 
10 
 
會議論文集：
 
 
 
 
 
12 
 
發表之論文：
 
 
A Three-Phases Scheduling in a Hierarchical Cloud Computing Network 
 
Shu-Ching, Wang Kuo-Qin, Yan*(Corresponding 
author) 
Shun-Sheng, Wang Ching-Wei, Chen 
scwang@cyut.edu.tw kqyan@cyut.edu.tw sswang@cyut.edu.tw s9814612@cyut.edu.tw 
Chaoyang University of Technology 
Taiwan, R.O.C. 
 
Abstract 
Network bandwidth and hardware technology are developing rapidly, resulting in the vigorous 
development of the Internet. A new concept, cloud computing, uses low-power hosts to achieve high 
usability. The cloud computing refers to a class of systems and applications that employ distributed 
resources to perform a function in a decentralized manner. Cloud computing is to utilize the computing 
resources (service nodes) on the network to facilitate the execution of complicated tasks that require 
large-scale computation. Thus, the selecting nodes for executing a task in the cloud computing must be 
considered. However, in this study, a three-phases scheduling in a hierarchical cloud computing network 
is advanced. The proposed scheduling can utilize better executing efficiency and maintain the load 
balancing of system. 
Keywords: cloud computing; scheduling; load balancine 
1. Introduction 
Cloud computing is a new concept in distributed systems [2,9,10]. It is currently used mainly in 
business applications in which computers cooperate to perform a specific service together. As network 
bandwidth and quality outstrip computer performance, various communication and computing 
technologies previously regarded as being of different domains can now be integrated [10]. Thus, 
applications associated with network integration have gradually attracted considerable attention. In a 
cloud computing environment, users have access to faster operational capability on the Internet, and the 
computer systems must have high stability to keep pace with this level of activity [7]. 
However, cloud computing has greatly encouraged distributed system design and application to 
support user-oriented service applications [5]. Therefore, the users can use the application platform of 
cloud computing to execute the personal software or program in their capacity of account [7]. Therefore, 
in this study, a three-phases scheduling is proposed to utilize the advantage of cloud computing and to 
make each task to obtain the required resources in the shortest time. 
The rest of this paper is organized as follows. The literature review is discussed in Section II. The 
proposed three-phases scheduling is presented in Section III. The simulations for proving the proposed 
method are shown in Section IV. Finally, the conclusions and the future works are discussed in Section 
V.  
2. LITERATURE REVIEW 
Cloud Computing is a kind of distributed computing where massively scalable IT-related 
14 
tasks requiring execution and stores them in a job queue giving the execution order for each task 
according to the characteristics of task. By using the BTO scheduling, the most suitable scheduling order 
is obtained in accordance to the job demand and the service priority of each task. Thus, the system can 
choose the most suitable scheduling order for reducing waiting time in the job queue and the execution 
time for entering into a system. This allows for the performance of the entire system to be promoted. 
3.2 Second phase: EOLB scheduling 
This study proposes an Enhanced OLB (EOLB) that integrates a traditional OLB [4,7] and a service 
manager threshold mechanism. The service manager threshold is in accordance with the characteristics 
of a job executed by a suitable service manager. The proposed EOLB combines a traditional OLB and 
the service manager threshold, that not only dispatches the task to the most suitable service manager 
according to the property of task requiring execution, but also maintains the advantage of traditional 
OLB to reach the load balance. 
3.3 Third phase: EMM scheduling 
In the third-phase, an Enhanced Min-Min (EMM) is proposed that combines a Min-Min scheduling 
[4,7] and an service node threshold that will guarantee the task is assigned a suitable node to carry out 
the minimum execution time. EMM can choose the best service node and then uses the service node 
threshold to guarantee that the node carries out the task in the shortest time. Thus, the job can be 
allocated effectively and the best resource allocation provided. 
The three-phases scheduling will be employed in the hierarchical cloud computing network. The 
proposed scheduling can schedule the task according to the task demand. Thus, each task will be 
completed effectively and quickly in the hierarchical cloud computing network. 
4. Experiment 
This section will discuss the experiment environment and present the experiment results after 
verifying the true situation of a network by the method mentioned in Section III, to ensure the feasibility 
and accuracy of our approach. In our experiment, the NS2 (Network Simulation 2) is used to simulate 
the network environment [14]. Besides NS2, other tools such as nsBench and Jbuilder will be employed 
to assist in the experiment. 
To create a hierarchical cloud computing environment, the following assumptions are made in 
advance: 
1. The requirement of tasks is normally distributed. 
2. Each independent and dismembered task is divided into several subtasks and they are 
completed independently. 
3. The necessary execution time of a task can be forecast. In addition, the task has a different 
execution time at a different node. 
4. The requirements for all tasks can be handled by the nodes. In other words, all tasks can be 
carried out if they enter into the system. 
5. The capability of nodes is normally distributed, namely that each task can be supported in 
different nodes. 
4.1 Simulation design  
NS2 is employed to simulate the network of fifty nodes and fifty tasks. Node attributes include 
16 
 
4.2 Result and Analysis of Simulation 
In the simulation, the effectiveness of the proposed method is verified by evaluating the two main 
algorithm factors, load balance and makespan. These factors will assist in proving the usefulness of the 
scheduling algorithm.  
The experiment results are shown in Figures 3-7. Each figure shows the state of a load for each 
node in a specific group and compares it with three kinds of scripts mentioned in Table I. The y-axis of 
the figure represents the makespan: the total execution time for all subtasks in the specific group. The 
x-axis of the figure represents the assigned number for each node in the network: the order from the left 
side to the right side base on the node capability from highest to lowest. In particular, node N37 of 
Figure 3 has the highest ability to support any subtask that enters the system, while node N3 has the 
lowest ability in Group 1. The figure block shows three script types combined with various scheduling. 
The first script, represented as a black oblique line ( ) combines OLB with MM. The second script, 
represented as a black block ( ), combines EOLB with MM, while the third script, represented as a 
white block ( ), combines EOLB with EMM. 
In Figure 3, the load balance for each node is similar to those using the three scripts mentioned 
above. In addition, all tasks aggregate to the left of the y-axis. The main reason for this is that the nodes 
with the lowest ability (i.e., N35, N23 and N3), cannot satisfy tasks that require higher execution 
capability. Because the nodes with the best capability are clustered in Group 1, the tasks which require 
higher execution capabilities are also assigned to Group 1. In this situation, the worst ability node may 
not execute any tasks resulting in all tasks aggregating to the left of the y-axis. On the other hand, 
because of subtask is divided randomly in this study, when the number of subtasks is low, the subtasks 
will be executed by the nodes with the shortest execution time (such as N37, N13, N9…). Therefore, the 
load of the nodes with higher capabilities will be heavy. 
 
 
Figure 3.  The comparison of load balance in Group 1 
 
Figure 4.  The comparison of load balance in Group 2 
18 
409
260
205
OLB+MM EOLB+MM EOLB+EMM
Makespan
 
Figure 8.  The comparison of makespan in each scheduling 
In the comparison of makespan for the three scripts, the proposed script is faster than the first in 
the makespan with a 55 unit time and faster than the second with makespan of a 204 unit time. The main 
reason that led to this situation is that the third script not only considers the load balance for each node 
but also employs the threshold necessary to remove the unsuitable nodes. How to decide the threshold 
value is a big challenge for this research. If the threshold value is set too low, resources may be wasted. 
If the threshold value is set too high, the value will exist in name only. How the threshold value will be 
decided in this experiment is described as follows: each task will be allowed to wait for the node which 
may finish the task in the shortest time while the node which may have cost too much time to execute 
the task will be filtered. By employing the proposed algorithm, the system will reach the highest 
execution performance and achieve the load balance of nodes. 
The simulation results for the three scripts in the two designed experiments have proven that the 
task scheduling method combining EOLB with EMM is more effective than other scheduling 
approaches for reducing the completion time of a task. It is superior in the load balance of nodes, the 
makespan of all subtasks, and at enhancing the execution performance of the system. 
5. Conclusion 
In this study, the three-phases scheduling that included BTO, EOLB and EMM is integrated. The 
allocation of tasks was based on the related information from nodes collected by the agent. The 
experiment results from the makespan show that the proposed script combining EOLB with EMM 
obviously enhances the performance of a system. The combination of OLB and MM enhances the 
system performance about 50% while the combination of EOLB and MM enhances performance about 
20%. In other words, the proposed scheduling recognizes the load balance of nodes and enhances the 
entire execution performance of a system. 
Furthermore, in a generalized case, the cloud computing network is not only static, but also 
dynamic. On other hand, our proposed method will be extending to maintain and manage when the node 
is underlying a dynamic hierarchical cloud computing network in future work. 
ACKNOWLEDGMENT 
This work was supported in part by the Taiwan National Science Council under Grants 
NSC97-2221-E-324–007-MY3. 
 
20 
 
 
出席國際學術會議心得報告 
                                                             
計畫編號 NSC97-2221-E-324-007-MY3 
計畫名稱 具安全機制之協議問題在有線與無線整合網路架構下之最佳化協定 
出國人員姓名 
服務機關及職稱 
朝陽科技大學資訊管理系教授 王淑卿 
會議時間地點 
100 年 7 月 4 日~7 月 6 日 
泰國曼谷 
會議名稱 The 2011 International Conference on Business and Information (BAI2011) 
發表論文題目 Integrate the Business Model Level and the Publish Subscription Mechanism to Construct a Cloud Market 
 
一、 參加會議經過 
此次研討會的會期共計三天，就在泰國曼谷舉行。7 月 4 日安排 CPRAM 及 NaRaYa
兩家公司的參訪，然因一則需另外繳交費用，一則因暑假旺季訂不到適合的班機，因此未
參加。大會正式展開的時間為 7 月 4 日晚間 6 時至 7 月 6 日。 
而為了促進學術界與產業界在資訊相關領域的研究與發展能力，並培養在本領域之研
發人才，此次研討會的主題共包括 24 個主題，分列如下： 
 Accounting 
 Business Administration 
 Business Policy and Strategy 
 Economics 
 Electronic Commerce 
 Entrepreneurship 
 Financial and Banking 
 Health Care Administration 
 Human Resource 
 Information System and Technology 
 Internation Business 
22 
必須探討的議題之一。因此，本研究提出雲端市集的商業模式層級及訂閱機制來減少雲端
使用者所要尋找的資訊量，讓雲端服務的使用者能夠享有更好的服務品質。 
由於網際網路的普及化以及全球資訊網的快速成長，使得企業所進行的商業模式
(Business Model)已經不只是傳統的買與賣的方式，而進入所謂「電子商務」(e-Commerce)
的時代。在電子商務的時代中，進行商業模式時未必需要具有實體店面的買賣模式，更不
再受限於實體商店的營業時間，且因多元化與便捷性的付費方式，使得電子商務的經營模
式快速成長且成為新興發展的趨勢。 
電子商務不僅延伸了知識經濟的觸角，也同時強化了商業自動化的建立。透過商業自
動化，能突破傳統商業買賣中時間與空間的限制，演變成為一種多元化的經營方式。而利
用便捷網路使用電子商務，並透過許多電子商務的交流構成一個電子市集(e-Market)的集
合，早已是大至大型企業小至個人商店的新興趨勢。 
然而在這資訊快速發展的時代下，雲端運算(Cloud Computing)迅速的竄起。而因為雲
端運算有別於其他運算環境的特性，將之運用在電子市集中，將使得現今企業在網路上的
服務越來越多元化，也使得雲端環境的使用者快速的增加，改變了現有的商業模式，能夠
將目前已蓬勃發展的電子商務演變成以雲端環境為主的新型態模式。 
雲端運算並不是在技術上的創新，而是一個創新的概念，其轉換服務的方式以及商業
營運的模式。而隨著現今快速的資訊科技及網路技術的發展，以使用者為導向的雲端運算
概念，成為了各界矚目的焦點。雲端運算的相關服務是由網路、運算、及服務這三類組成
的。亦即，雲端運算提供的服務都是透過網路連線，由在網路的另一端所提供強大的運算
能力以及其他服務，讓個人或企業藉由改變過去的資料處理方式，來提高作業的效率，也
可以省下大量的成本，進而同時獲得資訊科技的創新應用。 
預期未來當網際網路上佈滿著雲端服務提供者所提供的服務時，網際網路之使用者大
都會使用由供應商所提供的雲端服務。本研究稱這個由大量雲端服務供應商所建構成之商
業環境為雲端市集(Cloud Market)。而透過電子商務跟雲端運算技術的結合所提供之服務，
勢必將會使企業或消費者面臨新的體驗。電子商務如何在雲端市集中運作？如何利用雲端
的優勢展現其優點及其影響，將會是未來企業經營時所將面臨的重要問題之一。 
對於大型電子商務網站像是亞馬遜、阿里巴巴、Google 等企業，能將閒置的計算資源
透過雲端運算的模式，為中小型的電子商務企業提供雲端服務。而中小型電子商務企業則
24 
會場照片
 
 
 
26 
 
大會議程
 
 
 
28 
 
發表之論文：
 
INTEGRATE THE BUSINESS MODEL LEVEL 
AND THE PUBLISH SUBSCRIPTION MECHANISM 
TO CONSTRUCT A CLOUD MARKET 
 
Shu-Ching Wang, Wen-Pin, Liao, Shun-Sheng Wang*, Kuo-Qin Yan*, Yu-Nung Lin, 
Department of Information Management, Chaoyang University of Technology, 
168, Jifeng E. Rd., Wufeng District, Taichung, 41349, Taiwan, R.O.C. 
{scwang; s9833901; sswang*; kqyan*; s9914618}@cyut.edu.tw 
*: Corresponding author 
 
 
 
ABSTRACT 
Network bandwidth and hardware technology is developing rapidly, resulting in the vigorous 
development of the Internet. A new concept, cloud computing, uses low-power hosts to achieve high 
reliability. According to the characteristics of cloud computing, the enterprises can support the business 
services on the Internet. The business environment is built form by a large number of cloud service 
providers, and is named Cloud Market in this study. However, there are a large number of cloud service 
providers in the cloud-computing environment. As more and more cloud-services are provided by the 
cloud service providers, the number of cloud users is increased. Consequently, the cloud users cannot get 
the suitable cloud service in the Cloud Market. Therefore, in this study, the Cloud Market business 
model and publish subscription mechanism are proposed to reduce the amount of searching information 
in the cloud computing environment. 
 
Keywords: Cloud Computing, Cloud Service, e-Market, Business Model, Publish Subscription 
 
1. INTRODUCTION 
This network bandwidth and hardware technology is developing rapidly; making the company's business 
model has been carried out not only the traditional way of buying and selling, and into the era of 
e-commerce (Parsons, et al., 1998). In the era of e-commerce, the business model may not need to have 
physical stores trading model, but not limited to physical store operating hours, and because of the 
diversity and convenience of payment options, making e-commerce business model quickly grow and 
become a new trend (Peppers & Rogers, 1999). 
However, in this era of rapid development of information, quickly rose up cloud computing. The use of 
cloud computing will be concentrated in the e-market, making today's businesses increasingly diverse 
services on the network. The cloud service provider in the cloud-computing environment provides more 
diversified services, making the rapid increase in cloud users (Peppard, 2000; Buyya, et al., 2008). 
Cloud computing is not in technical innovation, but an innovative concept, the conversion mode of 
service and business operation mode (Birman, et al. 2009). With today's information technology and 
rapid development of network technology to the user-oriented concept of cloud computing has become 
the focus of public attention. Cloud computing is Internet-related services, operations, and services 
consisting of these three categories (Gong, et al., 2010). Cloud computing to provide services through 
30 
2.2 E-Market 
E-Market is an online market place where businesses can access exclusive pricing and promotions from 
other businesses. E-Market, also known as Market Place, or e-hub, through the Internet technology and 
e-commerce solutions for logistics information platform to construct (Parsons, et al., 1998). E-market is 
a website or group of enterprises have a common interest in transactions between connected persons into 
the websites that send a complex information and transaction data, whether a particular vertical industry 
or across industries. There are many electronic marketplaces where you can find new business 
opportunities (Parsons, et al., 1998). In other words, e-market by a large number of buyers and sellers 
together and automated trading processes, so the buyer can choose the product or service expansion 
space, leaving the seller to expand into new markets and new customers, and reduce transaction costs for 
buyers and sellers. 
In addition to, there are many different types of e-marketplace based on a range of business models. 
They can be broadly divided into categories based on the way in which they are operated 
(www.businesslink.gov.uk/bdotg/action/, 2010). 
Independent e-marketplace: An independent e-marketplace is usually a business-to-business online 
platform operated by a third party which is open to buyers or sellers in a particular industry. By 
registering on an independent e-marketplace, you can access classified ads or requests for quotations or 
bids in your industry sector. There will typically be some form of payment required to participate. 
Buyer-oriented e-marketplace: A buyer-oriented e-marketplace is normally run by a consortium of 
buyers in order to establish an efficient purchasing environment. If you are looking to purchase, 
participating in this sort of e-marketplace can help you lower your administrative costs and achieve the 
best price from suppliers. As a supplier you can use a buyer-oriented e-marketplace to advertise your 
catalogue to a pool of relevant customers who are looking to buy. 
Supplier-oriented e-marketplace: Also known as a supplier directory, this marketplace is set up and 
operated by a number of suppliers who are seeking to establish an efficient sales channel via the internet 
to a large number of buyers. They are usually searchable by the product or service being offered. 
Supplier directories benefit buyers by providing information about suppliers for markets and regions 
they may not be familiar with. Sellers can use these types of marketplace to increase their visibility to 
potential buyers and to get leads. 
Vertical and horizontal e-marketplaces: Vertical e-marketplaces provide online access to businesses 
vertically up and down every segment of a particular industry sector such as automotive, chemical, 
construction or textiles. Buying or selling using a vertical e-marketplace for your industry sector can 
increase your operating efficiency and help to decrease supply chain costs, inventories and 
procurement-cycle time. A horizontal e-marketplace connects buyers and sellers across different 
industries or regions. You can use a horizontal e-marketplace to purchase indirect products such as 
office equipment or stationery. 
2.3 E-commerce 
E-commerce (electronic commerce or EC) is the buying and selling of goods and services on the Internet, 
especially the World Wide Web (WWW). In practice, this term and a newer term, e-business, are often 
used interchangeably. E-commerce consists of the buying and selling of products or services over 
electronic systems such as the Internet and other computer networks. The amount of trade conducted 
electronically has grown extraordinarily with widespread Internet usage (Peppard, 2000). The use of 
commerce is conducted in this way, spurring and drawing on innovations in electronic funds transfer, 
32 
services provided and goods, the publish subscription is used to reduce the amount of searching 
information by cloud user. The mechanism of publish subscription is the provision of services by the 
subscriber to the publisher to issue the demand for a subscription. Publisher based on the demand 
subscription service to pass subscribers. Moreover, the subscriptions of different cloud users may be 
different. In the Cloud Market business model hierarchy, subscriber is cloud user; publisher is the cloud 
service provider. The publish subscription mechanism of cloud marketplace is shown in Figure 2. 
Therefore, when cloud user access to Cloud Market, the identity authentication by cloud marketplace, 
cloud user can take the initiative by the publisher (cloud service provider) to provide the services 
provided. In the Cloud Market, due to the actual demand of cloud user, the service requirements between 
subscriber and publisher can be dynamically added or deleted. 
 
Cloud User
Subscription Message
Cloud Service Provider
Response Message
Cloud User submits the registration to the Cloud Service Provider
Cloud User
Cloud Service Provider
Provide Cloud Services
Cloud Service Provider provides services automatically 
 
Figure 2. The publish subscription mechanism of cloud marketplace 
When cloud user access to Cloud Market, then the business transaction is started. In our study, a Cloud 
Market transaction process is proposed, which consists of three main components: cloud user, cloud 
service provider and cloud marketplace. The business transaction process of Cloud Market is shown in 
Figure 3, and the descriptions are given in following. 
(1) The first registration of Cloud User:  
(a) Cloud marketplace application account is applied by cloud user, and cloud user subscribes a 
specific cloud service of cloud service provider. 
(b) The application account of cloud marketplace of cloud user is confirmed. 
 
(c) Cloud marketplace records the user has completed the subscription record. 
(2) The actual transactions of Cloud User: 
(a) Cloud user logs in the cloud marketplace. 
(b) Cloud user selects a specific cloud service provider or buys a selection of goods. 
(c) Cloud user confirms the trading platform provided by the payment mechanism. 
34 
4. THE TRANSACTIONM FLOW OF CLOUD MARKET 
The operation flow of cloud market shown in Section 3 includes Web service and working flow. The 
first registration of cloud user is Web service. Cloud user to log in the cloud marketplace of the actual 
transactions is Web service too. Then, other operations are the working flow. 
4.1 Web Service 
The World Wide Web Consortium (W3C) defines a “Web service” as a software system designed to 
support interoperable machine-to-machine interaction over a network. A Web service is a method of 
communication between two electronic devices over a network. Web services can convert the 
application into a Web-application, which can publish its function or message to the rest of the world. 
There are a lot of cloud service providers in a Cloud Market to provide cloud services, so if cloud user 
must apply for each account to the cloud service providers, then the cloud user must remember multiple 
username and password. To reduce the look of the goods or services needed of cloud user to find the 
amount of information required, the combination of group authentication and publish subscription 
mechanism is used in this study. 
That is, with a single login, cloud users will be able to visit more often get together cloud service 
providers to reduce excessive facing the user information. According to individual needs, the cloud user 
can use the publish subscription mechanism to “add” or “delete” subscribe goods or services 
dynamically. In other words, our proposed method can provide a more personalized and individualized 
services to enhance the user wishes to use Cloud Market. 
4.2 The Trading Platform Provided by the Payment Mechanism 
When cloud user access to Cloud Market for actual transactions, the choice of a specific cloud service 
provider or choose to buy a commodity, it will confirm the payment mechanism and trading platforms to 
trade. In the Cloud Market, the e-tickets or e-coin can be used to pay the purchase price. The process of 
e-coin transaction, including cloud user, cloud marketplace, cloud service providers, cloud product 
suppliers, and banks. The processes of e-coin transaction are shown in Figure 4, and discussed in 
following. 
Step 1. Cloud user applies for a bank account.  
Step 2. The successful and recognized the cloud user account has deposits are confirmed by 
bank. 
Step 3. Cloud user submits the account application of Cloud Market. 
Step 4. Cloud service provider confirms that the account opening and can be used. 
Step 5. Cloud users purchase the e-coin. 
Step 6. Bank issues the e-coin to the cloud user. 
Step 7. Cloud users use e-coin to buy cloud goods from cloud service providers. 
Step 8. The goods that cloud user ordered are sent by Web store. 
Step 9. The e-coin is transferred to the bank by Web store. 
Step 10. The equivalent amount is remitted to the cloud service provider by bank. 
 
36 
Technologies, 113-118. 
Birman, K., Chockler, G. & Renesse, R. 2009. Toward A Cloud Computing Research Agenda, ACM 
SIGACT News, 40 (2), 68-80. 
Buyya, R., Yeo, C.S. & Venugopal, S. 2008. Market-oriented Cloud Computing: Vision, Hype, and 
Reality for Delivering IT Services as Computing Utilities, Paper presented at the 10th IEEE 
International Conference on High Performance Computing and Communications, 5-13. 
Gong, C., Liu, J., Zhang, Q., Chen, H. & Gong, Z. 2010. The Characteristics of Cloud Computing, Paper 
presented at the Parallel Proceeding Workshops. 
Grossman, R.L. 2009. The Case for Cloud Computing, IT Professional, 11 (2), 23-27. 
Parsons, A., Zeisser, M. & Waitman, R. 1998. Organizing Today for the Digital Marketing of Tomorrow, 
Journal of Interactive Marketing, 12 (1), pp. 31-53. 
Peppers, D. & Rogers, M. 1997. Enterprise One to One: Tools for Competing in the Interactive Age, 
Doubleday, New York. 
Peppers, D. and Rogers, M. 1999. Is Your Company Ready for One-to-One Marketing?, Harvard 
Business Review, 151-164. 
Peppard, J. 2000. Customer Relationship Management in Financial Service, European Management, 18 
(3), 312-327. 
Russell, C.A. 1998. Toward a Framework of Product Placement: Theory Propositions, Advances in 
Consumer Research, 25, 357-362. 
Vouk, M.A. 2008. Cloud Computing- Issues, Research and Implementations, Paper presented at the 
Information Technology Interfaces, 31-40. 
Wang, L.H., Tao, J. & Kunze, M. 2008. Scientific Cloud Computing: Early Definition and Experience, 
Paper presented at the 10th IEEE Int. Conf. High Performance Computing and Communications, 
825-830. 
Wang, C., Wang, Q., Ren, K. & Lou, W.J. 2010, Privacy-Preserving Public Auditing for Data Storage 
Security in Cloud Computing, Paper presented at the Proceedings of the 29th IEEE International 
Conference on Computer Communications (IEEE INFOCOM 2010), San Diego, CA, 1-9. 
Weiss, A. 2007. Computing in the Clouds, netWorker, 11 (4), 16-25. 
http://www.crm.org.tw, December 2010. 
Cloud guide, Cloud Security Alliance, December 2010. 
More Google Product, http://www. google.com/options/, December 2010. 
www.businesslink.gov.uk/bdotg/action/, December 2010. 
 
38 
 Management and Organization Behavior 
 Management Education 
 Management Information System 
 Managerial Consultation 
 Marketing 
 Operations Management 
 Organizational Development and Change 
 Non-Profit Sector Management 
 Research Methods 
 Social Issues in Management 
 Technology and Innovation 
 Web Technology and Management 
 Other Relevant Topics 
 
四、 與會心得 
此次出席會議的專家學者來自多個國家，包括：美國、香港、中國大陸、日本、韓國、
法國、英國、澳洲及台灣。台灣地區則包括清華大學、台北大學及本校朝陽科技大學、…等。
本校能以私立學校的研究成果，與這麼多國立優秀的學者在國外共同分享研究成果，真是倍
感榮幸。會議中，除了學術界的先進前輩之外，亦有許多的參與者是來自工業界及其所屬研
究機構，對於實務方面的見解與經驗，頗值得學術界做教學與研究時的參考。
 
筆 者 所 提 論 文 ， 題 目 為 『 SECURITY ENHANCEMENT BY CIPHER-BASED 
AUTHENTICATION AND KEY AGREEMENT IN A CLOUD COMPUTING 
ENVIRONMENT』，安排在第三天上午第二場的議程中發表，此篇文章在進行論文匿名審查
時，獲得 Reviewers 極高的肯定，並榮獲最佳論文的殊榮，足見國內學者的研究已有國際性的
水準。
 
在現今資訊快速發展的時代裡，雲端運算(Cloud Computing)以分散式系統的概念改變了
傳統網際網路的應用模式。而由於進入雲端運算環境的門檻極低，提供雲端服務的成本也低
廉，使得許多企業紛紛投入雲端運算的環境，迅速提升在雲端環境中的服務種類，也使得大
40 
因為雲端運算環境中的網路服務數量與種類快速的增加，使得使用雲端服務的使用者也
急遽的驟增，而因龐大的使用者群在雲端運算環境上要求各式各樣的服務，促使在雲端環境
中交換的次數越來越頻繁，交換的資料量也越來越龐大，不止是資訊通訊方面，就連資料的
儲存量也非常的可觀。 
在目前常用於網際網路資訊通訊安全的認證流程以及加解密系統，雖然安全性很高，但
是所需要的運算資源之要求相對的也較高。雖然使用較為成熟的認證流程與加解密系統可以
提升使用者在使用雲端運算相關服務的安全性，但卻因為大量的計算而造成使用者在等待伺
服端回應的時間，以致降低雲端服務的服務品質。所以，本研究提出了一個符合雲端運算特
性的輕量計算之資料交換與認證協議，將可以加強應用服務與資料中心的通訊安全。 
由於在一般常見的雲端服務應用中，在應用服務與資料中心的需求並未進行安全的防護
，因此若是為了要提升應用服務與資料中心的安全，而利用了網際網路中較為成熟的安全機
制，將會提升系統的運算負擔並降低雲端服務的服務品質。為此，本研究依據雲端運算的特
性，提出基於加密的認證與金鑰協議(Cipher-based Authentication and Key Agreement；CAKA)
，以提供雲端運算環境中服務與資料中心的資訊通訊以及認證的安全。除此之外，更因利用
混合式動態凱薩加密系統(Hybrid Dynamic Caesar Cipher：HDCC)，來對資料交換時進行輕量
的加解密，利用較少步驟的認證流程與輕便的加解密系統，在不浪費運算資源的前提下，提
升雲端運算環境的安全性。 
因為雲端運算是一個較新的分散式系統之概念，因此若在雲端運算環境中使用傳統網際
網路的安全機制，除了運算成本不能不加以探討外，雲端運算環境所需的彈性安全機制也是
傳統網際網路的安全機制無法解決的議題。所以在未來的研究裡，將針對在雲端運算環境中
彈性的安全機制來進行探討，藉此可以提供使用者或服務供應商在雲端運算環境上使用服務
與資源時可彈性的調整所需的安全等級與安全機制。因此，除了可以保留雲端運算的特性外，
更可提供友善與彈性的安全需求。 
 
 
42 
 
會議論文集：
 
 
 
 
 
44 
最佳論文
 
 
46 
gained increased recognition. In a cloud computing environment, users have access a safety service on 
the Internet (Almulla and Chan, 2010), and the computer systems must have high security to keep pace 
with this level of activity. 
Cloud computing use virtualization technology fully utilize idle resources (Luo, 2010; Tzeng, 2010; 
Wang and Ng, 2010), to increase the operation speed and lower energy consumption. Because, there are 
a large number of services and users in the cloud-computing environment, so how to clear and effective 
virtual space separates in the virtual environment, is a major issue of cloud computing. However, when 
users access the Internet environment in the cloud computing service, there will be a large amount of 
data stored in the cloud-computing environment. To provide users with a high reliability, high stability, 
and high security of a trusted environment, hence, the security of any service in the cloud computing 
environment must to be considered (Gruschka and Jensen, 2010; Jensen et al., 2009; Kaufman, 2009). 
Therefore, must take into account the security of information exchange in the cloud-computing 
environment. As cloud computing environments are in exchange of information within the distributed 
system transparently characteristics, although do not know how the information is sent in the exchange, 
but the data may still be intercepted. In addition, it must ensure that the same physical machine in the 
cloud on the application and the user will not interfere with each other. Therefore, users can securely use 
cloud services, when a comprehensive security mechanism is provided by cloud computing environment 
(Wang et al., 2010). 
There are a huge of storage resources and processing resources in the cloud computing, it is easy to 
become targets for malicious attacks. Moreover, the point-to-point topology is adapted by cloud 
computing environment, but the way making the cloud-computing environment has more security 
threats. As more and more diverse cloud services by cloud service provider, thus attracting many users 
use the Internet cloud services, so the security requirements of information and communication is 
increasing (Amazon Web Services, 2010). Therefore, the enhancement of the information and 
communication security in cloud computing environment will be explored in this study. 
To ensure the cloud computing is safety, a mechanism to ensure the security of information and 
communication is thus necessary. Therefore, a Cipher-based Authentication and Key Agreement (CAKA) 
is proposed to provide the security authentication of service to enhance the security of cloud computing 
environment. Overall, our proposed CAKA can provide the security of information and communication 
and authentication, without wasting computing resources to enhance the security of cloud computing 
environment. 
The rest of this paper is organized as follows. The literature review is discussed in Section 2. The 
proposed CAKA is presented in Section 3. An example to illustrate the proposed method is shown in 
Section 4. Finally, Section 5 concludes this paper. 
 
2. LITERATURE REVIEW 
The security requirements of cloud computing, and the existing security data exchange will be discussed 
in this section. 
2.1 The Security Requirements of Cloud Computing 
Cloud computing environment can be divided into three levels, namely the network layer, the host layer, 
and the application layer, the information security requirements in each layer is different, as follows 
(Almulla and Chan, 2010): 
(1) Privacy: To ensure that stored in the cloud-computing environment, the information of users will not 
48 
 
 
Figure 1. The Security Protocol of Chien and Chen 
 
 
 
 
 
 
 
 
 
Figure 2. The 
group-based 
authentication and key 
agreement 
The steps of group-based authentication and key agreement are shown in follows: 
(1)  ID Request: The SN attempts to identify MSM1−1. 
(2)  ID Response (AUTHG1): Upon receiving the ID Request message, MSM1−1 generates AUTHG1 = 
(IDG1||IDM1−1||RNM1−1||MACM1−1), where IDG1 denotes the group identity, IDM1−1 is the mobile 
user’s identity, RNM1−1 represents a random number, and MACM1−1 = f 0(KM1−1, RNM1−1) for the HN 
to authenticate MSM1−1. Here KM1−1 is the pre-shared secret key with the HN. 
(3)  Authentication Data Request (AUTHG1): SinceMSM1−1 is new; the SN without knowledge of the MS 
relays the foregoing message from MSM1−1 to the HN. The HN shall authenticate the roaming group 
(G1) which MSM1−1 belongs to. 
(4)  Authentication Data Response (AUTHH): The HN verifies the received MACM1−1 in AUTHG1 using 
KM1−1 (the pre-shared key with MSM1−1). If MSM1−1 is found authentic, the HN retrieves the 
50 
encryption, and then insert the two cipher text letters in front of the serial number, so the number of 
transposition of the direction and displacement of the transposition encryption. When the data is 
extracted, the message can be done by inserting a basis for the decryption. 
The symbols of HDCC used are defined as follows: 
k = (n + m) mod n: the total number of moving position.  
Where,  
n: the number of the set of words. 
o: the length of the string. 
m: the movement direction and the number of position. 
E(x) = (x + k) mod n: Dynamic Caesar encryption algorithm. 
F(z) = (z + k) mod o: Transposition encryption algorithm. 
P(x) = (x - k) mod n: Dynamic Caesar cipher algorithm. 
Q(z) = (z - k) mod o: Transposition cipher algorithm. 
Where, 
x: the serial number of character (the first word is 0, the second character is 1, ..., and the 
last word is n -1).  
z: the serial number of string (the first word is 0, the second character is 1, ..., and the last 
word is n -1). 
The steps of HDCC encryption are shown in following: 
(1) Collection of computing the number of packet character string length n, and o. 
(2) To generate the movement direction and the number of position (m) by the random number 
generator. 
(3) To compute the total number of moving position by using k = (n + m) mod n. 
(4) To replace the encrypted plaintext by using E(x) = (x + k) mod n. 
(5) For the transposition cipher encryption by using F(z) = (z + k) mod o. 
The steps of HDCC decryption are shown in following: 
(1) To perform the transposition of the decryption by using Q(z) = (z - k) mod o. 
(2) To perform the decryption of cipher text by using P(x) = (x - k) mod n. 
3.2 Cipher-based Authentication and Key Agreement (CAKA) 
CAKA particular emphasis on applications and data centers demand for services between the 
certification and exchange of information security. CAKA use HDCC as encryption system, and the 
packet should be added to the front of the original encryption key to replace K, to encrypt the data once 
again, in addition to improve data security, but also will not waste too much Computing resources. The 
CAKA is shown in Figure 3. 
The symbols of CAKA used are defined as follows: 
SCold: The old application service code stored in the application server. 
SCnew: The new application service code stored in the application server. 
Kold:  Old keys stored in the application server and data center. 
Knew: New keys stored in the application server and data center. 
X: To identify the new or old key code. 
A B:⊕  A and B to do the operation XOR. 
A→B: A sends data to B. 
Pseudo Random Number Generator(PRNG): A random number generator. 
The progression steps of CAKA are shown in follows: 
52 
side, you can ensure that the information being stolen or intercepted, the application service code, and 
the numerical keys will not be informed. CAKA more use of encryption and decryption system of 
HDCC to protect the service demand and data, so the encrypted information is not exposed can be 
confirmed, and data security can be ensured. 
In addition, CAKA uses the of old and new application service code and the decryption key to 
maintaining the security of authentication and data protection level. Each successful authentication, and 
access to information resulting from the application of the new service code and key, and replace the 
code has been used and the key. CAKA uses of this approach can ensure that the application service 
code, and the key will not even be stolen or intercepted the next data transmission needs to be informed 
of the content. 
(2) Resource Loading: 
Only services, data center, and transmission of information, do the security authentication mechanisms 
by CAKA, not too difficult and complicated by the certification procedure and the encryption. There are 
many cloud services in the cloud-computing environment, and the service demands of user are very 
large. Safety certification and information exchange process in CAKA are not require many computing 
resources, so it will not affect the quality of cloud services. 
In other words, our proposed CAKA, the relatively simple HDCC encryption is used to encrypt the data 
once again, in addition to improve data security, but also will not waste a lot of computing resources. In 
other words, our proposed CAKA, in addition to data center had to send out the information must be 
encrypted, this study also used a simpler HDCC encryption, encrypt the data once again, can enhance 
data security, and will not waste too much computing resources. 
(3) Attack methods: 
The proposed CAKA retained the original application of the new service code and the old and the new 
encryption key with the old model. Using the security mode of CAKA, even if the data being stolen or 
people who are interested in eavesdropping, and then use the way of replay attacks cannot succeed 
certification and information. The security mode of CAKA will not make the original stored data center 
applications is the code to replace the key is repeated, resulting in application server authentication 
cannot be successful. However, the security mode of CAKA can prevent re-sent by people who are 
interested the Denial of Service (DoS) attacks, hence, the application server can be certified and the 
normal application server and data center security can be enhanced.
 
 
5. CONCLUSION 
Cloud computing is a new concept in distributed systems. It is currently used mainly in business 
applications in which computers cooperate to perform a specific service together. In addition, the 
Internet applications are continuously enhanced with multimedia, and vigorous development of the 
device quickly occurs in the network system. As network bandwidth and quality outstrip computer 
performance, various communication and computing technologies previously regarded as being of 
different domains can now be integrated, such as telecommunication, multimedia, information 
technology, and construction simulation. Therefore, cloud computing is currently used many commodity 
computers that can cooperate to perform a specific service together. Thus, applications associated with 
network integration have gradually attracted considerable attention. 
In a cloud-computing environment, users can access the operational capability faster with Internet 
application, and the computer systems have the high stability to handle the service requests from many 
54 
Dissertation of National Chiao Tung University. 
Wang, G. and Ng, T.S.E. 2010, The Impact of Virtualization on Network Performance of Amazon EC2 
Data Center, Paper presented at Proceedings of the 29th IEEE Conference on Computer 
Communications (IEEE INFOCOM), San Diego, 1-9. 
Wang, L.C., Ren, K., Lou, W.J. and Li, J. 2010, Toward Publicly Auditable Secure Cloud Data Storage 
Services, IEEE Network, 24 (4), 19-24. 
Yeh, T.C., Wang, Y.J., Kuo, T.C. and Wang, S.S. 2010, Securing RFID Systems Conforming to EPC 
Class 1 Generation 2 Standard, Expert Systems with Applications, 37 (12), 7678-7683 
Zhao, H.W. and Liu, R.X. 2009, A Scheme to Improve Security of SSL, Paper presented at Proceedings of 
the 2009 Pacifi-Asia Conference on Circuits, Communications and Systmes (PACCS), Chengdu, 
401-404. 
Amazon.com: Online Shopping for Electronics, Apparel, Computers, Books, DVDs & More, March 
2010, http://www.amazon.com/. 
Amazon Web Services, March 2010, http://aws.amazon.com/. 
 
 
97 年度專題研究計畫研究成果彙整表 
計畫主持人：王淑卿 計畫編號：97-2221-E-324-007-MY3 
計畫名稱：具安全機制之協議問題在有線與無線整合網路架構下之最佳化協定 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 5 5 100%  
研究報告/技術報告 0 0 100%  
研討會論文 20 20 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 5 5 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
 
