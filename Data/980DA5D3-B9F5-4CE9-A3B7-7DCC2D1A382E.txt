∑∑ ∈
∈
−=
v
i
v
i
Nvj
ijij
Nvj
ij
i vvww
vL )(1)( ,             (1) 
where  is a user-defined weight, which may be a constant or a weighting function of the distance between 
vertices  and . 
ijw
iv jv
When the Laplacian operator in Equation (1) is applied recursively to the mesh model, it causes the model to 
shrink a little as each iteration step is applied. To avoid this problem, Taubin (1996, 2000) proposes the use of two 
parameters, λ  and μ , in the following iterative procedure: 
⎩⎨
⎧
+=′
+=
)(
)(
mm
m
VLVV
VLVV
μ
λ
,              (2) 
where  is the new vertex position after filtering. In Taubin’s approach, a Laplacian filter is first applied to 
smooth a polygon model, after which another Laplacian filter is applied to enlarge the smoothed model to 
compensate for shrinking. 
V ′
Although low pass filters, such as Taubin’s, have a good overall smoothing effect, they may not preserve the 
fine structure portion of a mesh model due to over-smoothing. To overcome this problem, Meyer et al. (2002) 
propose an anisotropic filter design for feature preserving that smoothes the polygon mesh, but does not blur the 
fine structures. This design, which is a modification of the mean curvature flow (MCF) proposed by Desbrun et al. 
(1999), is defined as follows: 
NwNHwvAM i ˆ)2
)(,(ˆ),()( 212121
κκκκκκ +−=−= ,         (3) 
⎪⎪
⎪
⎩
⎪⎪
⎪
⎨
⎧
=
=
=
>>>
≤≤
−
=
),,min(
),,min(
),,min(
0
1
/
/
0
1
),(
21
212
211
2121
21
2
121
HHif
Hif
Hif
andTandTif
TandTif
H
Hw
κκ
κκκ
κκκ
κκκκ
κκ
κ
κκκ ,        (4) 
where 2/)( 21 κκ +=H  is the mean curvature, 1κ  and 2κ  are the two principal curvatures, and  is the 
normal of vertex . In Equation (4), an MCF is ordinary when 
Nˆ
iv ),( 21 κκw  is equal to 1; a corner preserving filter 
when ),( 21 κκw  is equal to 0; and an edge preserving filter for the other three cases. Thus, T in Equation (4) is a 
preset threshold value for classifying the vertex as an edge, a corner, or a non-feature vertex. The operations of the 
original MCF and the anisotropic MCF can be represented graphically. Chen et al. (2004) present a similar 
approach for the selection of the best threshold T, based on an anisotropic MCF using the Bayesian classification in 
each iteration step. Clarenz et al. (2000) propose a different anisotropic MCF approach to Meyer et al.’s. They use 
the principal curvature to evaluate local sharpness, and a curvature based function  as a weighting function 
to determine the diffusion of a vertex in three directions, i.e., two directions of the principal curvatures and one 
direction of the vertex normal. Clarenz et al.’s filter design is expressed as follows: 
)(sG
NNzddzGddzGzD ˆ)ˆ())(())(()( 222111 ⋅+⋅+⋅= κκ ,         (5) 
⎪⎩
⎪⎨
⎧
>
≤
−
−+= − θλ
θλ
λθ
θλ
sif
sif
ssG 1
22
2
)
)1(
)(
1(
1
)( ,           (6) 
where  is an anisotropic diffusion tensor in the space formed by three mutually orthogonal vectors )(zD { }Ndd ˆ,, 21 ; 
z is a displacement vector; and θ  and λ  are user-defined threshold values for differentiating vertex types. Other 
researchers, such as Bajaj and Xu (2003), propose a variation of this approach by combining an anisotropic 
diffusion model with a limit function to control Loop’s subdivision scheme for a two-manifold triangular mesh, 
which yields a  continuous mesh model. Tasdizen et al. (2002, 2003) propose another anisotropic surface 
diffusion scheme based on filtering surface normals via a second-order PDE that minimizes the energy function 
. They then use another second-order PDE to adjust the surface to fit the normals obtained 
from the first PDE. 
1C
∫ += S dSSE )()( 2221 κκ
Another anisotropic filter design for feature preserving is the composite kernel filter, such as the bilateral filter 
proposed by Fleishman et al. (2003) and Jones et al. (2003). The bilateral filter for polygon mesh smoothing is an 
extension of the bilateral filter for 2D images (Tomasi and Manduchi, 1998). The design concept is based on 
 
 
(a)              (b)              (c)              (d) 
 
Figure 2. Smoothing results of surface normal based filters. (a) a noisy cube model; (b) after applying a mean-filter 
(Yagou et al. 2002); (c) after applying a median filter (Yagou et al. 2002); (d) after applying our proposed 
sharpness dependent filter. 
 
We have, therefore, designed our proposed sharpness dependent filter as a surface normal based ranking filter 
that adaptively adjusts itself to a rank between a mean-filter and a min-filter. In other words, the algorithm applies 
a mean-filter when non-feature preserving is needed, a min-filter for edges and corners, and a filter between the 
mean- and the min-filters if a certain sharpness is required. In the following, we describe the sharpness dependent 
filter design for a polygon mesh in detail. 
 
4. The sharpness dependent filter 
The major contribution of this paper is to present a sharpness dependent filter design for polygon mesh 
smoothing, based on the concept of a ranking filter design. The basic concept is to employ a sharpness dependent 
weighting function to determine a polygon face normal that lies between the mean normal and the closest normal 
of its neighboring faces. While sharpness is a measure of the distribution of the angles between normals, the 
sharpness dependent weighting function is defined as the distribution of sharpness. The cutoff value of sharpness 
for sharp and non-sharp is obtained by applying the algorithm of the Bayesian classification, a technique often 
used in pattern recognition. The algorithm of our sharpness dependent filter design can be stated as follows: 
1) Apply Equation (7) to compute the mean normal  for each polygon face . im if
2) Determine the closest face normal, iη , for each  by the following steps: if
[1] Calculate the angle  between  and , ),(
ji ffij
nnφφ =
if
n
jf
n
)|,(),( fijffff Nfnnnn jiji ∈∠=φ ,           (9) 
where the value of  is normalized in a range [0,1]. ),(
ji ff
nnφ
[2] Find the minimum value  of miniφ ijφ , 
)|min(min fijiji Nf ∈= φφ ,             (10) 
where the closest face normal, iη , has the minimum angle of all neighboring face normals of ijφ ; that is, 
. min),( iifin φηφ =
3) Calculate the local sharpness, , for each face from the variance of the angle between the  face normal 
and its neighboring face normals 
is thi −
∑
∈
−=
f
ij Nf
m
iijf
i
i
N
s 2)(1 φφ ,             (11) 
where ∑
∈
=
f
ij Nf
ijf
i
m
i
N
φφ 1 , so that a surface adjacent to an edge or a corner will be assigned a large sharpness 
value because a large discrepancy occurs between the face normals. 
4) Compute a new face normal for each surface by applying the following sharpness dependent function: 
⎪⎩
⎪⎨⎧ =′
−+=
nnn
sWmsWn
if
iiii η))(1()( ,            (12) 
where  is the new face normal of polygon face , and  is a user-defined sharpness dependent 
weighting function. 
if
n′ if )(sW
5) Update each vertex position by applying Equation (8) to complete one of the iteration steps. 
6) Proceed to the next iteration step if a final steady state has not been reached. The procedure stops automatically 
if all face normals satisfy the condition: ε<′⋅−
ii ff
nn1 , where ε  is a preset tolerance for the steady state. 
function  be very small, so that from Equation (13) we obtain: )5exp()( −=thW
10
th=σ .                (16) 
From Equation (16), we can obtain the appropriate σ  value for the Gaussian weighting function. In this paper, 
we define a sharpness factor  to control the degree of sharpness for feature preserving. As 2/1−= σsf 0=sf  
represents non-feature preserving, the larger the  value the stronger the feature preserved. sf
However, the sharpness factor using the Bayesian classification only works well for a uniform distributed mesh 
model. It is rather difficult to select the best sharpness factor for a non-uniform distributed mesh model, even 
manually. Therefore, our proposed sharpness dependent filtering method is more suitable for uniformly distributed 
meshes, such as 3D laser scanned data. 
 
 
 
(a)                   (b)                  (c) 
 
Figure 4. The plots of the weighting functions: (a) the Gaussian function, (b) the Laplacian function, and (c) the El 
Fallah Ford function. 
 
Figure 5. The result of applying the Bayesian classifier: the dashed line shows where the best cutoff  is located 
according to the Bayesian classifier; the solid line shows the weighting function , where the value of  
is very small for a sharpness value larger than . 
th
)(sW )(sW
th
 
 
6. Experiment results 
In this section, we discuss the results of our experiments with several filtering algorithms for polygon mesh 
smoothing. In particular, we emphasize the comparison of our proposed sharpness dependent filtering algorithm 
with other anisotropic diffusion filtering algorithms. In Figure 6, we show the effects of feature preserving using 
different sharpness factors in our proposed sharpness dependent filtering algorithm. Figure 6(a) shows an 
octahedron mesh model, while its corrupted model is shown in Figure 6(b). Figures 6(c), (d), (e), and (f) show the 
results of applying 50 iteration steps in the algorithm for setting sharpness factors of 0, 10, 15, and 20, respectively. 
Figure 6 also shows that complete smoothness with no sharpness can be obtained when the sharpness factor is 
equal to 0. Sharp features become increasingly conspicuous as the value of the sharpness factor increases, while 
non-feature noises are smoothed. 
In Figure 7, we compare the results of our proposed sharpness dependent filter with other feature preserving 
filter approaches. Figure 7(a) is a Fandisk model and Figure 7(b) is its corrupted model with 0.1% Gaussian noise 
(the variance is equal to 0.1% of the diagonal distance of the bounding box of the model). Figure 7(c) shows the 
result after applying 16 iteration steps of our filtering method using a Gaussian weighting function with sharpness 
factor . Figures 7(d), (e), and (f) show the results of the anisotropic MCF (Meyer et al., 2002), bilateral 
filter (Fleishman et al., 2003) and median filter (Yagou et al., 2002), respectively. It can be seen that the anisotropic 
MCF fails to preserve corner features, because it uses a fixed threshold value in its weighting function to govern 
4.23=sh
Chen, C.Y., Cheng, K.Y., Liao, H.Y., 2004. Fairing of Polygon Meshes via Bayesian Discriminant Analysis. 
Journal of WSCG, 12, 175-182. 
Choudhury, P., Tumblin, J., 2003. The Trilateral Filter for High Contrast Images and Meshes. Proceedings of 
Eurographics workshop on Rendering 2003, 186-196. 
Clarenz, U., Diewald, U., Rumpf, M., 2000. Anisotropic geometric diffusion in surface processing. Proceedings of 
IEEE Visualization 2000, 397–405. 
Desbrun, M., Meyer, M., Schroder, P., Barr, A. H., 1999. Implicit fairing of irregular meshes using diffusion and 
curvature flow. SIGGRAPH’99 Conference Proceeings, 317–324. 
Fleishman, S., Drori, I., Cohen-Or, D., 2003. Bilateral mesh denoising. SIGGRAPH’03 Conference Proceeings, 
950-953. 
Gonzalez, R.C., Woods, R.E., 2002. Digital Image Processing, second ed. Prentice-Hall, New Jersey. 
Jones, T., Durand, F., Desbrun, M., 2003. Non-iterative, feature preserving mesh smoothing. SIGGRAPH’03 
Conference Proceeings, 943 – 949. 
Kobbelt, L., Campagna, S., Vorsatz, T., Seidel, H. P., 1998. Interactive multiresolution modeling on arbitary 
meshes. SIGGRAPH’98 Conference Proceeings, 105–114. 
Meyer, M., Desbrun, M., Schroder, P., Barr, A. H., 2002. Discrete differential-geometry operators for triangulated 
2-manifolds. Visualization and Mathematics Proceedings. 
Ohtake, Y., Belyaev A.G., Bogaevski I.A., 2001. Mesh regularization and adaptive smoothing. Computer-Aided 
Design, 33(4), 789–800. 
Schalkoff, R.J., 1992. Pattern Recognition: Statistical, Structural and Neural Approaches. John Wiley & Sons. 
Stewart, C.V., 1999. Robust parameter estimation in computer vision. SIAM Review, 41(3), 513-537. 
Tasdizen, T., Whitaker, R., Burchard, P., Osher, S, 2002. Geometric surface smoothing via anisotropic diffusion of 
normals. Proceedings of IEEE Visualization, 125-132. 
Tasdizen, T., Whitaker, R., Burchard, P., Osher, S, 2003. Geometric surface processing via normal maps. ACM 
Trans. on Graphics, 22(4), 1012-1033. 
Taubin, G., 1995. A signal processing approach to fair surface design. SIGGRAPH’95 Conference Proceeings, 
351-358. 
Taubin, G., 1996. Optimal surface smoothing as filter design. Research Report RC-20404. IBM Thomas J.Watson 
Research Center. 
Taubin, G., 2000. Geometric signal processing on polygonal meshes. EUROGRAPHICS 2000, State of the Art 
Report. 
Taubin, G., 2001. Linear anisotropic mesh filtering. Report RC22213. IBM Thomas J.Watson Research Center. 
Tomasi, C., Manduchi, R, 1998. Bilateral filtering for gray and color images. Proceedings of ICCV, 839–846. 
Weickert, J., 1997. A review of nonlinear diffusion filtering in scale-space. Theory for Computer Vision, Lecture 
Notes in Computer Science, Vol. 1252, Bartter Haar Romeny, Ed., 3-28, Springer, New York. 
Yagou, H., Ohtake, Y., Belyaev, A., 2002. Mesh smoothing via mean and median filtering applied to face normals. 
Geometric Modeling and Processing Proceedings, 124-131. 
 
 
 
 
      
 
(a)          (b)           (c)           (d)           (e)          (f) 
 
Figure 6. Various sharpness factors applied to a noisy octahedron mesh model. (a) the original octahedron mesh 
model; (b) its corrupted model; (c), (d), (e) and (f) the results obtained by applying the sharpness dependent filter 
with a sharpness factor equal to 0, 10, 15 and 20, respectively (using a Laplacian weighting function). 
 
 
