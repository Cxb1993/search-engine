plex systems are usually large, hence complex systems are also called ‘large-scale
systems’.
Design problems for large-scale systems are challenging due to their complex
structures and functional relations across disciplines. Although these systems
can achieve better performance requirements and functionality, they also become
less intuitive for engineers to analyze. Computer simulations or various numer-
ical methods are essential elements for engineers to analyze the performance of
a particular design. However, large-scale systems can seldom be analyzed via a
single simulation. Simulations or engineering codes from different disciplines at
different platforms are necessary in predicting the system performances. Even if
a single simulation does exist to analyze the performance of a large-scale system,
the cost is generally too high to be practical.
An alternative approach in solving complex large-scale systems is to decom-
pose the original system into ‘smaller’ (easier-to-solve) subsystems. Various ap-
proaches in decomposing a system have been discussed in the literature. Three
common decomposition techniques in the design literature are ‘object’, ‘aspect’,
and ‘sequential’ decompositions [1]. “Object decomposition divides a system
into physical components. Aspect decomposition divides a system according to
the different specialties involved in its modeling, and it is the basis for multidis-
ciplinary optimization (MDO). Sequential decomposition is applied to problems
involving flow of elements or information.”
Interactions of solvable subsystems provide a viable approach for design and
analyses of unsolvable large-scale systems. The coordinations between the in-
formation of each subsystem ensure the final result satisfy the overall system
requirements. Among different coordination strategies, analytical target cas-
cading (ATC) is one of the common approaches in the literature that focus on
studying the accuracy and efficiency of subsystem interactions.
Originated from the automotive industries, analytical target cascading (ATC)
has been demonstrated in many engineering applications such as tolerance allo-
cation of multistation assembly line [2], vehicle suspensions [3], military vehicle
design [4], and engine piston ring/cylinder liner design. In addition to engineer-
ing field, ATC is also applied in multidisciplinary field such as architecture [5],
enterprise decision making [6], and marketing [7]. In addition to the variety of
applications, ATC has also been proven to be convergent to the original unde-
composed systems by Michelena et al. [8].
While applied in many different fields and also proven to be convergent,
the actual convergence speed of ATC rely highly on the nature of the problem.
A standard ATC process requires solving a sequence of nonlinear programming
(NLP) subproblems and then coordinates them until they are consistent. There-
fore a convergent ATC optimum consists of a sequence of ATC iterations of
several NLP subproblems. Practical convergent can sometimes be challenging.
This research develops an efficient algorithm in solving decomposed large-
scale problems using ATC. After introducing the backgrounds of analytical tar-
get cascading, the mathematical formulation of ATC will be overviewed in Sec-
tion 2. ATC on linear multilevel systems will be studied in Section 3. Section 4
introduces the sequential linear programming algorithm in solving ATC prob-
2
minimize
{x¯ij ,yi(i+1)j ,εRij ,ε
y
ij}
‖R00l −T‖+
N−1∑
i=0
∑
j∈Ei
εRij +
N−1∑
i=0
∑
j∈Ei
εyij
s. t.
∑
k∈Cij
‖wR(i+1)k ◦ (Ri(i+1)k −Ri+1(i+1)k)‖22 ≤ εRij∑
k∈Cij
‖Skwy(i+1)j ◦ (Skyi(i+1)j − yi+1(i+1)k)‖22 ≤ εyij (1)
gij(x¯ij) ≤ 0, hij(x¯ij) = 0, Riij = rij(x¯ij),
x¯ij =
[
xiij ,y
i
ij ,R
i
(i+1)k1
, · · · ,R(i+1)kiCij
]T
∀j ∈ Ei, i = 0, 1, · · · , N
The decomposed problem in Fig.1 tries to solve each subproblem individually
while at the same time ensure the consistency between subsystems. Eq.(1)
shows the overall optimization formulation of ATC as a whole. The objective
of Eq.(1) includes minimizing the Euclidean norm of the difference between
targets and responses as well as minimizing the consistency between levels and
between components. The feasibility of Eq.(1) requires satisfying the relaxed
consistency constraints to the original undecomposed problem. This relaxation
can be imposed as designers’ preferences by assigning different weights (wR(i+1)k
and wy(i+1)j). The ◦ symbol in Eq.(1) represents element-by-element matrix
product.
Figure 2 shows the information flows in and out of each subsystem ij in Fig.1.
In addition to the local design variables xij , the responses from the (i + 1)th
level, the targets passed down from the (i−1)th level , and the linking (sharing)
variables are all the inputs to subsystem ij. Outputs from ij are the responses
to the upper level, the targets to the lower level, and the linking variables values.
The goal for the element ij is to match the target from the (i − 1)th level
while keeping the consistency between itself and the (i+1)th level. After assum-
ing all equality constraints are removed explicitly or implicitly, we can obtain
the optimization problem for element ij as shown in Eq.(2). The consistency
constraints in Eq.(2) have been moved to objective function by applying mono-
tonicity principals with respect to εRij and ε
y
ij . x¯ij in Eq.(2) is the vector of all
inputs for element ij.
4
of the target matching objective in ATC will actually be favorable in solution
efficiency. In this research we propose to use the original form of target matching
in ATC with linear subsystems. Although this results in nonlinear programming
problem for each subsystem, it has certain advantages.
Figure 3 illustrates a linear objective function R = f(x) versus its target
matching ‖R − T‖22. When the linear objective is applied in addition to the
corresponding linear constraints, the problem becomes an LP problem. The op-
timum of the LP problem locates in the vortex of the feasible design space. Tar-
get matching objective changes the original linear objective into two segments
of linear functions. The location of the non-differentiable point is determined by
whether the target is an achievable target. When the target is achievable, the
problem with target matching objective as shown in Eq.(3) will have interior
optimum. The resulting objective will be R∗ = T . On the other hand, if the
the target is unachievable, the target matching objective will be linear and the
optimum of Eq.(3) will be again at the vortex.
min
x
‖R− T )‖22 (3)
s.t. g(x) ≤ 0
R = f(x)
What have been described above can be extended to linear multilevel prob-
lems. For each subsystems, the linear constraints creates a polyhedron feasible
design space. If the target cascaded down from the level above is an achievable
target, the subsystem will match that target and problem converged. If the
cascaded down target is unachievable, the subsystem optimum will be at the
vortex closest to the target. In both situations, the problem converges. Since
the feasible space is a polyhedron, no hidden optima will be expected unless the
cascaded down target changes its value.
Let us look at the top level subsystem in this case. If the target passed
down was an achievable target by the lower level, ATC process converges. On
2 4 6 8 10
2
4
6
8
10
Target Matching
R = f(x)
x
Figure 3: Linear Objective and the Matching Objective in ATC
6
Updated Design
Acceptable?
Reduce 
Trust 
Region
Converged?
Optimum
Initial Design
Current 
Design
Yes
Update 
Design
Yes
No
Start up step
Initialization Step
LATC Step 1
LATC Step 2
No
initialization
subproblem 
generation
subproblem 
solution
acceptance of 
the trial point
trust 
region 
update
Figure 4: LATC Algorithm
Subproblem generation :
Based on the current design point, subproblems in ATC is linearized to form
LATC. Within each iteration, the LATC consists of four main steps, namely
the startup step, the initialization step, the LATC step 1 and the LATC step 2.
The functionality of each step is described as follows:
• start up step : Provide the initial starting point and the initial trust
region of all subsystems. If some of the subsystems are not provided with either
information, the starting point and trust region can be calculated via
• initialization step : Based on the trust region and starting point at each
level, a top-down approach is employed to the LATC in obtaining the initial
target values of each subsystem.
• LATC step 1 : Given the initial targets from the levels above of each
8
hf dominated by B
A
B
C
D
Figure 5: Non-dominated entries in the filter
the filter and has an actual reduction ∆fk and a predicted reduction ∆lk that
satisfy the sufficient reduction criteria in Eq.(8) below, where hk is the short
form of h(g′(µkX)) and ζ is a user-selected parameter with values within the
range (γ, 1).
∆fk = f(µk+1X )− f(µkX) ≥ ζ∆lk , with ζ ∈ (γ, 1) (8)
∆lk = ∇fT · s ≥ λ(hk)2 , with λ > 0
If an iteration acceptable to the filter has a pair {h, f} that satisfies Eq.(9),
then is is called an h-type.
∆lk < δ(hk)2 (9)
An f-type iteration aims at reducing the objective function value while possibly
increasing infeasibility. An h-type iteration, on the other hand, aims at decreas-
ing infeasibility while possibly increasing the objective function. Following [12],
not all acceptable {h, f} entries are added to the filter; indeed only h-type iter-
ations are added into the filter.
Trust region update :
While an unacceptable ‘candidate’ is encountered, the trust region will be re-
duced by half and the current LATC with the reduced trust region will be solved
again. This trust region reduction step will be performed until an acceptable
‘candidate’ is obtained.
5 Subproblem Generation Process
Section 4 has provided guidelines of LATC for multilevel systems. The main
difference between a standard SLP algorithm and the proposed methodology lies
in the subproblem generation using sequential linearization to approximate non-
linear hierarchical systems. In this section, the mathematical implementations
of the subproblem generation process will be discussed in more details.
Consider the simplest multilevel problem, a bi-level system with one subsys-
tem at each level as shown in Fig.6. Notations in Fig.6 are : the overall targets
10
variables, ∆(k)1 and ∆
(k)
0 , and at each iteration are known. These trust regions
determines the limits the design variables can move. Therefore the bottom
level trust regions will be propagated to the top as the top level trust regions
∆′(k)0 . Top level design variables R
0
1 is restricted by the trust region specified
via the consistence tolerance εR. To allow designers specifying the trust regions
of R10, Eq.(12) uses the minimal value of εR and ∆
′(k)
0 as the trust region of the
subproblem Eq.(12).
With the LATC formulation at the kth iteration available, the subproblem
generation of the algorithm consists of the following steps :
Lower Level
Top Level
1
2 3
r1
R
0
1 R
1
1
min
x¯0
fˆ
(k)
0 (x¯0) + εR
s. t. gˆ(k)0 (x¯0) ≤ 0
x¯0 = [x0,R01]
‖R01 −R
1(k)
1 ‖ ≤ max(εR,∆
′(k)
0 )
‖x0 − x
(k)
0 ‖ ≤ ∆
(k)
0
min
x¯1
fˆ
(k)
1 (x¯1)
s. t. gˆ(k)1 (x¯1) ≤ 0
‖x¯1 − x¯
(k)
1 ‖ ≤ ∆
(k)
1
x¯
(0)
1 ∆
(0)
1
∆
′,(0)
0R
1,(0)
1
4
Figure 7: Bi-Level LATC iteration
• startup run 1©
Provide the initial starting point and the initial trust region of all subsystems.
If some of the subsystems are not provided with either information, the starting
point and trust region can be calculated via
R1(0)1 = r1(x¯
(0)
1 ) (14)
∆′(0)0 =
∂r1
∂x¯1
∣∣∣∣
x¯
(0)
1
∆(0)1 (15)
12
AIO-NLP
AIO-SLP
ATC-NLP
ATC-SLP
1
2
3
4
Figure 8: LATC Convergence Arguments
convergent to AIO-NLP regardless of the algorithms used. Therefore we are
able to link ATC-NLP with AIO-NLP via 1©.
Fletcher et al. [12] have shown that the filter-based algorithm as the one
used in this research ensures that the entries in the filter will eventually satisfy
the Friz-John optimality condition. In addition, the design that are initially not
acceptable to the filter will eventually be accepted as the trust region goes to
zero. Therefore the link between AIO-NLP and AIO-SLP 2© is also valid.
The LATC algorithm intends to link the standard ATC-NLP approach with
the ATC-SLP as shown as 4© in Fig.8. With 1© and 2© being true, we need to
show that 3© is true, which means for each iteration k, AIO-SLP(k) = ATC-
SLP(k).
Without loss of generality, let us look at an NLP problem with objective
function f and constraints g ≤ 0 and its decomposed bilevel system, which has
top level objective function f0, constraints g0 ≤ 0 and bottom level objective
f1 and constraints g1 ≤ 0. AIO-SLP approximate objective and constraints as
fˆ and gˆ. ATC-SLP approximate the top level objective and constraints as as
fˆ0 and gˆ0 and bottom level objective and constraints as as fˆ1 and gˆ1
∇fˆ (k) + µ∇gˆ(k) = 0
µgˆ(k) = 0 (18)
µ ≥ 0, gˆ(k) ≤ 0
The Karush-Kuhn-Tucker (KKT) conditions of kth AIO-SLP are shown in
Eq.(18) with Lagrange multipliers µ. The KKT conditions of ATC-SLP top
and bottom subsystems are Eq.(19) and (20) with Lagrange multipliers being
µ0 and µ1, respectively.
∇fˆ (k)0 + µ0∇gˆ(k)0 = 0
µ0gˆ
(k)
0 = 0 (19)
µ0 ≥ 0, gˆ(k)0 ≤ 0
∇fˆ (k)1 + µ1∇gˆ(k)1 = 0
µ1gˆ
(k)
1 = 0 (20)
µ1 ≥ 0, gˆ(k)1 ≤ 0
The α-separable scheme in ATC [13] ensures the convergence of the proposed
method. The function dependence table (Fig.9) decomposes the AIO-SLP into
14
min
x
f = x21 + x
2
2 (22)
subject to g1 : x−23 + x
2
4 − x25 ≤ 0, g2 : x25 + x−26 − x27 ≤ 0
g3 : x28 + x
2
9 − x211 ≤ 0, g4 : x−28 + x210 − x211 ≤ 0
g5 : x211 + x
−2
12 − x213 ≤ 0, g6 : x211 + x212 − x214 ≤ 0
h1 : x21 − x23 − x−24 − x25 = 0, h2 : x22 − x25 − x26 − x27 = 0
h3 : x23 − x28 − x−29 − x−210 + x211 = 0
h4 : x26 − x211 − x212 − x213 + x214 = 0
∀x = [x1, x2, · · · , x14] ≥ 0
GP-PS
GP-
PSS1
GP-
PSS2
Figure 10: Bi-level structure of GP
GP-PS : minimize
x1,··· ,x7,ε1,ε2,ε3
w0(x21 + x
2
2) +
3∑
i=1
wiεi
subject to
(x11 − xL11ss1)2 + (x11 − xL11ss2)2 ≤ ε1 (23)
(x3 − xL3 )2 ≤ ε2, (x6 − xL6 )2 ≤ ε3
g1 : x−23 + x
2
4 − x25 ≤ 0
g2 : x25 + x
−2
6 − x27 ≤ 0
GP-PSS1 : minimize
x3,x8,··· ,x11
w10(x3 − xU3 )2 + w11(x11 − xU11)2
subject to g3 : x28 + x
2
9 − x211 ≤ 0 (24)
g4 : x−28 + x
2
10 − x211 ≤ 0
16
0 50 100 150 200 250 300
20
40
60
80
100
Op
tim
al 
ou
tp
ut
s f
ro
m
 th
e 
TO
P
0 50 100 150 200 250 300
2
2.2
2.4
2.6
2.8
x3
0 50 100 150 200 250 300
2.5
3
3.5
4
4.5
5
x6
0 50 100 150 200 250 300
1
1.5
2
2.5
3
x1
1
Figure 11: Optimization history of standard ATC
0 50 100 150 200
20
40
60
80
100
Op
tim
al 
ou
tp
ut
s f
ro
m
 th
e 
TO
P
0 50 100 150 200
2.5
2.6
2.7
2.8
2.9
3
3.1
3.2
x3
0 50 100 150 200
2.6
2.8
3
3.2
3.4
3.6
x6
0 50 100 150 200
1
1.5
2
2.5
x1
1
Figure 12: Optimization history of LATC
A filter consists of constraint violations and objective function values is used
in the algorithm to determine where the ‘candidate’ design point at each it-
eration is acceptable. This filter also ensures the convergence of the proposed
algorithm to the original undecomposed system.
Although proven to be convergent and also shown to be efficient in the
example, the practical convergence of the LATC method might encounter dif-
ficulties. The initial design point is an important factor in the convergence of
the algorithm. Infeasible design point requires a large step to be feasible in the
subsequent iteration. Eq.(6) is important in providing an efficient convergent
result. Whenever possible, a feasible starting point is suggested for the proposed
LATC algorithm to ensure feasible direction is found.
This filter-based algorithm has parameters that need to be determined by
users. Although the values of these parameters will not change a convergent
result, they might affect efficiency significantly. The suggested ranges of each
18
0 10 20 30 40 50 60 70 80 90 100
15
20
25
30
35
40
45
50
55
60
65
!2 !1 0 1 2 3 4 5
16
17
18
19
20
21
22
23
24
fk
hk
Figure 13: Filter entries
10 Self-Evaluation
The current status of the algorithm can be generalized as a software package
that can be readily available for public. Results and the progressing of the
research resembles what have been proposed in the initial proposal. The sec-
ond phase of the algorithm requires adding random variables in the multilevel
structures and study the impacts to the algorithm. ASME design community
is highly interested in any methodology that can handle complex problems un-
der uncertainty and the results of this research can be significant after further
investigations.
References
[1] N Michelena and P Papalambros. A hypergraph framework for optimal
model-based decomposition of design problems. Computational Optimiza-
tion and Applications, 8:173–196, Jun 1997.
[2] Z Li, J Yue, M Kokkolaras, J Camelio, P Papalambros, and J Hu. Prod-
uct tolerance allocation in compliant multistation assembly through vari-
ation propagation and analytical target cascading. In Proceedings of 2004
ASME International Mechanical Engineering Congress and Exposition, vol-
ume IMECE2004-60521, November 13-19 2004.
[3] H Kim, N Michelena, P Papalambros, and T Jiang. Target cascading in
optimal system design. Journal of Mechanical Design, 125(3):474–480, Aug
2003.
[4] M Kokkolaras, L Louca, G Delagrammatikas, N Michelena, Z Fillipi, P Pa-
palambros, J Stein, and D Assanis. Simulation-based optimal design of
20
 1 
出席國際學術會議心得報告 
                                                             
計畫編號 NSC 96-2221-E-006-215 
計畫名稱 針對複雜系統可靠度最佳化設計之數學模型及收斂性質探討 
出國人員姓名 
服務機關及職稱 
成功大學機械工程學系助理教授 
詹魁元 
會議時間地點 民國97年8月2日至8月8日，美國紐約市 
會議名稱 美國機械工程師學會2008機械設計年會 
發表論文題目 A Sequential Linearization Technique for Analytical Target Cascading 
 
一、參加會議經過 
目的： 
美國機械工程師學會機械設計年會(American Society of Mechanical Engineers International 
Design Engineering Technical Conference)每年均會在美國不同地方召開，本次會議舉辦於紐約
市中心，除發表研究論文外，並參與會議委員會的召開及下次會議的工作事項分配。 
 
過程：  
8月2日至8月3日 
搭乘長榮班機到洛杉磯，後隨即轉機至紐約甘迺迪機場，抵達後搭乘地鐵到達會議中心The 
Brooklyn Marriott Hotel 
 
8月3日 
與羅格斯大學(紐澤西州立大學)機械及航太工程學系教授賈海倉教授會面，賈教授今年受成大
機械系之邀請訪問一週，後並被工學院聘任為國際兼任教授，賈教授之專長與聲望對於提昇
我們實驗室(系統最佳化實驗室)在國際間的知名度有很大的幫助。晚上接受賈教授的邀請與他
的研究生舉行晚宴座談。 
 
 3 
基本概念，使其能維持足夠的效率並不影響精確度。有部份的研究人員利用模糊理論
將不確定因素加入基因演算中，以其得到產品在具有變動因子下的性能評估。 
 
8月5日：發表論文 
A Sequential Linearization Technique for Analytical Target Cascading 
複雜系統諸如飛機或汽車等均無法用單一模擬器或模擬軟體完成其性能的細部評估， 
因此複雜系統有時亦被稱為大型系統。這樣的系統牽涉到多個次系統及其下許多元件之
間的作動，也增加了設計及分析的困難。解析目標層遞法(analytical target cascading)是
一個專為複雜系統所設計的最佳化方法，在將複雜系統依照作動原理分解成多層結構
後，解析目標層遞法讓各次系統及元件獨立進行設計，設計結果在層級中互相傳遞，以
確定訊息流通達到一致。本研究提供解析目標層遞法的解答形式，以線性的概念提昇解
析目標層遞法的效率。雖然線性演算法在非線性系統上已有效率不彰的問題，但多層次
的非線性系統除了本身需收斂外，各層次之間之妥協也需要許多運算時間，線性系統可
是將各層次的妥協加快，故整體效率可加以改善。 
 
8月6日至8日： 
搭美國航空由紐約至洛杉磯，後轉長榮班機回台，因路程加時差，抵達台灣時間為8日清晨。 
 
