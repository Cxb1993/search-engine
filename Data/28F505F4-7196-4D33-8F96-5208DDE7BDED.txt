1單一簽入認證機制之研究及其 FPGA 實現
On the study and FPGA implementation of the remote authentication for single-sign-on systems
學門領域：資訊一 (資訊安全)
計畫編號：NSC 94-2213-E- 274 -006
執行期間：94 年 8 月 1 日 至 95 年 7 月 31 日
執行單位：吳鳳技術學院 電機系
主 持 人：李永振
共同主持人：郭文中
參與講師：許瑞龍
參與學生：李珮如、吳國熙、顧元年、鄭賀文
摘要
單一簽入機制提供使用者僅需輸入一次通行碼，即能簽入各應用系統，方便使用者獲取
網路各種服務。迄今許多單一簽入機制缺乏移動性，即使用者僅能在某一特定主機上進行簽
入。本計畫提出二種簡單之單一簽入機制，此機制不僅達到單一簽入之目的並具移動性，能
提供使用者在任意一台主機上執行簽入，且可避免通行碼猜測攻擊。
關鍵詞：單一簽入、智慧卡、通行碼認證、猜測攻擊。
Abstract
Single-sign-on systems allow users to login networks for services with only a set of password.
Many single-sign-on solutions available today are lack of mobility or even insecure. In this project,
we propose two new single-sign-on solutions with the merits of mobility and resisting password
guessing attacks.
Keywords: single-sign-on, smart card, password authentication, guessing attack.
1. Introduction
Networks are very important media for people to obtain various kinds of information. Service
providers provide users services through networks. In these days, for obtaining various services,
people usually have many different network accounts such as web-shops, work accounts, ISP,
e-mail, online-banking etc. Each account needs at least one set of password to login, as a result
people have to manage a lot of various passwords. Having several passwords for each user will lead
to a big trouble on password management. People are probable to write down their passwords or to
use the same password for different accounts. Unfortunately, systems with these approaches always
security flaw since they can be easily attacked. Therefore, it needs to find better solutions for users
2Auc: authentication center.
Apub _ : public key of A.
Apri _ : Private key of A.
K: session key with at least 128 bit length.
KM )( : message M is encrypted or decrypted with session key K by using symmetric
cryptosystem.
ApubM _}{ : message M is encrypted with A’s public key by using asymmetric cryptosystem.
ApriM _}{ : message M is signed with A’s private key by using asymmetric cryptosystem.
AB: M: A sends message M to B.
3. The smart card based mobile single-sign-on system
Let x be the secret of the authentication center. The system includes registration and login
phases. All users should register to the authentication center before login the system. The center
sends each user a smart card after registration.
3.1 Registration phase
The registration phase is as follows and it is shown in Fig.1.
Step R.1. UAuc: ID, PW
The user forwards his/her identity ID and password PW to the authentication center personally
or through a secure channel.
Step R.2. AucU: smart card
The Auc verifies ID and PW to authenticate user. After the user is authenticated, the center
computes PWxIDhS  )( and stores it with a secure hash function )(h into a smart card.
Then the center sends the smart card to the user U.
3.2 Login phase
3.2.1 User logins to a service provider
When a user wants to login a service provider for services, he/she inserts smart cart to the
cardholder. The login phase is as followings.
Step L.1. USP: 121 ,,, TCCID
systemon-sign-singlemobilebasedcardsmarttheofphaseonregistratiTheFig.1.
cardsmartintoInstall
CardSmart
S
PWxIDhS
PWID
 )(
,
AucSPUser
421' KKK  .
Finally, the user will be authenticated if )'()( KhKh  . Thereafter, the user and the
service provider can communicated securely with session key K. For illustration, the login
steps are shown in Fig.2.
3.2.2 User logins to another service provider
If the user wants to login another service provider (SP’) for service, the procedures are as 
follows:
Step L.7. USP’: 6C
The user generates a new partial session key '1K and sends 6C to the service provider,
where
'_16 )',,',( SPpubSPIDKTokenC 
systemon-sign-singlemobilebasedcardsmarttheofstepsloginTheFig.2.
Verify
Obtain
Check
Generate
verifyandObtain
)(
generate
Verify
}
checkandObtain
Check
Generate
)(?)'(
'
)}(,{
),,,(
},),(),{(
,,),(,{
,,,
,,,
),(
21
2
5
_25
21
2
1
4
)(14
1
3
_3
_2
1
121
121
12
1
KhKh
KKK
K
Token
C
KhKC
KKK
K
TokenK
C
SPIDKTokenC
K
Token
C
SPIDRhTokenC
TAucAssertionRhIDToken
R
T
TCCID
TCCID
TRhC
RPWSC
R
SPPub
Rh
SPPub
AucPri








AucSPUser
6length of the password. If an attacker tries to guess the password, the server will reject the
illegal attempt by limiting the number of fail trials.
(4) It can resist off-line password guessing attacks and protect the smart card. In general, the
off-line guessing attack can be avoided if there are no enough messages for the attacker to verify
his/her guessing. The attack falls into either of the cases below:
(a) The attacker has no smart card. Since R and x are unknown, an attacker cannot generate 1C
and 2C consistently to masquerade a legal user. That is, the scheme can withstand off-line
guessing attacks when attackers have no smart card.
(b) The attacker has stolen or somehow obtained a smart card. If the adversary obtains smart
card, he/she tries to guess password off-line. Because R is a random number changed on
each login session, 1C and 2C are renewed on each session even if the timestamp remains
the same. If an attacker obtains the smart card and knows 1C and 2C at a previous
successful login, he/she still cannot verify his/her guess because 1C and 2C are changed
on each trial. Thus our new scheme can resist off-line password guessing attacks and protect
the cardholder even if the smart card is lost.
(5) It can resist replay attacks. Since both 2C and Token include timestamps, the server can detect
replay attacks if an attacker resubmits an intercepted message. The nonce can also be used to
resist the replay attack.
(6) It does not require any password verification table. For an authentication system with a
verification table, a hacker usually attacks the system by obtaining or modifying the verification
table. The proposed scheme can resist such attacks since there is no verification table at the
server end.
(7) It can resist service provider impersonate attack. In the system, Token is signed by Auc and only
known by Auc, SP, and the user, the adversary cannot forge 6C for a successful login. Since ID
is included in the Token, the service provider cannot impersonate a legal user to login the other
SP even though he knows user’s Token.
4. The mobile passwords based single-sign-on system
In the proposed password based single-sign-on system, users need no smart cards and it
provides users to login networks only by passwords. There is a password verification table in Auc.
The registration phase and login phase are as follows.
4.1 Registration phase
In this system, the user should also register to Auc beforehand. The user sends his/her ID and
password to Auc for registration. After registration, the user and the authentication center share a
common password PW.
4.2 Login phase
4.2.1 User login to some service provider
When user asks for services from a service provider, the login phase is as followings.
Step L.1. USP: 1C
84.3 Discussions
Like the smart card based single-sign-on system, the proposed password based single-sign-on
system also has the advantages as follows:
(1) It can resist on-line password guessing attacks. Since AucpubTRPWSPIDC _11 },,,,{ , the
attacker should guess password PW to obtain 1C for a successful login. The probability to guess
password is only PWp 2 . If an attacker tries to guess the password, the Auc will reject the
illegal attempt by limiting the number of fail trials.
(2) It can resist off-line password guessing attacks and protect the smart card. Since R is renewed
and thereby 1C is changed in each login session, the attacker cannot verify his/her guess even
he/she intercepts message at the previous login session. Thus our new scheme can resist off-line
password guessing attacks.
(3) It can resist replay attacks. Since both 1C and Token include timestamps, the server can detect
replay attacks if an attacker resubmits an intercepted message. The timestamp can be replaced
systemon-sign-singlemobilebasedpasswordTheFig.4.
Verify
Obtain
Check
Generate
verifyandObtain
)(
generate
Verify
}
Obtain
andCheck
Generate
K
KKK
K
Token
C
KhKC
KKK
K
TokenK
C
SPIDKTokenC
K
Token
C
SPIDRhTokenC
TAucAssertionRhIDToken
R
PWTSPID
C
C
TRPWSPIDC
R
SPPub
Rh
SPPub
AucPri
AucPub
21
2
4
_24
21
2
1
3
)(13
1
2
_2
_2
1
1
1
_11
)}(,{
),,,(
},),(),{(
,,),(,{
,,
},,,,{







AucSPUser
