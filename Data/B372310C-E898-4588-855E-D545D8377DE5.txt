系統單晶片多層匯流排可組態仲裁器之研發(I) 
The development of a reconfigurable arbiter in SOC multilayer bus system 
計畫編號：NSC 96-2221-E-214-068 
執行期間：96 年 8 月 1 日 至 97 年 7 月 31 日 
主持人：黃有榕 義守大學電子工程系教授 
 
一、 中文摘要 
本計劃發展一具有可組態(reconfigurable)之仲
裁器運用於系統單晶片多層匯流排 (On-Chip 
Bus; OCB)架構來達到有效增加系統效能。可組
態之仲裁器兼具動靜態混合演算法，內含一可
組態控制器，透過此可組態控制器來設定其演
算法，使得在各種不同傳輸資料分佈下，可達
到最佳仲裁效率。目前常用的四種仲裁演算法 
最高優先權、平均循環、先進先服務、隨機存
取等整合成可組態的混合仲裁器，比使用單一
方式的仲裁演算法更加有彈性和變化，並且針
對單一匯流排在多Master上傳輸的瓶頸加以修
改，讓此仲裁器能夠支援多層架構，除了能大
幅提昇傳輸效率外也保有原本彈性變化的優
點。本計劃研究重點，主要是完成一個應用於
晶片匯流排之可組態混合仲裁器和軟體分析平
台，並透過 FPGA 的硬體電路驗證。最後，藉
由  Synopsys Design Compiler 以  TSMC 
0.18 mμ 來合成仲裁器的邏輯電路。 
關鍵詞: 系統單晶片; 晶片多層匯流排; 仲裁器; 仲裁
演算法 
 
英文摘要 
This research project aims to develop the 
performance analysis and implementation of a 
reconfigurable arbiter with hybrid arbitration 
algorithms for SOC multi-layer on-chip bus 
communication This project presents the 
performance analysis and implementation of an 
arbiter with a hybrid arbitration algorithm. The 
hybrid arbitration algorithms include static fixed 
priority, round robin, first come first service, and 
random access algorithms. The analysis of various 
combinations of the arbitration algorithms 
indicates a better performance can be achieved as 
compared with the traditional arbitration 
assignment scheme. Based on the performance 
analysis, the hybrid arbitration can be 
custom-tuned to meet the design requirements. 
The implementation of the arbiter with hybrid 
arbitration scheme for On-Chip Bus applications 
is also explained and was implemented by FPGA. 
The RTL model of the reconfigurable arbiter is 
synthesized to gate-level using Synopsys Design 
Vision with TSMC 0.18 mμ  technology file.  
Key Words: System-on-Chip; On-Chip Bus; Arbiter; 
Arbitration Algorithm 
 
二、 計畫的緣由與目的 
嵌入式系統是當今 IC 設計產業發展的重
心。現今可以將以前由 CPU 和其他 I/O 晶片合
成所實現的功能在一小塊晶片中實現出來，這
就是系統單晶片(System on Chip；SoC)。它能簡
化系統的複雜度、有效的提升設計使用率，縮
短開發的時程，減少設計時發生的錯誤，降低
系統的功耗[1]。在增加整個系統模組元件的數
量時，仲裁器的優劣對整體系統上扮演十分重
要的角色。一般傳統的晶片匯流排所採用的仲
裁演算法為靜態的最高優先權仲裁演算法和動
態的平均循環仲裁演算法[2]，此種演算法容易
造成匯流排渴求(bus starvation)的缺點。常見商
分析出在相同測試環境下，不同仲裁組態的系
統效率。圖三為最不同仲裁組態下的平均等待
時間，圖四為不同仲裁組態下的 Avg. Grant 
Rate，由圖三、圖四可知混合仲裁組態較最高優
先權仲裁組態比較公平。圖五為平均等待時間
效能指標軟體模擬結果。圖六為不同資料量下
最佳與最差的仲裁組態。                                                                       
 
圖二: 仲裁演算法的效率分析圖 
 
 
圖三: 不同仲裁組態下的平均等待時間 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
圖四: 不同仲裁組態下的 Avg. Grant Rate 
 
 
圖五: 平均等待時間效能指標軟體模擬結果 
 
將本研究所提出的可組態之混合仲裁器電
路用 Verilog 撰寫完成後，再經 Design Compiler 
合成其 Gate-Level 電路。圖六為仲裁器經由 
Design Compiler 完成合成後所產生的區塊圖，
其中在合成後的訊息如表一所示。圖七:為完成
合成步驟後，經由 SOC Encounter 來接序完成
佈局(Layout)的處理所產生的佈局圖。 
圖六 Design Complier 合成後的區塊圖 
表一:Design Compiler Report 
Multi layer bus system
Combinational area (μ㎡) 48434.808594
Noncombinational area (μ㎡) 47886.855469
Net Interconnect area (μ㎡) 416828.812500
Total cell area (μ㎡) 96322.562500
Total area (μ㎡) 513150.468750
Cell Internal Power (mW) 5.8994
Net Switching Power  (mW) 1.9432
Total Dynamic Power (mW) 7.8426
Cell Leakage Power  (μW) 3.3679
NAND2X1 : 5.04 μm (height) x 1.98 μm (width)
 
Multi
0
20
40
60
80
100
120
M0 M2 M4 M6 M8 M10 M12 M14
Master
GrantRate
11111
22222
33333
44444
計畫成果自評 
 
本研究內容與計畫相符並達成預期目標情況，部份研究成果已發表於 2008 IEEE ASIA PACIFIC 
CONFERENCE ON CIRCUITS AND SYSTEMS 國際學術會議，參與之學生亦將原構想之功能驗證並完成
在其碩士論文之撰寫，希望國科會繼續補助此計畫以便繼續進行此方面之研發改良，將成果進一步
充實完善，使其成果發表於學術期刊或應用於實際 SOC 的匯流排平台上。 
System-on-Chip bus protocol for high-performance buses on 
low-power devices. The AHB is a pipelined system 
backbone bus, designed for high-performance operation. It 
can support up to 16 bus masters and slaves that can delay 
or retry on transfers. It consists of masters, slaves, an arbiter 
and an address decoder. It supports burst and split transfers. 
The address bus can be up to 32 bits wide, and the data 
buses can be up to 128 bits wide.  
The AMBA uses conventional fixed priority arbiter. Fig. 
1 shows the architecture of the reconfigurable arbiter 
presented in this work. As shown in Fig. 1, this 
reconfigurable arbiter can serve up to a maximum 16 
masters and all of them are divided into four groups F1-F4 
for the first level competition. According to different 
arbitration algorithms assigned in F1 ~ F4 blocks, each 
block will select one master from four input masters for the 
second level competition. The final granted master will then 
be determined by the arbitration algorithm chosen in block 5.  
Each group (F1 ~ F5) can be reconfigurable to adapt a 
specific arbitration algorithm. For example, either one of the 
round-robin algorithm, random access algorithm or 
first-come-first-serve algorithm can be combined together to 
decide the functionality of the reconfigurable arbiter. The 
functionality of the data transformation simulation module is 
to imitate the behavior of the actual device, which include 
conveying the data, sending the bus busy signal, or 
receiving the granted signal …etc. Output decoder is a 2 to 1 
multiplexer controller, if this multiplexer control signal is 
“1” the current bus is busy and all master’s request is 
suspended. The feedback control signal from the output of 
multiplexer will send back the signal to the granted master 
for bus usage. If multiplexer control single is “0”, the bus is 
released and the arbiter is able to resume arbitration.  
With the reconfigurable functionality, it can assign 
different arbitration algorithms for specific groups of 
masters. The reconfigurable arbiter controller as shown in 
Fig. 2, each block (F1 ~ F5) will be assigned a number to 
denote the status of the reconfigurable arbiter. The notation 
“00”, “01”, “10”, and “11” are used to represents fixed 
priority, round robin, first come first serve and random 
access algorithm, respectively. For example, the arbitration 
state 10’b0011000100 denotes the fixed priority algorithm is 
assigned to functional blocks F1, F3 and F5, round robin 
algorithm is assigned to functional block F2, and random 
access algorithm is assigned to functional block F4. 
III. SYSTEM PERFORMANCE ANALYSIS  
The efficiency of the hybrid arbitration algorithm is 
examined by a proposed system performance analytical 
module. The simulation strategy for performance analysis of 
the arbiter with hybrid arbitration schemes is divided into 
two parts: Traffic Pattern Generation (TPG) and Arbitration 
Simulator Generation (ASG) as shown in Fig. 3. The traffic 
patterns are generated based on the statistic distribution such 
as Bernoulli, Binomial, equilikely, Geometric, Pascal, 
Possion, Uniform, Exponential, Erlang, Normal, lognormal, 
Chisquare … etc. The simulations in this paper are based on 
the TPG which assign various distributions to indicate the 
data amount and bus request time for each master. For ASG, 
a behavior bus arbiter model based on Fig. 1 is used to take 
into account the effect of the shared bus communication 
architecture on system performance. The hybrid arbitration 
behavior including the fixed priority, round robin, first come 
first serve, and random access are implemented using C 
language and can be reconfigurable to obtain various 
arbitration states. 
The reconfigurable hybrid arbitration algorithms can be 
achieved by assigning different arbitration algorithms into 
functional blocks F1 – F5. To study the effects of the 
various reconfigurable arbitration schemes, the performance 
analysis are further simulated based on various permutations 
of arbitration algorithms for blocks F1 ~ F5 under the same 
traffic distribution pattern. For the evaluation of relative 
performances of different configuration states, the average 
waiting time, bus granted rate, throughput, bus utilization 
can then be calculated. 
 
Figure 1.  Architecture of  the reconfigurable arbiter 
Figure 2.  Architecture of  reconfigurable arbiter controller 
V. IMPLEMENTATION RESULTS 
The reconfigurable arbiter was synthesized using 
Altera’s Quartus II 4.2, which is an integrated environment 
for logic design and synthesis. After finishing the verilog 
simulation, we download the program into 
EPF10K100ARC240-1chip. The Tektronix logic analyzer is 
connected to the FPGA pins to check the functionality of the 
reconfigurable arbiter. A Logic Synthesis System converts a 
description of the reconfigurable arbiter circuit into an 
interconnection of logic gates (a gate-level net-list). 
Furthermore, the RTL model of the reconfigurable arbiter is 
synthesized to gate-level using Synopsys Design Vision 
with TSMC 0.18 mμ  technology file. As shown in Table I, 
the power performance simulation results were obtained by 
Synopsys Prime Power with different configuration states. 
The Synopsys Synthesis tool, Design Vision, is used to 
generate a synthesized net-list of the reconfigurable arbiter 
as shown in Fig. 7. Table II is presented the compilation 
report of the reconfigurable arbiter for single layer share bus 
system. 
Figure 7.  Synthesized net-list of the reconfigurable arbiter 
TABLE I.  POWER CONSUMPTION REPORT 
Single Layer(32bits) 
F1-F5 Power(mW) 
11111 3.656(2.03mA) 
22222 3.684(2.05mA) 
33333 3.715(2.06mA) 
44444 3.867(2.15mA) 
12342 3.735(2.08mA) 
14423 3.802(2.11mA) 
23242 3.745(2.08mA) 
24433 3.803(2.11mA) 
42214 3.796(2.11mA) 
1:Fix Priority 2:Round Robin 3:First Come First Service(FCFS) 
4:Random Access(RA) 
TABLE II.  COMPILATION REPORT 
Instance Name Single Reconfigurable Arbiter 
Master 0 ~ 
15 
Logic Cell 2038 1173 865 
LC Registers 616 344 272 
LUT-Only LCs 1422 829 593 
Register-only LCs 64 64 0 
LUT/Register LCs 552 280 272 
Carry Chain LCs 256 0 256 
 
VI. CONCLUSION 
The arbiter with hybrid arbitration algorithm for single 
layer shared bus system is presented in this study. The 
simulation results not only provide performance analysis for 
the various combinations of the arbitration algorithms. The 
gate-level power analysis is also applied to explore power 
dissipation in various reconfigurable arbiter architectures. 
These results can be feed into the reconfigurable arbiter to 
obtain the optimal condition under different system 
workloads. The reconfigurable arbiter can be custom-tuned 
to obtain high bandwidth utilization, low latency, and power 
effective for on-chip bus communication. The results 
obtained show that the framework of the reconfigurable 
arbiter can be used to explore the space of possible 
configurations to evaluate the performance/power trade-off. 
ACKNOWLEDGMENT 
This research was partially supported by 
National Science Council, R. O. C., under Grant 
NSC96-2221-E-214 -068. 
REFERENCES 
[1] Massimi Conti, Marco Caldari, Giovanni B.Vece, Simone Orcioni, 
Claudio Turcgetti, “Performance Analysis of Different Arbitration 
Algorithm of the AMBA AHB Bus”, Design Automation Conference, 
41st Conference on (DAC'04), June 07 - 11, 2004 San Diego, 
California, USA, Pages:618-621 
[2] Ruibing Lu, Cheng-Kok Koh, “SAMBA-Bus: A High Performance 
Bus Architecture for System-on-Chips”, 2003 International 
Conference on Computer-Aided Design (ICCAD'03), November 9-13, 
2003, San Jose, CA, USA, Pages:8 – 12 
[3] Chien-Hua Chen, Chen, Geeng-Wei Lee, Juinn-Dar Huang, and 
Jing-Yang Jou “A Real-Time and Bandwidth Guaranteed Arbitration 
Algorithm for SoC Bus Communication”, Design Automation, 11 th 
Asia and South Pacific Conference, 24-27 Jan. 2006, Pacifico 
Yokohama, Yokohama, Japan 
[4] Lahiri, K.; Raghunathan, A.; Lakshminarayana, G.;"The Lotterybus 
on-chip communication architecture", IEEE Transactions on Very 
Large Scale Integration (VLSI) Systems, Volume 14,  Issue 6,  June 
2006 Page(s):596 – 608 
[5] AMBA 2.0 Specification. Available: http://www.arm.com/ 
 
報告人 題目 (Session 1A6) 單位 
Zhuoqing 
Yang 
Design and Contact Dynamics 
Simulation of an Inertia Micro-switch 
Based on Non-silicon Substrate 
Shanghai 
Jiaotong 
University 
Shi Fu Fabrication of Cu-based Carbon 
Nanofiber Composite Film Applied in 
MEMS Contactor 
Shanghai 
Jiaotong 
University 
Yuan Yao A Micromachine-Based Assembly of 
Tungsten Multichannel Electrodes for 
Neural Recording 
 
Shanghai 
Institute of 
Microsystem 
and Information 
Technology, 
CAS 
Lefeng 
Wang 
Elastic-Plastic Adhesive Contact of 
Fractal Microparts Surfaces with Low 
Adhesion Parameters 
Harbin Institute 
of Technology 
Po-Jui Chen Q-Enhanced Fold-and-Bond MEMS 
Inductors 
California 
Institute of 
Technology 
Shang Chen A New Type of MEMS Two Axis 
Accelerometer Based on Silicon 
North University 
of China 
 
 
 
報告人 題目(Session 1B6) 單位 
Shiao-Yu Chen Vibrations and Mechanically-
Induced Currents in Nanopillars 
Transistor 
I-Shou 
University 
Hongxi Wang Design and Experiments of a 
Permanent Magnetic Inertial 
Micro-Switch 
Xidian 
University 
Jiang Tao Robust Design of a Tuning Fork 
Vibratory Microgyroscope 
Considering Microfabrication 
Errors 
Tongji 
University 
Bo Yang A Quadrature Error and Offset Southeast 
最後大家就如何辦好 CINN 如何讓 CINN 發揮更大的作用提出了很好的建議，如 CINN 將
在 IEEE NEMS2009（Jan5-8, 深圳）國際會議上設立學會旅費資助專案，資助前來參加
會議的海內外學生。還將在 NEMS2009 上設立 CINN 獎勵項目等。期待 CINN 在 2008 年裏
得到較快的發展，為推動和加強華人之間的協作提供更多的機會和幫助。 
 
 
三、 考察參觀活動(無是項活動者省略) 
 
 
四、 建議 
本次會議由日、韓、中國大陸及其他亞太及歐亞國家前往比台灣為多，希望政府可
在此方面再資助經費讓更多人加入此研發領域。 
 
五、 攜回資料名稱及內容 
1. 攜回研討會論文集及光碟各一份 
 
六、 其他 
出席國際學術會議發表之論文詳見附件二 
 
 
 
iv
three dimensional space for a circle. The parametric equations 
for a circle in polar coordinates are 
x = a + rcos(θ )                (3) 
y = b + rsin(θ )                 (4) 
If an image contains many points, some of which fall on 
perimeters of circles, then the job of the search program is to 
find parameter triplets (a, b, r) to describe each circle. We can 
eliminate the radius from the pair of equations above to yield 
b = a tanθ- x tanθ+ y               (5) 
Then, for each edge point in circle G(x,y), increment all points 
in the accumulator array M(a,b) along the line, a local maxima 
in the accumulator array correspond to centers of circles in the 
image can be detected. 
SIMULINK SIMULATION 
The microimage analysis system can be tested in Simulink with 
inputs from an image or media file, with the results output to the 
workspace or screen for analysis. The proposed SIMULINK 
model associated with the microimage analysis system is given 
in Fig. 1. This Edge Detection block process improves the 
efficiency of the Hough Lines block as it reduces the image area 
over which the block searches for lines. The block also converts 
the image to a binary image, which is the required input for the 
Hough Transform block. The Hough Transform block computes 
the Hough matrix by transforming the input image into the (ρ,θ)  
parameter space. The block also outputs the ρ and θ values 
associated with the Hough matrix. The Find Local Maxima 
block finds the location of the maximum value in the Hough 
matrix. The Variable Selector blocks determine the ρ and θ 
values that correspond to the longest line in the original image. 
To demonstrate the functions of the constructed virtual image 
processing system, we implement two classic Hough transform 
operations with simulation results. Two kinds of images with 
high generality in digital photogrammetry are to be investigated 
in terms of accuracy and efficiency. The first one is a forest of 
dislocations in a stainless steel as seen by a transmission 
electron microscope (TEM) [5]. For pattern recognition using 
forest of dislocations, the major targets of interest are the 
longest dislocation line. Most of those objects have a common 
geometric primitive that is the straight lines.  The raw image is 
processed through the model depicted in Fig 1. The edge 
detection of the raw image is shown in Fig 2(a) and a white line 
marked as the longest line in the raw image is show in Fig 2(b). 
Another one is a scanning electron microscopy (SEM) image of 
a 23 μm diameter lunar rock from the Apollo II mission. There 
are irregularities along the edge of the circle element in the 
original image. Fig 3(a) shows the results of the circle detection 
and Fig 3(b) is the accumulation array. 
CORDIC ARCHITECTURE  
 
The calculation of Hough Transform has traditionally been 
performed using software implementation. These are either slow 
or complicated due to the intensive calculations of trigonometric, 
multiplication and addition operations. The CORDIC 
(Coordinate Rotation Digital Computer) algorithm can be used 
to calculate elementary trigonometric functions such as sine, 
cosine, tangent, …etc. The computational attractiveness of the 
CORDIC is its use of simple shift and addition operation to 
implement complex trigonometric functions. This is an 
advantage for hardware implementations were multipliers are 
normally resource demanding 
The CORDIC algorithm provides an iterative method of 
performing vector rotations by arbitrary angles using only shifts 
and addition operations . To rotate a vector [x, y] by an angleφ , 
the vector [ 1x , 1y ] after rotation is 
φφ sincos1 yxx −=           (6) 
φφ cossin1 yxy −=            (7) 
These can be rearranged so that: 
)tan(cos1 φφ yxx −=           (8) 
)tan(cos1 φφ yxy +=           (9) 
The CORDIC algorithm performs such a vector rotation by 
means of a sequence of micro-rotations. If iii
−= 2tan δφ and 
1±=iδ  controls the direction of vector rotation for step i. The 
direction of rotation for iφ  is 
0,1
0,1
1
1
<−−=
>−+=
−
−
iii
iii
if
if
φφδ
φφδ
 
Arbitrary angles of rotation are obtainable by performing a 
series of successively smaller elementary rotations. Therefore, 
the rotation angles ,1φ ,2φ ,3φ K , nφ  are restricted so 
K,3,2,1,0
2tan1
=
+=+= −+
i
iii
i
iii αδφδφφ     (10) 
This procedure continues until iφ is suitably close to the desired 
rotation angle. The iterative rotation can now be expressed as: 
]2[1
i
iiiii yxKx
−+ ⋅⋅−= δ                    (11) 
]2[1
i
iiiii xyKy
−+ ⋅⋅+= δ                     (12) 
ii
iK
21 21/1)2cos(tan −−− +==         (13) 
If the number of iterations is n, then the product of the iK is 
∏ −+=
n
i
nA
221                                    (14) 
As the number of iterations goes to infinity, the product of 
the iK approaches 0.6073, and the rotation algorithm has a gain, 
nA , of approximately 1.647. Note that the exact gain depends 
on the number of iterations. 
The behavior modeling of the Cordic architecture is 
implemented using Verilog hardware description language. The 
input numbers format is according to IEEE-754 standard, and 
 
Fig1. Hough Transform Simulink model. 
 
Fig. 2(a) Edge detection of 
the raw image 
Fig. 2(b) The longest line 
(marked white) detected in the 
raw image 
Fig 3(a) Raw image of the circles 
detected  
Fig 3(b)  Hough accumulation 
Array 
 
 
Fig. 4 ModelSim 4.7 Simulation results of CORDIC 
performs trigonometric operations.  
Fig. 5 Subsystem implementation based on Altera DE_2 platform 
 
