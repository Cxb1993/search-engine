 2
 
 
目錄： 
 
研究成果發表--------------------------------------------------------------------------- 3 
報告內容--------------------------------------------------------------------------------- 4 
計畫成果自評--------------------------------------------------------------------------16 
 
 4
報告內容 
 
摘要 
 
隨著無線網路及行動裝置的日益普及，無線上網已逐漸蔚為風潮。但行動裝置在軟硬體資源以
及連線品質不穩的限制造成了行動裝置在取得網路資源及展現這些資源上極大的障礙。本研究
以具備豐富的資源描述能力的語意網路為基礎，設計一個網頁內容自動調適架構，透過擷取使
用者端行動裝置相關資源的 CC/PP 語意描述以及網頁內容所蘊含的語意資訊，利用 Jena 推理
引擎推論出最適合客戶端裝置的網頁內容，解決行動裝置在存取網頁內容時，因為各種軟硬體
限制所造成的問題。我們實作此系統，並以知名電子商務網站驗證其可行性。本系統之特色為
具通透性、彈性、可擴充性，達到網頁單一版本、自我調適等功能。 
 
關鍵詞：網頁內容調適、CC/PP、Jena 自動推論、語意網路 
 
1. 前言 
 
隨著無線通訊科技以及嵌入式系統的快速發展，近年來網際網路的使用者除了利用桌上型
電腦來存取網頁內容，越來越多人使用各式各樣不具統一規格的行動裝置，例如智慧型手機
(Smart Phone)及個人數位助理(PDA)等，作為新的網路資源存取機制。這個趨勢顯示出行動裝
置取代個人電腦成為主要運算平台的時代即將來臨。但是目前行動裝置在存取網路資源上仍存
在相當多的軟硬體限制，例如：CPU 運算能力、電力供應、記憶體以及螢幕顯示能力等，造成
了人機互動上的障礙。特別是網際網路上的網頁以及影像檔等文件內容，絕大多數都是針對桌
上型電腦所設計，行動裝置在存取網頁內容時，不是無法適當的處理、呈現文件，就是有資訊
遺失的現象。這些限制是將運算平台由桌上型電腦轉換到行動裝置的一大挑戰。 
 
如何依據各種各樣的行動裝置的軟硬體異質性，提供適當之網頁內容，是本研究要解決的
問題。本研究提出以語意網路為基礎的異質性行動裝置網頁內容調適架構，設計新的網路代理
伺服器，透過擷取行動裝置 CC/PP 資訊以及網頁內容所蘊含的語意資訊，進行調整網頁內容以
及過濾無法處理之網頁內容的工作，協調出針對客戶端裝置量身訂做的網頁內容。在這個架構
中，我們將 HTML 網頁及多媒體檔案等網路內容以及 CC/PP 等裝置特性描述訊息都轉換成為
符合 RDF(Resource Description Framework)[3]規定的語意模型[11]。接著，利用 Jena 推理引擎
[9]推論出行動裝置所接收網頁內容之最佳調適參數。這些推論所產生出來、依據特定客戶端裝
置特性調整的改編參數會傳送給網頁內容改編元件(Web Content Transcoder)以進行網頁內容改
寫或重新佈局，再將結果傳送給行動裝置，減少行動裝置在網頁內容處理上的負擔，適當的平
衡資訊的遺失以及資訊的可利用度。因為客戶端所接收到的網頁內容都依據客戶端裝置特性處
理過及過濾過，各種不具統一規格的異質性行動裝置，都可存取其可接受的網頁內容。最後我
們實做這個架構，並且展示本架構如何針對三種行動裝置的特性，將一個範例網頁轉換為適合
各行動裝置的網頁。 
 
2. 相關研究 
 
過去已經有許多學者針對行動裝置及無線運算提出網頁內容調適代理伺服器(Proxy-Based 
Content Adaptation)架構或系統，他們大多數都在解決特定的服務或是應用所產生的問題，例如：
網頁存取、多媒體串流、資料庫存取等。一般代理伺服器的設計目的在提供快取服務，以加快
網域內使用者存取網際網路的速度。有別於快取功能，網頁內容調適代理伺服器的目的是提供
使用者一個「客製化」的網頁內容。 
 
以代理伺服器為基礎網頁內容調適架構依據功能提供下列服務：協定的轉換及最佳化、壓
 6
 
「服務接收元件」聽取客戶端所提出的 HTTP 服務請求(訊息 1)並且將該請求分派給對應的
網頁內容擷取元件(訊息 2)，本系統可以處理的服務請求包含「GET」、「PUT」、「POST」、
「CONNECT」等 HTTP/1.1 所定義的請求類型。客戶端裝置會使用 CC/PP 作為傳輸請求訊息時
的資料交換格式，將裝置特性等資訊夾帶在訊息 1 的 HTTP 服務請求表頭中。CC/PP 是一個以
RDF 為基礎的字彙及語意定義架構，用於表示裝置特性，HTTP 請求表頭內的 CC/PP 含有靜態
及動態的裝置資訊。靜態裝置資訊為一個 URL 指向「裝置資料庫」內事先準備好的某裝置的標
準特性資訊檔；為因應可能的裝置系統變動，動態裝置資訊用來覆蓋或取代靜態裝置資訊內的
部分資訊以反映使用者所處環境的實際狀況。 
 
「網頁內容擷取元件」收到客戶端服務請求後，先檢查「網頁內容快取」內是否已經存放
所要求的網頁內容；若已存在，則從「網頁內容快取」抓取該網頁內容(訊息 3.3)；否則，從
網際網路上的內容伺服器(Content Server)抓取客戶端所要求的網頁內容(訊息 3.1，3.2)，並且
將取得的網頁內容存入「網頁內容快取」(訊息 3.4)。接著，「網頁內容擷取元件」依據所抓取
的網頁內容類型決定處理的方式，並送到對應的「通訊會期語意擷取元件」(訊息 4)。 
 
「通訊會期語意擷取元件」負責通訊會期(Session)語意的擷取，包含客戶端裝置資訊以及
網頁內容語意擷取。客戶端裝置資訊可以透過客戶端 HTTP 請求標頭內指向「裝置資料庫」的
靜態的裝置描述資訊以及標頭內動態的裝置資訊合併而成。網頁內容的語意擷取必須依據該網
頁內容的 MIME 型別取得所需字彙描述，並且對於網頁內容進行分析取得相關語意，關於網頁
內容的字彙定義，在第 3.1 節會有詳細說明。取得的裝置資訊和網頁內容描述等語意資訊再傳
送給 Jena 推理引擎進行推論(訊息 5.2)。 
Jena 推理引擎利用設計人員事先已經設計好的推論規則，搭配相關語意進行相關語意事實
的邏輯推論，關於推理引擎的使用、知識庫的建立以及知識的表示及序列化方式會在本文第 3.2
節有詳細說明。推論後取得網頁內容改編參數，回傳給「通訊會期語意擷取元件」(訊息 5.3)。
接著「通訊會期語意擷取元件」將改編參數以及客戶端請求傳送給「網頁內容改編元件」(訊息
6)，「網頁內容改編元件」會依據改編參數的設定依據重新改寫已抓取的網頁內容。「網頁內容
改編元件」的設計將在第 3.3 節介紹。最後將改編後的網頁內容包裝成標準的 HTTP 回應回傳
給客戶端完成一次的 HTTP 訊息通訊會期(訊息 7)。 
 
圖一 系統架構及元件間訊息傳遞 
 8
表格多。(2) 區段及表格寬度佔總畫面的百分比超過門檻值時表示是排版用，本系統目前
設定之門檻值為 0.7。 
 
舉例來說，以下是一個簡單的 XHTML 文件實體： 
 
<HTML><BODY><TABLE> 
<TR><TD>Gentoo Linux is a totally new linux distribution. </TD></TR> 
</TABLE></BODY></HTML> 
 
我們擷取該文件實體內<TD>標籤的語意資訊如下： 
 
<rdf:Description rdf:about="/HTML/BODY/TABLE/TD[1]"> 
  <rdf:type rdf:resource="html:ELEMENT_NODE" /> 
  <html:NumberOfWords>8</html:NumberOfWords> 
  <html:IsLayout>false</html:IsLayout> 
  <html:NumberOfImage>0</html:NumberOfImage> 
  <html:Importance>1.0</html:Importance> 
  <html:NodeName>TD</html:NodeName> 
  <html:ChildNodeNumber>0</html:ChildNodeNumber> 
  <html:ParentNode rdf:parseType=”Resource” 
rdf:resource=”_:/HTML/BODY/TABLE/TR[1]”/> 
</rdf:Description> 
 
其中，命名空間 html 表示 HTML 本體所在命名空間。為了識別文件中的每一個元素，每一個
HTML 元素使用 XPath[5]來表示該元素在文件中的絕對位置，如：「/html/body/table/td[1]」表示
元素 HTML 下的 BODY 節點下的 TABLE 節點下的第一個 TD 節點。透過 XHTML 結構本體的
定義，可以得到一份 XHTML 文件的語意資訊，方便對於 XHTML 文件內容改編。 
 
3.2 推理引擎 
 
推理引擎依據事先定義好的基模以及規則，接收事實並且推斷出隱含資訊，具有邏輯推論
的能力。本系統使用 Jena[9]這套語意網路工具組內附的推理引擎進行推論。Jena 依據推論的方
式分成數個不同的推理引擎，分別包裝成 Java 物件提供使用時的操作介面。Jena 推理引擎架構
資料處理可分為三個部分；其中，兩個部分為輸入的資料，分別是「知識庫」以及「事實」，皆
使用 RDF/RDFS 模型來表示內含的知識內容。以下面分別說明 Jena 推理引擎之三個元件： 
 
 知識庫: 本架構知識庫內共有三種資料種類：(1)「網頁內容字彙」表示各種網頁內容調適
時所需要的語意字彙；可以使用自行制定的字彙或其他組織所定義的基模，如先前所述的
Dublin Core，所構成。(2)「CC/PP RDFS 模型」為 W3C 所定義好的行動裝置屬性。(3)「改
編規則」為進行推論的決策規則清單，提供推論時使用。Jena 的規則有其語法，並且存放
在檔案中。設計上，我們針對每一類型的網頁內容撰寫其規則檔案，並在推論時依據網頁
內容的型別載入使用。 
 事實: 為所得到的語意資訊，包含了透過「通訊會期語意擷取元件」得到的「CC/PP 裝置
資訊」以及「網頁內容語意」，作為推論時的「事實」。每一個通訊會期所得到的事實內容
都不一樣。 
 Jena 推理引擎: 此為決策引擎，根據「知識庫」以及「事實」進行推論，產生出最佳的內
容調適參數並將參數送給「網頁內容改編元件」處理。 
 
 10
lessThan( ?display_width, ?image_width )  
 ->  (system:Content  j.2:ScaleImageByWidth ?display_width)] 
 
在上面的規則中，「Scaling」表示規則的名稱。前面放置問號的識別字為變數，命名空間
「system」、「device」以及「rp」分別對應到本架構之代理伺服器系統、裝置描述以及圖片描述
等基模。每一個括號都是一個 RDF 敘述，一條規則可以由很多 RDF 敘述所組成並且使用逗號
分隔，表示邏輯上「AND」的關係，我們使用「system:Content」表示所要處理的網頁內容節點，
屬性值即是需要改編的網頁內容參數或刪除後續節點等額外的動作。 
 
3.3 網頁內容改編元件 
 
網頁內容改編元件的功能在接收推理引擎所產生出來的改編參數，並且依據改編參數對於
內容進行改寫或過濾，為一連串的網頁內容操作動作。 
 
改編元件由一個分派器(Dispatcher)以及許多的實體改編元件所構成。分派器的目的在依據
「Jena 推理引擎」依據目前 MIME 型別為 t 的網頁內容推論得的改編動作 )M(Pm t∈ 指定處理該
敘述的實體改編元件，實體改編元件為一個程式單元專門依據所對應的敘述對網頁內容進行參
數調整及過濾子節點。實體改編元件為了能夠接收改編參數並且處理對應的改編動作，必須對
於推論出的 RDF 模型進行查詢並取得相關參數。為了增加軟體的彈性及延展性，我們透過 Jena
所支援的語意網路 RDF 查詢語言 RDQL(RDF Query Language)[9]，透過設定查詢來源為推論所
得結果，取得集合 m，讓改編模組元件以及推理引擎透過訊息傳遞進行合作，以避免各個處理
元件間耦合性過高，查詢語法如下： 
 
SELECT ?predicate, ?object 
WHERE ( system:Content, ?predicate, ?object) 
USING system FOR http://mis.im.tku.edu.tw/~tas/proxy.rdfs# 
 
SELECT 後面接問號開頭的變數必須滿足 WHERE 敘述內的條件，USING 表示指定命名空間。
這個查詢可以得到一個主詞為 system:Content 的所有 RDF 敘述。分派器會逐一比對每一個回傳
的 RDF 敘述的述詞以及受詞。命名空間 system 表示整個代理伺服器在語意上的命名空間，其中
的物件「Content」表示目前所要處理網頁內容，為應該進行改編操作敘述的主詞，「網頁內容改
編元件」會根據「system:Content」對推理引擎產生的 RDF 模型進行查詢，得到所有將執行在目
前網頁內容上的各個節點的改編參數。「網頁內容改編元件」得到所有的改編參數後會找尋符合
的實體改編元件並載入相關網頁內容改編元件對網頁內容進行處理。例如當某圖片內容得到改
編述語為 ScaleImageByWidth，則會將該圖片內容寬度設為推論所得的值，高度則等比例縮放。
直到所有的 RDF 敘述都處理完畢為止。最後，經由實體改編元件處理過的網頁內容會回傳給使
用者，完成一次的內容改編流程。 
 
4. 系統實作 
 
本章說明我們如何實作此以語意網路為基礎的內容調適代理伺服器系統，包含所使用的程
式元件以及各元件間訊息傳遞、相互間的關係及合作方式。基於相容性及在行動裝置支援的程
度，我們使用 Java J2SDK 1.5.0 作為系統開發的程式語言，採用 jTidy API[4]進行 HTML 網頁轉
換為 XHTML 的動作。透過 Java 的特性，以物件導向方式實作系統各元件。為了可以讓一個網
頁順利展示完成，我們實作了 text/html、image/gif、image/jpeg、image/png 四個改編模組；大部
分的網頁中，其檔案本身或內嵌的檔案類型多僅包含這四種 MIME 類別，所以實作了這四項模
組對大部分的網頁內容或其所附的內嵌物件來說是足夠的。改編模組的撰寫以 MIME 型別為一
個單位，對應到圖一五個元件，分別支援該 MIME 型別的服務需求接收、抓取、序列化封裝、
語意擷取、推論改編參論、內容改編及格式化輸出等功能。每個改編模組在系統內的處理詳細
 12
http://mis.im.tku.edu.tw/~tas/proxy.rdf#ExtractContent,  
http://mis.im.tku.edu.tw/~tas/content.rdf#/html/body/div[2]/table] 
 
 
第一個 RDF 敘述表示移除 RDF ID 為「/html/head/style[1]」的網頁節點，內容改編元件收
到這個敘述之後會將網頁內使用 XPath 表示為「/html/head/style[1]」的節點整個刪除。第二個
RDF 敘述表示會將 RDF ID 為「http://mis.im.tku.edu.tw/~tas/content.rdf#/html/body/div[2]/table」
節點內的表格元素(包含 TABLE、TR、TD 等 HTML 元素)全部濾掉，僅存表格內容。內容改編
元件會逐一執行所收到的查詢結果，最後在把改編過的網頁內容傳送給格式化輸出元件將結果
傳回客戶端，完成一次的 HTTP 傳輸協議。 
 
測試過程中，硬體部分我們使用了 HP iPAQ hx2400、Symbian S80、Panasonic EB-X700 作
為測試的客戶端，每一種硬體裝置的相關特性及限制列於表二，我們將以這些硬體裝置的預設
瀏覽器展示在本系統運作下的測試網頁。因為部分平台所提供的瀏覽器無法指定代理伺服器且
大部分瀏覽器無法送出裝置特性(CCPP/UAProf Profile)，所以測試方式採用兩段式傳輸模式
(2-hop)，客戶端將 HTTP 請求傳送至一個簡單的轉送伺服器。轉送伺服器會將所要夾帶的裝置
屬性加入客戶端請求標頭檔或進行對應的轉送(對於不支援 Proxy 的客戶端瀏覽器而言)。測試的
改編規則設計焦點放在「支援格式」以及「螢幕大小」兩個部分，目的是避免水平捲軸的使用，
增加文件閱讀上的方便性。所以原本的 HTML 網頁需要移除或改變不適合的標籤，如<Style>、
<TD>、<TR>及<TABLE>等，圖片寬度也應該縮小為螢幕可以顯示的寬度。圖二為於桌上型電
腦的 IE 6.0 瀏覽器所展示之原始測試網頁(http://www.amazon.com)的上半部，圖三為 HP iPAQ 
hx2400 的測試結果，圖四為 Symbian Series80 測試結果，圖五為 Panasonic EB-X700 的測試畫面，
我們可以發現圖片都經過處理調整到適當的大小，網頁格式不支援的內嵌物件如：CSS 或表格
等也依據裝置的特性作改變或是過濾掉。 
 
表二 客戶端裝置屬性及限制 
裝置名稱 裝置種類 作業系統 瀏覽器 支援格式 螢幕大小 連線方式 
HP iPAQ hx2400 PDA Windows Mobile 5.0 IE Mobile
text/html、text/css、
image/jpeg、image/png、
image/gif 
480X 
320(pixels) Bluetooth PPP
Symbian Series 
80  SmartPhone Symbian Series 80 內建 
text/xhtml、text/css、
image/jpeg、image/gif 
220 X 640 
(pixels) WLAN 
Panasonic 
EB-X700 SmartPhone Symbian Series 60 內建 text/chtml、image/jpeg 
176 X 
148(pixels) GPRS 
 
圖二 原始測試網頁 
 14
這種代理伺服器的設置，讓行動裝置接收可處理資訊，克服存取網頁內容時面臨的問題；讓網
頁開發人員不用煩惱行動運算裝置異質性的問題。本研究所提架構之特色整理如下： 
 
 通透性(Transparency)：就是本系統單一網頁內容版本的特性。客戶端行動裝置用戶不需
考慮所要存取網頁內容的 MIME 型別，只要裝置具有連線能力，代理伺服器即可傳送合適
的網頁內容。以往設計網頁時，必須依照客戶端裝置製作多種版本，如：Flash 版、純文
字版、HTML 版、CHTML 版或 WML 版。隨著本系統調適機制的導入，讓網頁開發者只要專心
開發一種版本即可。本系統也可以處理動態網頁的相關操作。 
 
 彈性(Flexibility)：因為應用語意網路技術及使用 Java 實作，本系統在資料交換以及跨
平台方面皆相當有彈性。利用以 XML 為基礎的 RDF/RDFS 作為知識表示語言，透過命名空
間的引用可以輕鬆載入相關語意詞彙。各種本體的定義在網路上也可以很容易找到已經制
定好的版本。當使用者要新增一項可處理之網頁內容類型，只要找到相關本體或是自行定
義一份針對該類型的本體資訊，撰寫推論規則，並且實作出本系統內定的一組 Java 抽象
類別；就可以讓本系統可以處理該網頁內容類型。當系統內某已存在的網頁類別要增加新
的調適方法，亦可以透過命名空間添加新的本體資訊，繼承原有改編模組，並且增加新功
能，系統就具備對該網頁內容新的調適能力。本系統很容易擴充至包含使用者偏好、無線
網路連線資訊、使用者所處環境等情境資訊。 
 
 可擴充性(Scalability)：本系統元件間耦合性低，可以很容易的新增、抽離處理元件，
適合分散式的部署方式。時間耗費量大的元件，例如推論引擎，可以單獨放到一台或數台
機器上，透過網路服務將資料模型傳送給推理引擎，再利用查詢語言進行推論結果的查
詢，並將其回傳改編系統進行網頁內容的實際改寫；本系統利用多緒來提升效能。未來可
以利用 NFS(Network File System)統一管理各分散節點間的快取網頁內容，增加系統執行
效率。 
 
使用本系統時，仍存在許多限制，這些都將是未來可持續發展的研究，在此列舉如下： 
 
 推理引擎：Jena 內所使用的推理引擎對語意的處理仍嫌不足。目前只能處理簡單的規則。
太過複雜的規則不容易解析。目前在網頁內容的協議上，改編規則並不複雜，所以並未構
成很大的問題。但未來若網頁內容描述資訊更多，可能會產生擴充上的困難。 
 
 HTML 網頁改編不易：大部分的 HTML 網頁內容仍未結構化，很難有一個完整的本體描述其
架構。目前只能針對符合 XHTML 的某些元素作簡單的推論。 
 
 裝置資訊的傳送：因為裝置資訊傳送協定種類過多，仍無統一規格，所以目前大部分的瀏
覽器仍無法傳送完整的裝置資訊，僅能依靠幾個標準的 HTTP 標頭資訊(如：Accept、
Accept-Language)。因此，實作時仍必須仰賴瀏覽器傳送的瀏覽器版本資訊作對應或是使
用一個前置處理的轉送器傳送裝置資訊。 
 
 
參考文獻 
[1] Document Object Model, http://www.w3.org/DOM/  
[2] W3C Composite Capabilities/Preference Profiles (CC/PP), http://www.w3.org/Mobile/CCPP/  
[3] W3C Resource Description Framework (RDF), http://www.w3.org/RDF/  
[4] jTidy, http://jtidy.sourceforge.net 
[5] XML Path Language (XPath), http://www.w3.org/TR/xpath/  
[6] Ardon, S., Gunningberg, P., LandFeldt, B.,  Portmann, M., Ismailov, Y., and Seneviratne, A., 
“March: a Distributed Content Adaptation Architecture”, International Journal of 
 16
計畫成果自評：  
 
自評項目 自評結果 
研究內容與原計畫相符程度 100% 
達成預期目標情況 100% (實作出依據語意及行動裝置的功能自動調整網頁內容的系統) 
研究成果之學術或應用價值 
1. 學術價值：建立自動語意擷取技術
之基礎，未來的學術後續研究可以
朝多方面(如整合搜尋引擎、情境感
知、隨意網路等)發展 
2. 應用價值：可快速推出跨平台的手
機、PDA 應用 
是否適合在學術期刊發表或申請專利 有一篇期刊論文已被接受 
主要發現或其他有關價值 
驗證依據語意及行動裝置的功能自動
調整網頁內容這個構想的可行性，為後
續研究奠立紮實基礎。 
 
 
THE DESIGN AND IMPLEMENTATION OF A  
SEMANTICS-BASED WEB CONTENT ADAPTATION 
FRAMEWORK FOR MOBILE DEVICES 
Chichang Jou and Cheng-Ze Ho 
Department of Information Management, Tamkang University, Tamsui, Taipei, Taiwan 
cjou@mail.tku.edu.tw, tas@mail.im.tku.edu.tw 
Keywords: Content adaptation, semantic web, CC/PP, Jena. 
Abstract: With the rapid development of wireless communication technology, many users are accessing the internet 
from mobile appliances, such as notebooks, PDAs, and cellular phones. These devices are miscellaneously 
limited in computing resources, like CPU speed, memory, temporary storage, power supply, installed 
software, and communication bandwidth. The web accesses in these mobile devices thus encounter distorted 
user interface, broken images, slow responses, etc. To overcome this problem, we design and implement a 
semantics-based web content adaptation framework to provide automatically adapted contents to 
miscellaneous mobile devices. RDF Semantics of client device CC/PP configurations and web page tag 
structures are extracted to determine the proper parameters for the format and layout of web contents. 
Heuristic transcoding rules in the Jena Inference System are then applied to transform the web contents for 
each particular device. The functionality of this framework is illustrated by its capability of adjusting the 
layout of the main page of a shopping portal and of adjusting the parameters of images in the page. 
1 INTRODUCTION 
With the rapid development of wireless 
communication technology, many users are 
accessing the internet from mobile appliances, such 
as notebooks, PDAs, and cellular phones. Many 
emerging computation paradigms, such as pervasive 
computing, have been proposed to embrace this 
blooming portable computation trend. However, 
mobile devices have various hardware limitations, 
such as CPU speed, power, memory, and image 
resolutions. They are also restricted in software 
support, such as operating system, installed 
programs, real-time processing capability, and 
rendering functionality. These ad hoc limitations 
have become barriers in human-computer 
interaction. Especially, current internet contents, 
such as web pages and images, are mainly in the 
HTML format designed for desktop computers. 
Without any modification, it is hard to render them 
properly in most mobile devices.  
In this paper, we propose a semantics-based web 
content adaptation framework to overcome the 
presentation inconsistency among mobile devices 
and desktop computers. In this framework, web 
pages and image files are automatically transcoded 
according to semantics extracted from CC/PP 
(Composite Capability/Preference Profiles) (Klyne 
et al., 2004) client device configuration and web 
contents. These semantics properties will be stored 
inside the Jena Inference System (Carroll, et al., 
2004) as knowledge facts to infer proper transcoding 
parameters for each particular device. The adapted 
web pages with proper layout modification and 
images with proper rendering parameters will be 
constructed and delivered. Thus, this technology is 
suitable for resource-limited devices to balance 
information loss and information availability. 
For the rest of this paper, we will review related 
work in Section 2. In Section 3, we describe the 
system architecture of this framework. Semantics 
extraction and knowledge base construction for the 
Jena Inference System are discussed in Sections 4 
and 5. Section 6 demonstrates the content adaptation 
function with respect to the generated transcoding 
parameters. Section 7 explains the system 
implementation and illustrates through three mobile 
devices examples of rewriting one web page, and of 
adjusting the width and height parameters of images 
in that page. Section 8 concludes this paper. 
106
 protocol to include CC/PP profile diff. Two of such 
protocols are CC/PP-ex (Ohto and Hjelm, 1999) and 
W-HTTP (OMA, 2001). We adopt CC/PP-ex in this 
framework. 
 
Figure 2: Example CC/PP for a mobile device. 
When Proxy Listener accepts a request from a 
client, it will spawn a working thread in the Web 
Content Fetcher to handle the request (message 2). 
Web Content Fetcher performs the standard task of 
proxy servers. If the requested web content is 
already in the cache, it will be fetched from Cached 
Web Content (messages 3.3 and 3.4). If not, then it 
will be fetched from the source through the internet 
(messages 3.1 and 3.2), and then be saved in the 
Cached Web Content. The working thread is also 
responsible for resolving the CC/PP profile diff.  
The web content and CC/PP diff will then be 
sent (message 4) to the Semantics Extractor to 
acquire the implicit RDF semantic information 
within the CC/PP diff, HTML web pages and 
parameters of image files.  RDF describes resource 
information in the internet by the three components: 
resource, property, and statement. A RDF statement 
is represented by a triple of (subject, predicate, 
object). 
These semantics information will be sent 
(messages 5.2) to the Jena Inference System as basic 
facts. Jena Inference Engine will combine these facts 
with the knowledge base of CC/PP UAProf RDFS 
model (WAP, 2001), Transcoding Rules and Web 
Page Auxiliary Vocabulary to determine the proper 
transcoding parameters in the format of sequential 
RDF predicates for the requests.  
The web content and transcoding parameters will 
then be passed (message 6) to the Transcoder. 
3.4 cached web content request 
Proxy Listener
Client 
2. Dispatched Request 
Jena Inference 
System 
5.3transcoding 
parameters 
3.2 web content 
7. HTTP response
Web Content Fetcher 
Semantics Extractor 
5.2 semantics properties 
6. Web Content and Transcoding Service Request 
Transcoder 
4. Web Content and CC/PP diff 
Cached web 
content 
3.3 web content request
Device Info DB 5.1 device info
3.1 Content Request 
Content Adaptation Proxy Server
1. HTTP Request 
Internet 
Figure 1: System Architecture of Content Adaptation Proxy Server. 
WEBIST 2007 - International Conference on Web Information Systems and Technologies
108
 5 JENA INFERENCE SYSTEM 
We use Jena (Carroll et al., 2004), a semantic web 
toolkit of “Device Independent” (Bickmore et al., 
1997) ideal, to determine the transcoding 
parameters, which are represented as sequential RDF 
predicates. The Jena Inference System, displayed in 
Figure 3, has three main components. These 
components are utilized in our framework as 
follows: 
 
Figure 3: Jena Inference System. 
Knowledge Base – It contains the acquired 
knowledge and rules in deciding the content 
adaptation parameters. XHTML schema is derived 
by mapping from XHTML XML schema to 
RDF/RDFS as one knowledge base. Transcoding 
Rules contain rules using web content ontology and 
device characteristics ontology for transcoding. 
Auxiliary Vocabulary for transcoding parameter 
decision are also described by RDF/RDFS and 
serialized into Jena knowledge base. All RDF 
knowledge is serialized in the XML format to 
provide more flexibility and interoperability in 
content adaptation.  
 
Jena Inference Engine – This is the decision engine 
to inference and to generate transcoding parameters. 
We make use of the engine without any 
modification. 
 
Facts – These are facts supported in the form of 
instantiated predicates. In our framework, they are 
the semantic data collected by the Semantic 
Extractor. 
 
We apply heuristics to design the transcoding 
rules in the “IF…THEN…” format. If the precedent 
parts of a rule are all true, then the consequent part 
of the rule would be added as a statement of 
transcoding parameters into the knowledge base. We 
provide rules regarding device characteristics by 
defining restriction rules using first order predicate 
logic. Rules are categorized to back up each other. 
For example, if rules for HP 6530 PDA are not 
sufficient, then rules for PPC Pocket PC could be 
used. In the rules, names prefixed with ‘?’ are 
variables. The following example rule is for image 
resizing: 
 
[ScaleImageByWidth: 
(system:Content content:Width ?image_width), 
(system:HardwarePlatform ccpp:DisplayWidth ?display_width), 
lessThan( ?display_width, ?image_width ) -> 
(system:Content content:ScaleImageByWidth ?display_width)] 
 
The rule is named ScaleImageByWidth. The three 
namespaces “system”, “ccpp”, and “Content” point 
to the knowledge bases regarding the content 
adaptation proxy server, the standard UAProf 
Schema (WAP, 2001), and web content under 
transcoding, respectively. The above rule means that 
if the width of the device (?dispaly_width) is less 
than the width of the image (?image_width), then set 
the width of the image as the width of the device, 
and set the height of the image proportionally with 
respect to the adjustment ratio of the width. 
6 TRANSCODER 
The Transcoder is composed of several transcoding 
modules corresponding to file types of XHTML, 
JPEG, etc. It could be extended to handle other file 
types. According to the transcoding parameters, it 
performs content adjustment and filtering. For image 
files, currently the system not only transforms image 
files into the same format with different parameters, 
but also transforms image files into different 
formats.  
The Transcoder dispatches the web contents 
according to their file type to the corresponding 
adaptation component. To perform the required 
content transcoding operation, it will query the 
inferred RDF model by the RDF query language 
RDQL to obtain the required transcoding parameters. 
The use of RDQL could prevent tight coupling of 
the transcoding components. An example RDQL 
query is demonstrated as follows: 
SELECT ?predicate, ?object 
WHERE ( system:Content, ?predicate, ?object) 
USING system FOR http://www.im.abc.edu/~def/proxy.rdfs# 
In RDQL, USING is to specify the name space. This 
query could obtain all RDF statements with subject 
WEBIST 2007 - International Conference on Web Information Systems and Technologies
110
 Table 3: Specifications and restrictions of mobile devices. 
Device HP iPAQ 
hx2400 
Symbian 
S80  
Panasonic 
EB-X700 
Category PDA Smart Phone 
Smart 
Phone 
Operating 
System 
Windows 
Mobile 5.0 
Symbian 
Series80 
Symbian 
Series60 
Browser IE Mobile Built in Built in 
 
Supported 
file types 
text/html 
text/css 
image/jpeg 
image/png 
image/gif 
text/xhtml 
text/css 
image/jpeg 
image/png 
image/gif 
text/chtml 
image/jpeg 
Display size 480 x 320 
(pixels) 
220 x 640 
(pixels) 
176 x 148 
(pixels) 
Connection Bluetooth WLAN GPRS 
 
Figure 4 shows the upper part of the tested web 
page (http://www.amazon.com) in a Microsoft IE 
6.0 browser in a desktop computer. The upper parts 
of the transcoded pages in the built-in browser for 
the three tested mobile devices are displayed by two 
screen shots in Figures 5 to 7. All resulting 
transcoded web pages satisfy the goal of avoiding 
the use of horizontal scroll bar by adjusting the page 
layout, image size, and image resolution. 
Unsupported CSS, Javascripts, flashes, div’s and 
tables are filtered out. 
8 CONCLUSIONS 
We designed and implemented a flexible and robust 
infrastructure for web content adaptation using RDF 
semantics from CC/PP device characteristics, 
XHTML web pages, and JPEG, PNG, and GIF 
image files. Past researches in this area either did not 
take device characteristics into consideration, or 
were not a general purpose solution for 
miscellaneous mobile devices. We made use of the 
Jena Inference System to obtain the transcoding 
parameters through the fact and knowledge base 
built from the collected semantics.  
 
 
Figure 4: Test web page in a desktop computer. 
    
Figure 5: Result of test page in HP iPAQ hx2400. 
 
 
Figure 6: Result of test page in Symbian Series80. 
WEBIST 2007 - International Conference on Web Information Systems and Technologies
112
