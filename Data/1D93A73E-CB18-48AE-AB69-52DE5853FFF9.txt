Contents
Abstract
This paper proposes a simple method that equips UMTS-based tele-
com companies with a mechanism to prove the records on mobile users’ phone
bills. In the history of mobile phone communication, we have seen countless
unsettled disputes where the mobile user disagrees with the telecom company
either on the calling time or on the duration, or even on whether or not a call
was actually made. In this paper, a provable billing protocol will be presented
that can effectively solve disagreements between the two parties. Equipped
with a non-repudiation function, the proposed protocol enables the service
provider to hold on to the solid proofs as to exactly when and to which num-
ber a mobile phone user made a call so that the mobile user cannot deny; at
the same time, the mobile user also gets to have his/her own share of proofs
as to when and how the mobile services were accessed, so that the bill can
be double checked to make sure nothing goes wrong. And, to make it even
better, this new protocol is perfectly compatible with the standard UMTS
protocol and is therefore readily applicable to the current mobile phone com-
munication environments.
Key Words: UMTS, Billing, Charging. AKA, Mobile Communication Sys-
tem
1 Introduction
Mobile communication has gone an incredibly long way since the debut it made just
decades ago. At the present time, in addition to the main stream second generation
system, namely GSM (Global System for Mobile Communication) [16], the third
generation mobile telecommunication system, UMTS (Universal Mobile Telecom-
munication System) [37], has also reached maturity and begun its service, gaining
Figure 1: UMTS Charging Logical Architecture
have to be taken care of because UMTS has to cover older, lower grade systems
such as GSM. So, there is supposed to be some complexity in the UMTS billing sys-
tem. Simply put, the current UMTS billing system works by taking down individual
subscribers’ service accessing records, namely the CDR (charging data record). Ac-
cording to the CDR, the UMTS billing system can figure out the charges and add
them up. The charging logical architecture of UMTS is shown in Figure 1 [3]. There
are two domain networks, PS and CS domain, for MS to charge. When the MS uses
in CS domain network, the MSC (Mobile Switching Centre) and GMSC (Gateway
MSC) are responsible for the record of all charging relevant information and deliver
the information to the bill system. When the MS uses in PS domain network, the
CDR which is generated by SGSN (Serving GPRS Support Node) and GGSN (Gate-
way GSN) is forwarded via the CGF (Charging Gateway Function) to the Billing
System.
CDR comes in various forms, depending on what it is used for. Some CDR
formats do not necessarily have to do with charging. For example, it can be used
3
they put emphasis on instead of the contents of CDR. In addition, many researches
put their stress on the construction of a whole framework and the integration of the
existing systems [17, 24, 25, 28, 39]. Their aim is to build up a charging module in-
dependent of the existing systems that can take care of all the billing-related affairs.
Among the researches, some takes the charging module for some kind of middleware.
Such methods are usually developed to fit applications not only with UMTS but also
other wireless network systems like GSM, wireless Lan, Bluetooth, and so on. Of
course, there are also some other extensions to make from these methods. For exam-
ple, SET (Secure Electronic Transaction Protocol) is a mechanism that can be taken
in as a mobile charging standard [22]. In addition, some researchers suggest that
charging and billing can be viewed from the angle of payment [18, 23, 31, 34]. New
technologies such as E-cash (brought up in [23]) and Electron Tickets (mentioned in
[35]) can also help. However, a comparatively big difference is made in [13], where
concepts of Hash Chain and KryptoKnight cryptography [12, 20, 21] are taken in to
enable their protocol to reach non-repudiation without using PKI.
The research efforts mentioned above have each made its own contribution to
the charging and billing problem solving. Of course, each has its own strengths and
weaknesses. However, none of the above methods addresses the biggest problem
the current UMTS billing system design has: that the service system provider plays
a super dominant role while the service subscribers can do nothing but accept in
submission whatever the bill says. When a subscriber does not agree with a certain
payment listed in the bill, unless some proof outside the system can be raised, which
is usually either impossible or not worth all the trouble, it is simply no use for the
subscriber to argue with the service provider because the system is completely in
the service provider’s favor. Of course such a design is very unfair to the consumer.
Even the non-repudiation mechanism mentioned above is designed for the service
provider to be able to shut a disagreeing subscriber’s mouth instead of making sure
that the rights on both sides are properly preserved.
5
and the service provider keeps the last hash value as proof. This way, disagreements
can be settled among cooperating mobile communication service providers. In this
paper, the authors wish to offer a new, integrated and practical protocol built up
on the basis of their previous endeavors that can solve all the charging and billing
problems between the subscriber and the telecommunication service provider.
The major difference between the new protocol this paper presents and its pre-
decessors is that the new protocol keeps UMTS the way it is without making any
modification. Since UMTS is already a popular system prevalently used, any modi-
fication can mean serious damage to its practicability. In real applications, the new
protocol can be attached to the original UMTS structure that has been running for
years and make the whole system more powerful without causing any serious com-
patibility problems. The aim of this paper is to explore the possibility for UMTS
to be strengthened and become a fair system both to the service provider and to
the subscriber when it comes to charging and billing. With the rights on both sides
properly preserved, the subscriber will no longer have to live with the fact that every
penny has to be paid the way the bill says just because it says so; instead, it is the
service provider’s job to prove to the subscriber that every line on the bill actually
comes from some consumption behavior signed and recorded by both parties. In the
meantime, the new protocol can also rule out the possibility of a subscriber cheating
by denying accessing the service because everything that has been done leaves a
signed record and there is simply no denying.
2 The Proposed Scheme
The UMTS AKA (Authentication and Key Agreement) protocol [4] is constructed
by 3GPP and has been prevalently used in UMTS-based systems everywhere. The
security of the UMTS AKA protocol mainly relies on a secret key K stored in the
USIM (Universal Subscriber Identity Module) card of the subscriber’s mobile device
(or MS, meaning Mobile Station). This secret key K is only known to the USIM
7
UMTS environment and that it can satisfy the following requirements:
1. It should be able to solve billing disputes evenly, allowing both the service
provider and the consumer to have a fair shot in proving their point. In other
words, the new mechanism should provide UMTS with non-repudiation.
2. It should fit every UMTS operation, making as little modifications as possible.
3. It should be able to deal with all the ways of payment present in the current
UMTS environment.
2.1 Foundation
In our new protocol, hash chains are used as tokens for payments because of their
irreversibility. Every hash value stands for an equal amount of money. For example,
suppose a subscriber has a0. From a0 the following hash chain {a1, a2, · · · , ai} can
easily be derived through the hash function. When it is time to pay the bill, the pay-
ments will be done in reverse order starting with ai, namely (ai, ai−1, ai−2, · · · , a1).
Due to the irreversibility of the hash function, the service provider cannot derive
any an−1 from an. Therefore, all the service provider has to show is the last hash
value, and then the accounts can be settled and proven for the subscriber. In our
protocol design, every hash value represents a fixed unit. For example, if the service
the SN provides is supposed to be paid for by the minute, then the MS will deliver
one hash value to the SN every minute, and the last hash value the SN collects
reveals the total time of service the MS has consumed. Sometimes, however, instead
of the minute or the second, the charge that the SN asks for is counted by the times
of service. For example, suppose it costs one X dollars to download a piece of music
for the phone ring. If every hash value stands for Y dollars, then the MS will send
as many as X/Y hash values to the SN when a piece of music has been downloaded.
In this case, suppose the first hash value in the chain to be used on account of this
music download is aj. If X/Y = k, then all the MS has to send to the SN is aj−k+1
because it is enough to show that k units, namely Y dollars, have been consumed.
9
Just like the original UMTS AKA protocol, our AKA charging protocol is com-
posed of two parts, namely the authentication vector distribution phase and the
authentication and key establishment phase. The major difference between the
original AKA protocol and our AKA charging protocol, however, is that our new
protocol has a new party involved, namely the ledger server, with some additional
parameters attached to the ends of the original authentication parameters. The at-
tached parameters help ensure the compatibility of the our protocol with the original
UMTS design. The telecom company can either leave out the additional parameters
and offer the original services only or bring in the additional parameters and offer
not only the original services but also the extended services. At the same time, the
subscriber also can choose either to leave out the additional parameters and ask for
only the original services or to bring in the additional parameters and enjoy both
the original services and the extended services. This way, the original AKA can
function properly with or without the existence of the our protocol.
Here are some steps to take in our authentication vector distribution phase:
1. The MS provides not only its IMSI/TMSI for identification but also a seed
(Seedi) to the SN. Then, the SN forwards the received message to the MS and
the HN like it does in the original UMTS AKA protocol. What is different
is that the HN will forward the message it receives from the SN to the ledger
server. In the message produced by the MS, there is Seedi = f3kl(Seedi−1),
Seedi−1 stands for the seed used for authentication last time, and the original
Seed0 and secret key kl are decided by both the MS and the ledger and only
known to them both. In addition, f3 is the key generating function of the
standard UMTS [5, 6]. We use it to produce the association between the seeds
we use at adjacent times that makes sure that the Seedi the ledger server
receives was actually sent out by the MS, not by the SN or the HN. This
can also be considered as a kind of authentication too. Therefore, the ledger
has to keep the Seedi the MS used last time, namely XSeedi−1, and confirm
11
synchronization problems happen to the seed Seedi shared between the MS
and the ledger server due to information loss. In addition, to take further
precautions, both the MS and the ledger server will keep the seeds used the
previous time and the time before the previous time, namely Seedi−1 and
Seedi−2. If the Seedi−1 values do not agree, then Seedi−2 will be used to make
sure no synchronization problems occur in our protocol.
The second phase, namely the authentication and key establishment phase, of
our AKA charging protocol is the same as that of the original UMTS AKA protocol.
It goes as follows:
1. The SN extracts the first fresh string of parameters from the AV of the MS
received from the HN. Then the SN sends the random number Rand and the
authentication parameter AUTN , both taken out from the string of parame-
ters extracted from the AV , to the MS.
2. Upon receiving the Rand, AUTN , and RX from the SN, the MS checks the
correctness of these data to make sure of the identity of the SN. Then, by
using the Rand and the secret key it shares with the HN, The MS figures out
the RES and some other data to be used later for the connection such as key
IK, and CK. Now the MS sends the RES back to the SN. Note that the
purpose of the RXcheckout is to make sure that neither the SN nor the HN is
cheating.
3. The SN compares the received RES with the one taken out from the AV . If
the result is positive, then the MS proves to be the lawful subscriber. Now the
CK and IK from the AV can be used to create a connection.
Authentication is the basis of all charging systems. The original UMTS AKA
protocol can already do perfect authentication and identify the subscriber. Then,
the extra parameters we add to the protocol can help take care of the charging and
13
Figure 4: Our charging protocol
Figure 5: Our billing protocol
value RX−i it received along with the count of charging units i to the HN. Taking
down the records, the HN proves the correctness of the bill to the subscriber in the
billing phase.
As Figure 5 shows, when it is time for the bill, the HN first checks to see if all
the hash values match the subscriber’s consumption records. If nothing goes wrong,
the bill is sent to the MS, and the hash values are sent to the ledger server as proofs.
The ledger server checks the correctness of both RX and Rm and makes sure that
the data came from the subscriber. Then, the hash values are used to figure out the
amount of money to charge, and the subscriber is or course informed of the amount.
On the other hand, if there are charging relationships between the SN and the HN,
the SN will certainly send a bill to the HN too. The MS compares the bill received
from the HN and the amount learned from the ledger server and sees if they show
the same number. Everything proves to be all right if they are the same; however,
if they differ, that is where our dispute protocol (see Figure 6) comes into play.
15
to turn over the original thing, including the CDR foundation it relies on, but only to
add a little something to it so that a long unsolved problem, or a long unaddressed
issue, can be properly taken care of. The little extension we add to the original
UMTS AKA protocol does accomplish its mission of offering the subscriber some
solid grounds for fair play against the service provider on bill disputes, a right the
subscriber deserves. By bringing in the ledger server, our AKA charging protocol
makes it possible for the subscriber to disagree on the bill with easy, hard proof in
the hand.
3.1 Our Objectives
The three objectives of our AKA charging protocol are to fairly resolve bill disputes,
to be applicable to the current UMTS standard environment, and to fit the various
ways of UMTS-based payment. Here are some discussions as to how the three
objectives can be achieved.
1. Fair resolvability of bill disputes: Taking advantage of the non-repudiation
property the hash chain has, we bring in hash values as proofs of service
consumption. When there are disputes, these hash values are the best evidence
the service provider has to prove the correctness of the bill to the subscriber.
To rule out the possibility of the subscriber deceptively denying accessing
the service, the ledger server will sign for the subscriber in the first place,
which puts non-repudiation on the subscriber’s consumption behaviors. In
our protocol, non-repudiation does not have to show on the service provider’s
side against the subscriber; all the service provider has to do is make sure that
the subscriber cannot deny any line on the bill. Anyways, without the right
hash values, there is no way the service provider can charge the subscriber for
any service that has not been used.
2. Applicability to the current UMTS standard environment: Our new protocol
is only an extension added to the original UMTS AKA protocol with nothing
17
conveyance charging, wholesale charging, supplier charging, and capacity charging,
disputes in these places can all be avoided when our AKA charging protocol is
applied.
3.2 Security
Before addressing the security issue, let’s check out the whole background environ-
ment first. In the UMTS framework design, the MS translates to a portable, ex-
tremely light weight device with relatively limited computation and storage power.
By contrast, the SN, HN, and the ledger server are fixed equipment with much
greater computation and storage power. The communication between the MS and
the SN depends on the radio wave, which is quite vulnerable to eavesdropping and
interception launched by malicious attackers. Distinctly, the channel of communi-
cation built up to connect such fixed facilities as the SN, HN and ledger server is
a wire through which the traffic runs in an encrypted form. This is a way of com-
munication malicious attackers would consider more difficult to break in. Due to
the limited computation and storage power the MS has, the ledger server is trusted
with such tasks as signing and storing the proofs of service consumptions as well as
checking the correctness of the bill. The following are some aspects of the security
issue:
1. Authentication: Our AKA charging protocol is developed upon the basis of
the original UMTS AKA protocol design. Therefore, as far as authentication
is concerned, the security level of our AKA charging protocol is the same as
that of the original AKA protocol, which is constructed by mechanisms such
as mutual authentication, anonymity, and so on.
2. Interception: During transmission, the service consumption record RX−i is
always in its encrypted form, and the cipher key CK, which differs for each
connection, is owned only by the MS and the SN. Therefore, there is no risk
of information leaks due to data interception. As for the charging and billing
19
the service provider with the capability to offer subscribers a fairer, more convincing,
more user-friendly charging and billing service.
Besides compatibility, the load on the system is also one thing to keep in mind.
In order not to put too much of an extra load on the system, we have employed
methods of low computation power consumption. Most of the computations our
new protocol requires are hashing operations because the hash function is quite
economical in computation power consumption. On the other hand, because what
the MS has in the hand is a mobile device of low computation power, the ledger
server, which is a fixed organization with great computation power, comes in and
does the signing on behalf of the MS so that the non-repudiation requirement is
satisfied. In fact, both the ledger server and the HN are capable of signing data
when necessary.
In addition to the computational load, the storage space is also among the list
of consideration. In spite of the fact that all of the SN, HN, and ledger server are
fixed facilities seemingly free from storage space constraints, we still try to consume
as little of it as possible. For the SN and the HN, the last hash value is the only
one to store for each connection because all those that came before it can be derived
from it. The focus of the concern, however, is on the MS. Due to the limited storage
space the mobile device, in our protocol design, has to have the ledger server do the
necessary data recordings. As far as the MS is concerned, there is still one more
thing worthy of notice. We know that the MS owns the first hash value R0 and can
derive the whole hash chain RX by repeatedly using the hash function following the
order of R1, R2, · · · , RX−2, RX−1. However, the hash values are in fact to be sent
out in such order as RX−1, RX−2, · · · , R2, R1. Generally speaking, the MS can either
figure out all the hash values in the hash chain (R1, R2, · · · , RX−2, RX−1) once and
for all and store them for future use, or store only R0 and compute RX−i every time
when it is time to use it. The former way saves time at the cost of plenty of storage
space, while the latter way avoids the trouble of storage space insufficiency at the
21
has, the ledger server has to sign and check the service consumption records on
behalf of the subscriber. The existence of the ledger server in the new design makes
our new protocol applicable to the current environment. Besides the subscriber and
the telecom company, other related service providers involved such as roam service
providers can also make use of our new protocol to ensure the correctness of their
charges and bills. In a word, our extended AKA protocol is indeed a good solution
to the charging and billing problems long left unsettled.
References
[1] 3rd Generation Partnership Project. “Technical specification group services
and systems aspects, charging and billing,”. tech. rep., 3GPP TS 22.115.
[2] 3rd Generation Partnership Project. “Technical specification group services and
systems aspects, charging management, charging architecture and principles,”.
tech. rep., 3GPP TS 32.240.
[3] 3rd Generation Partnership Project. “Technical specification group services
and systems aspects, charging management, charging principles,”. tech. rep.,
3GPP TS 32.200.
[4] 3rd Generation Partnership Project. “Technical specification group services
and systems aspects, security architecture,”. tech. rep., 3GPP TS 33.102.
[5] 3rd Generation Partnership Project. “Technical specification group services
and systems aspects, specification of the MILENAGE algorithm set, document
1: General,”. tech. rep., 3GPP TS 35.205.
[6] 3rd Generation Partnership Project. “Technical specification group services and
systems aspects, specification of the MILENAGE algorithm set, document 5:
Summary and results of design and evaluation,”. tech. rep., 3GPP TS 35.909.
23
[15] Christos K. Dimitriadis and Siraj A. Shaikh, “A biometric authentication pro-
tocol for 3g mobile systems: Modelled and validated using csp and rank func-
tions,” International Journal of Network Security, vol. 5, pp. 99–111, July 2007.
[16] European Telecommunication Standards Institute (ETSI). “Recommendation
GSM 03.20, security related network functions,”. tech. rep., June 1993.
[17] F. Eyermann, P. Racz, B. Stiller, C. Schaefer, and T. Walter, “Service-oriented
accounting configuration management based on diameter,” The 30th Anniver-
sary IEEE Conference on Local Computer Networks, pp. 621–623, Nov. 2005.
[18] M. G. Gouda1 and A. X. Liu, “Formal specification and verification of a se-
cure micropayment protocol,” International Journal of Network Security, vol. 7,
pp. 81–87, July 2008.
[19] G. Horn, K.M. Martin, and C.J. Mitchell, “Authentication protocols for mobile
network environment value-added services,” IEEE Transactions on Vehicular
Technology, vol. 51, pp. 383–392, Mar. 2002.
[20] M. S. Hwang and P. C. Sung, “A study of micro-payment based on one-way
hash chain,” International Journal of Network Security, vol. 24, no. 2, 2006,
MONTH =.
[21] P. Janson, G. Tsudik, and M. Yung, “Scalability and flexibility in authentica-
tion services: the kryptoknight approach,” Sixteenth Annual Joint Conference
of the IEEE Computer and Communications Societies, vol. 2, pp. 725–736, Apr.
1997.
[22] L. Jin, S. Ren, L. Feng, and G.Z. Hua, “Research on WAP clients supports
SET payment protocol,” IEEE Wireless Communications, vol. 9, pp. 90–95,
Feb. 2002.
[23] A. Karygiannis, A. Kiayias, and Y. Tsiounis, “A solution for wireless privacy
and payments based on e-cash,” First International Conference on Security
25
[31] D. Palaka, P. Daras, K. Petridis, and M. G. Strintzis, “A novel peer-to-peer
payment protocol,” International Journal of Network Security, vol. 4, pp. 107–
120, Jan. 2007.
[32] M. Pias, S. Wilbur, S. Bhatti, and J. Crowcroft, “Securing the internet metering
and billing,” IEEE Global Telecommunications Conference (GLOBECOM ’02),
vol. 2, pp. 1603–1607, Nov. 2002.
[33] J.F. Stach, E.K. Park, and K. Makki, “Performance of an enhanced GSM proto-
col supporting non-repudiation of service,” Computer Communications, vol. 22,
pp. 615–680, May 1999.
[34] H. Tewari and D. O’Mahony, “Real-time payments for mobile IP,” IEEE Com-
munications Magazine, vol. 41, pp. 126–136, Feb. 2003.
[35] H. Wang, Y. Zhang, J. Cao, and V. Varadharajan, “Achieving secure and
flexible m-services through tickets,” IEEE Transactions on Systems, Man and
Cybernetics, Part A, vol. 33, pp. 697–708, Nov. 2003.
[36] Shengbao Wang, Zhenfu Cao, and Haiyong Bao, “Efficient certificateless au-
thentication and key agreement (CL-AK) for grid computing,” International
Journal of Network Security, vol. 7, pp. 342–347, Nov. 2008.
[37] Chou-Chen Yang, Kuan-Hao Chu, and Ya-Wen Yang, “3G and WLAN in-
terworking security: Current status and key issues,” International Journal of
Network Security, vol. 2, pp. 1–13, Jan. 2006.
[38] S. Yen, L. Ho, and C. Huang, “Internet micropayment bared on unbalanced
one-way binary tree,” Proceedings on CrypTEC ’99, pp. 155–162, 1999.
[39] S. Yu, S. Yoon, J. Lee, H. Kim, and J. Song, “Service-oriented issues: Mobility,
security, charging and billing management in mobile next generation networks,”
The 1st International Workshop on Broadband Convergence Networks (BcN
2006), pp. 1–10, Apr. 2006.
27
式訊息，進而導致不公平交易，損害客戶的隱私權、機密竊取等安全隱患。因此，
學者王曾提出了一個移動代理模式來解決隱私問題。最重要的概念，是可靠的代
理人，我們可以稱為”代理人中心”的機制。只有它知道哪個代理是分配給哪個
客戶的關係，並且藉由隱藏使用者隱私的設計，避免了風險客戶訊息暴露給惡意
主機。 
本文延伸 ”代理人中心” 的概念，以幫助客戶與服務供應商互動。不同於
傳統的移動代理機制，所有用戶的訂單在代理人中心進行協商與談判。這種設計
避免了揭示用戶訊息給服務提供商的主機的風險，使交易雙方能不受惡意主機非
法收取代理的嵌入式訊息，進而導致不公平交易的干擾。因此能使交易雙方能公
正的進行搓合談判。這機制保障了雙方的權利，對於買方和賣方都是非常重要
的。並且在設計中，包括了在公平的交易合約簽屬機制，能夠降低交易風險。在
簽署過程中，交易雙方在簽署完成之前，都不會得到完整簽署訊息。使交易雙方
都不會因任何一方惡意中止交易而受害，我們利用分割使用者私鑰的設計，讓使
用者的簽章在簽署過程中，交易雙方在簽署完成之前，另一方不會得到完整簽署
訊息，避免惡意中止簽署造成使用者權益受損。另一方面在此設計中，一旦發生
惡意中止簽署，代理人中心也將擔任確保談判是公平和安全的角色。 
我們的設計除了滿足了移動代理技術中需具匿名性(Anonymity)、不可偽造
性(Unforgeability) 和不可否認性(Non-repudiation)的安全需求，也滿足了公
平的合約談判與簽署中所需具備的：公平(Fairness)、不主動介入(Optimism)
的特性。 
這樣的設計克服了移動代理技術的弱點，使用受信任”代理人中心”解決安
全問題，提供了匿名性、不可偽造性、不可否認性、公平性和不主動介入的特性，
保護用戶的隱私。這種設計還包括公平的合約談判，這減少交易風險的設計是非
常重要的，也很適合應用在目前正快速發展的雲端計算環境中。 
    由於議場在里斯本科技大學之 IST研究所舉行，因此我們也順便參觀學校的
教學情況及設施。此研究所成立於 1911 年，因此今年剛好一百年慶。 
    本次與會之心得大要乃是：歐盟在資訊科技之合作越來越密切，而葡萄牙之
資訊科技發展可以更上層樓;其細部規劃由第二位專題演講者,Dr. Mario 
Campolargo  (European Commission-DG INFSO Director, Emerging 
Technologies & Infrustructures) 在”Boosting the Digital Agenda for 
Europe: The Contribution of Future Internet”闡明。 
     帶回之資料有 EUROCON2011 會議論文摘要及 CD 一片﹑ PROGRAM GUIDE 一
冊及多份此後一年資訊安全國際會議之 call for papers海報可供參考。也感謝
國 科 會 對 本 人 之 出 席 國 際 會 議 之 經 費 資 助 。 
A Secure Negotiable On-demand Services Model for 
Cloud Environment 
 
Jun-Chao Lu 
Computer Science and Engineering 
National Chung-Hsing University 
Taichung, Taiwan 
phd9416@cs.nchu.edu.tw 
 
Yu-Yi Chen 
Management Information Systems 
National Chung-Hsing University 
Taichung, Taiwan 
chenyuyi@nchu.edu.tw 
 
Jinn-Ke Jan  
Computer Science and Engineering 
National Chung-Hsing University 
Taichung, Taiwan 
jkjan@cs.nchu.edu.tw 
 
 
 
Abstract— This paper presents a solution for secure negotiable 
transactions model based on the infrastructure of mobile agent 
technology. Due to its characteristics of mobility and autonomy, 
mobile agent technology was playing an important role in 
electronic commerce. And it will be suitable for the feature Cloud 
Computing. However, some security issues must be addressed 
before mobile agents can be employed in real life commercial 
applications. This study reviews the security issues of the mobile 
agent paradigm for electronic commerce applications. And 
overcome this disadvantage by a trusted agent home to protect 
privacy. Moreover, a fair contract negotiation is discussed in this 
study, that it can effective reduce the risk of online service 
transaction. 
Keywords-Electronic Commerce, Agent, Fair-exchange, 
security, cloud computing  
I.  INTRODUCTION  
The computing will becomes a kind of services that similar 
to traditional utilities such as water, gas, electricity, and 
telephony in the near-future. Due to the increase in the 
technological advancements, this kind of “everything-as-a-
service” (XaaS) [1] or called “cloud computing” [2] is 
becoming the hottest topics. This is revolutionary for IT 
industry. With an elastic, usage-based pricing model, a user 
only needs to pay for those computing instance or capacity that 
he requires [3]. There will be an explosive growth of the 
market for cloud computing. However, previous research 
points out that when users have asymmetric information [4], 
then the market fails. Asymmetric information means that what 
a user knows is different from what a seller knows. Even the 
U.S. has selected some online service provider [5], efficiently 
finding this information is still not easy since the Internet often 
causes information overload.  
The research [6] shows that the concept of “mobile agents” 
can solve the problem above. Mobile agent is a generic term 
for an autonomous software entity that is well suited for 
electronic commerce applications on the Internet, and has been 
widely investigated in recent years. However, mobile agents 
also have some security risks [7]. Malicious hosts may illegally 
collect the agent’s embedded information [8, 9, 10], leading to 
unfair transactions that damage the customers’ privacy. 
Therefore, Wang [9] and Chen [11] proposed a mobile agent 
model to solve privacy problems. The most important concept 
of those schemes are reliable agent administrator called the 
Agent Home. Only it knows which agent is assigned to each 
customer. This design avoids the risk of customer information 
being revealed to malicious hosts. 
This paper uses the Agent Home concept to help customers 
interact with online service providers. Unlike traditional mobile 
agent schemes, all the users’ orders are negotiated in the Agent 
Home. This design avoids the risk of revealing user 
information to online service providers’ hosts, and enables fair 
negotiation. To protect the rights of both buyer and seller, it is 
very important to include a contract in each transaction, as it 
reduces the transaction risk. In the proposed design, the Agent 
Home can also ensure that negotiations are fair and secure.  
Before introducing the proposed design, this study briefly 
surveys the criteria for agent-base secure transaction scenarios 
[9,10]. The major security requirements for agent-base 
electronic transaction are: Anonymity, Unforgeability, and 
Non-repudiation. Fair contract negotiation is also an important 
point in the proposed agent-base service. The criteria for fair 
contract signing protocol include: Fairness, Optimism, and 
Abuse-Freeness:  
II. THE SECURE ON-DEMAND SERVICES REQUEST MODEL 
A. The participating parties and notations 
Figure 1 illustrates the parties involved in this scheme, as 
the following section describes: Users ,Online Service, and 
Agent Home.  
 
Figure 1.  The basic structure of the proposed scheme 
The Agent Home issues two kinds of mission-oriented 
agents and the Online Service Providers issue another kind of 
agent: Invite Agent (IA), Negotiation Agent (NA), and Service 
Agent (SA):  
Agent Home 
Online Services Providers 
User 
III. ANALYSIS 
This study proposes a mobile agent system based on a 
trusted Agent Home. The following section examines whether 
or not this system meets the requirements listed above. 
A. Anonymity 
In the proposed scheme, the only way an Online Service 
Provider can acquire User’s private information is to dig 
through the message carried by the Invite Agent. However, the 
carried message ( AHREQCC CertSGVouREQSN ,,,, ) contains no 
any private information. Thus, anonymity is guaranteed in the 
Notification Phase. 
B. Unforgeability 
To achieve unforgeability, each message should be verified 
as accurate so that nobody can disturb the transaction process. 
This section examines unforgeability scenarios for the 
proposed scheme as follows. 
Unforgeability in the Notification Phase: The Invite Agent 
carries both signatures to the Online Service Provider to 
confirm that the pre-transaction is really issued by someone 
with the help of Agent Home. 
Unforgeability in the Contract Signing Phase: In the 
Contract Signing Phase, both the Online Service Provider 
and User generate signatures SCntSG _  and CCntSG _ for their 
agreement to the Contract. These unforgeability signatures 
represent promises to make complete the transaction.  
C. Non-repudiation 
Non-repudiation means that the request party provides 
related proof (such as a digital signature) for the other party, 
allowing it to verify that each transaction will not suffer from 
any false denial. The following section describes non-
repudiation scenarios for the proposed scheme as follows. 
Non-repudiation in the Notification Phase: Upon receiving 
the response signature REQSG of the User’s request message, 
the Agent Home cannot deny it had agreed to provide agent 
service for the User’s request.  
Non-repudiation in Contract Signing Phase: In this phase, 
both the User and Online Service Provider acquire the 
signatures SCntSG _  and CCntSG _  respectively. At this point, 
neither party can deny the transaction or commitment price. 
D. Fairness 
In the proposed design, no party can gain an advantage 
over a correctly behaving party. The following section 
describes fairness scenarios for the proposed scheme as 
follows. 
• Before step 3 of the Contract Signing Phase, the Agent 
Home provides User multiple propose contracts that 
gather from Online Service Providers during the pre-
transaction. However, the User does not receive any 
signatures from these Online Service Providers. Hence, 
the User will not get any advantage from the other 
Online Service Providers which he has no interest to 
transaction.  
• Upon completing the Contract Signing Phase, the User 
and Online Service Provider obtain signatures from 
each other. This process is fair since no one can deny 
the transaction or gain an advantage over correctly 
behaving parties. 
Upon completing step 4 of the Contract Signing Phase, 
the Online Service Provider sends the signature 
SCntSG _  for this transaction to the User. However, 
suppose the User’s complete signature CCntSG _  is not 
sent back to the Online Service Provider in step 5. The 
signature CCntSG _  will be generated as the Online 
Service Provider requests the Dispute Resolution 
Phase. The Agent Home will verify the information 
provided by the Online Service Provider to ensure that 
the User has committed to the contract. Then, the 
Online Service Provider receives the User’s complete 
signature CCntSG _  generated by Agent Home in step 2 
of the Dispute Resolution Phase. 
• However, the Online Service Provider may also 
request the Dispute Resolution Phase for not finishing 
step 4 of the Contract Signing Phase. This means that 
its SCntSG _  was not sent to User, but yet it still asks the 
Agent Home to generate CCntSG _ . This kind of trick 
will not work in the proposed design. At the end of the 
Dispute Resolution Phase, the Agent Home also 
forwards the Online Service Provider’s signature 
SCntSG _ to the User. Both parties will receive the 
other’s signature simultaneously. 
E. Optimism 
Asokan et al. proposed the concept of “optimistic” fair 
exchange [15]. In this study, the trusted third party (TTP) 
should not be involved during the transaction when the parties 
behave correctly. The TTP only becomes involved in a 
transaction in case of problems with one of the parties. 
Obviously, the proposed scheme is “optimistic” as the Agent 
Home is not involved during the transaction (step 3 to step 5 of 
the Contract Signing Phase). If the transaction is not complete, 
it will be fixed in the Dispute Resolution Phase with the 
assistance of the Agent Home. 
F. Mobile agent security 
In the proposed design, the Agent Home is considered to be 
a trusted agent platform that does not try to attack agents or 
other agent platforms. The Invite Agents coming from the 
trusted Agent Home are certainly not malicious for the Online 
Service Providers’ platform and other agents. The Invite 
Agents do not carry any private information such that it is 
useless to attack them for the malicious Online Service 
Providers’ platform. Therefore, the above four types of attacks 
would not be happened on the Online Service Providers’ 
platform. On the other hand, the agents on the Agent Home do 
not worry to be attacked since this platform is trusted. And 
there are some solution [16, 17] can be applied on the Agent 
Home such that it would not be attacked by the malicious Sale 
agent from the Online Service Provider. Security of malicious 
agents or agent platforms problems can be solved by a trusted 
國科會補助計畫衍生研發成果推廣資料表
日期:2011/07/21
國科會補助計畫
計畫名稱: UMTS的認證與金鑰協議協定及其計費機制之研究
計畫主持人: 詹進科
計畫編號: 98-2221-E-005-051-MY2 學門領域: 資訊安全
無研發成果推廣資料
件數 0 0 100% 件  技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
無 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
