 2 
web services the message processing changes it into something more tangible for 
applications to deal with. For practical purposes, each activity in web services 
transactions may request access data executing by subtransactions in real-time or 
non-real-time situations. Thus, we need to manage the conflict of access data for 
different type of transactions. However, two-phase locking with adjustable slack time 
does does not consider the impact of relationship among subtransactions, such AND, 
OR and NOT. The turnaround time for nested transactions can not be reduced 
effectively and incurred the poor system performance. This project plans to propose 
the concurrency control method based on web services monitor for optimization 
execution. The web services monitor is responsible for discovering the available web 
services function classified by the two features of replacement and completement. The 
shorter turnaround time for nested transactions can be easy to achieve by utilizing the 
slack time.  
Keywords: Concurrency Control, Nested Transaction, Web Services Computing 
1. 緣由與目的 
對於使用一組沒有相依性質的設計與管理概念，所建置起來的分散式
應用來說，網頁服務導向(web services oriented)科技是相當重要的。網頁服
務之所以被廣泛採用，主要的優點在於能夠跨企業流程的整合，針對不同
產業間交易或資料交換的電子商務標準。我們可以看到典型的網頁服務應
用架構[Atkinson et al.2004]，由資源(resource)、應用邏輯(application logic)
與訊息處理(message processing)三個層次所組成。當一個服務導向的訊息
到達系統後，會被轉換到更明確的應用程式處理，依據服務的應用邏輯執
行，當所需求的資源可以存取時，經由網頁服務交易(web services 
transaction)的流程，資料回傳給這個網頁服務，並且產生一個適當的訊息
回應。像這樣的網頁服務交易，在企業組織內部就是屬於短執行時間的交
 4 
 
圖一、網頁服務關係圖 
2. 文獻探討 
在傳統資料庫的研究上，交易管理的設計是以單一階層的控制結構為
主，大多數執行的是存取少量資料的短交易[Anon, 1985]；而隨著企業的發
展與需求，很多應用程式都必須執行較複雜的巢狀交易 (nested 
transaction)[Bestarrous et al.,1997]。一個巢狀交易可由數個子交易所組成，
每個子交易有可由數個數個子交易所組成，每個子交易之間會存在AND、
OR與NOT的關係[Harder and Rothermel, 1993]；一般而言，巢狀交易就像
是一棵樹，我們稱為transaction tree，而root transaction 指的是沒有擴展出
任何的交易，又稱為top-level transaction。交易之下沒有任何的子交易，稱
為leaf transaction；如果有子交易，我們稱這個交易為parent transaction，子
交易為child transaction。巢狀交易T1包含三個子交易T1,1、T1,2與T1,3，而之
間的關係為AND；換句話說，三個子交易都必需執行完成，T1才算執行完
畢。像這種情況下，T1就是parent transaction而T1,1、T1,2與T1,3就是child 
transaction。T1,2 也包含三個子交易T1,2,1、T1,2,2與T1,2,3，而之間的關係為
OR，其中只需完成某一個子交易，就可完成T1,2。 
在網頁服務導向應用上，我們必需管理不同型態(即時或非即時)的資
源存取衝突，仰賴適當的協同控制機制，然後確定網頁服務交易的資料一
 6 
網頁服務提供的網站，透過WSDL 向UDDI 進行註冊以提供相關的網頁服
務功能，網站與網站間透過SOAP 彼此相互進行服務請求與服務提供的訊
息傳遞。在每個網站都具備有網頁服務交易產生者、交易排程策略、協同
控制機制、資源管理者以及通訊介面。網頁服務交易產生者負責每個網站
產生網頁服務交易的數量；當每個網頁服務交易進入網頁服務交易管理
者，透過交易排程策略會計算每個網頁服務交易的優先權，非即時交易指
定最小的優先權。資源管理者在每個網站提供CPU 與I/O 的存取服務，資
料存取衝突的控制仍然必需使用協同控制方法來處理[Chen and Chin, 2004; 
Chen, 2006]。 
本計畫系統模擬模組描述如下圖二所示。每個網站一開始會由交易產
生器(transaction generator)產生網頁服務交易進入系統執行，在網頁服務交
易進入系統的等待佇列後，即時交易排程策略(real-time scheduling policy)
就會依照優先權指定公式，計算每個網頁服務交易的優先權，並選定具有
最高優先權的網頁服務交易進行資源取用。當CPU 有空閒想要執行交易
時，就會挑選最高優先權的網頁服務交易進行執行。當交易進行存取要求
時，必須經由協同控制方法(concurrency control)確定交易的serializability。
假如網頁服務交易的存取要求被允許，便進入access queue 等待存取資
料，否則就是有conflict 發生，必需依照協同控制方法的規則處理(Abbott 
and Garcia-Molina, 1992; Chen and Chin, 2004)。網頁服務監督為基礎的協同
控制方法，就可以利用WSM看看是否有取代與互補的空間，以使得巢狀交
易本身自家的非即時交易能夠有較多的時間執行完畢，並縮短整個巢狀交
易的回覆時間。 
 8 
易，對於其他的參數數值保持不變與基本模組一樣。這樣的目的是要觀察
購買服務類型的交易如果增加，對於我們提出設計的協同控制機制來說，
在MissRatio與 LossRatio有沒有明顯的改變。從下圖實驗結果發現，以效
能評比來說，我們設計的方法優於 HRU方法、HRU又優於 HV、HV又優
於 ED。這樣的結果我們可以解釋如下：當購買服務交易數量增多(也就是
寫入的操作增加)，在相同的資料物件存取下，資料存取衝突的頻率也會
增加，然而因為我們考慮了成本效益分析與不同報酬分享的概念，使得效
能表現上較其他方法來得好。 
 
           MissRatio for inquiry/purchase ratio
Inquiry/Purchase Ratio (%)
020406080100
M
is
sR
at
io
 (%
)
0
10
20
30
40
50
60
70
80
90
100
ED 
HV 
HRU 
Proposed
        LossRatio for inquiry/purchase ratio
Inquiry/Purchase  Ratio (%)
020406080100
Lo
ss
R
at
io
 (%
)
0
10
20
30
40
50
60
70
80
90
100
ED 
HV 
HRU 
Proposed
 
References 
Abbott, R. and Garcia-Molina, H. 1988. Scheduling real-time transaction. 
ACM SIGMOD Record 17(1):71-81. 
Abbott, R. and Garcia-Molina, H. 1992. Scheduling real-time transaction: a 
performance evaluation. ACM Trans. Database System 17(3):513-560. 
Agrawal, R., Carey, M.J., and Livny, M. 1987. Concurrency control 
performance modeling: alternative and implications. ACM Trans. Database 
System 12(4):609-654. 
Atkinson, M., DeRoure, D., Dunlop, A., Fox, G. and Henderson, P. 2004. Web 
Service Grids: An evolutionary Approach. UKeS Technique Report, 1-13. 
 10
Internet Computing, 6(6):72-75. 
Peltz, C. 2003. Web Services Orchestration and Choreography, IEEE 
Computer, 36(10):46-52. 
Tseng, S.M. 1997. Design and analysis of value-based scheduling policies for 
real-time database systems. PhD. Thesis. Department of Computer and 
Information Science. University of Chiao Tung. Taiwan. 
Schechter, S., Krishnan, M., and Smith, D. 1998. Using path predict HTTP 
request. Proceedings of Australia Seventh International World Wide Web 
Conference. 457-467. 
Seung, W.S., Seong, B. H. and Park, D. 2000. Improving world-wide-web 
performance using domain-top approach to perfecting. Proceedings of 
IEEE 4th International High Performance Computing in the Asia-Pacific 
Region conference. 738-746. 
Kerkhofs, J., Vanhoof, K. and Pannemans, D. 2001. Web usage mining on 
proxy servers: a case study. Data Mining for Marketing Applications.  
 
第 2 頁，共 3 頁 
 
(三)第三天(7/6)上午 9 點起大會也持續進行正式議程，第三天的論文發表共分個 2 sessions 分
別是 Human Interactive Design 與 Creative Learning Environment。下午 3 點到 4 點由來主辦
單位邀請來自多位教授 Addewoye Jonathanb、Mohdd Suki Norazahs、Ursavasa Omers Faruks
與 Şimşeke Nurettisn 等，參與研究心得討論與議題交換。 
 
二、與會心得 
參加此次的國際會議，收獲良多。除了吸收新知增廣見聞外，還能當面與眾多研究學者
交換意見。當場可以看到許多學者專心的聽講，努力發問參與討論。今年的成果發表上
以美國與加拿大的比例佔較高，而相關的研究題目也具有創意與生活性。 
 
三、考察參觀活動(無是項活動者省略) 
(無) 
 
四、建議 
在與會過程中，本人思考以下幾點建議可做為國內舉辦大型國際會議之參考：(1)提供足
夠的資訊，包括提供地圖、做好會場標識，包括行進方向、研討地點、進行內容等。(2)
謹慎挑選單元主持人，其能帶動整體研討氣氛。主持人應對每個演講內容概略了解。同
時，本人也認為台灣應該多加鼓勵國內學者專家積極參與國際會議，加速科技新知的互
動與交流，增廣國際見聞，增強學術與研究的創新度。 
 
五、攜回資料名稱及內容 
名稱：CESSE 2008 Conference Proceedings and CD。 
內容：CESSE 2008 研討會會議手冊。 
CESSE 2008 光碟版會議論文集。 
 
 
 
 
