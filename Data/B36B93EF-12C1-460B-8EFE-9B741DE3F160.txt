 I
一. 中英文摘要 
摘要 
(n, k)-星狀網路是一種通用型 n-星狀網路。在 k=n−1 (k=1)時它與 n-星狀網路(n 維完全網路)
同構。而 n-星狀網路(n 維完全網路)的許多拓樸特性已經在一些文獻中被求出。本報告將焦
點集中於求解(n, k)-星狀網路在 2≤k≤n−2 時的 ω-寬直徑與 ω-容錯直徑。首先計算(n, k)-星狀
網路之 ω-寛直徑，方法是在任意一對節點之間建立一個不相交路徑集，以求得(n, k)-星狀
網路之寬直徑的上限值。其次，在某一對特定節點之間建立一個最佳的不相交路徑集，以
求得(n, k)-星狀網路寬直徑的下限值。根據上限值與下限值發現，在⎣n/2⎦+1≤k≤n−2 且 n≥7
時，它們的上限值比下限值多一。因此，再對這些特定的(n, k)-星狀網路，它們的最長不相
交路徑集中，長度最長的路徑進行調整，使得它們的長度至少減一，而得到一個較佳之寬
直徑上限值。(n, k)-星狀網路的寬直徑因此而得以確定，因為它的上限值與下限值相同，即
⎣n/2⎦+1≤k≤n−2 且 n≥7 時，等於它的直徑加 1，否則為加 2。其次是計算(n, k)-星狀網路之 ω-
寛直徑，方法是觀察不相交路徑集中每一條路徑的長度，並計算各種不同長度的路徑數，
依此數據而得到(n, k)-星狀網路之 ω-寛直徑，依 ω 由小至大分別不大於它的直徑、直徑加 1
及直徑加 2，其中 1≤ω≤n−1。接著計算(n, k)-星狀網路之 ω-容錯直徑，首先計算(n, k)-星狀
網路之容錯直徑。依照定義，一個網路，它的寬直徑可以當成是容錯直徑的上限值。因此，
本報告使用一個包含有 n−2 個節點被移除或損壞的(n, k)-星狀網路，在其中一對特定節點之
間建立一條最短路徑，來計算容錯直徑的下限值，以此說明(n, k)-星狀網路的容錯直徑在 n≠5
且 k≠3 時與它的寬直徑相同，而對於(5, 3)-星狀網路的容錯直徑，重新計算它的上限值，它
的容錯直徑也因此得以確定為它的直徑加 1。其次是計算(n, k)-星狀網路之 ω-容錯直徑，方
法是用 ω-寛直徑所建立的不相交路徑集與(5, 3)-星狀網路的容錯直徑上限值，而得到(n, k)-
星狀網路之 ω-容錯直徑，依 ω 由小至大分別不大於它的直徑、直徑加 1 及直徑加 2，其中
1≤ω≤n−1。 
關鍵詞：(n, k)-星狀網路，星狀網路，互連網路，寬直徑，容錯直徑，點互斥路徑，不相交
路徑集。 
目錄 
一. 中英文摘要 ........................................................................................................... I 
摘要 ............................................................................................................................... I 
Abstract .......................................................................................................................II 
二. 報告內容 .............................................................................................................. 1 
(一) 前言 .......................................................................................................................1 
(二) 研究目的 ...............................................................................................................1 
(三) 文獻探討 ...............................................................................................................2 
(四) 研究方法 ...............................................................................................................8 
1. ω-Wide Diameter ....................................................................................................... 8 
1.1 One-to-One Vertex-Disjoint Paths .................................................................. 9 
1.1.1 α-Paths Constructions .......................................................................... 9 
1.1.2 β-Paths Constructions......................................................................... 12 
1.1.3 γ-Paths Constructions ......................................................................... 14 
1.2 Wide Diameter................................................................................................ 17 
1.2.1 Lower Bound ....................................................................................... 18 
1.2.2 Refinements for Some Containers ..................................................... 20 
Refinement 1: α-Paths Reconstruction .............................................. 23 
Refinement 2: β-Path Reconstruction ................................................ 25 
Refinement 3. γ-Path Reconstruction When e′=1.............................. 28 
Refinement 4. γ-Paths Reconstruction When e′=2 ............................ 29 
2. ω-Fault Diameter ..................................................................................................... 33 
2.1 Upper and Lower Bounds.............................................................................. 33 
2.2 Fault Diameter................................................................................................ 38 
(五) 結果與討論 .........................................................................................................39 
三. 參考文獻 ............................................................................................................ 39 
四. 計畫成果自評 .................................................................................................... 41 
附錄：The paper accepted by Information Sciences ......................................... 42 
 
 2
Some basic properties of an Sn,k, such as diameter [11], connectivity [11], broadcasting [10], 
average distance [12], embedding [6], [7], [8], Hamiltonicity [24], spanning connectivity [25], 
and wide diameter [28], have recently been computed or derived. These measurement results 
demonstrate that an Sn,k has excellent topological properties. Therefore, this work attempts to 
compute the ω-wide diameter and ω-fault diameter of an (n, k)-star network by constructing 
vertex-disjoint paths in it. 
(三) 文獻探討 
An (n, k)-star network (Sn,k) refers to a generalized version of an n-star network (Sn), where Sn,n−1 
and Sn are isomorphic [11] and Sn,1 is obviously a complete graph of n vertices (Kn). An Sn is a 
Cayley graph with a regular and hierarchical structure, and has been recognized as an attractive 
alternative to an n-cube for building massively parallel computers [1], [15]. An Sn has significant 
advantages, including low degree, small diameter, scalability and symmetry [1]. Additionally, 
many advantageous properties of an Sn, such as parallel paths [9], [20], spanning trees [29] and a 
high degree of fault tolerance [21], [22], [26], [27], [30], have been investigated. However, an Sn 
has a rigorous restriction, i.e., the number of vertices must satisfy n!. Thus, additional 
(n−1)×(n−1)! vertices are required to expand an Sn−1 to an Sn. To eliminate this restriction, the 
new network Sn,k has been presented [11]. Only additional vertices of (n−1)(n−1)!/(n−k)! are 
utilized to expand an Sn−1,k−1 to an Sn,k.  
An Sn,k is an undirected-regular and vertex-symmetrical graph. Parameters n and k, where 
1≤k≤n−1, are applied to determine the topological properties, such as the number of vertices in an 
Sn,k is n!/(n−k)!, the connectivity of an Sn,k is n−1 and the diameter of an Sn,k is 2k−1 if 1≤k≤⎣n/2⎦ 
or k+⎣(n−1)/2⎦ if ⎣n/2⎦+1≤k≤n−1 [11]. A vertex ρ in an Sn,k can be represented as a label p1p2...pk. 
The vertex set V(Sn,k) is defined as {p1p2...pk | pi≠pj, for i≠j and pi, pj in <n>}. Each element in 
<n> is referred to as a symbol. Symbol ∈ <k> (∈ <n>−<k>) is an internal (external) symbol. 
Moreover, symbol pi in label p1p2...pk is as follows: (1) fixed if pi=i (notably, position i is the 
desired position for symbol i); (2) misplaced if pi≠i and pi is an internal symbol, and (3) inner 
external if pi is an external symbol. A symbol not in the label p1p2...pk is desired if it is an internal 
symbol, and outer external if it is an external symbol. For instance, with ρ=369482 in S9,6, p4=4 is 
a fixed symbol. Additionally, p1=3, p2=6 and p6=2 are misplaced symbols; symbols 1 and 5 are 
desired symbols; p3=9 and p5=8 are inner external symbols, and symbol 7 is an outer external 
symbol. Vertex ρ is adjacent to ρpi and ρx by the following adjacent rules. 
1. ρpi=pip2... pi−1p1pi+1...pk, for all 2≤i≤k (swapping p1 with pi), and 
2. ρx=xp2...pk, for all x is a desired or outer external symbol (replacing p1 with x). 
The edge connecting ρ and ρpi is referred to as i-edge, and ρpi is referred to as i-neighbor of ρ. 
The edge connecting ρ and ρx is referred to as 1-edge, and ρx is referred to as 1-neighbor of ρ. Fig. 
1 shows the structure of an S4,2. 
The degrees of all vertices are n−1; each vertex is connected with (n−k) 1-edges, and an 
i-edge for each i, 2≤i≤k. Fig. 2 illustrates all neighbors of vertex 1234 in an S7,4. 
 4
/* Input: Label of vertex ρ. */ 
/* Output: Cycle representation of vertex ρ. */ 
Step 1: Construct the desired symbol set DS and the misplaced symbol set MS. 
/* Using the desired symbol set DS to construct the external cycle */ 
Step 2: do while (|DS|≠0) /* Construct an external cycle */ 
{ 
   Select a desired symbol d from DS. 
   Output d and then discard d from DS. 
   Let position i=d for finding which symbol reside at position i 
   do while (i is not a pseudo position) /* Other symbols in the cycle */ 
   { 
     Get symbol pi and then output pi. 
     if pi is not an external symbol then discard pi from MS. 
     Set next position i=pi. 
   } 
} 
/* Using MS to construct all internal cycles */ 
Step 3: do while (|MS|≠0) 
{ 
   Select a misplaced symbol m from MS. 
   Output m and then discard m from MS. 
   Let position i=m for finding which symbol reside at position i. 
   do while (m≠pi) /* Others symbol in the cycle */ 
   { 
    Output pi and discard pi from MS. 
    Set next position i=pi. 
   } 
} 
} 
An Sn.k retains many of the attractive properties of an Sn, such as vertex symmetry, 
hierarchical structure, maximal fault tolerance and simple shortest-path routing. Let Φi(ρ)=pi 
denote the symbol at the position i of label ρ. Notably, Φ1(ρpi) and Φ1(ρx)∈ <n>−{p1}, for all ρpi 
and ρx. In the following, some basic properties of Sn,k are adopted in this work and can be easily 
verified according to the adjacent rules. 
Fact 3.1. If vertices u and v are adjacent to each other then Φ1(u)≠Φ1(v). 
Fact 3.2. If vertices u and v are two distinct neighbors of vertex ρ then Φ1(u)≠Φ1(v). 
Lemma 3.3. Let vertices u and v be any two distinct vertices. If Φ1(u)=Φ1(v) then d(Sn,k; u, v)≥3. 
Proof. Given Φ1(u)=Φ1(v). Facts 3.1 and 3.2 reveal that u and v are not adjacent to each other and 
have no common neighbor between u and v. Therefore, d(Sn,k; u, v)≥3.   
Lemma 3.4. Let vertices u and v be two distinct vertices. If both u and v are 1-neighbors of ρ 
 6
Proof. Chiang and Chen showed in 1995 that d(Sn,k)=2k−1 if 1≤k≤⎣n/2⎦ and d(Sn,k)=k+⎣(n−1)/2⎦ if 
⎣n/2⎦+1≤k≤n−1 [11]. Due to 1≤k≤⎣n/2⎦ and ⎣(n−1)/2⎦+1≤k−1≤n−2 is impossible, three cases are 
considered as follows. 
Case 1. (1≤k≤⎣n/2⎦ and 1≤k−1≤⎣(n−1)/2⎦): d(Sn,k)−d(Sn−1,k−1)=2k−1−(2(k−1)−1)=2. 
Case 2. (⎣n/2⎦+1≤k≤n−1 and ⎣(n−1)/2⎦+1≤k−1≤n−2): If n is even, 
d(Sn,k)−d(Sn−1,k−1)=k+n/2−1−((k−1)+(n/2 −1))=1. If n is odd,  
d(Sn,k)−d(Sn−1,k−1)=k+(n−1)/2−((k−1)+((n−1)/2 −1))=2. 
Case 3. (⎣n/2⎦+1≤k≤n−1 and 1≤k−1≤(n−1)/2): If n is even, n/2+1≤k and k≤ n/2. It is a 
contradiction. If n is odd, we have k=(n+1)/2. Hence, d(Sn,k)−d(Sn−1,k−1)= 
k+(n−1)/2−(2(k−1)−1) =(n−1)/2−(n+1)/2+3=2. Thus, the proof is completed.   
The vertex ε=12...k is an identity vertex whose pi=i for all 1≤i≤k. Due to vertex symmetry of 
an Sn,k, any vertex can be mapped to the identity vertex ε by a one-to-one mapping function by 
renaming the symbols. Therefore, without loss of generality, considering the routing problem 
between any two vertices in an Sn,k, one of them is always assumed to be the identity vertex ε. 
This section first describes the two simple routing rules used to construct a path from ρ to ε 
in an Sn,k. A symbol sequence is then defined and adopted to construct the shortest path. The 
length of the constructed path can be calculated based on the frequency of applied rules.  
To construct a path π from ρ to ε in an Sn,k, all misplaced, desired and inner external symbols 
of ρ should be corrected one by one to transform the label ρ into label ε. The following routing 
rules are applied to correct symbol s. Each rule can join 1 or 2 edges (vertices) in a path. 
R1: If symbol s is at position 1, then 
 If s is an internal symbol, then move it to its desired position. (The symbol residing at 
position s is automatically moved to position 1 when s is corrected.) 
 If s is an external symbol, then replace s with a desired symbol. (Symbol s is removed 
from the label.) 
R2: If symbol s is not at position 1, then 
 Exchange s with the symbol in position 1, then apply rule R1. 
One edge contributes to path π  if R1 is applied, and two edges contribute to path π if R2 is 
applied. For example, let ρ=369482 in S9,6. If symbol 3 at position 1 is to be corrected, then apply 
R1, and hop to vertex 963482. If symbol 2 at position 6 is to be corrected, then apply R2 and first 
hop to vertex 269483 and then to vertex 629483. Clearly, all symbols can be corrected in different 
orders, such that different paths from ρ to ε can be constructed. 
Assuming that vertex ρ’s cycle representation is C1C2...Cc, let Ci=(si,1 si,2 ... si,ki) and the 
length of Ci be ki. Symbol si,x is then considered the xth symbol in Ci, thus, si,1 is the head of Ci. In 
particular, if a cycle contains symbol 1, then assume the cycle is C1, and regularize symbol 1 as 
s1,k1, and p1 as the head s1,1, by rotating C1. A symbol sequence (sequence for short) is defined as 
σ(s1,1)=<C1, C2, ...,Cc>=<s1,1, s1,2, ..., s1,k1, s2,1, s2,2, ...,s2,k2, ..., sc,kc>. For convenience, σ(s1,1) is 
also renumbered as σ(s1)=<s1, s2, ...,sm+2e>, where k1+k2+...+kc=m+2e. These two expressions are 
used alternately throughout the remainder of this study. For example, let ρ=369482 in S9,6. The 
cycle representation of ρ is (1 3 9 5 8)(2 6), and sequence σ(s1,1) is arranged as <C1, C2>=<3, 9, 5, 
 8
⎣n/2⎦+1≤k≤n−2, because the number of external symbols is n−k=e+e′, and thus n=k+e+e′, Δ2 and 
Δ3 can be similarly obtained.   
An example is given below to calculate Δ for e>0. Let ρ=369482 in S9,6. The cycle 
representation of ρ is (3 9 5 8 1)(2 6), in which c=2, m=3, e=2, m′=1 (symbol 3 in C1), f=1 
(symbol 4) and e′=1 (symbol 7). Thus, d(S9,6)=k+⎣(n−1)/2⎦=10 and d(Sn,k; ρ, ε)=c+m+2e−2=7. 
Therefore, Δ (=Δ3) of ρ is d(S9,6)−d(Sn,k; ρ, ε)=(m′+e′+3f+1)/2=3. 
Lemma 3.12. When e=0, Δ1=(m+m′+4f)/2+1, Δ2=(m′+e′+3f−1)/2+1 if p1=1 or Δ2= 
(m′+e′+3f)/2+1 if p1≠1, and Δ3=(m′+e′+3f)/2+1 if p1=1 or Δ3=(m′+e′+3f+1)/2+1 if p1≠1. 
Proof. Given that c=(m−m′)/2, this proof is similar to that for Lemma 3.11.   
Since Δ is a non-negative integer, the following corollary is obtained easily by Lemmas 3.11 
and 3.12. 
Corollary 3.13. Assuming ⎣n/2⎦+1≤k≤n−2 and n is even (odd), m′+e′+3f is odd (even) if p1=1 or 
m′+e′+3f is even (odd) if p1≠1. 
(四) 研究方法 
1. ω-Wide Diameter 
Chiang and Chen (1995) indicated that the connectivity of an Sn,k is n−1 [11]. Hence, by Merger’s 
theorem, at least n−1 vertex-disjoint paths exist between two distinct vertices u and v in an Sn,k. 
Moreover, an Sn,n−1 and an Sn are isomorphic [11] and Sn,1 is obviously a complete graph of n 
vertices (Kn). The following two lemmas show that dn−1(Sn,1) = d(Sn,1)+1 and dn−1(Sn,n−1) = 
d(Sn,n−1)+2. 
Lemma 4.1. dn−1(Sn,1)=d(Sn,1)+1. 
Proof. In Sn,1, two arbitrary vertices are adjacent to each other, therefore Sn,1 is Kn. Obviously, 
d(Kn)=1 and dn−1(Kn)=2. In other words, dn−1(Sn,1)=dn−1(Kn)=d(Kn)+1=d(Sn,1)+1.   
Lemma 4.2. dn−1(Sn,n−1)=d(Sn,n−1)+2. 
Proof. It is known that d(Sn,k)=2k−1 if 1≤k≤⎣n/2⎦ and d(Sn,k) = k+⎣(n−1)/2⎦ if ⎣n/2⎦+1≤k≤n−1 [11]. 
So, d(Sn)=(3n−3)/2 (d(Sn)=(3n−4)/2) if n is odd (even). According to [15], we have dn-1(Sn) = 
(3n+1)/2 (dn-1(Sn) = 3n/2) = d(Sn)+2 if n is odd (even). Thus, we complete the proof.   
This work only considers an Sn,k with 2≤k≤n−2. The vertex symmetry of Sn,k implies that ε 
can be the destination vertex of any routing. This work attempts to identify n−1 vertex-disjoint 
paths from a source vertex ρ to the destination vertex ε by correcting each non-fixed symbol to a 
fixed symbol. A Cn−1(Sn,k; u, v) with maximum distance d(Sn,k)+2 in an Sn,k is first constructed. 
The length of the longest container among all constructed containers serves as an upper bound of 
dn−1(Sn,k), and then demonstrates that the lower bound of dκ(G) for a regular graph G with 
connectivity κ≥2 is d(G)+1. Furthermore, this section demonstrates that dn−1(Sn,k) ≥ d(Sn,k)+2 by 
constructing a best-container between a specific vertex pair u and v in an Sn,k for 2≤k≤⎣n/2⎦ and 
⎣n/2⎦+1≤k≤n−2, n<7. Finally, if ⎣n/2⎦+1≤k≤n−2, n≥7, some refinements are used for some 
 10
the first following desired symbol in the sequence. Thus, symbol 9 (8) is replaced by symbol 5 
(3). When p1≠1, some σ(sα) should be modified to construct as many vertex-disjoint paths as 
possible. Additionally, the α-paths are constructed as follows: 
 
Fig. 3. π1 and π2 are vertex-disjoint. 
(1) For all heads sα=si,1, 1≤i≤c: Each path is constructed by σ(sα). c paths are built. 
(2) For all sα≠si,1 and sα in Ci, 2≤i≤c: Let Ci=(Sil Sir), where Sil=si,1 si,2 ...,sα−1 and Sir=sα sα+1 ... 
si,ki. The sequence is modified as σ(sα)=<sα, ..., sα−1>=<Sir, Ci+1, ..., Cc, s1,k1, s1,1, s1,2, ..., s1,k1−1, 
C2, ..., Ci−1, Sil>, where C1=(s1,1 s1,2 ... s1,k1−1 s1,k1) is rotated as (s1,k1 s1,1 s1,2 ... s1,k1−1). For 
example, let ρ=369482 in S9,6. The cycle representation of ρ is (3 9 5 8 1)(2 6). Sequence 
σ(sα)=σ(6) is arranged as <Sir, s1,k1, s1,1, s1,2, ..., s1,k1−1, Sil>=<6, 1, 3, 9, 5, 8, 2>, where Sir=6 
and Sil=2, and C1=(3 9 5 8 1) is rotated as (1 3 9 5 8). Hence, path π(6) is built as 
369482→R2(1)639482→R2(2)239486→R2(1)139486→R2(1)319486→R2(2)913486→R1513486 
→R1813456→R1213456→R1123456. Notably, the 2nd step of R2 is no longer required when 
correct symbol 1 in sequence σ(6), since symbol 1 is already at its desired position. 
(3) For all sα≠s1,1 and sα in C1: Significantly, paths π(s1,2) and π(s1,1) are identical if p1≠1. 
Because σ(s1,1)=<s1,1, s1,2, s1,3, ...., sc,kc> and σ(s1,2)=<s1,2, s1,3, ...., sc,kc, s1,1>, correcting s1,1 
for π(s1,1) is the same as correcting s1,2 for π(s1,2), that is, take s1,1 to its desired position and 
s1,2 to position 1. For example, let ρ=369482 in S9,6. The cycle representation of ρ is (3 9 5 8 
1)(2 6). Sequence σ(s1,1)=σ(3)=<3, 9, 5, 8, 1, 2, 6>, and path π(3) is built as 369482→R1 
963482→R1563482→R1863452→R1163452→R2(1)263451→R2(2)623451→R1123456. Notably, 
symbol 1 no longer needs to be corrected in σ(3), since it is already at its desired position. 
Sequence σ(s1,2)=σ(9)=<9, 5, 8, 1, 2, 6, 3>, and path π(9) is built as 369482 
→R2(1)963482→R2(2)563482→R1863452→R1163452→R2(1)263451→R2(2)623451→R1123456. 
Notably, symbol 3 is corrected automatically when symbol 9 is moved to position 1 at 
beginning of the construction, indicating that π(3) and π(9) are identical. In other words, 
sequences σ(s1,1) and σ(s1,2) construct the same path, implying that only k1≥3 should be 
considered here. 
(3.1) If s1,1 is an external symbol and s1,k1 is a desired symbol, then construct paths by  
σ(s1,k1)=<s1,k1, C2, ..., Cc, s1,3, ..., s1,k1−1, s1,1, s1,2> for π(s1,k1),  
σ(s1,3)=<s1,3, ..., s1,k1, C2, ..., Cc, s1,2, s1,1> for π(s1,3), and 
<sα, sα+1, ..., sα−1> for π(sα), where sα≠s1,k1 and sα≠s1,3. 
 12
n is even). 
Proof. If p1=1, then assuming that sα is a symbol of Ci, 1≤i≤c, R2 is applied to correct sα, since sα 
is not at position 1. Suppose that sα+1 is the symbol in Ci and follows sα, then sα+1 can be 
automatically moved to position 1 once sα is corrected. If sα+1 is to be corrected next, then R1 can 
be applied. Other symbols except sα in Ci are the same. Moreover, R2 is also applied to correct 
the head of each cycle other than Ci, because this head is also not at the position 1 when it is 
scheduled to be corrected. In total, sα and c−1 heads apply R2, and the remaining m+2e−c 
symbols apply R1. Thus, 2c+(m+2e−c) = c+m+2e = d(Sn,k; ρ, ε) edges would contribute to the 
constructed path. Therefore, l(π(sα)) is d(Sn,k; ρ, ε)≤d(Sn,k). 
If p1≠1, then Δ1≥0, Δ2≥0 and Δ3≥1 can be obtained by Lemma 3.11, Lemma 3.12 and Corollary 
3.13. The lengths of the constructed paths are computed as follows: 
(1) For all paths π(si,1), 1≤i≤c. The path construction is similar to that for p1=1. The c−1 heads 
other than s1,1 are not at position 1 when they are scheduled to be corrected. Additionally, R2 
should be applied to them. However, s1,k1 no longer needs to be corrected, since position 1 is 
its desired position. Thus, 2(c−1)+(m+2e−c) = d(Sn,k; ρ, ε) edges would contribute to the 
constructed path. Therefore, l(π(si,1)) is d(Sn,k; ρ, ε)≤d(Sn,k). 
(2) For all paths π(sα), sα≠si,1 and sα in Ci, 2≤i≤c. Recall that σ(sα) is <sα, sα+1, ..., si,ki, Ci+1, ..., 
Cc, s1,k1, s1,1, s1,2, ..., s1,k1−1, C2, ..., Ci−1, si,1, si,2, ..., sα−1>. s1,k1 (symbol 1) is corrected prior to 
other symbols in C1. Initially, p1≠sα, and R2 is applied to correct sα. Symbols sα+1, ..., si,ki, si,1, 
si,2, ..., sα−1 are then automatically moved to position 1, after their previous symbols are 
corrected, and R1 is applied. Additionally, si,ki is the symbol before si,1 in the rotated Ci. 
Once si,ki is corrected, si,1 can be automatically moved to position 1, and the head of Ci+1 is 
now to be corrected and R2 must be applied. The heads of Ci+2, ..., Cc, C2, ..., Ci−1, are the 
same at this point. Moreover, si,1 automatically returns to position 1 when each cycle is 
corrected. Hence, when s1,k1 after Cc is to be corrected, si,1 should be exchanged with s1,k1, 
and then s1,1 is due for correction, and s1,k1 is now at position 1. Consequently, R2 should be 
applied to correct s1,1. R1 is applied to the remaining symbols. In total, R2 is applied to c 
symbols, and si,1 and s1,k1 are exchanged once. Notably, s1,k1=1 no longer needs to be 
corrected, since position 1 is its desired position. Other m+2e−c−1 symbols apply R1. Thus, 
2c+1+(m+2e−c−1)=c+m+2e=d(Sn,k; ρ, ε)+2 edges would contribute to the constructed path. 
Therefore, l(π(sα)) is d(Sn,k; ρ, ε)+2=d(Sn,k)−Δ3+2≤d(Sn,k)+1 if ⎣n/2⎦+1≤k≤n−2 and n is odd, 
or d(Sn,k; ρ, ε)+2=d(Sn,k)−Δj+2≤d(Sn,k)+2, j∈{1, 2} otherwise. 
(3) For all paths π(sα), sα≠s1,1 and sα in C1. Since the construction (3) is similar to construction 
(2), the lengths of the constructed paths are at most d(Sn,k)+1 if ⎣n/2⎦+1≤k≤n−2 and n is odd, 
or d(Sn,k)+2 otherwise.   
Accordingly, the number of constructed α-paths and their path length are listed in Table 1. 
1.1.2 β-Paths Constructions 
Let βi be a fixed symbol in vertex ρ, excluding symbol 1, where 1≤i≤f. Recall that f is the number 
of fixed symbols excluding symbol 1. Significantly, symbol 1 cannot be a βi even though it is 
 14
Proof. If p1=1, then Δ1≥2, Δ2≥1, and Δ3≥2 by Lemma 3.11, Lemma 3.12 and Corollary 3.13, 
since f≥1. Notably, l(π(βi)) can be computed as an α-path when p1=1. However, two additional 
edges are added to move βi to position 1 at the beginning of the construction and to its desired 
position at the final correction. Obviously, l(π(βi))=d(Sn,k; ρ, ε)+2=d(Sn,k)−Δ2+2≤d(Sn,k)+1 if 
⎣n/2⎦+1≤k≤n−2 and n is even, or d(Sn,k; ρ, ε)+2=d(Sn,k)−Δj+2≤d(Sn,k), j∈{1, 3} otherwise. 
If p1≠1, then Δ1, Δ2, and Δ3≥2, or Δ≥2 by Lemma 3.11, Lemma 3.12, and Corollary 3.13, 
since f≥1. Notably, l(π(βi))=d(Sn,k; ρ, ε)+4, because two more edges must be added to move βi to 
position 1 at the beginning of the construction and to its desired position at the last correction, 
and two more edges must be added to exchange s1,k1 (symbol 1) with βi before correcting other 
symbols in C1, and apply R2, instead of R1, to correct s1,1, since s1,k1 is simply moved to position 
1 before this correction. Therefore, l(π(βi)) is d(Sn,k; ρ, ε)+4=d(Sn,k)−Δ+4≤ d(Sn,k)+2.   
Accordingly, the number of constructed β-paths and their path length are listed in Table 2. 
Table 2 The Number of Constructed β-Paths and Their Length 
Path Φ1(ρ) k n <d(Sn,k) <d(Sn,k)+1 <d(Sn,k)+2 
2≤k≤⎣n/2⎦  k−m−e −1 0 0 
odd k−m−e −1 0 0 p1=1 ⎣n/2⎦+1≤k≤n−2 even 0 k−m−e −1 0 
2≤k≤⎣n/2⎦  0 0 k−m−e 
odd 0 0 k−m−e 
β 
p1≠1 ⎣n/2⎦+1≤k≤n−2 even 0 0 k−m−e 
1.1.3 γ-Paths Constructions 
A vertex ρ has e'=n−k−e outer external symbols. Recall that an outer external symbol of a vertex 
ρ is denoted by γi, where 1≤i≤e'. A γ-path is generated by first replacing p1 with a γi (this can hop 
one step to ρ’s neighbor, denoted by ργi), and then keeping γi in the label of each vertex of the 
constructed path π(γi) until the other symbols have been corrected. Notably, no π(γi)s can be 
constructed if e'=0. 
If p1=1, a π(γi) can be constructed as follows. 
Step 1. Replace p1 with γi; this can hop one step to ργi and the sequence is now <C1, C2, ..., Cc−1, 
sc,kc, sc,1, sc,2, ..., sc,kc−1, γi.>. 
Step 2. Construct a path from ργi to ε using the sequence <C1, C2, ..., Cc−1, sc,kc, sc,1, sc,2, ..., sc,kc−1, 
γi.>. Notably, if an external cycle exists, then it must be Cc, and sc,kc is not a desired 
symbol such that γi is in the label of each vertex of π(γi) until the other symbols have 
been corrected. 
An example is given to demonstrate the path constructions for p1=1. Let ρ=169482 in S9,6. 
The cycle representation of ρ is (2 6)(3 9 5 8), since an external cycle exists, and it must be 
Cc=C2=(3 9 5 8). Symbol 7 is an outer external symbol, and γi=7. First, replace symbol 1 with 
symbol 7. This process hops one step from ρ=169482 to ργi=769482. Second, arrange sequence 
σ(7) as <C1, sc,kc, sc,1, sc,2, ..., sc,kc−1, γi.>=<2, 6, 8, 3, 9, 5, 7>. A γ-path π(7) from ργi to ε is 
constructed as 769482→R2(1)269487→R2(2)629487→R1729486→R2(1)829476→R2(2)329476→R1 
 16
(1.1) Symbol s1,1 is external. Since s1,1 does not need to be corrected, l(π(γi))=d(Sn,k; ρ, ε)+3. 
Thus, C1 contains at least 3 symbols s1,1, a desired symbol, and s1,k1, such that m′≥1 and 
m+m′+4f≥2. By Corollary 3.13 and e′≥1, m′+e′+3f≥2 (≥3) for ⎣n/2⎦+1≤k≤n−2 and n is 
even (odd). Lemmas 3.11 and 3.12 yield Δ1≥1, Δ2≥1, and Δ3≥2. Therefore, l(π(γi))= 
d(Sn,k)−Δ3+3≤d(Sn,k)+1 if ⎣n/2⎦+1≤k≤n−2 and n is odd, or l(π(γi))= 
d(Sn,k)−Δj+3≤d(Sn,k)+2, j∈{1, 2} otherwise. 
(1.2) Cycle C1 is internal and e>0. The path length is reduced by 1, so l(π(γi))=d(Sn,k; ρ, ε)+3. 
Since C1 is internal, m≥2 and m+m′+4f≥2. By Corollary 3.13 and e′≥1, m′+e′+3f≥2 (≥1) 
for ⎣n/2⎦+1≤k≤n−2 and n is even (odd). Lemma 3.11 yields Δ1, Δ2 and Δ3≥1, or Δ≥1. 
Hence, l(π(γi))=d(Sn,k)−Δ+3≤d(Sn,k)+2. 
(1.3) All other cases. l(π(γi))=d(Sn,k; ρ, ε)+4. When e=0 and k≤n−2, e′≥2. Since e=0, at least 
one internal cycle exists such that m≥2. According to Corollary 3.13, m′+e′+3f≥2 (≥3) 
for ⎣n/2⎦+1≤k≤n−2 and n is even (odd). Lemma 3.12 acquires Δ1≥2, Δ2≥2 and Δ3≥3. 
Thus, l(π(γi))=d(Sn,k)−Δ3+4≤d(Sn,k)+1 if ⎣n/2⎦+1≤k≤n−2 and n is odd, or l(π(γi))= 
d(Sn,k)−Δj+4≤ d(Sn,k)+2, j∈{1, 2} otherwise. When e>0 and C1 is an external cycle, 
since s1,1 must be internal, C1 contains at least 4 symbols s1,1, an external symbol, a 
desired symbol, and s1,k1, such that m′≥2 and m+m′+4f≥4. By Corollary 3.13 and e′≥1, 
m′+e′+3f≥4 (≥3) for ⎣n/2⎦+1≤k≤n−2 and n is even (odd). Lemma 2.11 yields Δ1, Δ2 and 
Δ3≥2, or Δ≥2. Hence, l(π(γi))=d(Sn,k)−Δ+4≤d(Sn,k)+2. 
(2) Symbol s1,k1 is desired. Thus, symbol s1,k1−1 is external and C1 is external. If C2, ..., Cc are 
already corrected, then γi returns to position 1 automatically. An additional three edges 
should be added to replace p1 with γi at the start of the construction; apply R2, instead of R1, 
to correct s1,k1−1, and correct γi at the last correction. Therefore, l(π(γi))≤d(Sn,k; ρ, ε)+3. 
(2.1) Symbol s1,1 is external. l(π(γi))=d(Sn,k; ρ, ε)+2, since s1,1 has been replaced by γi and is 
no longer needs to be corrected. By Corollary 2.13 and e′≥1, m′+e′+3f≥2 (≥1) for 
⎣n/2⎦+1≤k≤n−2 and n is even (odd). Lemmas 3.11 and 3.12 yield Δ1≥0, Δ2≥1 and Δ3≥1. 
Thus, l(π(γi))= d(Sn,k)−Δ1+2≤d(Sn,k)+2 if 2≤k≤⎣n/2⎦, or l(π(γi))=d(Sn,k)−Δj+2≤d(Sn,k)+1, 
j∈{2, 3} otherwise. 
(2.2) Symbol s1,1 is internal. Therefore, l(π(γi))=d(Sn,k; ρ, ε)+3. Cycle C1 contains at least 3 
symbols s1,1, an external symbol, and s1,k1, such that m′≥1 and m+m′+4f≥2. By 
Corollary 3.13 and e′≥1, m′+e′+3f≥2 (≥3) for ⎣n/2⎦+1≤k≤n−2 and n is even (odd). 
Lemmas 3.11 and 3.12 yield Δ1≥1, Δ2≥1 and Δ3≥2. Thus, l(π(γi))= 
d(Sn,k)−Δ3+3≤d(Sn,k)+1 if ⎣n/2⎦+1≤k≤n−2 and n is odd, or l(π(γi))= 
d(Sn,k)−Δj+3≤d(Sn,k)+2, j∈{1, 2} otherwise.   
Accordingly, the number of constructed γ-paths and their path length are listed in Table 3. 
Lemmas 4.4, 4.5, 4.6, 4.7, 4.8, and 4.9 indicate that the l(Cn−1(Sn,k; ρ, ε)) is at most d(Sn,k)+2, 
and can serve as an upper bound of dn−1(Sn,k), as shown in Lemma 4.10. The number of 
constructed paths for 2≤k≤n−2 is listed in Table 4. 
Lemma 4.10. dn−1(Sn,k)≤d(Sn,k)+2. 
 18
1.2.1 Lower Bound 
This subsection first shows that the lower bound of the wide diameter of a regular graph G with 
connectivity κ≥2. The lower bound of the wide diameter of an Sn,k is then computed. 
Lemma 4.11. If G is a regular graph with connectivity κ≥2, then dκ(G)≥d(G)+1. 
Proof. Let x and y ∈ V(G) be vertices with d(x, y)=d(G). Because κ≥2, a vertex z≠y exists and is 
adjacent to x. As shown in Fig. 4, one path of C*κ(G; z, y) should be constructed from z via its 
neighbor x and then extended to y; the length of the constructed path is at least d(G; x, 
y)+1=d(G)+1. Therefore, dκ(G)≥d(G)+1.   
z
...
yx d(G; x, y)=d(G)
C (G; z, y)
1
 
Fig. 4. dκ(G)≥d(G)+1 in a regular graph G with κ≥2. 
Since an Sn,k is a regular graph with connectivity κ=n−1≥2 [11], dn−1(Sn,k)≥d(Sn,k)+1. The 
lower bounds of dn−1(Sn,k), where 2≤k≤⎣n/2⎦, dn−1(S6,4), and dn−1(S5,3) are derived in Lemmas 4.12, 
4.12 and 4.13, respectively. 
Lemma 4.12. dn−1(Sn,k)≥d(Sn,k)+2, where 2≤k≤⎣n/2⎦. 
Proof. The number of external symbol is n−k≥k since 2≤k≤⎣n/2⎦. Let e1, e2, ..., en−k be the external 
symbols. Assume that ρ=1e2...ek and ρe1=e1e2...ek is one of its neighbors. The vertices ye2...ek, for 
y=2, ..., k, ek+1, ..., en−k are common neighbors of ρ and ρe1, and each should be included in a path 
of C *n−1(Sn,k; ρ, ε), and such common neighbors are not contained in the path from ρ via ρe1 to ε. 
Thus, only u=eie2...ei−1e1ei+1...ek, 2≤i≤k, can serve as the successor vertex of ρe1 in the path. Since 
d(Sn,k; u, ε)=d(Sn,k), the path from ρ via ρe1 and then from u to ε has the length d(Sn,k)+2 as shown 
in Fig. 5. Thus, l(C *n−1(Sn,k; ρ, ε)) is at least d(Sn,k)+2. Hence, dn−1(Sn,k)≥d(Sn,k)+2, where 2≤k≤⎣n/2⎦.
   
 
Fig. 5. l(C *n−1(Sn,k; ρ, ε)) is at least d(Sn,k)+2. 
 20
both contain vertex 521. Therefore, to exclude the common vertex521, the length of π1 or π2 
should be at least d(Sn,k)+2.   
Lemmas 4.10, 4.11, 4.12, 4.13 and 4.14 show that lower and upper bounds of dn−1(Sn,k) are 
the same when 2≤k≤⎣n/2⎦, or ⎣n/2⎦+1≤k≤n−2 and n<7. Therefore, a lemma is obtained as follows. 
Lemma 4.15. dn−1(Sn,k)=d(Sn,k)+2 if 2≤k≤⎣n/2⎦, or ⎣n/2⎦+1≤k≤n−2 and n<7. 
When ⎣n/2⎦+1≤k≤n−2 and n≥7, the lower and upped bounds of dn−1(Sn,k) are not the same, 
and they are d(Sn,k)+1 and d(Sn,k)+2, respectively. Subsection 1.2.2 try to shorten the some 
constructed Cn−1(Sn,k; ρ, ε)s by rebuild some paths of them. Consequently, the results demonstrate 
that lower bound and upper bound of dn−1(Sn,k) are also the same and they are both d(Sn,k)+1 when 
⎣n/2⎦+1≤k≤n−2 and n≥7. 
1.2.2 Refinements for Some Containers 
In this subsection, four refinements are proposed for the constructed Cn−1(Sn,k; ρ, ε)s with 
⎣n/2⎦+1≤k≤n−2 and n≥7. One of these refinements is adopted to shorten the path(s) in a Cn−1(Sn,k; 
ρ, ε) which length is d(Sn,k)+2. The longest path(s) in a Cn−1(Sn,k; ρ, ε) can be represented by d(Sn,k; 
ρ, ε) plus a non-negative integer, this non-negative integer is denoted by δ. Additionally, d(Sn,k; ρ, 
ε)=d(Sn,k)−Δ, the longest path can thus be represented by d(Sn,k)−Δmin+δ, where Δmin denotes the 
specific vertex ρ with minimum Δ. 
Moreover, according to Lemmas 3.11 and 3.12 and Corollary 3.13, the parameters m, m′, f 
and e′ can be deduced by Δmin. Hence, referring to the parameters m, m′, f and e′, the cycle 
representation of ρ can be stated by a general form. The following work is to find the general 
form of a specific vertices ρ when l(Cn−1(Sn,k; ρ, ε))=d(Sn,k)+2, and to refine the longest path(s) in 
Cn−1(Sn,k; ρ, ε) such that l(Cn−1(Sn,k; ρ, ε)) can be reduced at least by 1. 
The Cn−1(Sn,k; ρ, ε)s of length d(Sn,k)+2 are excerpted from Lemmas 4.5, 4.7 and 4.9, and Δmin 
is listed in the Table 5. 
Table 5 The Δmin, When l(Cn−1(Sn,k; ρ, ε))=d(Sn,k)+2, and ⎣n/2⎦+1≤k≤n−2, n≥7 
Item p1 Path 
Number of 
paths Δmin Situations 
1 p1=1 γ n−k−e Δ2=0 n is even. 
2 α m+2e−c−1 Δ2=0 n is even. 
3 β k−m−e Δ2, Δ3=2  
4 Δ2=1 Symbol 1 is not a desired symbol, p1 is external and n is even.
5 Δ2, Δ3=1 Symbol 1 is not a desired symbol, C1 is internal and e>0. 
6 Δ2=2 Symbol 1 is not a desired symbol, n is even and e=0. 
7 Δ2, Δ3=2 Symbol 1 is not a desired symbol and e>0 
8 
p1≠1 
γ n−k−e 
Δ2=1 Symbol 1 is a desired symbol, p1 is internal and n is even 
Assuming ρ=p1p2...pk, m=(k−1)−f−e=2k−n−f+e′−1 (m=k−f−e=2k−n−f+e′) if p1=1 (p1≠1) 
such that the number of internal cycle can be computed as (m−m′)/2. Moreover, the number of 
inner external symbol also can be computed as e=n−k−e′. The cycle representation of a specific 
vertex ρ is thus stated in Lemmas 4.16, 4.17, 4.18 and 4.19. For convenience, let mi, di and ei 
denote ith misplaced, desired, inner external symbols of the label of vertex ρ, respectively. 
 22
Form 3. At least 3 cycles. 
Form 4. At least 2 cycles, and the C1 is formed as (m1 e1 ... d1 1). 
Proof. Table 5 shows that the length of a γ-path is d(Sn,k)+2 and should be one of following 
situations. 
(1) According to Items 4, 5, 6 and 7, symbol 1 is not a desired symbol:  
(1.1) According to Item 4, p1 is external, n is even and Δ2=1. C1 can be formed as (e1 … d1 1), 
where p1=e1 and d1≠1 such that m′≥1. Given e′≥1, by Lemma 3.11, Δ2=(m′+e′+3f)/2=1 
and by Corollary 3.13, m′+e′+3f=2. Thus, f=0, m′=e′=1 and e>0. Moreover, since 
m=2k−n−f+e′=2k−n+1≥3, c=(m−m′)/2+1≥2. This situation belongs to Form 1. 
(1.2) According to Item 5, C1 is internal, e>0 and Δ2=Δ3=1. Given e′≥1, by Lemma 3.11, 
Δ2=(m′+e′+3f)/2=1 and Δ3=(m′+e′+3f+1)/2=1, and by Corollary 3.13, m′+e′+3f = 2 
(m′+e′+3f = 1) if n is even (odd). Thus, f=0 and m′+e′=2 (=1). Two subcases are 
considered as follows. 
(1.2.1) n is even: If m′=e′=1, then m=2k−n−f+e′=2k−n+1≥3. Hence, c=(m−m′)/2+1≥2. 
This situation belongs to Form 1. If m′=0 and e′=2, then m≥4. Hence, c≥3. 
This situation belongs to Form 3. 
(1.2.2) n is odd: If m′=0 and e′=1, then m≥2 and c≥2. This situation belongs to Form 
1. 
(1.3) According to Item 6, n is even and e=0. Hence, e′≥2. Given Δ2=2, by Lemma 3.12, 
Δ2=(m′+e′+3f)/2+1=2, and by Corollary 3.13, m′+e′+3f=2. Thus, f=0, m′=0 and e′=2. 
Moreover, e=0 and e′=2 imply k=n−2. Therefore, m=k−f−e=k=n−2≥6 and 
c=(m−m′)/2≥3. This situation belongs to Form 3. 
(1.4) According to Item 7, C1 is an external cycle and p1 is internal. Since e>0, C1 contains at 
least four symbols and can be formed as (m1 e1 … d1 1). Given Δ2=Δ3=2, by Lemma 
3.11, Δ2=(m′+e′+3f)/2=2 and Δ3=(m′+e′+3f+1)/2=2, and by Corollary 3.13, m′+e′+3f = 
4 (m′+e′+3f = 3) if n is even (odd). Thus, f=0 and m′+e′=4 (=3). Two subcases are 
considered as follows. 
(1.4.1) n is even: If m′=e′=2, then m=2k−n−f+e′=2k−n+2≥4, Hence, c=(m−m′)/2+1≥2. 
This situation belongs to Form 4. If m′=3, e′=1, and k=⎣n/2⎦+1, then 
m=2k−n−f+e′=2k−n+1=3 and e=n−k−e′≥2. Hence, c=(m−m′)/2+1≥1. This 
situation belongs to Form 2. If m′=3, e′=1, and k>⎣n/2⎦+1, then m=2k−n+1≥5. 
Hence, c=(m−m′)/2+1≥2. This situation belongs to Form 1. 
(1.4.2) n is odd: If m′=2, e′=1, and k=⎣n/2⎦+1, then m=2k−n+1=2 and e=n−k−e′≥2. 
Hence, c=(m−m′)/2+1≥1. This situation belongs to Form 2. If m′=2, e′=1, and 
k>⎣n/2⎦+1, then m≥4. Hence, c=(m−m′)/2+1≥2. This situation belongs to Form 
1. 
(2) According to Item 8, symbol 1 is a desired symbol, p1 is internal and n is even: C1 can be 
formed as (m1 e1 1) and m′≥1. Given Δ2=1, by Lemma 3.11, Δ2=(m′+e′+3f)/2=1, and by 
 24
is prior to si,1 in each σ(sj,1), 2≤i<j≤x. Therefore, by Lemma 4.3, π(sj,1) and π(si,1) are 
vertex-disjoint. Similarly, π(sj,2) and π(si,2) are vertex-disjoint for each π(sj,2) in Group 2. 
Let σ(si,1) and σ(sj,2) be the sequences of Group 1 and Group 2. To show Group 1 and Group 2 
are also vertex-disjoint to each other, two cases are considered as follows. 
Case 1 (Ci≠Cj+1): Clearly, Ci−1 is ahead of Ci in the σ(sj,2) and the correcting order of si−1,1 is prior 
to si,1. By Lemma 4.3, π(sj,2) and π(si,1) are vertex-disjoint to each other. 
Case 2 (Ci=Cj+1): The sequence σ(sj,2) can be arranged as <si,2, Ci+1, ..., Cx, C2, ..., Ci−2, si,1, C1, 
Ci−1> and σ(si,1) as <Ci, C1, si−1,2, Ci+1, ..., Cx, C2, ..., Ci−2, si−1,1>. The paths π(sj,2) and π(si,1) 
can be divided into three subpaths which are constructed by three subsequences: (1) the 
subsequence before C1, (2) the subsequence C1, and (3) the subsequence after C1. The 
three subsequences of σ(si,1) (σ(sj,2)) are denoted by σ(si,1)1, σ(si,1)2 and σ(si,1)3 (σ(sj,2)1, 
σ(sj,2)2 and σ(sj,2)3), respectively, and the three subpaths of π(si,1) (π(sj,2)) are denoted by 
π(si,1)1, π(si,1)2 and π(si,1)3 (π(sj,2)1, π(sj,2)2 and π(sj,2)3), respectively. The subpaths π(sj,2)1 
and π(si,1)1 are vertex-disjoint, because si,1 is prior to si,2 in σ(si,1)1. Because x≥4, there 
exists a cycle Ci+1 in ρ. Each vertex in π(sj,2)1, whose symbol si,1 has not been corrected, is 
vertex-disjoint to π(si,1)2, since symbol si,1 of each vertex in π(si,1)2 has already been 
corrected. Furthermore, each vertex in π(sj,2)1, whose symbol si,1 has been corrected, is 
vertex-disjoint to π(si,1)2, since each vertex in π(sj,2)1 does not contain Ci+1 and each vertex 
in π(si,1)2 contains Ci+1. Therefore, π(sj,2)1 and π(si,1)2 are vertex-disjoint. The subpaths 
π(sj,2)1 and π(si,1)3 are vertex-disjoint, because the cycle C1 has already been corrected in 
π(si,1)3, but in π(sj,2)1 has not yet. Consequently, π(sj,2)1 and π(si,1) are vertex-disjoint. The 
subpaths π(sj,2)2.and π(si,1)2 are vertex-disjoint, because each vertex in π(si,1)2 contains 
Ci+1 and each vertex in π(sj,2)2 does not contain Ci+1. Each vertex in π(si,1)3, whose symbol 
si-1,2 has already been corrected, is vertex-disjoint to π(sj,2)2, since symbol si-1,2 of each 
vertex in π(sj,2)2 has not been corrected. Furthermore, each vertex in π(si,1)3, whose 
symbol si-1,2 has not been corrected, is vertex-disjoint to π(sj,2)2, since each vertex in 
π(sj,2)2 does not contain Ci+1 and each vertex in π(si,1)3 contains Ci+1. Therefore, the 
subpaths π(sj,2)2.and π(si,1)3 are vertex-disjoint. The subpaths π(sj,2)3 and π(si,1)3 are 
vertex-disjoint, because si−1,2 is prior to si−1,1 in the σ(si,1)3. Eventually, π(si,1) and π(sj,2) 
are vertex-disjoint. 
The path π(s1,1) in Group 3 is vertex-disjoint to the paths in Groups 1 because si−1,1 is prior to 
si,1 in σ(s1,1), and is vertex-disjoint to the paths in Groups 2 because sx,2 is prior to s1,1 in σ(sj,2). 
The path π(s2,2) in Group 4 is vertex-disjoint to the paths in Groups 1 because s1,2 is prior to s2,2 in 
σ(si,1) if i≠2, and sx,1 is prior to s2,1 in the σ(s2,2) if i=2. The path π(s2,2) in Group 4 is 
vertex-disjoint to the paths in Groups 2 because sj,2 is prior to sj+1,2 in σ(s2,2), and is 
vertex-disjoint to the paths in Groups 3 because sx,2 is prior to s1,1 in the σ(s2,2). Therefore, the 
n−1 paths are vertex-disjoint. 
It is given that ρ has c−1 internal cycles and n−k external symbols in the external cycle. Let 
the cycle representation of ρ is C1C2…Cc. Two cases are considered as follows: Case 1. If C1 is an 
internal cycle then without loss of generality, let Cc be the external cycle and separated into 
 26
<C2, ..., Cc, C1> intersect at the vertex U=C1. Hence, π(s2,1) should be reconstructed to 
avoid the vertex U by performing X(p1,s2,1) and X(s2,1, s1,k1) such that (C2 s1,1 ... s1,k1−1,) is 
formed as a new cycle, and then perform F(s1,1, ..., s1,k1−1, C2, C3, ..., Cc). In total, two 
edges contributed by X(p1,s2,1) and X(s2,1, s1,k1), and c−1 heads apply rule R2 and 
m+2e−1−(c−1) symbols apply rule R1. Thus, the length of the reconstructed π(s2,1) is 
2+2(c−1)+(m+2e−c)= c+m+2e=d(Sn,k; ρ, ε)+2≤d(Sn,k)+1. 
Unfortunately, the reconstructed π(s2,1) and the constructed α-path π(s1,1) by the 
sequence <C1, ..., Cc> intersect at the vertex V=(C2 1)C3…Cc. Hence, π(s1,1) should be 
reconstructed to avoid the vertex V by performing F(C1) and X(1, β1) and then F(C2, ..., Cc, 
β1). In total, one edge contributed by X(1, β1), and c−1 heads apply rule R2 and 
m+2e−(c−1) symbols apply rule R1. Thus, the length of the reconstructed π(s1,1) is 
1+2(c−1)+(m+2e−c+1)=c+m+2e=d(Sn,k; ρ, ε)+2 ≤ d(Sn,k)+1. Fig. 8 illustrates the 
reconstructed paths. 
Edge of reconstructed
ρ
ρ
1
ρs2,1
ρs1,1
U
W
: Path ( 1 )
: Path (s1,1)
: Path (s2,1)
V
Sub-path constructed by One-t-One Vertex-Disjoint Algorithm 
Sub-path of reconstructed path
2
c
2,1 1
,k1
1
X (1, 1)
1
F(C2 ,...,Cc)
F(C1 ) F(C2 Cc )
F(C1)
,...,
1,1
1,k1
1
 
Fig. 8. Case 1 of Refinement 2. 
The rest of this part is to show those reconstructed paths are vertex-disjoint. Let 
[u-v]π denote the sub-path of π from u to v. Moreover, apply "(" or ")" for excluding u 
(left parentheses) or v (right parentheses). According to Fig. 8, three sub-paths [ρβ1−U)π(β1), 
[W−ε)π(s1,1) and (ρs2,1−V)π(s2,1) should be verified that they are vertex-disjoint as follows. 
1. Symbol β1 is fixed for each vertex in the sub-paths [ρβ1−U)π(β1) and [W−ε)π(s1,1). 
Therefore, they are vertex-disjoint to the reconstructed path π(s2,1) and other α-paths 
and γ-paths. 
2. The sub-paths [ρβ1−U)π(β1) and [W−ε)π(s1,1) are vertex-disjoint, because C1 has already 
been corrected in [W−ε)π(s1,1) but in [ρβ1−U)π(β1) has not yet. 
3. The sub-path (ρs2,1−V)π(s2,1) and other α-paths are vertex-disjoint. Because (ρs2,1−V)π(s2,1) 
performed X(s2,1, s1,k1), symbols (s2,1 ... s2,k2 s1,1 ... s1,k1−1,) become a new cycle. Thus, 
symbol s2,1 is at position s1,k1−1 for each vertex in (ρs2,1−V)π(s2,1), but each vertex in other 
α-paths has no symbol s2,1 residing at position s1,k1−1. Therefore, (ρs2,1−V)π(s2,1) and other 
α-paths are vertex-disjoint. 
Case 2 (The external cycle is the only cycle of ρ and e≥3). 
 28
Lemma 4.21. The β-paths reconstructed by Refinement 2 are vertex-disjoint, and have a length at 
most d(Sn,k)+1. 
Refinement 3. γ-Path Reconstruction When e′=1 
This refinement is for a γ-path when e′=1 as shown in the 3rd column of Table 6. Two cases of 
the refinement for p1=1 and p1≠1 are stated below. 
Case 1 (p1=1 and ρ has at least 2 cycles). 
Notably, e=n−k−e′≥1 implies ρ has an external cycle. Without loss of generality, assuming 
ρ=C1C2...Cc, where c≥2 and Cc=(d1 ... de ee) is the external cycle. Because ργ1=(γ1 
1)C1C2...Cc, both (γ1 1) and Cc are external, they should be combined to form a external 
cycle (γ1 d1 ... de ee 1) and denoted by Cc′. The cycle representation of ργ1 is then 
Cc′C1...Cc−1. Reconstruct the γ-path π(γ1) from ρ via ργ1 to ε by performing X(p1, γ1) and 
F(C1, ..., Cc−1, Cc′). In total, one edge is contributed to connect ρ and ργ, and c−1 heads 
apply R2 and m+2e+1−(c−1) symbols apply R1. Thus the length of reconstructed π(γ1) is 
1+2(c−1)+(m+2e−c+2)=c+m+2e+1=d(Sn,k; ρ, ε)+1≤ d(Sn,k)+1. 
However, the reconstructed π(γ1) and the constructed α-path π(s1,1) by the sequence 
<C1, ..., Cc> intersect at the vertex U=(d1 ... de ee 1). Hence, π(s1,1) should be 
reconstructed. Path π(s1,1) is reconstructed by performing F(s1,1, …, s1,k1−1, C2, ..., Cc, s1,k1). 
Notably, the length of the reconstructed π(s1,1) is d(Sn,k). 
Unfortunately, the reconstructed paths π(s1,1) and the constructed α-path π(s2,1) also 
intersect at vertex V=(s1,2 1), because π(s2,1) is constructed by <C2, ..., Cc, C1>, and when 
C2, ..., Cc and s1,1, …, s1,k1−1 are corrected, they can reach vertex V. Hence, π(s2,1) should 
be reconstructed by first performing F(C2,C3,…,Cc−1,d1,...,de), where d1,...,de are the 
symbols of Cc to reache to the vertex (ee 1)C1 whose external symbol ee is at position 1, 
and then performing X(ee, γ1) for replacing ee by γ1 to reache W=(γ1 1)C1. Finally, perform 
F(C1, γ1) such that γ1 can be corrected at last. Notably, the length of the reconstructed 
π(s2,1) is d(Sn,k)+1. Fig. 10 illustrates the paths of Case 1. 
 
Fig. 10. Case 1 of Refinement 3. 
According to Fig. 10, the sub-path [W−ε)π(s2,1) and the reconstructed path π(s1,1) 
should be verified that they are vertex-disjoint as follows. 
 30
 
Fig. 11. Case 1 of Refinement 4, for reconstructing the first γ-path π(γ1). 
1
2,1
1,k 1
 
Fig. 12. Case 1 of Refinement 4, for reconstructing the second γ-path π(γ2). 
According to Fig. 12, three sub-paths [ργ2−Z2)π(γ2), [Q−ε)π(s3,1) and (ρs2,1−V)π(s2,1) 
should be verified that they are vertex-disjoint as follows. 
1. The sub-paths [ργ2−Z1)π(γ2) and [Q−ε)π(s3,1) are vertex-disjoint, because C3 has already 
been corrected in [Q−ε)π(s3,1), but in (ργ2−Z1)π(γ2) has not yet. 
2. The sub-paths (ρs2,1−V)π(s2,1) and [Z1−Z2)π(γ2) are vertex-disjoint, because symbol s2,1 has 
already been corrected in [Z1−Z2)π(γ2), but in (ρs2,1−V)π(s2,1) has not yet. 
3. The sub-path (ρs2,1−V)π(s2,1) and the other constructed α-paths are vertex-disjoint, 
because when X(s2,1, s1,k1) is performed, (s2,1 ... s2,k2 s1,1 ... s1,k1−1,) can be formed as a 
new cycle. Thus, symbol s2,1 is at position s1,k1−1 for each vertex in (ρs2,1−V)π(s2,1), but no 
vertex in the other constructed α-paths has symbol s2,1 residing at position s1,k1−1. 
Therefore, they are vertex-disjoint. 
4 By Lemma 4.3, the sub-path [Z1−Z2)π(γ2) and the other constructed α-paths are 
vertex-disjoint, because the symbol sc,kc is prior to s1,1 in each sequence of the α-paths 
other than σ(s1,1). 
Case 2 (ρ has at least 1 internal cycle and C1 of ρ is formed as (m1 e1 … d1 1)). 
Let ρ=C1C2...Cc, where c≥2 and C1=(s1,1 s1,2 ... s1,k1−1 s1 k1)=(m1 e1 ... d1 1). Reconstruct 
π(γ1) by performing X(m1, γ1), F(C2, ..., Cc), X(γ1, e1) and F(e1, m1, γ1, s1,3, ..., d1). In total, 
2 edges contributed by X(m1, γ1) and X(γ1, e1), and c−1 heads apply rule R2 and 
 32
length at most d(Sn,k)+1. 
Four refinements are provided to reconstruct the paths of length at most d(Sn,k)+1 for a 
specific ρ as shown in Table 6. By Lemmas 4.20, 4.21, 4.22 and 4.23, a lemma can be derived as 
follows. 
Lemma 4.24. If ⎣n/2⎦+1≤k≤n−2 and n≥7, then dn−1(Sn,k) ≤ d(Sn,k)+1. 
According to Lemmas 4.11, 4.15 and 4.24, Theorem 4.25 can be derived. Table 7 shows the 
number of constructed paths before and after refinement. 
Theorem 4.25. dn−1(Sn,k) = d(Sn,k)+2 (dn−1(Sn,k) = d(Sn,k)+1) if 2≤k≤⎣n/2⎦, or ⎣n/2⎦+1≤k≤n−2 and 
n<7 (if ⎣n/2⎦+1≤k≤n−2 and n≥7). 
Table 7 The Number of Constructed Paths before and after Refinement 
Vertex ρ Φ1(ρ) <d(Sn,k) <d(Sn,k)+1 <d(Sn,k)+2 
p1=1 k+e−1 / k+e−1 0 / 0 n−k−e / n−k−e 2≤k≤⎣n/2⎦ p1≠1 c / c 0 / 0 n−c−1 / n−c−1 
p1=1 k+e−1 / k+e−1 n−k−e / n−k−e 0 / 0 ⎣n/2⎦+1≤k≤n−2 
n=5 p1≠1 c / c m+2e−c−1 / m+2e−c−1 n−m−2e / n−m−2e 
p1=1 m+2e / m+2e k−m−e−1 / k−m−e−1 n−k−e / n−k−e ⎣n/2⎦+1≤k≤n−2 
n=6 p1≠1 c / c 0 / 0 n−c−1 / n−c−1 
p1=1 k+e−1 / k+e−1 n−k−e / n−k−e 0 / 0 ⎣n/2⎦+1≤k≤n−2 
and n is odd, n≥7 p1≠1 c / c m+2e−c−1 / n−c−1 n−m−2e / 0 
p1=1 m+2e / m+2e k−m−e−1 / n−m−2e−1 n−k−e / 0 ⎣n/2⎦+1≤k≤n−2 
and n is even, n≥8 p1≠1 c / 0 0 / n−1 n−c−1 / 0 
According to Table 7, the ω-wide diameter of Sn,ks can be thus determined in the following 
three theorems. 
Theorem 4.26. Assuming that 2≤k≤⎣n/2⎦ or ⎣n/2⎦+1≤k≤n−2 and n=6, dω(Sn,k) = d(Sn,k) (dω(Sn,k) ≤ 
d(Sn,k)+2) if 1≤ω≤c (if c+1≤ω≤n−1). 
Proof. When p1=1, k+e−1 (m+2e) vertex-disjoint paths are constructed whose lengths are d(Sn,k) 
if 2≤k≤⎣n/2⎦ (if ⎣n/2⎦+1≤k≤n−2 and n=6). When p1≠1, c vertex-disjoint paths are constructed 
whose lengths are d(Sn,k). Because c<k+e−1 (c<m+2e), there are at least c vertex-disjoint paths of 
length d(Sn,k). Moreover, according to Table 7, if ω>c, the length of constructed paths is at most 
d(Sn,k)+2 when p1≠1. Thus, the proof is completed.   
Theorem 4.27. Assuming that ⎣n/2⎦+1≤k≤n−2 and n=5, dω(Sn,k) = d(Sn,k) if 1≤ω≤c; dω(Sn,k) ≤ 
d(Sn,k)+1 if c+1≤ω≤m+2e−1, and dω(Sn,k) ≤ d(Sn,k)+2 if m+2e ≤ω≤n−1. 
Proof. When p1=1, k+e−1 vertex-disjoint paths are constructed whose lengths are d(Sn,k). When 
p1≠1, c vertex-disjoint paths are constructed whose lengths are d(Sn,k). Because c<k+e−1, there 
are at least c vertex-disjoint paths of length d(Sn,k). Moreover, according to Table 7, if ω>c, at 
least m+2e−c−1 paths are constructed whose lengths are at most d(Sn,k)+1 when p1≠1. This 
implies that the length of the constructed paths are at most d(Sn,k)+1, if c+1≤ω≤m+2e−1, and the 
length of the constructed paths are at most d(Sn,k)+2, if ω>m+2e−1.   
Theorem 4.28. Assuming that ⎣n/2⎦+1≤k≤n−2, n≥7, dω(Sn,k) = d(Sn,k) (dω(Sn,k) ≤ d(Sn,k)+1) if 
 34
1-neighbor ρe1=e1e2...ek is fault-free, and can be used for constructing path to ε. Because ρe1 and ρ 
now has common faulty 1-neighbors ye2...ek, where y=2, ..., k, the neighbors of ρe1 can be used for 
routing path to ε, are its i-neighbors u=eie2...ei−1e1ei+1...ek, where 2≤i≤k. However, d(Sn,k; u, ε) = 
d(Sn,k). Therefore, routing a path from ρ to ε in the faulty Sn,k, the constructed path has length at 
least d(Sn,k)+2. Fig. 15 shows the routing path in the faulty Sn,k.   
 
Fig. 14. Dκ(G) ≥ d(G)+1. 
 
Fig. 15. Dn−1(Sn,k) ≥ d(Sn,k)+2, if 2≤k≤⎣n/2⎦. 
Lemma 4.31. D5(S6,4) ≥ d(S6,4)+2. 
Proof. Let vertex ρ=(m1 m2)(m3 m4) in an S6,4. Without loss of generality, assume m2=1. Suppose 
that three i-neighbors of ρ, where 2≤i≤4 and the neighbor (m1 1) of ε are faulty. All fault-free 
vertices are 1-neighbors of ρ, denoted by u, and represented as (ex, m1 1)(m3 m4), where ex=5 or 6 
is an outer external symbol of ρ. The i-neighbor (ex, m1)(m3 m4) of u has a distance d(S6,4) such 
that the path from ρ via u and (ex, m1)(m3 m4) to ε has length at least d(S6,4)+2. Moreover, the 
vertices (m3 m4 ex m1 1) and (m4 m3 ex m1 1) have a distance d(S6,4)−1, if its routing path is passed 
through the faulty vertex (m1 1). In other words, in order to construct a shortest path from (m3 m4 
ex m1 1) or (m4 m3 ex m1 1) to ε, the correction of m1 should be at last. Otherwise, a path is 
constructed from (m3 m4 ex m1 1) or (m4 m3 ex m1 1) via the other neighbors of ε to ε. Notably, m1 
should be corrected before one of the other symbols in cycle (m3 m4 ex m1 1) or (m4 m3 ex m1 1), 
such that one extra edge is added for moving m1 to position 1. The length of the constructed path 
is thus at least d(S6,4). Based on the discussions above, D5(S6,4) ≥ d(S6,4)+2. Fig. 16 shows a 
routing path in the faulty S6,4.   
As mentioned above, D3(S5,3) is bounded below by d(S5,3)+1 and bounded above by 
d(S5,3)+2. A further upper bound of D3(S5,3) can be obtained by constructing a fault-free shortest 
path from ρ to ε in the S5,3 with 3 faulty vertices, where d4(S5,3; ρ, ε)=d4(S5,3). 
 36
a fault-free neighbor and a fault-free β-path or γ-path. 
Case 1 (ρ=(e1 d2 e2 1)). There are vertices e1e23 or e12e2 in an S5,3. Without loss of generality, 
assume ρ=e1e23=(e1 2 e2 1). Symbol 3 is a fixed symbol, and π(3) of length d(S5,3)+2 is a 
fault-free β-path. The constructed paths by the α-paths and β-paths constructions are 
shown in the following: 
π(3): e1e23→3e2e1→1e2e1→e1e21→2e21→e221→321→123 
π(e1): e1e23→2e23→e223→123 
π(e2): e1e23→e2e13→2e13→e123→123 
π(1): e1e23→1e23→e213→213→123 
1. If vertex e123 is fault-free: Construct a fault-path from ρ via ρ3 to ε as follows. 
e1e23→3e2e1→2e2e1→e22e1→32e1→e123→123 and the length is d(S5,3)+1. Notably, 
symbol 3 of ρ is a fixed symbol, but symbol 3 of all vertices in the subpath from ρ to 
e123 is not fixed. This implies that they are fault-free. 
2. If vertex e123 is faulty then the vertices along path π(e2) are fault-free except e123. if 
vertex 213 is fault-free: Construct a path from ρ via ρe2 to ε as follows. 
e1e23→e2e13→1e13→e113→213→123 and the length is d(S5,3). Clearly, the vertices 
1e13 and e113 are fault-free. 
3. If vertex 213 is faulty then the vertices along path π(1) are fault-free except 213. 
Construct a path from ρ via ρ1 to ε as follows. 
e1e23→1e23→3e21→2e21→e221→321→123 and the length is d(S5,3)+1. Notably, 
symbol 3 of ρ is a fixed symbol, but symbol 3 of all vertices in the subpath from 1e23 to 
ε is not fixed. This implies that they are fault-free. 
Fig. 17 shows the fault-free path in a faulty S5,3. 
 
Fig. 17. The fault-free path of ρ=(e1 d2 e2 1) in a faulty S5,3. 
Case 2 (ρ=(m1 1)(d1 e1)). There are vertices 21e1 or 3e11 in an S5,3. Without loss of generality, 
assume ρ=21e1=(2 1)(3 e1). Symbol e2 is an outer external symbol, and π(e2) of length 
d(S5,3)+2 is a fault-free γ-path. The constructed paths by the α-paths and γ-paths 
constructions are shown in the following: 
π(e2): 21e1→e21e1→1e2e1→3e2e1→e1e23→2e23→e223→123 
π(2): 21e1→12e1→32e1→e123→123 
 38
Construct a path from ρ via ρ2 to ε. 
2e11→e121→e221→12e2→32e2→e223→123 and the length is d(S5,3)+1. Notaly, 
symbol e2 is an outer external symbol and all vertices in the path from e121 to ε have 
the symbol e2 in their label. This implies that they are fault-free.   
Fig. 19 shows the fault-free path in a faulty S5,3. 
 
Fig. 19. The fault-free path of ρ=(m1 e1 d1 1) in a faulty S5,3. 
By Lemmas 4.29, 4.30, 4.31 and 4.32, the lower bound of Dn−1(Sn,k) can be obtained as 
follows. 
Lemma 4.33. Dn−1(Sn,k)≥d(Sn,k)+1, if ⎣n/2⎦+1≤k≤n−2 where n=5 or n≥7, or Dn−1(Sn,k)≥d(Sn,k)+2 
otherwise. 
2.2 Fault Diameter 
Theorem 4.25 indicates that Dn−1(Sn,k) has a trivial upper bound d(Sn,k)+2 if 2≤k≤⎣n/2⎦, or 
⎣n/2⎦+1≤k≤n−2 and n=5..6, and d(Sn,k)+1 if ⎣n/2⎦+1≤k≤n−2 and n≥7. Lemma 4.29 shows that a 
regular graph G with connectivity κ≥2 and d(G)>2, its Dκ−1(G) is bounded below by d(G)+1. 
Lemmas 4.30 and 4.31 demonstrate the lower bound of Dn−1(Sn,k) is d(Sn,k)+2, when 2≤k≤⎣n/2⎦, or 
⎣n/2⎦+1≤k≤n−2 and n=6. Moreover, Lemma 4.33 computes the upper bound of D4(S5,3) is 
d(S5,3)+1. Therefore, the fault diameter of Sn,k is obtained in the Theorem 4.34. 
Theorem 4.34. Dn−1(Sn,k)=d(Sn,k)+1, if ⎣n/2⎦+1≤k≤n−2 where n=5 or n≥7, and Dn−1(Sn,k)=d(Sn,k)+2, 
otherwise. 
Since that wide diameter can be serves as a trivial upper bound of fault diameter, according 
to Theorems 4.26, 4.28 and 4.34, the ω-fault diameter of an Sn,k can be determined in the 
following theorems. 
Theorem 4.35. When 2≤k≤⎣n/2⎦ or ⎣n/2⎦+1≤k≤n−2, n=6, Dω(Sn,k) is d(Sn,k) if 1≤ω≤c, and Dω(Sn,k) 
is at most d(Sn,k)+2 if c+1≤ω≤n−1. 
Proof. According to Theorem 4.26, at least c vertex-disjoint paths of length d(Sn,k) and n−c−1 
vertex-disjoint paths of length d(Sn,k)+2 can be constructed when 2≤k≤⎣n/2⎦ or ⎣n/2⎦+1≤k≤n−2, 
n=6. Therefore, Dω(Sn,k) is d(Sn,k) if 1≤ω≤c, and Dω(Sn,k) is at most d(Sn,k)+2 if c+1≤ω≤n−1.   
Theorem 4.36. When ⎣n/2⎦+1≤k≤n−2, n=5 or n≥7, Dω(Sn,k) is d(Sn,k) if 1≤ω≤c, and Dω(Sn,k) is at 
most d(Sn,k)+1 if c+1≤ω≤n−1. 
Proof. According to Theorem 4.28, when ⎣n/2⎦+1≤k≤n−2, n≥7, at least c vertex-disjoint paths of 
length d(Sn,k) and n−c−1 vertex-disjoint paths of length d(Sn,k)+1 can be constructed. Therefore, 
 40
(SNPD’00), 2000, pp. 217–224. 
[11] W.K. Chiang, R.J. Chen, The (n, k)-star graph: a generalized star graph, Inf. Process. Lett. 
56 (5) (1995) 259–264. 
[12] W.K. Chiang, R.J. Chen, Topological properties of the (n, k)-star graph, International 
Journal of Foundations of Computer Science 9 (2) (1998) 235–248. 
[13] Y. Cho, I. Chung, A parallel routing algorithm on circulant networks employing the 
Hamiltonian, Information Sciences 176 (21) (2006) 3132–3142. 
[14] P.J. Chuang, L.C. Yao, An efficient reconfiguration scheme for fault-tolerant meshes, 
Information Sciences 172 (3-4) (2005) 309–333. 
[15] K. Day, A. Tripathi, A comparative study of topological properties of hypercubes and star 
graphs, IEEE Trans. Parallel Distrib. Syst. 5 (1) (1994) 31–38. 
[16] J. Fan, X. Jia, X. Lin, Complete path embedding in crossed cubes, Information Sciences 176 
(22) (2005) 3332–3346. 
[17] J.S. Fu, Longest fault-free paths in hypercubes with node faults, Information Sciences 176 (7) 
(2006) 759–771. 
[18] J.S. Fu, G.H. Chen, D.R. Duh, Combinatorial properties of hierarchical cubic networks, in: 
Proc. Int. Conf. Parallel Distrib. Syst., 2001, pp. 525–532. 
[19] J.S. Fu, G.H. Chen, D.R. Duh, Node-disjoint paths and related problems on hierarchical 
cubic networks, Networks 40 (10) (2002) 142–154. 
[20] Q.P. Gu, S. Peng, Node-to-set disjoint paths problem in star graphs, Inf. Process. Lett. 62 (4) 
(1997) 201–207. 
[21] S.Y. Hsieh, G.H. Chen, C.W. Ho, Longest fault-free paths in star graphs with node faults, 
Theor. Comput. Sci. 262 (2001) 215–227. 
[22] S.Y. Hsieh, G.H. Chen, C.W. Ho, Longest fault-free paths in star graphs with edge faults, 
IEEE Trans. Comput. 50 (9) (2001) 960–971. 
[23] D.F. Hsu, On container width and length in graphs, groups, and networks, IEICE Trans. 
Fund. Elec. Com. Com. E77-A (4) (1994) 668–680. 
[24] H.C. Hsu, Y.L. Hsieh, J.M. Tan, L.H. Hsu, Fault hamiltonicity and fault hamiltonian 
connectivity of the (n, k)-star graphs, Networks 42 (2003) 189–201. 
[25] H.C. Hsu, C.K. Lin, H.M. Hung, L.H. Hsu, The spanning connectivity of the (n, k)-star 
graphs, Int. J. Found. Comput. Sci. 17 (2006) 415–434. 
[26] S. Latifi, On the Fault-Diameter of the Star Graph, Inf. Process. Lett. 46 (3) (1993) 143–150. 
[27] T.K. Li, J.M. Tan, L.H. Hsu, Hyper hamiltonian laceability on edge fault star graph, 
Information Sciences 165 (2004) 59–71. 
[28] T.C. Lin, D.R. Duh, H.C. Cheng, Wide diameters of (n, k)-star networks, in: Proc. Int. Conf. 
Comput. Commun. Control Technol. 5 (2004), pp. 160–165. 
[29] A.A. Rescigno, Node-disjoint spanning trees of the star network with applications to 
fault-tolerance and security, Information Sciences 137 (2001) 259–276. 
[30] Y. Rouskov, P.K. Srimani, Fault diameter of star graphs, Inf. Process. Lett. 48 (5) (1993) 
243–251. 
[31] J. Xu, Topological Structure and Analysis of Interconnection Networks, Kluwer Academic 
Publishers, Netherlands, 2002. 
[32] M.C. Yang, T.K. Li, J.M. Tan, L.H. Hsu, On embedding cycles into faulty twisted cubes, 
 42
附錄：The paper accepted by Information Sciences 
 44
 46
 48
 50
 52
 54
