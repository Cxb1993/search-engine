feature specification, vertex correspondence,
and point interpolation. Relying on sparse
sets of user specified feature points, a
semi-automatic ripple searching algorithm is
proposed to cope with the problem of
establishing a one-to-one correspondence
between source and target meshes. After the
operation of correspondence establishment,
we employ Bézier interpolation with four
data control points to transform from the
source mesh to the target mesh.
Keywords：Virtual Environment, Genetic
Algorithms, 3D Mesh Morphing,
Situation-Awareness, Facial Expression
1.前言
三維電腦圖學 [1]在多媒體產業的發展
中，在許多方面皆會運用到動畫的技術，不管
是在娛樂、商業、教學許許多多方面皆會使用
到，尤其以三維動畫技術使用最為廣泛。以多
媒體娛樂產業為例，如電影、電視、卡通、遊
戲許多的特效都和動畫有著密不可分的關係
存在。國內數位內容的起步也代表將朝向多媒
體的濱紛世界發展，數位內容產業中受到大眾
所喜愛的便是電腦遊戲與動畫，以三維電腦遊
戲及動畫產業為例，國內外市場蓬勃發展，不
管是代理國外動畫或國內自創遊戲，都代表電
腦遊戲動畫產業將成為電腦圖學技術的核心
應用範疇。
大部分電腦遊戲的人物幾乎沒有使用即
時人臉表情技術，即使有顯示表情也是採用事
前準備的二維影像材質進行貼圖或二維影像
形變，並不能即時根據不同人物或場景的變化
進行人臉表情的動態轉換，近年來 facial
animation 技術突飛猛進，包含使用 morphing
between libraries of key poses, blend shapes,
motion capture, motion dynamics simulations以
及 goal-oriented techniques等技術，但有些專業
技術必須投入龐大經費建置軟硬體設施，甚至
建造大規模真實模型，因此人力及物力成本所
費不貲。
於是我們利用虛擬人物對環境場景的動
態變化，皆會對環境的變化而有其相對應的情
緒反應，所以我們使用基因演算法的最佳解搜
尋作用，來針對環境中的每一個可能會對人物
產生反應的環境因素做一個搜尋的動作，並找
出其相對應的表情出來，並以快速即時的三維
形變技術進行人臉表情的網格形變，進而達到
不同的虛擬環境皆可產生動態的臉部表情變
化。
本研究主要是在探討遊戲人物在虛擬環
境中如何表現的更加生動、活潑，人物在遊戲
裡會根據不同的環境而產生不同的表情。本研
究主要分為兩大部份，首先，我們利用基因演
算法本身所具有最佳化搜尋的特性，來對角色
人物的所在環境做判斷，並搜尋出最適合的表
情出來。當我們找到最佳解時，就利用三維形
變的技術將找到其相對應的表情做表情形
變，反應在角色人物身上。如此一來就可達到
即時生動的效果而不是靜態表情的顯現。
2.相關工作
本研究目的主要是在虛擬環境中如何使
角色人物能夠依據環境的不同進而產生多變
在編碼時可針對問題所需而自訂出不同
的編碼方式，好的編碼方式將可有效的提昇整
個工作效率。
(Ⅱ)計算適應性函數
基因演算法在求解最佳解之前必需對每
一個染色體也就是母代，給予一個適應值，我
們可對問題的目標設計出適應值，適應值的給
定將會影響到最終的結果，所以在設計適應值
時必需很小心的設計，才不會影響到結果的好
壞。適應值愈大，被選中或複製的機率就愈
大，表示該染色體具有較好的特質可演化到下
一代，反之，就不會被選上進而遭到淘汰。因
此適應值的好壞便會間接影響搜尋的結果，假
若此適應值給定太小，就有可能會導致太早收
斂的情況發生，而得不到全體的最佳解，所以
適應值的良劣扮演著整個基因演算法的成功
關鍵所在。
(Ⅲ)選擇
挑選出具有較佳特質的染色體來交配進
而產生下一代而得到最終解，然而我們在選取
(selection)或複製(reproduction)時可根據擁有
較高適應值的染色體來選取，其挑選機制有輪
盤式選擇、等機率法選擇和競爭式選擇。目前
較廣為採用的方式為輪盤式選擇。以下將對每
一種方法進行簡介：
a.輪盤式選擇：
我們先設想有一個輪盤，當輪盤中有一數
值具有較大面積時，被選中的機率就會相對的
提高，因此輪盤式選擇的做法便是對所有染色
體的適應值做一個加總，在分別對單一染色體
佔所有值的高低分配出相對應的權重，權重愈
高被選中的機率就愈高，這麼做的好處就可以
選出較好的染色體來產生下一子代，因此就可
保證每一子代都是由最佳特質的母代所產
生，而不會遺失任一個可能的最佳解，相對其
缺點也是有可能會因為每一次都是選出適應
值高的染色體出來，進而大量複製交配，而造
成群體過早收斂的情形發生。
b.等機率法選擇
等機率法顧名思義就是分配每一染色體
都擁有平等的機率會被選中，不管染色體的適
應值高低皆有相同的機會被選中，然而這樣的
做法就有相當大的可能會錯失任一次具有較
高適應值的染色體，而導致太早收斂不能得到
最佳解。
c.競爭式選擇
競爭式選擇就是直接從所有的染色體中
隨機選出幾個染色體出來，再由這此染色體來
進行競爭最終得勝者就是雙親，在由雙親來進
行演化，而不是使用機率的方式來選擇。因為
染色體都是用隨機的方式來產生，這樣一來就
有可能會發生和輪盤式選擇一樣，有可能會造
成最佳適應值的染色體沒被選上，因此就有一
種精英挑選的策略，以確保最佳的染色體一定
會被選上。
染色體 A 1.234 2.345 3.456 4.567
染色體 A ABCDEFGHIJKLMNOPQRST
圖 2 非二進位編碼
實數編碼
符號編碼
位球進行合併 (merge)，以產生多面體之間的
對應關係。T. Michikawa [19]所提出的一個多階
層式架構的演算法，首先先由使用者在輸入的
模型中，選出一些頂點用來建立基礎模型，然
後再透過網格細分法 (subdivision)的技術，依
序建立出其他階層的模型。此方法可避免使用
合併的動作所衍生來的問題，但卻須由使用者
建立基礎模型，對於複雜的模型通常需要很多
時間來建立，對一般使用者來說並不適用。J.
Parus [20]提出了一套簡單的形變方法，主要是
將兩物體直接做合併，一般作法是先將物體轉
換成 mesh的方式，而 Parus則是將兩物體合併
直接找出相對特徵點，再利用內差做形變。首
先將兩物體做結合，然後找出交錯的點出來，
在其外圍再覆蓋上一層圓圈，主要是將點投射
到圓圈上，再對圈上的點做內插的動作。
形變的過程主要可分成下列三大步驟：
Step 1：分別找出來源端(source)模型和目的端
(target)模型的特徵點。
Step 2：將模型特徵點轉換成 supermesh，
supermesh 主要是意指兩模型間特徵
點的相對關係。
Step 3：對特徵點做內插的動作，以完成形變
的轉換過程。
3. 方法
在整個虛擬環境情境感知系統上，我們分
為兩個部份來做介紹，分別是環境偵測和表情
呈現，系統架構圖如圖 3所示。在環境偵測方
面，我們是採用具有最佳解搜尋特性的基因演
算法，而在表情變化方面則是採用三維網格形
變技術。因此，將這兩種方法結合在一起就可
為遊戲添增出另一種別有樂趣的新風格。
3.1情境感知
在情境感知方面本研究是利用基因演算
法所具有的搜尋功能來做為表情的產生依
據，將角色人物所在的場景依所接收到的周圍
環境做整個搜尋判斷，以找出最合適的表情來
加以變化。首先在基因演算法部份我們主要是
區分為幾個部份來完成，分別為產生初始母
體、計算染色體的適應函數、複製、染色體交
配、突變、下一世代選擇。
步驟一：產生初始族群
族群的產生我們所採用的染色體編碼是
非二進位編碼方式，以符號來做為每一個染色
體的基因，亦就是每一個符號都是代表一種可
能的表情，主要根據人物的所在環境先做分
類，依人、事、物三種關係來對週遭環境做規
劃，如圖 4所示，再針對所有可能的環境來設
定出其相對應的表情，如表 1所示，如此一來
便可對整個虛擬環境做出分類。以達到族群的
初始化。
圖 3 系統架構圖

 
6
,
1
,
, , , ,
1
4
i j
n
i j i g h l
i i j g i j h i j l i j
f f f
f f w w w w
f w i w g w h w l
 



 
    
       

其中
,i jf ：第 i個和第 j個表情關聯性，若權重
i > j，則 ,i jf =1，否則 ,i jf =0。
iw ：怒之權重
gw ：哀之權重
hw ：樂之權重
lw ：喜之權重
,i ji ：怒之關係式，若種類 i = j，則 ,i ji =1。
,i jg ：哀之關係式，若種類 i = j，則 ,i jg =1。
,i jh ：樂之關係式，若種類 i = j，則 ,i jh =1。
,i jl ：喜之關係式，若種類 i = j，則 ,i jl =1。
 
  
1
2
1x
n k
w
n


xw ：第 x個表情參數，
k：表情權重大小之排名，1 4x 
n：表情分類之個數
步驟三：選擇
由一開始的染色體中算出適應值最高的
染色體來做為交配的因子，並執行菁英法則，
保留適應性最高的染色體，主要是為了將有可
能是最佳解的染色體保留到下一次繼續做交
配，以達到最佳解，並可避免整個運算過程太
早進入收斂，而導致結果不正確。其染色體的
計算方式根據公式(1)中
6
,
1
i j
n
f

 ，即可得知每一
個染色體的適應值大小。每次都從母代族群中
選出最佳的染色體，再加上菁英化的選擇方式
即可確保每一次都是最佳化選擇。
步驟四：交配
在這裡我們是使用最大關聯性保留方式
的動態交配，以確保染色體可維持在最佳狀態
下。將染色體內的基因依公式找出具有最大關
聯性的兩個區塊保持不變，並對其他的區塊做
交配。
其區塊保留是指將染色體中任兩個具有
最大關聯性的區塊保留不變以做為交配點，在
將剩餘的染色體重新分配，如圖 6所示。
表 2 相似矩陣
Search Algorithm 找尋特徵點為基礎並且以
semi-automatic 比對對應點作法，最後利用
Bezier curve 來做內插，實現 forward warping
的效果。
首先我們定義一個 符合 Euler-valid
topology 的幾何物件，多邊型的結構必須包含
剛好三個變數，並指定到其頂點，即是三角形
三點成一面的道理。使用這個方式，不同編號
的多邊型指定到同一個頂點，這對於系統的設
計有幫助，多邊型上的每一個三角面皆是由圖
9所示的結構所構成。
本方法一共分為五個步驟：
Step 1. Head decomposition: front and back
patches
將一個人頭的 3D mesh 物件，延著 X 軸
一分為二，分別命名為 front patch 以及 back
patch，如圖 10所示，將 front patch做為我們
臉部表情開發的基本物件，使用 front patch來
創建所需要的表情，在不做破壞性的修改前提
下，產生 sM 以及 tM 兩個人臉表情物件。
Step 2. Parameterization: front patch
將 sM 以及 tM 兩者的中心與 unit sphere
的球心重疊。並利用公式(3)將 mesh 上的每一
個點投影到 unit sphere球面上。如圖 11所示，
可以發現兩個 mesh 的形狀不完全相似。本研
究可以根據這兩個 mesh 的 topology 資訊來做
形變。
( )
|| ||
s
s
s
p
ov R
v
ov
 

 3( )
|| ||
t
t
s
p
ov R
v
ov
 


sov

:圓心到 source頂點的向量。
tov

:圓心到 target頂點的向量。
R：球的半徑。
( )s pv ：source投射之後的頂點位置。
( )t pv ：target投射之後的頂點位置。
圖 10 頭部分解
圖 9 三角面結構
Step 5. Interpolation of corresponding vertices
將原始物件與物標物件相異的對應點進
行貝茲內插，原始物件為起始點，目標物件終
點，將點的位置慢慢轉移到目標物件的位置。

0
!
( ) = (1 ) 0 1 4
!( )!
n
k n k
k
k
N
B u P u u for u
k N k


  

本研究計畫選用 Bezier curve 公式(4)來作
為內差，原因在於 Bezier曲線的平滑度與可改
變的控制點，一開始套用兩個控制點的 Bezier
curve，用起始點 sv 與終點 tv 和中間的混合點
av 來定義出 morphing 的內插公式(5)，此時的
內插仍為線性。
= (1 - ) + 0 1 5a s tv a v a v a   
接著將a以 3個控制點以上的控制點帶入
Bezier curve的公式，如此一來能讓a值以曲線
方式成長，而本研究計畫所做的實驗則以 4個
控制點( 0P , 1P , 2P , 3P )來做控制，如公式(6)，在
將 a套到公式(5)，便能在 morphing時有較自然
的表情產生。必須注意的是起始點與終點的數
值， 0P 必須為 0， 3P 必須為１，才能確保所有
的 fP 都能位移到 cP 的位置。

' ' ' '
0 1 2 3
' 3
0 0
' 2
1 1
' 2
2 2
' 3
3 3
=P +P +P +P
P = P (1 - i)
P = P 3 i (1 - i) 6
P = P 3 i (1 - i)
P =P i
a


 

其中 0 i 1 
其中 a是一個變動參數，隨著時間遞增，以達
到 mesh 漸變的目的，而遞增的曲線度為使用
者自定(本研究計畫實驗設定是四個控制點
0,0.2,0.9,1)，越多控制點，就能讓表情在
morphing過程中有越多不同的速度感，看起來
較為生動。具有 n+1個控制點的內插公式(7)，
同樣的， 0P 與 nP 也必須為 0 與 1。

0
!
= P (1 ) 0 i 1 7
!( )!
n
k n k
k
k
n
a i i
k n k


  

4. 實驗結果
實驗包含兩個部份，分別為情境感知和三
維形變，情境感知方面本研究是使用具有最佳
解搜尋特性的基因演算法針對場景部份所做
的搜尋分析，三維形變上則是使用本研究所提
出的 Ripple Search Algorithm來對人臉表情部
份做特徵點的對應方式。
圖 15 所示為利用基因演算法所需的搜尋
(b)執行結果
(a)示意圖
圖 14 Ripple Search Algorithm
參考文獻
[1] Kerlow, I. V., The Art of 3D Computer
Animation and Effects, 3rd ed., John
Wiley & Sons, Inc., 2003.
[2] Burgy, C., Garret, J., “Situation-Aware
Interface Design: An Interaction
Constraints Model for Finding the Right
Interaction for Mobile and Wearable
Computer Systems,” In Proceedings of
International Symposium on Automation
and Robotics in Construction,
pp.563-568, 2002.
[3] 林豐澤，“演化式計算上篇：演化式演
算法的三種理論模式”，文化大學用數
學系。
[4] 林豐澤，“演化式計算下篇：基因演算
法以及三種應用實例”，文化大學用數
學系。
[5] 林峰田、黃衍明，“基因演算法之基本
概念、方法與國內相關研究概況”，國
立成功大學建築研究所博士班。
[6] Heckbert, P. Master’s thesis, 
“Fundamentals of Texture Mapping and 
Image Warping,” UCB/CSD 89/516, CS
Division, U.C. Berkeley, 86pp, June
1989.
[7] Blanes, J. S., “Scanner morphing 
simulation with image warping,” In
Proceedings of the 14th International
Conference in Central Europe on
Computer Graphics, Visualization and
Computer Vision'2004, pp.233-240, 2006.
[8] Beier, T., Neely, S., “Feature-based image
metamorphosis,” In Proceedings of
SIGGRAPH, Vol. 26, No. 2, pp. 35–42,
1992.
[9] Arad, N., Reisfeld, D., “Image Warping 
using Few Anchor Points and Radial
Functions,” Computer Graphics Forum,
Vol.14, No. 1, pp.35-46, 1995.
[10] Nely, S., “Feature-Based Image
Metamorphosis,” In Proceedings of the
19th Annual Conference on Computer
Graphics and Interactive Techniques,
Vol. 26, pp.35-42, 1999.
[11] Galpin, F., Balter, R. and Deguchi, K.,
“3D Models Coding and Morphing for 
Efficient Video Compression,” In
Proceedings of the 2004 Conference on
Computer Vision and Pattern
Recognition(CVPR 2004), pp.334-341,
2004.
[12] Alexa, M., “Recent Advances in Mesh 
Morphing,” Computer Graphics Forum,
Vol. 21, No. 2, pp.173-196, 2002.
[13] Alexa, M., “Local Control for Mesh 
Morphing,” In Proceedings of the
International Conference on Shape
Modeling & Applications, pp.209-215,
2001.
[14] Kent, J. R., Carlson, W. E. and Parent, R.
E., “Shape Transformation for 
Polyhedral Objects,” Computer
Graphics, Vol. 26, No. 2, pp.47-54,
1992.
[15] Lee, A., Sweldens, W., Schorder, P.,
