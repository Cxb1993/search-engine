2摘要
本計畫主要以 USB 控制晶片為整
體系統核心，藉此設計與製作一個人
機介面直流伺服馬達儀錶控制系統。
USB 周邊及其控制硬體電路之設計與
軟體程式之規劃與撰寫為本計畫主要
之工作。由於本計畫主要在設計與製
作一個以 USB 為基礎之嵌入式儀錶驅
動控制系統；亦即把 USB 應用在嵌入
式系統，而此嵌入式系統主要針對車
用儀錶做控制，然後，再利用 PC 藉由
USB 傳輸達到監控目的，因此在軟體
方面分為 PC 端人機介面程式與 USB
嵌入式微控制器端韌體程式開發。本
研究計畫之軟體設計則包括，USB 裝
置控制器韌體、裝置驅動程式與 PC 主
機端人機介面應用程式。
關鍵字: 通用串列匯流排、嵌入式系統
Abstract
The main purpose of this project is
to design and implement a dc servo
motor drive for panel gauge based on a
USB controller. The hardware of the
USB peripheral and related control
circuit are designed and simulated. Also,
the USB firmware and human interface
software are well planned and
programmed. Since the monitoring and
control of the system is realized by the
data communication via the connection
between PC and the USB controller,
thus, the human interface software, USB
firmware, window drive program are
fulfilled in this project.
Keywords: USB、Embedded system
I. 緒論
USB 使個人電腦與電腦周邊設備
連接變得越來越容易，主要原因是其
低成本、易於採用且具穩定之介面來
移動資料，已成為多種產業都可接受
的方式。而目前個人電腦可以說是
USB 最多且最廣泛大量應用之領域，
但是它在嵌入式系統領域的巨大潛力
卻還沒有被開發。USB 在嵌入式系統
中之應用包括車用儀錶、飛機模擬
機、Smart Phone、數位相機、PDA、
印表機、視訊轉換盒、監控系統、車
用控制以及行動電話等。因此，如何
把 USB 應用在嵌入式系統使其應用領
域更寬廣及更實際且具產業開發價
值，則是本計畫執行之動機。
II. USB 原理介紹
USB 英文全名為 Universal Serial
Bus 如果從字面上來翻譯成中文稱之
為『通用串列匯流排』，在此報告分為
三個部分來介紹分別是 USB 的簡介、
直流馬達原理和直流馬達模型建立。
2.1 USB 簡介
USB 依照傳輸速度來區分，可以
分為低速（USB1.0）、全速（USB1.1）
和高速（USB2.0）， USB 的資料傳輸
方式是採用串列的方式，與 RS-232 類
似，採用串列的方式最大的用意就是
要降低訊號線的數目，並可以讓訊號
傳遞較遠的距離。串列界面引擎（SIE）
是 USB 最重要的功能單元。在串列引
擎中，詳細地掌握了在 USB 匯流排上
的接收與傳送的個別位元。當電腦主
機對裝置發出控制信號時，所有連接
的裝置皆透過根集線器（Hubs）收到
同樣的信號，經由比對所配置的裝置
位置後，只能有一個裝置作出相對應
的動作。因此對一個裝置而言，不僅
要無誤地接受主機端所送來的資料，
又要正確地發出回應的信號。因此在
D+與 D- 的差動資料線上就必須採用
一種特別的編碼方式再加以傳送，如
圖 2.1 所示，這種方式稱為 NRZI（Non
4回授電路[5]、EEPROM、I2C電路。
EZ-USBUSB接頭
EEPROM
微型直流伺服馬達
馬達驅動電路 M
Encoder
Encoder
回授電路
A相
B相
圖3.3 系統控制器硬體架構圖
3.3 系統軟體架構
系統軟體開發架構如圖 3.4 所
示，分為 PC 端人機介面程式與 USB
晶片微控制器端韌體程式開發。使用
者透過 PC 端上之人機介面經由 USB
驅動程式傳送指令至外部 USB 週邊裝
置，USB 晶片當接收來自 PC 端指令
後依照指令動作，並將所需資料經由
USB 傳送至 PC。PC 端人機介面程式
主要是以提供使用者在視窗介面環境
下進行指令命令控制，在此我們採用
Borland C++ Builder 作為軟體開發工
具，進行視窗介面程式開發，而 USB
裝置驅動程式則是以 Cypress 所提供
與 Windows 驅動程式模組（Windows
Driver Module；WDM）相容之高速裝
置驅動程式。USB 微控制器韌體程式
則是採用 Keil 公司的 uVision2 為開發
平台工具進行韌體程式開發搭配
Cypress 所提供之 Control Panel 進行將
編寫完之韌體程式載入。
人機介面
應用程式
PC主機端
USB裝置
驅動程式
USB微控制器
軔體程式
USB裝置
USB
微控制器引擎
圖 3.4 系統軟體開發架構圖
3.4 USB 微控制器之韌體程式
本計畫所設計之韌體程式是利用
軟體 Keil C 作為開發環境，以 C 語言
進行程式撰寫，其程式設計流程如圖
3.5 所示。由圖中顯示程式一開始先從
主程式為開端，進入主程式後，會將
USB 裝置與微型直流伺服馬達控制程
式初始化，接下來會進入輪詢狀態。
本計畫所設計之韌體程式將會使用一
個計時器撰寫中斷副程式與一個外部
中斷埠撰寫中斷副程式。計時中斷副
程式是用來產生微型直流伺服馬達驅
動用之 PWM 電壓訊號，藉由計時的方
式，撰寫出系統所需之 PWM 電壓訊
號，並且利用計時器增加或減少 PWM
之責任週期，進而控制微型直流伺服
馬達轉速。外部中斷副程式是用來判
斷微型直流伺服馬達之轉動訊號，因
為微型直流伺服馬達轉動之後磁性編
碼器會產生相差 90 度之 A、B 相轉動
脈波訊號，所以利用所產生之轉動脈
波訊號判斷正反轉以及計數脈波。換
言之，就是作為判斷微型直流伺服馬
達正反轉與轉動位置，在控制系統中
作為迴授訊號。
6IV. 系統測試
4.1 系統實測
本計畫所設計研製之系統如圖 4.1
所示，為了清楚顯示馬達定位角度位
置，所以將馬達與儀錶板做結合。
圖 4.1 直流伺服馬達控制系統硬體
4.2 使用者介面之面板介紹
本計畫所撰寫之微型直流伺服馬
達人機介面之使用者介紹控制面板，
如圖 4.2 所示。撰寫使用者介面控制面
板是利用軟體 Borland C++ Builder，搭
配利用軟體 Keil C 所設計之韌體完成
控制微型直流伺服馬達之目的。本計
畫之使用者介面控制面板在設計撰寫
上有兩大重要方向。第一個重點方向
是要設計裝置連線面板，此連線面板
主要USB晶片VID碼作為判斷主機端
是否偵測到 USB 裝置之依據，選擇晶
片 VID 碼完成與 USB 裝置之連線。第
二個重點方向是設計微型直流伺服馬
達轉動面板，最主要目的是能夠讓使
用者在這個面板，可以輸入轉動角
度，定位控制之功能。
圖 4.2 使用者介面控制面板
4.3 當儀錶指針為 45 度
設定之馬達最終轉動角度位置為
45 度之實測位置波形，圖 4.3 為調整
45 度之馬達轉動位置波形。
圖 4.3 設定轉動角度 45 度
4.4 當儀錶指針為 90 度
設定之馬達最終轉動角度位置為
90 度之實測位置波形，圖 4.4 為調整
90 度之馬達轉動位置波形。
圖 4.4 設定轉動角度 90 度
4.6 當儀錶指針為 270 度
設定之馬達最終轉動角度位置為
270 度之實測位置波形，圖 4.5 為調整
270 度之馬達轉動位置響應波形。
