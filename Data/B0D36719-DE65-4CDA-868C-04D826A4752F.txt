01
2
3
4
5
6
7 8
9
10
11
12
13
14
15
0
1
2
3
4
5
6
78
9
10
11
12
13
14
15
0
1 2
3
4
5 6
78
9 10
11
12
13 14
15
0
1 2
3
4
5 6
7
8
9 10
11
12
13 14
15
T0 T1 T2 T3
Figure 2: A set of independent spanning trees on Q4.
be achieved by sending k copies of the message along the k ISTs rooted at the source node.
Recently, the problem of constructing multiple ISTs of a given graph has received much atten-
tion. However, this is a very hard problem for arbitrary graphs. In fact, Zehavi and Itai [22]
conjectured that for any k-connected graph G and each vertex r of G, there exist k ISTs of
G rooted at r. The conjecture has been confirmed only for k-connected graphs with k ≤ 4 in
[2, 4, 10, 22], and it is still open for arbitrary k-connected graphs when k ≥ 5. Moreover, by
providing the construction schemes of ISTs, the conjecture has been proved to hold for several
restricted classes of graph or digraph (especially, the graph classes related to interconnection
networks), such as planar graphs [8, 9, 15, 16], product graphs [17], chordal rings [11, 21],
deBruijn and Kautz digraphs [5, 7], and hypercubes [20] etc. Note that the development of
algorithms for constructing ISTs tends toward pursuing two research goals, one is the design of
efficient construction schemes (e.g., see [11, 15, 16, 21] for linear-time algorithms) and another
is the reducing the heights of ISTs (e.g., see [7, 20, 21] for height improvements).
As to the construction of the height-reduced independent spanning trees on hypercubes,
Tang et al. [20] proposed an algorithm that is modified from the algorithm for product graphs
in [17]. Due to the definition of hypercubes using cartesian product, both algorithms in [17] and
[20] are designed by a recursive fashion in a natural way (i.e., for constructing k ISTs of Qk, we
need to build k − 1 ISTs of Qk−1 in advance). This kind of construction forbids the possibility
that the algorithm could be parallelized. In this project, we would like to give a new algorithm
to generate k ISTs of Qk. Our generation is based on a concept called Hamming distance
Latin square (see Section 2 for definition) which is inspired from the idea of [3] and [13] for
solving the parallel routing problem on particular networks. As a result, we will show that our
generation relies on a simple rule and it can easily be parallelized (i.e., k ISTs are established
simultaneously). Moreover, all the k ISTs obtained from our algorithm are isomorphic if we
disregard the representation of binary strings of vertices (e.g., see Figure 2).
The remaining part of this report is organized as follows. Section 2 introduces the concept
of Hamming distance Latin square and gives some useful properties. Section 3 presents our
algorithm to generate k ISTs on hypercube Qk and shows the correctness. Finally, a concluding
remark to the discussion about the height and the average path length of ISTs are given in the
last section.
2
by describing the parent of every vertex in each spanning tree Ti. For each vertex x(6= 0) ∈ Qk
with binary string x = xk−1xk−2 · · ·x0, we perform the following procedure:
Procedure Gen-Parents
begin
for i = 0 to k − 1 do,
if (xi = 1) parent(Ti, x) = x− 2succ(i);
if (xi = 0) parent(Ti, x) = x + 2i;
enddo
end Gen-Parents
In what follows, we show the correctness of the algorithm.
Lemma 3.1. For each i = 0, 1, . . . , k − 1, Ti is a spanning tree rooted at 0 of Qk.
Proof. According to Procedure Gen-Parents, it is obvious that every vertex x(6= 0) ∈ Qk
implies x ∈ Ti. In particular, the vertex 2i is adjacent to 0 in Ti since succ(i) = i in Ik(2i).
Since the two end vertices of any edge in Ti are with Hamming distance 1, Ti is a spanning
subgraph of Qk. To complete the proof, we need to show that there exists a unique path from
every vertex x(6= 0) to 0 in Ti. Recall that Hx = {i : 0 ≤ i ≤ k − 1 and xi = 1}. We suppose
that Hx = {i0, i1, . . . , it−1} with i0 < i1 < · · · < it−1 and consider the following two cases:
Case 1: i ∈ Hx (i.e., xi = 1). Assume i = ip for some p = 0, 1, . . . , t − 1. By the rule, x
is adjacent to x − 2ip+1 in Ti. Let y = x − 2ip+1 . Since Hy = {i0, i1, . . . , ip, ip+2 . . . , it−1}, y is
adjacent to y − 2ip+2 in Ti. By this way, we can find the following unique path connecting x
and 0 in Ti:
x
−2ip+1−→ (x− 2ip+1) −2
ip+2−→ (x− 2ip+1 − 2ip+2) −2
ip+3−→ · · · −2
ip−1−→ (2ip) −2ip−→ 0
Case 2: i /∈ Hx (i.e., xi = 0). By the rule, x is adjacent to x+ 2i in Ti. Let y = x+ 2i. Then
i ∈ Hy. From case 1, we have shown that there exists a unique path, say P , connecting y and
0 in Ti. Therefore, x
+2i−→ y along with the path P forms the unique path connecting x and 0 in
Ti. 
Example 3. We consider 1101(13) and 0110(6) in Q4. From the above lemma, we can easily
check the unique path from 13 (respectively, 6) to 0 in every spanning tree Ti as follows:
T0[13, 0] : 13
−22−→ 9 −23−→ 1 −20−→ 0 T0[6, 0] : 6 +2
0−→ 7 −21−→ 5 −22−→ 1 −20−→ 0
T1[13, 0] : 13
+21−→ 15 −22−→ 11 −23−→ 3 −20−→ 2 −21−→ 0 T1[6, 0] : 6 −2
2−→ 2 −21−→ 0
T2[13, 0] : 13
−23−→ 5 −20−→ 4 −22−→ 0 T2[6, 0] : 6 −2
1−→ 4 −22−→ 0
T3[13, 0] : 13
−20−→ 12 −22−→ 8 −23−→ 0 T3[6, 0] : 6 +2
3−→ 14 −21−→ 12 −22−→ 8 −23−→ 0
We now show the independence for the construction.
Lemma 3.2. Ti and Tj are ISTs rooted at 0 of Qk for 0 ≤ i 6= j ≤ k − 1.
4
[3] I. Chung, Application of the special latin squares to the parallel routing algorithm on
hypercube, Journal of Korean Information Science Society, 19(5) (1992).
[4] S. Curran, O. Lee, and X. Yu, Finding four independent trees, SIAM Journal on Comput-
ing, 35 (2006), pp. 1023–1058.
[5] Z. Ge and S.L. Hakimi, Disjoint rooted spanning trees with small depths in deBruijn and
Kautz graphs, SIAM Journal on Computing, 26 (1997), pp. 79–92.
[6] F. Harary, J.P. Hayes, and H.-J. Wu, A survey of the theory of hypercube graphs, Com-
putational Mathematics and Applications, 15 (1988), pp. 277–289.
[7] T. Hasunuma and H. Nagamochi, Independent spanning trees with small depths in iterated
line digraphs, Discrete Applied Mathematics, 110 (2001), pp. 189–211.
[8] A. Huck, Independent trees in graphs, Graphs and Combinatorics, 10 (1994), pp. 29–45.
[9] A. Huck, Independent trees in planar graphs, Graphs and Combinatorics, 15 (1999), pp.
29–77.
[10] A. Itai and M. Rodeh, The multi-tree approach to reliability in distributed networks,
Information and Computation, 79 (1988), pp. 43–59.
[11] Y. Iwasaki, Y. Kajiwara, K. Obokata, and Y. Igarashi, Independent spanning trees of
chordal rings, Information Processing Letters, 69 (1999), pp. 155–160.
[12] S.L. Johnsson and C.-T. Ho, Optimum broadcasting and personalized communication in
hypercube, IEEE Transactions on Computing, 38(9) (1989), pp. 1249–1268.
[13] S. Kim and I. Chung, Application of the special Latin square to a parallel routing algorithm
on a recursive circulant network, Information Processing Letters, 66 (1998), pp. 141–147.
[14] F. T. Leighton, Introduction to Parallel Algorithms and Architectures: Arrays, Trees, Hy-
percubes, Morgan Kaufmann, San Mateo, CA, 1992.
[15] K. Miura, D. Takahashi, S. Nakano, and T. Nishizeki, A linear-time algorithm to find
four independent spanning trees in four-connected planar graphs, Proc. 24th Workshop on
Graph-Theoretic Concepts in Computer Science, WG’98, LNCS 1517, Springer (1998), pp.
310-323.
[16] S. Nagai and S. Nakano, A linear-time algorithm to find independent spanning trees in
maximal planar graphs, Proc. 26th Workshop on Graph-Theoretic Concepts in Computer
Science, WG 2000, LNCS 1928, Springer (2000), pp. 290–301.
[17] K. Obokata, Y. Iwasaki, F. Bao, and Y. Igarashi, Independent spanning trees of product
graphs and their construction, IEICE Trans. Fundamentals of Electronics, Communica-
tions and Computer Sciences, E79-A (1996), pp. 1894–1903.
[18] M.O. Rabin, Efficient dispersal of information for security, load balancing, and fault toler-
ance, Journal of the ACM, 36 (1989), pp. 335–348.
[19] P. Ramanathan and K. G. Shin, Reliable broadcast in hypercube multicomputers, IEEE
Transactions on Computers, 37(12) (1988), pp. 1654–1657.
[20] S.M. Tang, Y.L. Wang, and Y.H. Leu, Optimal independent spanning trees on hypercubes,
Journal of Information Science and Engineering, 20 (2004) 143–155.
[21] J.S. Yang, J.M. Chang, S.M. Tang and Y.L. Wang, Reducing the height of independent
spanning trees in chordal rings, IEEE Transactions on Parallel and Distributed Systems,
18 (2007) 644–657.
[22] A. Zehavi and A. Itai, Three tree-paths, Journal of Graph Theory, 13 (1989), pp. 175–188.
6
 2
報告是安排在 6/27 下午 Session 2 Computational Biology，這個 Session 共有四篇，報告時間
為 14:00-15:40，每篇報告時間為 25 分鐘，我們的報告順序是第三篇，報告時間安排在
14:50-15:15，這個 Session 的主持人是 Jie Wang，也是這次 Conference 的會議組織委員會主席
和程式委員會主席(和中國科學院數學與系統科學研究院研究員胡曉東主任共同主持）。 
 
這次發表成果是有關字串處理，在這 Session 中，其一個報告者，Texas 大學 computer 
Science 的 Bhadrachalam Chitturi, Hai Sudborough 也是字串處理，這次報告的題目是 Adjacent 
Swaps on Strings。這二位學者另外也參加了 41st Annual Hawaii International Conference on 
System Sciences，發表了 Bounding Prefix Transposition Distance for Strings and Permutations，
他們最近在字串處理的研究有豐碩的成果。 
 
在餐會過程中，也與多位學者聊天，聊到各國和各地的研究和教學環境，雖然中國大陸
國民所得不高，學校環境也沒台灣好，但大陸學生普遍比台灣學生認真，大陸學生大多都從
各地各省出外求學，因為中國少子化的影響，父母對小孩的教育投資又很捨得，大陸同學也
深深體會，教育是改善家庭環境的最好的方法，所以，同學的學習動機都很強烈。 
 
 
 
二、與會心得 
 
這次 COCOON’2008 投稿的文章有 172 篇，分別來至 26 個國家和地區：加拿大(Canada)、
澳洲(Australia)、奧地利(Austria)、巴西(Brazil)、中國(China)、丹麥(Denmark)、法國(France)、
德國(Germany)、香港(Hong Kong)、匈牙利(Hungary)、印度(India)、伊朗(Iran)、以色列(Israel)、
日本(Japan)、韓國(Korea)、墨西哥(Mexico)、摩洛哥(Morocco)、荷蘭(Netherlands)、巴基斯坦
(Pakistan)、新加坡(Singapore)、西班牙(Spain)、瑞士(Switzerland)、臺灣(Taiwan)、烏克蘭
(Ukraine)、英國(United Kingdom)和美國(United States)。會議的議題主要包括︰算法和數據架
構，自動機理論，數理邏輯，組合算法，計算複雜性，計算生物學，計算幾何，密碼學，並
行和分佈式計算等。 
 
過去主要參與的 Conference：組合數學與計算理論研討會(Combinatorial Mathematics and 
Computational Theory)、國際計算機會議 ICS(International Computer Symposiums)及全國計算機
會議 NCS(National Computer Symposium)，雖然這些國內的 Conference 舉辦的次數比 Annual 
International Computing and Combinatorics Conference (COCOON)多，歷史更久，但國內的
Conference 還是無法吸引到那麼多他國的人來參與，這次能參與 COCOON’2008，同時，這
次被接受的論文＂Sequence Alignment Algorithms for Run-Length-Encoded Strings”也會被收入
到 Lecture Notes in Computer Science(EI)，能有成果收入在這期刊，也是種新的體驗。 
 
參加這次 COCOON’2008，能與同好相聚一堂，彼此分享研究的樂趣，大家都是有朋自
遠方來，大夥從世界各地來到中國大連這地方，向同好報告自己的研究成果，人生一大樂趣，
有種德不孤必有鄰的感覺。 
