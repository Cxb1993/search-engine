 2
 
圖 2 ROBOT II 
 
圖 3 ROBOT III 
 
五、結果與討論 
（一） ROBOT I 性能與優缺點探討 
    ROBOT I 之整體性能如表 1 所示。ROBOT 
I 本身重量為 125g，其最大載重值為 210g，而
圖 1 中的控制電路板與電池總重為 95g，故加上
電路板後 ROBOT I 最多只能再承載 115g。若總
承載超過表 1 中的最大載重值 210g，則由高碳
鋼所製作成的腳會因負載過重而產生變形，導
致無法順利行走。載重逐漸由小變大時，單部
行程將逐漸減小而導致行進速度減緩，載重超
過到臨界值時，機器人將無法行走。若長時間 
 
ROBOT I 因採用彈性材料高碳鋼製成的
腳，可在形狀記憶合金致動器恢復長度時適時
提供腳的反向恢復力，無需要額外安裝一條偏
壓彈簧或另一條形狀記憶合金來提供恢復力。
如此可以大大減低機器人製作的複雜度以及需
求空間，適合小型化的機器人設計。但有無法
承受太重負載的缺點，適合低負載的情況下使
用。 
表 1 ROBOT I 整體性能 
直行速度值 52.2 cm/min 
轉向速度值 轉向 90 度角度花費
20 秒 
最大載重值 210 g 
最大載重速度值 26.67 cm/min 
單步行程 0.6cm 
 
（二） ROBOT II 之製作與特性分析 
    ROBOT II 之身體結構與製作方式皆與
ROBOT I 相同，在此不再多加贅述。ROBOT II
與 ROBOT I 最大的不同在於我們使用壓克力
作為腳的主材料。基本上腳的外型是參考自然
界的六足生物(如蟑螂、昆蟲等)所製作而成(如
圖 4)，使用壓克力方形棒為主要材料，如圖 5
所示，圖中 A 為截面積 3×3mm2 之方形棒，B
為截面積 4×4mm2 之方形棒。藉由化學藥劑（氯
仿）的接合，可以做出想要的腳的形狀。我們
將腳設計成三節如圖 6 所示。這樣參照蟑螂腳
的設計，使機器人更具備仿生的意義。 
 
           圖 4 蟑螂腳結構示意圖 
 4
 
圖 9 線性彈簧及X方向相關之形狀記憶合金致
動器示意圖 
 
    圖 9 為腳在 X 方向作動的示意圖。在 X 方
向上有一條形狀記憶合金致動器佈安裝於後端
的腳旁。另外一邊連接著線性彈簧。當形狀記
憶合金被加熱時產生收縮，會使腳以圖中的
Revolute Joint 為支點做 Z 方向的轉動。換句話
說，腳尖會產生 X 方向的位移。當形狀記憶合
金冷卻時，線性彈簧將提供一回復力將腳拉回
原來的起始位置。 
 
    由圖10可以看到整個機器人的外型與風扇
圖。我們在機器人身體的底部加裝了四個小風
扇（每個風扇規格為截面積 3×3 平方公分，風
速可達 1.6m/s，重量僅有 10g）作為形狀記憶合
金的冷卻系統。當形狀記憶合金處於加熱狀態
時冷卻系統不起動；而當形狀記憶合金冷卻
時，起動冷卻系統以加快形狀記憶合金的冷卻
速度。我們在對相關 X 方向作動的形狀記憶合
金佈線時，將與 L1,R2,L3 腳相關的形狀記憶合
金佈在身體左側，目的是為了使在 Tripod gait
同時作動的三隻腳，能夠在該冷卻時，受到冷
卻，而不會去影響另外三隻腳（也把電風扇分
為左右兩邊，那一邊需要冷卻才開）。反之
R1,L2,R3 亦然，而所有的 X 方向都佈置在機器
人身體的底部。 
 
我們在機器人腳的末端安裝橡膠片，不僅
可以增加機器人跟地面的摩擦力，也可大大增
加與地面的接觸面積，使機器人走的更穩定。 
 
 
圖 10 ROBOT II 外型與冷卻風扇圖 
 
（三） ROBOT I 與 ROBOT II 之性能比較 
 
表 2 ROBOT II 整體性能 
直行速度值 100 cm/min 
轉向速度值 轉向 90 度角度花費
40 秒 
最大載重值 600 g 
最大載重速度值 40 cm/min 
單步行程 1cm 
 
    ROBOT I與ROBOT II的總體效能從上表1
與表 2 可得知，在直線行走 ROBOT II 的速度
約是 ROBOT I 的兩倍。在轉向速度上，卻是
ROBOT I 來的快很多，這跟步態週期有很大的
關係，因為 ROBOT II 主要是強調其載重性，
故以走的穩，走的確實為目的，所以相關的步
態週期都調的比較長。相對的 ROBOT I 以輕巧
為主要訴求，其步態周期較短，故轉向速度較
快。在載重上，由於 ROBOT I 使用高碳鋼做為
 6
變化，即速度，且定義變數 θ=[θ1 θ2 θ3]T，以下
為其微分關係： 
14 * PT
P
P
P
P r
z
y
x
=
⎥⎥
⎥
⎦
⎤
⎢⎢
⎢
⎣
⎡
=   (5-11) 
23131210 sin*))cos(*cos*( θθθθ −+++−= LLLxPx
23131210 cos*))cos(*cos*( θθθθ −+++= LLLyPy
)sin(*sin* 313120 θθθ −++= LLzPz   
將上述三式對時間作微分： 
0
*))(**(
*))(**(
    
P
P
P
P 2313121
2313121
31312
231312
231312
z
y
x
4 θθθθ
θθθθ
scLcLL
ccLcLL
)θ*c(θL*cθL
))*cθθ*s(θL*sθ(L
))*sθθ*s(θL*sθ(L
−++−
−++
⎢⎢
⎢
⎣
⎡
−+
−+−
−+−
=
⎥⎥
⎥
⎦
⎤
⎢⎢
⎢
⎣
⎡
=
&
&
&
&
 
⎥⎥
⎥
⎦
⎤
⎢⎢
⎢
⎣
⎡
⎥⎥
⎥
⎦
⎤
−−
−
−
3
2
1
313
2313
2313
*
)(*
*)(*
*)(*
θ
θ
θ
θθ
θθθ
θθθ
&
&
&
cL
csL
ssL
 
           θθ && *)(4 JP =   
)(θJ ：Jacobian matrix 
 
在上式中，sθ 與 cθ 個別代表著 sinθ 與 
cosθ，我們可以用 Jacobian 矩陣與變數矩陣 θ，
來簡化之。接著我們對其微分，來得到加速度
之間的關係，以下為其推導: 
設       
⎥⎥
⎥
⎦
⎤
⎢⎢
⎢
⎣
⎡
⎥⎥
⎥
⎦
⎤
⎢⎢
⎢
⎣
⎡
=
3
2
1
987
654
321
4 *
θ
θ
θ
&
&
&
&
aaa
aaa
aaa
P
 
⎥⎥
⎥
⎦
⎤
⎢⎢
⎢
⎣
⎡
⎥⎥
⎥
⎦
⎤
⎢⎢
⎢
⎣
⎡
∂∂∂
∂∂∂
∂∂∂∂∂
+
⎥⎥
⎥
⎦
⎤
⎢⎢
⎢
⎣
⎡
⎥⎥
⎥
⎦
⎤
⎢⎢
⎢
⎣
⎡
=
2
3
2
2
2
1
392817
362514
332211
3
2
1
987
654
321
4 *
///
///
///
*
θ
θ
θ
θθθ
θθθ
θθθ
θ
θ
θ
&
&
&
&&
&&
&&
&&
aaa
aaa
aaa
aaa
aaa
aaa
P
⎥⎥
⎥
⎦
⎤
⎢⎢
⎢
⎣
⎡
∂∂∂∂∂∂∂∂∂∂∂∂
∂∂∂∂∂∂∂∂∂∂∂∂
∂∂∂∂∂∂∂∂∂∂∂∂
+
)/(*)/()/(*)/()/(*)/(
)/(*)/()/(*)/()/(*)/(
)/(*)/()/(*)/()/(*)/(
293819371827
263516341524
233213311221
θθθθθθ
θθθθθθ
θθθθθθ
aaaaaa
aaaaaa
aaaaaa
 
⎥⎥
⎥
⎦
⎤
⎢⎢
⎢
⎣
⎡
32
31
21
*
*
*
*
θθ
θθ
θθ
&&
&&
&&  (5-18) 
2"'
4 *)(*)(*)( θθθθθθθ &&&&&&& HHJP ji ++=
以上即為本機器人的運動方程式推導，由
以上的推導，再加上加速規，我們就可以計算
出機器人在空間運動的座標，接著就可以使機
器人精準的定位。 
 
（五） ROBOT III 相關感測器及控制器模組 
    ROBOT III 相較於 ROBOT II，最大的差別
就是 ROBOT III 在硬體上，感測器的應用與晶
片的使用。這對步態控制實現而言，ROBOT III
比 ROBOT II 更具優勢。因為具備了迴授訊號，
可以直接了解機器人在步態行走時，某些狀態
上的資訊。藉由這些訊號，可以在步態控制裡，
建立一些機制，讓機器人在步態行走上能更穩
更快。接下來針對感測器在 ROBOT III 相對於
ROBOT II 所造成的好處，一一說明。 
 
（i）壓力感測器 
在 ROBOT III 腳底加裝壓力感測器(如圖 13)，
可以得知機器人肢腳著地的狀況，由這樣的資
訊，可以避免在 Tripod gait 行進中需估計形狀
記憶合金在 Z 方向回復所需的時間。舉例而
言，在沒有壓力感測器的情況下，我們為了避
免在 Tripod gait 步態行走當中，兩組腳同時離
開地面的不穩定狀況，需估測一段較長的時間
去等待，例如需等待[L1 R2 L3]在 Z 方向的形
狀記憶合金完全回復（即腳碰地）之後，才能
抬起[R1 L2 R3]這組腳。安裝了壓力感測器之
後，我們可以經由訊號很明確的得知腳[L1 R2 
L3]完全碰地，然後[R1 L2 R3]不需額外估測 Z
方形形狀記憶合金回復時間，即可抬起。這樣
一來可以縮短走一個 Tripod gait 的週期，加快
機器人的行走速度，並且可以完全避免兩組腳
同時離地的不穩定狀況發生。腳同時離地會造
成機器人身體瞬間下沈，直到回復腳撐到地，
這樣會導致機器人的行走效率降低，而且迫使
下次在拉伸肢腳時，需要更久的驅動時間。 
 8
圖 17 ROBOT III 控制系統整合圖 
  
 步態控制的流程如圖 18 所示。首先 ARM9
控制器利用 I/O port 傳送步態序列，再透過達
靈頓驅動器驅動形狀記憶合金產生腳的動作。
壓力感測器會回傳每隻腳的著地情形給 ARM
控制器，ARM 控制器根據壓力感測器的資訊以
及無線傳輸模組所接收到的指令，再下達相關
的步態序列命令。 
 
 
圖 18 ROBOT III 步態控制流程圖 
 
（六） 形狀記億合金長度控制 
   我們利用 PID 控制原理，搭配 PWM（Pulse 
Width Modulation）訊號來做控制。我們可以藉
由控制 PWM 訊號的 Duty cycle 來控制單位時
間內用加熱形狀記憶合金的能量，進而達成形
狀記憶合金的長度控制。其控制流程方塊圖如
下圖 19 所示。當形狀記憶合金長度因加熱而產
生改變時，其電阻值也會隨長度改變，因此通
過的電流也會跟著改變，造成達靈頓驅動器
collector 端與 emitter 之間的電壓會因形狀記憶
合金長度改變而發生微小變動。而此電壓 VCE
也就是上圖 19 中的回授值。我們可藉由控制此
電壓大小，進而達成控制形狀記憶合金長度之
目的。我們將 VCE 輸入到數位類比轉換晶片
上，轉換成數位型態，再藉由 IIC 介面傳輸到
A9M2410_1控制器。在A9M2410_1的Windows 
CE 作業系統中，使用 Microsoft EMbedded 
Visual C++這套軟體，將 PID 控制器編寫成
Windows CE 之應用程式。以參考值跟回授值相
減的誤差值為輸入，進而使用 PID 控制產生一
PWM 訊號去控制 A9M2410_1 的一根輸出接
腳。這接腳會與達靈頓驅動晶片的 base 端相接
以控制形狀記憶合金，這樣一來就形成完整迴
路的控制器。圖 20 為形狀記憶合金長度控制步
階響應圖，上方的圖中紅線為參考值；下方的
圖為對應之 Duty cycle。此時所用的參數為
Kp=30、Ki=0.025、Kd=0。 
 
 
圖 19 形狀記憶合金控制方塊圖 
 
 
圖 20 形狀記憶合金長度控制步階響應圖 
 
 10
Int. Symp. on Micromechatronics and human 
Science(1988) 
[18]. HYO JIK LEE and JUNG U LEE, 
“Modeling and time delay control of shape 
memory alloy actuators,” Advanced Robotics, 
2004, Vol.18, No.9, pp.881-903 
[19]. James M. Conrad , Jonathan W. Mills 
“STIQUITO  Advanced Experiments with a 
Simple and Inexpensive Robot” 
[20]. A MOLNAR , Z VAMOSSY “Experimental 
biped robot using SMA actuators,” 4th 
International Conference on Climbing and 
Walking Robots,  pp.811-818, 2001 
[21]. M BRANCIFORTE , F DODDO ,         
L  FORTUNA , A  RIZZO , “A completely 
analog-based processor control for hexapod 
robots,”  5th International Conference on 
Climbing and Walking Robots,  pp.71-78, 
2002 
[22]. S.Majima, K.Kodama and T.Hasegawa,” 
Modeling of shape memoryalloy actuator and 
tracking control system with the model”, 
IEEE Trans.Control Syst. Technol. 9, p54-59 
(2001) 
[23]. A.Kumagai, P.Hozian and M.Kirkland, 
“Neuro-fuzzy based feedback controller for 
shape memory alloy actuator.” Proc.of SPIE, 
2000. 
[24]. 許凱棋, “微型仿生機器人動態特性分析
與運動控制” 國立台灣大學機械工程學系
研究所碩士論文, 2005. 
[25]. 楊鎮嘉, “六足仿生機器人嵌入式控制器
之研發” 國立台灣大學機械工程學系研究
所碩士論文, 2006. 
 
七、計畫成果自評 
本計畫依預定之進度已完成機器人的機構設計
與開發、步態分析，並且開發以 Windows CE
為作業系統之運動控制器，配合感測器的應
用，使機器人對外在環境更為了解：羅盤感測
器使機器人有了方向感；加速規使機器人有了
速度感；壓力感測器可以協調肢腳在步態行走
時，讓身體更有平衡感。此外，本計畫之成果
在今年度完成一篇論文 “A Hexapod Robot 
Based on Shape Memory Alloy Actuators”發表於
“MECHATRONICS 2006 - 4th IFAC-Symposium 
on Mechatronic Systems”。本計劃所研發之機器
人參加 94 年度「產業機台之伺服定位」大賽獲
得特優，並榮獲「勝華科技獎」，相關成果並
受邀發表於 2006 年一月份的「機電整合雜誌」。 
 
 
 
 
 
???????????????????????????????????
???????????????????????????????????
??????????????????????????????????
???????????????????????????????????
???????????????????????????????????
?????????????????? 
 
???????????????????????????????????
??????????????????????????????????
???????????????????????????????????
????? 
?????? Director of the Center for Precision Nanosystems, Department of 
Nanomechanics, Tohoku Universit?????????????????????
???????????????????????????????????
???????????????????????????????????
????????????????????? 
 
 
scanning speed are what people strive for.  
The original learning mechanism of ILC was a first proposed at 1978 by Uchiyama [2] 
but the relative learning theorems and algorithms were not completely formed until 
1984 by Arimoto [3]. The ILC learning theorem can guarantee to have convergent 
outcomes under some cruel restrictions, for example, the reference trajectory must be 
piecewise continuous and differentiable, and further, the initial state error of each 
iteration must be zero. Many ILC analyses assumed that the initial states were 
identical to the reference trajectory for good tracking errors. However it’s difficult to 
set the initial state of the plant in practice. Recently, lots of studies discussed how to 
design robust controllers to against initial state error problem. Heinzinger [4] 
proposed a robust learning algorithm in 1992, and this paper theoretically proved that 
adopting this algorithm with fixed non-zero initial state errors can gain upper and 
lower bounded convergent outputs.  
The system studied in this paper is a single axis active scanning mirror system using 
two PZT actuators to connect to the scanning mirror with flexure structures. The 
reference trajectories are repeat periodic waves under non-stop repeat scanning 
demand, and because of this the error responses of each cycle are almost the same 
when we adopted general control method. By applying iterative learning control, the 
trajectory tracking error diverges over repeated iterations for situations with slow to 
fast scanning rates. The error is introduced by the uncontrolled initial condition at the 
beginning of each iteration. To overcome this difficulty, the paper introduces a no-rest 
switching iterative learning control. Simulation results show that it is possible to 
suppress the transient tracking error to achieve effective learning control.  
2. The novel optical mirror scanning system 
Figure 1 shows the architecture of the single axis novel optical mirror scanning 
system, two multilayer piezoelectric transducers (PZT) actuators “A”, “B” are stuck 
to flexure structures “a”, “b” of the scanning stage, the point in adopting flexure 
structures instead of revolute structures can eliminate the general connecting problems 
such as backlash, friction and lubrication. We chose multilayer PZT actuators as the 
driving sources owing to characteristics of the piezoelectric material like small size, 
light mass, fast response, high resolution and so on. Besides these properties, the most 
important advantage is that it can attain higher output displacements under lower 
actuating input voltages and it is a great help in raising the scanning speed and 
resolutions. 
3.869e005 + s 1171 + s
5.316e004 - s 13.43
8.162e006 + s 1015 + s
4.068e004 + s 12.77-)( 2211 +=sG      (1) 
4.814e005+ s 1383 + s
4.542e004 + s 13.71-
8.664e006 + s 976.3 + s
3.568e004 - s 13.19)( 2221 +=sG      (2) 
4.025e005 + s 1247 + s
4.364e004 + s 14.08-
8.419e006 + s 913.5 + s
3.303e004 - s 13.52)( 2212 +=sG      (3) 
3.938e005 + s 1242 + s
5.451e004 - s 11.6
8.222e006 + s 964.6 + s
4.364e004 + s 11.12-)( 2222 +=sG      (4) 
The transfer functions are then used as the bases for the servo controller design. 
4. ILC Theory 
 ILC system is regarded as a two dimension system because its control dynamic behaviors 
follow two independent directions, one is time and the other is the iterative item. The system actual 
motion reacts in time direction and the iterative item displays system learning numbers. As learning 
number increases the system response improves gradually. We use t to represent time and k to 
represent the iterative learning number after that learning error is defined in equation (5) where yk(t) 
means the system output at k iteration and yd(t) means the periodic system reference. The common 
and basic ILC algorithm is shown in equation (6) where uk(t) means the system input at k iteration, 
M and L can be constant gain or low pass filter for robust consideration. Figure 3 is a general ILC 
SISO close loop system and equation (7) is the output math description where 
)()(1
)()()(
qGqC
qGqCqTc +
=
is 
the initial close loop transfer function C(q) is the original controller, G(q) is the primary system 
transfer function and q is the time shift operator [10].  
)()()( tytyte kdk −=             (5) 
)]()()()[()(1 teqLtuqMtu kkk +=+           (6) 
)()()()()( tuqTctyqTcty kdk +=           (7) 
Now if we consider equations (5), (6) and (7), we can obtain equation (8) after some calculations, 
and then we can find equation (9) by replacing the iterative item in equation (8) recursively. It can 
be observed that M and L must be designed to satisfy the demand in equation (10) for the purpose 
of convergent error response. Furthermore, the error converges to a fixed weighting of system 
reference when k→∞, M ≠ 1 and the error converges to zero when k→∞, M = 1. 
)()]1([)()]1)(1[()( 1 teLTMtyTMte kcdck −−+−−=         (8) 
[ ] )()()( 01 tETItE kCK −−= l            (15) 
 
Figure 3: SISO system?ILC block simulation 
diagram 
 
Figure 4: SISO system?NRILC simulation 
block diagram 
5. The control design and simulation results 
Although we were not sure how to apply NRILC idea first proposed in [8] to real system nor aware 
restrictions of NRILC when we used it, but we still can utilize the derived ILC constrains in the 
former section to design ILC parameters M(m) and L( l ) for our system. First of all, we took the 
close loop transfer function Tc constructed from identified sub transfer function G11 and common 
PID controller C11 as an example to realize the frequency response of the constrain equation (10) 
using low pass filters with variable gain or corner frequency (fc). Figure 5 is the compare plot of 
choosing M as a unit gain, L as low pass filters with fixed gain and with different fc. It is observable 
that constrain equation (10) is satisfied at low frequency and the bigger fc is the better convergent 
result, but constrain equation (10) is not achieved at high frequency. It is a pity that larger fc may 
result in diverging instead of converging. Figure 6 is the compare plot of choosing M as a unit gain, 
L as low pass filters with fixed fc and different gains. The bigger gain is the superior convergent 
result at low frequency correspondingly. 
The SISO NRILC simulation model using sub-transfer function G11 and common PID controller 
C11 to build the close loop transfer function Tc is shown in Figure 4 where the real line enclosed 
parts “A”, “B” are used to model A/D and D/A functions. The dash line encircled part is the ILC 
controller including periodic iterative delay block C and low pass filter block D. 
 
Figure 5 Compare plot of the equation (10) 
using filter L with different fc and gain = 0.4 
 
 Figure 9: SISO system?NRSILC simulation 
block diagram 
  
Figure 10: SISO NRSILC error response of 
using filter L with gain = 0.4, fc = 10 Hz 
The simulation result of executing 1 Hz sine wave as system reference, M as an unit gain, L as low 
pass filters with fc = 10 Hz is shown in Figure 10. It is obvious that the designed NRSILC can not 
only let tracking error converge to zero effectively but also avoid high frequency vibrations. The 
simulation results in Figure 10 also verified the frequency responses of constrain equation (10) 
again.  
