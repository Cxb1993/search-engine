1中文摘要
藉由疊代函數系統及Collage定理的幫助，碎
形影像壓縮得以在相當高的壓縮比下去編碼一張
的影像，而其根據的前提為自然影像的自我相似
性。然而每一個值域方塊必須從龐大的定義域方
塊中找出最相似的一個，因此此編碼技巧需要花
費相當多的時間，使得它無法實現及時的應用。
在此計畫中，我將提出一個分類方法及兩個快速
搜尋方法來加速碎形影像的編碼速度。有別於傳
統方法在空間域的搜尋策略，這三種編碼方法被
設計在頻率域上去搜尋最佳匹配的解，而此頻率
域是一個由影像方塊的兩個DCT最低頻的係數所
構成的座標系統。藉著將所有的影像方塊映射到
此座標系統中，那些原本分散在整張影像各個不
同的地方但具有相似邊緣形狀的方塊將被集中在
一些特定的區域，因此藉由限制每一個值域方塊
在特定的區域執行最佳化搜尋，則編碼器被加速
的目的將能被達到。我們發現，將我們所提的三
種方法和全域搜尋方法相比較，在重建影像品質
相當不錯之下，碎形影像壓縮的編碼時間能夠實
質地被減少。
Abstract
With the help of Partitioned Iterated Function
System (PIFS) and Collage theorem, we can encode
an image by using the technique of fractal image
compression and achieve the high compression ratio.
The underlying premise of this coding scheme is
based on the self-similarity property of real life
images. However, it is time-consuming in the
encoding process since each range block must find
the most similar block from a large amount of blocks
which are called domain blocks. Such drawback
leads the real time applications to be impossible. In
this project, I will propose a classification method
and two fast search methods to speedup the fractal
encoder. The three methods search for the best
matched solution in the frequency domain. The
frequency domain is a coordinate system composed
of two lowest discrete cosine transformation (DCT)
coefficients of image blocks. By mapping the image
blocks into the coordinate system, image blocks with
similar edge shapes will concentrate in some
specific regions. Therefore the purpose of speedup
can be reached by limiting the search space. We find
that, compared the proposed three methods with the
full search method, the encoding time for fractal
image compression can be reduced substantially
while the retrieved image quality is relatively
acceptable.
Keywords: Fractal Image Compression;
Frequency Domain; Classification Method; Phase
Angle Span Search; Neighborhood Region Search.
一、前言
Fractal image compression was first proposed in
1985 by Barnsley originated from Iterated Function
System (IFS) [1]. The practical coding algorithm
has not realized until 1992 by Jacquin [2]. The
underlying idea of the coding scheme is based on the
Partitioned Iteration Function System (PIFS) which
utilized the self-similarity characteristic in a nature
image to achieve the purpose of compression [3, 4].
The encoding process of the fractal image
compression is very time-consuming. The reason
is that most of the encoding time is spent on a large
amount of computations of similarity measure in
order to find the best matched domain block for each
range block. Hence the main research direction for
fractal image compression is focused on how to
reduce the encoding time. Many encoding
techniques were presented by the researchers to
speedup the fractal encoder. These techniques
include classification techniques [5-7], quad-tree
technique [8-10], and evolutionary computation
technique [11, 12] etc.. Besides, the idea of the
spatial correlation was also added in the fractal
encoding algorithm to reduce the search space.
Truong et al. [13] limit the search space for the
current range block on the neighborhoods of the
matched domain blocks of the neighboring range
blocks by utilizing the spatial correlations between
neighboring blocks in both the domain pool and the
range pool. In comparison to the full search
method, the algorithm achieves 2.6 times speedup
ratio and obtains good retrieved image quality. Wu
et al. [14] propose a spatial correlation genetic
algorithm (SC-GA) to speed up the encoder. By
the spirit of spatial correlations stated in [13], the
SC-GA method for the current range block executes
GA evolutionary process on the neighborhoods of
the matched domain blocks of the neighboring range
blocks. Experimental result shows that the
encoding time of the SC-GA method is 1.5 times
faster than that of traditional GA method under the
premise of maintaining same retrieved image quality.
For the two methods above, the search process of the
best matched solution is executed on the spatial
domain.
二、研究目的
In this paper, a classification method and two fast
search methods: phase angle span search method
and neighborhood region search method are
proposed to speedup the fractal encoder. The three
31616 . For each range block v from the R, the
fractal affine transformation is constructed by
searching all of the domain blocks in the D to find
the most similar one and the parameters representing
the fractal affine transformation will form the fractal
compression code of v.
To execute the similarity measure between range
block and domain block, the size of the domain
block must be first sub-sampled to 88 such that
its size is the same as v. Let u denote a
sub-sampled domain block. The similarity of two
image blocks u and v of size nn is measured by
mean square error (MSE) defined as








1
0
1
0
2)),(),((
1
),(
n
j
n
i
jivjiu
nn
vuMSE (1)
Fig. 1. The diagram of eight transformations in the
Dihedral group.
The fractal affine transformation allows the eight
transformations of the domain block u in the
Dihedral. The eight transformations
7,,1,0: kTk can be expressed by the matrices
in Table 1, in which the origin of u is assumed to
locate at the center of the block. By the eight
transformation, eight transformed blocks are
generated and denoted by 7,,1,0: kuk ,
respectively, where 0u is equal to the original
sub-sampled domain block u. Fig. 1 lists the
diagram of the eight Dihedral transformations. 0T
picks the origin block u. 1T and 2T are the flip of
u with respect to horizontal and vertical lines,
respectively. 3T is the flip of u with respect to
both horizontal and vertical lines. 4T , 5T , 6T , and
7T are the transformations which flip the 0u , 1u ,
2u , and 3u along the main diagonal line xy ,
respectively. Thus for a given block from the range
pool, there are 648,464858081  MSE
computations must be done in order to obtain the
most similar block from the domain pool. Thus, in
total, one needs 552,799,475648,4641024 
MSE computations to encode the whole image
using this full search compression method.
The fractal affine transformation also allows the
contrast scaling p and the brightness offset q on the
transformed blocks. Thus the fractal affine
transformation  of ),( yxu can be expressed as










































q
t
t
yxu
y
x
p
aa
aa
yxu
y
x
y
x
),(00
0
0
),(
2221
1211
 ,
where the sub-matrix 



2221
1211
aa
aa
represents the
one of eight Dihedral transformations in Table 1 and
),( yx tt is the coordinate of the domain block.
Thus the similarity is to minimize the quantity
vqupd k  . Here, p and q can be
computed directly by
]1,,[
]1,1,,[
2
 

kkk
kk
uuuN
vuvuN
p ,
]1,1,[
1 

kupvN
q ,
where N is the number of pixels of the range block
and T]111[1 

 .
Finally, as u runs over all the 58081 blocks in the
domain pool, a set of parameters xt , yt , p , q ,
and k are obtained and constitute the fractal
compression code of v . For 256256 image,
both xt and yt require 8 and 8 bits, respectively,
to represent the position of the domain block. For
contrast p, brightness q, and the Dihedral
transformation k , 5, 7 and 3 bits are required,
respectively. Hence one needs 31 bits in total to
encode a range block. Finally, as v runs over all
1024 blocks in the range pool, the encoding process
is completed.
To decode, one first makes up the 1024 affine
transformations from the compression codes. Next,
one chooses any initial image and performs the 1024
affine transformations on the image to obtain a new
image. The transformation is proceeded
recursively according to Contractive Mapping
Fixed-Point Theorem and Collage Theorem until the
sequence of images converges to encoded image
[15]. The stopping criterion of the recursion is
designed according to user’s application and the
final image is the retrieved image of fractal coding.
T0 T1 T2 T3
T4 T5 T6 T7
5sF )1,0( are small, the block f tends to have no
clear textures. Such blocks having smooth
landscapes will be classified as smooth type,
denoted as S type. For blocks in which both
sF )0,1( and sF )1,0( are large will be classified
as high activity type denoted as D type.
According to the statement above, we properly
partition the search space into three regions: S type
region, H type region, and D type region as
illustrated in Fig. 3. The thresholds
1H
T and
2H
T
are used to partition H type region and non-H type
region. As the Dihedral transformations
7,,5,4: kTk are considered, which are the
flips of 3,,1,0: kfk along the main diagonal
line xy , the H type region is composed of the
two regions. One is the region surrounded by the
unit circle, 0 , and
1H
T , and the other is the
region surrounded by the unit circle,
2H
T , and
90 . An image block f is classified to H type if
it locates on the H type region. Further, for non-H
type region, a threshold with radius ST is used to
partition it into S type region and D type region.
The region surrounded by the circle with radius ST ,
1H
T , and
2H
T will form the S type region.
The rest is the D type region.
Fig. 3. The partition of search space for proposed
classification method.
To determine the thresholds
1H
T ,
2H
T , and ST ,
we partition the range pool such that each class
consists of roughly equal number of members.
First, two threshold angles
1H
T and
2H
T in Fig. 3
are determined which includes about one third of the
range blocks. Then, we partition the rest into two
regions of equal number of elements according to
the distance from the origin. In the computation,
we define, for each range block v in Fig. 3, the line
 in the first quadrant, which is calculated by
)|)0,1(|/|)1,0((|tan 1 ss FF
 where 0|)0,1(| sF .
The classification step in detail for the image
blocks is stated as follows:
1. For all of the range and domain blocks, calculate
the )0,1(F and )1,0(F from (4) and (5),
respectively, and constitute their DCT absolute
coefficient pair |))1,0(||,)0,1((| FF .
2. Find the scaled DCT absolute coefficient pair
)|)1,0(|,|)0,1((| SS FF .
3. For each the range blocks, calculate the value
}90,min{ˆ    . Rank all of the ˆ.
Define
1H
T as the angle such that the region
includes one third of range blocks. Define
2H
T
as the
1
90 HT . The elements in this region are
referred to as the H type.
4. For the rest, calculate the distance from the origin
and rank them accordingly. Define ST such
that the first half blocks belongs to this region
denoted as S type. The remaining ones are of D
type.
Once the partition of coordinate system is
completed, the fractal coding will be invoked. For
each range block, the search process of best matched
solution is executed only in the region, to which the
range block belongs, to reduce the amount of MSE
computations.
4.2. The Phase Angle Span Search Method
Since the DCT operation is linear, for any two
blocks u and v such that vu  for some
constant  then u and v must locate on the same
ray from the origin. In other words, these two
blocks and the blocks near this ray will have similar
edge features. Therefore, for each range block, a
good candidate match will exist in the neighboring
region of this ray.
Based on the argument above, a search strategy
of phase angle span is presented to reduce the search
space. For each range block jv in Fig. 4, the line
j in the first quadrant is calculated by
)|)0,1(|/|)1,0((|tan 1 ssj FF
 where
0|)0,1(| sF . Then, a search space 1 is built
by taking j as the center and spanning a
phase angle  toward two sides. In addition,
one takes the line 45 as the symmetry axis.
7otherwise let   2 and 1.0 cc ,
back to Step 5.
7. Find the best matched domain block from the
search spaces 1 and 2 . Record the fractal
code of jv .
五、結果與討論
The three proposed search strategies on the
frequency domain for fractal image compression are
simulated to verify their performances. The tested
images are Lena, Pepper, F-16, and Baboon. The
image size is 256256 and the size of range block
is 88 . The simulation programs implemented by
using Borland C++ Builder v. 6.0 are run on a
Pentium Core2 Duo 2.0GHz, 1G RAM, windows
XP PC. The quality measurement of the retrieved
image ),( jig is Peak Signal to Noise Ratio (PSNR)
defined as
)
),(MSE
255
(log10
2
10 gf
nm
PSNR

where nm denotes the image size and ),( jif is
the original image.
5.1. Proposed Classification Method
Three threshold values
1H
T ,
2H
T , and ST are
obtained in order to equally partition the overall
search space into three regions, which are H type, S
type, and D type region. For an image of size
256256 and the range block of size 88 , the
number of range block is 1024, thus the expected
number of range blocks of the three types are 342,
341, and 341, respectively. Under this requirement,
the three thresholds are calculated as 11.33 ,
.6787 , and 0.0754, respectively, from the range
blocks for Lena. With these thresholds, the numbers
of the domain blocks in the three types are 19223,
11852, and 27006, respectively. Table 2 lists
additional results for Pepper, F16, and Baboon.
The encoding performances are listed in Table 3.
For Lena, the amount of MSE computations is
reduced about 3 times and in our experiments, we
also improve the encoding speed about 3.00 times
since only very little overhead is required in our
algorithm. This results coincide to the propose
method which partition the search space into 3
classes of roughly the same amount of elements.
Moreover, there is only about 0.1 dB decay of image
quality compared to the full search method. The
comparative results of proposed classification
method on the 4 images are shown in Table 3.
5.2. Phase Angle Span Search and Neighborhood
Region Search Methods
The performances of phase angle span search
and neighborhood region search methods are
verified in this section. The tested image is Lena.
Fig. 6 shows the relation of PSNR of retrieved
image versus  for phase angle span search
method. The figure reveals that, at the beginning of
1.0 , the PSNR is 27.02 dB. When 
increases, the image quality also increases
accordingly. However, the amount of MSE
computations is also increasing and so is the
Table 2. Three threshold values and the number of domain blocks in the three partitioned regions for the
proposed classification method.
1H
T
2H
T ST
Number of
H type
Number of S
type
Number of D
type
Lena 11.33 78.67 0.0754 19223 11852 27006
Pepper 12.49 77.51 0.0927 19276 12818 25987
F16 12.23 77.77 0.0459 18782 14924 24375
Baboon 13.01 76.99 0.1382 20350 14759 22972
Table 3. The comparison of proposed classification method with full search method.
Full search method Proposed classification method
PSNR
(dB)
MSE
computations
Time
(sec)
PSNR
(dB)
MSE
computations
Time
(sec)
Speedup
ratio
MSEs
ratio
Lena 28.91 475,799,552 2047.30 28.81 158,598,752 683.41 3.00 3.0
Pepper 29.84 475,799,552 2046.73 29.69 158,652,968 684.24 2.99 3.0
F16 25.24 475,799,552 2050.28 25.07 158,595,072 683.78 3.00 3.0
Baboon 20.15 475,799,552 2047.75 20.10 158,607,768 683.47 3.00 3.0
9(a) (b)
Fig. 10.
(a). Original image, Lena of size 256256 .
(b). Proposed classification method, MSE
computations =158,598,752, PSNR=28.81, Time
=683.41 sec.
(c). Phase angle span search method, 68.0 ,
(c) (d)
MSE computations=7,592,768, PSNR= 27.92,
Time=34.98 sec.
(d). Neighborhood region search method, 5.1 ,
54.0c , MSE computations=4,691,464, PSNR
=27.91, Time=22.33 sec.
Table 4. PSNR, MSE computations, encoding time, and speedup ratio for various  and c for
neighborhood region search method; the tested image is Lena.
Table 5. The comparison of full search, classification method, phase angle span search, and neighborhood
region search methods.
Hint: PASS: phase angle span search method
NRS: neighborhood region search method
99 年度專題研究計畫研究成果彙整表 
計畫主持人：吳敏生 計畫編號：99-2221-E-230-018- 
計畫名稱：關於碎形影像壓縮的一些快速搜尋方法之研究 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 1 1 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 1 1 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 1 1 80%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
