 2
???? 
 
????(spatial data)??????????????????/??(CAD/CAM)??
????(Multi-media data)?????????(GIS)????????????????
???????k-d tree?quadtree?R-tree?TV-tree?VA-file?????? R-tree????
?????????????????????(operation)???(insertion)???(deletion)?
??(update)???(search)????????????????????????????
????????(nearest object searching)???????(spatial join)?????????
???????????????????????????????????????
?(data space coordination)????????????????????????????
??????????????(overlap)????(include)??????????????
??????? 
?????????????????????????????????????
???????????????????????????????????????
???????????(concurrency control)????????????????????
???????????????????????????????????????
???????????????????????????????????????
???????(simulation system)????????????????????????
?????????? 
??????????????????????? 
 
Abstract 
 
Spatial data is widely applied in many areas such as CAD/CAM, Multimedia System, 
Geographic Information System, etc. There are several data structures to be able to process 
spatial data such as k-d tree, quadtree, R-tree, TV-tree, VA-file, etc. Among them, the R-tree 
families are the most popular ones. Traditionally, there are some basic access operations to access 
spatial data such as insertion, deletion, update, searching. As the widely applications of spatial 
data, some special operations have been required such as nearest object searching operation, 
spatial join operation. The function of spatial join operation is described as following. Suppose 
that there are two databases containing two different types of spatial data. If the data space 
coordination of the two databases overlap and any two spatial objects, which belong to different 
databases, have a special relation (for example, overlapping or inclusion), then the two objects 
will be selected from databases for some applications. 
There are several papers discussing the techniques and methods about spatial data. However, 
these methods are all designed for single user environments. They are not suitable for the 
databases of multi-user environments in big enterprises or organizations. Therefore, it is 
necessary to support the spatial join operation algorithm with concurrency control mechanism in 
order to access correct data. The project analyzes the techniques, features, and process of the four 
 4
????(3)??????????????????????????????????
???????????????????????????????????????
?????????????????????????????????? R-tree ??
???(node split)????????????????????????????????
???????????????????????????????????????
????????????????????? R-tree??? underflow????????
???????????????????????????????????????
??/???????????(algorithm)?????????[4, 11, 12, 22, 23, 24, 27, 31, 
32, 33, 35]???????????????????????????????????
???????????????????????????????????????
??????????????????????(lost update)?????(dirty read)???
???(incorrect summary)????????????????????????????
???????????????????????????????????????
???????????????????????????????????????
???????????????????????????????????????
?????????????????????????(concurrency control)?????
???????????????????????[8, 9, 10, 11, 12, 13]????????
?????????????????????????? 
???????????????????????[4, 22, 23, 24, 27, 31, 32, 33, 35]???
????????????????????????????????? 
?????????????????????????[11, 12, 18]????????
?????????????????????????????? 
?????????????????????????[12, 18]??????????
???????????????????????????? 
 
???? 
 
????????????????????????????? Spatial-Merge Join 
[37]???? R-tree?????????????? Brinkhoff, Kriegel, and Seeger????
???[4]????[4]????????????????????? Restricting the Search 
Space? Plane Sweep?????????????????????? Local Optimization
???Hung, Jing, and Rundesteiner [22, 23, 24]?????????????BFRJ (Breadth 
First R-tree Join)????? index tables??? IJI (intermediate join index)???????
Global Optimization???Koudas [27]?Lo and Ravishankar [31, 32]?Mamoulis and Papadias 
[33]?Martynov [35]??????????[4]?????????? Depth-first search??
?? Breadth-first search????????????????????????[11, 12, 18]?
??????????????????????[18]????????????????
????????????????? R-tree ?????????????? MBR ??
??????????????[11, 12]??????????????????????
????????? R-tree?????????????????MBR????????
 6
 
Figure 3. One map overlaps the other map. 
???????????????????Brinkhoff, Kriegel, and Seeger [4]?? Restricting 
the Search Space????????? R???????? S?????????????
??? overlap??????? R? S?????? overlap?????????????
???????? overlap???? overlap ????????????????????
??? index trees????????????????????? Plane Sweep?????
????? R ? S ??????????????????????????(???x
?? y????? x???)?????????????????low value? high value?
??? 4?????? x?????????????????? low value??????
high value????? x?????????????????????????????
?????? x????(?? low value??? high value)?????????? overlap?
?????????????????? index trees????? overlap????????
??????????Hung, Jing, and Rundesteiner [22, 23, 24]?????? Breadth-First 
Search????????? index trees???????????level by level????? index 
tree????????????? index trees? overlap??? nodes????? leaf nodes?
????? leaf nodes??????? overlap?????????????? index trees
????????? 
??????????????????????????? Hung, Jing, and 
Rundesteiner [22, 23, 24]????????? shared lock??? lock-coupling??????
?????????????????????? dynamic ?????????????
??????????? insertion?deletion? updating operations?? conflicts? dead-lock
??????????????????????????????? 
 
Algorithm Spatial-join(R, S) 
// Give two R-trees R and S, find some pairs of objects in R and S, respectively, 
 where each pair of objects has an overlap condition. // 
Input: two R-trees R and S 
Output: some pairs of overlap objects 
Begin 
SJQ: a queue of OPN; 
Current: a pointer of OPN; 
  reset SJQ;  share-lock(R);  share-lock(S);  
add-queue(R, 0, S, 0, SJQ); 
  While SJQ is not empty, do 
    Current ← get-queue(SJQ); 
 8
???????????(1)?????????????????(2)?????????
???????????(3)???????????????????(4)???????
????????????(5)????????????????????(6)?????
???????????????????????????????????????
???????????????????????????????????????
???????????????????????????????????????
?????????????????????????/??????????????
???????????????????????????????????????
???????????????????????????????????????
?????????? 
 
???? 
 
[1]   W. D. Bae, S. Alkobaisi, S.T. Leutenegger, "An incremental refining spatial join algorithm 
for estimating query results in GIS," Lecture Notes in Computer Science 4080 LNCS, pp. 
935-944, 2006. 
[2]   S. Berchtold, D.A. Keim and H.P. Krigrel, “The X-tree: an index structure for 
high-dimensional data,” in: Proc. 22nd Int. Conf. on VLDB, pp.28-39, September, 1996. 
[3]   N. Beckmann, H.P. Kriegel, R. Schneider, and B. Seeger, “The R* -Tree: An efficient and 
robust access method for points and rectangles,” in: Proc. ACM SIGMOD Int. Conf. on 
Management of Data, pp.322-332, May, 1990. 
[4]   T. Brinkhoff, H.P. Kriegel and B. Seeger, “Efficient processing of spatial joins using 
R-trees,” in: Proc. ACM SIGMOD Int. Conf. on Management of Data, pp.237-246, 1993. 
[5]  R. Bayer and M. Schkolnick, “Concurrency of operations on B-tree,” Acta Informatica, vol. 
9, pp. 1-21, 1977. 
[6]   A. Biliris, “Operation-specific locking in balanced structures,” Information Science, vol. 
48, pp. 27-51, 1989. 
[7]   J. L. Bentley, “Multidimensional binary search trees used for associative searching,” 
Communications of the ACM, vol. 18, p.p.509-517, September, 1975. 
[8]   J. K. Chen, "Concurrency Control of Spatial Join on Spatial Database," proceedings of the 
4th Annual International Conference on Computer and Information Science (ICIS 2005), 
July 14-16, Jeju Island, South Korea, Session 4B, pp.693-697, 2005.. 
[9]   J. K. Chen and Y. H. Chin, “R-tree with Concurrency Control Property: Performance 
Evaluation,” in Proc. Natl. Sci. Counc., pp. 636-641, March, 1998. 
[10]  J. K. Chen and Y. H. Chin, “A Concurrency Control Algorithm for Nearest Neighbor 
 10
May, 1997. 
[27]  N. Koudas, "Indexing support for spatial joins," Data and Knowledge Engineering 34 (2), 
pp. 99-124, 2000. 
[28]  M.-J. Lee, W.-S. Han and K.-Y. Whang, "Transformation-based spatial partition join," 
Computer Systems Science and Engineering 19 (6), pp. 355-362, 2004. 
[29]  K. I. Lin, H. V. Jagadish and C. Faloutsos, “The TV-tree -- an index structure for 
high-dimensional data,” VLDB J. vol. 3, p.p.517-548, October ,1994. 
[30]  Y. Liu, Z. Y. Zhu, S. J. Shi, "Spatial join query based orthogonal polygons approximation," 
Shanghai Jiaotong Daxue Xuebao/Journal of Shanghai Jiaotong University 35 (2), pp. 
279-282, 2001. 
[31]  M. L. Lo and C. V. Ravishankar, “Spatial Joins Using Seeded Trees, ” in: Proc. ACM 
SIGMOD Int. Conf. on Management of Data, pp.209-220, May, 1994. 
[32]  M. L. Lo and C. V. Ravishankar, “The Design and Implementation of Seeded Trees: 
Efficient Method for Spatial Joins,” IEEE Trans. on Knowledge and Data Engineering, Vol. 
10, pp.136-151, 1998. 
[33]  N. Mamoulis and D. Papadias, "Slot index spatial join," IEEE Transactions on Knowledge 
and Data Engineering 15 (1), pp. 211-231, 2003. 
[34]  Y. Manolopoulos, E. Nardelli, A. Papadopoulos, G. Proietti, "Mof-tree: A spatial access 
method to manipulate multiple overlapping features," Information Systems 22 (8), pp. 
465-481, 1997. 
[35]  M. G. Martynov, “Spatial joins and R-trees,” in Proc. Int. Conf. Workshop on Advances in 
Database and Information Systems, pp.160-164, June, 1995. 
[36]  D. Papadias, N. Mamoulis and Y. Theodoridis, "Processing and optimization of multiway 
spatial joins using R-trees," in proceedings of the ACM SIGACT-SIGMOD-SIGART 
Symposium on Principles of Database Systems, pp. 44-55, 1999. 
[37]  J. M. Patel and D. J. DeWitt, “Partition Based Spatial-Merge Join,” in: Proc. ACM 
SIGMOD Int. Conf. on Management of Data, pp.259-270, 1996. 
[38]  G. Proietti and C. Faloutsos, "Analysis of range queries and self-spatial join queries on real 
region datasets stored using an R-tree," IEEE Transactions on Knowledge and Data 
Engineering 12 (5), pp. 751-762, 2000 
[39]  T. Sellis, N. Roussopoulos and C. Faloutsos, “The R+ -tree: A Dynamic Index for 
Multi-Dimensional Objects,” in: Proc. 13th Int. Conf. on VLDB, pp.507-518, 1987. 
[40]  X. Tan and X. Feng, "R-tree spatial join algorithm based on the breath-first paradigm," 
Huazhong Keji Daxue Xuebao (Ziran Kexue Ban)/Journal of Huazhong University of 
Science and Technology (Natural Science Edition) 33 (4), pp. 79-82, 2005. 
[41]  D. A. White and R. Jain, “Similarity indexing with the SS-tree,” in: Proc. 12th IEEE Int. 
Conf. on Data Engin., pp.516-523, February,1996. 
[42]  R. Weber, H. Schek and H. Blott, “A quantitative analysis and performance study for 
similarity-search methods in high-dimensional spaces,” in: Proc. 24th Int. Conf. on VLDB, 
pp.194-205, 1998. 
