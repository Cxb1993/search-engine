development and execution of software applications 
for enterprise cloud computing. 
The middleware provides an easy, cost-effective, and 
secure way to access services from cloud environment, 
which may involve distributed cluster systems, the 
application software, and platforms to the end users.
The purpose of the middleware for cloud computing is 
to provide complete transparency of the underlying 
technology and the surrounding environment.The 
Service Oriented Architecture (SOA) extends 
component-based approach to achieve distributed 
processing, easy to manage, and to reduce complexity, 
it can easily integrate and monitor the system 
devices and their environment, so that it can provide 
an effective and needed service to end users. Not 
only middleware supports the software execution in 
complex cloud computing environment, but also it 
should facilitate the development of application 
software by offering various capabilities.  
 
英文關鍵詞： Middleware, SOA, Framework, Transparency 
 
 1 
中文摘要： 
本計畫的主要目的是在設計與發展中介層之相關技術，並且能夠提供企業進行支援開
發過程與執行應用軟件，建立企業雲計算服務平台。雲端中介層主要用於提供易於管理、
降低複雜度，能容易的整合、監控目前系統/裝置所處環境，其中並包含了分佈式集中系
統，以及應用軟體與服務平台的最終服務。  
本計畫所設計與發展中介層之相關技術，建構部屬互通的技術周圍環境，支援在具安
全性的服務導向架構（SOA）中發展元件化的方式來實現分佈式處理，提供易於管理，與
降低系統複雜性，本計畫將發展可快速集中與監控系統設備和環境，因此可以提供一個有
效的和必要的服務，透過中介軟體串接－提供運算與資源的底層叢集系統、提供應用軟體
的平台架構和要求服務的用戶端使用者。 
SOA 中介層包含以下幾個特點:  
1) 一致性的發展環境。中介層必須提供軟體一個一致且共同的內容表示方式，使應用程
式不需要受限於它自己的特殊語言、作業系統或環境。  
2) 硬體與平台獨立介面。中介層必須幫助開發者能將其心力著重於發展應用系統的功能
性，而不需要花心力於硬體的特殊需求。  
3) 內容感知行為。在服務導向架構中，管理系統必須要以目前所要傳送的資料內容提供
來決定其所要採取的動作，這種動作必須能考慮到環境的特性，自動的改變內容或執
行其他任何動作，以將其他裝置傳遞的交換訊息以合適的型態傳遞給使用者。中介層
必須明確地定義內容感知行為，以便向應用程式提供這種特性。  
4) 網路通訊的透通性支援。中介層必須能將應用程式對於異質通訊的運作方式抽象化，
讓應用程式容易地互動，而無須考慮網路型態的複雜性。像是無論什麼時候發現可用
的裝置時，中介層必須發現新裝置或新服務的加入，建立新的通訊連線及通知應用
層。  
5) 安全機制的透通性。中介層必須提供安全機制，以幫助軟體發展者快速地開發具有安
全機制可以在具安全性服務導向架構中執行的應用系統。  
在本計畫中，一個可以支援上述中介層特性的軟體開發框架雛形將被設計與實作，以
驗證與實現上述特性。  
關鍵字：中介層、SOA、Middleware、框架、透通性 
 
 3 
 
目錄 
一、 研究目的 ................................................ 4 
二、 結果與討論 .............................................. 7 
三、 計畫成果自評 ........................................... 11 
附錄一、已發表之相關論文 .................................... 12 
 
 5 
在雲端運作的虛擬機器，定義不同服務如何合作的標準應有其價值。因應企業雲所需的更
嚴緊的管理制度，以符合包含企業檔案資訊電子化後，所需考量的包含有檔案傳輸過程的
資訊安全，以及應用服務系統 API 元件管理等，因此 Middleware 於雲端服務中，可協助
在雲端上層的服務與下層系統部份透過嚴密的管控服務架構，建立可靠的雲端服務架構，
用以符合企業雲所需要的資料安全性。  
在企業內部標準取決於互通性、可審核性、安全與管理等要求，並以企業及雲端之間
的標準為基礎，企業會與私有雲、公用雲、混合雲互動。因此，建立雲端運算解決方案的
主要機制，即為雲端供應者所提供的 API，雲端 API 運作分為四個層次如：網絡、特定語
言工具、特定服務工具以及非特定服務工具等。其中可細分為五種主要基本類別如：一般
程式設計、系統發佈與部署、雲端服務映像檔管理與基礎架構管理以及內部介面等。  
雲端運算中除了應用層（SaaS），為雲上應用軟體的集合，這些應用建構在基礎設施
層提供的資源，以及平台層提供的環境之上，並透過網路交付給使用者。而在串連雲端服
務底層 IaaS 與 SaaS 中間，尚需要提供能間接兩層之間的資源溝通與資料交換的服務，由
於在雲端系統中，我們所預期希望能提供客戶端進行服務操作時，可減少操作上的困難
度，因此如何有效提供服務層與系統資源的串連，系統減少操作者的使用流程，則是在平
台層（PaaS）所需要提供的重要角色。在中介層存在的目的在於提供的雲端系統在開發、
運行、管理和監控的環境的串聯。因此可簡單本計畫所探的與研究的項目「模型導向企業
雲中介軟體設計與實作—MEC-ME」，主要在於滿足雲端擴充性、可用性和安全性等方面
之要求。本計畫將透過雲端服務架構中，掌握中介層對於系統架構與軟體發展元件部份進
行研究與管理，預期將可提升台灣雲端產業發展掌控核心技術的重要關鍵。  
企業雲端管理服務模式為建立動態雲端管理平台，雲端服務簡單區分成三大模式，分
別為架構即服務(IaaS，Infrastructure as a Service)、平台即服務(PaaS，Platform as a Service)
與軟體即服務(SaaS，Software as a Service)；在總計畫中，我們期望建構出 IaaS 與 PaaS 兩
層，利用一個完善的平台供國內的中小企業能透過本平台進行開發、執行、測詴，將傳統
In-House 的開發工作轉變至外部網路平台，提供軟體開發所需的 APIs 與資料庫，可直接
在網路平台上開發、測詴，達成中介層 Middleware 所產生的服務管理模式概念。  
本計畫針對雲端服務中介軟體  Middleware 訂定研究計畫目標，雲端運算 (cloud 
computing)是一種在「網雲基礎架構」之上加上雲端應用平台、運算、儲存等中介層，藉
此提供的雲端服務可由成千上萬的用戶端存取。其中間所有的協定，本計畫將透過開放式
原始碼與共用性 W3C 所制訂的規格為主，如 HTTP，XML 等。設計滿足企業用戶所需的
 7 
VM重分配基因演算法
開始
取得實體機器與
虛擬機器資訊
初始化
決定切點 交配
是否執行
交配運算？
產
生
下
一
代
突變
是否執行
突變運算？
是否達終止條
件？
Y
N
Y
N
N
結束
Y
依搜尋結果重新佈署
虛擬機器
菁英挑選
二、 結果與討論 
本計畫設計與實作一個雲端系統中所需要的中介軟體，可以有效率的管理與分配環境
中實體機器叢集與虛擬機器（VM）之間最佳化的部署方式，提出一個以基因演算法為基
礎，調整了一般用於分群問題的染色體編碼方式，降低其運算時的時間複雜度，使其更適
合應用在雲端環境中；透過事先的分析，掌握虛擬機器的資料分布，簡化運算時的迴圈數
量；並考慮最小化實體機器的數量時虛擬機器在各實體機器間傳輸的搬移成本、以及在使
用者需求與服務層級協議對於服務品質的限制下，動態地改變虛擬機器的分配方式，以達
到更佳的能源使用效率。 
                                                          圖 1 
透過雲端中心取得後端實體機器與虛擬機器的資訊如負載狀況，以及虛擬機器之資訊
如 CPU 使用率、記憶體使用率、佔用空間的大小等，這些資訊將被用來作為之後 K-means
演算法與基因演算法運行的依據。 
 9 
圖 2 為以不同 VM 數量在實體機器為 30 臺的情形下之演化世代數量的變化，每種可能皆
以亂數產生參數後進行 100 次的基因演算取得最佳解後之平均值，由圖中可以發現，在相
同規模的問題下，族群數越大，可以讓演化世代數降低，但是減少的量會越趨平緩；而在
不同規模的問題之間，趨於平緩的程度也不致相同。舉例來說，如果固定族群數為 100，
則規模為 50 臺 VM 時找到最佳解的演化世代數大約在 380；規模為 100 臺、150 臺、200
臺與 250 臺 VM 時則分別為 480、620、790 與 830 左右，其結果都不是最好的，且都有族
群數越大，演化世代數越少的趨勢。 
圖 3 
若以搜尋時間來看，如圖 2 與圖 3 做個比較可以發現，在族群數很小的時候，基因演
算法的搜尋廣度不夠寬，在問題規模小時較看不出差異，但問題規模越大，越顯得物種多
樣性不足，導致基因演算法需要演化更多世代才可能找到最佳解，個別來看時，有時很快
就可以找到，有時卻又需要很長時間的演化才能找到，非常極端，由圖中可知，對於平均
而言更花時間，且對於結果來說，有非常大的不確定性；而族群數越大，基因演算法的搜
尋廣度越廣，迴圈數量的增加會導致搜尋時間延長。 
近幾年的研究中，在雲端資源使用效率的議題上，大多是以優化虛擬機器 (Virtual 
Machine,VM)的配置方式達到各實體機器的負載平衡(Load Balancing)。然而，對實體機器
做負載平衡不一定能以最少的能源消耗完成工作，例如以 CPU 在閒置(Idle)時的消耗功率
 11 
 
三、 計畫成果自評 
在未來的挑戰中，由於各種類型的服務所需時間不一，例如以 PaaS 的服務來說可能
是讓使用者能夠使用提供的雲端平台進行程式的編寫與發佈等、單純提供運算能力的 IaaS
或是提供軟體給使用者使用的 SaaS 服務在 VM 的使用時間皆不相同，若是將他們混在同
一臺實體機器中，會導致某些資源的長久佔用而產生浪費。若是能夠預先知道該 VM 是開
啟何種類型服務，進行使用時間的估算，加上排程的概念，使得使用時間少的類型盡可能
分配至同一臺實體機器，在它們完成工作而閒置後，可以一併關閉，達到簡化實體機器的
效果，並可省去多餘的 VM 搬移成本。 
 
 
 
 
 
 
 
 
 
 
再者，由於將來雲端的環境勢必會越做越大，實體機器動輒百台、千台甚至更多，處
理的服務與動用的虛擬機器將會更多得驚人，在這麼大的規模下，好好安排 VM 的配置是
絕對必要的，但是更大的規模也意味著運算量將大幅度地上升，如圖 4，能源的消耗主要
來自搜尋時間的長短，當規模越大，基因演算法搜尋的深度就為越深，尋找解的時間便會
拉長，會導致能源消耗的量大幅上升，並可能在搜尋尚未完成時，VM 的增減已經使得整
體配置方式欠優良而造成不必要的能源浪費，因此可以考慮將基因演算法的各族群進行切
割，大幅減少運算時間以減少能源消耗。 
圖 4 
 出席國際學術會議心得報告 
                                                             
出國人員姓名 
服務機關及職稱 
資訊工程學系 朱正忠教授 
會議時間地點 July 16-20, 2012 Izmir, Turkey 
會議名稱 
The 36
th
 Annual IEEE Computer Software and Applications Conference 
(COMPSAC 2012) 
 
一、參加會議經過 
 
    此會議Computer Software and Applications Conference是在電腦軟體及應用科學具領導地位
的國際會議，討論的領域以軟體技術與應用為主也包括程式開發、分析、改進、測試與需求等。
今年會議舉辦地點是土耳其伊茲密爾，本次主要任務為擔任會議之 Steering Committee, Program 
Committee, Session Chair以及 plenary panel invited speaker，與會的學者都是世界上頂尖的專家，
主要與會學者如 Fevzi Belli, Elisa Bertino, (General Chair) Xiaoying Bai, Atilla Elci, Mohammad 
Zulkernine(Program Chairs)等知名學者。本次研討會的主題是 Trustworthy Software Systems for 
the Digital Society，但也包含熱門的網路安全監控、雲端計算等熱門議題，在會議的第一天的
workshop 與第三天下午的 Panel 中，也探討未來軟體技術的發展與雲端技術應用的發展趨勢，
從中獲取不少心得。 
 
二、與會心得 
 
這次參加研討會共發表兩篇論文： A Methodology for Building Effective Test Models with 
Function Nets, The Development of Cloud Computing and Its Challenges for Taiwan 以及擔任一場
雲端計算的論文發表場次主持人(track co-chair for cloud computing)，這次會議最大的收穫是與
眾多學者一起討論、交流專案計畫的心得，未來有機會也許可以與國外研究團隊合作；在會場
與許多專家學者討論到個人最近在做的關於雲端中介軟體方面的研究，各國學者皆對於我們的
研究非常有興趣，與這些專家學者做了一些深入的討論，這學者們也認同我們在此領域的研究
是有其必要性，也是目前正熱門的議題，透過交流的過程瞭解這些專家學者所做的相關研究議
題與目前遇到的瓶頸，對我們的往後的研究上有莫大的幫助。 
 
 
 
 
 
 
 
 
 
 
    Originality : Accept 
   Quality : Accept 
   Relevance : Accept 
   Presentation : Weak Accept 
   Recommendation : Accept 
  
Summary: The authors present a method for model-based testing using function nets and for 
constructing function nets that are useful for such testing, and discuss a tool that implements the 
method and has been used to test functionality and security of several industrial-strength applications. 
  
Details: This paper is well written, and makes clear the method being described and its 
motivation. It is less clear about the actual mechanism by which tests are generated, which is 
apparently discussed in another paper (unavailable to reviewers for anonymity reasons).  
  
One thing I would have liked to see more of is some discussion of how to determine that the 
model developed for testing actually has some correspondence to the system being tested; as 
described, it seems as though test failures here can indicate either a bad model or a bad SUT, and it's 
not clear how one would then go about easily determining which is to blame for the failures.  
  
An issue of concern: the section about "function testing of Zen-cart" gives essentially no useful 
information about that testing. It states that over 21,000 function tests with 12 million lines of code 
were generated, and that it took more than three weeks to run them, but says nothing about the results 
obtained from the three-week run, and how they compared to any other type of testing done on the 
same system. 
  
  
Candidate for the best paper award? : No 
Have you checked whether there may be a plagiarism with this paper? (give specific information 
on the review form) : No 
Have you noticed that there may be a conflict of interest? (explain using the review form) : No 
  
===================================== 
  
Reviewer: 2 
  
  
   Originality : Weak Accept 
   Quality : Neutral  
   Relevance : Accept 
   Presentation : Weak Accept 
   Recommendation : Neutral  
  
Summary: The paper presents a methodology for developing models for model-based software 
testing. The model is function nets, which is a variant of high-level Petri-nets. The methodology 
addresses how to build test models with function nets and how to reduce state space. The paper also 
reported applications of the methodology to industry-strength systems.  
 before I buy into it? The paper is heavier on PNets than testing and I am left unconvinced by the 
validation that is mostly at an anecdotal level. 
  
Specifically what is your systems model? At what level of abstraction or implementation are you 
developing these test cases? What are your statistical parameters guiding the test case developments? 
Where are the specifications driving the testing modes and models? Frankly I cannot ascertain any of 
the above to meaningfully understand the paper. If I was struggling in the paper, Sec VI on 
Application (as I would understand the validation of the proposed approach to happen here) turns out 
to be an anecdotal set of paragraphs for different applications covering the major claims of 
functional/security testing. 
  
  
Candidate for the best paper award? : No 
Have you checked whether there may be a plagiarism with this paper? (give specific information 
on the review form) : No 
Have you noticed that there may be a conflict of interest? (explain using the review form) : No 
  
===================================== 
  
Reviewer: 4 
  
  
   Originality : Accept 
   Quality : Neutral  
   Relevance : Weak Accept 
   Presentation : Weak Accept 
   Recommendation : Weak Accept 
  
Summary: The authors propose a method which provides some techniques for reducing the 
complexity of models.   
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
  
 
Patrick  
 
Patrick Kellenberger 
Lead Production Editor 
Conference Publishing Services (CPS) 
IEEE Computer Society 
10662 Los Vaqueros Circle 
Los Alamitos, CA 90720-1264 
Email: pkellenberger@computer.org 
Phone: + 1 714 821 8380 ext. 3105 
Fax: +1 714 761 1784 
 
CONFIDENTIAL COMMUNICATION 
This email may contain confidential and privileged material, and is intended for the sole use of 
the intended recipient.  Any other use or distribution is prohibited. This email may not be posted on 
your website or otherwise displayed or publicly distributed. 
100年度專題研究計畫研究成果彙整表 
計畫主持人：朱正忠 計畫編號：100-2218-E-029-005- 
計畫名稱：模型導向企業雲中介軟體設計與實作-MEC-ME 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 4 4 100%  
研究報告/技術報告 0 0 100%  
研討會論文 2 2 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
