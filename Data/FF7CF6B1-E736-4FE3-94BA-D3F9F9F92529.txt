2前言
由於設計難度高，所以非同步電路設計(asynchronous circuits)一直沒有辦法成
為普及的積體電路設計風格，正好碰到傳統的同步電路設計在設計與製程上遇到瓶
頸，此時非同步電路設計理念的特點[1]：低功率消耗、低電磁干擾、無時脈分布
與時脈偏斜問題、擁有較佳的擴充性與模組化設計等，便漸漸引起了業界的注意。
1. 研究目的
實現電路設計的方式一般而言需要下線晶片來測試，但是這樣一來等待的時間
太長，沒有辦法完成快速驗證電路設計的正確性及效能。因此本論文提出一個可以
在 FPGA平台上驗證電路設計的方法及流程，FPGA本身是一個可程式化的邏輯元
件，可以使用硬體描述語言例如：Verilog、VHDL等來完成電路設計，經過合成後可
以燒錄到FPGA模擬板上進行測試，如此便可以在短時間內進行電路設計的效能驗
證，由於是程式化描述，發現設計內容錯誤能夠立即修改設計，也可以在短時間內
重新進行驗證，徹底簡化了繁瑣的電路繪圖、模擬波形、電路驗證等過程。
2. 研究方法
以映對延遲及資料包裹來實現四相包裹式的自我時序資料路徑元件。一開始
先將自我時序資料路徑元件單獨透過FPGA合成工具做元件映對、配置與撓線的處
理，接著即可由靜態的時序分析報告中，找出資料路徑元件的最長時間延遲路徑，
再由我們所建立的延遲元件庫中找出對應的延遲元件，最後把資料路徑元件與延遲
元件包裹在一起，再次合成並驗證所搭配的延遲元件是否仍符合須求，若延遲時間
已無法匹配，則需重覆先前的所有步驟。
將分開合成的控制器與資料路徑元件整合並再次透過FPGA合成工具做元件映
對、配置、與繞線處理，然後載入到FPGA實驗板中進行測試。
4表 1 自我時序資料路徑電路模組
4.2 延遲元件的實現
延遲電路的設計方式有很多種，如：透過時脈的計數產生延遲電路所需的時間
或利用電路元件本身的訊號延遲特性(如:緩衝器(buffer)或反閘(inverter))，串接多
個組成單一延遲電路。在自我時序資料路徑電路中的延遲電路，我們不採用時脈計
數的方式來設計延遲電路，因為在系統中的每個資料路徑都擁有屬於自己的延遲元
件，這樣的設計方式將過於複雜，而且電路上也較難以實現，於是我們選用反閘來
實現延遲元件，透過單一反閘輸入到輸出的時間作為延遲電路基本的延遲時間單
位，另一方面，由於反閘具有訊號反向的特性，所以延遲電路中的反閘個數須為偶
6測試板控制設計 電路設計 
 
 
 
 
 
 
 
電路測試 
 
 
 
 
 
 
 
 
ARM
溝 
通 FPGA
介 
面 
 
 
 
 
 
 
 
 
取回運算結果 
 
 
 
圖 3 軟硬體整合設計流程圖
此一整合流程中需要用到ARM與FPGA做搭配，FPGA負責電路合成，ARM
則提供了資料接收、顯示、計算等功能，若要將這兩個部份做結合，就需要找出它
們彼此做溝通的方法，圖 4為ARM與FPGA相互溝通的介面圖。
8表 2 記憶體對應裝置用途表
記憶體位址 裝置用途
0x0010 ARM 對 FPGA 要求訊號暫存器
0x0014 FPGA 回應 ARM 的訊號暫存器
0x0018 FPGA 對 ARM 的要求訊號暫存器
0x001C ARM 回應 FPGA 的訊號暫存器
0x0020 FPGA 的 DEVICE0 暫存器
FPGA使用一個記憶體配置的電路設計，並且在當中加入一個選擇器。選擇器
的主要功用為決定要求訊號的優先權。圖 5為FPGA的電路架構簡圖，WR與RD電
路為寫入位址解碼器和讀取位址解碼器、 AB 為選擇器、 REQ_AF0 ~ REQ_AFn
為ARM對FPGA周邊裝置的要求訊號、ACK_AF0 ~ ACK_AFn為ARM對FPGA周
邊裝置的回應訊號、REQ_FA0 ~ REQ_FAn為FPGA周邊裝置對ARM的要求訊號
ACK_FA0 ~ ACK_FAn為FPGA周邊裝置對ARM的回應訊號、INT為ARM的外部中
斷控制線、D0 ~ Dn為資料線、A0 ~ An為位址線、OE為讀取控制線、WE為寫入控
制線、IE0 ~ IEn為寫入位址致能線、OE0 ~ OEn為讀取位址致能線。
OE1 - OE0
IE1 - IE0
Dn - D0
REQ_AF0–REQ_AFn
ACK_FA0–ACK_FAn
AB REQ_FA0–REQ_FAn
ACK_AF0–ACK_AFn
Dn - D0
圖 5 FPGA 電路架構圖
10
當被減數小於減數則會造成溢位，此元件的動作立刻停止，輸出最小的被減數作
為餘數的運算結果。
圖 8 REG 電路描述 圖 9 SUB 電路描述
4.4.3 分析與設計控制器
從資料路徑元件配置可以了解到控制器影響到的輸入輸出訊號，其中包含
了各電路元件的req、ack、結束位元flag以及判別被減數由外部輸入或接收運
算結果的選擇訊號init。
我們根據演算法推算出可能經過的程序，再搭配圖 7的資料路徑元件進行
XBM狀態機描述，演算法中while的功能需要進行重複性的執行動作，直到減數
小於被減數將減的結果變成負數，我們擷取運算結果的最高位元作為判斷運算結
果是否有溢位的情形，只要條件達成則中斷循環送出完成訊號告知外部檢測電路
元件進行驗證。
4.4.4 整合電路功能測試
完成資料路徑及控制器元件設計，將資料路徑元件及控制器整合成完整電
路後，開始進行電路功能測試，測試電路功能是否正確。圖 10為模擬結果。
12
FPGA EP1C6Q240C8
ARM S3C2410
Synthesis Tool Quartus II 7.2sp3 Web Edition
# of Logic
Elements
Ctrl Pins
SPEC
Data Path Ctrl
States
Average
Cycle
Time(ns)
Average Cycle
Time(ns)
Mod 294 56 9 10 204
Mul 295 88 14 14 2,549
Gt_mul 271 92 14 12 321
RSA 571 194 23 25 18,118,796
Huffman Tree 914 314 70 70 2,346
圖 11 餘數電路功能驗證模擬
4.4.6 實驗結果
表 3為本次實驗的範例，主要時作了餘數、有/無中斷訊號移位乘法器、RSA
加密演算法、霍夫曼樹演算法等幾個例子的實驗結果。
表 3 實驗結果
4. 相關論文發表
[1] Jung-Lin Yang, Wei-Che Hsu, Sung-Min Lin, “ACase Study On Asynchronous
VLSI Design Platform,”in Proceedings of 2007 IEEE International Conference on
Electron Devices and Solid-State Circuits, 2007.
