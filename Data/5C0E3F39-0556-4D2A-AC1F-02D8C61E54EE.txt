motion consistently, and can achieve fast trajectory 
tracking with double tracking errors and obstacle 
avoidance with ellipse motion planning by image 
recognition. 
英文關鍵詞： Leading and followed robots, sensors, dynamic 
simulation, autonomous trajectory tracking, obstacle 
avoidance control, ellipse motion planning, adaptive 
fuzzy PID sliding-mode control. 
 
 2 
行政院國家科學委員會專題研究計畫成果報告 
多機器人之視覺力迴饋自主循跡駕馭控制及避障之研究 
The research of haptic vision feedback control of intelligent robots with 
trajectory tracking and obstacle avoidance 
計畫編號：100-2221-E-036-006-MY2 
執行期間：100年 8月 1 日至 102 年 7 月 31 日 
計畫主持人：游文雄 教授 大同大學電機工程學系 
e-mail:wsyu@ttu.edu.tw 
計畫參與人員：楊承達 大同大學電機研究所碩士班 
陳和生 大同大學電機研究所博士班 
 
一、中文摘要 
 本計畫之目標將以兩年完成前導機器人和隨
從機器人之自主循跡駕馭控制及避障，使前導機
器人自主循跡駕馭控制及避障時，隨從機器人也
能隨之自主循跡駕馭控制及避障。自主循跡駕馭
控制包括動態模擬與前導及隨從機器人控制，而
訊號反饋主要由感覺及視覺所組成。第一年將建
構操控平台及兩台輪型機器人，並安裝控制晶片、
視覺介面、兩獨立驅動輪及一惰輪、六組紅外線
感測器於機器人上，實現操控平台按鍵空間對應
機器人關節空間，使前導和隨從機器人能自主循
跡駕馭並以橢圓軌跡演算法進行避障。第二年建
構動感反饋介面於機器人上，實現適應模糊PID
控制演算法結合自適應滑動模式控制避障演算法
及雙軌跡追蹤誤差修正，使前導和隨從機器人能
自主循跡駕馭控制及避障，並使追蹤誤差獲得快
速補償。 
 
關鍵字：前導機器人、隨從機器人、 控制晶片、
人機介面、操控平台、感覺、視覺、動態模擬、
橢圓軌跡演算法、適應模糊PID控制演算法。 
Abstract 
This project is focusing on research by two 
years in autonomous trajectory tracking and 
obstacle avoidance control with ellipse 
motion planning for the leading and followed 
robots.  Sense interface is composed of the 
tactility and vision devices.  Autonomous 
trajectory tracking control is composed of 
dynamic simulation and robot control.  We 
use two mobile robots in experiments to 
analyze the architecture for leading/followed 
robots and control performance. The first 
year wants to construct a operation platform 
and two mobile robots.  Each mobile robot 
has two independent drives to drive two 
wheels, respectively, a passive wheel, a 
vision system, and infrared systems are setup 
for each robot. By implementing the 
transformation between the Cartesian space 
and joint space of the robot, the leading and 
followed robots can achieve autonomous 
trajectory tracking and obstacle avoidance 
control with ellipse motion planning by 
image recognition.  The second year 
constructs a haptic operation platform with 
sensing feedback within the robots.  The 
robot images and environment in the 
operation platform can be re-constructed and 
renewed by the control algorithm so that the 
leading and followed robots can mimick the 
motion consistently, and can achieve fast 
trajectory tracking with double tracking 
errors and obstacle avoidance with ellipse 
motion planning by image recognition. 
 
 4 
 
1.已建立兩台如圖一之前導機器人和隨從機器人
系統，規劃並建構前導機器人和隨從機器人運動
機構、獨立7 inch兩輪驅動及一個惰輪，安裝無
線WiFi模組，其中直流馬達的規格如下：12V DC、
提供超過300 oz.inch(21.6 kg.cm)的扭力、最大轉
速為800 PWM、及PWM速度控制最大值為0.7m/s，
紅外線感測器偵測範圍為10~80cm，WiFi模組則
選擇為IEEE 802.11g規格。 
 
 
 
 
2、已完成如圖三控制機器人之影像機構如圖四，
安裝 USB 攝影機於每一部機器人以取得前方之影
像，分析是否有障礙物。量測系統及影像辨識經
由機器人內建晶片上撰寫以 C#程式處理：彩色到
灰階值的轉換、RGB 值轉換為其他彩色模型、高
低通濾波，取得多重視點的影像，再利用相似的
特徵，經幾何投影法則(或其他法則)，接著再透
過無線 WiFi來傳遞攝影機影像至操控平台。 
 
 
 
 
 
 
3.已完成於機器人內建晶片中，以 C#撰寫無線
WiFi 傳輸機制，及考慮重力、空氣阻力與地板
摩擦力之動態方程式以便控制車體馬達轉動而
產生轉動及移動的位置如下式所示： 
 
  )()()(),()( qAqBqFqqqVqqM m   
BFwVw wmw    
0)(  qq  , 0)()(  qqS , )()( tvqSq   
 
其中 33)( RqM 為系統對稱正定的慣性矩陣、
33),( RqqVm  為向心力矩陣、
13)( RqF 為摩擦
力矩陣、 23)( RqB 為輸入轉換矩陣、 12R 為
輸入向量、 13)( RqA 具有關聯約束的矩陣、
11R 為約束力的向量，   wvv 1 ，因此，
)(qM 為一個對稱且正定之矩陣及  mVqM 2)( 
為一個斜對稱矩陣。參考軌跡由操控者操控觸動
多點觸控操控平台所產生。各項參數如下： 
 rdq 
  cossin)( , w
w
b
r
b
r
rr
v












22
22
 









 

10
sinsin
sincos
)( 

r
r
d
d
qS , ww
b
r
b
r
rr
v












22
22  
 




















b
r
b
r
b
rdr
b
rdr
b
rdr
b
rdr
qS rr
rr
22
cos
2
sin
2
cos
2
sin
2
sin
2
cos
2
sin
2
cos
2
)( 

 
圖
四、攝
影機
攝獵
範圍
完成
圖。 
圖
三、機
器人
之攝
影機
攝獵
範圍
示意
圖。 
圖二、前導機器人和隨從機器人閉迴路控制圖。 
 6 
   
1
2
2
2
2
1
2




ii
r
ky
r
hx ii
, 
2
1
2
23 iii
rrr  , 
   














i
ii
i
i
ii
x
y
r
kx
r
hx
1
2
2
2
2
1
2
1



, 
2
1
2
1 yxi iis
d     
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
5.完成以 C#於機器人內建晶片撰寫操控平台：因
圖八、機器人實際轉進路線規劃。 
圖十、機器人行進路線二值化圖。 
圖十一、機器人實際行進路線圖。 
圖九、機器人實際行進路線圖。 圖十二、機器人實際行進路線與畫數關
係圖。 
 8 
9.完成操控平台之影像機器人校正，使得(a)場景
中機器人進行移動，而景物也隨著移動而更改，
其中，景物是透過CCD影像擷取裝置，即時在操控
平台螢幕上重現的。(b)平台隨著前導機器人與隨
從機器人的行進而產生不同姿態及位置，以模擬
機器人行進在軌跡追蹤及避障運動。(c)機器人行
進移動時，電路對電腦主機傳送訊號，並在屏幕
中機器人的對應位置產生對應的場景。(d)操控平
台收到CCD攝影機所傳回的相關真實環境資訊後，
研判前導機器人與隨從機器人是否以正確姿態行
進。(e) 操控平台在場景中顯示機器人所有狀況，
經由多次反覆訓練，機器人便具有急速移動間的
能力。 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
10.完成建立影像機器人操控介面之座標空間，因
機器人控制介面系統提供直線加減速信號給驅
動馬達以驅使車輪轉動，因此，為確保測試轉換
法則正確性，我們將電控部分實現在一個密閉機
箱內，以避免不必要的干擾。進行前導機器人和
隨從機器人之間追蹤，我們利用前面完成的運動
空間到操控介面之轉換法則，將捕捉到的影像進
行二值化，如圖十二、十三，並計算捕捉到的目
標重心，如圖十四所示計算行進路線規劃，判斷
重心與畫面中心點的距離，作隨從機器人的追蹤，
包括直線行走、轉彎運動，而影像計算演算法流
程圖如圖十五。 
 
11.完成規劃並建立前導機器人和隨從機器人藉
由攝影機及紅外線感測器於執行任務時之路徑
規劃：（1）假設不存在障礙的環境下，隨從機器
人(編號：1、2…n號)能夠利用紅外線感測器偵
測到前導機器人的位置，且可以追上前導機器人
並執行追蹤任務，進而隨著前導機器人直接往終
點前進，（2）假設不存在障礙的環境下，隨從機
器人(編號：1、2…n號)利用紅外線感測器欲偵
測前導機器人的位置，由於無法偵測到前導機器
人所在精確位置，此時隨從機器人(1號)變成前
導機器人，隨從機器人(2…n號)可執行追蹤前導
機器人，並追上前導機器人並隨著前導機器人直
接往終點前進如圖十六、圖十七。 
 
將此 Lagrange 運動方程式納入動態分析如下： 
 
 








3
1
3
1
)(
i iii q
L
q
L
dt
d

 
 
其中    Tcc
T
yxqqqq  321 ，  
T
lr  表示輪子
轉矩向量且 r ， l 分別為左、右車輪之轉矩，
rlb LLLL  分別為針對機器人之中心質量、
左輪和右輪的 Lagrange 運動方程式，其中 
 



























TyFxF
IdydxbdyxmL
TyFxF
IdydxbdyxmL
IyxmL
cscs
rcrcrccr
cscs
rcrcrccl
bccbb
sincos
2
1
)cos2sin2(
2
1
sincos
2
1
)cos2sin2(
2
1
2
1
)(
2
1
22
222222
11
222222
222



圖十五、機器人影像處理追蹤規劃流程圖。 
圖十七、隨從機器人二質化追蹤規劃圖。 
圖十六、隨從機器人追蹤規劃圖。 
 10 
 
 
四、 計畫成果自評 
綜觀以上之執行結果，本計畫已完成 (a)前導機器
人和隨從機器人之機構製作，並安裝感測器及攝
影機伺服器於機器人上；(b)以攝影機取得前方之
影像，分析是否有障礙物，量測系統及影像辨識
經由控制晶片上撰寫C#程式處理。(c)於機器人內
建無線網路硬體以C#撰寫控制程式來傳遞攝影機
影像至操控平台；(d)操控者藉操作操控平台使前
導機器人和隨從機器人的動態、行進行為及與周
邊環境運動及互動達到一致，以達成循跡駕馭及
避障，並降低前導機器人和隨從機器人動態的誤
差；(e)以C#於機器人內建晶片撰寫前導機器人和
隨從機器人座標轉換系統，並據此推論至前導機
器人和隨從機器人各行進之運動方程式
圖二十(a)、完整隨從機器人進行追蹤前
導機器人示意圖。 圖二十(d)、完整隨從機器人進行追蹤前
導機器人示意圖。 
圖二十(b)、完整隨從機器人進行追蹤前
導機器人示意圖。 
圖二十(c)、完整隨從機器人進行追蹤前
導機器人示意圖。 
圖二十(e)、完整隨從機器人進行追蹤前
導機器人示意圖。 
 12 
Electronics, vol. 55, no. 8, pp. 3124-3132, 
2008. 
[15] A. Zhu, S.X. Yang, “A framework for 
coordination and navigation of multi-robot 
systems,” IEEE International Conference on 
Automation and Logistics, pp. 350-355, 2010. 
[16] S. Li, ZhangLe, X. Yuan , “Design and 
implementation of multi-robot cooperative 
tracking,” International Conference on 
Computer Supported Cooperative Work in 
Design, pp. 490-494, 2010. Y.W. Liang, S.D. 
Xu, D.C. Liaw, and C.C. Chen, “A study of T-S 
model-based SMC scheme with application 
to robot control,” IEEE Trans. Ind. Electron., 
vol. 55, no. 11, pp. 3964-3971, 2008. 
[17] H. Dong, Z. Wang, and H. Gao, “H∞ fuzzy 
control for systems with repeated Scalar 
Nonlinearities and Random Packet Losses,” 
IEEE Trans. Fuzzy Syst., vol. 17, no. 2, pp. 
440-450, 2009. 
[18] C.Y. Tsai and K.T. Song,”Visual Tracking 
Control of a wheeled mobile robot with 
System Model and Velocity Quantization 
Robustness,” IEEE Trans. ON Cont. Syst., 
Tech. vol 17 .no.3, pp. 520-527, MAY, 2009. 
[19] C.L. Hwang and L.J. Chang,”Internet-based 
smart-space navigation of a car-like wheeled 
Robot using fuzzy-neural adaptive control,”
IEEE Trans. on Fuzzy Syst., vol. 16, no. 5, pp. 
1271-1284, 2008. 
[20] C.L. Hwang and C.Y. Shih,”A distributed 
active-vision network-space approach for the 
navigation of a car-like wheeled robot,”
IEEE Trans. on Ind. Elec., vol. 56, no. 3, pp. 
846-855, 2009. 
[21] C.L. Hwang, and N.W. Chang, ” Fuzzy 
decentralized sliding-mode control of a 
car-like mobile robot in distributed 
sensor-network spaces, ” IEEE Trans. On 
Fuzzy Syst., vol. 16, no. 1, pp. 97-109, 2008. 
 
Please cite this article in press as: W.-S. Yu, C.-C. Weng, An observer-based adaptive neural network tracking control of robotic systems,
Appl. Soft Comput. J. (2013), http://dx.doi.org/10.1016/j.asoc.2013.06.009
ARTICLE IN PRESSG ModelASOC-1990; No. of Pages 14
2 W.-S. Yu, C.-C. Weng / Applied Soft Computing xxx (2013) xxx–xxx
consists of translation and dilation parameters to enrich the map-
ping relationship between inputs and outputs [12], using neural
weighting-dependent approach to guarantee stability for time-
delay neural systems [14], using delay independent criterion for
multiple time-delay systems [15], or using modiﬁed wavelet neural
network in function approximation to predict time-series pollution
data [16].
There has been considerable interest in exploring the appli-
cations of WNN  to deal with nonlinearity and uncertainties of
real-time servo control systems [17–26]. A number of WNN-based
controllers have been proposed using artiﬁcial neural networks
and wavelet decomposition with learning capability without any
precise structure for controlling the mobile robots [26], using risk
control decision models for natural disasters [27], or using GA-
based adaptive neural network controllers for nonlinear systems
[28]. Furthermore, output feedback control scheme with neural
adaptive observer was proposed in [29,30], and the former also
used the condition of linear dependence upon unknown param-
eters that has been removed by introducing UFAs such as fuzzy
systems and neural networks in the observer structure. Their
schemes require strictly positive real (SPR) conditions on the
estimation error dynamics and Meyer–Kalman–Yakubovic (MKY)
lemma. In general, the observation error dynamics does not satisfy
the SPR condition. For this reason, a low-pass ﬁlter is needed such
that the system can satisfy the SPR condition associated with the
Lyapunov stability analysis. Nevertheless, the ﬁltering of the basis
vectors of UFAs will make the dynamic order of the observer very
large.
Besides the nonlinearities and uncertainties, robot systems
often include unknown delayed states when link transmits energy
or moment to the next due to inertia effect. Hence, the states with
delayed uncertainties should be included in the dynamical sys-
tem for stability analysis in the control system design (see, e.g.,
[32,36–40] and the references therein). However, they are all based
on the assumption that the bounds of the delayed state uncer-
tainties are exactly known. Due to the complexity of the structure
on uncertainties, delayed uncertainty bounds may  not be easily
obtained. Zhang [12] had applied wavelet theory for nonlinear
system identiﬁcation, but their approach utilized a wavelet basis
as a universal function approximator with a neural network to
determine the resolution and the translation coefﬁcients of the
wavelet. By utilizing the universal approximation property along
with the direct decomposition, multiresolution, and orthogonality
properties associated with certain wavelets, we demonstrate that
wavelets have certain properties sufﬁcient for correct parameter
estimation under passive learning schemes and develop a system
approximation method for wavelet approximators.
By avoiding complicated Lagrange’s equations, we adopt an
observer-based adaptive wavelet neural network (OBAWNN)
tracking control scheme in this paper using a new simplify model
using linear analytical results instead of estimating nonlinear sys-
tem functions to approximate the robot system dynamics. It is
assumed that the state delay times are known a priori, but the
bounds of the gains of delay states are not known. Based on Lya-
punov criterion and Riccati-inequality, some sufﬁcient conditions
based on the proposed control scheme are derived so that all states
of the system are uniformly ultimately bounded and the effect of
the external disturbance on the tracking error can be attenuated
to any prescribed level and consequently an H∞ tracking control is
achieved. Finally, a numerical example of a three-link rolling robot
as compared to our previous work [13] is given to illustrate the
effectiveness of the proposed control scheme.
This paper is organized as follows. Section 2 presents the
dynamics of robot manipulators. Section 3 presents the estimation
using wavelet neural network. Section 4 presents the observer-
based adaptive control design and analyzes the stability of the
closed-loop system in the Lyapunov sense. The rolling robot with
three links for rolling motion is simulated to demonstrate the effec-
tiveness of the proposed method in Section 5. Finally, conclusion is
given in Section 6.
2. Dynamics of robot manipulators
Consider the dynamical equation of an n-link robotic manipu-
lator subject to a lumped disturbance and delayed states described
by the following nonlinear differential equation:
H(q)q¨(t) + C ′(q, q˙)q˙(t) + g ′(q) = (t) +
b∑
j=1
 ′j(t)q(t − hj) + d
′(t)
(1)
q(t) = ϕ(t), t ∈ [−h, 0] (2)
where H( q) is the n × n symmetric positive deﬁnite inertial matrix,
C ′(q, q˙)q˙ is the n × 1 vector of coupled Coriolis and centripetal
torques, g ′( q) is the n × 1 vector of gravitational torques,  is
the n × 1 vector of joint torques, q = [q1 q2 · · · qn] is the vec-
tor of the joint displacement, and q¨  and q˙  are the vectors of the
joint acceleration and velocity terms, respectively. Further, ϕ(t)
is a continuous vector-valued initial function, h = max{hj, j =
1, 2, . . .,  b}, ′
j
(t), j = 1, 2, . . .,  b, are nonlinear time-varying con-
tinuous functions which represent the gains of the delayed state
uncertainties for the system since each link transmitting energy or
moment to the following links will have delayed behavior due to
inertia effect, and are assumed to be bounded. It is assumed that
only joint vector q is measurable and d′ ∈ L2[0, T], ∀ T ∈ [0, ∞). The
followings are the properties of the robotic dynamics:
(P1) The inertia matrix H( q) is symmetric positive-deﬁnite for
every q. Both H( q) and H( q)−1 are uniformly bounded.
(P2) The matrix H˙(q) − 2C ′(q, q˙) is skew-symmetric for suitable
representation of C ′(q, q˙).
(P3) C ′(q, q˙) is bounded in q and linear in q˙.
From (P1), (P2), and (P3), the differential equation of the manip-
ulator (1) can be written as
q¨(t) + C(q, q˙)q˙(t) + g(q) = B(q)(t) +
b∑
j=1
 j(t)q(t − hj) + d(t) (3)
where C(q, q˙) = H(q)−1C ′(q, q˙), g(q) = H(q)−1g ′(q),  j =
H(q)−1 ′
j
, B(q) = H(q)−1, and d(t) = H( q)−1 d′(t). From prop-
erty (P1) and boundness assumption of  ′
j
, it can be assumed
that  j is bounded, i.e., ‖ j ‖ ≤ ˇj, ∀ j, where ˇj is unknown but
positive constant and ‖· ‖ is the Euclidean norm of ·. To simplify the
notation, the argument t is in many cases dropped out.
Deﬁne the output tracking error as
e1 = q − qr (4)
where qr is the desired reference output. Let x = [x1 x2 ]
 =
[q q˙]

, e = [e1 e2 ] = [e1 e˙

1 ]

, and xr = [qr q˙r ]

. Then, we
have e = x − xr and the error dynamics can be given from (3) by:
e˙ = A0e + B0(f (x) + B(q) − q¨r +
b∑
j=1
 j(t)q(t − hj) + d) (5)
Please cite this article in press as: W.-S. Yu, C.-C. Weng, An observer-based adaptive neural network tracking control of robotic systems,
Appl. Soft Comput. J. (2013), http://dx.doi.org/10.1016/j.asoc.2013.06.009
ARTICLE IN PRESSG ModelASOC-1990; No. of Pages 14
4 W.-S. Yu, C.-C. Weng / Applied Soft Computing xxx (2013) xxx–xxx
estimations given by (16) and (17) for fˆ and Bˆ,  respectively, call for
proper adjustments of the translations mˆf = [mˆf 1 mˆ

f 2
· · ·mˆf 2n ]
 ∈
R
(2n)×N2 , mˆB = [mˆB1 mˆ

B2
· · ·mˆBn ]
 ∈ Rn×N2 and dilations
ˆf = [ˆf 1 ˆ

f 2
· · ·ˆf 2n ]
 ∈ R(2n)×N2 , ˆB = [ˆB1 ˆ

B2
· · ·ˆBn ]
 ∈
R
n×N2 , where mˆf i = [mˆf i1 mˆf i2 · · ·mˆf iN2 ]
 ∈ RN2×1, mˆBi =
[mˆBi1 mˆBi2 · · ·mˆBiN2 ]
 ∈ RN2×1, ˆf i = [ ˆf i1 ˆf i2 · · · ˆf iN2 ]
 ∈ RN2×1,
and ˆBi = [ ˆBi1 ˆBi2 · · · ˆBiN2 ]
 ∈ RN2×1. For a small translation
and a large dilation, the convergence of WNN  parameters can
be guaranteed but the convergent speed is very slow. On the
other hand, if the translation is too large and the dilation is too
small, the parameter convergence may  become more unstable.
In order to train the WNN  parameters efﬁciently, the optimal
estimators for translation and dilation will be derived to achieve
the fast convergence of output tracking error. In order to tune
the translations and dilations to achieve favorable estimation of
the system dynamic function, the Taylor expansion linearization
technique is employed to transform the nonlinear functions ˜˝ f
and ˜˝ B into partially linear forms. Then, we have
˜˝
f = Ef m˜- f + Of ˜- f + Rf (19)
˜˝
B = EBm˜- B + OB˜-B + RB (20)
where Ef = diag{
∂ω
f
∂mf
· · · ∂ω

f
∂mf
}|mf =mˆf ∈ Rn×(4n
4N2), m˜- f =
diag{m˜f · · ·m˜f } ∈ R(4n4N2)×(2n2), EB = diag{
∂ω
B
∂mB
· · · ∂ω

B
∂mB
}|mB=mˆB ∈
R
n×(n4N2), m˜- B = diag{m˜B· · ·m˜B} ∈ R(n
4N2)×(n2), Of =
diag{ ∂ω

f
∂f
· · · ∂ω

f
∂f
}|f =ˆf ∈ Rn×(4n
4N2), ˜- f = diag{˜f · · ·˜f } ∈
R
(4n4N2)×(2n2), OB = diag{
∂ω
B
∂B
· · · ∂ω

B
∂B
}|B=ˆB ∈ Rn×(n
4N2), ˜-B =
diag{˜B· · ·˜B} ∈ R(n4N2)×(n2), and Rf , RB are matrices of higher
order terms, for which
∂ω
f
∂mf
=
[[
∂ωf 1
∂mf
]
· · ·
[
∂ωf 2n
∂mf
]]
(2nN2)×(2nN2)
(21)
∂ω
f
∂f
=
[[
∂ωf 1
∂f
]
· · ·
[
∂ωf 2n
∂f
]]
(2nN2)×(2nN2)
(22)
∂ωB
∂mB
=
[[
∂ωB1
∂mB
]
· · ·
[
∂ωBn
∂mB
]]
(nN2)×(nN2)
(23)
∂ωB
∂B
=
[[
∂ωB1
∂B
]
· · ·
[
∂ωBn
∂B
]]
(nN2)×(nN2)
(24)
are the Jacobian matrices that map m˜f , ˜f and m˜B, ˜B to ˜˝ f and ˜˝ B ,
respectively, by calculating (10) and (11), and their th elements
can be represented as
[
∂ωf 
∂mf
]
=
[
0(−1)×N2
[
∂y3
f
∂mf1
· · ·
∂y3
f
∂mN2
]
0(2n−)×N2
]
(25)
[
∂ωf 
∂f
]
=
⎡
⎣0(−1)×N2
[
∂y3
f
∂f1
· · ·
∂y3
f
∂fN2
]
0(2n−)×N2
⎤
⎦ (26)
[
∂ωf 
∂mf
]
=
[
0(−1)×N2
[
∂y3
f
∂mf1
· · ·
∂y3
f
∂mN2
]
0(2n−)×N2
]
(27)
[
∂ωf 
∂f
]
=
⎡
⎣0(−1)×N2
[
∂y3
f
∂f1
· · ·
∂y3
f
∂fN2
]
0(2n−)×N2
⎤
⎦ (28)
respectively.
4. Observer-based adaptive control design
Since the dynamics of the plant is highly nonlinear and the sys-
tem states can not be cannot be directly available for feedback, a set
of neural networks (i.e., a dynamic high-pass ﬁlter [30,31]) which
will be deﬁned later is employed to reconstruct the unavailable
signals since they can offer the advantage of performance improve-
ment through learning using parallel and distributed processing
signals e with realizable ﬁlters.
Let xˆ and eˆ be the state estimations of x and e, respectively,
where xˆ = [xˆ1 xˆ2 ]
 = [qˆ ˙ˆq]

and eˆ = [eˆ1 eˆ2 ] = [eˆ1 ˙ˆe

1 ]

for
which eˆ1 = xˆ1 − qr . Then, the observer-based adaptive WNN
(AWNN) tracking control law can be given by
 = Bˆ−1(qˆ)(−fˆ (xˆ) − Keˆ − q¨r + h + s + d) (29)
where K is chosen such that the eigenvalues of the matrix A1
A0 − B0 K are all with negative real part, and h, s, d are com-
pensators described later for uncertainties, disturbances, and delay
gain uncertainties, respectively. From (5) and (29), we  have
e˙ = A0e + B0(f (x) − fˆ (xˆ) +
b∑
j=1
 j(t)q(t − hj) − Keˆ + (B(q)
− Bˆ(qˆ)) + h + s + d + d) (30)
For (30), we design the following observer to estimate the tracking
error vector:{
˙ˆe = A0eˆ − B0Keˆ + Ko(u − uˆ)
uˆ = C0eˆ
(31)
where C0 = [ I(n) 0(n)] and Ko is chosen such that the eigenvalues
of the matrix A2 A0 + Ko C0 are all with negative real part. Then,
by replacing the state estimates, we have from (16) and (17)
fˆ (xˆ) = fˆ  (eˆ + xr) = ˝f (eˆ + xr)ˆf = ˆ˝ f ˆf (32)
Bˆ(qˆ) = Bˆ(eˆ1 + qr) = ˝B(eˆ1 + qr)ˆB = ˆ˝ BˆB (33)
According to the universal approximation theorem, there exist both
optimal approximation parameters ∗f and 
∗
B such that fˆ
∗
(xˆ) and
Bˆ
∗
(xˆ) can approximate f ( x) and B( q), respectively, as close as
possible. That is,
f (x) = fˆ ∗(eˆ + xr) + 	f = ˝f (eˆ + xr)∗f + 	f (34)
B(q) = Bˆ∗(eˆ1 + qr) + 	B = ˝B(eˆ1 + qr)∗B + 	B (35)
where
∗f = arg min
f ∈Uf
{ sup
x∈Ux,eˆ+xr∈Ueˆ+xr
‖fˆ (eˆ + xr) − f (x)‖} (36)
∗B = arg min
B∈UB
{ sup
q∈Uq,eˆ1+qr∈Ueˆ1+qr
‖Bˆ(eˆ1 + qr) − B(q)‖} (37)
for which Ux, Uxˆ, Uf , and UB are suitable closed sets. Further, we
deﬁne the estimated parameter errors as ˜f  f − ∗f and ˜B  B −
∗B .
Please cite this article in press as: W.-S. Yu, C.-C. Weng, An observer-based adaptive neural network tracking control of robotic systems,
Appl. Soft Comput. J. (2013), http://dx.doi.org/10.1016/j.asoc.2013.06.009
ARTICLE IN PRESSG ModelASOC-1990; No. of Pages 14
6 W.-S. Yu, C.-C. Weng / Applied Soft Computing xxx (2013) xxx–xxx
the adaptation laws of the gain of delayed state uncertainties be given
by
˙ˆϑ = 1
4
ePB˜B˜

Pe (51)
and the neural parameters of the WNN  be given by
˙ˆ- f = − ˙˜- f = f O

f B˜

Pe˜
∗
f (52)
˙ˆ-B = − ˙˜-B = BO

B B˜

Pe˜
∗
B (53)
˙ˆm- f = − ˙˜m- f = mf E

f B˜

Pe˜
∗
f (54)
˙ˆm- B = − ˙˜m- B = mBE

B B˜

Pe˜
∗
B (55)
where h, , , f , B , mf , mB are positive constants and deter-
mined by the designer,  ˛ ˇF + f + B‖ − fˆ (xˆ) − Keˆ − q¨r‖, and P =
P > 0 is a symmetric positive deﬁnite matrix satisfying the following
Riccati-like equation:
AP + PA + Q − 1
h
PB˜B˜

P + 2
2
PB˜B˜

P ≤ 0 (56)
for which  is a prescribed value for achieving H∞ tracking per-
formance, Q = Q > 0 is a prescribed weighting matrix where Q˜ =
Q − b2I(4n) > 0 and 2 ≥ 2h. Then, for any t≥t0, e and ϑ˜(t) are uni-
formly ultimately bounded (UUB) and the H∞ tracking performance
within the prescribed attenuation level  for the overall system is
achieved.
Proof Choose the Lyapunov–Krasovskii functional candidate as
V = 1
2
ePe + 1
2f
˜

f ˜f +
1
2B
tr{˜B ˜B} +
1
2f
tr{˜f ˜f }
+ 1
2B
tr{˜B ˜B} +
1
2mf
tr{m˜f m˜f } +
1
2mB
tr{m˜B m˜B}
+1
2
−1ϑ˜2 + b
2
b∑
j=1
∫ t
t−hj
e(s)e(s)ds (57)
where tr{ · } denotes the trace of ·. Taking derivative of V in (57)
along the trajectory (42), we have
V˙ = 1
2
e˙

Pe + 1
2
ePe˙ + 1
f
˜

f
˙˜f +
1
B
tr{˜B ˙˜B} + −1ϑ˜ ˙˜ϑ
+b
2
b∑
j=1
ee − b
2
b∑
j=1
e(t − hj)e(t − hj) +
1
f
tr{˜f ˙˜f }
+ 1
B
tr{˜B ˙˜B} +
1
mf
tr{m˜f ˙˜mf } +
1
mB
tr{m˜B ˙˜mB}
(58)
= 1
2
e(AP + PA + b2I(4n))e + dB˜

Pe + −1ϑ˜ ˙˜ϑ
+(F + G(−fˆ (eˆ + xr) − Keˆ − q¨r) + ˇF )B˜

Pe
−˜f ˜˝

f B˜

Pe + 1
f
˜

f
˙˜f − ˜

B˝

B B˜

Pe + 1
B
tr{˜B ˙˜B}
+
b∑
j=1
 j(t)q(t − hj)B˜

Pe + (h + s + d)(I(2n) + G)
× B˜Pe + ˜∗f m˜-

f E

f B˜

Pe − b
2
b∑
j=1
e(t − hj)e(t − hj)
+˜∗f ˜-

f O

f B˜

Pe + ˜∗B m˜-

BE

B B˜

Pe
+˜∗B ˜-

BO

B B˜

Pe + 1
f
tr{˜f ˙˜f } +
1
B
tr{˜B ˙˜B}
+ 1
mf
tr{m˜f ˙˜mf } +
1
mB
tr{m˜B ˙˜mB}
(59)
Hence, from (43), (44), (48), (50), (52)–(55), and
since ˜
∗
f m˜-

f E

f B˜

Pe =tr{m˜-

f E

f B˜

Pe˜
∗
f }, ˜
∗
f ˜-

f O

f B˜

Pe
=tr{˜-

f O

f B˜

Pe˜
∗
f }, ˜
∗
B m˜-

BE

B B˜

Pe =tr{m˜-

BE

B B˜

Pe˜
∗
B },
˜
∗
B ˜-

BO

B B˜

Pe =tr{˜-

BO

B B˜

Pe˜
∗
B }, x(t − hj) = e(t − hj) +
xr(t − hj), ‖ G ‖ ≤ B , and ee = ee + 2(eˆ  − 0.5e)(eˆ − 0.5e) −
0.5ee≥0.5ee≥0.5e[1 0][1 0]e,  we  have
V˙ ≤ 1
2
e(AP + PA + b2I(4n))e + −1ϑ˜ ˙˜ϑ
− 1
2h
ePB˜B˜

Pe + dB˜Pe + s (I(2n) + G)B˜

Pe
+
b∑
j=1
 j(t)
[
1
0
]
(e(t − hj) + xr(t − hj))B˜

Pe
+(F + G(−fˆ (eˆ + xr) − Keˆ − q¨r) + ˇF )B˜

Pe
− 1
4
ϑˆePB˜B˜

Pe
−b
4
b∑
j=1
⎛
⎝[ 1
0
]
e(t − hj)
⎞
⎠
⎛
⎝[ 1
0
]
e(t − hj)
⎞
⎠
(60)
Using the technique of completion of the squares, and since ‖ j‖ <√
ϑ, ∀j and b∑bj=1zj zj≥(∑bj=1zj)(∑bj=1zj) for any vector zj ∈ Rn,
we have
V˙ ≤ 1
2
e
(AP + PA + b2I(4n) −
1
h
PB˜

B˜P)e
− 1
2
(
1

B˜

Pe − d
)(
1

B˜

Pe − d
)
+ 1
2
2dd
+ 1
22
e

PB˜B˜

Pe − 1
4
ϑˆe

PB˜B˜

Pe
+−1ϑ˜ ˙˜ϑ + (F + G(−fˆ (eˆ + xr ) − Keˆ − q¨r ) + ˇF )B˜

Pe
+s(I(2n) + G)B˜Pe −

4
(
b∑
j=1
e(t − hj)
)(
b∑
j=1
e(t − hj)
)
+
b∑
j=1
√
ϑ
[
1
0
]
(xr (t − hj) + e(t − hj))B˜Pe
≤ 1
2
e
(AP + PA − 1
h
PB˜B˜

P + b2I(4n))e
+
(
1
22
+ 1
22
)
e

PB˜B˜

Pe + 1
2
2dd
− 1
2
(
1

B˜

Pe − 
b∑
j=1
√
ϑ
[
1
0
]
xr (t − hj)
)
×
(
1

B˜

Pe − 
b∑
j=1
√
ϑ
[
1
0
]
xr (t − hj)
)
+ 1
2
2ϑ
(
b∑
j=1
xr (t − hj)
)
b∑
j=1
xr (t − hj) + s(I(2n) + G)B˜Pe
+(F + G(−fˆ (eˆ + xr ) − Keˆ − q¨r ) + ˇF )B˜

Pe
+ 1
4
(ϑ − ϑˆ)ePB˜B˜Pe + −1ϑ˜ ˙˜ϑ
− 1
4
(
√

b∑
j=1
([
1
0
]
e(t − hj) −
1√

√
ϑB˜

Pe
))
×
(
√

b∑
j=1
([
1
0
]
e(t − hj) −
1√

√
ϑB˜

Pe
))
(61)
Please cite this article in press as: W.-S. Yu, C.-C. Weng, An observer-based adaptive neural network tracking control of robotic systems,
Appl. Soft Comput. J. (2013), http://dx.doi.org/10.1016/j.asoc.2013.06.009
ARTICLE IN PRESSG ModelASOC-1990; No. of Pages 14
8 W.-S. Yu, C.-C. Weng / Applied Soft Computing xxx (2013) xxx–xxx
Robotτ = B
− 1
(qˆ)( −f(xˆ) − Keˆ
− ¨q r+ τh + τs + τd)
LawControl
Observer
eˆ = A0eˆ−B0Keˆ+Ko(u− uˆ)
yˆ = C0eˆ
Filters
L(s) =
λ
(s+ λ)
fˆ Ω= f ζˆf
Bˆ Ω= B ζˆB
ω˙f , ω˙B , ,
˙ˆσ , ˙ˆσ , ˙ˆm , ˙ˆm
LawsUpdate
y
x
xr
-
+
+
-
e˜
e
e˜F
Ωf ΩB
f B
eˆ
τ C
systemneuralAdaptve
ϑ
ϑ
Fig. 2. The overall control system architecture.
line qDi = 20 (m), and the rolling cart follows this line, and the
boundary conditions for the rolling cart system are restrict to be
−/6 ≤ qi ≤ /6 and −/9 ≤ q˙i ≤ /9 (rad/s), i = 1, 2, 3. The veloc-
ity of v1 is kept at 10 (m/s). The three-links rolling cart motion
dynamics are given by
D˙i = vi sin(qi − qDi ), q˙i = ci + gi(qi)i + d′i (67)
for i = 1, 2, 3, where v1 = 10,  c1 = 0, and g1 = 5(1 + 0.1
exp(− 0.4D1 − 0.5q1)), and vi = vi−1 cos(qi − qi−1) − (i/2)q˙i−1
sin(qi − qi−1), ci = (2/i)vi−1 sin(qi−1 − qi) − q˙i−1 cos(qi−1 − qi), and
gi = 5(1 + 0.1exp(− 0.4Di − 0.5qi)), i = 2, 3. Furthermore, i is the
control inputs, and di is the external disturbance and is assumed to
satisfy di ∈ L2[0, T], ∀ T ∈ [0, ∞), i = 1, 2, 3. It is assumed that delays
between links for control signal propagation are the same and are
taken as h = 0.5 (s). So, b = 3. From (67), we have
D¨i = v˙i sin(qi − qDi ) + civi cos(qi − qDi ) + i(t)qi(t − h) + gi(qi)vi
× cos(qi − qDi )i + d′ivi cos(qi − qDi ) = fi + i(t)qi(t − h) + Bii + di (68)
where fi = v˙i sin(qi − qDi ) + civi cos(qi − qDi ), Bi = gi( qi) vi cos(qi −
qDi ), di = d′ivi cos(qi − qDi ), and i(t) ≤ ˇ, for which d′i = 2 sin(t) and
 ˇ is an unknown but positive constant.
Fig. 3. A three-links rolling cart system.
Deﬁne the output tracking error as e1 = D − DD =
[D1 D2 D3]

3×1 − [DD1 DD2 DD3 ]3×1, where DDi is the desired
ith link perpendicular signed output reference distance, and the
tracking error vector as
e = [e1 e˙1 ]
 = [e1 e2 ]
 = x − xr (69)
where x = [x1 x2 ]

6×1 = [D D˙

]

6×1 and xr = [DD D˙

D]

6×1. Let
f = [f1 f2 f3], B = diag{B1, B2, B3},  = [1 2 3], (t) =
diag{ 1(t)  2(t)  3(t)}, and d = [d1 d2 d3]. Hence, we  can have
the following tracking error dynamic equation
e˙ = A0e + B0(f + B − q¨r + (t)q(t − h) + d) (70)
where
A0 =
⎡
⎢⎣
0(3) I(3)
0(3) 0(3)
⎤
⎥⎦ , B0 =
[
0(3)
I(3)
]
, C0 = [I(3) 0(3)] (71)
The ﬁlter L(s) is determined as L(s) = 64/(s + 2)6. How do we  synthe-
size an observer-based adaptive wavelet neural network tracking
control scheme  so that the system output D can asymptotically
track a given desired output DD in the sense of H∞ tracking perfor-
mance within a prescribed value  in the presence of the unknown
uncertain parameters, the unknown delayed state uncertainties,
and the external disturbances, and all signals in the overall system
are UUB ?
5.1. Solution
According to the design algorithm, the observer-based neural
adaptive control design to achieve H∞ tracking performance
is given by the followings: First, select  = 1, f = 0.01, B =
0.01, ˇF = 2.5, f = 0.1, B = 0.1, mf = 0.1, and mB = 0.1.
The initial conditions for system are chosen as q(0) = 0 and
Please cite this article in press as: W.-S. Yu, C.-C. Weng, An observer-based adaptive neural network tracking control of robotic systems,
Appl. Soft Comput. J. (2013), http://dx.doi.org/10.1016/j.asoc.2013.06.009
ARTICLE IN PRESSG ModelASOC-1990; No. of Pages 14
10 W.-S. Yu, C.-C. Weng / Applied Soft Computing xxx (2013) xxx–xxx
Fig. 8. The trajectories of the error states of the distances for the third joint with
the  attenuation level 0.3.
0 5 10 150
0.002
0.004
0.006
0.008
0.01
0.012
time(sec)
∧
ϑ
∧
ϑ
∧
ϑ
Fig. 9. The trajectories of the estimates ϑˆi, i = 1, 2, 3, of the joints with the attenu-
ation level 0.3.
0 5 10 15−250
−200
−150
−100
−50
0
50
time(sec)
Fig. 10. The trajectories of the control inputs h1 , s1 , and d1 of the joints with the
attenuation level 0.3.
0 5 10 15−140
−120
−100
−80
−60
−40
−20
0
20
time(sec)
τh 2
τ
s 2
τd 2
Fig. 11. The trajectories of the control inputs h2 , s2 , and d2 of the joints with the
attenuation level 0.3.
0 5 10 15−30
−25
−20
−15
−10
−5
0
5
time(sec)
Fig. 12. The trajectories of the control inputs h3 , s3 , and d3 of the joints with the
attenuation level 0.3.
0 5 10 15−40
−35
−30
−25
−20
−15
−10
−5
0
5
time(sec)
Fig. 13. The trajectories of the control inputs  i , i = 1, 2, 3, of the joints with the
attenuation level 0.3.
0 5 10 15−60
−50
−40
−30
−20
−10
0
10
time(sec)
θ  (in degrees)
θ  (in degrees)
θ  (in degrees)
Fig. 14. The trajectories of the i , i = 1, 2, 3, of the joints with the attenuation level
0.1.
0 5 10 15−5
0
5
10
15
20
25
30
time(sec)
D (m)
D (m)
D (m)
Fig. 15. The trajectories of the Di , i = 1, 2, 3, of the disturbances with the attenuation
level 0.1.
Please cite this article in press as: W.-S. Yu, C.-C. Weng, An observer-based adaptive neural network tracking control of robotic systems,
Appl. Soft Comput. J. (2013), http://dx.doi.org/10.1016/j.asoc.2013.06.009
ARTICLE IN PRESSG ModelASOC-1990; No. of Pages 14
12 W.-S. Yu, C.-C. Weng / Applied Soft Computing xxx (2013) xxx–xxx
0 5 10 15−45
−40
−35
−30
−25
−20
−15
−10
−5
0
5
time(sec)
τ
τ u
τ
Fig. 22. The trajectories of the control inputs h3 , s3 , and d3 of the joints with the
attenuation level 0.1.
0 5 10 15−50
−40
−30
−20
−10
0
10
time(sec)
τ
τ
τ
Fig. 23. The trajectories of the control inputs  i , i = 1, 2, 3, of the joints with the
attenuation level 0.1.
control. In addition, the proposed control scheme derived from
these estimates iteratively for achieving H∞ tracking purpose using
smaller the prescribed attenuation level has the ability to stabilize
the controlled plant and has better performance than that using
larger the prescribed attenuation level. In other words, the use of
the neural system with adaptation weights can indeed improve
the performance of the closed-loop system using smaller the pre-
scribed attenuation level (see Figs. 6–9 and 16–19 for both cases).
The main reason of the result is that the only use of updating law
for delayed state uncertainties cannot achieve an excellent track-
ing result as the system is subject to the controlled plant with plant
uncertainties (since the plant dynamics are conﬁguration depend-
ent) and time-varying disturbances. This is one of the important
motivation for the study. The results reveal that the proposed con-
trol scheme indeed improves the system performances including
0 5 10 15
0
5
10
15
20
25
time(sec)
0 0.5 1 1.5 2
15
16
17
18
19
20
21
time(sec)
∧
e11
 (m)( ρ =0.3)
e 11 (m)( ρ =0.3)
∧
e11
 (m)( ρ =0.1)
e 11 (m)( ρ =0.1)
Fig. 24. Comparisons of the eˆ1 and e1 with the attenuation levels 0.1 and 0.3.
0 5 10 150
5
10
15
20
25
time(sec)
0 0.5 1 1.5 2
15
16
17
18
19
20
21
time(sec)
∧
e2 1
 (m)( ρ =0.3)
e 21 (m)( ρ =0.3)
∧
e2 1
 (m)( ρ =0.1)
e 21 (m)( ρ =0.1)
Fig. 25. Comparisons of the eˆ2 and e2 with the attenuation levels 0.1 and 0.3.
0 5 10 150
5
10
15
20
25
time(sec)
0 0.5 1 1.5 2
15
16
17
18
19
20
21
time(sec)
∧
e31
 (m)( ρ =0.3)
e 31 (m)( ρ =0.3)
∧
e31
 (m)( ρ =0.1)
e 31 (m)( ρ =0.1)
Fig. 26. Comparisons of the eˆ3 and e3 with the attenuation levels 0.1 and 0.3.
convergence of the estimations and tracking errors, the smoothness
of the control inputs, and easy selection of the parameters of the
estimations. It seems that the robustness of the proposed control
scheme is excellent. In summary, the control input is bounded,
and the estimations of the control scheme and the gain of the
delayed state uncertainty will gradually approach a steady state
in which the plant follows the reference input with faster rising
time, little oscillations and tracking errors, and has a rather good
dynamical performance. The performance indices are deﬁned as
Ii =
√
e2
i1
+ e˙2
i1
, i = 1, 2, 3, and they are shown for the proposed
control scheme in Figs. 24–26, respectively, and that for the pro-
posed control scheme without wavelets in Figs. 27–29, respectively.
0 5 10 150
5
10
15
20
25
time(sec)
0 0.5 1 1.5 2
16
17
18
19
20
21
22
time(sec)
∧
e1  (m)( ρ =0.3)
e11 (m)( ρ =0.3)
∧
e1  (m)( ρ =0.1)
e 11 (m)( ρ =0.1)
Fig. 27. Comparisons of the eˆ1 and e1 for the proposed control scheme without
wavelets and with the attenuation levels 0.1 and 0.3.
Please cite this article in press as: W.-S. Yu, C.-C. Weng, An observer-based adaptive neural network tracking control of robotic systems,
Appl. Soft Comput. J. (2013), http://dx.doi.org/10.1016/j.asoc.2013.06.009
ARTICLE IN PRESSG ModelASOC-1990; No. of Pages 14
14 W.-S. Yu, C.-C. Weng / Applied Soft Computing xxx (2013) xxx–xxx
[22] C.K. Ahn, H∞ stability of neural networks switched at an arbitrary time, Inter-
national Journal of Artiﬁcial Intelligence 8 (2012) 38–44.
[23] C.-M. Lin, K.-N. Hung, C.-F. Hsu, Adaptive neuro-wavelet control for switching
power supplies, IEEE Transactions on Power Electronics 22 (2007) 87–95.
[24] F.-J. Lin, H.-J. Shieh, P.-K. Huang, Adaptive wavelet neural network control with
hysteresis estimation for piezo-positioning mechanism, IEEE Transactions on
Neural Network 17 (2006) 432–444.
[25] R.J. Wai, Development of new training algorithms for neuro-wavelet systems
on  the robust control of induction servo motor drive, IEEE Transactions on
Industrial Electronics 49 (2002) 1323–1341.
[26] C.D. Sousa, E.M. Hemerly, R.K.H. Galvao, Adaptive control for mobile robot using
wavelet networks, IEEE Transactions on Systems, Man, and Cybernetics – Part
B  32 (2002) 493–504.
[27] C.P. Tseng, A new viewpoint on risk control decision models for natural disas-
ters,  Natural Hazards 59 (2011) 1715–1733.
[28] C.W. Chen, GA-based adaptive neural network controllers for nonlinear sys-
tems, International Journal of Innovative Computing, Information and Control
6  (2010) 1793–1803.
[29] J.H. Park, S.H. Kim, Direct adaptive output-feedback neural controller for non-
afﬁne nonlinear system, IEE Proceedings – Control Theory and Applications 151
(2004) 65–72.
[30] I. Chairez, Wavelet differential neural network observer, IEEE Transactions on
Neural Networks 20 (2009) 1439–1449.
[31] A. Teel, L. Praly, Tools for semiglobal stabilization by partial state and output
feedback, SIAM Journal on Control and Optimization 33 (1995) 1443–1488.
[32] K.R. Lee, J.H. Kim, E.T. Jeung, H.B. Park, Output feedback robust H∞ control of
uncertain neural dynamic systems with time-varying delay, IEEE Transactions
on  Fuzzy Systems 8 (2000) 657–664.
[33] I. Daubechies, Ten Lectures on Wavelets, SIAM, Philadelphia, PA, 1992.
[34] N.E. Cotter, The Stone–Weierstrass theorem and its application to neural
networks, IEEE Transactions on Neural Network 1 (1990) 290–295.
[35] Y. Qussar, I. Rivals, L. Personnaz, G. Dreyfus, Training wavelet networks
for  nonlinear dynamic input–output modeling, Neurocomputing 20 (1998)
173–188.
[36] H.J. Uang, B.S. Chen, Robust adaptive optimal tracking design for uncertain
missile systems, Fuzzy Sets and Systems 126 (2002) 63–87.
[37] A. Germani, C. Manes, P. Pepe, A new approach to state observation of nonlin-
ear systems with delayed output, IEEE Transactions on Automatic Control 47
(2002) 96–101.
[38] S. Tonga, H.-X. Lib, W.  Wang, Observer-based adaptive neural control for SISO
nonlinear systems, Fuzzy Sets and Systems 148 (2004) 355–376.
[39] C.W. Chen, Stability analysis and robustness design of nonlinear systems: an
NN-based approach, Applied Soft Computing 11 (2011) 2735–2742.
[40] P.C. Chen, GA-based decoupled adaptive FSMC for nonlinear systems by a
singular perturbation scheme, Neural Computing and Applications 20 (2011)
517–526.
[41] C.W. Chen, Modeling, control and stability analysis for time-delay TLP sys-
tems using the fuzzy Lyapunov method, Neural Computing and Applications
20  (2011) 527–534.
[42] A. Isidori, A. Asolﬁ, Disturbance attenuation and H control via measurement
feedback in nonlinear systems, IEEE Transactions on Automatic Control 37
(1997) 1283–1293.
[43] J.K. Hale, S.M.V. Lunel, Introduction to Functional Differential Equations,
Springer-Verlag, NY, 1993.
[44] H.K. Khalil, Nonlinear Systems, Prentice-Hall, Englewood Cliffs, NJ, 1996.
的時間安排所欲聆聽之論文發表。另外，相關論文發表的時間皆儘量錯開，四
個或三個同時進行的研討會在同一會場不同的會議室，每個人均可參加有興趣
或較相近領域之論文發表，此點亦是我們自行舉辦各項研討會時，對場地安排
問題可供參考之處。另外，此次會議有一個與往常不同特點，即是每一場均為
90 分鐘，安排六篇至七篇論文報告，每一篇可討論十二分鐘左右，討論氣氛相
當踴躍，筆者除了報告論文外，也擔任 Methodologies and Applications II, 
16:30-18:00 之會議主席。 
 
筆者有幸獲得國科會之補助，前往大陸/天津參加本年度之 2013ICMLC 國
際會議並發表論文，在各方面均有相當豐富之收穫。筆者近年來一直致力於模
糊動態特性及類神經網路應用於觀測器及控制器的設計等，並應用於具不確定
性系統的機器人之手及腳的運動控制及輪型機器人相互軌跡追蹤控制等相關領
域之研究，因此與會期間，筆者曾就模糊動態、觀測器及控制器設計、機器人
軌跡追蹤方面分享並學習國外學者之研究方法及未來研究方向，以加強自己之
研究深度，並增廣見聞。對於某些較具應用價值之方法，則於該作者發表完後，
利用中場休息時間與作者討論，藉此，除可對某些作法深一層認識外，亦可利
用機會與國外學者建立友誼關係。 
 
會議中，共可歸納為工程應用及學習方式及程序，將目前與智慧型計算有
關的議題及研究的成果，如模糊系統、演算法計算、資料影像處理、通信介面
等，皆有詳細且完整的介紹，對於未來的研究方向，主講者也有諸多建設性的
建議及意見。而在研討會口頭發表場次，依筆者參加之後的心得，可歸納以下
幾點︰ 
 
1. 網路建模控制︰此次所發表的論文仍著重在網路建模的設計，且主要仍以數
學架構為主，輔以電腦模擬結果，此部分仍以影像處理為主，控制的應用反
而較少。 
2. 決策動態學習︰此部分可說是這次會議的重點，幾乎所有相關議題的論文對
權重的設計都有其突破，不同的觀點即有不同且新的創見，因而使筆者獲得
相當多之助益及新的見解。 
3. 模糊控制︰隨著模糊建模及動態的建立，運用於控制領域的論文相對的多了
起來，此次約有 11 個場次，筆者的論文即包含在這領域中。從動態學習中所
得到的建模值，轉變成控制器的參數值是主要的觀念，且多層建模即是多個
相同或不同的控制器作串聯或並聯的結果，因此可以得到較佳的響應輸出，
其中也有不少論文是與模糊系統相結合而得到類似不錯的結果。 
4. 最佳化結構之參考模型：此法為找出控制器結構之重要技巧，在不考慮有限
字元長度影響下時，本來是不需要考慮此問題的，因為目前此法均以狀態空
間來表示一個線性非時變系統，而一狀態系統可以有無窮多組相似表示式來
對應同一組輸出輸入關係，在有限字元長度下，找尋一重要結構卻是一個重
要的課題，相關研究亦出現於 IEEE 之期刊，筆者於此方面之研究甚為專精，
AN OBSERVER-BASED ADAPTIVE NEURAL NETWORK TRACKING
CONTROL FOR NONLINEAR SYSTEMS
Wen-Shyong Yu
Department of Electrical Engineering, Tatung University, Taipei, 10451 Taiwan
E-MAIL: wsyu@ctr1.ee.ttu.edu.tw
Abstract:
In this paper, an observer-based adaptive neural network
(OBANN) tracking control scheme is proposed for uncertain non-
linear systems with time-delays and external disturbances. The
adaptive neural network model is used to approximate the dy-
namics of the nonlinear system, while an observer-based control
scheme is to stabilize the system. By applying the adaptive neu-
ral dynamics, we can on-line tune the weights of the neurons of
the neural model and the bounds of the gains of delay states di-
rectly using linear analytical results. From Lyapunov criterion
and Riccati-inequality, it is shown that the stability of the closed-
loop system is guaranteed and the closed loop system signals are
uniform ultimate boundedness and achieve H∞ tracking perfor-
mance. Finally, a numerical example of a two-links rolling cart is
given to illustrate the effectiveness of the proposed control scheme.
Keywords:
Adaptive control, observer, neural model, Lyapunov criterion,
H∞ tracking performance.
1. Introduction
The neural-network-based control technique is an effective
design method to compensate the effects of nonlinearities, sys-
tem uncertainties and external disturbances, and to guarantee
system stability as well as improve the convergence and robust-
ness of the control system [2]. The successful key element is
the approximation ability, where the parameterized neural net-
work can approximate an unknown system dynamics through
learning technique. The training algorithms with adaptation ca-
pability for NN typically converge using a smaller number of it-
erations than the conventional neural networks [4]–[7]. Among
them, the training function in the second layer of NN is used
to enrich the mapping relationship between inputs and outputs
[4]. In [8], the authors explored the NN to deal with nonlinear-
ity and uncertainties of the servo control systems and [9] with
the complex dynamical systems owing to its fast learning prop-
erty and good generalization capability. Output feedback con-
trol scheme using an adaptive observer was proposed in [10] by
using the condition of linear dependence upon unknown param-
eters of the neural networks in the observer structure. Never-
theless, the filtering of the basis vectors will make the dynamic
order of the observer very large.
In this paper, an observer-based adaptive neural network
(OBANN) tracking control scheme is proposed using linear an-
alytical results instead of estimating nonlinear system functions
and the bounds of the gains of delay states. From Lyapunov
criterion and Riccati-inequality, the closed-loop system states
are uniformly ultimately bounded and the effect of the exter-
nal disturbance on the tracking error can be attenuated to any
prescribed level and consequently an H∞ tracking control is
achieved. Finally, a numerical example of a three-link rolling
robot as compared to our previous work [5] is given to illustrate
the effectiveness of the proposed control scheme.
2. Problem formulation
Consider the following dynamical equation of an nth order
MIMO nonlinear uncertain system with time-delays and exter-
nal disturbances:
⎧⎪⎪⎪⎪⎪⎨
⎪⎪⎪⎪⎩
x˙1i = x2i
.
.
.
x˙(n−1)i = xni
x˙ni = fi(x) + fdi(x(t−h)) +
∑p
j=1bij(x)uj + di(t)
x(t) = ϕ(t), t ∈ [−τ, 0]
(1)
for i = 1, . . ., n, where x = [x1 x2 · · · xn ] ∈ Rn is
the state vector of system assumed to be available for which
x

i = [x1i x2i · · · xni ] ∈ R
ni and n = n1 + n2 + · · · + nn,
fi(x), fdi(x), bij(x) are smooth unknown functions, di is un-
known external disturbances and is assumed to be bounded by
|di| ≤ di, where di is some positive constant and βii(x) are
1423
2013 IEEE978-1-4799-0260-6/13/$31.00 ©
Proceedings of the 2013 International Conference on Machine Learning and Cybernetics, Tianjin, 14-17 July, 2013
the NN approximation errors, then for any arbitrary positive bounded
constants 
f
, 
B
, there exist N1 inputs and N2 layers such that
‖f˜‖ ≤ 
f
, ‖B˜‖ ≤ 
B
(13)
for all x1,x2 ∈ Xn ⊂ Rn.
In order to tune the fˆ(x, ζ
f
) and Bˆ(x, ζ
B
) to achieve favorable
estimation of the system dynamic function, the Taylor expansion lin-
earization technique is employed to transform the nonlinear functions
Ω˜
f
and Ω˜
B
into partially linear forms. Then, we have
Ω˜
f
= E
f
m˜
¯
f
+O
f
σ˜
¯
f
+R
f
(14)
Ω˜
B
= E
B
m˜
¯
B
+O
B
σ˜
¯
B
+R
B
(15)
where E
f
= diag
{∂ω
f
∂m
f
· · ·
∂ω
f
∂m
f
}∣∣∣
m
f
=mˆ
f
∈ R
n×(4n4N2),
m˜
¯
f
= diag
{
m˜
f
· · · m˜
f
}
∈ R
(4n4N2)×(2n
2)
, E
B
=
diag
{∂ω
B
∂m
B
· · ·
∂ω
B
∂m
B
}∣∣∣
m
B
=mˆ
B
∈ R
n×(n4N2), m˜
¯
B
=
diag
{
m˜
B
· · · m˜
B
}
∈ R
(n4N2)×(n
2)
,
O
f
= diag
{∂ω
f
∂σ
f
· · ·
∂ω
f
∂σ
f
}∣∣∣
σ
f
=σˆ
f
∈ R
n×(4n4N2),
σ˜
¯
f
=diag
{
σ˜
f
· · · σ˜
f
}
∈ R
(4n4N2)×(2n
2)
,
O
B
= diag
{∂ω
B
∂σ
B
· · ·
∂ω
B
∂σ
B
}∣∣∣
σ
B
=σˆ
B
∈ R
n×(n4N2),
σ˜
¯
B
= diag
{
σ˜
B
· · · σ˜
B
}
∈ R
(n4N2)×(n
2)
, and R
f
, R
B
are
matrices of higher order terms, for which
∂ω
f
∂m
f
=
[[∂ω
f1
∂m
f
]
· · ·
[∂ω
f2n
∂m
f
]]
(2nN2)×(2nN2)
(16)
∂ω
f
∂σ
f
=
[[∂ω
f1
∂σ
f
]
· · ·
[∂ω
f2n
∂σ
f
]]
(2nN2)×(2nN2)
(17)
∂ω
B
∂m
B
=
[[∂ω
B1
∂m
B
]
· · ·
[∂ω
Bn
∂m
B
]]
(nN2)×(nN2)
(18)
∂ω
B
∂σ
B
=
[[∂ω
B1
∂σ
B
]
· · ·
[∂ω
Bn
∂σ
B
]]
(nN2)×(nN2)
(19)
4. Observer-based adaptive control design
Let the observer-based adaptive NN (ANN) tracking control law be
given by
τ =Bˆ
−1
(xˆ)(−fˆ(xˆ)−Keˆ−x¨r+τh+τs+τd) (20)
where K is chosen such that the eigenvalues of the matrix A1 
A0−B0K are all with negative real part, and τh , τs , τd are compen-
sators described later for uncertainties, disturbances, and delay gain
uncertainties, respectively. From (3) and (20), we have
e˙=A0e+B0
(
f(x)−fˆ (xˆ)+
b∑
j=1
Ψj(t)x(t−h)−Keˆ
+(B(x)−Bˆ(xˆ))τ+τ
h
+τs+τd + d
) (21)
For (21), we design the following observer to estimate the tracking
error vector: {
˙ˆe=A0eˆ−B0Keˆ+Ko(u− uˆ)
uˆ = C0eˆ
(22)
where C0 = [I(n) 0(n)] and Ko is chosen such that the eigenvalues
of the matrix A2  A0+KoC0 are all with negative real part. Then,
by replacing the state estimates, we have from (11) and (12)
fˆ(xˆ) = Ωˆ
f
ζˆ
f
(23)
Bˆ(xˆ) = Ωˆ
B
ζˆ
B
(24)
According to the universal approximation theorem, there exist both
optimal approximation parameters ζ∗
f
and ζ∗
B
such that fˆ∗(xˆ) and
Bˆ
∗
(xˆ) can approximate f(x) and B(x), respectively, as close as
possible. That is,
f(x) = Ω
f
(eˆ+ xr)ζ
∗
f
+ 
f
(25)
B(x) = Ω
B
(eˆ
1
+ xr )ζ
∗
B
+ 
B
(26)
Let the observation error be defined as e˜  e − eˆ. Then, we have
e˜ = x−xr − (xˆ−xr ) = x− xˆ. From (14), (15), (21), and (22), the
filtered observation error vector denoted by e˜F is given by
˙˜e=
(
A0−KoC0
)
e˜+B0
(
−Ωˆf ζ˜
f
+Ω˜f ζ˜
∗
f
+
b∑
j=1
Ψj(t)x(t−h)
−
(
Ωˆ
B
ζ˜
B
−Ω˜
B
ζ˜
∗
B
−
B
)
τ+
f
+τ
h
+τs+τd+d
) (27)
Note that although the right-hand side of (27) contains unknown pa-
rameters, we can obtain the vector e˜ through filtering u = x which
is available. The dynamic equation (27) is used for parameter estima-
tion. Hence, the augmented system can be obtained from (14), (15),
(22), and (3) as
˙¯e=Ae¯−B˜Ωˆf ζ˜
f
−B˜Ωˆ
B
ζ˜
B
τ+B˜
b∑
j=1
Ψj(t)x(t−h)
+B˜E
f
m˜
¯
f
ζ˜
∗
f
+B˜O
f
σ˜
¯
f
ζ˜
∗
f
+B˜E
B
m˜
¯
B
ζ˜
∗
Bτ
+B˜O
B
σ˜
¯
B
ζ˜
∗
Bτ+B˜ΔG(−fˆ(eˆ+ xr)−Keˆ−x¨r+τh+τs+τd)
+B˜(τ
h
+τs+τd)+B˜d (28)
where e¯ =
[
eˆ
e˜
]
, A =
[
A0 −B0K KoC0
0 A0 −KoC0
]
, B˜ = IbB0,
ΔF = R
f
ζ˜
∗
f
+
f
, and ΔG =
(
R
B
ζ˜
∗
B+B
)
Bˆ
−1
(xˆ) are lumped
uncertainties, for which Ib=[0(2n) I(2n)].
Assumption 1: Let the lumped uncertainties be bounded and their
bounds are necessary to be known in advance and satisfy ‖ΔF ‖ ≤ κ
f
and ‖ΔG‖ ≤ κ
B
, where κ
f
, κ
B
are given positive constants and
0 < κ
B
< 1.
3
1425
Proceedings of the 2013 International Conference on Machine Learning and Cybernetics, Tianjin, 14-17 July, 2013
trajectory is a straight line q
Di
= 20 (meter). Further, the boundary
conditions for the rolling cart system are restrict to be −π/6 ≤ q
i
≤
π/6 and −π/9 ≤ q˙
i
≤ π/9 (rad/sec), i = 1, 2, 3. Take v
1
as
10 (meter/sec). The three-links rolling cart motion dynamics are
given by
D˙i=visin(qi − qDi ), q˙i =ci+gi(xi)τi + d
′
i (42)
v
i
= v
i−1
cos(q
i
− q
i−1
)−
i
2
q˙
i−1
sin(q
i
− q
i−1
) (43)
ci =
2
i
vi−1sin(qi−1 − qi)− q˙i−1cos(qi−1 − qi) (44)
g
i
= 5(1 + 0.1exp(−0.4Di − 0.5qi )) (45)
for i = 1, 2, 3.
Take v
1
= 10, c
1
= 0 and g
1
= 5(1+0.1exp(−0.4D1 − 0.5q1)).
It is assumed that delays between links for control signal propagation
are the same and are taken as h = 0.5 (sec).
First, select Γ = 1, κ
f
= 0.01, κ
B
= 0.01, κ
βF
= 2.5,
γσf
= 0.1, γσB
= 0.1, γmf = 0.1, and γmB = 0.1. The initial
conditions for system are chosen as x(0) = 0 and parameter estima-
tions ζˆ
f
(0) = ζˆ
B
(0) = ϑˆi(0) = mˆ
¯
f
(0) = mˆ
¯
B
(0) = σˆ
¯
f
(0) =
σˆ
¯
B
(0) = 0.1. The input of the neural network is the link perpen-
dicular signed distance. Hence, we have n = 3. The neural network
used in the study can be characterized with the number of elements in
layers N1 = 2× n = 6 for estimation f and N1 = n = 3 for B, and
the number of the Wavelets N2 = 5.
Next, select the feedback gain and observer gain vectors K1 =
[0.2 2], K2=K3= [0.02 1], and Ko1 = [1 0.5], Ko2 =Ko3 =
[1 0.02] , respectively. Hence, K = diag{K1,K2,K3}3×6 and
Ko=diag{Ko1 ,Ko2 ,Ko3}6×3 such that the magnitudes of the ob-
server poles are larger than those of the controller poles and the char-
acteristic matrices A0 −B0K and A0 −KoC0 have roots all with
negative real parts.
We choose the prescribed attenuation levels 0.3 and 0.1 for per-
formance comparisons and the weighting matrices as Qi = I(4n),
ν = 0.3, γ
h
= 0.1, the update rates γi = 0.001, and the pre-
scribed attenuation levels ρi = 0.3, i = 1, 2, 3, such that the
Riccati-like equation (41) has a positive definite symmetric matrix
P = diag{P 1,P 2,P 3}, where
P 1=
⎡
⎢⎣
0.6954 1.4125 0.2430 0.1652
1.4125 5.7049 0.6954 0.6491
0.2430 0.6954 0.2704 0.2672
0.1652 0.6491 0.2672 0.4461
⎤
⎥⎦,P 2=
⎡
⎢⎣
0.6569 2.1594 0.2750 0.2023
2.1594 8.6713 1.1370 0.9392
0.2750 1.1370 0.3913 0.2674
0.2023 0.9392 0.2674 0.4799
⎤
⎥⎦
P 3=
⎡
⎢⎣
0.6965 1.9154 0.1807 0.1692
1.9154 8.8761 1.0173 1.2692
0.1807 1.0173 0.1933 0.7426
0.1692 1.2692 0.7426 0.5179
⎤
⎥⎦
and Qi = I(4n), ν = 0.3, γi = 0.0009, and ρi = 0.1, i = 1, 2, 3,
such that P = diag{P 1,P 2,P 3}, where
P 1=
⎡
⎢⎣
0.2343 0.1435 0.2326 0.3116
0.1435 0.2646 0.2254 0.1377
0.2326 0.2254 0.2936 0.2016
0.3116 0.1377 0.2016 0.2118
⎤
⎥⎦,P 2=
⎡
⎢⎣
1.0702 4.9213 0.2301 0.1627
4.9213 3.4120 1.3210 1.1452
0.2301 1.3210 0.2182 0.1569
0.1627 1.1452 0.1569 0.5473
⎤
⎥⎦
P 3=
⎡
⎢⎣
1.1702 3.3281 0.1520 0.2176
3.3281 3.5127 1.3210 1.1422
0.1520 1.3210 0.2318 0.1569
0.2176 1.1422 0.1569 0.4785
⎤
⎥⎦
In order to have a good approximation of threshold on initial param-
eter errors, we choose ν
i
= 0.3, γfi = 0.9, γgi = 0.9, γBi = 0.9,
i,  = 1, 2, 3.
Finally, the observer-based indirect adaptive neural H∞ tracking
control law (20) can be obtained from (33), (34), and (35), where τ
h
=
− 1
0.001
e¯PB˜, τs = −4αsgn(B˜

P e¯), and τ
d
= − 1
0.3
ϑˆiB˜

P e¯,
for which α=0.3+0.5‖− fˆ(xˆ)−xr −Keˆ‖+0.05. Then compute
the adaptive laws (29) and (30) to adjust the parameter vectors ωfi
and ωg
i
, i = 1, 2, 3, and gain of delayed state uncertainties from (36).
The performance indices are defined as Ii =
√
e21i + e˙
2
1i
, i =
1, 2, 3, and they are shown in Figs. 4, 5, and 6, respectively. It is
shown that the proposed control scheme can achieve favorable track-
ing performance, and the better tracking performance can be achieved
as specified attenuation level is chosen smaller.
0 5 10 15
0
5
10
15
20
25
time(sec)
0 0.5 1 1.5 2
15
16
17
18
19
20
21
time(sec)
∧
e1
1
 (m)(ρ=0.3)
e11(m)(ρ=0.3)
∧
e1
1
 (m)(ρ=0.1)
e11(m)(ρ=0.1)
Figure 4. Comparisons of the eˆ1 and e1 with the
attenuation levels 0.1 and 0.3.
0 5 10 15
0
5
10
15
20
25
time(sec)
0 0.5 1 1.5 2
15
16
17
18
19
20
21
time(sec)
∧
e2
1
 (m)(ρ=0.3)
e21(m)(ρ=0.3)
∧
e2
1
 (m)(ρ=0.1)
e21(m)(ρ=0.1)
Figure 5. Comparisons of the eˆ2 and e2 with the
attenuation levels 0.1 and 0.3.
6. Conclusion
This paper has presented an observer-based adaptive neural net-
work tracking control scheme for robot systems based on the H∞
5
1427
Proceedings of the 2013 International Conference on Machine Learning and Cybernetics, Tianjin, 14-17 July, 2013
國科會補助計畫衍生研發成果推廣資料表
日期:2013/09/29
國科會補助計畫
計畫名稱: 多機器人之視覺力迴饋自主循跡駕馭控制及避障之研究
計畫主持人: 游文雄
計畫編號: 100-2221-E-036-006-MY2 學門領域: 智慧型機器人
無研發成果推廣資料
Australia. 
(ii) Wen-Shyong 
Yu,＇＇An 
Observer-Based Adaptive 
Neural Network Tracking 
Control for Nonlinear 
Systems,＇＇Proceedings 
of the 2013 
International 
Conference on Machine 
Learning and 
Cybernetics, Vol. 3, pp. 
1423-1428, July 2013. 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次
 
其他成果 
(無法以量化表達之
成果如辦理學術活
動、獲得獎項、重要
國際合作、研究成果
國際影響力及其他
協助產業技術發展
之具體效益事項
等，請以文字敘述填
列。) 
本計畫已完成前導機器人和隨從機器人製作，並以影像分析前方是否有障礙物，
經由 C#程式處理，使前導機器人和隨從機器人達成循跡駕馭及橢圓軌跡避障演算
法。 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
