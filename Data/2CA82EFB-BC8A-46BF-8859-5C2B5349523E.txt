速運算的優點，卻不夠堅實，難以抵抗各種訊號處
理的破壞；後者則是先將原始多媒體資料依既定的
影像處理步驟轉換至頻譜領域，再藉由改變經轉換
後所得的係數值來嵌入浮水印的技術，最後將已嵌
入浮水印的數位資料加以還原為空間領域的原始
多媒體資料。雖然在原始多媒體品質上可能會差了
一點，但是能夠讓浮水印對於各種訊號處理的破壞
有較高的抵抗性。原始多媒體影像區塊(block)透過
轉換成頻譜領域後，將產生不同的頻譜(spectrum)
分佈，分別為低頻帶區、中頻帶區及高頻帶區，如
果選擇在低頻帶區加入浮水印，則浮水印會更為堅
實，但是此舉將會嚴重破壞影像的品質，倘若在高
頻帶區加入浮水印，能夠得到較好的影像品質，但
是浮水印將會顯得不夠堅實，因此兩相比較之下，
在過去大多數浮水印技術所選擇的是，將浮水印加
在 中 頻 帶 區 。 圖 2 為 DCT(Discrete cosine 
transform，離散餘弦轉換)影像頻譜領域分佈圖。另
外，比較常見的頻譜領域浮水印技術的論文，也有
許多著眼於利用小波轉換(DWT)的方式，來將數位
浮水印藏入多媒體資訊中。 
 
 
 
 
 
 
 
 
 
 
圖 2. DCT 頻譜分佈圖 
然而，大部分的浮水印演算法，主要都著重於
如何達到有效的認證，在如何能增進編碼效率，有
效的提高壓縮倍率等方面的問題，並未多加考慮。
因此本篇論文提出了一個新的浮水印演算法，取名
為 Compression Watermarking Algorithm，簡稱 CWA
演算法。透過 CWA 演算法，不僅可驗證多媒體影
像版權，在編碼效率方面也可大大提升。編碼過程
中，選擇在 run-length 上每一個 quantized-block 裡
的係數作調整，做為加入浮水印資訊係數，透過調
整係數，編碼端將需要較少的儲存空間，換句話
說，對整體而言，編碼效率可以提升，壓縮倍率一
旦提高，相對的，多媒體影像的傳輸時間減少，這
對現今多媒體通訊環境是有利的。 
 
2. CWA 演算法之數位浮水印技術 
傳統的脆弱型數位浮水印方法，只是可以驗證
並未達到可再壓縮的效果，因此本篇論文針對所提
出數位驗證的浮水印演算法，將朝著可以再壓縮的
目標來進行研究， 
由於大多數的影像處理，多半利用以 DCT 為
基礎的壓縮標準，因此 CWA 演算法(Compression 
Watermarking Algorithm)選擇在 DCT 處理後的量化
區塊(quantized-block)作調整。影像透過 DCT 量化
處理後，會產生每一個 8x8 像素值的區塊(block)，
也就是說每個 block 都有 64 個 quantized-block 係
數。由於經過量化處理，大部分的係數都是 0，特
別是在高頻帶的係數。因此影像的每一個量化區塊
對應浮水印每一個像素值，透過演算法來嵌入浮水
印。圖 3 為提出的 CWA 演算法嵌入浮水印的示意
圖。 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
   
 
 
 
 
 
圖 3. 提出的 CWA 演算法嵌入浮水印的示意
圖 
首先將原始影像切割成割成每個 8×8 像素的
影像區塊，之後每個 8×8 像素經過離散餘弦轉換
(DCT)，再利用量化(quantized)編碼得到量化區塊
(quantized-block)，當要隱藏一個浮水印位元至一個
quantized-block 時，我們將根據 Run-length 觀念調
整 quantized-block 裡的最後一個非零值及其前一項
係數。 
由於影像的每一個量化區塊對應浮水印每一
個像素值，因此 CWA 演算法在嵌入浮水印方面，
方法為計算 quantized-block 係數中奇數係數的總數
與浮水印作判斷。依據的判斷方程式為(1)。(1)中的 
E(Λ)是Λ＋1除於 2所得的餘數，Λ是 quantized-block
係數中奇數係數的總數，ϕ 是 quantized-block 係數。 
 
ϕ = 
⎩⎨
⎧
=Λ⊕
=Λ⊕−
1)(    
0)()1)((
Eif
Eifsign
ϖϕ
ϖϕϕ   (1) 
 
經由判斷方程式，假設浮水印值為 0，其對應
的 quantized-block 係數中奇數係數個數為偶數，則
不做任何改變，若個數為奇數，判斷最後非零值係
 DC 
低頻帶 
中頻帶 
高頻帶 
Image 
watermark 
CWA 
Watermarked image 
Zig-Zag 
Huffman 
Quantized-block 
DCT 
4. 實驗討論分析 
 透過以下實驗，我們針對所提出的演算法來測
試。 
4.1 靜態影像 CWA 效能評估 
4.1.1 影像品質 
在此階段，我們選擇 512×512 pixels 的灰階影
像 Lena、Baboon、Pepper，作初步模擬實驗測試，
所嵌入浮水印大小是 64×64 二位元影像(圖 6)。 
 
圖 6. 二位元浮水印 
 
(a) 
 
(b) 
圖 7. (a)Lena 未加浮水印，PSNR 為 37.8202，壓縮
約為 12.6 倍 
  (b)Lena 加入浮水印，PSNR 為 37.3612，壓縮
約為 13.4 倍 
圖 7 為 Lena 未加與加入浮水印的品質及壓縮
倍率比較。我們可以發現透過 CWA 演算法來嵌入
浮水印，壓縮倍率可以提升，雖然 PSNR 大約下降
0.46 dB 左右，然而就人類視覺而言，是感覺不出差
異性的。 
接著下來，繼續針對未加及加入浮水印的影像
加以實驗，以橫軸為壓縮倍率，縱軸為 PSNR，作
分析繪圖。圖 8 為針對 Lena 作分析的比較圖。 
 
圖 8. 比較 Lena 加入與未加入浮水印的分析圖 
透過圖 8，我們可以發現到兩條線其實是很靠
近的，這表示加入浮水印與不加入浮水印，PSNR
相差不大，代表著加入浮水印對於視覺影像品質衝
擊並不大。 
4.1.2 攻擊測試 
為了驗證所提出的 CWA 演算法，確實可偵測
以及指出有心者蓄意的竄改，我們透過程式做以下
的攻擊測試：裁切攻擊、竄改攻擊。 
圖 9 為影像加入浮水印後，經過裁切然後再萃
取出浮水印。我們可以由萃取出的浮水印，輕易的
發現影像被裁切過，並得知被裁切的位置。 
 
        
圖 9. 影像加入浮水印後，經過裁切，以及所萃取
出的浮水印 
圖 10 為影像加入浮水印後，經過竄改(右下角
黑色線框位置)然後再萃取出浮水印。可由萃取出的
浮水印，發現影像被竄改過，並得知被竄改的位置。 
        
 
 
 
圖 10. 影像加入浮水印後，經過裁切，以及所萃取
出的浮水印 
 
 
 
圖 16“akiyo＂前一百張視訊未加入浮水印與加入
浮水印比較圖 
 
4.2.2 攻擊測試 
為了驗證所提出的 CWA 演算法，確實可偵測
以及指出有心者蓄意的竄改，我們透過程式做以下
的攻擊測試：視訊遺失(frame lost)、Noise 等攻擊。 
為確保我們所提出的視訊 CWA 具有偵測那些
video frames 遺失， 我們以 frame removal 來測試
視訊遺失，圖 17 一個視訊遺失的例子，在這樣的
情況之下，將會預期得到如圖 17(b)的＂False alarm”
表示視訊的內容已有部份的遺落，video frame 對應
的 watermark 將會顯現 random noise。 
 
圖 17.(a)“Foreman＂video sequence 遺落一 frame 
(b)萃取浮水印顯示遺落一個 frame 相對應的
地方會顯現 random noise 
 
 
基本上一個 fragile watermarking 演算法必須對
各種攻擊要很靈敏的反應。因此，我們以亂數更改
幾個 byte 來做 noise 攻擊測試，實驗結果顯示相對
應被更改的地方，萃取出來的浮水印會出現 noise
如圖 18 所示。 
                         
圖 18 從被隨意更改幾個 bytes的 noise攻擊的
“Foreman＂萃取出來的的浮水印 
5. 結論  
透過實驗結果證實，本論文所提出了新的易碎
型浮水印技術-CWA 演算法(Compression  
Watermarking Algorithm)，不僅可驗證影像和
視訊且能增加其壓縮率，在針對視覺品質方面衝擊
較低並且對影像上的變動極具敏感度。更進一步來
說，可在不過分影響影像品質的條件下，比傳統的
壓縮提升約 6%再壓縮率。因此，以 DCT 轉換為基
礎的相關影像壓縮，將可因此得到驗證及再壓縮效
果。 
 
參考文獻 
[1] Ping Wah Wong, Nasir Memon, “Secret and Public 
Key Image Watermarking Schemes for Image 
Authentication and Ownership Verification” IEEE 
Transaction on Image Processing, Vol. 10, No. 10, 
Oct.2001, 1593-1601 
[2] Yeung, M.M., Mintzer, F.,"An invisible 
watermarking technique for image verification”, 
Proceedings of 1997 International Conference on 
Image Processing, Oct. 1997, Vol. 2, 680-683. 
[3] Min Wu, Bede Liu, "Watermarking for image 
authentication", International Conference on 
Image Processing, 4-7 Oct. 1998, Vol. 2, 1-10. 
[4] 陳同孝, 張真誠, 黃國峰, “數位影像處理技術”, 
旗標出版社, 2003, 12 月. 
[5] 戴顯權, 陳瀅如, 王春清, “多媒體通訊原理標
準與系統”, 紳藍出版社,  2002, 2 月. 
 
 
 
此計畫所提出的演算法有在國際期刊 JEI 
(Journal of Electronic Imaging)上發表，目前
已經被接收，在近期會刊登出來，題目為“New 
Watermarking Algorithm with Data 
Authentication and Reduction for JPEG 
Image”，Accepted in Journal of Electronic 
Imaging, Vol. 17, No. 3, Page 033009, 
2008(SCI) 
此篇 Paper 附帶在下方 
 
 
 
 
 
 
 
 
 
 
 
 
greater or lesser extent, to the best of the current 
authors’ knowledge, none of them actively address the 
data reduction issue. Accordingly, this study proposes a 
novel compression-watermarking algorithm 
(designated as CWA), which not only protects the 
integrity of the image contents, but also reduces its size. 
CWA employs a run-length coding approach to select 
the specific DCT-coefficient at which to embed the 
watermark information. In the embedding process, the 
absolute value of the chosen DCT coefficient is 
modified in such a way that the total number of 
run-length symbols in each DCT block is reduced. As a 
result, the encoder requires fewer bits to encode the 
DCT block, and hence the size of watermarked block is 
reduced. In other words, CWA can reduce both the 
transmission time and the storage space requirements 
of digital images.  
The remainder of this paper is organized as 
follows. Section 2 presents a detailed review of CWA, 
and describes the main steps for watermark embedding 
and extraction.  Section 3 presents the results 
obtained from a series of tests designed to verify the 
proposed watermarking. Section 4 demonstrates the 
size reduction of watermarked image obtained by the 
proposed watermarking algorithm. Finally, Section 5 
provides some brief concluding remarks. 
 
2. Proposed watermark embedding scheme  
2.1 CWA algorithm 
To ensure compatibility with modern 
compression standards, which generally employ 
DCT-based coding approaches, CWA operates at the 
DCT quantized-block layer, within which each spatial 
8 × 8 pixel block is represented by 64 quantized 
DCT-coefficients. Figure 1 illustrates the various 
domains in which a quantized DCT-block can be 
represented. The first domain in the block-layer is the 
coefficient domain, containing 8× 8 integer entries, 
where each entry denotes the corresponding quantized 
DCT coefficient. In general, many of these entries 
have a value of zero; particularly those which 
correspond to spatial high frequencies. In the 
run-length domain, the non-zero AC coefficients are 
re-ordered in a zigzag scanning form and are 
subsequently represented by a tuple (run, level), where 
the run is equal to the number of zeros preceding a 
certain coefficient and the level is equal to the value of 
the coefficient. In the codeword domain, the (run, 
length) tuples are represented by variable-length 
codewords (VLCs). The codewords for a single 
DCT-block are terminated by an end of block (EOB) 
marker.  
The CWA scheme proposed in this study is 
designed in the coefficient domain using the 
DCT-based standard. Given a quantized block q, the 
objective of CWA is to insert a watermark bit ϖ  at a 
specific location within the block. The watermark 
embedding procedure commences by applying a 
run-length selection strategy to determine the specific 
DCT-coefficient in q at which to embed the 
watermarked bit,ϖ . The run-length selection strategy 
takes into account the requirements for size reduction, 
perceptual transparency and sensitivity to tampering 
attack by specifically choosing the final non-zero 
coefficient in q (as identified in a zigzag scan) as the 
location at which to embed the watermarkϖ .  Let ϕ  denote the selected DCT-coefficient. In embedding 
the watermark, ϕ  is modulated to ϕ  in accordance 
with Eq. (1), resulting in a watermarked block, wq , i.e. 
ϕ =
⎩⎨
⎧
=Λ⊕
=Λ⊕−
1)(     
0)()1)((
Eif
Eifsign
ϖϕ
ϖϕϕ
    (1)              
where sign(ϕ ) indicates the sign of ϕ , i.e. positive or 
negative, and ϕ  denotes the absolute value ofϕ ; E 
(Λ ) = (Λ +1) mod 2, and Λ  is the number of odd 
value coefficients in q. 
As discussed above, CWA employs a run-length 
selection strategy to select an appropriate location at 
which to embed the watermark information. The 
run-length selection strategy is specifically chosen here 
in order to satisfy the requirement for size reduction. 
The requirement is discussed in more detail as follows. 
From Eq. (1), it can be inferred that the number of 
run-length symbols is likely to reduce following the 
watermarking process since when a watermark is 
embedded in a block, there exists a finite possibility 
that the value of the final non-zero DCT coefficient 
will be modified to “0”. 
 
 
 
2.2 Application of CWA in JPEG coefficient 
domain 
2.2.1 Watermark embedding 
To demonstrate the image watermarking 
capabilities of CWA, this section discusses its 
application to the watermarking of standard JPEG 
format test images. Figure 2 presents a schematic 
illustration of the watermark insertion procedure. An 
assumption is made that the image to be watermarked 
has a size of 512×512. Hence, each frame contains a 
total of N=4096 quantized DCT-blocks. Furthermore, 
the watermark is assumed to be a 64×64 binary image. 
Therefore, the number of watermarked bits is 
equivalent to the number of quantized DCT-blocks in 
the image. In the embedding process, every four 
watermark bits are grouped into a single watermark 
the extraction process, the extracted watermark bitmap 
will be damaged. Note that CWA specifically chooses 
the MD5 function as the basis for the watermark 
embedding and extraction procedures since its 
properties are such that any change in its inputs results 
in a significant change in the output digest. As a result, 
illegal modifications to the watermarked image will 
cause the extracted watermark to resemble random 
noise.  
 
3. Experimental Results 
A series of experimental simulations were 
performed to evaluate the quality of the watermarked 
image and to assess the authentication and data 
reduction capabilities of CWA. As shown in Fig. 4, the 
original watermark was in the form of a 64×64 binary 
image. The simulations were performed using standard 
test images.  
3.1  Evaluation of Image Quality 
The visual quality of each watermarked image 
was quantified by computing its peak signal-to-noise 
ratio (PSNR) in accordance with   
  PSNR=
MSE
255log10
2
10 ,                   (6) 
2
1
0
1
0
),(),(1 lkIlkI
MN
MSE
M
k
N
l
w∑∑−
=
−
=
−=     (7)  
 
DCT
Embedding 
WatermarkQ
Entropy
Encoding
Watermarked
Quantized
Block
MD5
K
12710 b,...,b,b 311716 b,...,bb ⊕⊕⊕
473332 b,...,bb ⊕⊕⊕
634948 b,...,bb ⊕⊕⊕
1,iw
2,iw
3,iw
⊕
⊕
⊕
⊕
1510 b,...,bb ⊕⊕⊕
Watermark
3210 ,i,i,i,i w,w,w,w
)( ,nis
)( ,niw
w
i,3
w
i,2
w
i,1
w
i,0 BBBB
0,iw
1 0
IV
embedded bits
Init
 
Fig. 2  Schematic illustration of CWA watermark insertion procedure. 
 
VLD 1−Q IDCT
Extracting
Watermark
Watermarked
Block
MD5
K
Watermark
12710 b,...,b,b
3,2,1,0, ,,, iiii wwww
1510 b,...,bb ⊕⊕⊕
311716 b,...,bb ⊕⊕⊕
473332 b,...,bb ⊕⊕⊕
634948 b,...,bb ⊕⊕⊕
⊕
⊕
⊕
⊕
0,is
1,is
2,is
3,is
w
i
w
i
w
i
w
i BBBB 3,2,1,0, ,,,
IV
i.3i.2i.1i.0 s,s,s,s
1 0
Init
Selector
 
Fig. 3  Schematic illustration of proposed watermark extraction procedure. 
 
  
Fig. 7  Image quality of original and watermarked Lena image as function          Fig. 8  Image quality of original and watermarked Baboon as 
     of compression ratio.                                                     function of compression ratio. 
3.2 Image Authentication 
A series of attacking tests were performed to evaluate 
the ability of CWA to detect and localize changes in the 
JPEG image content.  
z Wrong key test 
One of the inputs to the MD5 hash function is the 
secret key, K. The evaluation results (not shown) revealed 
that without this key, the watermark extraction process 
generated only random noise.  
z Tampering attack 
Figure 9(a) presents a watermarked Baboon image in 
which the mouth has been replaced by a portion of pepper. 
The watermark extracted from the corresponding region is 
noticeably damaged. Figure 10(a) illustrates a watermarked 
Lena image in which the right eye has been replaced by that 
of Tiffany. The watermark extracted from the corresponding 
region is noticeably damaged. Hence, it is apparent that the 
CWA watermark is highly sensitive to tampering 
modification. Figure 11(a) shows a watermarked Lena 
image in which the two areas within the white rectangle and 
black rectangle have been tampered, respectively. The white 
one has been replaced by the corresponding portion of the 
original image and the black one has been cropped. As 
shown in Figure 11(b), the tampered area of the image is 
clearly visible in the extracted watermark. 
z Recompression attack 
To assess the ability of CWA to identify recompression 
attacks, the watermarked Lena image shown in Fig. 6(a) was 
recompressed at compression ratios of 10 and 30, 
respectively. The experimental results (not shown) revealed 
that the watermark extraction process produced only random 
noise in both cases.  
 
z Noise attack 
To evaluate the capability of CWA to detect noise 
attacks, simulations were performed in which a 
watermarked image was transmitted over a noisy channel 
simulated using a Gaussian random noise generator. Figures 
12(a) and 12(b) show the watermarks extracted from images 
attacked by interference noise with bit error rates of 10-2 and 
10-3, respectively. In both cases, the watermarks are 
noticeably damaged, indicating the ability of CWA to detect 
noise attacks in error-prone transmission systems. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
(a)                                     (b) 
Fig. 9 (a) Tampering modification to the watermarked Baboon image; (b) watermark extracted from tampered image. 
4 Size reduction of watermarked image 
To evaluate the size reduction rate of image after 
adopting the proposed watermarking algorithm, we use 
the term of WSR (watermarked size reduction) to 
represent its performance. The WSR is computed using 
the equation: 
  %100WSR ×−=
N
WN
S
SS
,             
(8) 
where NS  and WS  are the file sizes of the 
non-watermarked image and the watermarked image, 
respectively.  
Table 1 compares the file sizes of the 
non-watermarked and watermarked images considered 
in the present study. In general, it is observed that the 
average overall WSR is 6.3% for a compression ratio 
of CR=13.2. In general, it is apparent that the proposed 
watermarking schemes enhance the watermarked size 
reduction (WSR). The reason for this is that our 
scheme achieves the reduction in the number of 
run-length symbols. For example in Fig. 1, a total of 6 
run-length symbols exist prior to embedding the 
watermark bit, i.e. (0,74), (0,10), (0,5), (0,4), (0,3) and 
(3,1). However, once the watermark bit “0” has been 
embedded in the block,  
the number of run-length symbols reduces to 5, i.e. 
(0,74), (0,10), (0,5), (0,4) and (0,3). Hence, the 
watermark embedding process reduces the volume of 
code information required to encode the run-length 
symbols and thus achieves the size reduction. Thus, we 
can verify that the watermarked size is likely to reduce 
following the watermarking process since when the 
watermark bits are inserted in the blocks of DCT-based 
image, there exists a finite possibility that the value of 
the final non-zero DCT coefficient will be modified to 
“0”.  
Figure 13 shows the variation of the WSR value 
with the compression ratio (CR=1~20) for each of the 
six test images. It is apparent that the value of the WSR 
increases as the compression ratio increases. This 
result is to be expected since the possibility that the 
value of the final non-zero coefficient in each 
DCT-block is 1 or -1 increases as the compression ratio 
is increased. Accordingly, there is a greater probability 
that these coefficients will be modified to a value of 0 
during the watermarking process, and therefore the 
number of run-length symbols (and hence the volume 
of coding data required) is reduced.   
 
 
Fig. 13 Variation of WSR with compression ratio for CWA. 
 
5. Conclusions 
This paper has proposed a simple yet effective fragile 
compression-watermarking algorithm, designated as 
CWA, which not only enables the authentication of 
JPEG images, but also reduces the size of watermarked 
image. The simulation results have shown that the 
average PSNR values of the image content 
watermarked using CWA reduce by approximately 0.4 
dB. The results have also confirmed that CWA is 
capable of establishing the integrity of data 
compressed using the JPEG codec. Significantly, the 
use of a run-length selection strategy to determine the 
specific locations at which to embed the watermarked 
bits yields an average of 6.3% in the WSR when 
applied to standard JPEG test images. CWA makes a 
significant contribution to the field of fragile 
watermarking schemes. The data reduction capability 
of CWA renders it particularly suitable for the 
watermarking of various image and video applications, 
such as digital cameras, video surveillance, and so 
forth. 
 
Image Authentication in the DCT Domain” 
Information and Communication Technologies, 
2006. Vol. 1, 24-28 April, 2006, pp.2024 – 2029. 
[24] H. M. Liu, J. F. Huang, J. W. Huang, D.R. and Shi, 
Y.Q. (2002): A robust DWT-based blind data 
hiding algorithm. Proc. of IEEE on Circuits and 
Systems, (2):672 - II-675. 
[25] Hu, J., J. Huang, D. Huang, and Y.Q. Shi, “A 
DWT-Based Fragile Watermarking Tolerant of 
JPEG Compression,” Digital Watermarking, First 
International Workshop, Nov. 21-22, 2002,  
pp.179-188. 
[26]H. J. He, J. S  Zhang and H. M. Tai “A 
Wavelet-Based Fragile Watermarking Scheme for 
Secure Image Authentication” Springer Berlin / 
Heidelberg, Vol. 4283, 2006, pp. 422-432. 
[27] Cox, I.J. and Miller, M.I. (2002): The first 50 
years of electronic watermarking. Journal of 
Applied Signal Processing, (2):126-132. 
[28]Inoue, H., Miyazaki, A. and Katsura, T. (2000): 
Wavelet-based watermarking for tamper proofing 
of still images. Proc. Int. Symposium on Image 
Processing, (2): 88-91. 
 
 
June 18, 2008, 13:20-15:20 
A08: Workshop on Frontiers of Information Technology (II) 
A09: Identification for Optimization in Nonlinear Systems, 8 
A10: Quantitative Management of Technology (II), 8 
A11: Models and Algorithms for Optimization, 8 
A12: Information Networking and Applications, 8 
A13: Applied Statistics and Intelligent Computing, 8 
A14: E-Commence and Logistics Management, 8 
 
June 18, 2008, 15:40-17:40/18:00 
A15: Workshop on Frontiers of Information Technology (III) (15:40-18:00) 
A16: Innovation in Information Hiding Technology, 8 
A17: Advanced Image Recognition and Retrieval (15:40-18:00), 9 
A18: Fuzzy System and Fuzzy Control (15:40-18:00), 9 
A19: Design and Implementation of Control Systems (15:40-18:00), 9 
A20: Innovated Computation and Its Applications, 8 
A21: Innovative Computing for Image Analysis, 8 
 
June 19, 2008, 10:30-12:00 
B01: Innovative Embedded Computing (II), 6 
B02: Service-oriented E-Commerce, 6 
B03: Novel Approaches to Pervasive Applications, 6 
B04: Intelligent Systems and Applications (I), 6 
B05: Computer Networking, 6 
B06: Mathematical Analysis of Information on Biomedical Systems, 6 
B07: Location-based Logistics Systems Using GIS, 6 
B22: Intellectual Systems and Interfaces, 6 
 
June 19, 2008, 13:20-15:20 
B08: Advanced Systems of Control and Image Recognition, 8 
B09: Particle Swarm Optimization: Theories and Applications, 8 
B10: Optimization and Decision Making in Management, 8 
B11: Intelligent Measurement, Diagnosis and Control, 8 
B12: Advanced Control Theories and Applications, 8 
B13: Statistical Signal Processing and Intelligent Signal Processing, 8 
B14: Applications of Modeling and Optimization, 7 
 
June 19, 2008, 15:40-17:40/18:00 
B15: Innovative Optimization Methods in Finance and Logistics, 8 
B16: Computing in Manufacturing Process Control, 8 
