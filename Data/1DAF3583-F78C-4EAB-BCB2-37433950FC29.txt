路徑，借此提高達成率。 
中文關鍵詞： 網路管理、虛擬網路、服務等級協議、達成率、階層式管
理、網路虛擬化、NetFPGA、以政策為基礎之網路管理、SO-
SPF 
英 文 摘 要 ： With the rapid development of network technology and 
scale, it is hard to handle each device as the 
previous management； hence, it is necessary to have 
a powerful management system to help administrators 
manage the network. In order to build a new network 
on the current and complex network architecture, 
technologies about virtual machine and cloud 
computing are developing quickly. Some enterprise 
networks or network providers begin to use resource 
on the cloud and manage network through virtual 
network technology. Besides, providing customers a 
stable service quality is even highly demanded than 
before. SLA is a standard for QoS protection. 
Although SLA can provide QoS protection, violation 
happens sometimes. Nowadays, there are some 
mechanisms to avoid violation, but the costs are too 
high, for instance, physical links. As a result, how 
to combine SLA with virtual network for different 
virtual networks to support each other under the 
circumstance of insufficient resources is worthy of 
further research. 
In the first year, this project presents Hierarchical 
Management System of Virtual Network (HMSVN) 
architecture which integrates the architecture of 
network virtualization and the features of 
hierarchical network management. It is also 
implemented on NetFPGA platform to provide a solution 
for network management for enterprise network or 
large scale network. The system architecture is 
divided into two components: managing center and 
managed device. Managers can control the system 
through a web-based managing interface and setup 
NetFPGA on managed devices which communicate through 
OpenFlow Protocol. There are some experiments to 
demonstrate the isolation of Virtual Network； 
furthermore, network flows can be controlled by 
policies. In the second year, this project integrates 
行政院國家科學委員會補助專題研究計畫 ■成果報告   
□期中進度報告 
 
網路虛擬化架構之研究與建置 
子計畫四：設計與實作一虛擬化網路之管理平台 
 
 
計畫類別：□個別型計畫   ■整合型計畫 
計畫編號：NSC 99－2219－E－006－003 
執行期間：98年 8 月 1  日至 100  年 7 月 31  日 
 
執行機構及系所：國立成功大學電機工程系 
 
計畫主持人：謝錫堃 教授 
共同主持人：周立德 教授 
計畫參與人員：黃聖維、謝聖鴻、呂學儒、楊曜宗、陳懿首 
                楊俊彥、張文沛、張德勤、陳暉凡、 
 
 
 
成果報告類型(依經費核定清單規定繳交)：□精簡報告  ■完整報告 
 
本計畫除繳交成果報告外，另須繳交以下出國心得報告： 
□赴國外出差或研習心得報告 
□赴大陸地區出差或研習心得報告 
□出席國際學術會議心得報告 
□國際合作研究計畫國外研究報告 
 
 
處理方式：除列管計畫及下列情形者外，得立即公開查詢 
            □涉及專利或其他智慧財產權，□一年■二年後可公開查詢 
 
中   華   民   國  100  年 8  月  15  日 
 
 
II 
 
3.7 系統實作 .................................................................................................................................................. 42 
3.7.1 系統架構 ......................................................................................................................................... 42 
3.7.2 系統功能 ......................................................................................................................................... 45 
3.8 實驗與討論 .............................................................................................................................................. 50 
3.8.1 情境一：管理者之管理 ................................................................................................................. 50 
3.8.2 情境二：VN管理 .......................................................................................................................... 53 
3.8.3 情境三：政策管理 ......................................................................................................................... 56 
3.8.4 情境四：階層式 VN及政策管理 ................................................................................................. 62 
第 4 章 在NetFPGA上虛擬網路管理系統中服務等級契約達成率之研究 ........................................................................................................ 63 
4.1 系統架構 .................................................................................................................................................. 63 
4.2 管理平台之模組功能與架構 .................................................................................................................. 65 
4.2.1. Web GUI Module ............................................................................................................................ 66 
4.2.2. SLA Module .................................................................................................................................... 67 
4.2.3. Virtual Network Module ................................................................................................................. 69 
4.2.4. Violation Detection Module ............................................................................................................ 70 
4.2.5. Monitor Module .............................................................................................................................. 71 
4.2.6. Admin Module ................................................................................................................................ 73 
4.3 系統運作流程 .......................................................................................................................................... 73 
4.3.1. 資料傳遞符號之定義與內容 ......................................................................................................... 74 
4.3.2. 系統功能模組運作流程 ................................................................................................................. 74 
4.3.3. Violation Detection Module機制運作流程 ................................................................................... 78 
4.3.4. SLA Module機制運作流程 ........................................................................................................... 80 
4.4 系統實作 .................................................................................................................................................. 83 
4.4.1 實驗架構 ......................................................................................................................................... 84 
4.4.2 管理中心功能 ................................................................................................................................. 86 
4.5 實驗與討論 .............................................................................................................................................. 91 
4.5.1 情境一：虛擬網路管理 ................................................................................................................. 92 
4.5.2 情境二：服務等級契約管理 ......................................................................................................... 94 
4.5.3 情境三：動態路徑改變機制 ......................................................................................................... 94 
4.5.4 情境四：在 SPF機制中發生違約 ................................................................................................ 95 
4.5.5 情境五：在 SO-SPF機制中發生違約 .......................................................................................... 99 
4.5.6 情境六：SO-SPF機制與其它機制比較 ..................................................................................... 102 
第 5 章 結論 .................................................................................................................................................................................................................................... 106 
參考文獻 ............................................................................................................................................................................................................................................ 107 
國科會補助專題研究計畫成果報告自評表 ....................................................................................................................................................................... 112 
國科會補助計畫衍生研發成果推廣資料表 ....................................................................................................................................................................... 115 
  
IV 
 
圖 42 新管理者所在之階層 .............................................................................................................................. 52 
圖 43 建立新 VN ............................................................................................................................................... 53 
圖 44 新 VN所在之階層 .................................................................................................................................. 54 
圖 45 不同 VN之網路流量查詢 ...................................................................................................................... 55 
圖 46 監測 VN內之 HTTP流量 ...................................................................................................................... 55 
圖 47虛擬網路管理實驗之架構圖 ................................................................................................................... 56 
圖 48 實驗六 VN2傳輸速率圖 ......................................................................................................................... 57 
圖 49 實驗六 VN2傳輸量總計圖 ..................................................................................................................... 57 
圖 50 頻寬監測及政策測試實驗之架構圖 ...................................................................................................... 58 
圖 51 VN內兩流量變化監測圖 ........................................................................................................................ 58 
圖 52 流量配額限制之傳輸速率圖 .................................................................................................................. 59 
圖 53 定時定量流量管理政策實驗之架構圖 .................................................................................................. 60 
圖 54 定時定量流量管理實驗之傳輸速率圖 .................................................................................................. 60 
圖 55定時定量流量管理實驗之配額使用量變化圖 ....................................................................................... 60 
圖 56定時定量流量管理實驗設定異常之傳輸速率圖 ................................................................................... 61 
圖 57 定時定量流量管理實驗設定異常之配額使用量變化圖 ...................................................................... 61 
圖 58 階層式 VN及政策管理實驗之架構圖 .................................................................................................. 62 
圖 59系統運作及架構圖 ................................................................................................................................... 64 
圖 60管理平台之功能模組 ............................................................................................................................... 65 
圖 61 管理平台功能模組與架構 ...................................................................................................................... 66 
圖 62 Web GUI模組功能 ................................................................................................................................... 67 
圖 63 SLA模組功能........................................................................................................................................... 67 
圖 64 Virtual Network模組功能 ........................................................................................................................ 68 
圖 65 Violation Detection模組功能 ................................................................................................................... 70 
圖 66 Monitor模組功能 ..................................................................................................................................... 72 
圖 67 Admin模組功能 ....................................................................................................................................... 74 
圖 68 系統模組運作流程 .................................................................................................................................. 77 
圖 69 SLA與 Violation Detection模組功能圖 ................................................................................................. 78 
圖 70 Violation Detection 模組運作流程圖 ...................................................................................................... 79 
圖 71違約時間與懲罰權重轉換 ....................................................................................................................... 80 
圖 72 SLA模組運作流程圖............................................................................................................................... 81 
圖 73 ωb與 ωr比例值和權重轉換 ..................................................................................................................... 82 
圖 74 路徑選擇實例圖 ...................................................................................................................................... 83 
圖 75 實驗環境架構圖 ...................................................................................................................................... 84 
圖 76 系統概觀圖 .............................................................................................................................................. 86 
圖 77 系統登入畫面 .......................................................................................................................................... 87 
圖 78 管理者相關資訊 ...................................................................................................................................... 87 
圖 79 虛擬網路與 IP CLASS相關資訊 ........................................................................................................... 88 
圖 80 虛擬網路新增與修改介面 ...................................................................................................................... 88 
圖 81 IP CLASS新增與修改介面 ..................................................................................................................... 89 
圖 82 被管理節點資訊 ...................................................................................................................................... 89 
圖 83 實體線路資訊 .......................................................................................................................................... 89 
圖 84 服務等級契約相關資訊 .......................................................................................................................... 90 
VI 
 
表目錄 
表 1 Policy資料表結構 ...................................................................................................................................... 21 
表 2 VN資料表結構 .......................................................................................................................................... 22 
表 3 Manager資料表結構 .................................................................................................................................. 23 
表 4 VN_Manager_mapping資料表結構 .......................................................................................................... 24 
表 5 OF_switch資料表結構............................................................................................................................... 25 
表 6 Managed_Device資料表結構 .................................................................................................................... 25 
表 7 Device_port資料表結構 ............................................................................................................................ 26 
表 8 Link資料表結構......................................................................................................................................... 26 
表 9 Log_nms資料表結構 ................................................................................................................................. 27 
表 10 Log_policy資料表結構 ............................................................................................................................ 27 
表 11 Log_vn資料表結構 .................................................................................................................................. 28 
表 12 Log_device資料表結構 ........................................................................................................................... 28 
表 13 Log_snmp資料表結構 ............................................................................................................................. 29 
表 14 Log_manager資料表結構 ........................................................................................................................ 30 
表 15 管理者認證狀態 ...................................................................................................................................... 33 
表 16政策分類 ................................................................................................................................................... 33 
表 17政策觸發條件 ........................................................................................................................................... 34 
表 18政策動作 ................................................................................................................................................... 34 
表 19操作之回傳值 ........................................................................................................................................... 34 
表 20系統狀態代碼 ........................................................................................................................................... 34 
表 21被管理端設備狀態代碼 ........................................................................................................................... 35 
表 22管理中心之軟硬體設備 ........................................................................................................................... 43 
表 23被管理端之軟硬體設備 ........................................................................................................................... 43 
表 24系統開發環境 ........................................................................................................................................... 43 
表 25 被管理端設備列表 .................................................................................................................................. 47 
表 26 SLA_contract資料表結構 ........................................................................................................................ 68 
表 27 VN資料表結構 ........................................................................................................................................ 69 
表 28 VN_Device資料表結構 ........................................................................................................................... 69 
表 29 VN_Link資料表結構 ............................................................................................................................... 69 
表 30 ip_class資料表結構 ................................................................................................................................. 70 
表 31 QoS_table資料表結構 ............................................................................................................................. 71 
表 32 Device資料表結構 ................................................................................................................................... 71 
表 33 log_realtime資料表結構 .......................................................................................................................... 72 
表 34 log_flow_storage資料表結構 .................................................................................................................. 73 
表 35 manager資料表結構 ................................................................................................................................ 73 
表 36 服務等級契約資料表 .............................................................................................................................. 76 
表 37 使用者資料傳輸符號定義表 .................................................................................................................. 76 
表 38 虛擬網路資料傳輸符號定義表 .............................................................................................................. 78 
表 39管理中心硬體與軟體環境 ....................................................................................................................... 85 
表 40 被管理節點硬體與軟體環境 .................................................................................................................. 85 
表 41 系統開發環境 .......................................................................................................................................... 86 
II 
 
Abstract 
With the rapid development of network technology and scale, it is hard to handle each device as the 
previous management; hence, it is necessary to have a powerful management system and architecture to help 
network administrators manage the network. In order to build a new network on the current and complex 
network architecture, technologies about virtual machine and cloud computing are developing quickly. Some 
enterprise networks or network providers begin to use resource on the cloud and manage network through 
virtual network technology. Besides management, providing customers a stable service quality is even highly 
demanded than before. And SLA is a standard for QoS protection. Although SLA can provide QoS protection, 
violation happens sometimes. Nowadays, there are some mechanisms to avoid violation, but the costs are too 
high, for instance, physical links. As a result, how to combine SLA with virtual network for different virtual 
networks to support each other under the circumstance of insufficient resources, for the purpose of providing a 
flexible network environment, lowering the physical network cost and improving the agreement of SLA, is 
worthy of further research. 
This is a two-year project. In the first year, this project presents Hierarchical Management System of 
Virtual Network (HMSVN) architecture which integrates the architecture of network virtualization and the 
features of hierarchical network management. It is also implemented on NetFPGA network development 
platform to provide a solution for network management for enterprise network or large scale network. The 
system architecture is divided into two major components: managing center and managed device. Managers can 
control the system through a web-based managing interface and setup NetFPGA on managed devices which 
communicate through OpenFlow Protocol. There are some experiments to demonstrate the isolation of Virtual 
Network; furthermore, network flows can be controlled by policies. In the second year, this project integrates 
the virtual network and SLA, proposing an SLA Oriented Shortest Path First (SO-SPF) mechanism on the 
NetFPGA. This system architecture is composed of Management Station (MS) and Managed Nodes (MN), each 
of them carries NetFPGA. MS communicates with MN through OpenFlow project. This proposed makes 
comparison between no mechanism, SPF mechanism and SO-SPF mechanism by conducting multi flow 
experiment. When violation happens, SPF will choose another path to improve violation duration time. SO-SPF 
is not only better than no mechanism, but also SPF because it chooses a better transmission path according to 
network statements, SLA statements and SPF result. 
 
Keyword： network management, virtual network, Service Level Agreement, Achievement, hierarchical 
management, network virtualization, NetFPGA, policy-based network management, SO-SPF 
2 
 
提供給研究者可以在不同的網路基礎上直接進行網路架構或協定的實驗。除了 OpenFlow 之外，NOX 
Controller專案也提供一種方式控制 OpenFlow，供研究學者可以自行開發控制程式來管理 OpenFlow。 
總計畫是為期兩年的整合型計畫，與國立台灣科技大學、國立中央大學與國立成功大學三所台灣頂
尖大學共同合作。本子計畫在第一年度中將 NetFPGA網路開發版加入虛擬網路（Virtual Network，簡稱
VN）中，並在虛擬網路中建立一階層式概念的網路管理系統，分別賦予不同層級的網路管理人員不同
權限的指令操作，提供網路管理人員一個完善的網路管理系統。第二年度針對服務等級協議之達成率去
進一步探討，並藉由監測服務等級協議之網路服務提供者所提供的網路資源，以及網路服務使用者在虛
擬網路上之使用狀況等資料優化最短路徑優先（Shortest Path First）機制，使其充分發揮虛擬網路彈性
化的特性，並實現防止違約機制，達到改善服務等級協議達成率之目的。 
1.2 研究動機 
雖然網路管理系統已經發展很長一段時間，也已經有許多管理的理論、方法及技術發表，但在以往
網路管理系統設計上，對於管理者之間的階級與權限控管，通常不是設計網路管理系統時的主軸，這個
原因使得系統架構僅適合網路管理者只有一、兩人時。但當網路架構龐大、設備眾多，需要許多不同權
限的網路管理者同時對一組實體網路進行網路管理時，傳統的網路管理系統即出現重大的缺點，因為在
傳統的網路管理系統中，所有網路管理者大多位在同一個階層，並且使用同一組管理權限設定，並沒有
分層授權之架構，使系統之管理規模受到限制，甚至使得網路管理人員無法有效率地進行網路管理、偵
錯。 
由於網路技術與架構更新快速，無論是進行學術研究，或是企業內部進行新網路產品測試或新網路
軟體測試時，亟需一個不會影響現有網路運作的真實網路環境來測試新協定、新技術、新架構與新設備，
因此近年來虛擬網路之應用需求大幅提昇，許多研究主題也開始重視網路虛擬化，在這同時，需要一套
適合虛擬網路的網路管理方法，可針對網路虛擬化環境的特性，進行有效率的網路管理。同時，在進行
網路管理系統架構規劃與開發的同時，也能確保新架構可實際應用於真實網路環境之中，確定架構之可
行性。 
而無論是企業網路、網路服務提供者或是網路服務使用者，都對網路品質的要求更加嚴格，因此服
務等級協議達成率就顯得更加重要。雖然服務等級協議用於虛擬網路上來保證網路服務使用者所需的資
源穩定度，已經有許多研究學者研究此議題，同時也發表出不少提高協議達成率的理論或方法，但過去
提高達成率的方式，大多鑽研在以實體資源進行各種頻寬借用的方式來避免發生違約情形，而非考慮當
實體資源不足或是實體線路無法給予支援的情況。當虛擬網路分割越多的同時，可自由使用的實體網路
資源也將相對減少，違約發生的情況將會增加，因此，在考慮以實體資源做為避免違約的方法同時，也
需要考慮一套機制充分利用虛擬網路的特性，動態改變使用者所使用的資源或線路，讓管理者可以在缺
乏實體資源或是實體線路發生狀況的時候，改用其他虛擬資源或線路而避免違約情況發生。 
1.3 研究目的 
為解決網路管理系統之發展，尚未能與虛擬網路特性搭配之問題，本計畫第一年度將階層式管理系
統架構與網路虛擬化環境結合，以階層式網路管理架構來管理多個虛擬網路，增加網路管理之彈性，管
理者之間能根據權責進行權力分工，讓不同階層的網路管理人員只擁有所需要的特定權限，而不必擁有
整體網路之管理權限。 
透過以網頁為基礎的管理者介面，實作在 NetFPGA 網路開發版上，可將此架構實作在高速網路環
境中，並藉由 OpenFlow專案，架設 VLAN環境，建立出虛擬網路，並透過 OpenFlow Protocol及 NOX 
Controller專案，達到網路管理系統與被管理元件間之網路流控制，控制虛擬網路內之網路流傳輸。並整
合以上提到之網路管理介面與控制程式，驗證此架構是否能達到整合階層式管理及網路虛擬化環境建置
之目標，確認此架構之可行性。 
4 
 
第 2 章   文獻探討 
本章將介紹背景知識及技術，以及一些相關研究。第 2.1 節將簡介虛擬網路技術；第 2.2 節介紹網
路管理系統（Network Management System，NMS）；第 2.3節說明階層式管理的特色；第 2.4節解釋政策
（Policy）定義和說明以政策為基礎之管理系統（Policy-based Management System，PBMS）之特色；第
2.5節介紹服務等級契約最後，第 2.6節介紹 NetFPGA網路開發版、OpenFlow及 NOX Controller等相關
專案。 
2.1 虛擬網路 
近年來 Internet蓬勃發展，被廣泛的應用在日常生活及各領域之中，使用者數量及各種使用需求大
增[1]，網路架構也日趨龐大而複雜，維持穩定的網路品質成為網路管理人員的首要任務，但這也使得
網路架構的改變，只能侷限在簡單、漸進式的更新，佈署新網路技術變得越來越不可能[2]，若要在現
有網路上發展新應用或新架構，常常因怕影響現有網路之營運，而無法將新架構實際套用在現有網路
當中。且網路節點及設備眾多，已不可能將所有設備在一夕之間更新，新架構唯有向下相容，採漸進
式方式佈署更新，若無法與現有網路網路共存，實用性及接受度將大打折扣。 
為解決現有網路不易全盤更新，使新網路架構及應用服務開發者在開發新技術時面臨重重阻礙，
網路虛擬化的概念被提出，並立刻成為一個熱門的研究議題。網路虛擬化是將一個實體網路切割分成
多個虛擬網路，或稱邏輯網路（Logical Network）。雖然多個虛擬網路實際是處於同一個實體網路，
但在意義上這些虛擬網路是各自獨立而不相干，虛擬化技術提供在一個實體網路上，建立並實驗自己
的網路架構與協定的方法。虛擬網路主要由設備提供者（Infrastructure Providers，簡稱 InPs）提供實體
設備供其建立網路虛擬環境（Network Virtualization Environment，簡稱 NVE）。網路虛擬化允許多個
虛擬網路存在相同的實體網路（Physical Network）環境中，提供實驗進行及架設多個網路在共享的實
體架構中，虛擬網路由虛擬節點（Virtual Node）及虛擬線路（Virtual Link）所組成[3]，如圖 1所示，
實體網路由 A、B、C及 D四個實體網路節點（Network Node）以及 a、b、c及 d四個實體線路（Physical 
Link）所組成，管理者可從實體網路中切割出 VN 1以及 VN 2兩個虛擬網路，其中 VN 1由虛擬節點
Physical Network
VN 1
VN 2
Network node
Physical link
Virtual node
Virtual link
Virtual Network
A
B
C
D
A1
A2
C1
D1
D2
B2
a
b
c
d
e f
a2
d2
d1
e1
f1
c1
 
圖 1網路虛擬化環境 
6 
 
單元在同網路元件上執行可能會互相衝突的程式，可提供獨立環境避免衝突及網路不穩定的狀況。重
疊網路可在實體網路拓樸頂層建立虛擬網路拓樸，根據底層網路路徑透過虛擬連線連結，通常實作在
應用層，特色是可不受地理限制，富有彈性，可即時適應環境而做改變，也易於佈建，例如廣泛使用
的 P2P網路，即是實作在應用層的重疊網路。 
就虛擬區域網路技術及重疊網路技術做比較而言，兩者最大的不同在於，虛擬區域網路為實作在
資料連結層（Data Link Layer）之技術，在 Ethernet Address後方加上 VLAN Tag，對封包做分類，而
重疊網路則為實作在應用層（Application Layer）之技術，若要在資料連結層上架設虛擬區域網路，必
須透過網路管理者對網路設備進行設定，而重疊網路則可由網路應用程式開發者自行在應用層上自訂
規格及建立重疊網路。 
要達到網路虛擬化，其中一種方式可透過 Kernel-Based的虛擬機器來實作[7]。而在虛擬網路之研
究議題中，其中一項重要的議題為實體資源之分配[8]，在這個議題當中，最常被拿來探討的資源是實
體網路的頻寬，在有多個虛擬網路的實體網路上，頻寬分配變得非常重要，若沒有一套適合的機制來
分配頻寬給各個虛擬網路，則容易造成線路的壅塞。除了固定式頻寬分配外，虛擬網路中動態頻寬分
配之方法[9]為虛擬網路中另一研究議題，讓資源之利用最佳化，有效利用所有可用資源。而使用 FPGA
發展具擴充性的網路虛擬化技術[10]，則可透過軟體達到虛擬路由器之功能，但實驗結果發現軟體的效
能相對低落許多，且在控制、設定與管理此套系統也無一套適合的網路管理方法。 
虛擬網路可應用於分散式虛擬運算環境（Distributed Virtual Computing Environment）中[11]，使運
算時所使用到的網路環境不會互相影響。虛擬網路架構目前也已被移植到行動網路架構中，創造出虛
擬行動網路（Virtual Mobile Network）架構[12]，讓虛擬網路之特性不僅侷限於有線網路之中，也可應
用在無線網路環境中。 
虛擬網路快速的發展，使其實際的應用方式迅速成熟，已有企業網路或是網路服務提供者導入虛
擬網路，用來提供服務給網路服務使用者。與傳統網路不同的是，虛擬網路將以往的網路服務提供者
分成設備提供者與服務提供者兩個角色，前者負責管理實體網路的架構，後者則是透過向設備提供者
要求資源，並建立虛擬網路與部屬客製化的架構或協定，提供點對點的服務給使用者。在這樣的架構
下，VN-SLA[13]結合服務等級契約議題提出另一個新的定義方式。它認為目前虛擬網路以及資源的定
義仍然不夠清楚，因此他提出的機制除了如同一般方式將虛擬網路上定義設備提供者與服務提供者之
外，並透過服務等級契約將虛擬網路的資源詳細定義，使虛擬網路所應提供給使用者之資源能夠清楚
的被規範。雖然 VN-SLA結合虛擬網路以及服務等級契約議題提出一個新的定義方式，但是也僅限於
以服務等級契約定義虛擬網路所應提供之資源，並未詳細提出虛擬網路該分配資源以及提供資源。 
2.2 網路管理系統 
網路管理可視為一套由許多制定完善的流程組合而成之行為模式，目的是為了完成控制、計畫、分
配、佈署、合作、監控電信網路或電腦網路資源[14]。而網路管理系統則為一組硬體與軟體，用來監控
及管理網路，包含管理的動作、方法、流程及工具，針對被管理的設備，制定許多運作、管理、維護及
規定[15]。 
網路管理系統通常是由硬體與軟體互相搭配整合而成一套可監控與管理網路設備的工具。網路管理
系統的發展主要是為了解決因為網路設備日益增多，導致管理複雜度日漸升高，致使人工管理效率降低
的情況。使用網路管理系統的主要目的在於 (1)可管理系統資源及服務：包含控制、監控、更新及回報
系統狀態、設備設定值及網路服務；(2)精簡管理複雜度：例如將資料轉換成人類易讀的資訊格式，並透
過人性化介面，輔助管理者完成複雜的操作或煩人的重複性動作，以及(3)提供可靠服務：提供完整的服
務品質保證，並盡可能將斷線時間或系統異常頻率降至最低。 
網路管理系統主要由三個元件組成，如圖 2所示，分別是管理中心（Managing Center，MC）、被管
理端設備（Managed Device，MD）及網路管理通訊協定（Network Management Protocol，NMP）。管理
8 
 
缺點，因同一實體資源或實體線路，在同時間會有多個階層共同使用，當節點或線路失效時，會影響到
所有正在使用的階層，造成連鎖反應。例如：若某實體線路上共有五個 VN共同使用，當實體線路斷線
時，這五個 VN都會受到影響。 
階層式管理可用於分散式網路元件的管理中，提供模組架構達到自治管理的目標[19]，也可將階層
式架構應用在自動化網路管理中，增加大型網路管理的彈性[20]。階層式管理適合應用在企業網路中，
藉由階層式網路管理架構，以及企業網路中移動式代理人技術，可彈性管理許多異質設備[21]。 
2.4 政策定義及以政策為基礎之管理系統 
政策是為了實現特定目標而訂定的計畫，透過許多規則（Rules）來敘述，政策定義了特定狀況下，
被管理元件需執行的明確動作，通常以「IF … THEN …」的敘述句來表示[22]。「IF」代表政策觸發的特
定狀況，如系統狀態、流量、延遲、事件等，「THEN」定義明確的動作，如中斷連線或設定網路流量的
優先權等。每個政策規則皆由一組狀態及一組相對應的動作所組成，狀態定義了政策規則何時適用，一
旦 IF內的敘述句為真，政策規則被啟動，政策規則內的動作就會被執行。 
以政策為基礎的系統（Policy-based system）可應用於大規模且行為模式頻繁改變的運行環境下，當
環境或運作模式改變時，管理者可透過修改政策規則來因應，而非重新設計或停止系統，這類動態適應
的能力在日趨複雜的電腦及網路系統管理架構與方法中非常重要。當增加彈性及執行時的變動適應能
力，以政策為基礎的管理（Policy-based Management，PBM）使用政策規則來管理元件之設定值及行為，
可減少資通訊系統的維護成本，也可讓管理者擺脫以往直接監控設備狀態的方式。PBM通常具有下列特
性[14]： 
 當系統環境更動時，只需更動或新增政策，不必重新撰寫程式 
 不同使用者使用不同政策 
 降低系統對管理者的依賴程度，讓系統更聰明 
PBM可用在網路運算系統（Networked Computing System）中[23]，用來管理設備及網路運算資源，
可制定出建立、修改、佈署及套用等政策，自動化動作可節省管理者人力。 
以政策為基礎的網路管理（Policy-Based Network Management，PBNM）即為結合政策機制來進行
網路管理，PBNM可透過即時調整設定檔，來適應頻繁的管理需求變動，而不需重新撰寫新元件或模組
[24]。在 RFC 3198中定義了許多 PBNM所用到的技術術語[25]，其中 PBNM內主要元件之互動關係如
圖 4所示[26]，包含： 
 
圖 3階層式架構示意圖 
 Manager of Managers (MoM)
Manager 1 Manager n
Domain 1 Domain n
10 
 
2.5 服務等級協議 
服務等級契約[32][33]通常是自然語言所撰寫的文件，並經由人工的方式來產生與監控，可應用於網
路服務的品質控管上，經由服務等級契約來確保服務遞送之品質，進一步達成網路服務品質控管流程的
自動化，提供更好的服務控管效果。圖 5為服務等級契約的生命週期，可以分成以下五個階段[34][35]： 
 服務等級契約的發展（SLA Development）：在發展服務等級契約的階段，網路服務提供者需確
認欲提供服務的特徵或參數等條件，以及所能提供的服務等級。網路服務提供者除了檢查服務
參數與等級外，也必須確認網路狀況的條件，以上兩者皆是為了避免發生與顧客簽訂契約後卻
無法實現的問題。 
 協商與銷售（Negotiation and Sales）：當服務等級契約發展完後，便開始與網路服務需求者進行
協商，協商的部分包括網路服務需求者所適合的服務等級、必須給付的金額以及違約時網路服
務提供者所必須遵守的罰則。協商完成後，當雙方簽署完成即等於完成服務等級契約的銷售。 
 實現服務等級契約（Implementation）：簽署完畢的合約便可以開始部署以及實行，此時網路服
務必須已能夠服務使用者，而網路服務提供者則必須確認服務的正常性，並且若有必要，網路
服務提供者需檢測是否能夠支援特殊的服務等級契約。 
 執行服務等級契約（Execution）：當網路服務以及服務等級契約運行時，需不斷監測網路服務
的品質並回報其品質資訊，同時也需要監控提供網路服務時服務等級契約的執行，當一有違約
情況發生時，則立刻進行通知。 
 評估（Assessment）：最後則是評估網路服務提供者在服務等級契約上提供的效能以及網路服務
提供的品質，並針對結果以及服務等級契約的達成率進行改進。 
當有了服務等級契約可以描述服務的品質等級與內容後，網路服務的監控者可以根據此合約監督服
務品質是否達到雙方的協議，因此，服務等級契約文件說明了有哪些服務品質的參數必須被監督，其中
包含了各個品質參數的定義與測量方法，而參與監督的角色可能是服務使用者、服務提供者、或是委託
監督的第三者。扮演監督的角色藉由服務等級契約合約文件所定義的品質參數與測量方法，監督服務品
質是否達到約定之等級，根據測量的結果判斷該服務的品質是否達到合約文件的要求，如果發生違約的
情況，則經由服務監督機制提出違約措施，採取因應的處理。 
 
圖 5 SLA生命週期 
12 
 
NetFPGA 為一片可裝入一般個人電腦 PCI 介面的開發版，是將四個 1Gbps 的一般乙太網路埠實際
佈建於 FPGA開發板上，此開發版主要由 Xilinx Virtex2-Pro 50處理單元做運算處理，並具有 18Mbit的
SRAM以及 64MByte的 DRAM提供資料緩衝的空間，此平台可提供學生及研究人員建立一個硬體的高
效能網路系統[48]，外觀如圖 6，提供網路研究人員及課程實驗一個高速、彈性且開放的平台。NetFPGA
所提供的韌體及軟體讓此平台可傳送、接收封包，將資料暫存於緩衝區中，也可和主機端的 CPU溝通。 
NetFPGA實作在低價的 FPGA平台，提供模組化的設計方法，可增加網路硬體設計的重複使用性，
因此開發者不需要像以往開發硬體小心翼翼，避免發生錯誤導致硬體報銷，使其具有降低開發成本的優
點。開發者可在 NetFPGA上面撰寫可重複使用的程式碼[49]，可透過 Xilinx或ModelSim等其他各種標
準設計工具來開發 NetFPGA 功能，且因上述所提及之可程式化特性，因此開發者可以自行建立專案，
編寫不同的程式碼燒錄至 NetFPGA 使其成為不同功能的網路設備，例如將一支具備速率控制功能的路
由器程式碼燒錄至 NetFPGA，則 NetFPGA 可對網路上經由四個 1Gbps 的流量進行速率控制[50]。且目
前網站上已經有超過 50 個各種不同主題的開發專案，供研究人員或學生下載，應用在各自的需求中。
例如 NetFPGA 可設計成一個封包擷取及封包產生系統，將收到之封包儲存成 PCAP 檔案格式，也可產
生封包送出到網路中[51]。另一項應用為，在 NetFPGA路由器上的 URL擷取系統，如果收到的封包為
 
圖 6 NetFPGA網路開發版 
 
圖 7 OpenFlow架構 
 
14 
 
 OpenFlow協定（OpenFlow protocol）：此協定主要是定義控制端與 OpenFlow以及 OpenFlow與
OpenFlow 之間一個開放且標準化的訊息傳輸與溝通的方式，控制端更可以藉由此協定來控管
OpenFlow上的 flow table資訊，包含新增、刪除或修改等動作。 
OpenFlow交換器透過OpenFlow Protocol和控制者溝通，Controller會和OpenFlow Switch建立 Secure 
Socket Layer (SSL)連線[58]，並透過 OpenFlow Protocol來新增、修改及更新 flow-table的內容， Flow-table
裡共有三個欄位： 
 封包標頭：定義每筆 flow 
 動作：定義封包該如何處理 
 狀態：追蹤每個 flow 的封包數量、已傳輸封包大小，以及收到最後一個符合此 flow 規則的封
包的時間 
當使用 OpenFlow建立網路環境後，當 OpenFlow Switch收到封包時，會將封包特徵與 flow table內
之規則比對，若比對吻合，則根據 flow table 內定義之動作處理封包，例如：封包丟棄或是封包應轉送
的路徑等動作，決定哪些 flow 允許通過，以及決定這些封包的傳送路徑，與此同時並將 flow 的相關資
訊如封包大小、數量或持續時間等更新至 flow的狀態中。若封包為一組新 flow 的第一個封包時，此時
比對無吻合，封包會經由 OpenFlow與控制端已先建立好的 secure channel傳送至 Controller，其他具有
相同特徵的封包會先被暫時儲存在暫存器中，由 Controller決定此 flow之處理方式，然後 Controller再
將封包以及對應動作回傳到OpenFlow，讓OpenFlow將封包的相關資訊新增到 flow table上，使OpenFlow
可針對剩餘封包進行處理。 
在 OpenFlow之 flow table中，可指定每筆網路流量之 VLAN ID，針對不同規則將流量進行分群，
以 VLAN建構出不同之虛擬網路，並可動態控制網路流量之通過及禁止，或動態建立、移除 VLAN，達
到動態設定之支援。 
OpenFlow 可將實驗性質的網路及流量，從日常生活使用之網路切割出來，成為另一個虛擬網路，
使不同用途的網路之間彼此獨立，不會互相干擾[59]。開發團隊鼓勵網路設備供應商能將 OpenFlow 加
入他們的產品，並積極在校園中推廣，藉此增進校園骨幹網路發展[60]，讓網路研究人員可在校園網路
上架設網路測試平台進行實驗，又不會影響到正常網路流量[61]。且除了一般網路設備商的交換器產品
外，OpenFlow也已經實作在 NetFPGA開發平台上[62]。 
Plug-n-Serve[63]架構透過 OpenFlow 架構出網頁流量負載平衡系統，此系統之特色為藉由監控網路
狀況及主機狀況，控制端可選擇流量的服務主機，達到覆載平衡的效果，也可透過 GUI介面，方便地新
增或移除主機。 
Resonance[64]利用 OpenFlow 架構，發展出可增進企業網路安全性之系統，藉由動態存取政策的方
式，達到即時示警的目標。Resonance可克服目前網路的缺點，並提供新的安全性功能。 
2.6.3 Nox Controller專案 
除可自行根據 OpenFlow Protocol規格書自行撰寫 OpenFlow Controller外，OpenFlow開發團隊為了
能夠讓 OpenFlow像是一般電腦中的元件一樣[65]，能由一套作業系統集中管理，因此發展了一套 NOX 
Controller 的控制端系統，其目的是讓 NOX Controller 在網路上能夠同樣扮演作業系統的角色，能夠集
中管理網路環境中的元件，使其像作業系統一般能夠監測各種元件的狀況並進行控制。開發 NOX 
Controller的團隊認為一個網路作業系統不應該由它自己來進行管理，而是像作業系統一樣由各種相對應
的程式來管理各種元件，因此 NOX Controller藉由一個程式化的介面，透過開發上層的管理應用程式，
使 NOX Controller可以運作的如同一般電腦的作業系統一樣，維持整個環境的運作而不需要靠自己管理
內部元件。 
OpenFlow開發團隊建議可使用 NOX Controller作為 OpenFlow設備之控制端，NOX Controller為一
個開放原始碼的 OpenFlow Protocol控制程式，提供一個使用 C++或 Python程式語言來撰寫網路控制軟
16 
 
第 3 章   NetFPGA上虛擬網路之階層式管理系統 
本章節將分別介紹本計畫第一年度之研究方法。第一年度在 NetFPGA 網路開發平台上建立出虛擬
網路環境，並在 NetFPGA上進行網路管理，接著將 Hierarchical Management System應用在此環境下。
本計畫第一年度實作出一 NetFPGA上虛擬網路之階層式管理系統（Hierarchical Management System of 
Virtual Network on NetFPGA，簡稱 HMSVN）提供網路管理人員一完善的階層式網路管理系統。 
3.1 系統架構 
系統架構如圖 9所示，以網路層角度，最底層為實體網路，由許多實體設備及實體線路所組成，實
體網路可以是樹狀架構、環狀架構、星狀架構或 fully-mesh架構等。由實體網路可以切割出許多不同架
構的虛擬網路，彼此間互相獨立，而第 i 層的虛擬網路又可切割出第 i+1 層的虛擬網路，如：實體網路
建構出第 1層虛擬網路，再從第 1層虛擬網路建立第 2層虛擬網路，以此類推建構出階層式虛擬網路的
架構，虛擬網路可由區域網路內之 VLAN所組成。 
以管理層角度而言，實體網路主要由一台管理中心（MC）負責管理，並將 MC 虛擬化，根據 VN
之階層，建立出各層 VN的 Virtual MC，每層虛擬網路，皆有對應到一台從MC切割出來的 Virtual MC
負責，如圖 9中，ith level Virtual MC管理 ith level VN，而 i+1th level Virtual MC則管理 i+1th level VN，
由此虛擬化之架構來建構出階層式網路管理的架構。 
本系統提出之階層式虛擬網路管理系統則是將上述提到之階層式虛擬網路以及階層式網路管理兩
概念結合，並以 NetFPGA網路開發平台作為被管理端設備（MD），發展出 NetFPGA上虛擬網路之階層
式管理系統。 
以階層式網路管理概念來管理虛擬網路，可分別增加管理者及虛擬網路之彈性與動態設定之支援能
力，讓系統可應用於不同網路環境中，或者可再以此架構為基礎，發展更多新服務與新應用。 
 
圖 9 HMSVN系統架構 
18 
 
Manager模組提供網路管理者之身份認證及權限控管等功能。Authority功能提供管理者之登入與身
份認證，Permission功能檢查管理者帳號之權限，並進行帳號授權動作，Account Management功能可新
增、刪除管理者帳號，並管理階層式網路管理架構中，帳號間之階層關係。 
Control模組提供MC與其他網路管理軟體之溝通，以及與被管理端之間各項功能控制。NOX Handler
負責與 NOX Controller溝通，可設定及操作 NOX Controller。SNMP Handler可與 SNMP Agent溝通，藉
由控制 SNMP Agent來取得被管理端的各項 SNMP數值。VN Handler負責接收 Virtual Network模組所下
達之命令，進行虛擬網路之設定、控制、管理及狀態回報。Device Handler 負責各個被管理設備其硬體
設備與作業系統之管理及監控，例如可對設備下達關機或重新開機指令。Link Handler負責被管理設備
之網路接孔及線路之狀態回報，例如可指定開啟或關閉某一設備的某個網路孔，或者取得該線路目前之
網路流量流速、封包來回時間（Round-Trip Time，RTT）等。 
Monitoring and Log模組提供全系統的監控及紀錄。NMS Status Log功能負責監控網管系統之狀態及
顯示系統參數值，並在數值變更時進行紀錄。Policy Log功能紀錄 Policy之變動紀錄，如 Policy之制定、
修改、刪除、啟用與停用之事件描述、事件執行者及執行時間。VN Status Log功能紀錄虛擬網路之變動，
如創建新虛擬網路、刪除虛擬網路等動作事件之紀錄。Control and Device Log功能監控及紀錄各個被管
理端設備之操作及狀態，如偵測設備異常，並紀錄事件發生之時間。Manager Activity Log功能紀錄管理
者之操作，如登入、登出之時間，建立新管理者、設定權限等動作之事件紀錄。 
有關MC內各模組之細部規劃及流程，將會在第 3.2節中說明。 
圖 11 為 HMSVN 系統中，MD 之功能模組圖。MD 底下區分成 Operating System(OS) Handler、
NetFPGA Handler、OpenFlow Handler、Controlling Interface共四大模組，對被管理端設備內的各項元件
進行自動化操作。 
OS Handler模組可回報被管理端設備之系統狀態及 SNMP資訊給MC，並提供基礎操作，達成管理
者之基本控制需求。CLI Control 功能可完成與作業系統相關之指令，如重新開機、設定管理介面 IP 
Address、更新程式版本或下載設定檔等。System State Reporter功能可蒐集系統之作業系統版本、系統
負載、系統記憶體使用狀況、管理介面之 IP Address等基礎系統資訊，並回報給MC。SNMP Agent功能
可蒐集各網路介面已傳送或已接收之封包總數及總封包大小等資訊，提供給網路管理者參考。 
Managed Device
2. OpenFlow 
Handler
4. OS 
Handler
3. NetFPGA 
Handler
1. Controlling 
Interface
Bit File 
Downloader
System State 
Reporter
CLI ControlOpenFlow Interface
SNMP 
Interface
NetFPGA 
Interface
Command Line 
Interface (CLI)
Datapath 
Control
NetFPGA 
Control
NetFPGA 
Status 
Reporter
Datapath 
Status 
Reporter
SNMP Agent
 
圖 11 MD之模組與功能 
20 
 
3.2.1 Web-based Management Interface模組 
Web-based Management Interface模組為管理者進行各項操作的網頁介面，當管理者輸入正確的帳號
密碼，成功登入系統後，即可在網頁中進行各項操作，如：列出所有政策、觀看虛擬網路狀態、觀看系
統資訊及查詢系統使用紀錄等等。如圖 13所示，此模組包含五個子功能，分別是： 
(1-1)Policy Management Function：提供政策之查詢、新增及管理介面 
(1-2)VN Management Function：提供虛擬網路之查詢、建立及刪除介面 
(1-3)Device Management Function：提供被管理端設備之控制介面 
(1-4)Log Management Function：可查詢管理者使用紀錄、查詢系統狀態紀錄，並可整理紀錄 
(1-5)Manager Management Function：提供建立新管理者帳號、查詢管理者帳號資訊、查詢及設定帳
號權限等功能之介面 
3.2.2 Policy模組 
Policy模組提供各項與政策有關之功能，並且將制定的政策儲存在資料庫，根據階層式管理之架構，
進行政策操作時，需注意新政策是否有違背原有之政策：(1) 若違背上層之政策，則此政策將無法套用，
 
圖 13 Web-based Management Interface模組功能 
 1. Web-based Management Interface Module
1-1. Policy 
Management 
Function
1-2. VN 
Management 
Function
1-3. Device 
Management 
Function
1-4. Log 
Management 
Function
1-5. Manager 
Management 
Function
 
圖 14 Policy模組功能 
 2. Policy Module
2-1. Get Policy 
Rules Function
2-2. Create 
Policy 
Function
2-3. Modify 
Policy 
Function
2-4. Delete 
Policy 
Function
2-5. Enable / 
Disable Policy 
Function
22 
 
3.2.3 Virtual Network模組 
Virtual Network模組可顯示目前之 VN狀態，並提供各種與 VN有關之設定、控制功能，並維護階
層式虛擬網路的架構，管理者透過 Web-based UI 進行設定，執行時呼叫此模組進行 VN 設定。Virtual 
Network模組架構如圖 15所示，此模組包含三個功能，分別是： 
(3-1)Get VN Status Function：根據管理者權限，從 VN Database中取得此管理者所管理的 VN列表
及狀態，也可進一步檢視下一層之 VN 資訊，若為最高權限管理者，則可檢視所有 VN，以及
各 VN之間之階層關係 
(3-2)Get VN Hierarchy Function：取得 VN的階層式關係，如取得上層 VN編號，或取得下一層所有
VN編號 
(3-3)Check VN Policy Function：當建立或刪除 VN前，需先向 Policy Module確認此次動作是否符合
政策規則 
表 2 VN資料表結構 
 
Column 
Name 
Data 
Type 
Length Null 
Primary 
Key 
Description 
vid Integer 11  ˇ VN ID 
description Varchar 255 ˇ  VN description 
uvid Integer 11 ˇ  
Upper-level VN ID in 
hierarchical architecture 
link Varchar 255 ˇ  
The set of link ID where 
VNs construct on 
level Integer 11   VN Level 
bandwidth Varchar 255 ˇ  In Mbps. 
priority Integer 11 ˇ  Priority of VN 
 
 
圖 16 Manager模組功能 
 4. Manager Module
4-1. Authority 
Function
4-2. 
Permission 
Function
4-3. Account 
Management 
Function
4-3-1. Create 
Account
4-3-2. Delete 
Account
4-2-1. Check 
Permission
4-2-2. Set 
Permission
4-4-1. Get 
Upper Level 
Account
4-4-2. Get 
Lower Level 
Account
4-4. Account 
Hierarchy 
Function
4-5. Show 
Account 
Information 
Function
24 
 
另外，管理者與 VN 之對應關係儲存在 vn_manager_mapping 資料表中，Manager 與 VN 之關係為
Many-to-many，一個管理者可管理多個 VN，而每個 VN也可以同時被多個管理者管理，如表 4所示，
mid欄位及 vid欄位分別為管理者及 VN之編號，description欄位供管理者註記用。 
3.2.5 Control模組 
Control 模組主要接收來自 VN Module 或管理者透過 Web-based UI 下達之指令，進行 NOX 
Controller、SNMP Agent、NetFPGA或被管理端設備及連線之控制，並且將所管理之設備列表及各項設
定值儲存在 Database中。此模組包含五個子功能，如圖 17所示，分別是： 
(5-1)NOX Handler Function：負責控制 NOX Controller，可取得目前 NOX Controller控管之 OpenFlow 
Switch列表，並進行建立、刪除 VN及執行政策所定義的動作。OpenFlow Switch資相關設定
資料及狀態儲存在資料庫的 OF_switch 資料表中，結構如表 5 所示，dpid 欄位用來紀錄
OpenFlow switch中，datapath的識別號，name欄位紀錄名稱，方便管理者識別，did欄位儲存
此 datapath 所依附之設備編號，d_port 欄位紀錄此 datapath 在設備上所會使用到的網路埠，
dp_enable欄位設定此 datapath是否啟用，dp_status欄位紀錄 datapath之狀態 
(5-2)SNMP Handler Function：驅使 SNMP Agent蒐集資料，並將蒐集到的資料整理後，藉由Monitoring 
and Log Module的 SNMP Function儲存至資料庫的 SNMP log table中，儲存之格式將於 3.2.6
節中說明 
(5-3)NetFPGA Handler Function：負責對 NetFPGA下指令，如下載 Bit File到 NetFPGA中、設定及
控制 NetFPGA卡上網路埠，及取得 NetFPGA之狀態及流量資訊等 
(5-4)Device Handler Function：負責控制被管理端設備之作業系統或通訊裝置，如系統之重新開機，
表 4 VN_Manager_mapping資料表結構 
 
Column 
Name 
Data Type Length Null 
Primary 
Key 
Description 
mid Integer 11  ˇ Manager ID 
vid Integer 11  ˇ Virtual Network ID 
description Varchar 255 ˇ  Mapping description 
 
5. Control Module
5-1. NOX 
Handler 
Function
5-2. SNMP 
Handler 
Function
5-3. NetFPGA 
Handler 
Function
5-4. Device 
Handler 
Function
5-5. Link 
Handler 
Function
 
圖 17 Control模組功能 
26 
 
 
(5-5)Link Handler Function：設定實體線路所連接之兩端設備為何，線路列表儲存在資料庫的 Link
資料表中，結構如表 8 所示，lid 欄位紀錄實體線路之識別號，did_from 欄位設定連線之起點
設備編號，pid_from欄位設定連線之起點網路埠，did_to欄位設定連線之終點設備編號，pid_to
欄位設定連線之終點網路埠，description欄位紀錄連線說明，bandwidth欄位設定此實體線路之
表 7 Device_port資料表結構 
 
Column 
Name 
Data 
Type 
Length Null 
Primary 
Key 
Description 
did Integer 11  ˇ Device ID 
port Integer 11  ˇ Device name 
p_Mac Varchar 17   
The MAC address of 
device port 
p_IP Varchar 15 ˇ  
The IP address of device 
port 
enable Boolean 1   
Enable / Disable this 
device 
link_status Boolean 1   Link status (Connected / 
No connection) 
 
表 8 Link資料表結構 
 
Column 
Name 
Data Type Length Null 
Primary 
Key 
Description 
lid Integer 11  ˇ Link ID 
did_from Integer 11   
The device ID of this link 
connected form 
pid_from Integer 11   
The port ID of this link 
connected from 
did_to Integer 11   
The device ID of this link 
connected to 
pid_to Integer 11   
The port ID of this link 
connect to 
description Varchar 255 ˇ  Link description 
bandwidth Integer 11 ˇ  
Available bandwidth of this 
link (in MB) 
l_enable Boolean 1   Enable / Disable this link 
l_status Boolean 1   Link status (Up/Down) 
 
28 
 
欄位紀錄時間，message欄位紀錄事件訊息 
(6-2)Policy Status and Log Function：紀錄所有 Policy之制定、修改、刪除及停用啟用等執行動作之
變更細節、管理者與執行時間，存放至資料庫的 Log_policy資料表中，結構如表 10所示，lpid
紀錄 policy log編號，datetime欄位紀錄發生時間，mid欄位紀錄此次政策更動之管理者編號，
pid欄位紀錄被更動之政策編號，change欄位紀錄更動之內容 
(6-3)VN Status and Log Function：儲存所有 VN之建立、刪除及狀態變更的時間及變更細節，若此
次變更為管理者操作，同時紀錄管理者的 ID，紀錄存放在資料庫的 Log_vn資料表中，結構如
表 11所示，lvid欄位紀錄 VN log之編號，datetime欄位紀錄時間，mid欄位紀錄此次執行更
動之管理者，vid欄位紀錄被更動之 VN編號，change欄位紀錄更動之內容 
(6-4)Device Status and Log Function：監測被管理端設備之狀態，並紀錄狀態變更時間及內容，另外
紀錄設備之設定值修改時間及更動內容，若此筆紀錄為管理者修改設定值，則同時紀錄管理者
ID，紀錄到的資料存入資料庫的 Log_device資料表中，結構如表 12所示，ldid欄位紀錄 device 
log編號，datetime欄位紀錄時間，did欄位紀錄設備編號，若此次更動為管理者之操作時，mid
欄位紀錄管理者編號，change欄位紀錄更動內容 
(6-5)SNMP Status and Log Function：提供介面給 Control Module中的 SNMP Handler Function，紀錄
所回傳的封包總個數、總共大小等資訊，並提供管理者檢視 SNMP歷史紀錄之功能，SNMP蒐
集到的資訊存放在資料庫的 Log_snmp資料表中，結構如表 13所示，lsid欄位紀錄 SNMP log
之編號，did欄位紀錄由SNMP取得之設備編號，pid欄位紀錄由SNMP取得之網路埠號，datetime
欄位紀錄資料之時間，rx_packets、rx_errors、rx_dropped、rx_bytes、tx_packets、tx_errors、
tx_dropped、tx_bytes等八個欄位分別紀錄已傳送及已接收之封包數、錯誤封包數、丟棄封包數
表 11 Log_vn資料表結構 
 
Column 
Name 
Data Type Length Null 
Primary 
Key 
Description 
lvid Integer 11  ˇ VN log ID 
datetime DateTime --   Date and time of log 
mid Integer 11 ˇ  Manager ID 
vid Integer 11   VN ID 
change Varchar 255   Changes of VN 
 
表 12 Log_device資料表結構 
 
Column 
Name 
Data Type Length Null 
Primary 
Key 
Description 
ldid Integer 11  ˇ Device log ID 
datetime DateTime --   Date and time of log 
did Integer 11   Device ID 
mid Integer 11 ˇ  Manager ID 
change Varchar 255   Changes of device 
 
30 
 
3.3.1 Controlling Interface模組 
Controlling Interface模組為Managed Device與MC之溝通橋樑，負責接收MC所發出之控制指令或
查詢指令，Controlling Interface根據指令之不同，搭配其他模組，完成控制動作或取得狀態資訊，然後
向MC回報結果。此模組包含四個子功能，如圖 20所示，分別是： 
表 14 Log_manager資料表結構 
 
Column 
Name 
Data Type Length Null 
Primary 
Key 
Description 
lmid Integer 11  ˇ Manager log ID 
datetime DateTime --   Date and time of log 
mid Integer 11   Manager ID 
action Varchar 255   Manager action 
 
 
圖 19 Managed Device之模組架構 
 
Managed Device (MD)
4. OS Handler Module
1. Controlling Interface Module
3. NetFPGA 
Handler Module
2. OpenFlow 
Handler Module
 
圖 20 Controlling Interface模組功能 
 1. Controlling Interface Module
1-1. Command 
Line Interface 
Function
1-3. 
NetFPGA 
Interface 
Function
1-4. 
SNMP 
Function
1-2. OpenFlow 
Interface 
Function
32 
 
3.3.3 NetFPGA Handler模組 
NetFPGA Handler模組可控制 NetFPGA開發版進行功能裝載動作，亦可控制 NetFPGA網路介面之
開關，並取得目前 NetFPGA之狀態。NetFPGA Handler模組功能如圖 22，包含三個子功能： 
(3-1)Bit File Downloader Function：將已經編譯完成之 FPGA程式檔，燒錄到 NetFPGA開發版中，
使 NetFPGA可依照程式流程完成指定之功能 
(3-2)NetFPGA Control Function：可控制 NetFPGA之網路介面，設定MAC Address 
(3-3)NetFPGA Status Reporter Function：可取得 NetFPGA之狀態，並回報給MC 
3.3.4 OS Handler模組 
OS Handler模組可完成被管理端設備之作業系統操作及維護，透過 CLI功能，管理中心可直接控制
及設定作業系統，也可透過此模組取得系統狀態，另外若被管理端中已安裝 SNMP服務，也可取得 SNMP
相關資訊。OS Handler模組架構如圖 23所示，包含三個功能： 
(4-1)CLI Control Function：接收MC之指令，呼叫 CLI介面完成指令，如透過「ifconfig」指令設定
被管理者端管理線路之 IP Address、Net Mask，及透過「route」指令設定其 default gateway等，
或是將系統重新啟動 
(4-2)System State Reporter Function：透過 OS本身提供的各種指令，如「uname」、「uptime」、「ifconfig」
等，管理中心可取得各個被管理端設備的 OS相關狀態資訊 
(4-3)SNMP Agent Function：安裝好 SNMP Service後，可透過「snmpwalk」、「snmpget」等指令取得
SNMP提供之網路資訊 
3.4 MC及MD之系統運作 
本節介紹MC與MD兩大子系統中使用到的相關符號及代表意義，簡化MC與MD訊息傳遞流程的
說明內容，HMSVN架構內使用到的訊息交換資訊會在本節中定義，並解說MC與MD之系統內部運作
流程，以及MC與MD之間之資訊交換流程。 
 
 
 
 
 
 
圖 23 Handler模組功能 
 4. OS Handler Module
4-1. CLI 
Control 
Function
4-2. System 
Status 
Reporter 
Function
4-3. SNMP 
Agent 
Function
34 
 
 
 
 
 
 
 
表 17政策觸發條件 
 
Policy Condition (PC) 
PC_EQUAL 等於之政策 
PC_NEQUAL 不等於之政策 
PC_GREATER 大於之政策 
PC_LESS 小於之政策 
 
表 18政策動作 
 
Policy Action (PA) 
PA_ALLOW 政策之動作為允許 
PA_DENY 政策之動作為禁止 
 
表 19操作之回傳值 
 
Return Status (Rtn) 
RTN_OK 操作成功 
RTN_FAIL 操作失敗 
 
表 20系統狀態代碼 
 
System Status (SysSt) 
S_SYS_OK 系統狀態正常 
S_SYS_FAIL 系統狀態異常 
S_PC_OS 作業系統版本資訊 
S_PC_UPTIME 作業系統已運作時間 
S_PC_LOADING 作業系統負載程度 
 
36 
 
作，如建立或刪除 VN 
Step 11-1 指定 VN所使用之 Vil(did, lid, bw, quota)，建立 VN 
Step 11-2 刪除指定之 Vil 
Step 12 Virtual Network Module向 Policy Module取得此次操作所依據之 Pil 
Step 13 Policy Module檢查政策之合法性並回傳 Rtn 
Step 14 Virtual Network Module以遞迴檢查 Vi-1l-1，確認此次操作是否符合階層式架構 
Step 15 Virtual Network Module檢查此次操作是否符合政策規範，並確認是否符合階層式架構，
若皆符合，呼叫 Control Module，繼續後續步驟；若有一違反，則跳至第 Step 17步驟 
Step 15-1 Virtual Network Module產生呼叫 Control Module建構新 Vil(did, lid, bw, quota) 
Step 15-2 根據 Vil呼叫 Control Module刪除 VN 
Step 16 Control Module回傳執行結果 Rtn 
Step 17 根據 Virtual Network Module之執行結果，回報給Web-based UI此次動作之執行結果 
Step 17-1 回傳新 VN之 Vil 
Step 17-2 回傳代表動作成功或失敗的 Rtn 
Step 18 若管理者需要查詢目前系統狀態，可透過 Web-based UI Module 向 Monitoring and Log 
Module下取得 SysSt指令 
Step 19 Monitoring and Log Module從資料庫中取得部份系統 Log資訊，並向 Control Module取
得設備狀態 DvSt 
Step 20 Control向MD取得設備狀態資訊後，回報 DvSt給Monitoring and Log Module 
Step 21 Monitoring and Log Module在彙整各方資訊後，回報 SysSt結果給Web-base UI Module 
  
38 
 
3.4.3 MD內部訊息流 
如圖 25，NMS架構中，被管理端設備內之訊息傳遞流程，主要可以區分成 6個步驟： 
Step 1 當 Controlling Interface Module收到指令，需設定或從 OpenFlow Switch取得資料時，此時
會與 OpenFlow Handler Module互動 
Step 1-1 取得 DPi中，flow table內所有的內容 
Step 1-2 根據 DPi、Di(pt)等設定值建立 DPi 
Step 1-3 啟動被管理端設備 DPi上 OpenFlow Switch功能 
Step 1-4 停止被管理端設備 DPi上 OpenFlow Switch功能 
Step 2 被管理端設備上的 OpenFlow控制程式執行動作後，回傳動作之結果 
Step 2-1 回傳 FL_TABLE 
Step 2-2 回傳 datapath是否建立完成之 Rtn 
Step 2-3 回傳 OpenFlow Switch是否啟動完成之 Rtn 
Step 2-4 回傳 OpenFlow Switch是否停止動作之 Rtn 
Step 3 當 Controlling Interface Module 需設定或從 NetFPGA 取得資料時，此時會與 NetFPGA 
Handler Module互動 
Step 3-1 取得 NetFPGA設備之狀態 
Step 3-2 下載 BITFILE到 NetFPGA上 
Step 3-3 根據 Di(pt)設定 NetFPGA上網路埠的 IP位址或MAC位址 
Step 3-4 Step 3-4. 啟動 Di(pt) 
Step 3-5 Step 3-5. 停止 Di(pt) 
Step 4 完成控制 NetFPGA之動作後，回傳動作之結果 
Step 4-1 回傳 DvSt 
Step 4-2 回傳下載 Bit File是否成功之 Rtn 
Step 4-3 回傳設定是否成功之 Rtn 
Step 4-4 Step 4-4. 回傳 NetFPGA是否啟動成功之 Rtn 
Step 4-5 Step 4-5. 回傳 NetFPGA是否停止動作之 Rtn 
Step 5 當 Controlling Interface Module收到與作業系統相關之指令時，與 OS Handler Module互動 
Step 5-1 取得 SNMP資料 
Step 5-2 取得系統狀態資料 
Step 5-3 設定管理介面網路之 IP位址 
Step 5-4 重新啟動被管理端設備 
Step 6 OS Handler完成指令動作後，回傳執行結果 
Step 6-1 回傳 SNMP_Info 
Step 6-2 回傳系統狀態 SysSt 
Step 6-3 回傳設定是否已完成之 Rtn 
Step 6-4 回傳已收到指令，即將重新啟動設備之 Rtn 
  
40 
 
3.4.4 MC與MD間之訊息流 
管理中心與被管理端元件之訊息互動如圖 26所示，主要有六個步驟： 
(1) 管理中心下達指令或通知被管理端元件欲取得的資訊 
(1-1)取得設備狀態：SysSt、DvSt、FL_TABLE、SNMP_Info 
(1-2)傳送指令：下載 BITFILE、設定管理埠 
(2) 回傳 SysSt、DvSt、Rtn等資料 
(3) 取得 OpenFlow Switch內 Flow Table之內容 
(3-1)根據 dpid取得不同設備之資料 
(3-2)根據 dpid、did、Ptdid設定被管理端設備上之 datapath 
(3-3)啟用 OpenFlow Switch 
(3-4)停止 OpenFlow Switch 
(4) 根據執行結果回傳 
(4-1)回傳 FLOW_TABLE 
(4-2)回傳設定是否成功之 Rtn 
(4-3)回傳 OpenFlow Switch是否成功啟用之 Rtn 
(4-4)回傳 OpenFlow Switch是否成功停用之 Rtn 
(5) 當被管理端設備內的 OpenFlow Switch收到新封包，不知該如何處理時，會根據 OpenFlow Protocol
主動將封包傳送給管理中心，並等待管理中心下達新的 Flow Table 
(6) 管理中心根據政策決定該如何處理封包後，產生相對應之動作，並回傳給 OpenFlow Switch，在
OpenFlow Switch內的 Flow Table新增一筆資料 
 
 
圖 26 MC與MD間之訊息流 
42 
 
c 低傳輸量 VN：此樣板設定 VN之可用頻寬為 20 Mbps，單筆連線之配額為一天 10 GB。此樣板
可套用於中小企業或一般小型公司行號之網路，提供基本網路服務，並可再根據合約設定下層
管理者為授權管理者或受限管理者。 
3.7 系統實作 
本章節將對本計畫第一年度之系統實作進行介紹，以下將分為 3.7.1以及 3.7.2兩個章節個別說明系
統架構以及系統功能。 
3.7.1 系統架構 
本計畫第一年度系統實作之架構如圖 27 所示，包含一台管理中心，以及四台被管理端設備，管理
中心為桌上型伺服器，被管理端設備為具有 PCI 介面之桌上型電腦，每台電腦透過 PCI 插槽裝載一片
NetFPGA 開發版。網路連線部份，管理中心透過 100Mbps 管理網路連接至被管理電腦的內建網路埠或
一般網路卡上，被管理端設備之間則是使用 1Gbps網路透過 NetFPGA開發版上的四個網路埠互相連接。 
系統設備及環境 
管理中心所使用之設備及軟體環境如表 22 所示，其中使用 Apache 網頁伺服器作為 Web-based 
Management Interface Module之執行平台，搭配 PHP5模組執行網頁程式，並由MySQL資料庫伺服器負
責Module Database之資料存取，以及使用 NOX Controller作為 OpenFlow Switch之控制端，對MD進
行控制， NOX Controller同時也負責政策條件之判斷與政策決策。 
被管理端使用之設備及軟體環境如表 23所示，裝載之 NetFPGA硬體具有四個 1 Gigabits網路埠，
可依照燒錄之 Bit File不同，讓 NetFPGA具備路由器、交換器或網路卡等不同功能，本計畫使用 NetFPGA
上的 OpenFlow專案進行實作。 
 
圖 27 系統實作架構圖 
44 
 
開發環境及套件 
管理中心及被管理端元件採用之開發環境如表 24所示，編譯 NetFPGA驅動程式及軟體、OpenFlow  
Switch，以及 NOX Controller皆需使用 Linux上之 GNU C/C++編譯器，Web-based Management Interface
使用 PHP5網頁程式語言撰寫開發，並搭配MySQL資料庫管理工具 phpMyAdmin來產生所需之資料表，
 
圖 28 管理者登入畫面 
 
圖 29 最高權限管理者之管理者列表及階層樹 
46 
 
若使用最高權限管理者之帳號登入，可看到全系統之所有管理者資訊，如圖 29 所示，同頁面並畫
出全系統中所有管理者階層關係之架構樹。 
最高權限管理者之帳號也可查看全系統內所有 VN之資料及階層樹，如圖 30所示。 
點選個別 VN可檢視相關資料及 VN拓樸圖，如圖 31。 
網路管理系統中之政策列表如圖 32所示，並可檢視與修改每個政策之詳細設定值，如圖 33所示，
可設定政策之管理者、套用之虛擬網路、優先權及是否啟用，接著指定政策觸發之條件，以及觸發之變
數，再指定政策之對應動作，以及觸發之對象，也可指定是否套用此政策，達到動態管理功能。 
管理者可查看系統中所有被管理端設備之列表，如表 25 所示，亦可從管理介面中新增被管理端設
備，如圖 34。另外可檢視所有實體線路之列表及狀態，如圖 35所示，也可透過管理介面新增實體線路，
如圖 36。 
 
圖 31 VN之資料及拓樸圖 
 
圖 32 政策列表 
 
48 
 
 
 
圖 35 實體線路列表 
 
 
圖 36 新增實體線路 
 
 
圖 37 由 dpctl輸出 ICMP流量之 Flow Table內容 
50 
 
      nw_src=192.168.1.1,\nw_dst=192.168.1.2,\ 
      actions=output:0 
即可新增一筆網路流規則進去，而此規則之意義為：當來源網路卡號為 00:16:d3:c8:4f:d4、來源 IP
為 192.168.1.1之電腦，若要連線到目的卡號為 00:0f:b0:df:38:18、目的 IP為 192.168.1.2之電腦，此流量
之動作設定成從編號為 0之網路埠送出。 
倘若管理者要對特定規則之網路流建立 VLAN，形成虛擬網路，可透過指令： 
      ./dpctl add-flow nl:0 \ 
      dl_src=00:16:d3:c8:4f:d4,dl_dst=00:0f:b0:df:38:18,\ 
      nw_src=192.168.1.1,\nw_dst=192.168.1.2,\ 
      actions=output:0,mod_vlan_vid:1 
此指令在 actions中增加 mod_vlan_vid動作，執行後，所有相同規則之網路流都會被加上 VLAN ID
為 1，建立出一組虛擬網路。 
若要刪除 flow table裡面的某筆資料，可使用指令： 
      ./dpctl del-flows nl:0 [flows] 
可刪除指定條件之網路流規則，若不在 flows中指定條件，則是清除 flow table內的所有規則。 
透過 OpenFlow的 dpctl工具指令，可以對被管理端設備上，NetFPGA之 OpenFlow Switch功能，對
flow table進行即時新增及刪除 flow規則之動作，此動態管理能力可達到動態建構及刪除 VLAN所需之
功能。 
本計畫實作時，使用 C 語言撰寫一個網路程式作為 MD agent，並放到被管理端設備上執行，負責
接收管理中心之命令，根據命令內容產生 dump-flows或 del-flows指令並執行，完成指定動作。 
3.8 實驗與討論 
本章節針對本計畫第一年度之實驗依情境之不同作劃分，分別介紹實驗結果。 
3.8.1 情境一：管理者之管理 
此情境驗證與管理者模組相關之功能，如不同管理者可視之階層樹及管理者之建立。 
實驗一：不同管理者之階層樹 
a 實驗目的：驗證不同管理者登入之後，能夠辨別得出各不同管理者之階層。 
b 實驗設備：1台Managing Center、2台裝載 NetFPGA的Managed devices、4台使用者電腦。 
c 實驗結果：不同管理者登入系統時，所觀察到的管理者關係與階層架構也會不同，階層架構只
列出前一層管理者以及後一層所下屬管理者，當第二層編號 2號之管理者登入時，畫面如圖 39
所示，而當第三層編號八號之管理者登入時，畫面如圖 40 所示，兩者之畫面會因管理者在階
層架構中之不同而變更。 
實驗二：管理者之建立 
a 實驗目的：驗證若此帳號有建立新管理者之權限，在系統中建立管理者時，系統會自動根據操
作者身份，自動產生新管理者之編號，並依據進行操作之管理者身份及階層位置，自動計算新
帳號之階層位置及設定其上層管理者之編號，因此不同管理者建立之帳號，會隸屬於不同階層
以及不同管理者之下。 
b 實驗設備：1台Managing Center、2台裝載 NetFPGA的Managed devices、4台使用者電腦。 
c 實驗結果：新管理者建立之介面如圖 41 所示，新管理者建立完成後，會立即出現在相對應之
階層位置中，如圖 42。 
52 
 
 
 
 
 
 
 
 
圖 41 建立新管理者 
 
圖 42 新管理者所在之階層 
54 
 
 
 
圖 44 新 VN所在之階層 
56 
 
3.8.3 情境三：政策管理 
此情境針對四種政策進行驗證，藉由總流量配額控管、VN 內頻寬管理、定量頻寬控管及定時定量
頻寬控管，達到 VN之間及 VN內各流量之控制。 
在政策模組內，支援動態啟動與停用政策，因此網路管理者不需將網路管理系統或被管理端設備重
新啟動，直接於網路管理介面中設定後，會自動將政策套用到相對應的設備中，達到動態管理與動態設
定之功能。 
實驗六：政策執行 - VN內之總流量配額控管 
a 實驗目的：確認在 VN內，流量配額控管政策是否能正確執行。 
b 實驗設備：1台Managing Center、2台裝載 NetFPGA的Managed devices、4台使用者電腦。 
c 實驗架構：架構圖如圖 47所示，將 2台 NetFPGA的 nf2c0網路介面透過網路線連接，並將 eth0
網路介面分別連接至管理中心，再將 User 1及 User 2分別連接至同一片 NetFPGA的兩個網路
埠上，User 3及 User 4連接至另外一片 NetFPGA的兩個網路埠上。 
d 實驗步驟： 
管理中心在 User 1及 User 3之間建立 VN1，在 User 2及 User 4之間建立 VN2。設定政策：
允許 VN內的所有流量，但當 VN2使用超過政策規定的總流量 20GB時，限制 VN2所有
流量傳輸。啟動所有 User電腦，開始任意傳輸資料，直到 VN2使用超過配額。檢查 VN2
傳輸是否已正確被停止。 
 
圖 47虛擬網路管理實驗之架構圖 
58 
 
e 實驗結果與討論：實驗結果如圖 51所示，從最左邊開始為背景流量，以每秒 12 MB至每秒 13.5 
MB之速率傳輸，接著另一個 HTTP流量開始傳輸，速率約為每秒 20 MB，此時 VN1內總流量
已超過政策限制之每秒 30 MB，因此政策啟動，禁止背景流量傳輸，由此實驗可驗證單一 VN
內之頻寬控管功能。 
實驗八：政策執行 - 定量之流量控管 
a 實驗目的：監測每筆流量之傳輸，當使用量超過配額時，暫時禁止此流量傳輸 5秒鐘。 
b 實驗設備：同實驗七 
c 實驗架構：同實驗七 
 
圖 50 頻寬監測及政策測試實驗之架構圖 
 
圖 51 VN內兩流量變化監測圖 
60 
 
 
 
圖 53 定時定量流量管理政策實驗之架構圖 
 
圖 54 定時定量流量管理實驗之傳輸速率圖 
 
圖 55定時定量流量管理實驗之配額使用量變化圖 
62 
 
3.8.4 情境四：階層式 VN及政策管理 
透過實驗三，建立出階層式虛擬網路，實驗架構如圖 58所示。四台已安裝 NetFPGA之電腦，以三
條實體線路 ADE連接，並在 ADE線路中建立底層之 VN1，接著在 A線路上建立 VN2，在 D線路上建
立 VN3，並安排六台 User 電腦，在網路管理系統中設定 User1 及 User4 加入 VN2 中，User3 及 User5
加入 VN3中，User3及 User6則加入 VN1中。 
接著從網路管理系統介面中，設定實驗六提到之總流量配額控管政策，套用在 VN1 上，實驗八之
定量流量控管政策，套用在 VN2上，及實驗九之定時定量流量控管政策，套用在 VN3上。 
透過網路管理系統之 VN建立，以及政策之制定與套用，可在實體節點與實體線路上，建構階層式
虛擬網路，並根據每個虛擬網路之用途，套用不同之政策，達到政策之獨立性。 
此實驗可驗證階層式虛擬網路之建構，以及分別在多個虛擬網路上，根據個別虛擬網路套用不同之政策
規則，且在不同虛擬網路之間，政策不會互相影響，並透過政策指定使用者加入不同之虛擬網路。 
 
  
 
圖 58 階層式 VN及政策管理實驗之架構圖 
64 
 
c Virtual Network功能模組：Virtual Network功能模組可提供管理者進行虛擬網路的建置與管理，
並且管理者經由此介面可監控各個虛擬網路的流量。 
d Violation Detecting功能模組：Violation Detecting功能模組具備監測與服務等級協議相關的網路
效能功能，透過Web GUI的介面化後，可將收集並經過處理後的資訊透過介面告知管理者，例
如彙整網路效能與服務等級協議等資訊，判斷是否快發生或已經發生違約，並將此資訊透過介
面警告管理者，使管理者可及時得知服務等級協議的狀況。 
 
圖 59系統運作及架構圖 
66 
 
4.2.1. Web GUI Module 
當管理者輸入帳號密碼經由 Admin Module驗證正確後，管理者便可經由Web GUI Module所提供的
功能進行操作，包括虛擬網路的控管與建置、服務等級契約的建立與網路狀態的監測等。如圖 62所示，
 
圖 61 管理平台功能模組與架構 
 
68 
 
針對已存在系統中的服務等級契約進行修改。 
Penalty Accumulation：當網路服務提供者所提供的服務沒有辦法達到服務等級契約所規範之內容
發生違約時，則 Penalty Accumulation功能將從 Violation Detection Module取得違約權重，並且
Weight Calculation功能根據開始權重計算相對的懲罰金，其可能為賠償相對金額，或是減少使
用者需支付的金額。 
SO-SPF function：SO-SPF功能提供當違約即將發生或已經發生時，可經由系統所收集得來的網路
狀態資訊以及服務等級契約資訊，判斷該違約是否需改變路徑，以此避免違約發生或是從違約
狀態中恢復。SO-SPF功能具備 SPF、Path Change Judgment與 Path Choice Enhancement等三種
功能來完成 SO-SPF所提供之功能。SPF可計算出各個網路流量目前的權重值，供 Path Choice 
Enhancement優化路徑選擇的資料之一。Path Change Judgment功能判斷是否使用者需要改變，
若需要改變路徑，則由 Path Choice Enhancement功能優化路徑的選擇，使違約的網路流量變換
至一條較佳的路徑，使其避免違約發生或從違約情況中恢復。 
SLA Module相關資料存於Module Database當中，其資料表結構如表 26所示。sc_id欄位為每筆
服務等級契約的唯一編號，sc_name 欄位是為服務等級契約的名稱，sc_user 欄位為服務等級契約的顧
客名稱，sc_validaty_sc 欄位是服務等級契約開始執行日期，sc_validaty_end 欄位為服務等級契約結束
執行日期，sc_provider 欄位是扮演服務提供者的網路位置，sc_measuer 欄位是扮演監督者角色的網路
位置，sc_customer欄位是顧客的網路位置，sc_quality欄位是網路服務提供者與顧客之間協議需給予保
證的網路服務名稱，sc_value 欄位是網路服務需達到的門檻值標準，sc_preoperator 欄位是表示多於門
表 26 SLA_contract資料表結構 
Column Name Data Type Length Null 
Primary 
Key 
Description 
sc_id Integer 10  ˇ Contract ID 
sc_name Varchar 20   Contract name 
sc_user Varchar 10   Customer name 
sc_validity_sc Varchar 20   Contract validity start time 
sc_validity_end Varchar 20   Contract validity end time 
sc_provider Varchar 20   Service provider role 
sc_measuer Varchar 20   Contract monitor role 
sc_customer Varchar 20   Service customer role 
sc_quality Varchar 20   Service name 
sc_value Integer 5   Service quality threshold 
sc_preoperator Integer 1   
Warning value is lessthan or 
morethan sc_value 
sc_violation Integer 10 ˇ  Violation time 
 
Virtual Network 
Module
Show Status function Virtual NetworkCreation function
Virtual Network
Modification function
Virtual Network 
Deletion function
 
圖 64 Virtual Network模組功能 
70 
 
辨識設備與虛擬網路的對應關係。表 29 中的 vl_id 欄位為每條線路的唯一識別編號，vl_name 為線路
名稱，vid則是用以辨識線路與虛擬網路的對應關係。在表 30中的 ip_id欄位為 IP CLASS的唯一識別
編號，ip_class欄位為 IP CLASS的網路位址，ip_device_1、ip_device_2、ip_device_3與 ip_device_4欄
位為 IP CLASS所包含的設備，vid則是用以辨識 IP CLASS與虛擬網路的對應關係，ip_throughput欄
位則是目前 IP CLASS現行有多少網路流量正在使用。 
4.2.4. Violation Detection Module 
Violation Detection Module主要是監測服務等級契約以及提供資訊給其他模組使用，所以Web GUI 
Module並沒有介面供管理者使用。Violation Detection Module的功能包括監測違約情況、違約發生時發
出警告訊息，以及當違約發生時開始計算違約時間。Virtual Netwrok Module功能如圖 65所示，其如下
所述： 
Parameter Detection function：根據Monitor Module所監測到之網路狀態，以及服務等級契約之資
訊，持續比較兩者之數值，並將結果資訊提供給 Violation Judgment function 
SLA Violation Warning function：從 Parameter Detection function取得監測之結果，判斷是否應該發
出違約警訊，用以警告管理者服務等級契約即將違約或已經違約，  
Violation Judgment function：從 Parameter Detection function取得監測之結果，判斷是否即將違約
或是已經發生違約情況，若已發生違約情況，則同時計算違約時間，並根據違約時間之多寡轉
換成懲罰權重，最後將提供 SO-SPF功能作為路徑變換判斷的參數之一。 
Violation Detection Module所需Module Database所提供之資料表如表 31所示。qt_id欄位為每筆
網路流量之唯一識別編號，qt_speed 欄位為網路流量之網路流速，qt_pkloss 欄位為網路流量的封包遺
失率，qt_counter欄位為網路流量的傳輸量累計，qt_src_ip 欄位為網路流量的 IP address，qt_src_ip欄
位為網路流量使用的 TCP port，qt_pkt_type欄位為網路流量傳輸封包的型態，qt_update_timer欄位為目
表 30 ip_class資料表結構 
Column Name Data Type Length Null 
Primary 
Key 
Description 
ip_id Integer 2  ˇ ip class ID 
ip_class Varchar 15   ip class 
ip_device_1 Integer 2   VN Device 1 
ip_device_2 Integer 2   VN Device 2 
ip_device_3 Integer 2   VN Device 3 
ip_device_4 Integer 2   VN Device 4 
vid Integer 1   VN ID 
ip_throughput Integer 20 ˇ  VN throughput 
 
Violation Detection  
Module
SLA Violation 
Warning function
Parameter 
Detection function
Violation 
Judgment function
 
圖 65 Violation Detection模組功能 
72 
 
Monitor Flow function：Monitor Flow 持續監測所有設備上正在運行的網路流量，並將設備上所有
運行的流量資訊，依據封包內的 MAC、IP或 port等資訊，整合或區分為相同或不同的流量資
訊，使管理者透過介面可更易於了解目前網路中有多少流量正在運行。Monitor Flow功能儲存
在Module Database之資料表，如表 33所示，rt_id欄位是所有流量各自擁有的唯一識別符號，
rt_pkt_type 欄位是流量的封包類型，rt_sec 欄位是累計流量已經持續傳輸多久時間，rt_byte 欄
位是累計總共已傳輸多少流量，rt_packet 欄位是累計總共已傳輸多少封包，rt_src_mac、
rt_dst_mac、rt_src_ip、rt_dst_ip、rt_src_port與 rt_dst_port等六個欄位是記錄流量的來源與目的
地，其資訊包括MAC、IP與 TCP port，update_timer欄位則是表示流量資料是否有持續被更新，
以及被更新幾次 
Monitor Log function：將Monitor Flow function所取得之網路流量資訊記錄於Module Database之
中，提供管理者未來可透過Web GUI操控介面查詢流量歷史資料，其所需Module Database所
提供之資料表結構與幾乎相同，如表  34 所示，差別在於 Monitror Log function 儲存於
log_flow_storage資料表中，並且新增 fs_timer欄位提供 timestamp之能力，將流量資訊標上時
間，可依此得知流量傳輸之先後順序 
表 33 log_realtime資料表結構 
Column Name Data Type Length Null 
Primary 
Key 
Description 
rt_id Integer 2  ˇ realtime monitor ID 
rt_pkt_type Varchar 6   packet type 
rt_sec Integer 5   duration sec 
rt_byte BigInteger 64   byte counter 
rt_packet Integer 10   packet counter 
rt_src_mac Integer 20   source MAC address 
rt_dst_mac Varchar 20   destination MAC address 
rt_src_ip Varchar 20   source IP address 
rt_dst_ip Varchar 20   destination IP address 
rt_src_port Int 2   source port address 
rt_dst_port Int 2   destination port address 
update_timer int 1   Information update times 
 
Monitor Module
Monitor Device 
function
Monitor VN 
function
Monitor Log  
function
Monitor Flow 
function
Monitor SLA 
function
 
圖 66 Monitor模組功能 
74 
 
4.3.1. 資料傳遞符號之定義與內容 
為能夠清楚表示系統中各功能模組間的資料傳遞，因此將各種資料符號化，使其更易瞭解。在系統
各功能模組間傳遞的資訊分為兩種類別，分別為使用者（User，簡化為符號 U）和虛擬網路（Virtual Network，
簡化為符號 V）等兩種資訊，如表 37 和表 38 所示。本系統所建立之服務等級契約資料表（簡化為符
號 I）的資料如表 36所示，包含契約的識別編號、契約的有效期限、契約的參與角色包括監測者、服務
提供者與使用者、品質參數名稱（簡化為符號 ε）、品質參數門檻（簡化為符號 δ）以及預警運算值（簡
化為符號 χ）。在 4.3.2、4.3.3以及 4.3.4等各個小節，將持續使用此小節所定義之簡化符號表，以清楚表
示資料之傳遞。 
4.3.2. 系統功能模組運作流程 
假設管理者最多可建立 m個虛擬網路，每一個虛擬網路可以 Vi表示，其中 i介於 1跟 m之間，而
任一個虛擬網路 Vi最多可被 n個使用者所使用，則該網路所擁有的使用者資訊可以 Uij表示，其中 j介
於 1跟 n之間。以下將針對第 i個網路的第 j個使用者說明，因此在描述網路內特定使用者的參數時，
將暫時省略符號 i和 j。 
其系統運行流程以及資料傳遞如圖 68所示，以下根據圖內各步驟進行說明： 
Step 1 管理者開啟Web GUI所提供的管理介面，並輸入管理者帳號 account與管理者密碼 password，此
時 Admin Module將根據管理者所輸入之資料驗證其正確性 
Step 2 Admin Module驗證管理者的帳號和密碼正確性後，Admin Module將回傳管理權限 permission給
管理者，使管理者具備操控系統之權限，讓管理者可和其他功能模組進行互動 
Step 3 管理者登入系統後，透過 Web GUI Module 可操控 Virtual Network Module 功能，此時 Virtual 
Network Module會先將已經存在的虛擬網路資訊 V讀入，供管理者可得知目前虛擬網路狀況 
Step 4 Virtual Network Module將已經存在的虛擬網路資訊 V回傳至Web GUI Module，呈現相關資訊 
Step 5 管理者可透過 Virtual Network Module進行虛擬網路的控管，包括建立、修改或刪除虛擬網路等動
作，並得知所有虛擬網路資訊。管理者在建造虛擬網路時，因 OpenFlow 其所提供的編號欄位為
12bits，所以上限只可建造 212個虛擬網路。在此步驟中，管理者可進行的操作如下所述： 
Step 5-1. 創建虛擬網路 V，其中 V的相關資訊包括虛擬網路包含的節點數量 D、線路 L、可用
Admin Module
Account Management 
function
Authority 
Verification function
Admin Creation 
function
 Admin Deletion 
function
 Admin Modification 
function
Information 
Demonstration 
function  
圖 67 Admin模組功能 
76 
 
  
表 36 服務等級契約資料表 
Service Level Agreement Table（I） 
ID 服務等級契約的唯一識別編號 
Validity 服務等級契約開始執行與結束期限 
Role 
參與服務等級契約執行的角色，包括服務提供者、使用者以及
監測者 
Quality name 
服務等級契約所規範的品質參數名稱，例如 throughput或 delay 
time等。簡化為符號 ε 
Threshold 服務等級契約所規範的品質參數門檻，簡化為符號 δ 
Pre-operator 
預警運算值，0表示為More than，1表示 Less than，見 3.3.3章
節內的內文說明，簡化為符號 χ 
 
表 37 使用者資料傳輸符號定義表 
Uij{ ψ , fp , sr , v , pv , φ, ωv, 
ωb, ωr, Г, nuid, cp} 
第 i個虛擬網路上的第 j個使用者的資訊 
Ψ 使用者根據服務品質參數ε實際於網路監測的值 
fp 使用者傳輸路徑是否已改變，0為已經改變，1為未改變 
sr 
使用者服務等級契約的預警值，見 3.3.3章節中的公式(3-1)說明
計算方式 
v 使用者違約時間累計量，其單位為秒 
pv 使用者違約時間的懲罰權重，見 3.3.3的內文說明 
φ 
使用者違約時間持續增加或減少狀態，1代表增加狀態、0代表
減少狀態 
ωv 懲罰權重轉換權重值，即為 pv，數值為 1到 3 
ωb 網路狀態轉換權重值，數值為 1到 3 
ωr 最短路徑機制結果轉換的權重值，數值為 1到 3 
Г ωv 、ωb和 ωr 三種權重值計算所得路徑變換權重值 
nuid 使用者所屬虛擬網路編號 
cp 使用者改變後之虛擬網路編號 
 
78 
 
4.3.3. Violation Detection Module機制運作流程 
當系統正在運作時，將持續監測由系統所控管之網路環境，包括網路服務使用者的網路流資訊、虛
擬網路的資訊以及服務等級契約的資訊等。在此前提之下，本論文為改善系統中已簽訂的服務等級契約
發生違約情況，提升服務等級契約的達成率，因此在 Violation Detection Module以及 SLA Module實作
防範違約情況發生之機制。如圖 69 所示，本論文系統主要著重於 SLA Module 與 Violation Detection 
Module，在本小節以及 4.3.4小節當中，將針對這兩個Module的機制運作流程進行詳細的說明。 
如圖 65所示，Violation Detection Module機制啟動後，系統會先透過 SLA Module的Contract function
將已經存在於資料庫中的服務等級契約資料 I 取出，此時 Violation Detection Module 中的 Parameter 
Detection function 將根據 δ 與 χ 計算網路服務使用者的預警值 sr，並將 sr以及 ψ 傳送給 SLA Violation 
Warning function判斷是否發生違約。 
表 38 虛擬網路資料傳輸符號定義表 
Vi{nid, D, L, , b, θ, r, uid}  第 i 個虛擬網路的資訊 
nid 虛擬網路的編號 
D 虛擬網路包含的網路節點 
L 虛擬網路包含點與點之間的線路 
b 虛擬網路的總頻寬 
θ 虛擬網路實際運行中的流量 
r 經 SPF計算所得之虛擬網路權重 
uid 虛擬網路的使用者編號 
 
 
圖 69 SLA與 Violation Detection模組功能圖 
80 
 
當 SLA Violation Warning function接收到 ψ與 sr後，先依據 χ判斷是”More than”或”Less than”，再判
斷網路服務使用者是否有超過 sr，若超過 sr，則 SLA Violation Warning function會發送違約警告訊息告知
管理者，並將資料傳給 Violation Judgment function。若是經過判斷沒有違約發生，則繼續監測各種狀況。 
Violation Judgment function收到來自 SLA Violation Warning function的資料，同樣根據 χ判斷”More 
than”或”Less than”，再依據 ψ是否低於或高於原先規範於服務等級契約中的 δ，來決定網路服務使用者
是即將違約或是已經違約的狀況。當網路服務使用者已經發生違約時，則系統將會開始計算違約時間 v。
違約時間的懲罰權重 pv，本論文系統參考 IETF制定的 QoS定義[67][68]分成三個等級，如圖 71所示，
當違約時間越多，則權重越高越嚴重。系統自動將違約時間 v轉換為懲罰權重 pv後，同時將網路服務使
用者所屬的虛擬網路資訊，如現行中的網路流量 θ與虛擬網路的路線權重值 r傳遞給 SLA Module中的
SO-SPF function處理。 
4.3.4. SLA Module機制運作流程 
SLA Module 在本系統所提出的防止違約機制中，主要是負責在系統所控管的網路環境中，依據整
體的網路環境，以及所有網路使用者的服務等級契約狀況，判斷在使用網路中的即將違約或是已經違約
的每個網路服務使用者，是否需要改變路徑，以此來降低整體的違約情況，提高服務等級契約的達成率。
上述 SLA Module功能則是由 SO-SPF function所負責，其主要是根據使用者的資訊 U、虛擬網路環境資
訊 V以及經由 SPF所算出的網路路徑權重 r等資訊來改變路徑。SO-SPF function具備兩種特點，分別
是路徑變換判斷以及優化路徑選擇等兩種特點，此兩特點不僅可判斷哪些正在使用網路的使用者需要改
變路徑，並可從所有的虛擬網路當中，選擇一條較適合的路徑給使用者，以防止違約發生或是從違約情
況中恢復。 
當 SLA Module從 Violation Judgment function收到資料後，將由 SLA Module中的 SO-SPF function
處理，其運作流程如圖 72所示。當 SO-SPF function收到懲罰權重 pv、現行中的網路流量 θ與虛擬網路
的路線權重值 r 之後，經過計算取得使用者的路徑變換權重值 Г 與路徑變換判斷標準值Γ 後，SO-SPF 
function將進行一連串的判斷來決定使用者是否需要改變路徑。 
 
 
圖 71違約時間與懲罰權重轉換 
82 
 
算各別比例值。ωv為使用者的懲罰權重值 pv，ωb為使用者所屬虛擬網路的現行網路流量 θ 以及虛擬網
路的總上限頻寬 b 的比例值，ωr為所屬虛擬網路的路徑權重 r 以及網路節點數量|D|的比例值。除了 pv
已經在Violation Judgment function已事先取得權重值外，另外已計算出比例值的ωr與ωb，同樣參考 IETF
制定的 QoS定義分成三個等級，如圖 73所示，當比例值越高，則權重值越高表示越嚴重。三種權重值
透過 α、β和 γ等三個常數值調整後，將三種權重值相加即可得使用者的路徑變換權重值 Г，如公式(4-3)
所示。路徑變換權重值 Г從權重轉換表可知，當 Г數值越高，則表示使用者屬於越容易違約的高危險群，
同時也表示懲罰越嚴重。系統根據三種資訊的不同重要性，分別提高或降低 α、β 和 γ 等三個常數值來
調整三種資訊在 Г中的比例，以凸顯三種資訊不同的重要性。 
                                                                                     D /r  
 /b 
p  
r 
b 
vv 
=
=
=
ω
θω
ω
 (4-2) 
                                                                         r b v γωβωαωΓ ++= (4-3) 
當系統得知所有網路服務使用者的路徑變換權重值 Г，透過將所有 Г加總並平均，可得路徑變換判
斷標準值Γ ，用以判斷使用者是否需要改變路徑。如(4-4)公式所示，將虛擬網路上的 Г加總可得到虛擬
網路的違約數值總和 T，可知虛擬網路目前違約之輕重情況。 
                                   ∈ ∈ ;   ≤ ≤1 , ≤   ≤1 ,  = 
n
1=
∑ Nj i,njmiT ij
j
i Γ
  (4-4) 
當使用者的 Г高於或等於Γ 值，在兩個情況下會改變路徑，分別是(1)使用者尚未改變過路徑，以及
(2)使用者切換路徑後，因為切換後的路徑已有其他流量正在使用，導致持續發生 overload情況，使違約
時間仍持續增加中。在以上兩個情況需要改變路徑時，系統則如公式(4-5)所示，扣除掉使用者正在使用
的網路，從其他虛擬網路的 T值中取出最小值 τ，若有相同 T值則隨機取一個，根據擁有此 T的虛擬網
路 nid 切換違約使用者的流量路徑，讓目前違約情況最輕微的虛擬網路，充當發生違約的流量的備援線
路。若是第二種切換路徑依舊違約的情況，則系統會切換其他 Г數值較小的流量到別的路徑，讓 Г數值
較高的危險流量能夠改善或防止違約。路徑改變後，系統將持續運作，繼續下一個循環的監測與判斷。 
 
圖 73 ωb與 ωr比例值和權重轉換 
84 
 
4.4.1 實驗架構 
在本計畫所提出之實驗的設備環境架構如圖 75 所示，在此架構當中，主要是由一台桌上型伺服器
扮演管理中心的角色，並管理四台由桌上型電腦組成網路的被管理節點，每一台被管理設備都具備一張
NetFPGA 開發版。在網路環境方面，除了被管理節點與管理中心之間的資料傳遞是透過一般 100Mbps
的乙太網路卡進行溝通外，其他由四台被管理設備所形成 full mesh network的整個網路環境，其線路速
度均是 1Gbps速率。 
實驗設備及環境 
管理中心以及被管理節點的硬體與軟體環境如表 39 以及表 40 所示。管理中心最重要的管理系統
是裝載 NOX Controller，使其可控制被管理節點的網路流，以及實現本計畫所提出之機制，另外透過搭
載Web Server建立Web GUI Module所應提供之介面，供管理者可透過介面進行系統控管。在管理中心
的機器上，也同時裝有 Database Server，負責擔任Module Database的角色，負責儲存各種資料。 
被管理節點主要則是裝載本計畫實作所需之 NetFPGA 開發版，使其可依據本計畫之需求，燒錄載
入 OpenFlow專案之相關程式，讓被管理節點具備 OpenFlow之功能，使 NOX Controller可控管所有被
管理節點。 
開發環境 
如表 41所示，管理中心上的 NOX Controller本身是使用 C/C++語言所開發，而在功能模組上的開
發則是採用 Python語言，另外管理中心上提供介面給管理者使用的Web GUI Module，則是採用 PHP5
的語言所開發，其中不管在 NOX controller或是Web GUI Module，凡需要使用到 Database的部分，則
都是以MySQL語言與 Database進行溝通，另外在開發 Database的部分，本計畫系統使用 phpMyAdmin
資料庫工具來控管所有資料表。在被管理節點方面，OpenFlow以及 NetFPGA的相關軟體及驅動程式，
則與 NOX Controller 相同，皆使用 C/C++所開發，透過已編譯好之 C/C++軟體使 NOX Controller 與
OpenFlow可相互溝通。 
 
圖 75 實驗環境架構圖 
86 
 
4.4.2 管理中心功能 
本計畫第二年度所提出系統機制主要是開發於管理中心，透過在 NOX Controller上開發功能模組，
以及建置於管理中心的Web GUI Module功能，監控並管理由被管理節點所組成的整個網路環境。 
當管理者透過一般網頁瀏覽器開啟系統介面之後，如圖 76 所示，將呈現系統的概觀，透過左邊的
鏈結，可以進行各項管理功能操作。透過 Login鏈結，可讓管理者進行身分驗證以及權限取得，其帳號
密碼輸入介面如圖 77所示，登入後可如圖 78所示，看到管理者相關資訊。 
 
 
 
表 41 系統開發環境 
開發工具 版本 
C/C++ Compiler GNU C/C++: gcc / g++ 4.3.2 
Library 
libboost 1.35-dev 
libxerces-c2-dev 
Web Development 
Language 
PHP 5.2.6 
Script Language Python 2.5.2 
DataBase Tool phpMyAdmin 3.3.4 
 
 
圖 76 系統概觀圖 
88 
 
 
 
 
 
 
 
圖 79 虛擬網路與 IP CLASS相關資訊 
 
圖 80 虛擬網路新增與修改介面 
90 
 
 
 
 
 
 
  
 
圖 84 服務等級契約相關資訊 
 
圖 85服務等級契約詳細相關資訊 
 
圖 86 網路流量相關資訊 
92 
 
b. 實驗架構：將被管理節點 A、B、C和 D接成 full mesh network狀態，且四個節點已透過網路
可和 NOX Controller進行溝通。 
4.5.1 情境一：虛擬網路管理 
此情境主要為驗證虛擬網路相關功能，以及建立虛擬網路後，是否可讓不同 IP CLASS之網路流量
依循各自的虛擬網路進行傳輸。 
實驗一：虛擬網路環境的建置 
a. 實驗目的：驗證在 Virtual network的虛擬網路建立功能可正常運作 
b. 實驗步驟：當管理者登入之後，可透過 Virtual Network Module建立虛擬網路以及 IP CLASS，
如圖 87以及圖 89所示 
c. 實驗結果與討論：完成建立後則如圖 88所示，建立後的虛擬網路會包括網路名稱、線路名稱、
被管理節點、網路頻寬上限以及使用中的總網路流量等資料，而建立後的 IP CLASS則包括 IP 
Class、被管理節點等資訊。 
實驗二：虛擬網路測試與流量監控 
實驗目的：驗證虛擬網路建立後，系統是否可正常監測 
實驗步驟：在本計畫所實作之系統，將選擇能夠以最少量節點數目的虛擬網路，給予符合其資訊的
IP CLASS所使用。在實驗一當中，一共建立了三個虛擬網路以及兩個 IP Class， IP CLASS當中建立了
192.168.0.0，被管理節點資訊有 A 和 C，其被管理節點由於皆包含於 VLAN1、VLAN2 以及 VLAN3，
因此 IP Class可任意屬於其中一個虛擬網路，但系統會根據網路流的終點目標，選擇一條能夠以最少量
節點數目的虛擬網路為其所屬的虛擬網路。 
實驗結果與討論：當 192.168.0.0之內的 IP開始傳輸流量，可以從圖 92看到在 full mesh network的
環境中流量會依據 VLAN之規則進行傳輸，並系統會即時監測正在傳輸的流量資訊並將資訊擷取儲存至
系統之中，可驗證此監測功能正常運作。 
 
 
 
 
 
圖 89 建立 IP CLASS 
94 
 
4.5.2 情境二：服務等級契約管理 
此情境主要為驗證服務等級契約相關功能，以及建立後，是否能夠即時監測使用者的品質參數。 
實驗三：服務等級契約的建置與查詢 
實驗目的：驗證在 SLA Module中的建立功能是否可正常運作 
實驗步驟：當管理者登入之後，可透過 SLA Module建立服務等級契約，如圖 90所示 
實驗結果與討論：完成建立後則如圖 91 所示，建立後的服務等級契約可看見大略的資料，以及是
否有違約警訊，並可即時監測目前使用者的品質參數狀態，可知 SLA Module運作正常 
實驗四：服務等級契約狀態監測 
實驗目的：驗證服務等級契約建立後，系統是否可正常監測 
實驗步驟：透過Web GUI Module所提供之介面建立服務等級契約建立 
實驗結果與討論：如圖 93和圖 94所示，管理者可從 SLA List頁面監測每個服務等級契約的品質
參數狀況，透過 Detail鏈結則可以看到有關此服務等級契約的詳細資訊，包括顧客名稱、服務提供者位
址、監測者位址、顧客位址、品質參數名稱、違約門檻等資料，可知系統正常監測服務等級契約 
 
4.5.3 情境三：動態路徑改變機制 
完成虛擬網路以及服務等級契約的建立後，為能夠防止違約，此實驗驗證是否能夠藉由在特定條件
下，透過 NOX Controller動態改變網路流量的路徑。 
 
圖 93 完成建立服務等級契約 
 
圖 94 查詢服務等級契約違約時間 
96 
 
 
 
 
 
圖 96 實驗五之實驗數據 
 
圖 97 違約警告通知 
98 
 
 
 
 
圖 99 系統設定操作圖 
 
 
 
圖 100 實驗七之實驗數據 
100 
 
交換器和節點 A相連 
c 實驗步驟：如圖 102所示，管理中心一開始先建立兩個 IP Class，分別為 192.168.0.0並包含 A
和 C 節點，以及 192.168.1.0 並包含 A、B 和 C 等三個節點。Bob 與 Service Provider 同屬於
192.168.0.0此 IP Class，background traffic則屬於 192.168.1.0此 IP Class。同時在系統內建立三
個虛擬網路，分別為頻寬限制為 200Mbps的 VLAN1包含節點 A和 C以及線路 AC，頻寬限制
為 300Mbps的VLAN2包含節點A、B和 C以及線路AB和 BC，頻寬限制為 400Mbps的VLAN3
包含節點 A、C 和 D以及線路 CD和 AD。設定 Bob 所協議之服務等級契約必須高於 20Mbps
方屬於正常情況，低於 20Mbps則是違約情況，並設定 κ參數為 0.2，使 sr為 24。違約時間 VIT
權重值轉換表設定為 20秒內權重為 1、20到 40秒間權重為 2，以及超過 40秒權重為 3。網路
狀態與路徑的權重值轉換表設定為 25%內權重為 1、25%到 75%內為權重 2，超過 75%權重為 3。
將調整三個權重值重要性的 α、β 與 γ 分別設為 0.6、0.3 與 0.1。開始 Bob 與 Service Provider
 
圖 103 實驗九之實驗數據 
102 
 
見圖內的所有數值皆有變化。由於虛擬網路中多了一筆流量，導致網路總流量變高，因此 Г-bob
從原先 1.6增加至 1.9，Γ 也從 0.8增加到 1.6，而 T數值計算是綜合 Г-bob以及 Г-bt，可看見從
1.6增加到 3.2。以上結果驗證所提出機制之權重值計算正確。 
4.5.6 情境六：SO-SPF機制與其它機制比較 
在此情境中，主要是比較在相同情況下，不使用任何機制、SPF機制以及本論文所提出之 SO-SPF
機制防止違約之情況。 
實驗十一：SO-SPF機制、SPF機制與無機制之比較 
a 實驗目的：在正常情況下，當發生違約時，比較三種機制之方法，何者可更有效率的防止違約
或恢復違約之情況 
b 實驗設備：一台管理中心、四台具有 NetFPGA的被管理節點，兩台桌上型電腦，一台 SmartBit 
c 實驗架構：如圖 106所示，將被管理節點 A、B、C和 D接成 full mesh network狀態，且四個
節點已可透過網路和 NOX Controller進行溝通。使用者 Bob、Alice、Ted以及 Tom 透過交換器
與節點 C相連，使用者 Bob、Alice和 Ted的服務提供者 Service Provider以及使用者 Tom的服
務提供者 Service Provider同樣透過交換器和節點 A相連 
d 實驗步驟：如圖 106所示，管理中心一開始先建立四個 IP Class，分別為 192.168.0.0並包含 A
和 C節點、192.168.1.0並包含 A、B和 C等三個節點、192.168.2.0並包含 A、C和 D等三個節
點以及 192.168.3.0並包含 A和 C等兩個節點。兩個 Service Provider分別負責提供服務給 Bob、
Alice、Tom 和 Ted，同時系統內建立三個虛擬網路，分別為頻寬限制為 80Mbps 的 VLAN1 包
含節點 A和 C以及線路 AC，頻寬限制為 50Mbps的 VLAN2包含節點 A、B和 C以及線路 AB
和 BC，頻寬限制為 200Mbps 的 VLAN3包含節點 A、C 和 D以及線路 AD和 CD。設定 Bob
所協議之服務等級契約必須高於 20Mbps 方屬於正常情況，低於 20Mbps 則是違約情況，並設
定 κ參數為 0.2，使 sr為 24。違約時間 v權重值轉換表設定為 20秒內權重為 1、20到 40秒間
權重為 2，以及超過 40秒權重為 3。網路狀態與路徑的權重值轉換表設定為 25%內權重為 1、
25%到 75%內為權重 2，超過 75%權重為 3。將調整三個權重值重要性的 α、β與 γ分別設為 0.6、
 
圖 105 實驗十之實驗數據二 
104 
 
間停止累計，因此防止違約機制將 Bob流量繼續移往下一個最短路徑到達目的地的虛擬網路，
而 Ted所屬的虛擬網路頻寬由於足夠 Bob使用，因此 Bob從違約情況恢復，違約時間也停止累
計。 
g 第三種實驗為系統具備以 SO-SPF 防止違約機制之實驗結果，如圖 110 所示，當 Bob、Alice
與 Ted傳輸流量持續到 60秒左右時，與 Bob同虛擬網路的 Tom 也開始傳輸流量，由於 Tom 固
定發出大量封包，因此造成 Bob 的傳輸速度在大約 60 秒左右的時候下降至 17Mbps 左右，雖
然 SO-SPF具備預警機制，但對於傳輸流量快速下降的情況仍無法有效防止。當 Bob發生違約
後，SO-SPF機制開始根據持續計算中的 Г-bob、Г-Alice、Г-Ted、Г-Tom、Г、T1、T2以及 T3等權重值
為 Bob 選擇違約機率較低的路徑。如圖 111 及圖 1120 所示，系統開始運行時即根據 Г-bob、
Г-Alice、Г-Ted和 Г-Tom不斷計算Γ ，並當 Bob於 60秒發生違約時，系統根據 Г-Bob高於 Γ 此結果
判斷 Bob需要改變路徑，此時系統並從 T2與 T3當中，選擇權重值較小的 T3做為 Bob更改路徑
後的虛擬網路，因此當 60秒發生違約後，可發現因為 Bob直接選擇 Ted為其備援路線，而 Ted
的頻寬亦足夠 Bob 所使用，所以當 Bob 切換至 Ted 所屬的虛擬網路後，在圖 107 中 SO-SPF
機制的違約時間累計一次便停止計算，而不會發生如 SPF機制般，需不斷更換路徑以尋找最適
合之備援線路。 
h 以上三個實驗結果可驗證 SO-SPF防止違約機制雖然因為傳輸速率下降過快而預警機制無法啟
用，但在降低違約時間則比 SPF有更好的表現。 
 
圖 108 不具備違約機制之流量傳輸圖 
 
圖 109 以 SPF機制防止違約之流量傳輸圖 
106 
 
第 5 章   結論 
本計畫第一年度實作一套虛擬網路之階層式管理系統，由Web-based UI Module、Policy Module、
VN Module、Manager Module、Control Module及Monitoring and Log Module所組成，讓管理者可以在管
理者介面中管理其他下層管理者、管理下層虛擬網路、制定及管理政策，及設定、控制各項被管理設備，
並搭配 OpenFlow專案，應用在 NetFPGA網路開發版上，在虛擬化之網路環境下，建構出一個階層式虛
擬網路環境，並搭配階層式網路管理架構，使網路管理權限能同時具備中央集權及地方分治之特色。 
NetFPGA從硬體、Gateware、Linux Kernel Driver到 Application Software提供了一套完整的網路開
發平台，其可程式化特性，使被管理端設備可支援眾多不同網路之設備功能，達到開發與相容性驗證之
目的，在 CentOS Linux 作業系統上亦提供完整驅動程式，只需透過 Linux 作業系統即可完整控制
NetFPGA，不需額外購買或連接其他開發設備。 
透過 OpenFlow 提出網路流之特性，可精準的控制各組網路流，決定每組網路流是否允許通過，而
透過 OpenFlow Protocol，可使所有支援此協定之設備，皆可受到控管，管理者在網路管理系統介面下達
新指令時，系統後端會將指令轉成相對應之控制指令，並將指令傳送至相對應之被管理端設備。 
以政策為主的網路管理，可藉由監控被管理端的各項資料，決定是否觸發政策之執行，例如當被管
理端設備回傳之資料顯示，某一網路流大量佔據頻寬，則可針對此網路流進行封鎖之動作；或者當某一
網路流已經使用完可用之流量配額，則暫時封鎖流量數秒鐘，達到限制網路流速之效果。政策可將複雜
的管理規則簡化成許多不同的政策，而政策觸發條件及對應動作之搭配與可重複利用性，可減輕網路管
理者之管理負擔，在管理規範更動時，也只需修改相對應之政策即可，不需修改網路管理系統內部程式。 
透過 VLAN方式建立出虛擬網路，並藉此架構出階層式虛擬網路，允許一般網路管理者從所管理的
VLAN，再分出 Sub-VLAN，增加網路架構、管理及應用之彈性，階層式網路管理也將網路管理者依照
階級，以繼承上層之方式，達到權限控管、劃分及再授權，增加網路管理之彈性，並可平均分攤管理者
之負擔。 
而網路迅速的發展，虛擬網路上的管理也越形重要，而網路服務使用者的要求也越來越嚴苛，為了
能夠利用虛擬網路的特性以及便利，提供網路服務使用者更好的網路品質，並讓管理者可以減少服務等
級契約的懲罰，因此本計畫所進行之研究，主要著重於如何結合虛擬網路以及服務等級契約，並提出
SO-SPF此套防止違約發生的機制，用以改善服務等級契約之達成率。 
本計畫第二年度提出一套虛擬網路管理系統，其共有六個模組，分別是 Web GUI Module、SLA 
Module、Violation Detecting Module、Monitor Module、Admin Module以及 Virtual Network Module等六
個模組，透過這六個模組，管理者可監控系統所控制的網路環境以及建立於系統中的服務等級契約，並
可管理虛擬網路與服務等級契約。在 SLA Module以及 Violation Detecting Module當中，為了能夠讓系
統自動發出警告以及防止違約發生，本計畫透過 Violation Detecting Module提供資訊給 SLA Module，將
SO-SPF機制建立於 SLA Module當中，經由 SO-SPF，當網路環境當中有使用者即將發生違約或已發生
違約，經由此機制之協調與改變路徑，可改善違約情況，從而提高服務等級契約的達成率。 
為了驗證機制之可行性，因此本計畫將所提出之系統架構與機制，實際建立在 NetFPGA開發板上，
並透過 OpenFlow以及 NOX Controller專案實際控制整體網路環境，最後透過多個實驗來驗證機制之可
行性，並確實可看見在本機制之實行下，可提高服務等級契約的達成率。最後本計畫實作在多流量之情
況下，比較一般無機制、SPF 機制以及 SO-SPF 機制等三種機制之實驗，當違約發生時，SPF 機制比起
一般無機制，可改善持續違約之情況，而 SO-SPF不僅具備 SPF優點，由於已先選擇網路狀態以及服務
等級契約較佳的路徑，因此避免違約能力又優於 SPF，最後實驗數據可看出 SO-SPF 在同樣情況下，可
比 SPF少換一次路徑，借此提高達成率。 
由本計畫第一年度與第二年度所研究出的成果，經過實驗之後確實能夠改善網路上之管理進而增加
網路效能。然而本計畫更以未來網路架構為目標，期待能夠研究出更符合未來網路架構之網路管理方案。 
108 
 
[17] J Yang, P Wang and J Wu, “A Scalable, Web-based Architecture for Hierarchical Network Management,” 
Proceedings of IEEE Global Telecommunication Conference (GLOBECOM ’99), Rio de Janeiro, Brazil, 
pp. 1882-1888, December, 1999. 
[18] M. El-Darieby and J. Rolia, “Hierarchical Creation of Virtual Networks,” Proceedings of 10th IEEE/IFIP 
Network Operations and Management Symposium (NOMS 2006), Vancouver, BC, pp. 220-229, April, 
2006. 
[19] M. Aldinucci, M. Danelutto and P. Kilpatrick, “Towards Hierarchical Management of Autonomic 
Components: A Case Study,” Proceedings of 2009 17th Euromicro International Conference on Parallel, 
Distributed and Network-based Processing, Weimar, Germany, pp. 3-10, February, 2009. 
[20] J. Famaey, S. Latre, J. Strassner and F. D. Turck, “A hierarchical approach to autonomic network 
management,” Proceedings of 2010 IEEE/IFIP Network Operations and Management Symposium 
Workshops (NOMS Wksps), Osaka, Japan, pp. 225-232, April, 2010. 
[21] P. Saravanan, E. Reuter and S. Verma, “Enhancing enterprise network management using SMART, ” 
Proceedings of 2008 Annual IEEE India Conference on Control, Communication and Automation, Kanpur, 
India, pp. 343-348, December, 2008. 
[22] C. Wang, “Policy-based network management,” Proceedings of Communication Technology, Beijing, 
China, pp. 101-105, August, 2000. 
[23] D. Agrawal, K.-W. Lee and J. Lobo, “Policy-based management of networked computing systems,” IEEE 
Communications Magazine, vol. 43, no. 10, pp. 69-75, October, 2005. 
[24] J. C. Strassner, Policy-Based Network Management - Solutions for the Next Generation, 1st Edition, 
Morgan Kaufmann, September, 2003. 
[25] RFC 3198 - Terminology for Policy-Based Management, http://www.ietf.org/rfc/rfc3198.txt 
[26] A. R. Choudhary, “Policy-based network management,” Bell Labs Technical Journal, vol. 9, no. 1, pp. 
19-29, May, 2004. 
[27] G. Pujolle, “Policy-based network management,” Annals of Telecommunications, vol. 59, no. 1-2, pp. 2-9, 
January, 2004. 
[28] D. C. Verma, “Simplifying Network Administration Using Policy-Based Management,” IEEE Network, 
vol. 16, no. 2, pp. 20-26, March/April 2002. 
[29] R. Chadha, H. Cheng, Y.-H. Cheng, J. Chiang, A. Ghetie, G. Levin and H. Tanna, “Policy-based mobile ad 
hoc network management,” Proceedings of the Fifth IEEE International Workshop on Policies for 
Distributed Systems and Networks (POLICY 2004), Yorktown Heights, New York, pp. 35-44, June, 2004. 
[30] M. Casado, M. J. Freedman, J. Pettit, J. Luo, N. McKeown and S. Shenker, “Ethane: Taking Control of the 
Enterprise.” Proceedings of the 2007 conference on Applications, Technologies, Architectures, and 
Protocols for Computer Communications, Kyoto, Japan, pp. 1-12, August, 2007. 
[31] M. Casado, M. J. Freedman, J. Pettit, J. Luo, N. Gude, N. McKeown and S. Shenker, “Rethinking 
Enterprise Network Control,” IEEE/ACM Transactions on Networking (TON), vol. 17, no. 4, pp. 
1270-1283, August, 2009. 
[32] ITIL, http://www.itil-itsm-world.com/itil-sla.htm 
[33] D.C. Verma “Service Level Agreements on IP networks,” Proceedings of the IEEE, vol.92, no.9, pp. 1382- 
1388, September, 2004. 
[34] TeleManagement Forum, http://www.tmforum.org, Accessed on 22nd Nov, 2005. 
[35] Z. Shu, and S. Meina, “An Architecture Design of Life Cycle Based SLA Management,” Proceedings of 
the 12th International Conference on Advanced Communication Technology (ICACT), vol.2, 
110 
 
[50] N. Dukkipati, G. Gibb, N. McKeown, J. Zhu, “Building a RCP (Rate Control Protocol) Test Network,” 
Proceedings of the 15th High Performance Interco- nnects Symposium, California, USA, pp.91-98, 
August, 2007. 
[51] G. A. Covington, G. Gibb, J. W. Lockwood and N. McKeown, “A Packet Generator on the NetFPGA 
Platform,” IEEE Symposium on Field Programmable Custom Computing Machines (FCCM'09), Napa, 
CA, pp. 235-238, April, 2009. 
[52] M. Ciesla, V. Sivaraman and A. Seneviratne, “URL Extraction on the NetFPGA Reference Router,” 
NetFPGA Developers Workshop, Stanford, California, pp. 39-44, August, 2009. 
[53] M. B. Anwer and N. Feamster, “A Fast, Virtualized Data Plane for the NetFPGA,” NetFPGA Developers 
Workshop, Stanford, California, pp. 90-94, August, 2009. 
[54] Open Network Laboratory, https://onl.wustl.edu/ 
[55] C. Wiseman, J. Turner, J. DeHart, J. Parwatikar, K. Wong and D. Zar, “Using the NetFPGA in the Open 
Network Laboratory,” NetFPGA Developers Workshop, Stanford, California, pp. 80-85, August, 2009. 
[56] N. McKeown, T. Anderson, H. Balakrishnan, G. Parulkar, L. Peterson, J. Rexford, S. Shenker, and J. 
Turner, “OpenFlow: Enabling Innovation in Campus Networks,” ACM SIGCOMM Computer 
Communication Review, vol. 38, no. 2, pp.69-74, April, 2008. 
[57] R. Sherwood, M. Chan, A. Covington, G. Gibb, M. Flajslik, N. Handigol, T.-Y. Huang, P. Kazemian, M. 
Kobayashi, J. Naous, S. Seetharaman, D. Underhill, T. Yabe, K.-K Yap, Y. Yiakoumis, H. Zeng, G. 
Appenzeller, R. Johari, N. McKeown, and G. Parulkar “Carving Research Slices Out of Your Production 
Networks with OpenFlow,” SIGCOMM Computer Communication, vol. 40, no. 1, pp.129-130, January, 
2010. 
[58] B. Heller, “OpenFlow Switch Specification Version 1.0.0 (Wire Protocol 0x01),” December, 2009. 
[59] R. Sherwood, M. Chan, A. Covington, G. Gibb, M. Flajslik, N. Handigol, T.-Y. Huang, P. Kazemian, M. 
Kobayashi, J. Naous, S. Seetharaman, D. Underhill, T. Yabe, K.-K. Yap, Y. Yiakoumis, H. Zeng, G. 
Appenzeller, R. Johari, N. McKeown and G. Parulkar, “Carving research slices out of your production 
networks with OpenFlow,” SIGCOMM Computer Communication, vol. 40, no. 1, pp. 129-130, January, 
2010. 
[60] N. McKeown, T. Anderson, H. Balakrishnan, G. Parulkar, L. Peterson, J. Rexford, S. Shenker and J. 
Turner, “OpenFlow: Enabling Innovation in Campus Networks,” ACM SIGCOMM Computer 
Communication Review, vol. 38, no. 2, pp. 69-74, April, 2008. 
[61] K.-K. Yap, M. Kobayashi, D. Underhill, S. Seetharaman, P. Kazemian and N. McKeown, “The Stanford 
OpenRoads Deployment,” Proceedings of the 4th ACM international workshop on Experimental 
evaluation and characterization (WINTECH '09), Beijing, China, pp. 59-66, September, 2009. 
[62] J. Naous, D. Erickson, G. A. Covington, G. Appenzeller and N. McKeown, “Implementing an OpenFlow 
Switch on the NetFPGA platform,” Symposium on Architecture for Networking and Communications 
Systems, San Jose, CA, USA, pp. 1-9, November, 2008. 
[63] N. Handigol, S. Seetharaman, M. Flajslik, N. McKeown and R. Johari, Plug-n-Serve: “Load-Balancing 
Web Traffic using OpenFlow,” Proceedings of ACM SIGCOMM Demo, Barcelona, Spain, August, 2009. 
[64] A. Nayak, A. Reimers, N. Feamster and R. Clark, “Resonance: Dynamic Access Control for Enterprise 
Networks,” Proceedings of the 1st ACM workshop on Research on enterprise networking, Barcelona, 
Spain, pp. 11-18, August, 2009. 
112 
 
國科會補助專題研究計畫成果報告自評表 
請就研究內容與原計畫相符程度、達成預期目標情況、研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）、是否適
合在學術期刊發表或申請專利、主要發現或其他有關價值等，作一綜合評估。 
1. 請就研究內容與原計畫相符程度、達成預期目標情況作一綜合評估 
■達成目標 
□未達成目標（請說明，以 100字為限） 
□實驗失敗 
□因故實驗中斷 
□其他原因 
說明： 
114 
 
3. 請依學術成就、技術創新、社會影響等方面，評估研究成果之學術或應用價
值 
為解決網路管理系統之發展，尚未能與虛擬網路特性搭配之問題，本計畫第一年度將階
層式管理系統架構與網路虛擬化環境結合，以階層式網路管理架構來管理多個虛擬網路，增
加網路管理之彈性，管理者之間能根據權責進行權力分工，讓不同階層的網路管理人員只擁
有所需要的特定權限，而不必擁有整體網路之管理權限。 
透過以網頁為基礎的管理者介面，實作在 NetFPGA網路開發版上，可將此架構實作在高
速網路環境中，並藉由 OpenFlow專案，架設 VLAN環境，建立出虛擬網路，並透過 OpenFlow 
Protocol及 NOX Controller專案，達到網路管理系統與被管理元件間之網路流控制，控制虛擬
網路內之網路流傳輸。本計畫第二年度所提出之機制將監測網路效能以及服務等級契約，並
將監測所得之數值用以優化最短路經優先機制，增加最短路徑優先機制之彈性，讓網路服務
提供者在面臨資源不足又即將違約的情況下，此機制可自動更改網路服務使用者目前所使用
之虛擬網路線路，從而阻止違約情況發生，提高契約達成率。 
 
 
出席國際會議報告書 
謝錫堃  電機系 
中文摘要： 
ICPADS2011 (2011 IEEE International Conference of Parallel and Distributed 
Systems)將由本校主辦，本人擔任 General Co-Chair，受邀於上海舉辦的 ICPADS2010閉
幕典禮上向所有與會者報告籌備情形。ICPADS2010舉辦時間為 Dec. 8-10, 2010，本人
12月 7日搭機到達上海，全程參與會議，以便了解大會的辦理情形，並將 ICPADS 2011
的 Call-for-Paper 提供給與會者，同時也認識參與此會議的國際學者，最後在閉幕典禮
上介紹下年度會議主辦單位、大會籌備委員、會議地點、住宿旅館及台灣經濟發展，吸
引很多與會者的注意與興趣。這次的與會，相信對本校成功辦理 ICPADS2011絕對有
很大的幫助。 
  
英文摘要： 
ICPADS (2011 International Conference of Parallel and Distributed Systems) will be hosted by NCKU 
in 2011. I serve as the General Co-Chair of this conference and was invited to present the current status 
of the conference in preparation on the closing ceremony of ICPADS 2010. ICPADS 2010 were held in 
Shanghai, China in December, 8-10, 2010, right after the World Expo in Shanghai. I arrived at 
Shanghai on Dec. 7 and join the conference every day. On the closing ceremony, I introduced NCKU: 
the host, organizing committee, venue and accommodation of the ICPADS 2011 for all of the audience. 
I believe this presentation have attracted the attention of the audience of the ICPADS 2010.  
 
一、出席目的 
ICPADS2011 (2011 IEEE International Conference of Parallel and Distributed 
Systems)將由本校主辦，本人擔任 General Co-Chair，受邀於上海舉辦的 ICPADS2010閉
幕典禮上向所有與會者報告籌備情形；包含:主辦單位、大會籌備委員、會議地點、住
宿旅館及台灣經濟發展，以便吸引很多與會者的注意與興趣。 
 
 
二、出席過程 
2010年 12月 7日早上 7:20搭乘華航 CI-0581(回程 CI-0582)班次於高雄機場
起飛，約 2個小時的飛行時間抵達上海浦東機場，出關後搭乘 Bus抵達會議地點。
大會地點是在上海市中心衡山賓館，對於國外與會者非常方便。 
 大會第一天安排整天的 workshop論文發表，總共有 5個並行場次，每個場
次參與的人並不多，有些是個位數，最多的場次人數大約有 20多人。 
交通大學校區內)及台灣的重要國際會議都安排在台北的主要原因。唯這樣的安
排往往失掉讓國外與會者了解主辦學校學風與進步的情況。國內高鐵已經將台灣
變成一日生活圈，南北往返非常快速便捷，台南是台灣古都，有豐富的古蹟，又
有五星級飯店，本校歷史悠久，學豐純樸，各領域都發展的很完整及先進，很值
得讓外人來參訪，建議本校未來主辦的國際會議儘可能在校內主辦，讓國外與會
者多一些機會了解成大進步的情形。這也是 ICPADS2011將主辦地點安排在本校
舉行的一個重要的原因，希望未來其他會議也儘可能安排在本校舉辦。 
99 年度專題研究計畫研究成果彙整表 
計畫主持人：謝錫 計畫編號：99-2219-E-006-003- 
計畫名稱：網路虛擬化架構之研究與建置--子計畫四：設計與實作一虛擬化網路之管理平台(2/2) 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 3 0 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 4 0 100%  
博士生 2 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
