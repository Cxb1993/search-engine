I 
 
MINDS：多核心系統自動化設計平台 
“MINDS: Multi-core Integration Design System” 
計畫編號：NSC96－2628－E－007－144－MY3 
執行期間：96 年 8 月 1 日 至 99 年 7 月 31 日 
主持人：清華大學資工系 蔡仁松教授 
摘要 
本 研 究 計 畫 MINDS (Multi-core 
Integrated Design System)旨在建立一個虛擬
多核心平台(Virtual Platform)。以利設計者能
在開發前期進行快速驗證。利用虛擬平台，
軟體開法者不必等到實體平台完成，開發前
期即可進行軟硬體同步設計。如此一來，不
但可大幅縮減開發時程，加速產品上市時間
(time-to-market)；一些規格制定上的嚴重錯
誤，亦能被提早發現。進而有效降低產生的
重新開發成本 (Non-Recurring Engineering 
Cost)。此外於實體平台上進行軟體開發本身
更存在許多缺點。開發者無從得知硬體內部
的狀態，因此錯誤一旦發生，無法於第一時
間判斷是軟體或硬體所造成。縱使有昂貴的
硬體除錯器，卻只能緩慢地進行 step-by-step
追蹤，仍難以滿足複雜的程式之需求。 
理想的虛擬平台必須滿足兩項重要的
條件:「快速」與「準確」。快速的虛擬平台
可以讓開發者感覺程式執行如同在實體平
台一樣，尤其必須能將複雜的軟體程式於可
接受的時間內模擬完畢。另外，一個準確的
虛擬平台可以忠實地模擬出如同實體平台
般的程式執行行為，幫助開發者更容易驗證
其設計之正確性。然而目前的虛擬平台往往
難以兼顧速度與準確度。根據我們的觀察發
現，多核心系統相較於傳統單核心而言會遭
遇到時間同步的問題。不當的處理時機同步，
可能造成模擬速度拖慢或者精確度下降。固
本計畫提出一個新的時間同步方法，在不犧
牲準確度的前提下，可大幅提升模擬速度。 
Abstract 
 In this research project, we propose a 
virtual multi-core platform: Multi-core 
Integrated Design System (MINDS). With the 
virtual platform, designers can do early-stage 
verification not waiting for the completion of 
a real platform. Hence, it can significantly 
shorten the development time and hasten 
time-to-market. Besides, some fatal errors 
within the defined specification can be 
detected in advance, so the Non-Recurring 
Engineering (NRE) cost will be greatly 
reduced. In addition, a virtual platform offers 
designers better debuggability and higher 
visibility, which are unavailable in a real 
platform. These features are quite important 
for complex multi-core system development. 
 An ideal virtual platform has to satisfy 
two crucial requirements: high simulation 
speed and accuracy. A high-speed virtual 
platform can execute target programs as fast 
as a real platform, since it is important to run 
the complex program within the reasonable 
simulation time. On the other hand, an 
accurate virtual platform can faithfully 
perform the same behaviors as a real platform, 
which can effectively validate the correctness 
of the design. Therefore, in order to provide 
such an ideal virtual platform, the key issue of 
our study is how to speed up simulation while 
maintaining the accurate results at the same 
time. 
2 
 
另一種方式為分散事件(discrete event)
同步[16][23][24][27][28]。在模擬的不同工
作中，找出彼此真正具有相依性的事件。因
為非相關者先後順序並不影響最後模擬結
果，所以僅須確保相依性事件之先後順序即
可。故可大幅縮減同步負擔，進而達到高效
率模擬。 
四、 研究方法 
Timing Synchronization 
多核心協同模擬的關鍵在於不同核心如何
被同步的執行。在多核心架構中，運行在不
同核心的程式會被「同時」執行。為了讓虛
擬平台忠實的反映多核心的行為，每一個核
心的模擬器也必須「同步化(Synchronized)」。
如圖一(a)所示，在沒有同步的狀況下，每一
顆核心的模擬會被底層OS隨意的排班。進
而造成如同圖一(b)般，在時間上不一致。這
會導致原本應該先執行program2的store再執
行program3的load的順序顛倒。隨著底層不
確定的排班，每次模擬都可能產生完全不一
樣的結果。 
為解決此一問題，傳統的鎖步法
(Lock-step Approach)在每一個 Clock Cycle
去同步所有的核心模擬器，如圖一(c)。此法
圖一: 不同同步方式所造成之模擬時間軸示意圖 
(a) Four ISSs running on two host cores without 
synchronization 
Context switch 
Host Core1 
Host Core2 
Simulation Time 
ISS2 
ISS3 
ISS1 ISS3 
load @0x01 
ISS4 Program2 
Program1 
Program4 
Program3 
Simulated Clock 
store @0x01 
load @0x01 
Un-synchronized
(b) The un-synchronized simulated clocks 
of the simulated programs 
Program2 
Program1 
Program4 
Program3 
Synchronized 
… 
Simulated Clock 
(c) The lock-step synchronization 
Host Core1 
Host Core2 
Simulation Time 
… 
Barriers for timing synchronization at each cycle 
ISS2 
ISS1 
ISS4 
ISS3 
ISS2 
ISS1 
ISS4 
ISS3 
(d) The synchronized simulation affected 
by the lock-step synchronization 
Program2 
Program1 
Program4 
Program3 
Simulated Clock 
store @0x01 
load @0x01 
Enforce the shared 
access executed in order
(e) Timing synchronization before the shared 
memory access 
A barrier to enforce timing synchronization before the 
load instruction 
Host Core1 
Host Core2 
Simulation Time 
ISS2 
ISS3 
ISS1 
ISS4 
store @0x01
ISS3 ISS2 
(f) In-order execution of shared memory accesses 
4 
 
我們所提出來的新 model 中，以
shared-variable 當作檢查點，如圖二(d)。雖
然同樣會造成 interrupt 的延遲處理，但因為
我們的方法仍能維持程式之間的 data 
dependency。所以程式的執行結果完全等同
於原本 cycle-accurate model。同時，我們的
方法可以大幅縮減模擬時間，達到快速的系
統模擬。 
 
Extended SystemC 
SystemC 已經成為系統層級模擬的主
要工具，但其乃針對硬體模擬為主。目前並
沒有一套明確的方式來達到快速且準確的
軟硬體協同模擬。尤其是現今的軟體架構包
含了 Multi-tasking 的 OS，可以在一個實體
的處理器上，以 time sharing 的方式執行多
個程式。 
為了解決此問題，本計畫提出一個
extended SystemC 的架構，如圖三所示。其
中仍保留原本的硬體模擬方式，只針對
SystemC 不足的軟體部分作加強。我們提出
一套自動化方法將使用者的 target binary 轉
換產生相對應軟體的 SystemC module。同時
利用我們所提出的 OS modeling 方式，建立
一個能快速且準確處理 interrupt 行為的 OS 
model。藉此可幫使用者輕鬆達成軟硬體協
同模擬。 
 
五、 實驗數據 
針對計畫所提出的方法跟現行方法，我
做了一系列實驗比較來證明其具體效用。 
Experimental Setup 
我們的實驗平台採用 Intel Xeon 2.6 
GHZ quad-core 處理器搭配 4GB 的記憶體。
而我們實驗的對象是針對 Andes 的指令集
架構。 
Simulation Accuracy 
在模擬準確度實驗中，我們以一個時間
相 依 程 度 高 的 watchdog 當 作 測 試 的
benchmark。圖四出不同 modeling 方式所產
生的誤差率，較基準為傳統的鎖步法。我們
所提出的 shared-data synchronization 跟鎖步
法結果一致，但以 basic block 為檢察單位的
方法會隨著 time-out週期的縮短而產生越來
越高的誤差值且整體誤差值都在50%以上。
由此便可看出採用我們的方法之可靠度。 
 
 
 
Simulation Speed 
為了測試我們方法的模擬速度，此實驗
採用了 SPLASH-2 這個平行程式 benchmark。
並且比較了 cycle-accurate model 跟 basic 
block model 。 詳 細 數 據 如 表 一 。
Cycle-accurate model 受限於大量的檢查負
擔，僅有 2 MIPS 左右的模擬速度；Basic 
block model 略為提升至 15 MIPS 上下。而
我們提出的 shared data model 可以達到
50~220 MIPS 的模擬速度，因此足以證明本
方法的實施之功效。 
 
0%
20%
40%
60%
80%
100%
150 200 250 300
Er
ro
r R
at
e
Time‐out Period (ns)
Basic‐block level Shared‐data level
圖三: Entended SystemC 架構 
 Application Models 
 
Hardware 
SystemC Kernel 
wait 
wait 2 
Interrupt  
Table 
OS Model 
1 
4 
wait 
3 
update 
notify 
5 
notify 6 
notify 8 
check 
7 
圖四: 誤差率比較 
6 
 
Multiple Abstraction Layers for Efficient 
HW/SW Co-simulation,” in DATE 2010. 
11. K.L. Lin, C.K. Lo, and R.S. Tsay, “Source-Level 
Timing Annotation for Fast and Accurate TLM 
Computation Model Generation,” in ASPDAC 
2010. 
12. F.Y. Chang, R.S. Tsay, and W.K. Mak, “How to 
Consider Shorts and Guarantee Yield Rate 
Improvement for Redundant Wire Insertion,” in 
ICCAD 2009. 
13. M.H. Wu, C.Y. Fu, P.C. Wang, and R.S. Tsay, 
“An Effective Synchronization Approach for Fast 
and Accurate Multi-core Instruction-set 
Simulation,” in EMSOFT 2009. 
14. Y.L. Lo, M.L. Li, and R.S. Tsay, “Cycle Count 
Accurate Memory Modeling in System Level 
Design,” in CODES+ISSS 2009. 
15. C.K. Lo, and R.S. Tsay, “Automatic Generation 
of Cycle Accurate and Cycle Count Accurate 
Transaction Level Bus Models from a Formal 
Model,” in ASPDAC 2009. 
參考文獻 
[1] Simplescalar, available at www.simplescalar.com 
[2] J. Zhu and D. Gajski, "A retargetable, ultra-fast 
instruction set simulator," in DATE: Proceedings of the 
conference on Design, automation and test in Europe. pp. 
62-69, 1999. 
[3] J. Zhu and D. Gajski, "An ultra-fast instruction set 
simulator," in TVLSI: IEEE Trans. Very Large Scale 
Integr. Syst., vol. 10, no. 3, pp. 363-373, 2002. 
[4] M. Burtscher and I. Ganusov, "Automatic synthesis of 
high-speed processor simulators," in MICRO: 37th 
International Symposium on Microarchitecture, pp. 
55-66, 2004. 
[5] B. Cmelik and D. Keppel, "Shade: a fast instruction-set 
simulator for execution profiling," in SIGMETRICS: 
Proceedings of the ACM SIGMETRICS conference on 
Measurement and modeling of computer systems. pp. 
128-137, 1994. 
[6] E. Witchel and M. Rosenblum, "Embra: fast and flexible 
machine simulation," in SIGMETRICS: Proceedings of 
the ACM SIGMETRICS international conference on 
Measurement and modeling of computer systems. pp. 
68-79, 1996. 
[7] A. Nohl, G. Braun, O. Schliebusch, R. Leupers, H. Meyr, 
and A. Hoffmann, "A universal technique for fast and 
flexible instruction-set architecture simulation," in DAC: 
Proceedings of the 39th conference on Design 
automation. pp. 22-27, 2002. 
[8] G. Braun et al., "A universal technique for fast and 
flexible instruction-set architecture simulation," in TCAD: 
IEEE Trans. on CAD of Integr. Circ. and Syst., vol. 23, 
no. 12, pp 1625-1639, 2004. 
[9] M. Reshadi, P. Mishra, and N. Dutt, "Instruction set 
compiled simulation: a technique for fast and flexible 
instruction set simulation," in DAC: Proceedings of the 
40th conference on Design automation. pp. 758-763, 
2003. 
[10] M. Reshadi, N. Dutt, and P. Mishra, "A retargetable 
framework for instruction-set architecture simulation," in 
TECS: ACM Trans. Embed. Comput. Syst., vol. 5, no. 2, 
pp. 431-452, 2006. 
[11] F. Bellard, "QEMU, a fast and portable dynamic 
translator," in USENIX: Proceedings of the USENIX 
Annual Technical Conference, pp. 41-46, 2005. 
[12] W. Qin, J. D'Errico, and X. Zhu, "A multiprocessing 
approach to accelerate retargetable and portable 
dynamic-compiled instruction-set simulation," in 
CODES+ISSS: Proceedings of the 4th international 
conference on Hardware/software codesign and system 
synthesis. pp. 193-198, 2006. 
[13] R. L. Sites, A. Chernoff, M. B. Kirk, M. P. Marks, and S. 
G. Robinson, "Binary translation," in Commun. ACM, 
vol. 36, no. 2, pp. 69-81, 1993. 
[14] J. Schnerr, O. Bringmann, and W. Rosenstiel, "Cycle 
accurate binary translation for simulation acceleration in 
rapid prototyping of socs," in DATE: Proceedings of the 
conference on Design, Automation and Test in Europe. 
pp. 792-797, 2005. 
[15] S. Mukherjee et al., "Wisconsin Wind Tunnel II: a fast, 
portable parallel architecture simulator," in Concurrency, 
IEEE, vol. 8, pp. 12-20, 2000. 
[16] J. Jung, S. Yoo, and K. Choi, "Performance 
improvement of multi-processor systems cosimulation 
based on sw analysis," in DATE: Proceedings of the 
conference on Design, automation and test in Europe. pp. 
749-753, 2001. 
[17] D. Kim et al., “Virtual synchronization for fast 
distributed cosimulation of dataflow task graphs,” in 
ISSS: International Symposium on Systems Synthesis. pp. 
174–179, 2002. 
[18] D. Kim, Y. Yi, and S. Ha, "Trace-driven hw/sw 
cosimulation using virtual synchronization technique," in 
DAC: Proceedings of the 42nd annual conference on 
Design automation. pp. 345-348, 2005. 
[19] J. Hennessy and D. Patterson, Computer Architecture: a 
quantitative approach, 4th ed., 2007. 
[20] Y. Hwang, S. Abdi, and D. Gajski, "Cycle-approximate 
retargetable performance estimation at the transaction 
level," in DATE: Proceedings of the conference on 
Design, automation and test in Europe. pp. 3-8, 2008. 
[21] Andes, available at www.andestech.com 
[22] S. C. Woo, M. Ohara, E. Torrie, J. P. Singh, and A. 
Gupta, "The splash-2 programs: characterization and 
methodological considerations," in ISCA: Proceedings of 
the 22nd annual international symposium on Computer 
architecture. pp. 24-36, 1995. 
[23] D. Jefferson, "Virtual time," in ACM Trans. Program. 
Lang. Syst., vol. 7, no. 3, pp. 404-425, 1985. 
[24] T. Grötker, S. Liao, G. Martin, and S. Swan, System 
Design with SystemC, Kluwer Academic Publishers, 
2002. 
[25] R. Righter and J. C. Walrand, "Distributed simulation of 
discrete event systems," in Proceedings of the IEEE, vol. 
77, no. 1, pp. 99-113, 1989. 
[26] J. Misra, "Distributed discrete-event simulation," in 
ACM Comput. Surv., vol. 18, no. 1, pp. 39-65, 1986. 
[27] S. Yoo and K. Choi, "Optimistic distributed timed 
cosimulation based on thread simulation model," in 
CODES/CASHE: Proceedings of the 6th international 
workshop on Hardware/software codesign, pp. 71-75, 
1998. 
[28] D. Nicol, "The cost of conservative synchronization in 
parallel discrete event simulations," in J. ACM, vol. 40, 
no. 2, pp. 304-333, 1993.  
 
 可供推廣之研發成果資料表 
 
■ 可申請專利  □ 可技術移轉                                      日期：99 年 12 月 22 日 
國科會補助計畫 
計畫名稱：MINDS：多核心系統自動化設計平台 
計畫主持人：蔡仁松 
計畫編號：NSC96－2628－E－007－144－MY3 學門領域：資工 
技術/創作名稱 System for Simulating Processor Power Consumption and Method of the Same/模擬處理器功率消耗之系統及其方法 
發明人/創作人 李建旻、羅振綱、吳孟寰、蔡仁松 
技術說明 
中文： 
本發明提供一種模擬處理器功率消耗之方法，包含：模擬一模擬處
理器；利用一功率分析模型，以對所述模擬處理器對一程式之至少
一片段之執行進行分析，以產生所述至少一片段之複數個基本區塊
之功率分析；計算所述複數個基本區塊間之至少一功率修正因子；
利用一處理裝置根據所述功率分析及所述至少一功率修正因子產
生一具有功率註解之模擬模型；及根據所述具有功率註解之模擬模
型預測所述模擬處理器之功率消耗。此外，本發明亦提供一種模擬
處理器功率之系統，以實施上述方法。 
 
英文： 
The present invention provides a method for simulating processor
power consumption, the method comprises: providing a simulated 
processor; utilizing a power analysis model to analyze the simulated 
processor’s execution of at least one fragment of a program, for 
generating power analysis of a plurality of basic blocks of the at least 
one fragment; computing at least one power correction factor between 
the plurality of basic blocks; utilizing a processing apparatus to 
generate a  simulation model with power annotation based on the 
power analysis and the at least one power correction factor; and 
predicting power consumption of the simulated processor based on the 
simulation model with power annotation. 
 
可利用之產業 
及 
可開發之產品 
處理器耗電評估模擬、嵌入式系統早期驗證 
技術特點 
快速且準確的處理器耗電模擬。 
目前台灣與美國專利審查中。 
 
 可供推廣之研發成果資料表 
 
■ 可申請專利  □ 可技術移轉                                      日期：99 年 12 月 22 日 
國科會補助計畫 
計畫名稱：MINDS：多核心系統自動化設計平台 
計畫主持人：蔡仁松 
計畫編號：NSC96－2628－E－007－144－MY3 學門領域：資工 
技術/創作名稱 
Method, System and Computer Readable Medium for Generating 
Software Transaction-Level Modeling (TLM) Model/用於軟硬體共同
模擬之軟體事務級模型之複數抽象層及利用該複數抽象層自動產
生該模型之方法 
發明人/創作人 吳孟寰、蔡仁松 
技術說明 
中文： 
本發明係揭露一種用以產生軟體交易層級模型之系統，包含處理單
元；編譯器，耦合至處理單元，用以產生客端軟體之客端二進位碼；
反編譯器，耦合至處理單元，用以將客端二進位碼反編譯成高階
碼，以產生客端軟體之功能模型，其中功能模型包含複數基本區
塊；執行時間計算模組，耦合至處理單元，用以計算功能模型之複
數基本區塊之整體執行時間；同步點識別模組，耦合至處理單元，
用以識別軟體交易層級模型之同步點；以及時間註解模組，耦合至
處理單元，用以將複數基本區塊之整體執行時間及同步點註解於功
能模型內，以獲得軟體交易層級模型。 
 
英文： 
The present invention discloses a system for generating a software 
TLM model, comprising a processing unit; a compiler coupled to the 
processing unit to generate target binary codes of a target software; a 
decompiler coupled to the processing unit to decompile the target 
binary codes into high level codes, for example C or C++ codes, to 
generate a functional model of the target software, wherein the 
functional model includes a plurality of basic blocks; an execution time 
calculating module coupled to the processing unit to calculate overall 
execution time of the plurality of the basic blocks of the functional 
model; a sync point identifying module coupled to the processing unit 
to identify sync points of the software transaction-level modeling 
model; and a time annotating module coupled to the processing unit to 
annotate the overall execution time of the basic blocks and the sync 
points into the functional model to obtain the software transaction-level 
modeling model. 
 
可利用之產業 
及 
可開發之產品 
處理器抽象模擬模型 
                                    序號： 
姓    名 蔡仁松 單  位 資訊工程系 職  稱 教授 
會議期間 2010.3.8~12 會議地點 Dresden, Germany 
會議名稱  DATE 2010 
論文名稱 
Meng-Huan Wu, Wen-Chuan Lee, Chen-Yu Chuang, and Ren-Song Tsay, “Automatic Generation 
of Software TLM in Multiple Abstraction Layers for Efficient HW/SW Co-simulation,” DATE 
2010 
報告內容 
 
參加會議經過 This in one of the top conference, which takes turn in various countries, 
mostly European countries. This year it is held in Dresden. Germany, a beautiful city with a 
good size of high-tech industry.  
But the travel to Dresden is long trip. We have to fly to Frankfurt for about 13 hours and then 
take total 5 hours train to the city. Yet, it is wonderful to meet with many top notch researchers 
in this field. 
 
與會心得 I am very pleased that Meng-Huan did a very good presentation at DATE 2010. 
There are more than a thousand people attended the conference at Dresden, the capital of 
former East Germany. It is a beautiful city and I am very impressed with the mix of modern 
architectures and old palaces, museums. The whole country is very clean and that reminds me 
of Japan. With only less than four times of Taiwan population, Germany was the number one 
export country for almost forty years (until last year, replaced by China). The people are very 
pragmatic and disciplined. Germany has many things for us to learn. 
 
During the meeting, I observed that energy has become the "hottest" issue now. The keynote 
speaker was talking about the fact that automobiles consume nearly 50% of the world energy 
and buildings consume 1/3 of world energy and advocated that we should do something about 
the issues. One very interesting idea I learned was "dynamic power management" based on 
virtual machine concept. It is like cloud computing or server farm concept that users won't 
know how many machines are actually running. With dynamic scheduling, an intelligent 
algorithm can decide to shut down some machines and reduce energy consumption. I believe 
the same idea can be extended to many similar problems. Some of you may want to study in 
this direction. 
 
考察參觀活動(無是項活動者省略)  
 
建議 Traveling to Europe is quite expensive, but since Europe is excellent in System Designs 
and we have to constantly keep up with their progress. Currently with NSC or any other 
funding, it is very tough for us and students to receive sufficient support for attending these 
top conferences.  
I find it very encouraging to see my students who can show their confidence and present in 
English and answer questions in this top international conference. Support for teachers and 
students to attend these important conferences is very necessary. 
 
 
姓    名 蔡仁松 單  位 資訊工程系 職  稱 教授 
會議期間 2010.3.8~12 會議地點 Yokohama, Japan 
會議名稱  DATE 2010 
論文名稱 
Chen Kang Lo, and Ren Song Tsay, “ Automatic Generation of Cycle Accurate and Cycle Count 
Accurate Transaction Level Bus Models from a Formal Model,” in Proceedings of ASPDAC, 
pp.558-563, 2009 
報告內容 
 
參加會議經過 ASP-DAC 2009 is the fourteenth annual international conference on VLSI 
design automation in Asia and South Pacific region, one of the most active regions of design 
and fabrication of silicon chips in the world. The conference aims at providing the Asian and 
South Pacific CAD/DA and Design community with opportunities of presenting recent 
advances and with forums for future directions in technologies related to Electronic Design 
Automation (EDA). The format of the meeting intends to cultivate and promote an instructive 
and productive interchange of ideas among EDA researchers/developers and 
system/circuit/device designers. All scientists, engineers, and students who are interested in 
theoretical and practical aspects of VLSI design and design automation are welcome to 
ASP-DAC. 
 
 
與會心得 This year, ASPDAC received 355 paper submissions, which is about the same as 
last year. The submissions span from 33 countries/regions in Asia, North America, South 
America, Europe, Oceania, Australia and Africa. The Technical Program Committee was 
composed of 95 professionals who are experts on EDA, IC design, and system design, and was 
organized into 13 subcommittees. All committee members contributed to in-depth, rigorous 
and thorough reviews and most of them attended the paper selection meeting. Through a full 
day face-to-face discussion, 116 quality papers have been selected and compiled into 24 
technical sessions in a three-day, three parallel tracks program. The program is further 
enriched by three keynote addresses, an additional track of special sessions and panels, and 
excellent tutorial sessions. We sincerely hope you will enjoy and benefit from the program. 
 
Each day, technical session starts with a keynote address which is organized under the 
leadership of Dr. Kazutoshi Wakabayashi, General Chair. We have 9 special sessions on Track 
D (1D – 9D). On Tuesday, we have University LSI Design Contest session (1D), and sessions 
(2D and 3D) for recent advances on EDA area using novel highly parallel architectures. On 
Wednesday, we have a session 3D for three dimensional integrated circuit design issues and 
two designers’ forum sessions (5D and 6D) for consumer SoCs and a panel discussion on ESL 
design methods. On Thursday, we have two designers’ forum session on analog/RF circuits 
and on near-future SoC architectures, and an attracting special panel on Dependable VLSI 
device, design and architecture. These special sessions covers novel and exciting topics and 
we hope that you can find some hint to the further research and development on LSI. 
 
考察參觀活動(無是項活動者省略)  
國科會補助計畫衍生研發成果推廣資料表
日期:2009/05/04
國科會補助計畫
計畫名稱: MINDS：多核心系統自動化設計平台
計畫主持人: 蔡仁松
計畫編號: 96-2628-E-007-144-MY3 學門領域: 積體電路及系統設計 
研發成果名稱
(中文) 多核心指令集之模擬方法與裝置
(英文) Method and Device for Multi-Core Instruction-Set Simulation
成果歸屬機構
國立清華大學 發明人
(創作人)
吳孟寰,蔡仁松,傅正陽,王鵬智
技術說明
(中文) 本發明揭露了一種多核心指令集之模擬方法。此方法係利用找出各個核心之間的
相依關係(dependency relationship)並將共享資料區塊(shared data segment)
獨立出來，有效減少同步點(sync point)，進而減低進行同步所需之負擔。進而
提升多核心指令集之模擬模擬速度，並且同時保證模擬結果之準確性。此外，本
發明亦提供一種多核心指令集之模擬裝置。隨著科技的發展，指令集模擬器
(instruction set simulator, ISS)已成為系統層級設計不可或缺之工具
(system level design tool)。硬體設計者可事先利用指令集模擬器於設計實作
實體架構實體化之前進行前期的探索與或驗證，故可降低開發過程中之一次性費
用(non-recurring engineering cost, NRE cost)；而軟體設計者則可透過指令
集模擬器測試程式而不需採用實體客端機(real target machines)，進而大幅縮
短設計之循環週期(turnaround time)。
(英文) The present invention discloses a method for multi-core instruction-set simulation. The 
proposed method identifies the shared data segment and the dependency relationship 
between the different cores, thus effectively reduces the number of sync points and 
lowers the synchronization overhead, allowing multi-core instruction-set simulation to be 
performed rapidly and accurately. In addition, the present invention also discloses a 
device for multi-core instruction-set simulation.
產業別 研究發展服務業
技術/產品應用範圍
技術移轉可行性及
預期效益
註：本項研發成果若尚未申請專利，請勿揭露可申請專利之主要內容。
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
兩篇論文獲選國科會優良論文 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
