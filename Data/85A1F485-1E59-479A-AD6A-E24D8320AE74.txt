enhance software system security. In addition, in 
this study, in order to assure usability of SSDP, 
proposes a SSDP Quality Measurement (SSDPQM) model. 
With SSDPQM model, the SSDP operation problems and 
defects can be effective monitoring and continuous 
improvement and ensure the SSDP can strengthen the 
security of the software system. 
英文關鍵詞： Software security, security vulnerability, quality 
measurement model, SSDP, security control 
 
 I
壹、中英文摘要 
摘要 
以資訊為重心的年代，資訊安全的問題對於人類大環境的影響愈來愈嚴重，駭客入侵、
病毒攻擊與系統本身的安全漏洞持續危害正常運作的軟體系統，使得資訊系統的安全性受到
嚴重的考驗。軟體方法學經過不斷的演進與改善，已成為一套嚴謹且成熟的開發程序，不過，
使用單位對軟體系統的需求則以功能為重心，經常忽視安全需求，軟體製程卻極少深入描繪
安全需求，造成安全品質不易融入軟體系統，造成使用中的軟體系統存在高度的安全危機，
成為安全軟體建置過程中值得深入探究的課題。為了避免安全缺失與漏洞造成軟體系統難以
預期的後果，本研究以現有的軟體開發製程為基礎，加強制度、管理、技術等三個層面的安
全措施，進而規劃出一套安全軟體開發製程(Secure Software Development Process ; SSDP)，於
軟體開發初期就能標示出階段性的安全缺失與漏洞，有效提昇軟體系統的安全性，且提出一
套安全開發製程品質量測(SSDPQM)模式，有效監控與不斷改善安全開發製程的問題與缺失，
確保安全軟體開發製程能夠持續強化軟體系統的安全性。 
 
關鍵字：軟體安全性、安全漏洞、品質量測模式、安全軟體開發製程、安全管制作業 
 
 
Abstract 
Invasion of hacker, virus attacks and system vulnerabilities continue to endanger the normal 
operation of the software system. Making the security of software systems suffers severe test. 
Through constant evolution and improvement, software methodology has become a rigorous and 
mature software development process. However, most of software processes very little depth describes 
the software security, so the security can not be effective injected into the software products. For 
reducing the software system security risk, secure software development process becomes a worth 
further exploration topic. According to the related reports, software security vulnerabilities often cause 
unpredictable consequences and losses. For this, in this study, based on the current software processes, 
combine with the system, management and technology three security strategies, propose a Secure 
Software Development Process (SSDP). Applying the SSDP, the software developer can identify and 
revise the early stages of security defects and vulnerabilities, to enhance software system security. In 
addition, in this study, in order to assure usability of SSDP, proposes a SSDP Quality Measurement 
(SSDPQM) model. With SSDPQM model, the SSDP operation problems and defects can be effective 
monitoring and continuous improvement and ensure the SSDP can strengthen the security of the 
software system. 
 
Keywords：Software security, security vulnerability, quality measurement model, SSDP, security 
control 
 
 
 
 2
開發團隊建置一套高安全性的軟體系統，不過受限於人力不足與成本的壓力，一般的軟體開
發作業中，極少編制一個獨立的SSA小組，使得階段性的審查作業無法具體的標示出隱含的
安全漏洞。軟體開發過程，各開發階段有其特定的工作目標與任務，所產生的安全漏洞與缺
失必然會有不同的影響，以下針對各開發階段可能形成的安全漏洞與缺失進行說明： 
● 需求分析階段：此階段的任務著重於使用者需求規格的制定，因此可能出現的安全漏洞與
安全規格制定的不完整、不明確及不一致等缺失密切相關，這些規格上的安全缺失，若
不能及時發現且進行補救措施，對於日後的系統運作將形成深遠的影響。 
● 初步設計階段：此階段的任務著重於系統功能架構的規劃與外部介面的定義，除了階段本
身可能出現的安全漏洞外，來至需求分析階段的安全缺失也是形成的漏洞的原因。此階
段的安全漏洞將被隱含在功能及介面的規格中(賴森堂 1 2007)。 
● 細部設計階段：此階段的任務著重於模組單元的邏輯結構與資料結構設計，除了階段本身
可能出現的安全漏洞外，初步設計階段的安全缺失也將遞延至本階段。此階段的安全漏
洞將被隱含在模組單元的邏輯與資料結構的設計中。 
● 程式製作階段：此階段的任務著重於程式碼的撰寫與單元測試，除了階段本身可能出現的
安全漏洞外，前面階段所植入的安全缺失也將遞延至本階段。程式中缺乏安全缺失的查
核與處置步驟是此階段最常出現的安全漏洞(Evans & larochelle 2002)，這類型的程式安
全漏洞經常被忽略，卻可能形成很嚴重的後果。 
各個階段的安全漏洞若不能在審查作業中被標示出且加以修訂，安全漏洞將成為進入測試階
段的一大負擔，即使測試階段能夠順利標示出安全漏洞與缺失，卻必須投入龐大的人力與資
源進行安全漏洞與缺失的改善作業。為了降低安全漏洞的風險，必須強化軟體製程的安全機
制，於開發初期就有效標示出安全缺失漏洞，且及時提出修補與改善作業。本研究以現行的
軟體製程為基礎，加強制度、管理、技術等層面的安全管制作業，進而提出一套安全軟體開
發製程(Secure Software Development Process ; SSDP)，於軟體開發初期即能找出階段性的安全
漏洞與缺失，且提出具體的修訂與改善措施，有效提昇軟體系統的安全性。此外為了確認 SSDP
的有效性，本研究以制度、管理與技術等三個層面為基礎，提出一套 SSDP 品質量測(SSDP 
Quality Measurement; SSDPQM)模式，用以監控與持續改善 SSDP 執行上的問題與缺失。 
 
三、文獻探討 
軟體工程早期著重於生產力與品質的提昇，而忽略軟體安全的重要性，在 ISO 的軟體品
質特性架構中(賴森堂 2 2007)，安全性並不受到使用單位與開發人員重視，不僅被列為低層級
的次要特性，而且歸屬於功能性(functionality)之下(Pressman 2010)，這完全不能符合網際網路
環境下的資訊系統，因為安全需求已經超越功能與效能的需求。西元 2000 年之後，軟體系統
安全問題受到許多國際性團體與組織(如 SANS，OWASP(Open Web Application Security 
Project), CERT/SEI 等)的重視，陸續公佈軟體的關鍵安全漏洞與弱點：SANS Top-20 Security 
Risks (SANS 2010)與 OWASP Top 10 (OWASP 2010)以協助降低軟體系統的安全風險，依據
CERT/CC 最新的統計數據顯示(CERT/CC, 2008)，從 2005 至 2008 年第三季的軟體系統弱點分
析報告總共有 27,798 個，而且最近幾年有逐年增加的趨勢，如表 1 所示。 SEI/CMU 的 CERT
於 SQRARE (Security Quality Requirement Engineering)專案計畫列出 9 項處理步驟的程序
(Square, 2012)，協助組織能夠在軟體開發初期就將安全需求品質加以考量，且徹底且有效的
 4
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
任何一套軟體開發程序必須具備持續改善的特質，才能繼續發揮其應有的效益，當軟體
系統專案依 SSDP 完成安全軟體開發作業後，接著便是找出 SSDP 存在的問題與缺失，且針
對這些問題與缺失進行剖析，再提出調整與修訂作業，持續不斷的改善 SSDP，才能確認 SSDP
的有效性且維持 SSDP 的理想狀態。一套完善的開發製程必須配合環境與需求不斷擴充與調
整，以品質量測模式監控與持續改善 SSDP 執行上的問題與缺失，才能確認 SSDP 的有效性。
本研究以線性結合方式來建立品質量測模式，以量化方式監控與持續改善 SSDP 執行上的問
題與缺失，確保 SSDP 能夠持續強化軟體系統的安全性。影響 SSDP 作業品質的三個關鍵項
目分別為制度層面的調整、管理層面的配合及技術層面的提昇，每個關鍵項目的影響指標則
是由一些低階的品質因子所組成，透過線性結合公式，可以將高度相關性的基層因子結合成
特定量測值，這些特定項目量測值可以進一步結合成高階項目量測值，最後再將高階項目量
需求分析階段 
初步設計階段 
細部設計階段 
程式製作階段 
測試階段 
建置移轉階段 
維護階段 
明確定義與系統安
全相關的規格 
依安全需求規格進
行初步設計 
各階段完成前之 
安全規格審查作業 
依安全初步設計規
格進行細部設計 
依安全細部設計規
格進行程式製作 
依各階段安全規格
進行安全性測試 
各階段安全規格文
件移轉確認作業 
調整、修改與擴充
安全規格項目 
安全需求
規格 
安全初步
設計規格
項目 
安全細部
設計規格
項目 
各階段安全
規格文件 
安全程式
碼 
安全項
目檢視
查核表 
法則式
安全知
識庫 
* Feedback(FB):
立即退回，及時修
改 
FB 
FB 
FB 
FB 
FB 
FB 
圖 1.安全軟體開發製程的運作流程 
 6
參、參考文獻 
1. 賴森堂1，2007，『以介面設計為基礎的軟體安全品質量測模式』，中華民國品質學會第四
十三屆年會暨第十三屆全國品質管理研討會論文集，中華民國品質學會。 
2. 賴森堂2，2007，『安全軟體建制基礎—軟體安全特性架構之研究』，2007數位科技與創新
管理研討會論文集，華梵大學。 
3. 賴森堂，『以弱點掃描結合修補函數提昇Web App安全品質』，電腦稽核期刊，156-165頁，
第25期，2012年1月。 
4. 賴森堂，『以高品質安全軟體開發製程改善軟體安全品質之研究』，中央警察大學『資訊、
科技與社會』學報，55-72頁，第11卷第19期，2011年12月。 
5. 賴森堂，2012，『以限制性安全規格提昇軟體安全品質之研究』，2012台灣軟體工程研討
會論文集，台北科技大學。 *本論文接受國科會計畫補助(計畫編號：NSC 100 - 2221 - E - 
158 - 007 -) 
6. 賴森堂，2012年8月，『改善軟體安全需求確認與驗證能力之研究』，第十八屆海峽兩岸資
訊管理發展與策略學術研討會屆資訊管理暨實務研討會(CSIM 2012)論文集，實踐大學，
2012.8.20 ~ 21。*本論文接受國科會計畫補助(計畫編號：NSC 100 - 2221 - E - 158 - 007 -) 
7. Apvrille, A. and Pourzandi, Makan ：“Secure Software Development by Example,” IEEE 
Security & Privacy, 2005, vol. 3, (4), pp. 10-17. 
8. Bishop, M., Computer Security: Art and Science, Addison-Wesley, 2003. 
9. Boehm, B.W., Software Engineering Economics, Prentice-Hall, New Jersey, 1981. 
10. Bush, W.R., J.D. Pincus, and D.J. Siela: “A Static Analyzer for Finding Dynamic Programming 
Errors,” Software Practice and Experience, 30, (7), June 2000. pp. 775-802.  
11. Conte, S. D., H. E. Dunsmore, and V. Y. Shen, Software Engineering Metrics and Models, 
Benjamin/Cummings, Menlo Park, 1986. 
12. Cowan, C., “Software Security for Open-Source Systems,” IEEE Security & Privacy, vol. 1, no. 
1, 2003, pp. 38-45. 
13. Evans, D. and D. Larochelle, “Improving Security Using Extensible Lightweight Static 
Analysis,” IEEE Software, January/February 2002,pp.42-51. 
14. Fairley, R., Software Engineering Concepts, McGraw-Hill, Inc., 1985. 
15. Fenton, N.E., Software Metrics - A Rigorous Approach, Chapman & Hall, 1991. 
16. Firesmith, D.G., 2003, “Security Use Cases,” J. Object Technology, vol. 2, no. 3, pp. 53–64. 
17. McDermott J. and C. Fox, 1999, “Using Abuse Case Models for Security Requirements 
Analysis,” Proc. Computer Security Applications Conf., IEEE CS Press, pp. 55–64. 
18. McGraw, G., Software Security – Building Security In, Addison-Wesley 2006. 
19. McGraw, G., “Software Security”, IEEE Security and Privacy, March 2004, pp.80-83. 
20. Hall, A. and Roderick Chapman, Correctness by Construction: Developing a Commercial 
Secure System, IEEE Software, January/February 2002, pp.18-25. 
21. Howard, M. and D. Le Blanc, Writing Secure Code, Microsoft Press, 2002. 
 8
國科會補助專題研究計畫成果報告自評表 
請就研究內容與原計畫相符程度、達成預期目標情況、研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）、是否適
合在學術期刊發表或申請專利、主要發現或其他有關價值等，作一綜合評估。
1. 請就研究內容與原計畫相符程度、達成預期目標情況作一綜合評估 
█ 達成目標 
□ 未達成目標（請說明，以 100 字為限） 
□ 實驗失敗 
□ 因故實驗中斷 
□ 其他原因 
說明：本研究相關研究成果已有兩篇發表於國內期刊，一篇發表於國際研討
會(EI)，另有五篇發表於國內重要研討會，論文發表細部資料請參閱附
錄。 
 
2. 研究成果在學術期刊發表或申請專利等情形： 
論文：█已發表 □未發表之文稿 □撰寫中 □無 
專利：□已獲得 □申請中 □無 
技轉：□已技轉 □洽談中 □無 
其他：本研究還有幾篇已規劃之文章屬於審查中與撰寫中。  
 
 
3. 請依學術成就、技術創新、社會影響等方面，評估研究成果之學術或應用價
值（簡要敘述成果所代表之意義、價值、影響或進一步發展之可能性）（以
500 字為限） 
本研究從制度、管理與技術三個層面為基礎，結合安全檢視查核表與法則式安全知識庫，
規劃出一套安全軟體開發製程(SSDP)，從管理與技術層面對軟體開發制度進行調整，在軟體
開發初期就能有效的標示出軟體安全缺失與漏洞，隨即以較低的人力、時間與成本進行安全
缺失的改善作業，將安全品質融入產品中。此外本研究也探討軟體安全需求的問題與缺失，
且針對安全需求提出一套確認與驗證能力量測(VVCM)模式，其主要優勢如下： 
 及時發現安全需求文件的缺失：VVCM 模式可以配合開發作業的安全需求成長過程，適時
以量化機制評估安全需求的確認與驗證能力，以及時發現文件缺失。 
 協助安全需求文件的修正作業：依量化數據剖析且標示出安全需求文件的品質問題與缺
失，且協助進行後續的問題修正與缺失改善作業。 
 持續監測與改善安全需求文件品質：配合開發作業，安全需求階段性品質必須不斷提昇，
持續監測安全需求的階段性品質缺失，足以進行確認與驗證能力的持續改善作業。 
 10
附 錄 
本研究已發表之相關研究成果如下：  
1. 賴森堂，”以弱點掃描結合修補函數提昇Web App安全品質”，電腦稽核期刊，156-165頁，
第25期，2012年1月。 
2. 賴森堂，” 以高品質安全軟體開發製程改善軟體安全品質之研究”，中央警察大學『資訊、
科技與社會』學報，55-72頁，第11卷第19期，2011年12月。 
3. 賴森堂，2011年10月，”結合檢視與限制條件的UML安全軟體開發製程”， 2011第十二屆
科技與管理學術研討會論文集，台北科技大學，2011.10.27. 
4. Sen-Tarng Lai, “An Interface Design Secure Measurement Model for Improving Web App 
Security”, Proceeding of Second International Workshop on Cloud, Wireless and e-Commerce 
Security (CWECS 2011), 2011.10.26~28. (EI) 
5. 賴森堂，2011年11月，”多層次的行動裝置App安全行為確認機制”，2011 年「網際空間：
資安、犯罪與法律社會」學術暨實務研討會論文集，淡江大學，2011.11.26. 
6. 賴森堂，2012年6月，”以 Constraint 與Assertion檢核機制提昇軟體系統安全品質”，「2011
數位科技與創新管理研討會」論文集，華梵大學，2011,6,1 
7. 賴森堂，2012年7月，”以限制性安全規格提昇軟體安全品質之研究”, 2012 台灣軟體工程
研討會論文集，台北科技大學，2012.7.6 ~ 7. 
8. 賴森堂，2012年8月，”改善軟體安全需求確認與驗證能力之研究”，第十八屆海峽兩岸資
訊管理發展與策略學術研討會屆資訊管理暨實務研討會(CSIM 2012)論文集，實踐大學，
2012.8.20 ~ 21. 
 
 
100年度專題研究計畫研究成果彙整表 
計畫主持人：賴森堂 計畫編號：100-2221-E-158-007- 
計畫名稱：以高品質安全軟體開發製程改善軟體安全品質之研究 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 2 2 100%  
研究報告/技術報告 0 0 100%  
研討會論文 5 4 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 1 1 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 1 1 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
