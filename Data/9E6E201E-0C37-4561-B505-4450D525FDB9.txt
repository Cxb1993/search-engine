 2 
一、中文摘要 
 
本計畫已完成廣播排程、運用於分散
式結構化P2P系統的Cache策略及具VCR
功能的串流協定(TIMES)。此三項研究成
果，皆已發表於國際學術會議ICSCA 2011
上。 
在過去十幾年裡，已有許多學者提出
一些廣播排程方法，諸如Fast scheme、 
Staircase scheme、Harmonic scheme等方
法。在本計畫中，我們提一種結合Crescent
及Staggered廣播方法的混合廣播方法。 
在P2P搜尋策略中，本計畫提出一種運
用於分散式結構化P2P系統的Cache策略。
在此策略中，每一個節點將設置一個Cache
清單，藉由Cache 清單儲存的該節點過去
的使用經驗，優先搜尋存放在Cache 清單
的節點。以加快在分散式結構化P2P系統中
的搜尋速度以及搜尋的命中率。 
為了提供互動式服務，系統不僅要服
務大量非同步的使用者請求外，還需要即
時的調整拓樸結構與適當的串流配置。在
本計畫中，我們提出一個樹狀結構的互動
式多媒體系統(TIMES)。TIMES結合了P2P
串流服務與群播傳輸的概念，同時我們也
設計了鄰居集合清單與混合式暫存策略，
讓TIMES不僅能夠大幅度的降低伺服器的
頻寬負載、增加系統的彈性，還可以有效
的支援大量且非同步的互動式使用者請
求。 
 
關鍵詞：廣播方法、同儕式網路、快取、
互動式多媒體系統、隨選視訊 
 
Abstract 
 
In this project, we have proposed a 
hybrid broadcasting scheduling method, a 
Cache Strategy applied in distributed 
peer-to-peer (P2P) architectures, and a 
Tree-based Interactive MultimEdia 
System (TIMES). These results have 
presented in ICSCA 2011. 
In the past decade, many scholars have 
proposed broadcasting scheduling methods, 
such as the Fast scheme, Staircase scheme, 
Harmonic scheme and so on. In this project, 
we proposed a hybrid broadcasting method 
combining the Crescent and Staggered 
Broadcasting schemes. 
In the P2P searching strategy, this 
project proposed a Cache Strategy applied in 
distributed P2P architectures. In the proposed 
strategy, each node will maintain a Cache list 
which saves the past experience. Thus, 
through searching its own Cache list, each 
peer can speed up the searching process and 
improve the hit ratios. 
To provide interactive services, system 
needs to serve asynchronous user requests of 
large number, adjust the P2P overlay 
topology immediately and allocate the 
streaming appropriately. In this project, we 
proposed a TIMES systems. The TIMES 
combines the P2P streaming service and the 
concept of multicast transmission. In addition, 
we also designed a collection of neighbors 
temporary list and mixed strategies, so 
TIMES is not only able to significantly 
reduce the server bandwidth load, increase 
the flexibility of the system, but also can 
effectively support a large number of 
interactive and asynchronous user requests. 
 
Keywords: Broadcasting methods, peer-to- 
peer network, cache, interactive multimedia 
system, video-on-demand 
 
二、緣由與目的 
 
隨著網際網路的發展成熟，世界各地
的使用者可以很方便地在網路上分享或取
得所需要的服務及資源。P2P概念以及系統
被提出來之後，更是廣泛地受到關注。P2P
架構可以分為集中式及分散式，其中分散
式又可以分為分散式結構化與分散式非結
構化。 
集中式P2P架構有一個中央伺服器處
裡各節點當中的訊息包含查詢、回應等，
例如Napster [1]。其優點可以降低回應時間
與搜尋成本，且能有效率的管理系統之內
的各個節點；其缺點為可擴充性不足，若
系統擴張到一定程度，由於伺服器受限於
網路頻寬與伺服器負載，使系統效能降低
因此在延展性方面的議題，還在尋找解決
之道。且因為中央伺服器集中管理之故，
在P2P系統的一項有吸引力的優點，可匿名
性，也無法實行。 
 4 
快取策略。因此接下來我們分 A、B、C三
部分來做介紹和分析，詳細的描述如下：  
 
A. 廣播方法 
此方法串流排程作為後進請求資料補
送的機制，結合傳統的頻道重複廣播方法
Staggered (channels) broadcasting，能有效縮
短接收端接收串流的等待時間，並降低其
資料緩衝空間的需求，讓資料接收端能更
順利的接收與播放影音資訊。 
 Fig.1 為我們提出的方法範例，在一
開始，顯示 Crescent Staggered 廣播排程
的操作，起初 Staggered 在單一個頻道
裡，然後每個期間的 Dc，Staggered 的頻
道將重新建立，然而，如果在 Dc 區間提
出加入需求， Crescent 服務將會被觸發且
請求服務將會依據 Crescent 的操作送達
的運作方式 
 
 
 
Fig.1 Crescent Staggered Broadcasting 
 
B. TIMES 
在這部分中，我們要介紹一個互動式
的多媒體串流服務，我們稱作 TIMES，在
TIMES 系統裡，我們會依照使用者進入系
統的時間而區分成不同的群組，盡可能的
讓伺服器僅發送一次的影片串流給最早進
入系統的節點群組，而時間較晚的群組則
是由較早進入環境的節點群組，扮演供應
節點的腳色並且提供影片片段，所以後續
進入的節點不需透過伺服器的傳輸，便可
以接收到整部影片內容，大大的降低了伺
服器的頻寬負擔。 
Fig. 2為系統的架構圖，我們僅考慮到
單一影片的傳輸，所以會加入這系統的節
點均是對同一部影片有興趣，以 Fig.為例，
這些節點是對 Video A 有興趣所以才加入
此隨選視訊的服務，在系統初始的過程
中，Video A會切割成許多較小且長度相同
為 k的影片片段，假設 Video A的總長度為
100分鐘，k=30秒，則 Video會切割成 200
個長度為 30秒的影片片段。影片的傳輸為
固定位元速率(Constant bit rate; CBR)，所
以經過一段時間的傳輸之後，這些影片片
段會散布在各節點之中，各節點提供部分
的緩衝區空間所暫存的影片片段能夠支持
整個架構中，像是一般正常的接收、觀看
以及 VCR功能的操作。每一個節點均會存
有一個鄰居集合清單去記錄樹狀結構下鄰
近的節點資訊，這些鄰近節點包括了父節
點(parent node)、父節點兄弟節點(parent’s 
sibling node)、子節點(child node)以及兄弟
節點(sibling node)，根據這個清單中，節點
做任何的操作像是正常的加入、離開可以
快速的通知相連的節點，亦或是 VCR功能
的操作，都可以藉由這清單上所記錄的資
訊而快速的找到擁有需求片段的節點。此
外，每個節點還會記錄與自己擁有相同影
片資料的兄弟節點，當一個節點離開了，
他的子節點可以馬上藉由鄰居集合清單上
所記錄的資訊，快速的找到一個父節點的
兄弟節點去維持整棵樹狀結構的正常運
作，大大的提升TIMES樹狀結構的穩健性。 
 
 
Fig.2 TIMES的架構圖 
除此之外，在整體傳輸的管理下，我
們在影片片段的傳輸上運用了群播與補送
 6 
求，在圖中我們僅以節點 A為例，假設剛
好有節點 C、D、E在 10點 03分 30秒到
10點 04分 00秒的時間間隔內隨機提出了
請求給節點 A，所以當 10點 04分 00秒的
時間一到，系統其實有兩個動作是同步在
執行的：(1) 節點 A 跟 B 已經從伺服器那
邊收完片段 1、看完片段 1的影片內容，同
時地也將片段 1 儲存到自己的緩衝區內。
(2) 先進入環境的節點 A也統計完在 10點
03分 30秒到 04分 00秒的時間區間內，有
C、D、E三個節點跟 A提出請求。 
當時間點進入 10點 04分 01秒時，伺
服器會傳輸片段 2給節點 A跟節點 B，而
節點 A便開始傳輸剛剛儲存在緩衝區內的
片段 1給節點 C、D跟 E。所以在 04分 00
秒到 04分 30秒的時間區間內，節點 A跟
B接收片段 2、觀看片段 2以及儲存片段 2
到緩衝區內，節點 C、D、E也從 A那邊接
收片段 1、觀看片段 1以及儲存片段 1到緩
衝區內，而節點 F跟 G剛好隨機發送請求
給節點 C，所以節點 C 也同時的也記錄了
節點 F跟 G提出了相同的影片請求，同理
的，當 10點 04分 30秒一到，節點 A跟 B
接收完片段 2，節點 C、D跟 E接收完片段
1，節點 C也記錄了節點 F跟 G提出請求。
所以依照這樣的時間輪軸，系統內會有接
收、觀看、儲存以及記錄等功能同時在執
行。 
 
Fig.4 樹狀結構與資料的傳輸 
 
在 TIMES中，我們讓每個節點都會存
有一個鄰居集合清單，去記錄鄰近節點的
相關資料，Fig. 5為 TIMES架構下，節點
與節點之間的關係圖，每一個圓圈代表一
個節點，而節點上面的文字代表不同的節
點 ID，每一個節點除了外部節點沒有記錄
子節點的資訊外，其他節點都會記錄一個
完整的清單資訊，細節如下： 
(1) 父節點(parent node)資訊 
記錄父節點資訊的目的，是為了當內部
節點需要執行 VCR功能像是快轉時，可以
直接透過各節點記錄的父節點資訊，向上
追溯到擁有該片段的父節點，便可迅速的
找到適合的節點，直接發送一個新的請求
給這個新找到的父節點，大大的提升搜尋
的效益。若是沒有記錄父節點資訊，當一
個節點需要執行 VCR快轉功能時，便要先
離開現有的樹狀結構，再重新發送的一個
新請求給伺服器，要求伺服器提供 VCR 的
服務，若此環境中有其他節點擁有該 VCR
操作所需的目標片段，伺服器會要求該節
點將原本 VCR請求導向給擁有該 VCR目
標片段的節點，當該節點從伺服器端收到
這樣的訊息之後，會將原本發送給伺服器
的指令重新再發送一次給擁有該 VCR 目
標片段的節點，重新建立傳輸的關係，等
待新的父節點傳送 VCR 目標片段之後的
影片資料，這樣才完成了此 VCR功能的操
作。這樣的搜尋與指令執行過程尤其是在
使用者數量龐大的 P2P 環境裡，處理過程
相當複雜又耗費時間，因此我們希望藉由
清單的設立，能夠更有效率的降低節點搜
尋所花費的時間。 
(2) 父節點的兄弟節點資訊 
   在 TIMES 系統中，每個節點除了會將
父節點的資訊記錄在鄰居集合清單外，還
會記錄父節點的兄弟節點資訊。節點可以
在任何時間點提出離開的請求，所以當一
個節點在觀賞的過程中執行離開請求，而
該節點又有傳輸影片片段給他的子節點，
此時這些子節點會因為父節點的離開而造
成影片傳輸的中斷，被迫將請求重新導向
給伺服器端，要求伺服器端接續之前影片
串流傳輸的服務，然而節點離開的情況再
P2P 環境中卻是頻繁的，如果隨選視訊系
統沒有一套良好的機制去處理節點離開的
問題，便很容易增加伺服器端的負載，因
此我們設定每個節點都會記錄父節點的兄
弟節點資訊，當一個節點在觀賞的過程中
提出了離開的請求，則該節點的子節點就
可以馬上透過他們記錄的「父節點的兄弟
節點」資訊，馬上找到新的父節點，同時
 8 
能，想要繼續接收影片傳輸時，此時該節
點自己的緩衝區內能會存尚未收看的影片
片段(例如 S7至 S9均尚未收看)，所以該節
點可以繼續的從片段 S7 收看接下來的影
片片段，在同時間該節點會先詢問原本的
父節點是否可以繼續提供片段 S10，若是
可以，則節點 A便會繼續從原父節點那邊
接收片段 S10 之後的資料，但若原父節點
已經無法繼續提供片段 S10 之後的資料
時，則節點 A 會執行離開程序與加入程
序，此時就是看該節點 A 是屬於 TIMES
樹狀結構中的根節點、內部節點還是外部
節點，分別去執行相對應的離開與加入程
序。 
 
 
Fig.6 節點執行 VCR的暫停功能 
 
(2) 快轉(Fast- Jump) 
   如 Fig. 7所示，當節點 B要執行快轉的
功能時，B 會先透過之前提過的鄰居集合
清單，發送 FAST_JUMP 指令，向上面的
父節點搜尋快轉的目標片段，首先節點 B
會先檢查清單內記錄的節點 A資訊是否可
以提供自己執行 VCR快轉的目標片段，若
是節點 A 可以提供 B 要求的 VCR 目標片
段，則節點 B 並不會離開原先的結構，但
此時節點 B 會發送離開訊息給子節點 C，
因為自己在未來所會暫存的片段與節點 C
預期會接收到的片段會不相符，所以需要
發送離開訊息給子節點 C，讓 C 藉由自己
存有的鄰居集合清單去尋找新的父節點，
若是 C的清單內沒有記錄到原本 B的兄弟
節點資訊，則代表 B 沒有兄弟節點，此時
C 會發送 REQ_PINFO 訊息給 B，要求 B
回傳父節點資訊，當 B 回傳 REQ_PINFO
資訊給 C之後，C才會發送 SHUT_DOWN
訊息給節點 B，此時才確定節點 B 已經沒
有與任何子節點連線了。 
反觀 B請求特定 VCR片段的部分，若
A無法提供 B要求的 VCR目標片段時，則
B會發送 REQ_PINFO 給 A，要求 A提供
他的父 節點資 訊給 B ， A 會 回傳
BRES_PINFO訊息，讓 B與節點 A的父節
點聯繫，B接收到 A所傳來的 RES_PINFO
訊息時，B會發送 LEAVE_OUT請求給 A，
關閉他們倆建立的連線關係，之後 B 再發
送 SETUP訊息給 A的父節點，進而尋找可
以提供 VCR目標片段的新父節點。 
 
 
Fig.7 節點執行 VCR的快轉功能 
 
(3) 倒帶(Reverse-Jump) 
倒帶的功能其實與快轉的概念相同，只
是將發送給父節點端的 FAST_JUMP 指令
替換，改成向下發送 REVERSE_JUMP 給
子節點樹，向下尋找需求的影片片段，如
Fig. 8所示，B要執行 VCR的倒帶功能，
在執行倒帶的過程中，不管 B 向下有沒有
找到他要的目標片段，最終 B 都會執行離
開的指令跳出原本的位置，所以倒帶程序
的一開始，B會發送一個 SHUT_DOWN指
令給父 A，告知 A關閉原本的連線，後來
B 便會檢查鄰居集合清單，檢查自己是否
有記錄子節點資訊，若沒有，則 B 便會直
接向伺服器提出 VCR倒帶的請求，若 B有
記錄子節點資訊，則 B 便開始向下發送
REVERSE_JUMP指令去尋找目標片段，若
有找到一個節點 X擁有 B所要的資料，則
B 會跳出原本的位置，向 X 發送加入的指
令，在發送 REVERSE_JUMP 指令的過程
中，B 會發送 LEAVE_OUT 指令給子節點
C，讓 C 藉由自己存有的鄰居集合清單去
尋找新的父節點，若是 C 的清單內沒有記
錄到原本 B的兄弟節點資訊，則代表 B沒
有兄弟節點，此時 C 會發送 REQ_PINFO
訊息給節點 B，要求節點 B 回傳父節點資
訊，當節點 B 回傳 REQ_PINFO 資訊給 C
之後，C 才會發送 SHUT_DOWN 訊息給
B，確定兩節點的已經關閉連線，後續 C
 10 
架構進行搜尋協定。 
Fig.11 為系統概念圖。使用者進行搜
尋動作時，首先通過 cache策略進行搜尋，
若快取列表可搜尋到該搜尋請求，則連接
雙方節點，搜尋請求結束；若快取列表無
法 滿 足 使 用 者 需 求 ， 則 透 過 P2P 
Redirector 重新發送搜尋請求，並且由該
結構化系統進行搜尋。Fig.則是搜尋流程
圖，描述加入快取策略之搜尋流程。 
 
 
Fig.11系統概念圖 
. 
四、計劃成果自評 
 
本計劃和在研究成果與原計劃方向大
致相符，首先我們提出一個新的廣播方法
之外，我們並針對能夠在 P2P 的環境下，
提出 TIMES系統，能有效的運用使用者所
提供的緩衝空間，進而提供隨選視訊的服
務，同時也能支援 VCR功能的操作，最後
我們還提出運用於分散式結構化 P2P 系統
的 Cache策略。 
而我們在實驗的結果當中藉由模擬實
驗的觀察，在伺服器負擔的部分，我們可
以發現系統的伺服器負擔與節點數量以及
緩衝區大小成反比關係，當有越多的用戶
使用此系統或是使用者能提供越大的緩衝
區空間給其他用戶端時，就越能夠降機伺
服器的負擔。在命中率的部分，我們探討
了三種不同請求的命中率，在一般請求的
部分，我們發現無論節點數量與緩衝區大
小設定為何，TIMES 系統都會有 95.1%以
上的命中率，而在初始執行 VCR請求以及
離開請求這兩部分，命中率都是與節點數
量以及緩衝區大小成正比關係。 
在快取策略部分當 Cache list存放 P2P
環境中約 15%的節點空間，hit ratio大約可
以提升 40%，且 cache list在節點變動的環
境下也能維持一定的比率，適合用於 P2P
環境下，大量節點加入離開的狀況。而在
未來工作中，我們會取策略應用在不同架
構下之可行性，權衡 cache設計中搜尋效能
之於系統負擔。 
最後，我們提出的方法已發表在 2011
年計算機工程與應用國際會議上，我們相
信此結果可順利發表在國際學術期刊上。 
 
五、參考文獻 
[1] TheNaspter homepage, http://www.napster 
.com. 
[2] M. Yang and Y. Yang, “An efficient hybrid 
peer-to-peer system for distributed  data 
sharing,” IEEE Trans. on Computers, vol.  
59, no. 9, pp.1-10, Sep. 2010. 
[3] Y. Guo, K. Suh, J. Kurose, and D. Towsley, 
“P2Cast: peer-to-peer patching scheme for 
VoD service,” in Proceedings of the 12th 
ACM International World Wide Web 
Conference (WWW), Budapest. 
[4] “PPLive,” http://www.pplive.com/. 
[5] “Joost,” http://www.joost.com/. 
[6] K. Sripanidkulchai, A. Ganjam, B. Maggs, 
and H. Zhang, “The feasibility of 
supporting large-scale live streaming 
applications with dynamic application 
end-points,” in Proc. of ACM 
SIGCOMM’04, August 2004. 
[7] Y. Huang, T. Z. J. Fu, D. M. Chiu, J. C. S. 
Lui and C. Huang, “Challenges, design and 
analysis of a large-scale P2P-VoD system,” 
in Proc. of ACM SIGCOMM’08, August 
2008. 
[8] C. Huang, J. Li, and K. W. Ross, “Can 
internet video-on-demand be profitable?,” 
in Proc. ACM SIGCOMM, Kyoto, Japan, 
August 2007. 
[9] X. Zhang, J. Liu, B. Li, and T.S.P. Yum, 
“Coolstreaming/Donet: A data-driven 
overlay network for peer-to-peer live media 
streaming,” in Proc. IEEE INFOCOM, 
2005, vol. 3, pp. 2102-2111. 
[10] S. Jin and A. Bestavros, “A 
cache-and-relay streaming media delivery 
for asynchronous clients,” in Proc. Int. 
Workshop on Networked Group 
Communication (NGC), Boston, 
Massachusetts, USA, October 2002. 
 12 
A Mind Map Based Framework for Automated Software Log File Analysis 
Dileepa Jayathilake 
 
A008 
E-Governance in Public Transportation: U.P.S.R.T.C. - A Case Study 
Ajay Kumar Bharti and Sanjay K. Dwivedi 
 
A023 
An Integrated Voting Algorithm for Fault Tolerant Systems 
 S. Latif-Shabgahi 
 
A039 
Strategic Mangment System for Academic World 
Suresh Kumar 
 
A040 
FPGA Based Digital Logic Emulator for Educational Purposes 
Vladimir Kasik and Ibrahim Salem Jahan 
 
A042 
Mobile Phone Application in Biotelemetry 
Blanka Filipova, Marek Penhaker, Ondrej Vlcek and Martin Cerny 
 
A041 
Structure of Java Applications for Telemedicine 
Blanka Filipova, Marek Penhaker, Ondrej Vlcek and Martin Cerny 
 
A058 
An Efficient Cache Strategy in Structured Peer-to-Peer Networks 
Shin-Yi Chou and Yu-Wei Chen 
 
A059 
An Interactive Streaming Service over Peer-to-Peer Networks 
Yu-Wei Chen and Yu-Hao Huang 
 
A060 
A Hybrid Broadcasting Method for Video-on-Demand Services 
Po-Tsun Liu and Yu-Wei Chen 
 14 
 
 
四、 攜回資料名稱及內容 
 
帶回 International Proceedings of Computer Science and Information Technology-Software and 
Computer Applications 
 
 16 
Strategic Mangment System for Academic World 
Suresh Kumar 
 
A040 
FPGA Based Digital Logic Emulator for Educational Purposes 
Vladimir Kasik and Ibrahim Salem Jahan 
 
A042 
Mobile Phone Application in Biotelemetry 
Blanka Filipova, Marek Penhaker, Ondrej Vlcek and Martin Cerny 
 
A041 
Structure of Java Applications for Telemedicine 
Blanka Filipova, Marek Penhaker, Ondrej Vlcek and Martin Cerny 
 
A058 
An Efficient Cache Strategy in Structured Peer-to-Peer Networks 
Shin-Yi Chou and Yu-Wei Chen 
 
A059 
An Interactive Streaming Service over Peer-to-Peer Networks 
Yu-Wei Chen and Yu-Hao Huang 
 
A060 
A Hybrid Broadcasting Method for Video-on-Demand Services 
Po-Tsun Liu and Yu-Wei Chen 
 
 
六、 與會心得 
 
本次會議地點在尼泊爾，共計兩天(1st-2nd July, 2011)，會議的目的為提供來自世界
各地的研究人員、工程師、學者以及專業人士一個平台以介紹他們在計算機應用上的的
研究成果以及應用開發，也提供一個機會讓世界各地的學者一個面對面交流新的想法以
及實務經驗的機會，期待可以藉此激盪新的想法與創意，亦或促進學者間的商業合作以
及應用，以尋求未來的全球合作夥伴關係。而提交的論文都會被技術委員會審查，因此
在論文方面能夠維持一定水準。而在報告的開始前，IACSIT安排了三場 keynote 
speeches： 
 
Morning, July 2, 2011 (Saturday) 
4. Department of Mechanical and Automation Engineering 
Prof. Wang Jun(The Chinese University of Hong Kong, Hong Kong) 
5. Rayat-Bahra Institute of Engineering and Bio-Technology 
Prof. Parvinder S. Sandhu 
6. UGSM - Monarch Switzerland 
Dr. Parag Kulkarni 
 
隨著計算機領域被研究多年，新的應用或者商業模式更新的速度越加難以掌握，這
次的會議廣泛，全球的學者齊聚一堂分享研究成果，從綠能產業、行動裝置的商業應用、
多媒體應用、影像辨識、演算法設計到網際網路的應用等等。這次參加會議了解關於多
媒體網路應用的議題，也吸收了不少計算機領域的知識以及最新的研究成果。在報告結
束後，也與來自世界各地的學者分享交流不同的想法以及名片，在吸收計算機領域的新
興概念同時，擴展全球視野，期盼能夠有與專業學者合作的機會，並且提升台灣在國際
 18 
劉柏村同學出席2011年計算機工程與應用國際會議心得報告 
 
 
報告人姓名 劉柏村 所屬系別 資訊與運籌管理所 
職       稱 碩班學生 聯絡電話 (02) 27712171 Ext. 2364 
會議正式名
稱 
中文：2011年軟體與計算機工程應用國際會議 
英文：2011 International Conference on Software and Computer 
Applications(ICSCA 2011) 
會 議 時 間 自 100年 7 月 1 日 至 100年 7 月 2 日 （共   2   天） 
擬 發 表 之 
論 文 題 目 
中文：隨選視訊服務之廣播方法設計 
英文：The Design of Hybrid Broadcasting Method for 
Video-on-Demand Services 
 
 
前 言 
2011 International Conference on Software and Computer Applications(ICSCA 2011) 
這次的會議主題是徵求了下列各方面最先進的研究論文，其中包括了許多議題，商業模
型的執行演算法、應用軟體自動化的概念與實做、知識與資訊的影響鏈、資料安全的機
制、雲端技術與商業風險存在的相關性、行動電子商務、無線網路控制技術等多項資訊
管理與工程議題。此次會議有六十幾篇論文發表，藉由會議的場合讓世界各國學者們有
相當多層面的學術交流機會。 
 
 
一、 參加會議經過 
 
報告時程: 
 
Afternoon, July 2, 2011 (Saturday) 
ICSCA - SESSION – 1 
Venue: Conference Room 1 
Session Chair: Assistant Professor Marek Penhaker 
Time: 13:30 – 15:30 
A007  
A Mind Map Based Framework for Automated Software Log File Analysis 
Dileepa Jayathilake 
 
A008 
E-Governance in Public Transportation: U.P.S.R.T.C. - A Case Study 
Ajay Kumar Bharti and Sanjay K. Dwivedi 
 
A023  
An Integrated Voting Algorithm for Fault Tolerant Systems2011 IACSIT NEPAL 
CONFERENCES 
S. Latif-Shabgahi 
 
A039 
 20 
 Distributed and Parallel Processing 
 Distributed Systems 
 E-commerce and E-governance 
 Financal Modeling 
 High Performance Computing 
 Human Computer Interaction 
 Information Retrieval 
 Computer Architecture and Embedded Systems 
 Internet and Web Applications 
 Knowledge Data Engineering 
 Mobile Computing 
 Multimedia Applications 
 Natural Language Processing 
 Programming Languages 
 Reconfigurable Computing Systems 
 Robotics and Automation 
 System Security 
 Software Engineering & CASE 
 Technology Management 
 Theoretical Computer Science 
 Wireless Communication and Mobile Computing 
 
 
這次研討會內容包含的議題層面相當豐富，以資訊工程向外擴張各類型的議題，探
討商業面與技術面的應用、提出許多有趣的概念與其架構模型，與會的教授們來自世界
各地，歐美與印度亞洲甚至阿拉伯；由不同國家不同文化的學術圈的學者互相了解並學
習各自領域的學術成果，且由他們報告與互相提問的學術切磋過程中看見不同於台灣的
風格，對我來說相當有趣且收獲良多。 
 
 
三、 建議 
 
參與了這次 ICSCA 2011 國際會議，看見了許多國家的教授及研究生參與學術會
議，深深地認為身為海島國家的我們，應多鼓勵研究生們往國際會議的平台挑戰，讓學
生藉由研討會的參與，與外國學者交流並分享經驗，不僅能觀摩別國做學問的方式，也
能由交流之中對不同文化下的學術產物有著不同的視野，另外，藉由與不同國家學者交
談的機會，能增進語言能力。因此我認為學校及國家學術單位應多以實質的方式鼓勵學
生參與國際性的會議，經費該給的要給，否則連東歐中南美洲甚至比台灣落後許多的國
家學生都相繼往國際會議邁進，我們還停留在自己的小世界，那是相當令人遺憾且可惜
的事。 
 
 
四、攜回資料名稱及內容 
 
帶回  Proceedings of the 2011 International Conference on Software and Computer 
Applications (ICSCA 2011) 
 
 
 
 22 
hybrid caching strategy, clients can not only watch an entire video without interruption but also use 
interactive operations such as pause, fast jump and rewind jump. 
The rest of this paper is organized as follows: we introduce related works in Section 2. In Section 3, 
we present the TIMES. In Section 4, we present the conclusion of this paper. 
2. Related Works 
In this section, we divide the research of VoD services into the following three categories, as 
detailed below: 
2.1. Typical client-server VoD services 
This kind of transmission is when a client wants to watch some video content, that client will 
send a request to the video server. The server then will establish a dedicated channel for the client and 
send the complete video stream to each client directly when it receives a request from any client. In 
HON [13] a hybrid approach combined a tree overlay and gossip-based data exchange method. 
However, all the relationships between peers and gossip partners are assigned by a central server in 
HON. Therefore, the central server needs to keep track of all the users. So this client-server 
architecture is not preferred in P2P systems because a lot of control traffic would congest the 
bandwidth of any central server. 
2.2. VoD combined with P2P technology 
Unlike the previous types of architecture, this type of research will join the concept of P2P into 
VOD service and hope clients can play a role between client and server simultaneously, so all clients 
can share the bandwidth loading with the server. PROP [14] uses self-organization and a distributed 
storage approach to provide VoD service. But PROP relies on proxy servers and global information 
for catching replacement. P2VoD [15] divides overlay structure into layers based on the peer’s joining 
time, each peer will store the recent video date, so P2VoD can support asynchronous requests. In 
P2Cast [1], clients are clustered according to their arrival times and build an application multicast tree. 
The server has to patch the missing part for each late arriving client. The proposal found in [16] 
proposes the concept of a chunk group to reduce the loading on the server. The peers in groups are 
using P2P technology and sharing the video data with each other. 
2.3. VoD combined with P2P technology and interactive VCR functions 
In recent years, most concepts of interactive streaming service were proposed and hoped to 
provide some interactive functions like pause, fast forward or rewind and other interactive features. 
RINDY [17] designed a ring topology structure to support VCR function under VoD structure. Peers 
in RINDY can use neighbor lists to find a suitable position during the random access process. 
DTStream [18] used a derivative tree-based overlay management scheme to support peer interactivity 
in streaming system. VMesh [19] is a distributed P2P VoD streaming scheme. In VMesh, videos are 
divided into segments and stored with each peer to improve the segment supply. So it can support 
efficient interactive commands. 
3. Tree-based Interactive MultimEdia System 
In this section, we first show some observations on VoD user behavior. Then we’ll introduce our 
system structure in detail and present a hybrid caching strategy 
3.1. Observations on VoD user behavior 
The existing work also has an implicit assumption that the process of watching has continuity of 
playback from begin to end. However, the proposals [22]0 had the following observations, thus we 
base our methods. First, most videos are visited partially, so such as fast forward, rewind of VCR 
functions are used quite frequently. Second, from the statistics, the jump distances in watching process 
are usually small. Third, some parts are often accessed, such as the score screen in a football game are 
 24 
connect to the server directly in figure 2(a). In figure 2(b), because peer A is already in this system, so 
if peer B sends a connect request to the server, it will be rejected and the response redirects the 
message to peer B to let it redirect the request message to peer A on its own. If a peer wants to leave 
the VoD system, we consider three cases for peers leaving. In figure 2(c), if a root wants to leave the 
TIMES, peer A should send the redirect message to its child node first, then if peer A has another 
sibling node, its child node should connect with peer A’s sibling node, else peer A’s child node will 
directly connect to the server. In figure 2(d), if the leaving peer B is an internal node, the leaving 
process is similar to the former case, but the second choice for peer C is to connect with peer B’s 
parent node rather than the server. In figure 2(e), if the leaving node is an external node as peer B, it 
can leave directly after it sends the teardown message to its parent node. 
In figure 2(f), if peer A wants to execute a pause operation, peer A will still receive segments 
from the server during the pause process and check its buffer space continuously. If peer A’s buffer is 
not enough to store the data, peer A should execute a rejoin process. In figure 2(g), if peer B wants to 
fast-jump to a specific position, peer B should send the request to ask its upper-layer relatives to find a 
new provider via neighbor list exchanges, Rewind-jump is similar with fast-jump, peer B sends the 
rewind-jump message to its child node or lower-layer relatives as per figure 2(h). 
3.4. Hybrid Caching Strategy 
In TIMES, each node, in so much as possible, uses its own limited buffer space to catch video 
segments and relay the data to its child node, so the system can transfer between peers and peers to 
satisfy the various peer demands. However, in the actual environment, each node can provide only 
limited buffer space, so if now it has a peer that wants to join this system, but tall the peers in this 
system replace the former part of segments because their buffer space is not enough. Finally, this peer 
will find no suitable parent peer and redirect its request to the server. So if a buffer’s replacement 
strategy is poorly designed, it will greatly reduce the system’s performance. Thus we propose a hybrid 
caching strategy and divide peer’s buffer space into two parts, one is the initial part and another is the 
current part. 
 
Fig. 3: Hybrid Caching Strategy 
Figure 3 illustrates the hybrid caching strategy in TIMES. In the initial part, we design it so that 
each peer caches the first initial 3 minutes of video and never replaces this part until it depart form 
TIMES. We consider that most of the subsequent peers usually miss the initial part, so we let each 
peer keep storing the initial part of the video to avoid the initial missing of data. On the other hand, 
according to the former concept what we proposed, each subsequent peer usually uses an earlier entry 
peer’s buffer space to receive the target segments smoothly even if it executes some VCR operation. 
So we design it so that each peer caches the current 3 minutes of the video and then uses the 
First-In-First-Out algorithm to replace the buffer space when it’s full. 
4. Conclusion and Future Work 
In this paper, we proposed a Tree-based Interactive MultimEdia System (TIMES). Each peer in 
TIMES maintains a neighbor list and hybrid caching strategy. Consequently, TIMES can significantly 
reduce the demand of server bandwidth, increase system flexibility and provide the interactive services. 
In future work, we will design a mesh-based interactive VoD system to improve the system stability. 
2011年軟體與計算機應用國際會議 
An Efficient Cache Strategy in Structured Peer-to-Peer Networks 
 Shin-Yi Chou and Yu-Wei Chen +
Graduate Institute of Information and Logistics Management 
 
National Taipei University of Technology 
Taipei, Taiwan 
 
Abstract. In this paper, we propose a cache strategy which is suitable for decentralized structure 
peer-to-peer (P2P) networks. In our cache strategy, each peer will maintain a list regarding the previous 
search results. Each peer can reduce most research times by exploring its list and enhance query efficiency. 
Keywords: Peer-to-Peer, decentralized structure, cache 
1. Introduction  
The use of P2P applications is growing dramatically, particularly for sharing files and software. With 
recent widespread deployment of P2P technologies, P2P computing is attracting increasing attention. Many 
P2P systems have emerged recently as platforms for users to search and share information over the Internet. 
P2P systems can be classified into three categories, centralized, decentralized-unstructured, and 
decentralized-structured systems. Centralized P2P system has a central server which maintains a directory 
containing content information of the whole P2P system. A popular example of a centralized system is 
Napster [1]. However, centralized systems are prone to a single point of failure problem. Decentralized P2P 
system has no central server. Instead, the query is distributed to each node in the system, so that all nodes are 
connected as Ad hoc network topology. Each node can send messages to other nodes. Generally speaking, 
the decentralized P2P system can be divided into two types: unstructured and structured system. In 
unstructured system such as Gnutella [2], the search mechanism use flooding query messages to neighboring 
computers within a time-to-live (TTL) framework, it is not scalable. These problems have been extensively 
studied, such as [3]. Sripanidkulchai et al. proposed a content location solution in which peers are loosely 
organized to form an interest-based structure on top of the Gnutella network. Chen et al. [4] developed the 
optimal all-to-all broadcast scheme for the case of one-port communication that they not only require the 
minimal number of communication steps, but also incur the minimal number of message. The structured 
system used Distributed Hash Table (DHT) strategy. Each node maintains part of information and shares 
them to each other. So the fault tolerance and performance scalability is increased. The Chord [1], Tapestry 
[6], Pastry [7], and CAN [8] are well-known structured P2P networks. These works focus on providing one 
fundamental lookup service. In addition, the explicit network topology can limit the logical distance between 
two arbitrary computers to an upper bound. 
This paper proposes a strategy to improve the search efficiency for structured P2P system. We propose a 
cache strategy which is suitable for decentralized structure peer-to-peer networks. In our cache strategy, each 
peer will maintain a list regarding the previous search results. Each peer can reduce most research times by 
exploring its list. On the system side, the whole system reduce bandwidth load; on the user side, it can 
enhance query efficiency. 
The remainder of this paper is organized as follows: Some related works are introduced in Section 2. The 
design of cache list is presented in Section 3. In Section 4, conclusions are presented. 
                                                      
+  Corresponding author. Tel.: +(886-2) 2771-2171 #2364; fax: +(886-2) 8772-6946. 
   E-mail address:, t8938012@ntut.edu.tw (Shin-Yi Chou), ywchen@ntut.edu.tw (Yu-Wei Chen). 
 cache content list 
  We need to ensure the correctness of the cache path and find the cache node which is matched or not. 
When a node find cache nodes in the list, it will directly through the key value and found the cache nodes 
location. It can effectively reduce the routing time. 
3.3. Join and Leave 
In P2P file system, nodes’ join and leave have high variability. The node must find out the system 
distribution first when the node join a structured P2P file system. When leaving the system, the node should 
update the node information to ensure that its operation is continued. In the cache strategy, the join process is 
similar the general structure of the P2P system. Each node dynamically maintains DHT information. 
Especially, local node builds a buffered space to store cache, create a cache list and a timer.  
When the node leaves the system, since the cache list is stored in the local node, it doesn’t affect any 
structured network. In this condition, node just sends a “leave message” to its cache node that the cache node 
realized it has been leaves. Sometimes the “leave message” failed since wrong user behavior or network 
bandwidth problem. We called the “accident leave”. In this condition, it will not notify the node which in the 
cache list, so the node which in the cache list can’t receive its information recently. Therefore, a node 
periodically send a “confirm message” to the cache nodes which in cache list in order to confirm the 
statement of cache nodes. The node will immediately update the cache information when a cache node is join 
or leave. 
3.4. Search Protocol 
Figure 2 shows that the Cache Strategy in the P2P file system. Each node configured a cache list in the 
system, and we set a routing protocol as follow: 
Step 1: Search the cache list and confirm whether the desired contents exist in the cache list or not. 
Step 2: If the desired contents exist in the cache, the node directly connect to the cache node. 
Step 3: If the desired contents do not exist in the cache, then the original searching protocol is executed. 
 
 
 
 
 
 
 
 
 
 
 
 
 
Fig. 2.The Cache Strategy in the System. 
 
4. Conclusion 
In this paper, we proposed a new cache strategy on a decentralized P2P system. The cache strategy can 
be embedded in any of the decentralized P2P structures. In our cache strategy, each peer will maintain a list 
regarding the previous search results. User behaviour, e.g. locality, increased the cache hit ratio. Each peer 
 
2011年軟體與計算機工程應用國際會議 
A Hybrid Broadcasting Method for Video-on-Demand Services 
Po-Tsun Liu+
National Taipei University of Technology, Graduate Institute of Information and Logistics Management, Taipei, 
Taiwan 
 and Yu-Wei Chen 
Abstract - In this work, we propose a hybrid broadcasting method combining the Crescent and 
Staggered Broadcasting schemes. Consider N (= Nc + Ns) channels to deliver a video with length D, 
where Nc is the number of Crescent channels and Ns is the number of Staggered channels. The 
performance of our proposed scheme is superior to the previous methods. 
 
Keywords: broadcasting, patching, video-on-demand, waiting time, buffer requirement 
 
1. Introduction 
The broadcasting approach works by dividing file into several segments then allocate those 
segments into the specific channel for delivering periodically. Many broadcasting schemes have some 
similar skill on transmission allocated processing. While checking the broadcasting process, there are 
some factors might cause the significant influence inside, such as the waiting time, buffer requirement 
size and playback control. 
To reduce the impact of the tough situation in streaming flow, many broadcast scheme had been 
created through these years and we will introduce some later. Assume the whole data size is equally 
spread at any point of the video, we use different aspect to improve the method of streaming 
transmission, here we call those distinguish method as “scheme”. For example, there are Fast Patching 
scheme [2], Harmonic scheme [3], Staircase scheme [4], Bespoke scheme [5], Crescent broadcasting 
[6], and some other method, and we will check some of above later in the section 2. Here we combine 
Crescent and Staggered scheme protocol into the whole structure of broadcasting work frame. 
   In this work, we propose a hybrid broadcasting method combining the Crescent and Staggered 
Broadcasting schemes. Consider N (= Nc + Ns) channels to deliver a video with length D, where Nc is 
the number of Crescent channels and Ns is the number of Staggered channels. The performance of our 
proposed scheme is superior to the previous methods. 
The rest of this paper is organized as follows. In Section 2, we present the related work. In Section 3, 
we present the proposed Crescent-Staggered Broadcasting scheme. In Section 4, we evaluate the 
performance of the proposed scheme. Some conclusions are addressed in Section 5. 
2. Related Works 
In this section, we review some related works [2][3][6]. All these methods are designed for 
broadcasting a constant-bit-rate (CBR)-encoded video. For convenience, we assume that the 
consumption rate of a CBR-encoded video is b Mbps. 
2.1 Fast patching scheme (FP) 
There are two types of channels in FP: Fast and Staggered. First of all, we observe that Fast 
patching (FP) will divide the forward segment into double for the next channel. According to the 
                                                          
+ Corresponding author: Po-Tsun Liu. Tel.: + (886-2)27712171#2364; fax: +(886-2).  
E-mail address: ywchen@ntut.edu.tw (Yu-Wei Chen).bjlp16@gmail.com (Po-Tsun Liu) 
method, then the Staggered channel is ready to match up right after the patching processing(Crescent) 
finishes. Staggered channel will re-broadcast again while passing through every duration Dc. 
3.1 The operation of server side 
In Fig. 2, we define the factors for the whole processing of Crescent Staggered Broadcasting 
structure. The total length of the video is D; the length of the patching zone which is using Crescent 
scheme is Dc; the length of Staggered channel is Ds; and each length of duration of the segment is d. 
Here we assign the sequence of the number for each segment in Crescent are segment 1 to segment n, 
and the forward one-long segment in Staggered channel is segment number n+1. Then we check these 
the operation of two side, server and client. Here we set the bandwidth of Staggered channel is b, and 
each channels of the Crescent scheme are also b. According to the segment allocation, we have the 
equation. 
                                Ds = t(Dc + d) , t≧1                                  (1) 
Ns represent as the number of the Staggered channels. 
                                   Ns = 
Dc
D
                                      (2) 
The entire number of the segment of patching zone is 5* 22 2 −−Nc  as i , while c represent as the 
number of the Crescent channels; therefore, we can forward get the maximum waiting time w. 
                                     w = 
i
Dc
                                        (3) 
The total number of the channels N is composed by Crescent channels (Nc) and Staggered channels 
(Ns); therefore, we have the equation. 
                          N = Nc + Ns = log2(
d
dDc
5
84 +
) + 
Dc
D
                          (4) 
3.2 The structure of Crescent Staggered Broadcasting 
At the very first of the beginning, the Staggered is the only channel exists, then the Staggered 
channel will be recreated though every period of Dc, however, if the request join timing is due to this 
period Dc, the Crescent service will be triggered and the request will be served by following the way 
Crescent operates. 
In Table. 1, we show the comparison of those three schemes. Our proposed scheme: Crescent 
Staggered Broadcasting make a better performance than Fast patching and Harmonic Staggered does. 
After then, we set up the value for the parameters: number of Crescent channels, Fast channels, 
Harmonic channels and Staggered channels for observing the performance of the waiting time as the 
Fig. 3. 
 
Fig. 3 the comparison of the maximum waiting time in CS, FP and HS with 6 Staggered channels and 
different Crescent, Harmonic and Fast channels as X axis 
 
Ratio of CS/FP: 
22*5
12
2 −
−
−Nc
cf
 >≈ 0.8 
Ratio of CS/HS: 
22*5
)1(
2 −
−
−Nc
NNs
 >≈0.1 
 
Table. 1 The performance comparison 
 
 
5. Conclusion 
Sometimes, we just caught between the buffer requirement and the clients’ waiting time while 
黃俞豪同學出席 2011 年軟體與計算機應用國際會議成果報告表 
 
報告人姓名 黃俞豪 所屬系別 資訊與運籌管理所 
職       稱 碩士生 聯絡電話 (02) 27712171 Ext. 2364 
會議正式名
稱 
中文：2011 年軟體與計算機應用國際會議 
英 文 ： 2011 International Conference on Software and Computer 
Applications (ICSCA 2011) 
會 議 時 間 自 100 年 7 月 1 日 至 100 年 7 月 2 日 （共   2   天） 
擬 發 表 之 
論 文 題 目 
中文：在 P2P 網路上的一個互動式的多媒體串流服務 
英文：An Interactive Streaming Service over Peer-to-Peer Networks 
 
前 言 
我們這次參加的會議為 International Conference on Software and Computer Applications 
(ICSCA 2011)，是由 International Association of Computer Science and Information Technology 
(IACSIT)舉辦，IACSIT 是一個已註冊的國際科學協會，總部位於新加坡，IACSIT 每年都會舉
辦不同的會議，希望透過類似這樣的方式加強計算機科學與技術方面的學術交流，不僅促進相
關技術的發展，也提供了計算機科學學術交流的機會。今年 IACSIT 在尼泊爾的加德滿都同時
舉辦了三個會議，分別為：International Conference on Software and Computer Applications、
International Conference on Computer and Business Management 和 International Conference on 
Computing and Computer Vision，都是相當不錯的會議，根據主辦單位的統計，此次 IACSIT 所
舉辦的國際會議總共發表了 53 篇論文，而每一篇論文都有相當不錯的品質。 
 
 
一、 參加會議經過 
 
報告時程 
 
Afternoon, July 2, 2011 (Saturday) 
ICSCA - SESSION – 1 
Venue: Conference Room 1 
Session Chair: Assistant Professor Marek Penhaker 
Time: 13:30 – 15:30 
 
A007 
A Mind Map Based Framework for Automated Software Log File Analysis 
Dileepa Jayathilake 
二、 與會心得 
 
本次會議地點在尼泊爾，共計兩天(1st-2nd July, 2011)，會議的主旨在於提供一個平台讓世
界各地的研究人員、工程師、學者以及業界的專業人士，介紹他們在軟體與計算機應用上的研
究與開發成果，同時也讓這些參與會議的代表彼此交流新的思想與應用經驗，甚至面對面建立
起夥伴關係，在未來可能還有合作的機會，相當的不錯。在報告的開始前，IACSIT 安排了三
場 keynote speeches： 
 
Morning, July 2, 2011 (Saturday) 
1. Department of Mechanical and Automation Engineering 
Prof. Wang Jun(The Chinese University of Hong Kong, Hong Kong) 
2. Rayat-Bahra Institute of Engineering and Bio-Technology 
Prof. Parvinder S. Sandhu 
3. UGSM - Monarch Switzerland 
Dr. Parag Kulkarni 
 
計算機領域發展的範圍相當廣泛，無論是在軟體還是應用方面都發展地相當迅速，我們利
用這些技術進而提升我們的生活品質，然而像 IACSIT 所舉辦的這類型的研討會，就是希望讓
學術界甚至業界之間進行資訊的交流，讓計算機領域的發展更加卓越，這次個人參加此會議，
特別留意感興趣的多媒體網路應用及影像串流傳輸的相關議題，除了將自己的研究成果與大家
分享外，還吸收一些新的研究成果，感受目前計算機應用的趨勢，在報告的休息時間，我們也
跟各個國家的學者進行資訊上的交流，不僅能夠提升自己對計算機領域的認識外，還對各國家
的文化、國際化程度在認知上也能有所提升，是個難能可貴的經驗。 
 
 
三、 建議 
 
很感謝能有這次的機會以研究生的名義參與 ICSCA 這種國際性的研討會，參與會議的人
原大部分都是教授等級以上的老師，很少看到有其他學生一同參與學術會議，以這次參與國際
會議的經驗，不僅能夠和外國的學者進行知識上的交流，借由他們的經驗分享培養我們的國際
觀外，還可以藉此增進外語能力，不管是在聽、說這兩方面都有很大的幫助，讓我們了解到自
己所做的研究不單單只是取得一個文憑上的認可，還可以對該學術領域盡點心力。但同樣身為
學生的我們，也感覺到學生要參與這種國際的會議往往受限於經費問題，一趟國際性的會議就
需要飛機、住宿與會議的註冊費用，加總下來的金額並非學生所能負擔的，如果學校能提供各
種獎學金或是出國補助金申請的管道，給予學生出國經費上的支持，除了能給予學生撰寫品質
良好論文的動力外，還可以提升本校學生的國際觀，所以這是我一個小小的建議。 
 
 
2011 年軟體與計算機應用國際會議 
An Interactive Streaming Service over Peer-to-Peer Networks 
Yu-Wei Chen 
1
, Yu-Hao Huang 
2
 

  
1
 National Taipei University of Technology, Graduate Institute of Information and Logistics Management, 
Taipei, Taiwan 
2
 National Taipei University of Technology, Industrial Engineering and Management, Taipei, Taiwan 
Abstract. It is a significant challenge to provide user interactivity in peer-to-peer on-demand video 
streaming, such as pause, fast search and reverse search operations of VCR function. In order to provide this 
type of interactive services, system need to serve asynchronous user requests of large number, adjust the P2P 
overlay topology immediately and allocate the streaming appropriately. In this paper, we propose a Tree-based 
Interactive MultimEdia System (TIMES). Each peer in TIMES maintains a neighbor list and hybrid caching 
strategy. Consequently, TIMES can significantly reduce the demand of server bandwidth, increase system 
flexibility and provide the interactive services. 
Keywords: peer-to-peer network, interactive multimedia system, video-on-demand, caching 
1. Introduction 
The so-called Video-On-Demand (VoD) service allows users to select and watch programs of their 
interest. Today, the transmission of multimedia and entertainment has become an indispensable part of 
people‟s life. However, providing VoD service still has two challenges [1]: First, bandwidth is an expensive 
resource for transmission. However, VoD is provided by the transmission of multimedia. It‟s requires higher 
bandwidth requirements and the latency will be higher. Second, when a VoD server can provide more and 
more popular content, the more users will attempt to join that system. In the traditional client-server 
architecture, each client connects to the server over a dedicated channel. When the video popularity increases, 
system performance will decrease. 
Multicast [2][3] is a well-known technique to reduce server loading and network bandwidth. In typical 
multicast transmission, when video server transmits a multicast stream, the clients in the multicast group can 
receive the stream simultaneously. Compared with unicast, multicast can significantly reduce the server 
loading. 
In order to effectively reduce the load on the server, P2P technology has been proved to be an effective 
and flexible method for video streaming in dynamic and heterogeneous environments [4][5][6]. In the past 
                                                     
  Corresponding author. Tel.: + (886-2)27712171#2364; fax: +(886-2)2731-7168. 
   E-mail address: ywchen@ntut.edu.tw (Yu-Wei Chen), puzpazboom@hotmail.com (Yu-Hao Huang) 
In this section, we first show some observations on VoD user behavior. Then we‟ll introduce our system 
structure in detail and present a hybrid caching strategy 
3.1. Observations on VoD user behavior 
The existing work also has an implicit assumption that the process of watching has continuity of playback 
from begin to end. However, the proposals [22][23] had the following observations, thus we base our methods. 
First, most videos are visited partially, so such as fast forward, rewind of VCR functions are used quite 
frequently. Second, from the statistics, the jump distances in watching process are usually small. Third, some 
parts are often accessed, such as the score screen in a football game are always attracting most audience to 
watch it. 
3.2. System Overview 
 
Fig. 1: System Overview 
Figure 1 illustrates the architecture of TIMES, we only consider single video transmission. The initial 
process in the system, video A will divide into many segments, each length is equal to k. According to a peer‟s 
joining time, we separate these peers into different layers, and the interval between each layer is equal to k. 
Earlier joining nodes will belong to the upper layer and subsequent nodes will send their request to earlier 
joining nodes rather than connect with server directly. Besides, each node will store a neighbor list to record 
adjacent node information, including the parent node, sibling node and child node. Based on this list, peers 
can find the target peer who has its requested data much more easily. In TIMES, every parent node uses 
multicast streaming to transmit the video segment to its child nodes. So if the request rate is much higher, the 
server need only send one multicast streaming to peers of the first layer, and these peers will cache the 
segment and relay to their child nodes in next layer. Thus, large number of non- synchronization requests can 
be satisfied. 
3.3. Tree Architecture 
In TIMES, each node, in so much as possible, uses its own limited buffer space to catch video segments 
and relay the data to its child node, so the system can transfer between peers and peers to satisfy the various 
peer demands. However, in the actual environment, each node can provide only limited buffer space, so if 
now it has a peer that wants to join this system, but tall the peers in this system replace the former part of 
segments because their buffer space is not enough. Finally, this peer will find no suitable parent peer and 
redirect its request to the server. So if a buffer‟s replacement strategy is poorly designed, it will greatly reduce 
the system‟s performance. Thus we propose a hybrid caching strategy and divide peer‟s buffer space into two 
parts, one is the initial part and another is the current part. 
Fig. 3: Hybrid Caching Strategy 
Figure 3 illustrates the hybrid caching strategy in TIMES. In the initial part, we design it so that each peer 
caches the first initial 3 minutes of video and never replaces this part until it depart form TIMES. We consider 
that most of the subsequent peers usually miss the initial part, so we let each peer keep storing the initial part 
of the video to avoid the initial missing of data. On the other hand, according to the former concept what we 
proposed, each subsequent peer usually uses an earlier entry peer‟s buffer space to receive the target segments 
smoothly even if it executes some VCR operation. So we design it so that each peer caches the current 3 
minutes of the video and then uses the First-In-First-Out algorithm to replace the buffer space when it‟s full. 
4. Conclusion and Future Work 
In this paper, we proposed a Tree-based Interactive MultimEdia System (TIMES). Each peer in TIMES 
maintains a neighbor list and hybrid caching strategy. Consequently, TIMES can significantly reduce the 
demand of server bandwidth, increase system flexibility and provide the interactive services. In future work, 
we will design a mesh-based interactive VoD system to improve the system stability. 
5. References 
[1] Y. Guo, K. Suh, J. Kurose, and D. Towsley, “P2Cast: peer-to-peer patching scheme for VoD service,” in 
Proceedings of the 12th ACM International World Wide Web Conference (WWW), Budapest, Hungary, May 2003. 
[2] K.C. Almeroth and M.H. Ammar, “The use of multicast delivery to provide a scalable and interactive 
video-on-demand service,” IEEE J. Selected Areas in Communication, vol. 14, no. 6, pp. 1110-1112, 1996. 
[3] U. Shaukat, A. Qayyum and S. Hussain, “Performance evaluation of multicast protocols for multimedia traffic,” in 
Proceedings of the 2009 Int'l Conference on Emerging Technologies, October 2009. 
[4]  “PPLive”, http://www.pplive.com/. 
[5] Y. Huang, T. Z. J. Fu, D. M. Chiu, J. C. S. Lui and C. Huang, “Challenges, design and analysis of a large-scale 
P2P-VoD system,” in Proc. of ACM SIGCOMM’08, August 2008. 
[6] C. Huang, J. Li, and K. W. Ross, “Can internet video-on-demand be profitable?,” in Proc. ACM SIGCOMM, Kyoto, 
Japan, August 2007. 
[7] X. Zhang, J. Liu, B. Li, and T.S.P. Yum, “Donet/Coolstreaming: A datadriven overlay network for live media 
streaming,” in Proc. IEEE INFOCOM, 2005. 
[8] S. Jin and A. Bestavros, “A cache-and-relay streaming media delivery for asynchronous clients,” in Proc. Int. 
Workshop on Networked Group Communication (NGC), Boston, Massachusetts, USA, October 2002. 
周信屹同學出席 2011 年軟體與計算機應用國際會議成果報告表 
 
報告人姓名 周信屹 所屬系別 資訊與運籌管理所 
職       稱 碩士生 聯絡電話 (02) 27712171 Ext. 2364 
會議正式名
稱 
中文：2011 年軟體與計算機應用國際會議 
英 文 ： 2011 International Conference on Software and Computer 
Applications (ICSCA 2011) 
會 議 時 間 自 100 年 7 月 1 日 至 100 年 7 月 2 日 （共   2   天） 
擬 發 表 之 
論 文 題 目 
中文：同儕式結構化網路的快取策略  
英文：An Efficient Cache Strategy in Structured Peer-to-Peer Networks 
 
前 言 
這次的參加的會議為 International Conference on Software and Computer Applications 
(ICSCA 2011)，IACSIT 總部位在新加坡，是一個已註冊的國際科學協會，每年舉辦不同的學
術會議，透過學者論文發表，提供一個計算機科學學術交流的機會，而這次會議的主題徵求了
三個方面最先進的研究論文，包括了 International Conference on Software and Computer 
Applications、International Conference on Computer and Business Management 和 International 
Conference on Computing and Computer Vision 等方面。今年的 IACSIT 則是舉辦在尼泊爾的加
德滿都。根據主辦單位的統計，此次 IACSIT 2011 國際會議總共發表了 53 篇論文，每一篇都
具有相當不錯的學術價值。 
 
 
五、 參加會議經過 
 
報告時程 
 
Afternoon, July 2, 2011 (Saturday) 
ICSCA - SESSION – 1 
Venue: Conference Room 1 
Session Chair: Assistant Professor Marek Penhaker 
Time: 13:30 – 15:30 
 
A007 
A Mind Map Based Framework for Automated Software Log File Analysis 
Dileepa Jayathilake 
 
 本次會議地點在尼泊爾，共計兩天(1st-2nd July, 2011)，會議的目的為提供來自世界各地的
研究人員、工程師、學者以及專業人士一個平台以介紹他們在計算機應用上的的研究成果以及
應用開發，也提供一個機會讓世界各地的學者一個面對面交流新的想法以及實務經驗的機會，
期待可以藉此激盪新的想法與創意，亦或促進學者間的商業合作以及應用，以尋求未來的全球
合作夥伴關係。而提交的論文都會被技術委員會審查，因此在論文方面能夠維持一定水準。而
在報告的開始前，IACSIT 安排了三場 keynote speeches： 
 
Morning, July 2, 2011 (Saturday) 
4. Department of Mechanical and Automation Engineering 
Prof. Wang Jun(The Chinese University of Hong Kong, Hong Kong) 
5. Rayat-Bahra Institute of Engineering and Bio-Technology 
Prof. Parvinder S. Sandhu 
6. UGSM - Monarch Switzerland 
Dr. Parag Kulkarni 
 
隨著計算機領域被研究多年，新的應用或者商業模式更新的速度越加難以掌握，這次的會
議廣泛，全球的學者齊聚一堂分享研究成果，從綠能產業、行動裝置的商業應用、多媒體應用、
影像辨識、演算法設計到網際網路的應用等等。這次參加會議了解關於多媒體網路應用的議題，
也吸收了不少計算機領域的知識以及最新的研究成果。在報告結束後，也與來自世界各地的學
者分享交流不同的想法以及名片，在吸收計算機領域的新興概念同時，擴展全球視野，期盼能
夠有與專業學者合作的機會，並且提升台灣在國際的知名度。 
 
 
七、 建議 
 
這次能夠有出國參加會議發表的機會要感謝我的指導教授，陳育威 博士。這是求學階段
難得的體驗以及能夠將這段期間的成果在國際上呈現，使我能夠與全球的學者當面交流學術心
得與經驗分享，除了增加計算機領域上的知識也增進國人平均不足的外語能力，聽力與表達，
因此可以說是獲益良多。但是參加這次的會議我們可以明顯的感受到資源的受限，參加一趟國
際性的會議所包含的開銷包含機票、食宿與會議的註冊費用，對還是學生的我們是一個很大的
負擔，因此希望學校支持多學生參加國際會議，並且提供出國補助，在經濟上給予後援，使學
生能夠無後顧之憂在學術方面，提升論文品質與國際觀。 
 
 
八、 攜回資料名稱及內容 
 
帶回 International Proceedings of Computer Science and Information Technology-Software and 
2011 年軟體與計算機應用國際會議 
An Efficient Cache Strategy in Structured Peer-to-Peer Networks 
 Shin-Yi Chou and Yu-Wei Chen
 
 
Graduate Institute of Information and Logistics Management 
National Taipei University of Technology 
Taipei, Taiwan 
 
Abstract. In this paper, we propose a cache strategy which is suitable for decentralized structure 
peer-to-peer (P2P) networks. In our cache strategy, each peer will maintain a list regarding the previous 
search results. Each peer can reduce most research times by exploring its list and enhance query efficiency. 
Keywords: Peer-to-Peer, decentralized structure, cache 
6. Introduction  
The use of P2P applications is growing dramatically, particularly for sharing files and software. With 
recent widespread deployment of P2P technologies, P2P computing is attracting increasing attention. Many 
P2P systems have emerged recently as platforms for users to search and share information over the Internet. 
P2P systems can be classified into three categories, centralized, decentralized-unstructured, and 
decentralized-structured systems. Centralized P2P system has a central server which maintains a directory 
containing content information of the whole P2P system. A popular example of a centralized system is 
Napster [1]. However, centralized systems are prone to a single point of failure problem. Decentralized P2P 
system has no central server. Instead, the query is distributed to each node in the system, so that all nodes are 
connected as Ad hoc network topology. Each node can send messages to other nodes. Generally speaking, 
the decentralized P2P system can be divided into two types: unstructured and structured system. In 
unstructured system such as Gnutella [2], the search mechanism use flooding query messages to neighboring 
computers within a time-to-live (TTL) framework, it is not scalable. These problems have been extensively 
studied, such as [3]. Sripanidkulchai et al. proposed a content location solution in which peers are loosely 
organized to form an interest-based structure on top of the Gnutella network. Chen et al. [4] developed the 
optimal all-to-all broadcast scheme for the case of one-port communication that they not only require the 
minimal number of communication steps, but also incur the minimal number of message. The structured 
system used Distributed Hash Table (DHT) strategy. Each node maintains part of information and shares 
them to each other. So the fault tolerance and performance scalability is increased. The Chord [24], Tapestry 
[29], Pastry [30], and CAN [31] are well-known structured P2P networks. These works focus on providing 
one fundamental lookup service. In addition, the explicit network topology can limit the logical distance 
between two arbitrary computers to an upper bound. 
This paper proposes a strategy to improve the search efficiency for structured P2P system. We propose a 
cache strategy which is suitable for decentralized structure peer-to-peer networks. In our cache strategy, each 
peer will maintain a list regarding the previous search results. Each peer can reduce most research times by 
exploring its list. On the system side, the whole system reduce bandwidth load; on the user side, it can 
enhance query efficiency. 
The remainder of this paper is organized as follows: Some related works are introduced in Section 2. The 
design of cache list is presented in Section 3. In Section 4, conclusions are presented. 
                                                     
  Corresponding author. Tel.: +(886-2) 2771-2171 #2364; fax: +(886-2) 8772-6946. 
   E-mail address:, t8938012@ntut.edu.tw (Shin-Yi Chou), ywchen@ntut.edu.tw (Yu-Wei Chen). 
 cache content list 
  We need to ensure the correctness of the cache path and find the cache node which is matched or not. 
When a node find cache nodes in the list, it will directly through the key value and found the cache nodes 
location. It can effectively reduce the routing time. 
8.3. Join and Leave 
In P2P file system, nodes‟ join and leave have high variability. The node must find out the system 
distribution first when the node join a structured P2P file system. When leaving the system, the node should 
update the node information to ensure that its operation is continued. In the cache strategy, the join process is 
similar the general structure of the P2P system. Each node dynamically maintains DHT information. 
Especially, local node builds a buffered space to store cache, create a cache list and a timer.  
When the node leaves the system, since the cache list is stored in the local node, it doesn‟t affect any 
structured network. In this condition, node just sends a “leave message” to its cache node that the cache node 
realized it has been leaves. Sometimes the “leave message” failed since wrong user behavior or network 
bandwidth problem. We called the “accident leave”. In this condition, it will not notify the node which in the 
cache list, so the node which in the cache list can‟t receive its information recently. Therefore, a node 
periodically send a “confirm message” to the cache nodes which in cache list in order to confirm the 
statement of cache nodes. The node will immediately update the cache information when a cache node is join 
or leave. 
8.4. Search Protocol 
Figure 2 shows that the Cache Strategy in the P2P file system. Each node configured a cache list in the 
system, and we set a routing protocol as follow: 
Step 1: Search the cache list and confirm whether the desired contents exist in the cache list or not. 
Step 2: If the desired contents exist in the cache, the node directly connect to the cache node. 
Step 3: If the desired contents do not exist in the cache, then the original searching protocol is executed. 
 
 
 
 
 
 
 
 
 
 
 
 
 
Fig. 2.The Cache Strategy in the System. 
 
9. Conclusion 
In this paper, we proposed a new cache strategy on a decentralized P2P system. The cache strategy can 
be embedded in any of the decentralized P2P structures. In our cache strategy, each peer will maintain a list 
regarding the previous search results. User behaviour, e.g. locality, increased the cache hit ratio. Each peer 
 
劉柏村同學出席2011年計算機工程與應用國際會議成果報告表 
 
 
報告人姓名 劉柏村 所屬系別 資訊與運籌管理所 
職       稱 碩班學生 聯絡電話 (02) 27712171 Ext. 2364 
會議正式名
稱 
中文：2011年軟體與計算機工程應用國際會議 
英文： 2011 International Conference on Software and Computer 
Applications(ICSCA 2011) 
會 議 時 間 自100年7 月 1 日 至 100年7 月 2 日 （共   2   天） 
擬 發 表 之 
論 文 題 目 
中文：隨選視訊服務之廣播方法設計 
英文：The Design of Hybrid Broadcasting Method for 
Video-on-Demand Services 
 
 
前 言 
2011 International Conference on Software and Computer Applications(ICSCA 2011) 
這次的會議主題是徵求了下列各方面最先進的研究論文，其中包括了許多議題，商業
模型的執行演算法、應用軟體自動化的概念與實做、知識與資訊的影響鏈、資料安全
的機制、雲端技術與商業風險存在的相關性、行動電子商務、無線網路控制技術等多
項資訊管理與工程議題。此次會議有六十幾篇論文發表，藉由會議的場合讓世界各國
學者們有相當多層面的學術交流機會。 
 
 
一、 參加會議經過 
 
報告時程: 
 
Afternoon, July 2, 2011 (Saturday) 
ICSCA - SESSION – 1 
Venue: Conference Room 1 
Session Chair: Assistant Professor Marek Penhaker 
Time: 13:30 – 15:30 
A007  
A Mind Map Based Framework for Automated Software Log File Analysis 
Dileepa Jayathilake 
 
A008 
 Computer Architecture and Embedded Systems 
 Computer Graphics & Virtual Reality 
 Computer Graphics and Multimedia 
 Computer Networks 
 Computer Security 
 Computing Practices & Applications 
 Computer Networks and Data Communication 
 Clude Computing 
 Control Systems 
 Data Communications 
 Data Compression 
 Data Encryption 
 Data Mining 
 Database Systems 
 Digital System and Logic Design 
 Distributed and Parallel Processing 
 Distributed Systems 
 E-commerce and E-governance 
 Financal Modeling 
 High Performance Computing 
 Human Computer Interaction 
 Information Retrieval 
 Computer Architecture and Embedded Systems 
 Internet and Web Applications 
 Knowledge Data Engineering 
 Mobile Computing 
 Multimedia Applications 
 Natural Language Processing 
 Programming Languages 
 Reconfigurable Computing Systems 
 Robotics and Automation 
 System Security 
 Software Engineering & CASE 
 Technology Management 
 Theoretical Computer Science 
 Wireless Communication and Mobile Computing 
 
 
這次研討會內容包含的議題層面相當豐富，以資訊工程向外擴張各類型的議題，
探討商業面與技術面的應用、提出許多有趣的概念與其架構模型，與會的教授們來自
世界各地，歐美與印度亞洲甚至阿拉伯；由不同國家不同文化的學術圈的學者互相了
解並學習各自領域的學術成果，且由他們報告與互相提問的學術切磋過程中看見不同
於台灣的風格，對我來說相當有趣且收獲良多。 
 
 
三、 建議 
 
參與了這次ICSCA 2011國際會議，看見了許多國家的教授及研究生參與學術會
2011年軟體與計算機工程應用國際會議 
A Hybrid Broadcasting Method for Video-on-Demand Services 
Po-Tsun Liu

 and Yu-Wei Chen 
National Taipei University of Technology, Graduate Institute of Information and Logistics Management, Taipei, 
Taiwan 
Abstract - In this work, we propose a hybrid broadcasting method combining the Crescent and 
Staggered Broadcasting schemes. Consider N (= Nc + Ns) channels to deliver a video with length D, 
where Nc is the number of Crescent channels and Ns is the number of Staggered channels. The 
performance of our proposed scheme is superior to the previous methods. 
 
Keywords: broadcasting, patching, video-on-demand, waiting time, buffer requirement 
 
1. Introduction 
The broadcasting approach works by dividing file into several segments then allocate those 
segments into the specific channel for delivering periodically. Many broadcasting schemes have some 
similar skill on transmission allocated processing. While checking the broadcasting process, there are 
some factors might cause the significant influence inside, such as the waiting time, buffer requirement 
size and playback control. 
To reduce the impact of the tough situation in streaming flow, many broadcast scheme had been 
created through these years and we will introduce some later. Assume the whole data size is equally 
spread at any point of the video, we use different aspect to improve the method of streaming 
transmission, here we call those distinguish method as “scheme”. For example, there are Fast Patching 
scheme [2], Harmonic scheme [3], Staircase scheme [4], Bespoke scheme [5], Crescent broadcasting 
[6], and some other method, and we will check some of above later in the section 2. Here we combine 
Crescent and Staggered scheme protocol into the whole structure of broadcasting work frame. 
   In this work, we propose a hybrid broadcasting method combining the Crescent and Staggered 
Broadcasting schemes. Consider N (= Nc + Ns) channels to deliver a video with length D, where Nc is 
the number of Crescent channels and Ns is the number of Staggered channels. The performance of our 
proposed scheme is superior to the previous methods. 
The rest of this paper is organized as follows. In Section 2, we present the related work. In Section 3, 
we present the proposed Crescent-Staggered Broadcasting scheme. In Section 4, we evaluate the 
performance of the proposed scheme. Some conclusions are addressed in Section 5. 
2. Related Works 
In this section, we review some related works [2][3][6]. All these methods are designed for 
broadcasting a constant-bit-rate (CBR)-encoded video. For convenience, we assume that the 
consumption rate of a CBR-encoded video is b Mbps. 
2.1 Fast patching scheme (FP) 
There are two types of channels in FP: Fast and Staggered. First of all, we observe that Fast 
patching (FP) will divide the forward segment into double for the next channel. According to the 
                                                          
 Corresponding author: Po-Tsun Liu. Tel.: + (886-2)27712171#2364; fax: +(886-2).  
E-mail address: ywchen@ntut.edu.tw (Yu-Wei Chen).bjlp16@gmail.com (Po-Tsun Liu) 
method, then the Staggered channel is ready to match up right after the patching processing(Crescent) 
finishes. Staggered channel will re-broadcast again while passing through every duration Dc. 
3.1 The operation of server side 
In Fig. 2, we define the factors for the whole processing of Crescent Staggered Broadcasting 
structure. The total length of the video is D; the length of the patching zone which is using Crescent 
scheme is Dc; the length of Staggered channel is Ds; and each length of duration of the segment is d. 
Here we assign the sequence of the number for each segment in Crescent are segment 1 to segment n, 
and the forward one-long segment in Staggered channel is segment number n+1. Then we check these 
the operation of two side, server and client. Here we set the bandwidth of Staggered channel is b, and 
each channels of the Crescent scheme are also b. According to the segment allocation, we have the 
equation. 
                                Ds = t(Dc + d) , t≧1                                  (1) 
Ns represent as the number of the Staggered channels. 
                                   Ns = 
Dc
D
                                      (2) 
The entire number of the segment of patching zone is 5* 22
2 Nc  as i , while c represent as the 
number of the Crescent channels; therefore, we can forward get the maximum waiting time w. 
                                     w = 
i
Dc
                                        (3) 
The total number of the channels N is composed by Crescent channels (Nc) and Staggered channels 
(Ns); therefore, we have the equation. 
                          N = Nc + Ns = log2(
d
dDc
5
84 
) + 
Dc
D
                          (4) 
3.2 The structure of Crescent Staggered Broadcasting 
At the very first of the beginning, the Staggered is the only channel exists, then the Staggered 
channel will be recreated though every period of Dc, however, if the request join timing is due to this 
period Dc, the Crescent service will be triggered and the request will be served by following the way 
Crescent operates. 
In Table. 1, we show the comparison of those three schemes. Our proposed scheme: Crescent 
Staggered Broadcasting make a better performance than Fast patching and Harmonic Staggered does. 
After then, we set up the value for the parameters: number of Crescent channels, Fast channels, 
Harmonic channels and Staggered channels for observing the performance of the waiting time as the 
Fig. 3. 
 
Fig. 3 the comparison of the maximum waiting time in CS, FP and HS with 6 Staggered channels and 
different Crescent, Harmonic and Fast channels as X axis 
 
Ratio of CS/FP: 
22*5
12
2 

Nc
cf
 >≈ 0.8 
Ratio of CS/HS: 
22*5
)1(
2 

Nc
NNs
 >≈0.1 
 
Table. 1 The performance comparison 
 
 
5. Conclusion 
Sometimes, we just caught between the buffer requirement and the clients’ waiting time while 
國科會補助計畫衍生研發成果推廣資料表
日期:2011/10/14
國科會補助計畫
計畫名稱: 異質環境下的多媒體廣播協定之設計與分析
計畫主持人: 陳育威
計畫編號: 99-2628-E-027-008- 學門領域: 計算機網路與網際網路
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
本計畫支持三位研究生前往尼泊爾參與國際研討會發表論文。 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
