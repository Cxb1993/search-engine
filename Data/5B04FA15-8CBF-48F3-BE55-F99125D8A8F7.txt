1 
 
行政院國家科學委員會補助專題研究計畫 
■ 成 果 報 告   
□期中進度報告 
 
 
 分散式即時性協同設計中三維模型串流技術之研究 
 
  
計畫類別：■ 個別型計畫  □ 整合型計畫 
計畫編號：  NSC 96-2628-E-007-031-MY2 
執行期間： 96 年 08 月 01 日至 98 年 07 月 31 日 
 
計畫主持人： 瞿志行   
共同主持人： 無 
計畫參與人員：謝欣達、宋牧奇、鄭漢中、蔡瑋倫、蔡雅恬、詹于萱、 
吳秉函   
 
 
成果報告類型(依經費核定清單規定繳交)：■精簡報告  □完整報告 
 
本成果報告包括以下應繳交之附件： 
□赴國外出差或研習心得報告一份 
□赴大陸地區出差或研習心得報告一份 
■出席國際學術會議心得報告及發表之論文各一份 
□國際合作研究計畫國外研究報告書一份 
 
處理方式：除產學合作研究計畫、提升產業技術及人才培育研究計畫、
列管計畫及下列情形者外，得立即公開查詢 
          □涉及專利或其他智慧財產權，□一年□二年後可公開查詢 
          
執行單位：清華大學工業工程與工程管理系所 
 
中   華   民   國  98 年 10 月 20 日 
附件一 
3 
二、報告內容 
1. 緒論 
雖然近年興貣的協同產品開發(CPD, Collaborative Product Development)在提高企業競爭
力上有顯著地有效策略，然而協同無論在規劃或實際導入皆相當複雜，針對協同產品開發模
式的研究亦指出其必需同時考量「商業模式轉變」、「作業流程調整」與「資訊技術導入」三
個不同層面議題，相互配合支援方得以確實發揮協同效能。已有文獻針對前兩項議題進行過
探討，重點在於案例分析介紹[1-5]與協同導入後的流程再造[6-9]，至於相關資訊技術卻較缺
乏具創新性的研究，多半侷限於資料庫整合[10-11]、分散式環境中 PDM 技術應用[12-14]與
CAD 技術網路化[15-17]等領域，無法確實滿足實務上的作業需求，亦造成企業導入協同時之
阻礙。因此，本研究採用跨平臺操作性(Interoperability)極高的三角網格模型為核心幾何資料
格式，整合具工程意義之設計特徵及 LOD 資訊分級概念，發展三維模型串流技術以提供協同
中 CAD 資料之漸進式網路傳輸分享機制，使資訊接收端所獲得之產品模型可由最粗略的設計
內容逐漸呈現為包含較多的詳細程度。 
文獻回顧 
串流傳輸已被證實可解決網路頻寬限制環境下傳輸龐大資料內容之議題，然而目前應用
仍侷限於多媒體內容與電腦繪圖三角網格之傳輸，於產品開發等工程上相關應用之研究較
少，因此近來學者開始探討產品模型的串流傳輸。以 B-Rep 為資料交換格式之研究由於限制
使用相同軟體系統，或要求使用者端具特殊或繁重 CAD 運算功能，因此實務應用上仍有相當
大限制；其餘嘗詴結合漸進式網格傳輸與產品開發[18-21]的研究，由於所傳輸資料屬產品模
型資料最低階之網格資料，仍無法有效整合產品設計特徵等內容較缺乏工程意義，因此對協
同設計需求之支援不足。因此協同分散式環境之三維產品串流傳輸，改善與創新的空間極大。 
有鑑於此，本研究主要目的在於結合具工程設計意義之多層次產品模型理論、網路資料
傳輸技術與最佳化問題模式，發展兼具創新性、理論依據與實用性的三維產品串流技術，以
促進分散式即時協同設計中資訊分享效率。主要研究步驟分為三階段，首先發展三維產品串
流傳輸之理論依據，包含多層次產品模型與漸進式串流傳輸演算法；接著實作雛形系統以驗
證並展現串流傳輸之設計概念；最後以協同情境模擬，依實務協同應用上的不同需求情境發
展對應解決方案。 
 
研究目的 
本研究之目標在於開發三維模型串流傳輸技術所需具備之特性。依序為開發： (1) 
Thin-Client 使用者端程式：以三角網格模型為產品幾何資訊核心，運用 Java 開發可支援即時
5 
Design
Logistics
Manufacturing
Marketing
Part supplier
ODM Supplier
Shipping staff
Customer
Quatiy Control
Product Information/ Model
Ro
le Phase in PLC
 
圖 1、協同產品開發之多層次概念 
 
三維產品漸進式串流傳輸所欲達成的視覺化效果，與產品細部設計時建立實體模型逐一
繪出設計特徵之效果相似：使資料接收端從完全沒有資料，逐步獲得各設計特徵資料並即時
呈現之，直至獲得所有設計特徵而得到完整產品模型。為達成此漸進式呈現效果，本研究使
用以 XML 為基之 XC3D 樹狀資料結構以實踐多層次產品模型(圖 2)。該結構結合了具工程意
義的設計特徵、儲存幾何面編碼(圖 2 中平行四邊型、橢圓及矩形為幾何面；標示於幾何面之
第一行數字字串為編碼)、並儲存視覺化時所需三角網格資料，因此可呈現出不同精細程度外
觀與工程屬性的三維模型。在本研究之產品模型串流方法中將使用此資料結構並搭配「特徵
開關面機制」，以實現串流傳輸過程中漸進的視覺化效果。 
串流傳輸中資訊分享作業中，接收者端是從完全沒有資料，逐次接收產品幾何資料並將
設計特徵逐一顯現，有如產品模型建模過程逐一將設計特徵以開關面機制「打開」以顯現之，
因此本研究採用多層次模型搭配設計特徵開關面機制。當再增加設計資訊分享內容（一個或
多個設計特徵）給資訊接收者時，僅需對接收者以命令告知將該設計特徵的開關面移除，接
著將該特徵的其它幾何面透過網路連線傳送之，上述兩動作便可完成分享作業，藉此漸進式
地傳出逐筆資料。接收端僅需將資料逐筆接收繪出，可避免接收端所需運算並滿足分散式系
統架構之使用者端低負荷概念。開關面機制為電腦繪圖學達成基於三角網格的設計特徵多層
次之簡單概念，圖 3 為透過開關面控制設計特徵之隱藏或顯示的流程，往右方向為顯示特徵，
而往左向則為隱藏特徵。以增加體積特徵為例，若欲使方柱特徵顯示，先將開關面移除，接
著顯示構成方柱特徵的五個幾何面即可；而若欲將其隱藏則反向操作，先將構成方柱的五個
7 
擁有產品資料之分享者為伺服端(Server)，依接收者即用戶端(Client)所提出產品資料要求
(request)與產品資訊擁有狀態(history)，查閱分享組態檔(Config)中依商業智慧對用戶端設定之
LOD 內容後，解析多層次產品模型 XML 檔，以擷取相關幾何資料。傳輸連線建立後將資料
封包逐步傳輸至用戶端，如 圖 4 所示封包依序為 packetT1，packetT2，packetT3 與 packetT4。
用戶端不需對產品資料進行任何運算，僅需先通知伺服端本身產品資訊擁有狀態，接著便等
待伺服端所傳送資料逐一視覺化呈現即可，如圖右方各時間點 T1，T2，T3 與 T4 之繪製。伺
服端集中管理產品資料並負責主要運算，用戶端僅需提出服務請求並接收產品資料，無需進
行幾何運算，如此設計具有較佳的資料分享安全性，類似主從式集中資料庫。 
ClientServer
LOD4
F5
F6
F7
F15
F14
F13
F12
LOD3
F3
F10
F4
F11
LOD2
F8
F9
F16
F17
F18
F19
LOD1
F1
F2
packetT1packetT2packetT3packetT4
LOD1
LOD2
LOD3
LOD4
T1
T3
T4
Product
Model
T2
Received Data Rendering by Time
 
圖 4、Client-Server 一對一產品資料串流傳輸示意 
 
串流運算 
有鑑於分散式協同環境下，各使用者端所使用硬體運算效能不同亦可能未部署 CAD 軟體
或幾何運算程式庫 API，使用者端之運算量及複雜度需減至最低；且分享者擁有較完整資料，
如多層次產品模型、FDG、商業決策記錄檔與接收端已擁有資訊；因此本研究將主要串流運
算安排於資訊分享者端進行。在分享者端所進行的整體串流運算流程如圖 5 所示，共分為前
9 
PHASE3 – 產生串流資料封包 
此階段主要任務為將運算結果製作成資料封包。本研究中以面為封包製作之單位，每個
封包將裝載一個幾何面、該面之各項屬性、以及繪製該面所需三角網格群。由於各幾何面的
幾何複雜度不同，繪製各面所需之三角網格數量亦不同，因此資料封包大小與所含資料量將
因其所儲存幾何面複雜度而各異。在接收端僅需逐步收集並解析資料封包，便可獲得可描述
特徵的幾何面與所屬三角網格，通常接收一個設計特徵需要多個資料封包。 
本研究說明產品串流主要運算機制。當需進行產品設計資訊分享時，分享者端便運用多
層次三維模型與 FDG、商業決策設定檔與接收端已擁有資料之紀錄等串流運算輸入資料，進
行串流運算以確認各 LOD 所需傳輸特徵與網格，接著將運算結果製作成儲存單一幾何面與所
屬網格的資料封包。 
 
3. 協同情境應用 
協同情境：某一參與者由多方支援獲得產品資料 
協同亦有從多個協同者收集資訊而獲得完整產品模型之需求，可能情況是產品擁有者因
故暫時無法參與協同，僅能靠網路中其它參與者擁有資訊來滿足參與者之產品資訊需求。因
此本情境便針對於協同人員各自擁有部分產品資訊之情況下，整體協同網路如何有效率地進
行資訊交換，使特定參與者獲得所需產品資訊。本情境能提升分散於各參與者資料的使用效
率，集中這些片段產品資料重組成完整產品模型，成為相當實用的串流支援技術。此外本情
境之實現亦可視為「多點對單點協力傳輸」的產品串流延伸功能，充分展現點對點架構產品
串流技術於之靈活運用特質。本節協同應用情境設計為「零件之產品開發專案中共有五位協
同參與者，且各參與者皆僅擁有部分產品資訊，若任一參與者對產品模型有需求時，將與其
它參與者要求產品資料片段，以獲得完整之三維產品模型。」 
 
表 1、各協同參與人員之基本資料 
編號與人員 
程式所在機器之 
IP 位址及埠號 
產品設計資料擁有程度 
[0] 需求提出者 RP 140.114.53.229:1414 部分：F1,F2,F3,F5,F8,F12 
[1] 協同參與者#01 140.114.53.229:1515 部分：F1,F3,F4,F10,F11 
[2] 協同參與者#02 140.114.53.229:1717 全無：F1,F5,F6,F7 
[3] 協同參與者#03 140.114.53.230:1818 全無：F1,F2,F8,F9,F16,F17,F18,F19 
[4] 協同參與者#04 140.114.53.230:1919 全無：F1,F5,F6,F8,F9,F10 
 
情境說明 
情境中共五位協同參與人員，執行程式的硬體效能相同，而對外連線速度受制於各機器
11 
3. 產品擁有者進行串流運算並決定各所需特徵之傳輸路徑：以最小成本展開樹找尋路徑，
然資料傳輸方向是由各節點以分枝往根節點為各參與者支援擁有資料給 RP 之傳輸路
徑。此外，由於各參與者所擁有產品資料並非互斥而可能有重複，即可能同時有多個參
與者擁有 RP 所需特徵 F，因此「自所有具此特徵 F 之參與者中，挑選對需求提出者傳輸
最快/花費時間最小者」，以效率作為主要抉擇考量。圖 6 顯示中央伺服器 CP 串流運算後，
對完整產品模型需求提出者 RP 所需特徵（以擁有特徵 F1,F2,F3,F5,F8,F12 找出），依最
小成本展開樹及各參與者所可支援特徵，所決定傳輸作業之紀錄。如第一行為 CP 告知
參與者 Peer#2 將特徵 6 與特徵 7 依展開樹分枝 Peer#2àPeer#0 分享給 RP；而最末行為
CP 告知參與者 Peer#4 將特徵 15 依路徑 Peer#4àPeer#2àPeer#0 傳輸。 
4. 產品擁有者協調資訊分享活動：由 CP 依圖 6 運算結果逐筆記錄以訊息控制資訊分享作
業，告知參與者將指定特徵依最小成本展開樹分支逆向往 RP 傳輸。CP 控制各項資訊分
享作業之進度與狀況，其控管內容包括以下兩種控制層次： 
 逐筆分享作業之間控管：依串流運算結果以指令開始逐筆傳輸作業，控制它們依順
序先後地執行。如圖 6 第二筆傳輸作業頇待第一筆完成抵達 RP 後才開始，而非同
時間內執行多筆傳輸，以避免因 Peer 間連線速度不同使後傳出資料先抵達，造成
RP 接收資料順序違背特徵相依關係。 
 單筆分享作業內控管：控管各筆分享作業中資料封包於路徑中傳輸進度，例如最後
一筆紀錄之傳輸路徑共三站為 Peer#4àPeer#2àPeer#0，CP 需隨時掌握封包傳輸進
度達哪站以及是否以抵達終點。 
 
 
圖 7、實驗組與對照組之傳輸路徑 
 
13 
 
0s 13s12s
14s 15s 21s 26s
27s 50s 62s 73s
6s
 
圖 8、實驗組之 Request Peer 於各時間接收情形 
 
 
 
15 
0s 6s 16s 74s 83s
92s 102s 111s 142s 148s
170s 186s 191s
 
圖 10、對照組之 Request Peer 於各時間接收情形
17 
決定該角色所需設計資訊內容有哪些。 
 基於各式協同需求之串流應用情境 
除本研究所示範的兩種應用 P2P 產品模型串流之協同情境，可再針對其它實務應用所需
最佳化目標，開發出更多應用產品串流技術之情境解決程式，最後可將這些不同協同解決方
案之串流資訊技術整合為程式庫，以增強串流技術之提升擴充能力，並提升未來解決其它協
同目標程式之開發效率。 
19 
Networked Collaborative Design,” to appear, Computers in Industry.  
[24] Chu, C.H., Chan, Y., and Sung, M.C., (2006) “3D CAD Streaming with Multiple Levels of 
Detail,” International Design Research Symposium, Seoul, Korea.  
[25] Chan, Y.H., Wu, P.H., and Chu, C.H. (2007) “Mesh-Based 3D CAD Streaming in 
Collaborative Design,” APIEMS 2007, Taiwan.  
[26] Chan, Y.H. and Chu, C.H. (2008), “Product Model Distribution in Networked Design 
Collaboration Based on P2P 3D Streaming,” CSCWD 2008, Xi'an, China  
[27] 瞿志行，詹于萱，吳秉函，宋牧奇，「基於產品多層次概念之三維 CAD 串流傳輸技術」 
中華民國，美國專利(2007)。(申請中，已通過清大技轉中心審查 J8P96013)  
[28] 詹于萱，「分散式協同設計之三維產品模型串流技術」，碩士論文，國立清華大學工業
工程與工程管理學系，2007。 
 
21 
 
可供推廣之研發成果資料表 
 可申請專利   可技術移轉                                     日期：98 年 10 月 20 日 
國科會補助計畫 
計畫名稱：分散式即時性協同設計中三維模型串流技術之研究 
計畫主持人：瞿志行 
計畫編號：NSC 96-2628-E-007-031-MY2 學門領域： 
技術/創作名稱 基於產品多層次概念之三維 CAD 串流傳輸技術 
發明人/創作人 瞿志行、吳秉函、詹于萱、宋牧奇 
技術說明 
本項技術之創新重點在於考量工程資訊分享之安全性、透明
度與實用性，將三維產品模型透過網路，即時並正確地提供給產
品生命週期中不同之參與人員。具體作法是以產品模型之多層次
概念為基礎，將根據設計特徵為單元所產生之三角網格，經由串
流技術之輔助進行漸進式網路傳輸。不同於以往之網格串流技
術，本項研究所採用之多層次模型是以設計特徵為基本單元，藉
由控制其顯示與否來呈現不同內容之三維產品模型。換言之，根
據建模過程將三維模型轉換成以設計特徵為單元之網格表示，並
利用特殊資料結構「網格分解樹」記錄之，設計特徵之間的相依
關係則記載於「特徵相依圖」，如此一來即可透過特徵開關面之
機制，來呈現包含不同設計特徵層次之產品模型。待上述多層次
資料建立之後，使用者即可指定傳輸過程中，於不同階段欲顯示
之產品外觀，明確定義漸進式傳輸的進行方式。據此伺服器端將
自動整理出所需之串流資料封包，透過網路可傳送給多個用戶
端。而用戶端程式藉由多執行緒之輔助，將已接收之資料封包快
速還原並即時顯示，並確保傳輸作業仍同時繼續運作。為了克服
由於頻寬不足無法分享大型設計圖檔的問題，以及減少傳輸失敗
所造成之網路資源浪費，本技術也支援自動斷點續傳之功能。經
由原型系統開發結果得知，此項將設計內容納入串流機制之技
術，能夠滿足三維產品資訊分享與內容保密上之實際需求，於創
新性與實用價值上均足以申請專利，並可做為未來工程協同軟體
之核心技術。 
關鍵字：三維產品模型、多層次概念、網格串流技術、協同軟體 
The innovation of this technology is focused on transfer of 
3D product models over the network that satisfies the security, 
efficiency, and practicality concerns in sharing of engineering 
information. It facilitates dissemination of product information 
among the stakeholders in different phases of a product life 
cycle. Our approach is based on the concept of multiple levels of 
detail (LODs) in 3D product model. A CAD model is 
decomposed into a set of triangular meshes grouped by its design 
features, which is then incrementally transmitted by streaming 
techniques. Different from previous studies, this technology 
附件二 
23 
技術特點 
本項技術主要貢獻在於結合工程設計意義、多層次產品模型
理論、先進網路資訊技術與協同應用情境分析，提出兼具創新
性、理論依據與實用性的 CAD 串流技術，以促進分散式即時性
協同設計中資訊分享的效率。考量協同參與者的使用限制與需
求，克服以往由於網路頻寬不足無法進行大型 CAD 圖檔交換的
問題，並改善漸進式網格傳輸(Progressive Meshing)缺乏工程意義
的限制。 
推廣及運用的價值 
研究結果將可提升分散式產品開發軟體資訊技術之效能，提升
協同作業導入的成功率，並促進中小企業設計鏈的資源整合。亦可
與網路化 CAD 作業環境結合，成為協同設計的資訊溝通機制。 
※ 1.每項研發成果請填寫一式二份，一份隨成果報告送繳本會，一份送 貴單位研
發成果推廣單位（如技術移轉中心）。 
※ 2.本項研發成果若尚未申請專利，請勿揭露可申請專利之主要內容。 
※ 3.本表若不敷使用，請自行影印使用。 
 
 
Author's personal copy
industry. However, fewer studies have addressed the issues of CAD
data transfer, especially large ﬁles transfer across the networks
with limited bandwidth, which is a problem yet to be solved in the
practice. The majority of the collaborative CAD systems adopt
simple FTP (File Transport Protocol) functions with some secured
features for data exchange (e.g. encryption, password protection,
ﬁrewalls, . . ., etc.). Some vendors claim that their systems employs
3D streaming for distribution of CAD models, but they just borrow
the streaming method originally developed in computer graphics,
which gradually transmits triangular meshes from a simpliﬁed
level to a complex level [15], or the so-called progressive meshing
[16]. Mesh-based 3D streaming requires less computing load on
the client side, but its shortcomings include (1) the exact shape
cannot be described and (2) the sequence of data streaming is not
controlled by design content. It can only allow incremental display
of 3D shape as a monolithic object, as the streaming method is
based on two algorithms: mesh simpliﬁcation and mesh reﬁne-
ment [17–19]. Li et al. proposed a 3D model simpliﬁcation and
reﬁnement algorithm which can be used in 3D streaming [19]. It
demonstrates a good performance in reducing themodel sizewhile
maintaining good visualization quality.
To overcome these deﬁciencies, a second category of CAD
streaming adopts feature representation of B-Rep in data transfer
[20,21]. However, the client side needs to conduct the Boolean
operations formodel reconstruction. This requires implementation
of advanced CAD functions and may not be supported by most
collaborative design tools with thin-client architecture [22] or
based on visualization [23]. This paper proposes a novel method of
3D CAD streaming that preserves the advantages offered by the
both approaches, with a focus on facilitating dissemination of 3D
design information in networked collaborative design. Our idea is
based on the concept of multiple levels of detail (LODs) in product
information [24]. CAD model is segmented into different groups of
triangularmeshes by design feature. A large ﬁle can be thus divided
into small fragments and transmitted incrementally, lowering the
requirement of the network bandwidth. A client program receives
the model data progressively from a coarse representation to a
ﬁnal (ﬁnest) one speciﬁed by a sequence of user-deﬁned LODs.
Receipt of one LOD data increment on the client side updates the
model visualization at the same time. Compared to the streaming
techniques based on B-Rep, our method avoids the complex
procedure of model reconstruction and implementation of the
resultant geometric operations on the client. It also retains the
feature information in the data streaming that the traditional
progressive meshing method cannot offer. Such an ‘‘incremental
visualization of design content’’ novelty improves the efﬁciency,
effectiveness, as well as security in transmission of large CAD
models over the networks. It facilitates distribution of 3D product
information in the Internet-based collaborative design and other
collaboration activities in a product life cycle.
2. LOD models for 3D streaming
2.1. Multi-LODs of 3D product model
Recent studies [25,26] claimed that the requirements of
different stakeholders in a product life cycle should be used to
deﬁne conﬁgurable product view. This idea can be applied to
collaborative product development, in which not only are
designers geographically dispersed involved, but other stake-
holders like customer, suppliers, and technology providers also
participate the development process at different phases. The
empirical study [1] argued that different collaborators need to
access product models with different levels of design information,
depending on individual roles and the time they engage in the
process. Such a mechanism may offer an effective means for
protecting individual know-how in product information sharing.
Sensitive design information can be hidden from certain colla-
borators who ought not to see it. In addition, the size of data
transfer over the networks is reduced when CAD model is
simpliﬁed by eliminating unnecessary data or the data to be
protected. Fig. 1 shows a schematic for such a concept ofmulti-LOD
in product information. At the design stage, an ODMmanufacturer
owns the complete product model while the part supplier is only
allowed to see some design features of themodel. Another possible
scenario is that shipping staff simply need to know about the rough
shape of the part with key external features. The product model
should be tailored accordingly.
Fig. 1. Multiple LODs in 3D product information.
C.-H. Chu et al. / Computers in Industry 59 (2008) 863–872864
Author's personal copy
each time. The resolution of the received model becomes ﬁner in
the course of time.
Alternatively, such a 3D streaming problem can be described
from an abstraction viewpoint as shown in Fig. 5. The enabling
mechanism is equivalent to accomplishing the mappings between
the three domains in the ﬁgure. The ﬁrst domain contains a set of
design features f = {f1, f2, . . ., fn} of the CADmodel to be transmitted.
The second domain consists of a set of LODs G = {G1, G2, . . ., Gn}
deﬁned by the sender, which correspond to different variants of the
model. To determine themappingM1 : f 7!G is a complex process
involving both engineering and business concerns. In a collabora-
tive design session, the project manager, or the one in charge of the
collaboration, will decide who should see what product informa-
tion according to the business relationship among the collabora-
tors. The data domain C = {c1, c2, . . ., cp} characterizes the data
packets to be transferred through the network connection where
each packet is limited to certain physical chunk size. The chunk
size determines to a large degree the disconnection frequency
caused by network congestion. It also controls the subsequent re-
connections, the amount of data loss, and the inefﬁciency
associated with these pitfalls. Ideally a streaming method needs
to take this into account and properly maps the LOD domain to the
data domain in M2 : G 7!C. The output is the data packets that
have been well designed.
3. Implementation of 3D CAD streaming
The concept of multi-LOD models provides an information
categorization mechanism for generation of incremental stream-
ing data. To realize a streaming technology in network environ-
ment based on this concept requires proper IT framework design.
We develop a prototyping platform for demonstrating a proprie-
tary system framework that implements the proposed streaming
method. The framework design follows a thin-client thick-server
model, which gives better scalability, usability, and maintain-
ability in the Internet-based software systems [18]. Most
computation involved in preparation for the streaming data and
the process will be performed on the server side. As a result, it is
not necessary to implement complicated CAD functions in the
Fig. 4. Schematic of 3D CAD streaming.
Fig. 5. Abstraction of 3D streaming based on the multi-LOD concept.
C.-H. Chu et al. / Computers in Industry 59 (2008) 863–872866
Author's personal copy
- Retrieve streaming history: The server retrieves the streaming
history of the client program that is making the transmission
request. It then combines the status of the LOD model that has
resided on the client side with the requested model at certain
LOD. The purpose is to avoid duplication in the data
transmission. Only the difference between the current and
requested LODs will be sent out over the network.
 Computation for Streaming: This module provides the intelli-
gences required for creation of streaming data. First, it checks
against Streaming Conﬁg of the client and thus gives permis-
sion to the current request, i.e. whether the client has access to
the model at the LODs it is asking for. Next, it calculates the
feature data that converts the model currently residing on the
client to the LOD model by request. Finally, the meshes
corresponding to these features and the switch faces are
extracted from the tree representation constructed by the
previous module. The output is the unprocessed geometric
data to be transmitted.
 Generation of data packet: Generally speaking, complex data
structures have to be converted into basic data types like string in
the transmission via the standard network protocol (e.g. TCP/IP).
Therefore, the raw streaming data need to be properly processed
and encoded into a series of strings. One important task of the
processing is to maintain the inherent hierarchy in the one-
dimensional data format. This is accomplished by appending
proper preﬁx in front of each data segment.
Fig. 8. Interactions between client and server over the course of the streaming process.
C.-H. Chu et al. / Computers in Industry 59 (2008) 863–872868
Author's personal copy
SwingTM and the graphics functions employs Java 3DTM package.
Connection Manager plays a similar role as that in the server
program. It also restores the received data stream to its
uncompressed form, re-groups the mesh data by feature/LOD,
and ﬁnally passes it to the graphic module for rendering. The
program will refresh the visualization of the model every time
when the Connection Manager receives the complete data of one
LOD.
3.2.3. Interactions between client and server
Fig. 8 shows the interactions and message exchanges between
the client and server programs over the network via TCP/TP
connection. A streaming process consists of ﬁve different phases in
the course of time. In the Initialize Phase, both client and server will
log in the network and start listening to each other via pre-deﬁned
port numbers. Certainly it is necessary to go through security check
like username/password during the login process. After the server
has veriﬁed the client identity and its accessibility, they can start to
establish preliminary handshaking connections by exchanging
Hello Msg, Responding Msg, and ConnectionOK Msg. Once the client
is informed of ConnectionOK, it is ready to request LODmodels and
begins the streaming process.
Some pre-processing steps have to be ﬁnished before the
streaming process. First, the server needs to know about the
streaming history of the requesting client via sending History
Inquiry. It then loads Streaming Conﬁg to decide whether the client
has the proper accessibility to the data it is asking for. The
corresponding LOD model is uploaded for preparation of the
streaming data if access is granted to the client. The phase of
Compute for Streaming has been discussed in detail in Section 3.1
and thus is not repeated here.
Assume the streaming process of the requested model
consists of n stages, or n LODs, i.e. the client will incrementally
receive the data through the same number of visualization
updates. Each time the server will send out the data packets
required to covert from a previous LOD to the next. An
acknowledgment message, Receipt ACK, will be sent back from
the client once the data has arrived intact. Any data loss denoted
by not receiving Receipt ACK will trigger a data re-transmission
mechanism. The streaming process is accomplished when the n-
LOD data packets have reached the client side. Finally, a
Streaming Finished message sent to the client closes the whole
process and updates its streaming history.
4. Demonstration of 3D streaming in collaborative design
This section demonstrates a scenario of sharing 3D product
information in collaborative design using the proposed streaming
Fig. 10. LOD models to be transmitted to individual collaborators.
C.-H. Chu et al. / Computers in Industry 59 (2008) 863–872870
Author's personal copy
receives a requested 3D model from a lower LOD to a higher one.
Each data transmission only consists of the mesh difference
between two LOD models. The sender controls the progress of a
streaming process by specifying a series of LODs. A prototyping
system with a thin-client structure was developed using JavaTM
technologies to implement such an idea of ‘‘incremental visualiza-
tion of design content’’. A scenario of sharing 3D product
information among multiple participants in synchronous colla-
borative design illustrates the effectiveness of the proposed
method. As shown in the scenario, this work provides a useful
mechanism that enhances the efﬁciency, effectiveness, and
security of 3D model distribution over the networks in a product
life cycle.
This paper is focused on development of the streaming method
with its prototype implementation based on a client–server
structure. The method can be extended to P2P architecture for
better practicality and exploitation of data streaming. In addition,
multi-agent technologies provide sophisticated functions like
automatic negotiation, communication, and learning, and together
with 3D CAD streaming they would provide a better solution in
networked collaborative design.
Acknowledgments
This work was supported by the National Science Council of
Taiwan under grant number NSC 96-2628-E-007-031-MY2. The
authorswould also like to thankMr.Mu-Chi Sung at National Chiao
Tung University for his assistance in CAA V5TM C++ implementa-
tion.
References
[1] C.H. Chu, C.J. Chang, H.C. Cheng, Empirical studies on inter-organizational colla-
borative product development in Asia Paciﬁc region, ASME Journal of Computing
& Information Science in Engineering 6 (6) (2006) 179–187.
[2] W.D. Li, W.F. Lu, J.Y.H. Fuh, Y.S. Wong, Collaborative computer-aided design:
research and development status, Computer-Aided Design and Applications 37
(9) (2004) 931–940.
[3] X.D. Liu, CFACA: component framework for feature-based design and process
planning, Computer-Aided Design 32 (7) (2000) 397–408.
[4] K.M. Chao, P. Norman, R. Anane, A. James, An agent-based approach to engineering
design, Computers in Industry 48 (1) (2002) 17–27.
[5] J. Zhang, F.T.S. Chan, P. Li, Agent- and CORBA-based application integration
platform for an agile manufacturing environment, International Journal of
Advanced Manufacturing Technology 21 (6) (2003) 460–468.
[6] U. Roy, S.S. Kodkani, Collaborative product conceptualization tool using web
technology, Computer in Industry 41 (2) (2000) 195–209.
[7] F.E.H. Tay, A. Roy, CyberCAD: a collaborative approach in 3D-CAD technology in a
multimedia-supported environment, Computers in Industry 52 (2) (2003) 127–
145.
[8] W.D. Li, J.Y.H. Fuh, Y.S. Wong, An Internet-enabled integrated system for co-
design and concurrent engineering, Computers in Industry 55 (1) (2004) 87–103.
[9] S. Han, Y. Choi, S. Yoo, N. Park, Collaborative engineering design based on an
intelligent STEP database, Concurrent Engineering: Research and Applications 10
(3) (2002) 239–250.
[10] Q. Sun, K. Gramoll, Internet-based distributed collaborative engineering analysis,
Concurrent Engineering: Research and Applications 10 (4) (2002) 341–348.
[11] W.M. Shen, F. Maturana, D.H. Norrie, MetaMorph II: an agent-based architecture
for distributed intelligent design and manufacturing, Journal of Intelligent Man-
ufacturing 11 (2000) 237–251.
[12] J. Sun, Y.F. Zhang, A.Y.C. Nee, A distributed multi-agent environment for product
design and manufacturing planning, International Journal Production Research
39 (4) (2001) 625–645.
[13] F. Giannini, M. Monti, D. Biondi, F. Bonfatti, P.D. Monari, A modelling tool for the
management of product data in a co-design environment, Computer-Aided
Design and Applications 34 (12) (2002) 1063–1073.
[14] D. Tang, An agent-based collaborative design system to facilitate active die-maker
involvement in stamping part design, Computers in Industry 54 (2004) 253–271.
[15] M. Eck, T. DeRose, T. Duchamp, H. Hoppe, M. Lounsbery, W. Stutzle, Multi-
resolution analysis of arbitrary meshes, ACM SIGGRAPH (1995) 173–182.
[16] H. Hoppe, Efﬁcient implementation of progressivemeshes, Computers &Graphics
22 (1) (1998) 27–36.
[17] M. Garland, P. Heckbert, Surface simpliﬁcation using quadric error metrics, ACM
SIGGRAPH (1997) 209–216.
[18] J. Rossignac, Edgebreaker: connectivity compression for triangle meshes, IEEE
Transactions on Visual Computer Graph 5 (1) (1995) 41–61.
[19] W.D. Li, Y.L. Cai, W.F. Lu, A 3D simpliﬁcation algorithm for distributed visualiza-
tion, Computers in Industry 58 (3) (2007) 211–226.
[20] S. Koo, K. Lee,Wrap-around operation tomakemulti-resolutionmodel of part and
assembly, Computers & Graphics 26 (2002) 687–700.
[21] Y. Song, K. Lee, Incremental transmission of B-rep models through the network,
Computer-Aided Design and Applications 1 (1–4) (2004) 523–530.
[22] C.C.L. Wang, M.M.F. Yuen, Y. Wang, THIN vs. FAT clients of web-based CAD tools,
in: ASME Design Technical Conference, 2000 (Paper No. DET2000/CIE-14638).
[23] C.H. Chu, C.Y. Cheng, C.W. Wu, Applications of the Web-based collaborative
visualization in distributed product development, Computers in Industry 57
(3) (2006) 272–282.
[24] C.H. Chu, P.H. Wu, Y.C. Hsu, Collaborative 3D product development with multiple
levels of detail in visualization of design features, Computer-Aided Design and
Applications 3 (6) (2006) 789–802.
[25] F. Fuxin, S. Edlund, Categorization of geometry users, Concurrent Engineering:
Research and Application 9 (1) (2001) 15–22.
[26] F. Fuxin, Conﬁgurable product views based on geometry user requirements,
Computer-Aided Design and Applications 1 (2004) 377–386.
[27] C.H. Chu, P.H. Wu, Y.C. Hsu, M.C. Sung, Multi-agent collaborative 3D design with
multiple levels of detail, Robotics & CIM (2008).
Chih-Hsing Chu attended National Taiwan University
and received his BS and MS from Department of
Mechanical Engineering. He received his PhD in
mechanical engineering at the Laboratory for Manu-
facturing Automation, University of California at
Berkeley, USA. His past work experiences include a
web applications engineer at RedSpark, an AutodeskTM
Venture, USA, a research intern at DaimlerBenzTM AG,
Germany, and a visiting researcher at the Laboratory for
Machine Tools and Production Engineering (WZL),
RWTH Aachen, Germany. Prior to joining National
Tsing Hua University in 2002, he was on the faculty of
Industrial and Systems Engineering Department, Virginia Tech, USA. He was an
invited scholar at CREDITS Center, Sungkunkwan University, Korea, during the
summer of 2005. Dr. Chu has publishedmore than 100 research papers. He is on the
editorial board of IEEE Transactions on Automation Science and Engineering (IEEE-
TASE), Journal of the Chinese Institute of Industrial Engineers (JCIIE), and International
Journal of Electronic Business Management (IJEBM). His research interests include
collaborative design, product development, design chain management, and CAD/
CAM/PLM.
Yu-Hsuan Chan received her BS and MS degrees from
Department of Industrial Engineering and Engineering
Management at National Tsing Hua University. Cur-
rently she is working for Product Realization Lab at
National Tsing Hua University as a research assistant.
Her research interests are in collaborative product
development, collaboration IT techniques, CAD, intel-
ligent agents, and optimizations.
Ping-Han Wu received his BS and MS from the
Department of Industrial Engineering and Engineering
Management at National Tsing Hua University in
Taiwan. Since 2007, he has been a research assistant
at Product Realization Laboratory of National Tsing Hua
University. His research interests include collaborative
product development, ﬁve-axis ﬂank milling, and
applications of optimization algorithms.
C.-H. Chu et al. / Computers in Industry 59 (2008) 863–872872
the use of the geometric model from a design-centric task.
Therefore, product information should be properly cate-
gorized according to geometry users and their speciﬁc
needs. Following this idea, framework for access control in
computer-aided design environments (FAC- ADE) was
developed for information assurance (IA) within colla-
borative design based on role-based viewing [9,10]. The
implementation result demonstrates the effectiveness of
this system for protecting engineering information in
collaborative design with multiple participants while
ensuring the availability, integrity, authentication, and
access control of shared data. This work adopts traditional
mesh reﬁnement in LOD control of geometric model. The
similar idea has been extended to data retrieval in
distributed product development [11].
Distributed design is a complex engineering activity that
requires effective communication among interdisciplinary
teams. Differences in system architectures and information
representations become a main barrier to this. The
proactiveness and autonomy provided by agents may
alleviate some of the problems [12]. Multi-agent system
(MAS) offers a solution containing non-centralized,
mutually cooperating elements suited to the distributed
design and manufacturing environment [13]. Ant colony
coordination mechanisms were implemented using the
multi-agent technologies for handling dynamic changes
and disturbances. Distributed intelligent design environ-
ment (DIDE) was proposed as a distributed software
architecture for integrating multidisciplinary engineering
tools in an open environment, realized through a set of
asynchronous cognitive agents [14]. An agent-based
cooperative intelligent design environment (CLOVER)
was implemented to improve the interoperability among
distributed and heterogeneous resources [15]. The objective
of this research is to establish an agent-based infrastructure
using widely accepted standards including ISO standards
and standard propositions. Agent technologies also have
been utilized in various engineering applications such as the
AEC sector [16], mechanical design [17–19], and process
planning [20,21].
Multiple-resolution techniques have been identiﬁed as an
effective approach to achieving good performance in terms
of shape preservation and data transfer. Most mesh-based
methods were focused on graphics rendering with less
emphasis on design intents. On the other hand, several
studies concern with compression and de-compression of
B-Rep model in distributed environment. Song and Lee
[22] proposed a wrap-around operation for producing
multi-resolution representations from a B-Rep model,
which can be simpliﬁed according to the resolution level.
A software framework was developed for streaming the B-
Rep model through the network. This streaming technique
requires rendering environment implementing the warp-
around procedure and other specialized CAD functions.
Lee [23] proposed a technique for the generation of multi-
resolution solid models in terms of features. The focus of
this work is to overcome the modeling problem that the
sequence of constructing a B-Rep model by Boolean
operations cannot be arbitrarily changed. It offered
geometric algorithms for the creation of the same model
with different construction sequences, or to be more
speciﬁc, for preserving the same model by adding extra
modiﬁcation operations.
The previous LOD methods derived from mesh reﬁne-
ment treat CAD model as monolithic in their geometry
categorization. As a result, they fail to control display/hide
of design information in an explicit manner. Separation of
part geometry has to be executed based on design
semantics so that the result can meet practical needs in
collaborative design. To overcome this problem, we
develop a representation scheme that provides geometric
model at different LODs in terms of design feature. This is
achieved by integration of feature-based model and 2D
mesh data. The display of a design feature is controlled by
its switch face(s). This work also implements a prototyping
system based on the scheme using multi-agent technologies.
This system allows a group of users geographically
dispersed to perform synchronous collaborative 3D assem-
bly over the Internet via autonomous agents. The user
leading the collaboration process can hide certain design
features from some collaborators and grant them only
accessibility to the corresponding models. An XML/XSLT-
based approach is proposed to generate the LOD
geometric models in distributed environment. A software
framework characterizes the function design of each agent,
interactions among agents, the client–server structure
adopted by the system, and other implementation issues.
A scenario of synchronous 3D mold assembly with
multiple users demonstrates the effectives of the proposed
LOD concept. It also veriﬁes the practicality of multi-agent
technologies for automating complex engineering activities.
2. Levels of detail (LOD) in a geometric model
The recent study argues that users’ requirements should
be used to specify conﬁgurable product view [7]. Different
types of product illustrations are presented depending on
individual roles in the organization. This idea is not only
limited to the design stage, but it is also applicable to the
entire product life cycle. The content of product informa-
tion needs to be properly tailored to account for different
people, time, and tasks. Categorization of geometric model
becomes even more important in CPD, in which not only
the designers geographically dispersed are involved, but
other stakeholders such as customer, suppliers, and
strategic partners also participate in the collaboration
process. Different participants have to access product
information at various levels in terms of design semantics.
Individual know-how can be well protected in this manner.
For instance, a product owner certainly does not want to
disclose the complete product model when conducting
design review with a supplier only responsible for the
development of a single part of the product. The supplier
should be permitted only to the part being outsourced and
ARTICLE IN PRESS
C.-H. Chu et al. / Robotics and Computer-Integrated Manufacturing 25 (2009) 334–347 335
purpose [26], brieﬂy reviewed as follows. Lm represents all
the faces of a B-Rep model at the construction step m. Vn
represents a set of faces that composes the feature volume
corresponding to the nth feature. Fn,b stands for the bth
face of Vn. F(pq,rs) indicates the Boolean difference between
two face sets Fp,q and Fr,s. Lm,n is the collection of the
(partial) overlapping face pairs in Lm and Vn. Moreover, 
and Y indicate Boolean intersection and difference
operators, respectively. The switch face(s) is expressed as
m,n with the above notations. The other faces required for
the display of the model Lm with Vn hidden are expressed
as [(Lm[Vn)Lm, n][Ym, n.
A tree-like data structure is proposed along with a
special coding scheme for representing the hierarchical
relationships between features, the modeling step, the
composing faces, and the switch face(s) of each feature.
Each node in the tree structure corresponds to a 2D planar
face (or portion of a face). Different node types are
characterized with a code, referred to as FaceID, which
consists of three single digits. The ﬁrst two digits are only
for explanation purpose. They specify the node level in the
tree and the index at a given level, respectively. Note that
the level zero starts from the top. The third digit
characterizes the property of the mesh data contained in
the node, as shown in Table 1. A transient face denotes a
composing face existing at some previous step, but not in
the current model.
Suppose the ﬁrst modeling step constructs a simple
block as shown in Fig. 3, which contains six faces with
FaceID 001, 011, 021, 031, 041, and 051, respectively.
After a step feature V1 has been created, the nodes 011,
021, and 031 are decomposed into two child nodes
with their IDs as 013, 023, and 033, respectively, as shown
in Fig. 4. In addition, the faces changed by the feature
creation are updated with the addition of three new
nodes (101, 111, and 121) along with the corresponding
switch faces (104, 114, and 124). The remaining nodes
(132, 142, and 152) represent the faces that compose
the effective volume of V1. Displaying the step feature
requires the mesh data represented in the nodes 001, 041,
051 (unchanged faces), 101, 111, 121 (portions of the
faces changed by the step creation), and 132, 142, 152
(the faces composing the feature volume). In contrast, to
hide the step we have to replace 132, 142, 152 with 104,
114, 124. The creation of a design feature changes the
hierarchy of the tree and possibly the FaceIDs as well as
the type of some nodes. New nodes may be created and
their connection to the other nodes have to be determined.
Only the leaf and oval nodes in the data structure
correspond to the actual faces making up the 3D model.
The root and diamond-shape nodes simply connect the
other nodes and maintain the hierarchy after each feature
creation.
The data structure described above serves as a kernel for
the generation of geometric models at different LODs. The
creation of each form feature changes the entire hierarch-
ical structure and possibly the FaceIDs as well as the type
of some related nodes. New nodes may be created and their
relations to the existing nodes need be updated instantly.
The following algorithm describes a systematic approach
for updating the LOD tree.
ARTICLE IN PRESS
pocket feature opening to be filled
remove 
composing faces 
add the feature 
switch face 
protrusion feature 
add the feature 
switch face 
remove 
composing faces 
pocket is hidden
opening to be filled pocket is hidden
Fig. 2. Procedure of hiding features.
Table 1
Implications of the third digit in FaceID
Value Deﬁnition
1 Face composing an additive feature
2 Face composing a subtractive feature
3 A transient face
4 A switch face of an additive feature
5 A switch face of a subtractive feature
C.-H. Chu et al. / Robotics and Computer-Integrated Manufacturing 25 (2009) 334–347 337
The multi-LOD technique divides a complete mesh-
based model into smaller data fractions with explicit
design implication. Correct combination of these ‘‘design
fractions’’ produces simpliﬁed variants of a 3D CAD
model. Thus design information can be protected, both
semantically and visually, by means of integration of
feature-based model and 2D mesh. This approach
also contributes to 3D CAD streaming, which is crucial
in real-time data transmission and visualization. The user
ﬁrst receives data fractions corresponding to a simpliﬁed
3D model without detailed features. Some or all of the
features (their mesh data to be speciﬁc) can be transmitted
later in the correct sequence, depending on the actual
needs or network bandwidth. Such a progressive trans-
mission with incremental reﬁnement in design means that
it has a good potential in many engineering applicat-
ions such as collaborative design, virtual reality, and
e-commerce.
2.3. XML-XSLT approach
The data representation described in the previous section
characterizes the LOD information in a product model
during its construction process. This section presents an
XML/XSLT-based approach for the generation of all the
available LOD models. The reason for adopting this
approach is to follow the philosophy of separating data
from presentation. There exists only one set of product
data represented in an XML document object model
(DOM) object. The display/hide of the design features at a
LOD is explicitly speciﬁed in an XSLT style sheet. The
geometric model at the LOD is obtained from parsing the
XML object with the corresponding XSLT. In other
words, the LOD information is extracted from the
complete model by ﬁltering out hidden features expressed
in the XSLT. This design pattern, shown in Fig. 5, provides
an elegant way for rendering different LOD models. In
addition, the information about ‘‘who should see what’’
can be separately captured as business intelligence in text-
based XSLT. Changing the geometric model at a LOD is
achieved by simply replacing the old XSLT with a new one.
Such a change frequently occurs in CPD, in which the
accessibility of a participant to product information may
evolve as the process proceeds. In addition, implementa-
tion of distributed software such as web-based collabora-
tion platform becomes simpliﬁed due to the ﬂexibility
offered by this design.
Fig. 6 shows the structure of the XML object proposed
by this work. It characterizes the design features, the
hierarchy among the features in terms of their construction
sequence, the mesh data, and the parameters denoting
each feature. The LOD models are stored under the
branch LODs_Geometry:ID is equivalent to the FaceID
speciﬁed in Table 1; the numerations of Dependency Type is
listed in Table 2. Although this paper is focused on
visualization with multiple LODs, the similar idea is
applicable to engineering attributes or other textual
information by adding necessary parameters into the
structure.
3. Multi-agent collaborative design system
A software agent is a piece of program that must possess
any two of the three behaviors: autonomy, cooperation,
and learning [27]. Autonomy refers to the fact that an agent
can operate on its own without human interventions.
Cooperation indicates a social ability of an agent to interact
with other agents or human via some communication
ARTICLE IN PRESS
XSLT parser
XSLT A 
XSLT parser
XML-DOM 
LOD for User A 
Model Rendered for User A 
Model Rendered for User B 
XSLT B 
LOD for User B 
Fig. 5. Generation of a product model at different LODs with XML/XSLT.
C.-H. Chu et al. / Robotics and Computer-Integrated Manufacturing 25 (2009) 334–347 339
 Agent management system (AMS): it is a registry
directory that assigns each registered agent a unique
and valid identiﬁer (AID, Agent Identiﬁer) so that it can
be correctly located and invoked.
 Directory facilitator (DF): it is a registry directory that
provides yellow-book services. Every agent registers its
services against DF so that other agents can query these
services through DF.
 Message transport system (MTS): it coordinates com-
munication among agents within the same AP or across
platforms.
3.2. MAS architecture
This MAS adopts a client–server software architecture
shown in Fig. 8. Such an architecture design simpliﬁes
information management during the collaboration
involving multiple users. Every authorized user has to
ﬁnish a logging process offered by the server before
collaboration starts. Collaboration is carried out within a
group of pre-deﬁned users. The server and each
client, respectively, correspond to an agent platform
(container) that contains a group of different agents.
Information exchange between agents follows a common
message standard—agent communication language (ACL)
[29] in the current speciﬁcation of FIPA99. The agents on
the server side include:
 Main Server Agent: the server consists of three software
modules: client management, PDM, and LODs manage-
ment. Main Server Agent is responsible for creating
three child agents that perform these tasks in the
beginning of collaboration.
 Client Management Agent: it collects username, pass-
word, authority, collaboration role, and accessibility of
LODs for each collaborator; then it conducts security
check against the backend database.
 PDM Agent: it receives product models from the
collaborators who own them; then it checks the model
validity at its receipt. Finally, it distributes the received
models among the users involved.
 LODs Management Agent: this agent is responsible for
the generation of the geometric model with respect to
the LOD requested by and assessable to some user. This
is accomplished by rendering the XML data with the
corresponding XSLT, as explained later.
On the other hand, a client contains the following agents:
 Main Client Agent: this agent provides GUIs for the end
user to interact with the system. Besides, it is responsible
for creating child agents that, respectively, perform the
tasks such as negotiation of design parameters, data
upload, and data download.
 Design Agent: this agent is in charge of design
negotiation, whose tasks include selection of negotiation
strategy, execution of negotiation rules, and commu-
nication with other agents involved during negotiation.
 Information Provider Agent: it uploads the product
model to the server when the user it represents decides to
share the information with others.
 Data management Agent: this agent communicates with
LODs Management Agent on the server and establishes
a connection for receiving product model in XML over
the Internet.
 User Status Agent: it indicates the status of a human
user during the collaboration process and creates a
Domain Agent based on the design knowledge owned by
the user.
 Domain Agent: this agent offers design knowledge and
negotiation intelligence of a client during the collabora-
tion process. It is also responsible for ensuring fulﬁll-
ment of the design constraints imposed by the client.
ARTICLE IN PRESS
Fig. 8. Software architecture of multi-agent collaborative design system.
C.-H. Chu et al. / Robotics and Computer-Integrated Manufacturing 25 (2009) 334–347 341
participants and their individual roles during collabora-
tion. Fig. 10 shows the assembly structure and the owner
for each sub-assembly.
4.2. Collaborative 3D assembly
The collaboration process is focused on the design
review of the mold system. The leading company C1 has
acquired the CAD model of all the parts prior to the
collaboration process and uploaded them to the server. In
addition, it needs to specify available LODs and their
accessibility to other participants. The server then gen-
erates an XML ﬁle that can provide all possible LOD
models. The next step is to send corresponding XSLT
sheets over to each Client Management Agent. After the
logging authorization, each client agent contacts LODs
Management Agent and downloads the model assigned by
C1. Synchronous collaborative assembly is ready to
perform once every one has obtained the data correspond-
ing to correct LOD.
The product owner (C1 in this case) is the only one
who can lead assembly process. The participator of C1
selects the parts to be assembled and determines the
assembly methods among them via GUIs provided
by the client program. Main Client Agent thus receives
the assembly commands and then dispatches the corre-
sponding tasks to Design Agent. This agent program
will invoke a non-agent utility on the client side to
perform the actual assembly operation by a series
of 3D transformations. In addition, it will relay the
assembly commands to the Design Agents of other
collaborators so that their product models can be
updated and synchronized after the assembly. Fig. 11
illustrates the interactions among the agents involved in the
process.
This system currently allows two different functions for
the users: view and assembly. A collaborator normally is
allowed to visualize the part(s) it owns and some other
parts interfacing with them, but the latter may not
contain all the details. For instance, D2 owns only the
connector, so it should not access to the mold body or base.
Similarly, the base manufacturer S1 is limited to the
product data related to ﬁxturing of the base. It is not
necessary for the company to know any detail about the
part being molded. That is, the cavity of the mold body
ought to be hidden from S1. In addition, C1 may grant S2
the permission to view some standard parts that concern
the piston design, but may be not including the mold base.
Fig. 12 illustrates the overall assembly process during
collaboration. There are two major activities in this
scenario: the assembly of the piston/base and the assembly
of the piston/connector. The vertical and horizontal axes
indicate the different phases during the collaboration and
individual roles, respectively. Figs. 13–15 show the screen
shots for the product owner, ﬁrst-tier supplier, second-tier
supplier, and ﬁxture supplier at different stages during
the process.
5. Conclusion and future work
This research has developed a MAS that realizes the
concept of LODs for collaborative 3D design. Product
model is categorized into multiple levels by hiding different
design features. Participants are allowed to visualize the
geometric models at different LODs, depending on the
individual roles and their actual needs in the collaboration
process. A software framework is proposed for implement-
ing an Internet-based synchronous 3D assembly system
using the multi-agent technologies. The focus is on the
issues of function design of each agent, interactions among
different agents, the client–server IT structure, and render-
ing of LODs via an XML/XSLT approach. This approach
enables the separation of data from business intelligence in
real-time applications. In addition, a scenario of online 3D
mold assembly with multiple users is used to demonstrate
the effectiveness of the LOD concept in real industrial
setting. This concept provides an operational mechanism
ARTICLE IN PRESS
Mold System Designer C1
Base Designer S1
Piston Designer D1
Piston Designer D1 Connector Designer D2 Standard Part Provider S2
Fig. 10. The mold assembly structure and the owner of each component.
Table 3
Collaborators and their individual tasks during the collaboration process
Collaborator Tasks
Product owner C1 Lead the entire product development
Design and manufacture of the mold
body
First-tier supplier D1 ODM supplier of C1
Design and manufacture of the piston
Second-tier supplier D2 ODM Supplier for D1
Design and manufacture of the connector
Fixture supplier S1 Design the mold base
Standard part provider S2 Supply all standard parts
C.-H. Chu et al. / Robotics and Computer-Integrated Manufacturing 25 (2009) 334–347 343
A number of topics deserve further investigation based
on this work. One critical issue is to extend the modeling
capability of the current scheme so that it can handle more
complex feature shapes. Next, multileveled data inevitably
induces information imbalance among users and the
resulting conﬂicts in collaboration. A conﬂict resolving
ARTICLE IN PRESS
Fig. 13. Screen shots for different participants before the collaboration.
Fig. 14. Screen shots for different participants after the ﬁrst assembly.
C.-H. Chu et al. / Robotics and Computer-Integrated Manufacturing 25 (2009) 334–347 345
[10] Cera CD, Braude I, Kim T, Han JH, Regli WC. Hierarchical role-
based viewing for multilevel information security in collaborative
CAD. ASME J Comput Inf Sci Eng 2006;6(1):2–10.
[11] Qiu Z, Fuh JYH, Wong YS. Secure CAD model retrieval and data
consistency: issues on role-based visualization. Comput Aided Des
Appl 2006;3(1–4):139–44.
[12] Chao KM, Norman P, Anane R, James A. An agent-based approach
to engineering design. Comput Ind 2002;48:17–27.
[13] Hadeli, Valckenaers P, Kollingbau M, Van Brussel H. Multi-agent
coordination and control using stigmergy. Comput Ind 2004;53:75–96.
[14] Shen W, Barthes JP. An experimental multi-agent environment for
engineering design. Int J Coop Inf Syst 1996;5(2/3):131–51.
[15] Zhao G, Deng J, Shen W. CLOVER: an agent-based approach to
systems interoperability in cooperative design systems. Comput Ind
2001;45:261–76.
[16] Anumba CF, Ugwu OO, Newnham L, Thorpe A. A multi-agent
system for distributed collaborative design. Logist Inf Manage
2001;14:355–66.
[17] Tang D. An agent-based collaborative design system to facilitate
active die-maker involvement in stamping part design. Comput Ind
2004;54:253–71.
[18] Park H, Cutkosky M, Conru A, Lee SH. An agent-based approach to
concurrent cable harness design. AI EDAM 1994;8(1):45–62.
[19] Sun J, Zhang YF, Nee AYC. A distributed multi-agent environment
for product design and manufacturing planning. Int J Prod Res
2001;39(4):625–45.
[20] Shen W. Distributed manufacturing scheduling using intelligent
agents. IEEE Intell Syst 2002;17(1):88–94.
[21] Dornfeld DA, Wright PK, Wang FC, Sheng PS, Stori JA,
Sundararajan V, et al. Multi-agent process planning for a networked
machining service. Trans NAMRI/SME 1999;27:191–6.
[22] Song Y, Lee K. Incremental transmission of B-Rep models through
the network. Comput Aided Des Appl 2004;1:523–30.
[23] Lee SH. Feature-based multiresolution modeling of solids. ACM
Trans Graphics 2005;24(4):1417–41.
[24] Li WD, Lu WF, Fuh JYH, Wong YS. Collaborative computer-aided
design: research and development status. Comput Aided Des
2005;37:931–40.
[25] Chen XL, Fuh JYH, Wong YS, Lu YQ, Li WD, Qiu ZM. An
adaptable model for distributed collaborative design. Comput Aided
Des Appl 2005;1:47–55.
[26] Chu CH, Wu PH, Hsu YC. Collaborative 3D product development
with multiple levels of detail in visualization of design features.
Comput Aided Des Appl 2006;3(6):789–802.
[27] Nwana HS. Software agents: an overview. Knowledge Eng Rev
1996;11(3):205–44.
[28] /http://jade.tilab.com/S.
[29] /http://www.ﬁpa.org/S.
[30] /http://www.caav5.com/S.
[31] Li X, Zhou X, Ruan X. Conﬂict management in closely coupled
collaborative design system. Int J Comput Integrated Manuf
2002;14(4):345–52.
ARTICLE IN PRESS
C.-H. Chu et al. / Robotics and Computer-Integrated Manufacturing 25 (2009) 334–347 347
表 Y04 
several Taiwanese engineers working in Silicon Valley in San Francisco. We had discussed a 
number of issues such as the declination of global economy and how this affected the career plan of 
future graduates in our Department. In particular, they suggested that our Department should utilize 
the possible internships and placements offered by relevant companies. These programs could help 
students gain practical experiences, and on the other hand, the companies could get the tasks 
accomplished with a reduced cost on human resources. 
三、 建議 
None 
四、 攜回資料名稱及內容 
2009 International CAD Conference Proceedings CD 
 
五、 其他 
None 
 
 
 
 
 Computer-Aided Design & Applications, 6(1-4), 2009, xxx-yyy 
 
2 
Hsiao et al. [8] studied the relationship between product profiles and affective responses across large, 
medium, and small products and attempted to uncover the fundamental dimensions of affective 
responses to product shapes. They showed that across the three product categories the shape features 
like curvy lines were more likely to be perceived as soft, feminine characteristics of the products. 
 
Those past studies have addressed the emotional effects of individual features. However, issues such 
as the interactive effects between each design features and how they contribute to the user’s 
impression on the final product as a whole are difficult to study using their approaches. Moreover, 
most of the results obtained from those qualitative methods are difficult to be transformed to 
computational models. There is still a lack of support to computer aided techniques for affective 3D 
product styling. Therefore, this research conducts an experimental study for better understanding 
people’s affective responses towards the product shapes. A factorial experiment is constructed to 
characterize how various shape factors individually or interactively affect a user’s emotional responses, 
with 3D glasses frames as an example. The selection of the test elements and the experimental 
settings were suggested by industrial designers collaborating in this study. The factorial approach 
allows us to identify the shape features and their combinations that significantly influence five 
different product styles. The results obtained from multivariate analysis of variances validate some 
common perceptions of the glasses frame design quantitatively. They also reveal interesting insights 
to the interactions between shape features. These findings serve as a basis for computational models 
that facilitate customization of 3D product design with particular emotional responses. 
 
Fig. 1: Selected shape factors for glasses frames. 
 
2. METHDOLOGY 
2.1 Construction of Test Models 
Factorial design [9] is an experimental technique that allows the experimenter to study the effects of 
multiple independent variables at the same time with a reduced number of trials. The independent 
variables are manipulated by the means of adjusting the predefined levels of selected factors. One can 
examine how those variables individually or interactively influence the experimental results with the 
factorial approach. This work conducted a factorial experiment to characterize how various shape 
factors affect a user’s emotional responses towards 3D glasses frames. The DOE (Design of Experiment) 
techniques were first employed to choose the factors that we can vary their attributes in a systematic 
way. The variations of the factors were then combined to form the 3D shape of the test product. The 
selected elements, as illustrated in Fig. 1, and how we varied their attributes are described as follows: 
 
• Temporal width: w1 (narrow, 0.125), w2(wide, 0.75) 
 Computer-Aided Design & Applications, 6(1-4), 2009, xxx-yyy 
 
4 
y Popularity: Common - Special 
y Design specialty: Original - Dull 
y Reflected value: Magnificent - Rough  
y Structural firmness: Robust – Fragile 
 
 
Fig. 3: KJ-sorted adjective groups. 
 
Fig. 3 illustrates the clustered results of the 59 adjectives. What enclosed in the central eclipse are the 
five conceptual measures identified in the KJ sorting process. The smaller circles radiating from each 
center contain the adjectives clustered in each group. The two circles shaded with the same color as 
the central eclipse are the bi-polar representatives. 
 
2.3 Human Cognition Experiment  
We recruited 30 subjects to participate in the experiment. They were undergraduate or graduate 
students at National Tsing Hua University, between the ages of 21–35. A Java-based web application 
was developed for presenting the models to the participants. It allows a participant to interactively 
move, drag, and rotate the 3D models in real time. A questionnaire was designed for the participants to 
fill in with their emotional responses. The questionnaire lists 32 models labels and under each model 
label, each of the five bi-polar adjective sets contains a 7-position Likert scale, labeled with: slightly 
agree, agree, strongly agree, towards each extreme, and the middle position is labeled with neutral. The 
experiment was conducted as follows. An experimenter firstly explained the purpose and the rules of 
the experiment. The participant was then presented with the Java-based application. A demonstration 
was given to show how to control the 360 degree viewing of the glasses frame models. Each participant 
 Computer-Aided Design & Applications, 6(1-4), 2009, xxx-yyy 
 
6 
measures how confident we can generalize the results derived from the sample in representing the 
whole population. For example, if the p-value is 0.1, it means 90% of confidence we have in the sample 
that can reflect the interested behavioral feature of the whole population. An acceptance level, called α 
level, is chosen to determine whether confident enough to claim the findings. We follow the convention 
in most statistical analysis, i.e. α = 0.05 [12]. Tab. 1 shows the results of the participant’s judgments on 
the gender connotation of glasses frame shape with respect to the changes of each factor and their 
possible combinations. The headings of the table are described as follows. DF stands for Degree of 
Freedom. In factorial design, the levels (values) of the independent variables are predetermined. F is a 
measure of the ratio between the effects caused by the systematic variations (our manipulations of the 
factor levels) and the unsystematic variations (any other unknown random factors). The F value should 
be larger than 1 to conclude that the differences in the subjects’ responses are due to the systematical 
manipulations. If p < 0.05, the corresponding factor produces a statistically significant effect on the 
product shape. The significant factors and combinations are highlighted in the table. 
 
3.1 Gender Connotation 
The highlighted parts in Tab. 1 show that the changes of temporal width, aspect ratio, and corner type 
produce a significant impact on the participants’ responses on gender connotation. In addition, the 
interactions between aspect ratio, corner type, and corner symmetry (i.e. a x t, s x t, and a x s x t) also 
affect the participants’ judgments. We further examine the means of participants’ responses plotted 
with respect to the changes of factor levels. As shown In Fig. 4, the levels of the factors are marked on 
the horizontal axis, whereas the vertical axis represents the subject’s responses towards the factor 
levels. The black dots connected by the straight lines show the mean responses in accordance with the 
factor levels. For a 7-position scale, the midpoint 4 represents a neutral response. The points above 
and below the midpoint represent the tendencies towards the endpoints of each conceptual measure. 
When the temporal width becomes wider, it tends to make the glasses frame look relatively more 
masculine. The participants respond similarly to the frame’s aspect ratio. A larger aspect ratio 
produces a relatively more masculine look. For the corner types, a more squared corner also makes the 
glasses frame look more masculine as compared to a circular one. 
 
Tab. 2: MANOVA results of popularity 
Factors DF F p 
Temporal width (w) 1 0.54 0.461 
Aspect Ratio (a) 1 67.2 0.000 
Corner Symmetry (s) 3 31.52 0.000 
Corner Type (t) 1 15.24 0.000 
w x a 1 2.58 0.109 
w x s 3 1.95 0.120 
w x t 1 0.01 0.931 
a x s 3 0.42 0.736 
a x t 1 1.93 0.165 
s x t 3 3.27 0.021 
w x a x s 3 0.03 0.992 
w x a x t 1 1.47 0.225 
w x s x t 3 1.22 0.302 
a x s x t 3 3.72 0.011 
w x a x s x t 3 0.56 0.639 
 Computer-Aided Design & Applications, 6(1-4), 2009, xxx-yyy 
 
8 
3.3 Design Specialty 
Tab. 3 shows all of the four design factors that affect the participants’ responses on the design 
specialty of the glasses frame. There is a significant interaction between the aspect ratio, corner 
symmetry, and corner type. Fig. 6 shows that the larger temporal width gives the impression of being 
more original than the narrow one. The larger aspect ratio, however, looks less original than the 
smaller one. In the case of corner symmetry, the fully-symmetrical rim is considered to be least 
original among the three. And the vertically-symmetrical rim produces the most original appearance. 
For the corner type, the participants judge the squared corner to be less original than the circular one. 
 
 
Fig. 6: Mean plots of the main effects and interactions for design specialty 
 
Tab. 4: MANOVA result of reflected value 
Factors DF F P 
Temporal width (w) 1 60.74 0.000 
Aspect Ratio (a) 1 4.56 0.033 
Corner Symmetry (s) 3 1.66 0.174 
Corner  
Type (t) 
1 
0.72 0.396 
w x a 1 1.22 0.269 
w x s 3 0.11 0.955 
w x t 1 0.01 0.939 
a x s 3 2.18 0.089 
a x t 1 0.56 0.456 
s x t 3 6.51 0.000 
w x a x s 3 0.36 0.784 
w x a x t 1 2 0.158 
w x s x t 3 0.61 0.608 
a x s x t 3 1.3 0.273 
w x a x s x t 3 0.24 0.872 
 
3.4 Reflected Value 
Tab. 4 shows that the participants’ responses on the reflected value are affected by the temporal width 
and aspect ratio. Although the corner type and symmetry alone do not produce a significant effect, 
 Computer-Aided Design & Applications, 6(1-4), 2009, xxx-yyy 
 
10 
neutral point. However, changing their levels does not make a significant difference. When the rim is 
constrained to be fully- or diagonally-symmetrical, changing the corner from circular type to squared 
type reduce the impression of robustness. Conversely, when the rim is constrained to be horizontally- 
or vertically-symmetrical, a circular corner looks relatively less robust than the squared one. 
 
 
Fig. 8: Mean plots of the main effects and interactions for structural firmness 
 
4. COMPUTER-AIDED AFFECTIVE DESIGN 
The experiment helps us identify the affective responses that a particular shape feature may invoke. 
The insights obtained from the experiment can serve as a guideline for computer-aided affective 
design of 3D product shape. For example, a more masculine look of the glasses frame can be produced 
by increasing the aspect ratio of the rim or squaring the rim corner. The symmetry of rim corner can 
also be varied to accommodate the need of originality. In addition to understanding the trends of the 
user’s emotional responses towards different shape factors, we also build up computational models of 
their relationships with multiple regressions as follows: 
 
Gender connotation = 1.91 + 0.47w + 3.38a + 0.508t - 0.079DS + 0.117FS - 0.096HS 
Popularity = 3.51 + 0.113w + 3.15a - 0.750t - 0.092DS - 1.17FS - 0.217HS 
Design specialty = 2.29 - 0.457w + 1.71a + 0.471t + 0.254DS + 1.03FS + 0.204HS 
Reflected value = 4.04 - 1.01t + 0.692a - 0.137t + 0.063DS + 0.246FS + 0.096HS 
Structural firmness = 5.07 - 3.58t + 0.258a+ 0.021t + 0.067DS + 0.067FS - 0.004HS 
 
These five equations characterize the affective responses as the linear combinations of the shape 
factors studied in our experiment. When a new glasses frame is designed based on the combinations of 
these factors, we can compute the level of the affective responses that it may invoke with these 
regression equations. The result helps the designer evaluate the glasses frame design. A product 
prototype or template that offers a particular affective response can be thus generated for further 
design refinement. Another potential use of our experimental findings is customization for affective 
design. The end user can express his/her need of a particular emotional feature of the product, and the 
product shape can be constructed accordingly. We developed a Web-based prototyping system for 
demonstrating this idea. The system provides toolbars for continuously adjusting the temporal width 
and the aspect ratio. Different types of the frame symmetry and the corner can also be selected from 
the interface (see Fig. 9). The user is allowed to upload his/her head model for trying on the glasses 
frame being customized. Fig. 10(a) shows a design neutral in gender connotation. Increasing the 
