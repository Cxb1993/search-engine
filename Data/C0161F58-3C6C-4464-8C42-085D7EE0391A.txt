 2 
The identification of consensus sequence in DNA 
sequences is a fundamental work in biological 
sequence analysis. Finding such a short repeated 
site as motifs, protein binding sites, and splicing 
sites can further determine on the protein families, 
functional region, loci of exons, etc. For 
computational biology, general consensus 
sequence identification (CSI) problem can be split 
into two subproblems. The first subproblem is 
how to describe the shared pattern; the second 
subproblem is how to identify the common site 
according to the shared pattern. 
Here we take the example of searching CRP-
binding sites (Stormo et al., 1989) for instance to 
describe a CSI problem. Given 18 DNA 
sequences, each 105-base long, constructed of 
letters from the set {‘A’, ‘T’, ‘C’, ‘G’}, the first 
CSI subproblem is to find the shared pattern out 
of a consensus sequence with length n: 
 nxxx ...21  (1) 
where ,{ ii Lx ∈ □ }  in which iL  means a single 
reactive letter and □ means an ignored letter. 
Suppose the found solution for this subproblem is 
n = 20 and ii Lx =  for i=3, 4, 5, 6, 7, 14, 15, 16, 17, 
18. The shared pattern is expressed as  
 □□ 76543 LLLLL □□□□□□ 1817161514 LLLLL □□ (2) 
The second CSI subproblem is, given a shared 
pattern as in (2), to find the exact values for iL . In 
this example, the found solution is  
)()( 76543 TGTGALLLLL =  and 
)()( 1817161514 TCACALLLLL =   
Normally, the first subproblem is treated by 
collecting information content or probability of 
the four bases at each position from several 
known regulator binding sites. Position weight 
matrix and hidden Markov model are the most 
often used representations for the shared pattern. 
A limitation is that these methods need 
preliminary discriminated binding sites for the 
target protein and this is not applicable when 
analyzing those undiscovered protein-DNA 
interactions. On the other hand, the methods for 
solving second subproblem are developed using 
heuristic methods (Stormo and Hartzell, 1989; 
Lawrence et al., 1990) or mathematical 
programming (Ecker et al., 2002; Li and Fu, 
2005).  
The disadvantage of solving a general CSI 
problem by two steps is that the best solution may 
not be found. As discussed below: 
(i) It is difficult to formulate the first subproblem 
of finding the shared pattern as an 
optimization program, since the measure of 
optimality depends on the consensus sequence 
solved in the second subproblem. Biologists 
can tell various types of shared patterns, 
however, they cannot tell which shared 
pattern can generate the best consensus 
sequence in the next step. 
(ii) Since the shared pattern found in the first step 
may not be the best, there is no guarantee that 
the consensus sequence obtained in the 
second step is the best. 
(iii) It is possible to iterate the searching progress. 
That is, to iteratively find another better 
shared pattern after obtaining a tentative 
solution from the previous steps. However, 
there is no evidence to ensure the process can 
converge to a best solution. 
In order to find the optimal solution of a general 
CSI problem, this study proposes a model to solve 
the two subproblems simultaneously. By 
embedding the logical structures or the related 
knowledge into the constraints, this model is 
initially formulated as a nonlinear mixed 0-1 
program. Such a program is then converted into a 
linear mixed 0-1 program using linearization 
techniques, where many binary variables are 
replaced by continuous variables. The program is 
solvable by commonly used optimization 
packages to find the globally optimal solution. 
PROPOSED METHOD 
Here we use the example data in Stormo and 
Hartzell (1989) to describe the proposed method. 
Firstly, represent the 18 sequences, each 105 
bases long, as an 18*105 data matrix B: 
 
⎥⎥
⎥⎥
⎦
⎤
⎢⎢
⎢⎢
⎣
⎡
=
105,182,181,18
105,22,21,2
105,12,11,1
bbb
bbb
bbb
B
L
MOMM
L
L
 (3) 
where plb ,  is the letter in the position p of the 
sequence l. 
 
A CSI problem without shared patterns is defined 
as: 
 4 
Since a huge amount of slz ,  (i.e, rl × ) are 
involved, to treat slz ,  as binary variables causes a 
heavy computational burden. Following 
proposition ensures that slz ,  can be resolved as 
continuous variables rather than binary variables: 
Proposition 1 (All or nothing assignment, Li 
and Fu, 2005) Let 0, ≥slz  be continuous variables 
instead of binary variables. For a 
s′ where { }∑∑ = i i slsi i sl ,', max θθ , assigning 1', =slz  and 
0, =slz  for all ss ′≠  can maximize the value of 
lScore . 
Proof  Since 1, =∑s slz  and 0, ≥slz , it is true that 
 ∑∑∑ ∑ =⎭⎬
⎫
⎩⎨
⎧≤
⎭⎬
⎫
⎩⎨
⎧ ⎟⎠
⎞⎜⎝
⎛
i
i
sl
i
i
slss i
i
slsl θθθz ',,,, maxmax  
Thus, lScore  is maximized only when 
',slz = 1.  □ 
Remark 1 The function ∑l lScore  can be rewritten as 
∑ ∑∑∑∑∑
∈∈∈∈
+++=
i SGsl
sli
SCsl
sli
STsl
sli
SAsl
sli
l
l
iiii
zgzcztzaScore }{
),(
,
),(
,
),(
,
),(
,  (15) 
where }|),{( , AdslSA i sli == , }|),{( , TdslST i sli == , 
}|),{( , CdslSC
i
sli == , and }|),{( , GdslSG i sli ==  for 
i=1,2,…2m.  
This result implies that iSA  (or iST , iSC , iSG ) is an 
index set composed of (l, s) where the product 
term isl az ,  (or isl tz , , isl cz , , isl gz ,  respectively) appears 
on the right hand side of (10) as ii sl aθ =, (or 
it , ic , ig ).  
A CSI problem in (4) can than be formulated as a 
nonlinear mixed 0-1 program below: 
Program 1 (Nonlinear mixed 0-1 CSI program) 
Maximize ∑ ∑ ∑∑∑= ∈ ∈∈∈ ⎭⎬
⎫
⎩⎨
⎧ +++
m
i STsl SGsl
sli
SCsl
slisli
SAsl
sli
i iii
zgzcztza
2
1 ),( ),(
,
),(
,,
),(
,
 
Subject to 
{ }
(C1)  
1,0,,
)1(
)1(
)1)(1(
1 ⎪⎪
⎪⎪
⎭
⎪⎪
⎪⎪
⎬
⎫
∈
=
−=
−=
=
−−=
∑
=
iii
m
i
i
iiii
iiii
iiii
iiii
vuy
ky
vuyg
vuyc
vuyt
vuya
∑
=
≥=
r
s
slsl zz
1
,, 0,1                                     
(C2) 
This program intends to maximize the total score 
of fitting to the common site for given multiple 
sequences by solving ia , it , ic  and ig . In this 
program 
slz , s are continuous variables but act like 
binary ones. By utilizing binary variables, it is 
also convenient to embed structural features into 
the constraint sets. 
Logical Constraints 
Most CSI problems for discriminating DNA 
regulons are accompanied with logical constrains. 
The most often seen is the structural feature of the 
target sites. Because DNA-binding proteins are 
mostly dimers or even tetramers, the common site 
can be split into two highly correlated half parts in 
which the reactive bases conserve inverse 
symmetry or direct repeat. This phenomenon can 
be formulated as constraints (16), (17) and (18) 
below. 
 symmetry inversefor       
12
12
12
⎪⎭
⎪⎬
⎫
=
=+
=+
+−
+−
+−
imi
iimi
iimi
yy
yvv
yuu
 (16) 
 repeatdirect for   
              
⎪⎭
⎪⎬
⎫
=
=
=
+
+
+
imi
imi
imi
yy
vv
uu
 (17) 
 iiii yvyu ≤≤ ,  (18) 
Constraint (16) and (17) describe structural 
constraints as inverse symmetry and direct repeat, 
respectively. Only one of them is to be applied. 
The constraint (18) accompanies (16) and (17) to 
ensure that if 0=iy  then 0== ii vu  automatically for 
accelerating the computation. 
Another type of logical constraints is for 
previously known specific properties. The 
consensus sequences may have been previously 
determined as 15-letter IUPAC codes. This 
preliminary information can also be specified as 
logical constraints to accelerate computation. The 
constraints for IUPAC codes are listed in Table 1. 
Linearization of Program 1 
Program 1 can only obtain a local optimal 
solution because it is a nonlinear mixed 0-1 
program which contains product terms in the 
 6 
 
(C4)  
). (i.e. sequences ofnumber  the
 toequalor greater integer an  is  where
0
)1(
0
)1(
0
)1(
0
)1(
,
),(
,,
),(
,
,
),(
,,
),(
,
,
),(
,,
),(
,
,
),(
,,
),(
,
⎪⎪
⎪⎪
⎪⎪
⎪⎪
⎪
⎭
⎪⎪
⎪⎪
⎪⎪
⎪⎪
⎪
⎬
⎫
≤≤
≤≤−+
≤≤
≤≤−+
≤≤
≤≤−+
≤≤
≤≤−+
∑∑
∑∑
∑∑
∑∑
∈∈
∈∈
∈∈
∈∈
l
M
Mg
zgMz
Mc
zcMz
Mt
ztMz
Ma
zaMz
iiG
SGsl
sliGi
SGsl
sl
iiC
SCsl
sliCi
SCsl
sl
iiT
STsl
sliTi
STsl
sl
iiA
SAsl
sliAi
SAsl
sl
ii
ii
ii
ii
λ
λ
λ
λ
λ
λ
λ
λ
Odd or even in-between spacers 
Mostly the regulatory binding site has spacers 
between the two half sites. These spacers can be 
represented by inactive bases around the middle 
positions in Program 2. However, an obvious 
restriction is that Program 2 can only find a 
solution with even in-between spacers because the 
reactive bases in the consensus sequence are 
paired with their positions. To find the optimal 
consensus sequence which possibly has odd and 
even in-between spacers, a modification can be 
applied to Program 2. First we expand D in (5) as 
D’ as below: 
 [ ])1()0( DDD =′  (19) 
in which 
 
⎥⎥
⎥⎥
⎥
⎦
⎤
⎢⎢
⎢⎢
⎢
⎣
⎡
=
20
,86,18
1
,86,18
20
,1,18
1
,1,18
20
,86,2
1
,86,2
20
,1,2
1
,1,2
20
,86,1
1
,86,1
20
,1,1
1
,1,1
)(
pppp
pppp
pppp
dddd
dddd
dddd
pD
LLL
MOM
LLL
LLL
 (20) 
where  
 ⎩⎨
⎧
≤≤+
≤=
−++
−+
mimb
mib
d
psil
sili
psl 21for 
              for 
1,
1,
,,  (21) 
In D’ a new index p is used to describe the two 
data sets for odd and even in-between spacers, i.e., 
p = 0 for even spacers and p = 1 for odd spacers. 
For the two data sets there are two sets of binary-
like variable z and index sets SA, ST, SC and SG 
and therefore having the additional subscription p 
attached. For exclusiveness of these two data sets, 
two constraints are added as: 
 ∑∑
= =
=
1
0 1
,, 1
p
r
s
pslz  (22) 
 ∑∑∑
===
===
r
s
psl
r
s
ps
r
s
ps zzz
1
,,
1
,,2
1
,,1 L  (23) 
A modified linear mixed 0-1 program for solving 
a complete CSI program is formulated below: 
Program 3 (Modified linear mixed 0-1 CSI 
program) 
Maximi
ze 
∑
ib
ib
,
,λ  
Subject 
to 
(C1’) and (C2) in Program 2 
(C5)  
0,1
1
,,
1
,,2
1
,,1
,,
1
0 1
,,
⎪⎪⎭
⎪⎪⎬
⎫
===
≥=
∑∑∑
∑∑
===
= =
r
s
psl
r
s
ps
r
s
ps
psl
p
r
s
psl
zzz
zz
L
(C6)  
). (i.e. sequences ofnumber  the
 toequalor greater integer an  is  where
0
)1(
0
)1(
0
)1(
0
)1(
,
),,(
,,,
),,(
,,
,
),,(
,,,
),,(
,,
,
),,(
,,,
),,(
,,
,
),,(
,,,
),,(
,,
,,
,,
,,
,,
⎪⎪
⎪⎪
⎪⎪
⎪⎪
⎪
⎭
⎪⎪
⎪⎪
⎪⎪
⎪⎪
⎪
⎬
⎫
≤≤
≤≤−+
≤≤
≤≤−+
≤≤
≤≤−+
≤≤
≤≤−+
∑∑
∑∑
∑∑
∑∑
∈∈
∈∈
∈∈
∈∈
l
M
Mg
zgMz
Mc
zcMz
Mt
ztMz
Ma
zaMz
iiG
SGpsl
psliGi
SGpsl
psl
iiC
SCpsl
psliCi
SCpsl
psl
iiT
STpsl
psliTi
STpsl
psl
iiA
SApsl
psliAi
SApsl
psl
pipi
pipi
pipi
pipi
λ
λ
λ
λ
λ
λ
λ
λ
Program 3 is the complete model capable of 
finding the global optimal consensus sequence 
without specifying shared pattern. 
Exclusive constraints 
In Program 3 the global optimal solution may not 
be the motif of interest. The consideration 
includes cases of multiple consensus sequence 
and meaningless but more outstanding solutions. 
To find the exact consensus sequence, all these 
inexpectants should be filtered by exclusive 
constraints. Several kinds of exclusive constraints 
can be embedded into Program 3 for different 
cases: 
Case 1: exclusive solutions 
 8 
Logical constraints of inverse symmetry are 
embedded in these experiments and no exclusive 
constraints are applied. The results are listed in 
Figure 1, described below: 
(i) All solutions found are globally optimal 
solution for given k and m. 
(ii) For k = 5 and m ≥ 8, the best solution is 
“TGTGA□□□□□□TCACA” with score as 147, 
which is exactly the solution found by Stormo 
et al. (1989). 
(iii) The computational time increases 
exponentially as k increases. 
Although we have different solutions of the 
consensus sequence in experiments of reactive 
letter number greater or equal to 4, the positions 
of all the binding sites are the same as the results 
in Stormo et al. (1989). 
FNR-binding sites 
An example of finding FNR-binding sites in DNA 
sequences the same as our previous research (Li 
and Fu, 2005) is also used to test the proposed 
method. In this series of experiments an inverse 
symmetric consensus sequence is found in 12 
DNA sequences where the lengths vary from 96 
to 781. Table 2a lists the results of solving this 
problem by Program 3 without any constraints of 
excluding meaningless solutions. There are 
solutions meaningless but higher scored than the 
correct regulatory consensus sequence. Table 2b 
lists the results of experiments where an exclusive 
constraint as (19) is added and all the solutions of 
these experiments are “TTGAT□□□□ATCAA” 
with score as 107. 
DISCUSSION 
The proposed method can find a global optimal 
solution without predefined shared pattern. Some 
further issues remained for future studies are 
discussed below.  
The formulation of various types of logical 
constraints will be necessary. There are more 
complicated features to be articulated as logical 
constraints. For example, TG kink is an often seen 
structural feature in regulatory region (Schultz et 
al., 1991). It may not contact regulatory protein 
but is very important because it allows DNA 
strand bend to fit the regulatory protein. When a 
TG kink is known existing in a binding site, its 
exact position in the consensus sequence varies by 
cases. This kind of logical constraints is relatively 
complicated to formulate. Another example is for 
multiple shared patterns: sometimes a regulatory 
region may have fixed types of shared pattern. 
(a) 
k m Common Site Score ComputationalTime(h:mm:ss)
3 7   TG..A....T..CA 92 0:17:44 
 8 T.TG........CA.A 94 0:21:31 
 9 .T.TG........CA.A. 94 0:26:59 
 10 T...T.A......T.A...A 94 0:34:59 
 11 .T...T.A......T.A...A. 94 1:21:11 
4 7 GTGA......TCAC 120 0:27:11 
 8 .GTGA......TCAC. 120 0:28:44 
 9 ..GTGA......TCAC.. 120 0:57:07 
 10 ...GTGA......TCAC... 120 0:58:08 
 11 ....GTGA......TCAC.... 120 1:17:19 
5 7 GTGA.C..G.TCAC 136 0:30:09 
 8 TGTGA......TCACA 147 0:52:02 
 9 .TGTGA......TCACA. 147 1:13:41 
 10 ..TGTGA......TCACA.. 147 2:42:36 
 11 ...TGTGA......TCACA... 147 5:23:40 
6 7 GTGAA.TA.TTCAC 151 0:27:10 
 8 TGTGA.C..G.TCACA 164 0:51:50 
 9 .TGTGA.C..G.TCACA. 164 4:37:04 
 10 T.TGTGA......TCACA.A 165 10:58:17 
 11 A..TGTGA......TCACA..T 166 33:23:59 
(b) 
Computational time versus length of half site and number of reactive letters
0:00
1:00
2:00
3:00
4:00
5:00
6:00
6 7 8 9 10 11 12
m : length of half site
C
om
pu
ta
tio
na
l t
im
e 
(h
:m
m
)
k = 3
k = 4
k = 5
k = 6
 
Fig. 1. Experimental result of searching CRP-binding sites in 
18 E.coli DNA sequences, which taken from Stormo et al. 
(1989), with various numbers of reactive letters and various 
sizes of each half site. 
(a) 
k m Common Site Score
5 8 .TTGAT....ATCAA. 107 
9 T.A..TT.AT.AA..T.A 110 
10 A.TT..A..AT..T..AA.T 110 
(b) 
k m Common Site Score
5 8 .TTGAT....ATCAA. 107 
9 ..TTGAT....ATCAA.. 107 
10 ...TTGAT....ATCAA... 107 
 
Tab. 2. Common sites found in experiments with various 
number of reactive letters when searching FNR-binding sites in 
13 E.coli DNA sequences. These results are obtained from 
solving Program 3 (a) without any exclusive constraints; (b) 
with an exclusive constraint of equation (19) 
