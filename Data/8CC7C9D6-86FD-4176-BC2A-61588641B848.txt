 2
一、中文摘要 
在同步循序電路中，時鐘訊號週而復始的切換會造成時鐘樹以及暫存器週而復
始的的功率消耗，而佔了整體功率消耗的一大部分。因此，降低時鐘訊號造成
之功率消耗，是一個非常重要的研究課題。如果功能單元大部分時間都在閒置
狀態，時鐘閘控制設計將可大幅降低時鐘訊號造成之功率消耗。然而，雖然時
鐘閘控制設計可以避免不必要的功率消耗，但也造成時鐘樹上每個邏輯閘其切
換機率並不相同。隨著使用年限增加，時鐘閘控制設計可能因老化效應產生很
大的時序差異。本專題研究計畫，是設法在時鐘閘控制設計之高階合成階段，
產生適當的各個功能單元閒置情況，以提升電路的可靠度與最小化功率消耗。
我們以三年的時間，探討時鐘閘控制設計之高階合成，主要完成的研究成果包
括：(一) 我們提出抗老化時鐘閘控制設計的高階合成方法，可以在功率消耗
的限制下，最小化老化後的時序差異；(二) 以高階合成的結果為基礎，我們
進一步提出抗老化時鐘閘控制設計的時鐘樹實現方法，不但可以最小化老化後
的時序差異，也可以有效降低功率消耗。實驗結果顯示，我們所提出的各項方
法，確實可達到高可靠度及低功率消耗的效果。 
 
關鍵詞：電子設計自動化，時鐘閘控制，時鐘訊號，高階合成，低功率消耗，
高可靠度，功能單元繫結，運算排序，老化效應。
 4
目錄 
中文摘要…………………………………………………………….....2 
英文摘要…………………………………………………….…………3 
1. Introduction………………….………………………….………..….5 
2. Preliminaries………………………………………………….……...5 
3. High-Level Synthesis Approach…………………………….……….6 
3.1 Aging Model…………………..…………..………………………..6 
3.2. Motivation……………….……….............…..............…..………...7 
3.3. ILP Formulation……………….……….............………...………...8 
4. Anti-Aging Activity-Driven Clock Tree Design………………....…..9 
4.1. Motivation……………….……….............…..............…..……..…..9 
4.2. ILP Formulation……………….……….............………...………..10 
5. Experimental Results……………….……….............……..………...11 
5.1 Result of Our High-Level Synthesis Approach………………….....11 
5.2 Result of Activity-Driven Clock Tree Design…………………...…12 
6. Conclusions..............................………………..….............….….…..13 
7. 計畫成果自評........……………………………...............……….....13 
8. 參考文獻………………………………………...............……….....13 
 6
tree uses the high-level synthesis information: a 
scheduled DFG and a module binding solution. 
We describe these two inputs below.  
In high-level synthesis, a behavior-level 
description is represented by a DFG, in which 
each node corresponds to an operation, and each 
directed edge corresponds to a dependency 
relationship. A scheduled DFG is a DFG in which 
each operation is scheduled into a proper control 
step to start its execution.  
 
Figure 1: Scheduled DFG ex1. 
Module binding is to assign each operation in the 
scheduled DFG to a module that can execute it. 
Two operations can share the same module if 
they are not executed in the same control step.  
Take the scheduled DFG ex1 as an example in 
Figure 1. This scheduled DFG ex1 has eight 
operations. Operations o1, o2, and o3 are 
scheduled into control step 1, operation o4 is 
scheduled into control step 2, and so on. Suppose 
that we are given two adders, called A1 and A2, 
one subtractor, called S1, and one multiplier, 
called M1. Operations o1, o4 and o8 can share 
adder A1, operation o3 can be assigned to adder 
A2, operations o2 and o5 can share subtractor S1, 
and operations o6 and o7 can share multiplier M1. 
We use the following form to describe this 
module binding solution: A1 = {o1, o4, o8}, A2 = 
{o3}, S1 = {o2, o5}, and M1 = {o6, o7}. For 
brevity sake, in the following, we say this module 
binding solution is sol_1. 
Based on a scheduled DFG and a module binding 
solution, we can derive the activity patterns of 
modules. Consider the scheduled DFG ex1. 
Supposes that the module binding solution is 
sol_1. Then, we can derive the activity pattern of 
each module as displayed in Table 1. 
Note, from the activity pattern, we can easily 
derive the active probability. For example, the 
activity pattern of module A1 is 1101. Since 
module A1 is active in three control steps and 
there are totally four control steps, the active 
probability of module A1 is 3/4.  
Table 1: Activity Patterns of Modules. 
Control Step 
Module 
1 2 3 4 
Activity 
Pattern 
A1 o1 o4  o8 1101 
A2 o3    1000 
S1 o2  o5  1010 
M1   o6 o7 0011 
 
3. HIGH-LEVEL SYNTHESIS 
APPROACH 
3.1 Aging Model 
In this section, we borrow the materials from the 
aging model in [10,11] to estimate the delay 
degradations of logic gates due to the aging effect. 
For a logic gate v, let the notations ADv, swv, CLv, 
and FDv denote the aged gate delay, the number 
of output switching activities, the output load 
capacitance, and the fresh gate delay, respectively. 
The delay degradation of logic gate v is defined 
as ADv-FDv. From [10,11], we know ADv = 
(1+δvswvCLv)FDv, where δv is the aging 
factor of logic gate v (note the aging factor is in 
fact inversely proportional to the driving strength 
of the logic gate). Thus, the delay degradation of 
logic gate v is equal to δvswv CLvFDv.  
Further, for a clock gate v, it is obvious that swv = 
TTAPv, where the notation TT denotes the 
duration of circuit operation (e.g., five years) and 
 8
to consider the AACG problem in the high-level 
synthesis stage. We use ILP (integer linear 
programming) to formally draw up the problem. 
3.3 ILP Formulation 
First, we define the notations used in our ILP as 
below. 
(1) The notation V denotes the set that includes 
all the clock gates in the clock tree. The notation 
B denotes the set that includes all the clock gates 
at the bottom level (i.e., the level nearest to the 
modules) of the clock tree. The notation I denotes 
the set that includes all the modules. The notation 
C denotes the set that includes all the control 
steps. 
(2) The notation H denotes the set that includes 
all the clock paths in the clock tree. Note, in the 
set H, each clock path is represented by a set that 
includes all the clock gates in this clock path. 
(3) The notation Pow is a constant that denotes 
the constraint on the power consumption of the 
clock tree. The notation PAi (the notation PIi) is a 
constant that denotes the power consumption of 
module i at an active (idle) control step. The 
notation PGv is a constant that denotes the power 
consumption of clock gate v at an active control 
step. The notation PTv is a constant that denotes 
the power consumption of each transition in the 
clock control logic of clock gate v. 
(4) The notation αv is a constant that denotes the 
degradation factor of clock gate v.  
(5) The notation parent(v) denotes the parent of 
clock gate v. 
(6) The notation βi,c is a constant. The value of 
βi,c is determined according to the scheduled 
DFG and the module binding solution: if module 
i is active at control step c, then βi,c = 1; 
otherwise, βi,c = 0.  
(7) The notation Av,c is a binary variable. If clock 
gate v is active at control step c, then Av,c = 1; 
otherwise, Av,c = 0. 
(8) The notation Tv,c is a binary variable. If the 
clock control logic of clock gate v has a transition 
from control step c to control step [(c+1) modulo 
TC], where TC is a constant that represents the 
number of total control steps, then Tv,c = 1; 
otherwise, Tv,c = 0. 
(9) The notation Yi,v is a binary variable. If 
module i is the child of clock gate v, then Yi,v = 1; 
otherwise, Yi,v = 0. 
(10) The notation FU(n) denotes the set that 
includes all the modules can execute operation n. 
(11) The notation N(c) denotes the set that 
includes all the operations scheduled at control 
step c. 
(12) The notation s(n) is a constant that denotes 
the control step that operation n is scheduled into. 
Note, for each operation n, its s(n) can be 
obtained directly from the given scheduled DFG. 
(13) The notation Xn,i is a binary variable. If 
operation n is assigned to module i, then Xn,i = 1; 
otherwise, Xn,i = 0. 
(14) The notation max_deg (the notation min_deg) 
is a real-value variable that denotes the maximum 
delay degradation (the minimum delay 
degradation) among all the clock paths. Then, 
obviously, the aging skew is equal to (max_deg – 
min_deg). 
Next, we introduce our objective function and the 
constraints. Our objective function is to minimize 
the aging skew. Thus, we describe our objective 
function as below: minimize (max_deg – 
min_deg). 
If clock gate v is active at control step c, then its 
parent is also active at control step c. Thus, for 
each clock gate v and each control step c, we 
have the following constraint:  
Av,c ≤ Aparent(v),c.    (Formula 1) 
At the bottom level of the clock tree, each clock 
gate v is the parent of one module. Thus, for each 
clock gate v at the bottom level of the clock tree, 
we have the following constraint: 
, 1.i v
i I
Y

      (Formula 2) 
Each module i is the child of one clock gate at the 
bottom-level. Thus, for each module i, we have 
the following constraint:  
, 1.i v
v B
Y

      (Formula 3) 
Suppose that clock gate v (at the bottom level of 
the clock tree) is the parent of module i. If 
 10
instance names of its PMOS transistors are U1/P1, 
U1/P2, and U1/P3, respectively. 
A clock signal propagation path is defined as a 
path that the clock signal propagates from the 
clock source to activate the flip-flops. Consider 
the gate-level clock signal propagation path 
U7→U5→U1 in the clock tree ex2. If the 
flip-flops are rising-edge-triggered, the 
transistor-level clock signal propagation path 
includes U7/N1, U7/P2, U5/N1, U5/P2, U1/N1, 
U1/N2, and U1/P3. Since the NBTI effect only 
affects PMOS transistors, for brevity sake, in the 
following, we only mention PMOS transistors. 
Thus, if the flip-flops are rising-edge-triggered, 
the transistor-level clock signal propagation path 
is denoted as U7/P2→ U5/P2→ U1/P3. 
In fact, we can let the active probabilities of clock 
gates U1, U2, U3, and U4 do not affect the 
degradation difference. Consider that level 1 is 
replaced with NAND gates and level 2 is 
replaced with inverter gates. Then, we have the 
clock tree ex3 as shown in Figure 6. In the clock 
tree ex3, the active probabilities of clock gates 
U1, U2, U3, and U4 (i.e., the enable probabilities 
of enable signals en1, en2, en3, and en4) do not 
affect the delay degradation of any 
transistor-level clock signal propagation path. 
Based on the above observation, we are 
motivated to develop the critical-PMOS-aware 
clock tree design methodology. To ensure that the 
original clock skew is zero, our clock tree still 
should be type-matching. Thus, our problem 
becomes to determine the logical type of each 
level. 
We define the “free” level and the “must” level 
below. 
Definition 1: A level at which clock gates need 
not to have the same active probabilities for 
eliminating the degradation difference is called a 
“free” level.  
Definition 2: A level at which the clock gates 
must have the same active probabilities for 
eliminating the degradation difference is called a 
“must” level. 
For instance, in the clock tree ex2, level 1 is a 
“must” level; on the other hand, in the clock tree 
ex3, level 1 is a “free” level.  
 
Figure 5: Clock tree ex2. 
 
 
Figure 6: Clock tree ex3. 
 
4.2. ILP FORMULATION 
In this subsection, we present a 0-1 ILP approach 
to modify the logics of enable signals for 
transforming a given clock tree into an anti-aging 
clock tree, in which the clock gates at the same 
“must” level have the same active probability. 
Note that we use the activity pattern, which is 
formally defined in [5,6], to denote the logic of 
an enable signal. Our objective is to minimize the 
power consumption overhead while ensuring that 
the clock gates at the same “must” level have the 
same active probability. 
First, we introduce the notations used in our 0-1 
ILP formulation below.  
(1) The notation A denotes the set of clock gates.  
(2) The notation B denotes the set of control 
steps.  
 12
Note, under different constraints on the power 
consumptions, the CPU times of the same circuit 
may be slightly different. Thus, in Table 3, we 
report the average values. We find: the CPU 
times of existing design flow is smaller, while the 
CPU times of our high-level synthesis approach 
are larger.  
Table 3: Comparisons on the CPU times. 
Circuit M-A (sec) M-B (sec) 
HAL 2 156 
BF 20 1781 
EF 36 1045 
DWT 7 697 
IDCT2 323 15647 
DIST2 437 26324 
5.2 Results of Anti-Aging Activity- 
Driven Clock Tree Design 
We use six benchmark circuits, which are 
targeted to TSMC 0.13μm process technology, to 
test the effectiveness of our anti-aging 
activity-driven clock tree design methodology. 
We derive the following four activity-driven 
clock trees for comparisons. 
(1) Tree-A (i.e., the AND-type-matching clock 
tree). We use the algorithm proposed in [16] to 
derive this clock tree. 
(2) Tree-B (i.e., the anti-aging 
AND-type-matching clock tree). Note that this 
clock tree is the anti-aging version of Tree-A.  
(3) Tree-C (i.e., the NAND-type-matching clock 
tree). We use the algorithm proposed in [16] to 
derive this clock tree. 
(4) Tree-D (i.e., our clock tree). Note that this 
clock tree is the anti-aging version of Tree-C.  
Table 4 tabulates the comparisons on the clock 
skews of these four clock trees. The original 
clock skew of each clock tree is small. The 
column Five-Year Clock Skew denotes the clock 
skew (which is primarily caused by the NBTI 
effect) after five-year operation. The column 
Ten-Year Clock Skew denotes the clock skew 
(which is primarily caused by the NBTI effect) 
after ten-year operation. In each circuit, since 
Tree-B and Tree-D (i.e., our clock tree) are 
designed for eliminating the degradation 
difference, their five-year clock skews and 
ten-year clock skews are still near to the original 
clock skew. On the other hand, in Tree-A and 
Tree-C, their five-year clock skews and ten-year 
clock skews are large.  
Table 5 tabulates the power consumptions of 
these four clock trees. We report two data: (1) the 
power consumption of the clock tree (that 
includes the clock switching of the flip-flops); 
and (2) the whole-circuit power consumption 
(that includes the power consumptions of the 
clock tree, the combinational logic, and the 
flip-flops). For example, in circuit S15850.1, if 
Tree-A is implemented, the power consumption 
of the clock tree is 5.30 μw, and the whole-circuit 
power consumption is 24.54 μw. We analyze their 
overheads below. 
(1) From the viewpoint of the clock tree only. 
Compared with Tree-A and Tree-C, the average 
power consumption overheads of Tree-B achieve 
48.2% and 48.7%, respectively. On the other 
hand, compared with Tree-A and Tree-C, the 
average power consumption overheads of Tree-D 
(i.e., our clock tree) are only 5.9% and 6.3% 
respectively.  
(2) From the viewpoint of the whole circuit. 
Compared with Tree-A and Tree-C, the average 
power consumption overheads of Tree-B achieve 
15.6% and 15.8%, respectively. On the other 
hand, compared with Tree-A and Tree-C, the 
average power consumption overheads of Tree-D 
(i.e., our clock tree) are only 1.6% and 1.8% 
respectively.  
Table 4. Comparisons on power consumptions. 
Power Consumption  (μw) Circuit Tree-A Tree-B Tree-C Tree-D 
S15850.1 5.30 (24.54) 
7.73 
(26.97) 
5.33 
(24.57) 
5.93 
(25.17) 
S38584 12.82 (26.90) 
17.77 
(31.85) 
12.80 
(26.88) 
12.94 
(27.02) 
S38584.1 16.59 (41.69) 
23.02 
(48.12) 
16.22 
(41.32) 
16.35 
(41.45) 
IDCT2 1.89 (5.97) 
2.74 
(6.82) 
1.84 
(5.92) 
1.91 
(5.99) 
Motion 10.85 (40.42) 
17.48 
(47.05) 
10.94 
(40.51) 
12.29 
(41.86) 
Sha1 13.25 (40.62) 
21.16 
(48.53) 
13.40 
(40.77) 
14.55 
(41.92) 
 14
Trans. on Computer Aided Design of Integrated Circuits 
and Systems, vol. 15, no. 6, pp. 630—643, 1996. 
[8] S.H. Huang, C.H. Cheng, and S.B. Pan, “Synthesis of 
Anti-Aging Gated Clock Designs”, Journal of 
Information Science and Engineering (JISE), vol. 25, no. 
6, pp. 1651—1670, 2009. 
[9] S.H. Huang, C.M. Chang, W.P. Tu, and S.B. Pan, 
“Critical-PMOS-Aware Clock Tree Design Methodology 
for Anti-Aging Zero Skew Clock Gating”, Proc. of 
IEEE/ACM Asia and South Pacific Design Automation 
Conference (ASP-DAC), pp. 480—485, 2010. 
[10] C.W. Kang and M. Pedram, “Technology Mapping for 
Low Leakage Power and High Speed with Hot-Carrier 
Effect Consideration”, Proc. of IEEE/ACM Asia and 
South Pacific Design Automation Conference, pp. 
203—208, 2003. 
[11] C.W. Kang and M. Pedram, “A Leakage-Aware Low 
Power Technology Mapping Algorithm Considering the 
Hot-Carrier Effect”, International Journal of Low Power 
Electronics, vol. 1, no. 2, pp. 133—144, 2005. 
[12] D. Garret, M. Stan, and A. Dean “Challenges in Clock 
Gating for a Low Power ASIC Methodology”, Proc. of 
IEEE International Symposium on Low Power 
Electronics and Design, pp. 176—181, 2002. 
[13] W.C. Chao and W.K. Mak, “Low Power Gated and 
Buffer Clock Network Construction”, ACM Trans. on 
Design Automation of Electronic Systems, vol. 13, no. 1, 
article 20, 2008. 
[14] C. Lee, M. Potkonjak, and W.H. Maggione-Smith, 
“MediaBench: A Tool for Evaluating and Synthesizing 
Multimedia and Communications Systems,” Proc. of 
IEEE International Symposium on Microarchitecture, pp. 
330—335, 1997. 
[15] G.D. Micheli, “Synthesis and Optimization of Digital 
Circuits”, Kluwer Academic Publishers, 1994. 
[16] C.M. Chang, S.H. Huang, Y.K. Ho, H.P. Wang, and 
Y.S. Lu, “Type-Matching Clock Tree for Zero Skew 
Clock Gating”, Proc. of IEEE/ACM Design Automation 
Conference, pp. 217—223, 2008. 
[17] S.H. Huang, G.Y. Jhuo and W.L. Huang, “Minimum 
Inserted Buffers for Clock Period Minimization”, 
accepted by Journal of Information Science and 
Engineering, vol. 27, no. 5, pp. 1513—1526, 2011. 
[18] C.H. Lee, S.H. Huang, and C.H. Cheng, “Accurate 
TSV Number Minimization in High-Level Synthesis”, 
accepted by Journal of Information Science and 
Engineering, vol. 27, no. 5, pp. 1527—1543, 2011.  
[19] S.H. Huang and C.H. Cheng, “Resource Selection and 
Binding of Nonzero Clock Skew Circuits for Standby 
Leakage Current Minimization”, Journal of Information 
Science and Engineering, vol. 26, no. 6, pp. 2249—2266, 
2010.  
[20] C.H. Lee, T.Y. Huang, C.H. Cheng, S.H. Huang, “A 
Post-Processing Approach to Minimize TSV Number for 
High-Level Synthesis of 3D ICs”, Proc. of IEEE 
International Symposium on Computer, Communication, 
Control and Automation, pp. 434—437, 2010. 
 
 
 
 
 
 
 
 2
月 5 日起共舉行五天，我們實驗室參與 ACM SIGDA University Booth，展出我們的
研發成果 Design Partitioning for 3D IC，並吸引許多人潮瀏覽。除了我們本身作品展
示之外，我們亦利用空檔參觀廠商展示區，瞭解目前 EDA 的新產品與新技術。在廠
商展示區，今年許多知名國際的 EDA 設計廠商 Cadence、Synopsys、Mentor Graphic、
ARM 與台灣的 EDA 設計廠商 SpringSoft 及製程廠商 TSMC 等數十家廠商參與展
出。 
另一方面，International Conference on Microelectronic Systems Education (MSE) 
則是與 DAC 同時在美國加州聖地牙哥舉行的研討會 (co-located conference)。此研
討會於 6 月 5 日及 6 月 6 日共舉行兩天，我們於 6 月 6 日下午以 poster 方式
發表一篇論文 “Teaching Three-Dimensional System-in-Package Design Automation in 
a Semester Course”，向與會學者分享我們在三維系統封裝設計自動化的教學研究成
果，獲得很多學者的迴響。 
 
二、與會心得 
 
DAC 研討會共舉行五天，涵蓋的領域甚廣，除了我們本身作品展示之外，我們
亦利用空檔聆聽參觀廠商展示區，瞭解目前 EDA 的新產品與新技術。在這次的
University Booth 展覽當中，有很多學者趨前來詢問，我們也與不同國家的專家共同
探討增進之處，可以說是獲益良多。尤其是在展場中看到來自台灣的廠商 SpringSoft
與 TSMC，也可見出我們國家電子產業的競爭力。 
MSE 研討會強調微電子系統教育 (Microelectronic Systems Education)，透過論
文發表與會場互動，我們向與會學者分享我們在三維系統封裝設計自動化的教學研
究成果，也瞭解其他學校在教學上的創新作法。整個會議下來，我們獲得許多寶貴
的經驗及觀點，對未來的教學研究有很大的助益。 
 
三、建議 
 
感謝國科會的補助，使我得以順利至美國加州聖地牙哥參加 DAC 及 MSE 這兩
個重要之國際會議。在此致上十二萬分之謝意。 
 
四、攜回資料名稱及內容 
 
1. MSE-2011 論文集隨身碟一份 
 
五、其他 
以下為與會相關照片。 
 
 4
國科會補助專題研究計畫項下出席國際學術會議心得報告 
                                   日期： 99  年  9 月 30  日 
一、參加會議經過 
 
今年  ASPDAC TPC Meeting 及 ASPDAW (Asia and South Pacific Design 
Automation Workshop) 研討會，是在韓國仁川 Ramada Songdo Hotel 舉行。本人於 9 
月 9 日搭乘長榮班機前往韓國仁川， 於 9 月 10 日參加 ASPDAC TPC Meeting (本
人屬於 TPC 中的 Timing, Power Thermal Analysis and Optimization Sub-committee) 
進行 paper selection，並於 9 月 11 日參加 ASPDAW (Asia and South Pacific Design 
Automation Workshop) 研討會。其中，本人於 ASPDAW (Asia and South Pacific 
Design Automation Workshop) 研 討 會 進 行 一 篇 論 文 發 表 ， 題 目 為 
“Critical-PMOS-Aware Clock Tree Design Methodology for Anti-Aging Zero Skew 
Clock Gating”。除了論文發表之外，本人亦與參加 ASPDAW  (Asia and South Pacific 
Design Automation Workshop) 研討會之國際 EDA 領域學者有深入的互動討論。 
 
計畫編號 NSC 97 － 2221 － E － 033 －053 －MY3 
計畫名稱 時鐘閘控制電路之高階合成 
出國人員
姓名 黃世旭 
服務機構
及職稱 中原大學電子工程學系 
會議時間 98年 9月 10日至 98 年 9 月 11 日 會議地點 韓國仁川 
會議名稱 
(中文)  
1. 亞州南太平洋設計自動化研討會議程委員會會議及研討會  
(英文)  
1. ASPDAC (IEEE Asia and South Pacific Design Automation 
Conference) TPC (Technical Program Committee) Meeting and Workshop 
發表論文
題目 
(中文) 抗老化零時序差異時鐘閘之重要 PMOS 預知時鐘樹設計方
法 
(英文) Critical-PMOS-Aware Clock Tree Design Methodology for 
Anti-Aging Zero Skew Clock Gating 
University Booth 
Design Partitioning for 3D IC 
Hua-Hsin Yeh, Wen-Pin Tu, Shih-Hsu Huang, and Wei-Kai Cheng 
Department of Electronic Engineering, Chung Yuan Christian University, Chung Li, 
Taiwan, R.O.C. 
 
 
ABSTRACT 
Three Dimensional Integrated Circuits (3D ICs) are designed in order to have 
better performance and yield. Through-Silicon-Vias (TSVs) are used to connect a 
signal that crosses adjacent layers. In this demonstration, we present a tool to partition 
an integrated circuit with the objective to minimize both the number of TSV and chip 
area. Experimental results show that our program can partition a circuit with small 
number of TSVs in a short time. For the case of the largest test circuit with 85013 
cells, after partitioning into 5 layers, the number of TSVs is only 142 and the average 
percentage of area overhead is only 0.1%. Therefore, our tool does work well in 
practice. Besides, it should be mentioned that, our approach has been evaluated in the 
2009 Taiwan IC/CAD contest (which is held by Ministry of Education, Taiwan). In 
the evaluation report of IC/CAD contest, our program receives the highest score 
among all the teams (note that the score is evaluated based on the combination of the 
number of TSVs, the chip area, the run time, and the memory usage).  
The introduction to our tool can be found through the video link: 
http://www.youtube.com/watch?v=e9Vr_JqJ9EM 
 
INTRODUCTION 
    In the Integrated Circuit design era with the advancement of manufacture 
technology, more cells of heterogeneous technologies may be stored in one chip. And 
as minimum feature size is scaled down and chip size increases, interconnect delays 
start to dominate the chip performance. Three Dimensional Integrated Circuits (3D 
ICs) technology is to stack multiple device layers into a monolithic chip [1][2]. It has 
several advantages listed as follows: 1) higher integration density: it can place more 
  
   Figure 1: TSVs for layer interconnection. 
3. TSV_LAND: the lower layer of a connection needs a landing pad for contacting 
each TSV of the upper layer and the size of the landing pad must be larger than 
TSV_CELL for alignment by at least 2 or 3 um, in general. Since the TSV_LAND 
is connected to the top metal layer, we assume that it will not affect the devices that 
are under it and its area is not counted. 
The objective is to minimize both the total number of TSV cells and the chip area. 
Our tool is based on the improved FM Heuristic algorithm.  
 
EXPERIMENTAL RESULTS 
The results after partitioning show the percentages of area overhead of all 
circuits are small. The average percentage of area overhead is only 3.3%. It means the 
area distribution of each layer is uniform and the chip space utilization rate is 
efficient. 
 
Cell 
number 
Layer 
Memory 
(byte) 
Runtime
(Sec.)
# 
TSV
Total 
Area 
Chip 
Area 
Area 
Overhead 
Average
case1 6291 4 20M 5.3 663 209511 221068 5.5% 
case2 85013 5 135M 193 171 1411368 1412973 0.1% 
case3 9155 3 24M 7.3 501 271945.5 283519.5 4.3% 
3.3%
 Total Area = the summation of each layer area 
 Chip Area = the largest area of each layer*the number of layers 
 
Teaching Three-Dimensional System-in-Package 
Design Automation in a Semester Course 
 
Shih-Hsu Huang, Wen-Pin Tu, Hua-Hsin Yeh, and Chun-Hua Cheng 
Department of Electronic Engineering 
Chung Yuan Christian University 
Chung Li, Taiwan, R.O.C. 
{shhuang,g9802602,g9902603,g9402601}@cycu.edu.tw
Abstract—In recent years, three-dimensional (3D) system-in-
package (SiP) has been widely recognized as a cost-effective 
alternative to system-on-chip (SoC). However, successful 
adoption of 3D SiP requires modifications to existing electronic 
design automation (EDA) tools to enable 3D SiP designs. Our 
previous courses focus on SoC design flow. Therefore, in our 
department, we develop a new course to offer students the 
concepts and experiences for 3D SiP design automation within a 
semester (18 weeks). Our teaching materials cover the overall 
3D SiP design flow from front-end to back-end. Furthermore, 
during the course, students need to implement five computer-
aided-design (CAD) tools for 3D SiP design automation. At the 
end of the semester, the evaluation of the course by students is 
very positive. Moreover, our students used the topic of 3D SiP 
design automation to participate in Taiwan IC/CAD contest, 
which is a national contest hosted by Ministry of Education of 
Taiwan, and won the first prize awards in recent two years. 
Keywords—electronic design automation, computer-aided 
design, three-dimensional integrated circuits (3D ICs), course 
development, and teaching experience. 
I. INTRODUCTION 
System-in-package (SiP) [1-3] is defined as a combination of 
multiple active electronic components of different functionalities, 
assembled into a single unit that provides multiple functions 
associated with a system. Recent progress in process and packaging 
technology makes it possible to vertically stack multiple active 
electronic components. This technique is referred to as three-
dimensional (3D) SiP. 
As integrated circuits keep shrinking, interconnection and 
packaging technologies are also required to keep up. In recent years, 
3D SiP is gaining a lot of interests as a viable solution to maintain 
the pace of system demands on scaling, performance, and 
functionality. The main reason is that 3D SiP has the following 
advantages over system-on-chip (SoC): (1) improved performance 
and reduced power consumption due to the reduction of interconnect 
length; (2) higher packing density; and (3) ability for heterogeneous 
integration. Therefore, 3D SiP has been recognized as a cost-
effective alternative to system-on-chip (SoC). For example, in [4], 
3D SiP technique has been successfully used in wireless product 
development. 
Since 3D SiP is far different from SoC, successful adoption of 
3D SiP requires modifications to existing electronic design 
automation (EDA) tools. Therefore, the research on 3D SiP design 
automation has become very active in recent years. However, for 
students, 3D SiP design automation is an advanced research topic. It 
is difficult to enter this research area without suitable guidance. 
EDA is one main research area of our department (Department 
of Electronic Engineering). However, our previous courses only 
focus on SoC design flow. To guide fresh graduate students to enter 
the research area of 3D SiP, we are motivated to develop a new 
course. Our objective is to offer students the concepts and 
experiences for 3D SiP design automation within a semester (18 
weeks). As a result, from this course, students may have a broad 
overview on challenges and opportunities in 3D SiP design 
automation. Our course contents are summarized below. 
(1) We introduce the overall 3D SiP design flow from front-end to 
back-end. Compared with our previous courses, we focus on the 
necessary modifications to existing EDA tools to enable 3D SiP 
designs (i.e., the difference part between 3D SiP and SoC). 
(2) We give students four project works. In these project works, 
students need to implement four computer-aided-design (CAD) tools, 
which are required to solve different 3D SiP design automation 
problems at different design stages. 
This course has been taken two times in our department in recent 
two years. At each time, the evaluation of this course by students is 
very positive. We also encouraged our students to participate in 
Taiwan IC/CAD contest, which is a national contest hosted by 
Ministry of Education of Taiwan. Our students developed CAD 
tools related to the topic of 3D SiP design automation and won the 
first prize awards in recent two years.  
II. BACKGROUND 
Our department has five faculties involved in EDA researches. 
Therefore, our EDA education program offers many courses to 
cover almost all typical EDA topics, including SoC Design 
Techniques (3 credits), CMOS VLSI Circuit Design (3 credits), 
Introduction to EDA (3 credits), Computer Algorithm (3 credits), 
Logic Synthesis (3 credits), VLSI Verification (3 credits), Integrated 
Circuit (IC) Implementation (3 credits), and IC Testing (3 credits). 
Although these courses are elective courses for graduate students, 
the advisors will guide their graduate students to elect suitable 
courses for their researches. 
In recent years, due to the trend of 3D SiP designs, we are 
motivated to add 3D SiP design automation into our EDA education 
program. One possibility is to enhance the existing courses. For 
example, we may mention 3D SiP design automation in the course 
Introduction to EDA, we may discuss 3D SiP testing in the course 
IC Testing, and so on. However, we find there are many 3D SiP 
materials to teach students. Due to time limit, we cannot discuss the 
details in the existing courses. To emphasize the importance of 3D 
SiP designs, we decide to develop a new course. In addition to the 
support of our department, our new course is also financially 
supported by both Advanced SoC Human Resource Development 
Program of Ministry of Education of Taiwan, and College of 
978-1-61284-639-2/11/$26.00 ©2011 IEEE 52
number of layers and perform the corresponding layer assignment in 
order to minimize the cost.  
To evaluate the cost, there is a demand to provide a cost model 
for the students. Actually, in recent year, there have been some 
attentions to the cost analysis of 3D IC [7,8]. However, these cost 
models are too complex for students to implement. Therefore, in this 
project work, to simplify the problem, we use a reduced cost model 
as shown in Figure 2. The process information used in Figure 2 is 
given to students as an input. Note that this reduced cost model is 
also adopted in Taiwan IC/CAD contest, which is a national contest 
hosted by Ministry of Education of Taiwan. 
C. 3D IC Placement for Via Count Minimization 
A 3D IC may be composed of several blocks. Each block may 
include several components, which include combinational circuit, 
sequential circuit, memory circuit, and so on. A 3D IC floorplan is 
shown in Figure 3. The solid line rectangle represents a block. 
Within a block, dotted lines are used to separate four components. 
The number represents the number of layers of each component. 
Between two adjacent components, if their numbers of layers are 
different, they require have a via to connect to each other. 
The input is a 3D IC placement. The output is also a 3D IC 
placement. The objective is to minimize the number of vias. Note 
that, for each block, only two transformation methods are allowed: 
one is to rotate the block as shown in Figure 4(a), the other is to flip 
the block as shown in Figure 4(b). For details, please refer to [9]. 
Figure 3 gives an example. Figure 3(a) is the initial placement, in 
which the number of vias is 16. Figure 3(b) is the best placement, in 
which the number of vias is only 5. 
 
                      (a)                                                     (b) 
Figure 3: (a) Initial placement (b) New placement. 
 
                      (a)                                                     (b) 
Figure 4: (a) Rotate the Block (b) Flip the Block. 
D. Power/Ground Network Analysis And Synthesis for 3D IC 
In deep submicron era, power/ground distribution analysis 
becomes a necessary step in ensuring the reliable operation of a 
design at its intended speed. Faster switching frequencies and 
thinner wires with a lower supply voltage increase the possibility of 
function failures due to an excessive voltage drop. Typically, a 5% 
voltage drop in the supply voltage of a gate can cause a 15% 
increase in the gate delay. This implies that performing both timing 
and power analyses becoming essential in 3D IC. The design of a 
power distribution network is to achieve excellent voltage regulation 
in the power demand across the 3D IC chip [10]. 
To simplify the problem, we use a resistive circuit [11] to model 
the power/ground network. Figure 5 gives a resistive circuit example 
for the power network a three-layer 3D IC. The R values correspond 
to the resistances of interconnects and vias. The node voltages are 
designated as Vi,j, where i =1, 2, …m  and m is the number of layers, 
and j=1, 2, …n and n is the number of nodes in a particular layer. 
Based on this resistive circuit, we cam use nodal analysis to find the 
node voltages in the power network of 3D IC. 
 
Figure 5: Resistive circuit to model 3D power/ground network. 
In order to simplify the analysis of the given resistive circuit, we 
flatten the resistive circuit shown in Figure 5. The resulting circuit is 
displayed in Figure 6. 
Figure 6: Flatten resistive network. 
 
To determine the node voltages, we can apply the nodal analysis 
derived from Kirchhoff's circuit laws. Figure 7(a) takes a portion of 
Figure 6 to demonstrate the nodal analysis. And the KCL equations 
are listed like Figure 7(b). Then, the voltage of each node can be 
calculated. 
 
(a)                                          (b) 
Figure 7: (a) Nodal analysis (b) KCL equations. 
The inputs include the followings: 
(1) Floorplan of blocks at each layer. 
(2) Power consumption of each block.  
(3) Process information (TSV resistance and unit square resistance). 
(4) Voltage drop constraint. 
The output is an optimized power/ground network. Our 
objective is to minimize the wiring area under voltage drop 
constraint. The students are encouraged to develop their own 
algorithm to solve this problem. 
V. EVALUATION RESULTS 
This course has been taken two times in our department in recent 
two years, including the semester of year 2009 and the semester of 
year 2010. This course is listed as a graduate course. In the semester 
of year 2009, 26 students enrolled this course; in the semester of 
54
----- Original Message -----  
From: "UBOOTHDAC2011" <uboothdac2011@easychair.org 
To: "Shih-Hsu Huang" <shhuang@cycu.edu.tw 
Sent: Monday, May 09, 2011 8:21 PM 
Subject: UBOOTHDAC2011 notification for paper 4 
 
 
Dear Shih-Hsu Huang, 
 
I am delighted to inform you that your submission has been accepted for  
presentation at the ACM 
SIGDA University Booth at DAC 2011.  Congratulations! 
 
This email contains instructions regarding participation in this year's  
University Booth.  If you are a past 
visitor and/or a participant of the University Booth, please be wary of  
the changes in this year's format. 
Unlike previous years when the booth was located on the exhibition floor,  
this year's booth is located by 
the entrance (1st floor in San Diego Convention Center).  Please review  
the instructions carefully: 
 
1.  DEMO 
 
 The focus of the University Booth is on providing an opportunity for the  
 university community to 
 demonstrate EDA tools, design projects, and instructional materials. The  
 video submissions are intended 
 to support your technology demonstration and not replace it.  Please be  
 prepared to showcase your 
 work for the visitors at the booth. 
 
 2.  ATTENDANCE AND SCHEDULE 
 
  The booth schedule, including the demo time slots, will shortly be  
 available on the University Booth 
 website.  The booth will be open Tuesday and Wednesday and presentation  
 time slots for each group 
 (http://www.sigda.org/ubooth).  If you have any questions, please feel  
 free to contact us. 
 
 Thank you and we look forward to seeing you at DAC! 
 
 Baris Taskin 
 University Booth Coordinator 
Soheil Ghiasi, Matin Hashemi and Volodymyr Khibin 
  
12:30-2:00pm:          Lunch 
  
2:00-3:30pm:            Session 3 : Posters  
Session Chair: Matt Guthaus, University of California at Santa Cruz 
  
What to Read? With Whom to Work? Where to Publish? - Scientific Techniques for Organizing and Conducting Engineering 
Research 
Jong Hoon Ahnn and Miodrag Potkonjak 
  
Teaching low voltage electronics: the case of the rectifier circuit 
Adilson Jair Cardoso, Carlos Galup-Montoro and Márcio Cherem Schneider 
  
A Bottom-up Approach to Digital Design with FPGA 
Giuliano Donzellini and Domenico Ponta 
  
A Hole in One: A Project-Based Class on Mechatronics 
Gabriel Elkaim 
  
Introducing Hardware Emulation to the ECE Curriculum 
Mark Faust 
  
Versatile March Test Generator for Hands-on Memory Testing Laboratory  
Jean-Marc Galliere and Luigi Dilillo 
  
Puzzle Solver Accelerators Make Excellent Capstone Design Projects 
Soheil Ghiasi, Matin Hashemi and Volodymyr Khibin 
  
An Undergraduate Embedded Systems Project 
John Greco and John Nestor 
  
FPAA chips and tools as the center of an Design-Based Analog Systems Education 
Paul Hasler, Craig Schlottmann and Scott Koziol 
  
Teaching Three-Dimensional System-in-Package Design Automation in a Semester Course 
Shih-Hsu Huang, Wen-Pin Tu, Hua-Hsin Yeh and Chun-Hua Cheng 
  
Creating a Mixed-Signal Test and Product Engineering Course 
Tina Hudson, Bryan Copeland and Deidrick Solomon 
  
Learning Nanotechnology Through Crossbar-Based Architecture and Carbon Nanotube (CNT) FETs 
Inseok Jung, Elizabeth Kim and Minsu Choi 
  
Novel knowledge module on fusion of logic and memory to undergraduate students  
D. Karunaratne, S. Rajaram, K. Kusmierek, P. De and S. Bhanja 
  
The effects of time-compressed speech with visual supporting materials and learner pace control on learning achievement 
Eunok Kim and Janghyun Park 
  
From RTL to GDSII: An ASIC Design Course Development using Synopsys University Program 
Jianchao Lu and Baris Taskin 
  
Music Synthesizer for Digital Logic Design Course 
Julius Marpaung, Louis Johnson, Sohum Sohoni and Sunilkumar Lakkakula 
  
Logic Design as an Entry Point for Non-engineers: Increasing Diversity in Microelectronics Education and Research 
Ani Nahapetian 
  
Instructional Design with Practical Problems Using Hardware-in-the-Loop 
Prawat Nagvajara, Kevin Cunningham and Swetha George 
  
HDL Coding Guidelines for Student Projects 
John Nestor 
  
Introducing MicroBlaze as an Infrastructure for Performance Modeling 
Fadi Obeidat and Robert Klenke 
The functionality of the swarm arises from connections of devices, leading to a convergence between Moore’s and Metcalfe’s 
laws, in which scaling refers not any longer to the number of transistors per chip, but rather to the number of interconnected 
devices.  Enabling this fascinating paradigm – which represents true wireless ubiquity – still requires major breakthroughs on a 
number of fronts. Equally important is the question of how to educate and train students with the broad background necessary 
to cope with the complexity of these emerging systems. This presentation will present some of perspectives on how this may 
be accomplished. 
 
Biography: 
Jan Rabaey received his Ph.D degree in applied sciences from the Katholieke Universiteit Leuven, Belgium. After being 
connected to UC Berkeley as a Visiting Research Engineer, he was a research manager at IMEC, Belgium. In 1987, he joined 
the faculty of the Electrical Engineering and Computer Science department of the University of California, Berkeley, where he 
now holds the Donald O. Pederson Distinguished Professorship. From 1999 until 2002, he served as the Associate Chair of 
the EECS Dept of UC Berkeley. He is currently the scientific co-director of the Berkeley Wireless Research Center (BWRC), 
as well as the director of the FCRP Multiscale Systems Research Center (MuSyC). 
 
He is the recipient of a wide range of awards, amongst which IEEE Fellow, the 2008 IEEE CAS Society Mac Van Valkenburg 
Award, the 2009 European Design Automation Association (EDAA) Lifetime Achievement award, and the 2010 SIA University 
Researcher Award. 
 
His research interests include the conception and implementation of next-generation integrated wireless systems. 
 
Prof. Rabaey serves on the technical advisory board of a range of companies and research institutes focused in the areas of 
design automation, semiconductor intellectual property and wireless systems.  
  
  
  
  
Workshop 
 Turning Great Ideas into Educational Research 
Tina A. Hudson 
Rose-Hulman Institute of Techology 
  
 
Abstract: 
Everyone attending this conference has some great ideas for improving student learning and/or student perception in the 
microelectronics area. However, not everyone knows how to turn these great ideas into publishable research. In my 
experience as an associate editor for Transactions on Education, I have found three common difficulties with which authors 
struggle in producing journal quality work: (i) tying good ideas to the existing literature, (ii) sufficiently describing how the good 
ideas are being used in the educational setting and (iii) assessing the degree to which good ideas improve student 
performance and/or perception. In this workshop, we will discuss these common difficulties and methods to address them. 
Small group discussions will allow attendees to apply these methods to their own work. 
  
Biography: 
Tina Hudson received her Ph.D. degree in Electrical Engineering from Georgia Institute of Technology with a specialization in 
integrated circuit design. Upon completion of her degree, she went to Rose-Hulman Institute of Technology, where strong 
undergraduate teaching is expected and well rewarded.  After attending the National Science Foundation “Engineering 
Scholars Workshop” in 2000, she became committed to applying educational research techniques to engineering education. 
Since then, she has consistently produced publishable work at the conference and journal level and given on-campus 
workshops for RHIT colleagues helping new-hires learn the ropes for educational research. By reviewing many articles for 
educational conferences and journals, including being the associate editor for two special issues of Transactions on 
Education, she has seen many of the common mistakes that prevent good ideas from being publishable work.  
 
  
  
10 Miroslav Velev Aries Design Automation, USA 
mvelev@gmail.com  
Efficient SAT Methods for Solving of Permutation Problems with Constraints 
 
11 Massimo Poncino Politecnico di Torino 
massimo.poncino@polito.it 
Leakage- and aging-aware Cache Architectures 
 
12 Ing-Jer Huang 
National Sun Yat-Sen University 
ijhuang@cse.nsysu.edu.tw  
A Trace-Capable Instruction Cache for Cost-Effective Real-Time Program Trace 
Compression in SoC 
 
13 Fedor G. Pikus Mentor Graphics Corporation fedor_pikus@mentor.com 
Using Machine Learning Systems for Layout Analysis - Do Learning Systems 
Actually Learn? 
 
14 Pan, David University of Texas, Austin.  
dpan@ece.utexas.edu  
Design for Manufacturability & Reliability in TSV-based 3D-ICs 
97 年度專題研究計畫研究成果彙整表 
計畫主持人：黃世旭 計畫編號：97-2221-E-033-053-MY3 
計畫名稱：時鐘閘控制電路之高階合成 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 2 2 100% 
於本學年度 (99 
學年度) 有 2 篇
論文被 SCI 期刊
接受 
研究報告/技術報告 1 1 100%  
研討會論文 1 1 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 4 4 100%  
博士生 1 1 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
