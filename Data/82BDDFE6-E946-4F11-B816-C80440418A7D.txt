 2 
一、中文摘要 
網安產品的複雜度愈來愈高，內部測試結果經常無法符合使用者端的實際狀況，在使用者端
可能會發生一些如: 誤擋、當機、效能低落等沒有在內部測試時發現的問題，歸究其原因，
便是測試流量不夠真實所造成。解決這樣的問題，可利用流量錄製及播放的技術，到使用者
端錄製該點的流量，將流量帶回測試部門內部播放出來對產品進行測試。我們在此計劃中加
強了播放技術: 可以支援 NAT模式下的待測物、搭配效能測試、以及粹取攻擊流量進行播放
這個萃取攻擊流量的系統主要有三個重點，第一，本系統利用播放錄製的流量到入侵探測和
防護系統來取得警示紀錄。第二，根據警示紀錄從真實流量中找出令入侵探測和防護系統發
出警示的最重要封包，藉由前兩個重點，有相同網路特徵值的封包集合則稱為一個網路攻擊
連線。然而，一個網路攻擊可能會有多個來源，或者一個來源卻有多條連線，因此，本研究
經過分析觀察後設計了第三個重點。第三個重點是藉由內容相似度比對來找出多個來源的攻
擊。透過萃取攻擊流量系統所取得的 83%攻擊是不容易受外在影響而變化的，在低變化量攻
擊中有 71%的攻擊是可被驗証為完整且無雜質的。 
 
關鍵詞: 網路安全、弱點偵測、網路攻擊、流量萃取、內容相似度比對 
二、英文摘要 
There are more and more conflicts happened as the in-lab testing results can not reflect what 
end-users feel in their daily life. They may suffer from the device crash, false-positive or 
false-negative situation, and bad performance. These problems come from the testing traffic is not 
“real” enough in the lab. The best choice to this case is “capture and replay” real traffic. That 
means bring a machine to the real sites to record their daily traffic then bring it back and resend the 
captured traffic onto the network. We enhance traffic replay tool with: support for NAT mode DUT, 
Performance testing, and attack traffic replay. There are three main points in the attack traffic 
replay system. The first thing to confront is attacks identification. This system is replaying the 
traffic to IDP products to identify attacks because the IDP products can support the rich attack’s 
identifications. Second, find out the critical packet and others. Before extract attacks, find out the 
critical packet is necessary because we must know what kinds of attack should be extracted. 
Although those two steps can find out the packets that have the same network characteristic and 
merge to a set as a connection of attacks by leverage the logs of IDP products, attacks of multi 
attackers or multi connections might not extractable because the network characteristics are not the 
same. Therefore, this system calculates the similarity of packets to find out the attacks because 
some attacks, i.e. DDoS attacks, have the same or similar packet payload. This work also uses the 
variation of the extracted attacks to find out the attacks of the multi connections because the 
 4 
area. We think three features are wroth being developed: NAT mode DUT, Performance testing, 
and attack traffic replaying. For the replay of attack traffic, we have to 「extract」 the attack 
sessions from the captured traffic. There several benefits when supporting ASE. First, the extracted 
attack traffic can be used to do the test of「Attack Recognition」in IPS. Second, we can replay the 
useful traffic only to save a lot of time. Third, provide a variety of background traffic to do the 
performance testing in a realer way. Finally, we can because the partial attacks emulated by Nessus 
can only indicate possible security breaches but does not know whether a real attack will harm or 
not, this work proposes to extract the complete episode of attacks to make sure the system 
vulnerability. For this goal, the real traffic is recorded and then replayed to the IDP products to 
extract the complete episode of attacks. Trivially, the logs of the IDP products can help this work 
to find out the connection of the detected attacks. However, the attack may have the multiple 
connections. All related connections of the attack can not be all extracted by the logs of the IDP 
products because the IDP products only alarm and log the most important connection. Therefore, 
this work proposes an algorithm to extract multi connections from the attack traffic. We named the 
multi connections extraction algorithm as the session extraction algorithm. 
文獻探討 
I. Attack types 
This work collects 83 attacks as the samples for the extraction system. These attacks can be 
divided into three types according to the number of attackers and the number of connections per 
attack, as presented in Table 1. We assume only one target is in each attack. An attack of the first 
type involves one attacker and a single connection. An example is the MySQL Authentication 
Bypass Exploit. This attack can login in a MySQL database without the password. An attack of the 
second type involves one attacker and more than one connection. An example is the Blaster worm, 
which establishes three connections when it tries to attack a target. An attack of the third type 
involves multiple attackers and a single connection from each attacker. A DDoS attack belongs to 
this type. This observation is helpful to build an extraction system [3], [4]. 
 
Number of attackers Number of connections per attack Example 
1 1 MySQL Authentication Bypass Exploit 
1 N Blaster worm 
N 1 DDoS 
Table 1: Three types of attack definitions 
研究方法 
 6 
extraction algorithm, Table 3 shows the definition of the components in session extraction 
algorithm. The algorithm consists of five steps as follows. Step (i), (ii), (iii) and (v) are trivial 
works while the step (iv) is the essence of this work. 
Names Descriptions 
ipS  Source IP address 
portS  Source Port number 
ipD  Distance IP address 
portD  Distance Port number 
UdpTcp/  The TCP packet or UDP flag 
Payload  The content of the packet 
P  A TCP or UDP packet in the IP network. 
)( iPTuple  The five-tuple of a packet 
A  The anchor packet of the attack 
PDA(Possible DoS Attacks) 
The data structure that store the packets could be the DoS 
attacks 
PNDA(Possible Not DoS attacks) 
The data structure that store the packets could be not the 
DoS attacks 
Table 3: The definition of the components in session extraction algorithm 
(i) Replay real traffic to IDP products by Tcpreplay. 
This algorithm uses the domain knowledge of IDP products, including the well-known Open 
Source tool, Snort [5]. A IDP product illustrate what attacks have happened with its logs. 
(ii) Find out anchor packets by the first-pass scan. 
This step finds out anchor packets, the critical packets that IDP products alarm when 
receiving them. There are two tables used herein. One is the alarm log table , which records the 
alarms of attacks from the replay of attack traffic. The other is the replay log table, which records 
the time when Tcpreplay replays each packet.( The timestamps from the replay log table are used 
to mark the attack types by looking for the relation from the alarm log table. The replay log table is 
then compared with the alarm log table to identify the attack packets.) Time synchronization could 
be a problem between the replay system and the IDP products. Even if the time has been 
synchronized, IDP products may not log the times accurately. Therefore, the five-tuple information 
is used herein. Many IDP products also log the five-tuple information of an attack (some may 
record fewer than five tuples). The five-tuple information and the timestamp from the alarm log 
table and the replay log table can locate the anchor packets in the real traffic. 
(iii) Find out the association among attack packets within the same connection by the second-pass 
scan. 
 8 
from the attacker and go to the target and those in the opposite direction. The others are simply 
dropped. This step intends to distinguish the attacks that possibly have one attacker from those that 
are possibly DDoS attacks. 
The algorithm continues to watch the next packet until the end. The algorithm returns the 
packet count in the possible DDoS attack buffer. The attack might be a DDoS attack if the count is 
larger than 200, and might be a 1-1 attack otherwise. Figure 2 shows the flowchart of the 
algorithm.The algorithm can be written as some formulas and pseudo code as follows. We defined 
the packet P  is the set of five-tuple and payload. The )( iPTuple is the five-tuple of the packet i, 
1³i . The anchor packet A  is the set of the five-tuple and payload that the IDP products make 
alarm when they receive it. 
},/,,,,{ PayloadUdpTcpDDSSP portipportip= ,      (2) 
   ))(/),(),(),(),(()( iiportiipiportiipi PUdpTcpPDPDPSPSPTuple = ,   (3) 
Therefore, the session extraction problem turns into a problem to find out the set of packets that 
have the high similarity of payload with anchor packet A  or the same source IP address and 
distance IP address with anchor packet A . Assume the x is the sequence number of anchor packet 
in the all packets. The session extraction algorithm can be described as follow.  
The pseudo code of the session extraction algorithm 
( )
if of }//end
PDNA;return      
}else{
PDA;return      
){200t_numberDDos.packe ( if
for of //end}
if of End // }     
if of End}//             
;PNDAPNDA            
)){).().(&& ).().(                   
||))).().(&& ).().(( ( if            
if of End}//             
;t_numberDDos.packe            
;PDAPDA            
80%){ .,.y(Similarit if            
){).().( || ).().( ( if     
{ allFor 
;
,Given 
0;t_numberDDos.packe
attack DoS not the  possible packets, ofset   //a;PNDA
attack DoS  thepossible packets, ofset  a // ;PDA
³
=
¹=
¹=
++
=
³
==
=
=
=
=
i
ipxipiipxipi
ipxipiipxipi
i
xi
ipxipiipxipi
x
P
SPTupleDPTupleDPTupleSPTuple
DPTupleDPTupleSPTupleSPTuple
P
PayloadPPayloadP
DPTupleDPTupleDPTupleSPTuple
i
PA
x
U
U
f
f
 
(v) Replay the extracted attack session to IDP products to verify whether the same logs are 
generated. If it is true, the extraction is valid. 
Finally, we replay the extracted attack sessions to IDP products to verify the correctness of 
the extraction. The extracted session must cause the same alarms as the whole traffic was replayed 
to the same IDP product. If an IDP product cannot find the attack, the extraction is invalid. 
 10 
shows the accumulated number of the attacks of each variation by increasing. The 97% of the 
extracted attacks is less than 30% variation. The 30% variation could be easy to choose the attack 
size equal to the size that the most times in our experiment. But, there are also 3% of the extracted 
attacks could be hard to choose the result of the experiment because they had high variation.  
II. The completeness and purity of the session extraction system 
The definition of completeness and purity are as the same with the definition of similarity we 
used before. If the similarity of the extracted attacks and original attack equal to the 100%, we will 
say the extracted attack is completeness & purity. Otherwise, we will say the extracted attack is not 
completeness and purity. If the extracted attacks are different with the original attack, we will 
evaluate the completeness and purity rate (the evaluation of similarity). In our experiment, the 
extracted attacks of 0% variation are all completeness and purity. The max complete and purity 
rate of extracted attacks that less than 30% variation is 97.83%, the min rate is 74.77%, and the 
average rate is 89.58%. The reason of the extracted attacks that are not complete and pure is other 
connections between attacker and target, i.e. the attacker might also have normal http connections 
with target. Those normal connections between attacker and target have no association with attacks. 
If we transfer the IP of the original attacks in our experiment to another IP domain that are 
different with the mix traffic, the variation will become 0% and completeness and purity will equal 
100%. Therefore, we know the reason of the extracted attacks that are not complete and pure is 
other connections between attacker and target. 
 
 
 
 
 
 
 
 
Figure 3: The variation of extracted attacks   Figure 4: 0% < Variation < 30% 
 
 
 
 
 
 
 
Figure 5: The Variation = 0%       Figure 6: Variation > 30% 
nessus attack 3
0
5000
10000
15000
20000
25000
30000
35000
1 2 3 4 5 6 7 8 9 10
times
si
ze
(K
B
)
nessus attack 3
nessus attack 2
0
200
400
600
800
1000
1200
1 2 3 4 5 6 7 8 9 10
times
si
ze
(K
B
)
nessus attack 2
nessus attack 1
0
1000
2000
3000
4000
5000
6000
7000
1 2 3 4 5 6 7 8 9 10
times
si
ze
(K
B
)
nessus attack 1
0
52
78
95 97 97 98 100 100 100
0
20
40
60
80
100
120
0% 10% 20% 30% 40% 50% 60% 70% 80%
variation(%)
at
ta
ck
s 
(c
ou
nt
s)
 12 
主要發現或其他有關價值 廠商有更多的需求 需要再支援新的功能，包括 P2P流量
粹取、隱私性保護，已提出第二代計
劃，目前也審核通過。 
綜合評估 所需之功能有如進
度開發出來且實用
價值高，但廠商需
要更多的功能 
同上，已申請計劃，再加以開發、補
強。 
五、可供推廣之研發成果資料表 
□ 可申請專利  ▓ 可技術移轉                                      日期：95年 10月 13日 
國科會補助計畫 
計畫名稱：開放源碼測試工具: 再造真實網流量於內部實驗室環境 
計畫主持人：林盈達 教授 
計畫編號：94-2218-E-009-029 學門領域：資訊學門一 
技術/創作名稱 In-Lab Live Testing System - Attack Session Extraction 
發明人/創作人 林盈達、羅棨鐘、陳一瑋 
中文： 
這個萃取攻擊流量的系統主要有三個重點，第一，本系統利用播放
錄製的流量到入侵探測和防護系統來取得警示紀錄。第二，根據警
示紀錄從真實流量中找出令入侵探測和防護系統發出警示的最重
要封包，藉由前兩個重點，有相同網路特徵值的封包集合則稱為一
個網路攻擊連線。然而，一個網路攻擊可能會有多個來源，或者一
個來源卻有多條連線，因此，本研究經過分析觀察後設計了第三個
重點。第三個重點是藉由內容相似度比對來找出多個來源的攻擊。 
技術說明 
英文： 
The attack session extraction system has the three key points. First, the 
attack session extraction system is replaying the recorded traffic to IDP 
products to get alarm logs. Second, the attack session extraction system 
found out the critical packet that the IDP products make alarm by the 
alarm logs. The first and second key points of the attack session 
extraction system can find out the packets that have the same network 
characteristic and merge to a set as a connection of network attacks. 
However, a network attack maybe have many attackers or single 
attacker but multi connections. Therefore, this work analyzed the 
attacks and designed the third key point. The third key point is using 
the packet payload similarity to find out the attacks that have the multi 
attackers. 
