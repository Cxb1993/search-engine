this approach does not address and analyze the length 
of event time. Same event representation may stand 
for the different events with extremely different 
time lengths, which induce the loss of more accurate 
results of the mining. This project addressed this 
issue and explore different models and solutions. The 
project proposed two new hybrid models and the 
pattern mining algorithms into the concept of event 
length limit. Events in hybrid sequences will be 
divided or distinguished according to a given 
threshold, in order to enable a detailed exploration 
of the more frequent hybrid sequence of events. This 
project also handled progressive database and propose 
an effective dynamic hybrid temporal pattern mining 
algorithm. This study generated the synthetic 
databases, and also utilize the Taiwan Stock Exchange 
Capitalization Weighted Stock Index (TAIEX) and the 
U.S. Dow Jones Industrial Average (DJIA) as the major 
real testing data, to examine the proposed model and 
the feasibility and effectiveness of the algorithm. 
The project effectively addressed the problem of the 
hybrid events with different lengths, and enhance the 
performance of the dynamic hybrid temporal pattern 
mining. 
 
英文關鍵詞： Hybrid temporal pattern mining, sequential pattern 
mining, temporal pattern mining, pattern 
representation 
 
2 
 
國科會九十九年度專題研究計畫成果報告 
 
 
引進時間粒度及動態資料庫之混合時間樣式探勘 
Hybrid Temporal Pattern Mining with Time Grain and Dynamic Database 
 
計畫編號：NSC100-2221-E-126-016 
執行期限：100年08月01日 至 101年07月31日 
主持人：葉介山 jsyeh@pu.edu.tw 靜宜大學 資訊管理學系 
計畫參與人員：曹祥富、柯亘芸 靜宜大學 資訊管理學系 
 
 
【中文摘要】 
關鍵詞：混合時間樣式探勘、序列樣式探勘、時間樣式探勘、樣式表示式 
 
針對記錄事件發生時間點的單點型事件資料庫所進行探勘之序列樣式探勘及針對記錄事件的開始和
結束時間點的區間型事件資料庫所進行探勘之時間樣式探勘為近年來資料探勘領域中非常重要的研
究方向，其應用亦非常廣泛，例如：交易序列資料庫中的頻繁購買序列分析、DNA序列分析、股票交
易趨勢分析、圖書與影片借閱紀錄分析等。而樣式探勘亦被普遍運用於決策分析及未來事件之預測。 
 
2009年Wu與Chen學者提出了針對混合型事件的表示式和混合時間樣式探勘方法，然而該方法並沒有
針對事件發生之時間長度做更進一步的分析，因此，相同的事件表示式可能代表了時間長度極度不同
的樣式，因而喪失了更精確的探勘結果，本計畫主要將針對此一問題及缺失進行探討並提出不同的探
勘模型及解決方法。本計畫提出兩種全新的混合時間樣式探勘模型及演算法，導入事件發生長度限制
之概念，將混合型事件序列依給定之時間門檻值予以區分或切割，以便能詳細的探勘出更具可用性之
頻繁混合型事件序列。另外針對累進式資料進行探勘，提出有效的累進式混合型時間序列探勘演算
法。本研究除了將測試人工生成資料庫外，並使用台灣證券交易所編製的發行量加權股價指數(TAIEX)
及美國道瓊工業指數(DJIA)為主要的真實測試資料，檢驗所提出之探勘模型的可行性及演算法的效
能。本計畫有效解決時間長度不同之混合型時間序列探勘問題，並提升累進式混合型時間序列探勘之
效能。
4 
 
Han et al. developed an efficient Frequent Pattern Tree (FP-tree) based method, Frequent-Pattern 
Growth (FP-growth), for mining frequent patterns without candidate generation [22]. This approach scans 
the database only twice. 
Compared with AprioriAll algorithm, another bottom-up approach Generalized Sequential Pattern 
Algorithm (GSP) [6] does not transform the database but needs more database scans for support counting. 
Both of them suffer from the large number of candidates. To solve this problem, Sequential Pattern 
Discovery using Equivalence classes (SPADE) [7] divides the candidate sequences into groups so that each 
group can be kept in the main memory. Each sequence is represented by a list of pairs, indicating the 
positions of its occurrences in the database. 
To reduce the merging cost in SPADE, Sequential PAttern Mining (SPAM) [23] replaces the list 
representation with the vertical bitmap. However, SPAM is efficient only when the entire bitmaps are kept in 
the main memory. On the other hand, PrefixSpan [5], [9] distributes the customer sequences into partitions so 
that all the customer sequences in a partition support a common frequent sequence. 
2.2 Dynamic database 
Sequential pattern mining with an incremental database corresponds to the mining process where new data 
arrive with time. In practical applications, sequential pattern mining deals with a dynamic database, which 
not only adds new data to the original database but also removes obsolete data from the database. 
Sequential pattern mining with a static database finds sequential patterns in the database in which data do not 
change over time [1], [6], [9], [23], [24], [25]. Sequential pattern mining with an incremental database 
corresponds to the mining process where new data arrive with time (i.e., the sequences database is 
incremental) [10], [11], [26], [27], [28], [29]. In sequential pattern mining with a progressive database, new 
data are added into the database and obsolete data are removed simultaneously. Therefore, one can find the 
most up-to-date sequential patterns without being influenced by obsolete data. Sequential pattern mining with 
a static database and with an incremental database are both special cases of progressive sequential pattern 
mining [12]. Zhang et al. [30] proposed algorithms GSP+ based on static algorithms GSP and MFS (also 
derived by the same authors). They extended the progressive mining algorithm of Pisa from the previous 
concept of slide window to deal with a point-based pattern.  
3   Sequential Interval-based Pattern Mining 
Sequential interval-based pattern mining is discussed in this section. To resolve the problem of Allen’s 
ambiguous representation, this study proposes a new interval-based sequence representation and introduces 
the proposed algorithm, Starting Point & End Point Pattern First Algorithm (SP&EPPF), for mining all 
frequent interval-based patterns. 
3.1 Problem Definition 
The following paragraphs provide a formal definition of sequential interval-based pattern mining. 
6 
 
4   Progressive Sequential Interval-based Pattern Mining (PSIPM) 
Definition 7 (WOI): The WOI is a sliding window that continuously advances as time goes by and is a 
user-defined quantity. Using the static quantity transaction database, users can discover the complete set of 
up-to-date sequential interval-based patterns. 
  
The main concept of Bottom-Up Update Lattice (BUUL) Algorithm is to progressively update information 
of each interval-based sequence and each candidate sequential pattern in the database. We generated all 
sequential patterns after determining a frequent interval-based sequence. Subsequently, if the number of 
sequence IDs in a sequence list was larger than the minimum support number of sequences in the current 
WOI, the path from root to this node was output as a frequent sequential interval-based pattern. For every 
arriving transaction sequence, we inserted all combinations of elements into the PSIPM Lattice Tree. 
Therefore, this study proposes the Bottom-Up Update Lattice (BUUL) Algorithm for PSIPM. The detailed 
algorithm is shown in Fig. 1. 
 
Algorithm: BUUL Algorithm for PSIPM 
Input: TSDB: A set of interval sequences; L: lattice of interval-based patterns of TSDB; min_sup: minimum support; db+: 
additional interval sequences; WOI: window of interest;  
Output: S: all large interval-based patterns 
Method: 
1. db- = the set of interval sequences which will be removed from TSDB, with size eaual to |db- | = | TSDB + db+ | - WOI 
2. // update the lattice L  
3. for (k =1; Lk≠∅; k++) {  // Lk : the nodes of k-interval-based patterns in L 
4.   Sk=∅ 
5.   for each n in Lk{ 
6.       update(n);  // add SID supporting n.pattern in db+ ,  
7.               // and remove SID supporting n.pattern in db- 
8.       if(n.count==0) remove(n);  // remove node n from L 
9.       if(n.count>0) preserve(n);  // preserve node n in L 
10.       if(n.count >=min_sup *WOI)  Sk= Sk+n.pattern; 
11.   } 
12.   Lk+1 = level_gen (Lk); // generate Level (k+1) nodes from the nodes in Level k 
13. } 
14. return S= ∪Sk  //return all frequesnt sequential interval-based patterns 
8 
 
db+ set to 0, 2000, 3000, 4000, 5000, and 6000 to obtain sufficient frequent sequential interval-based patterns. 
The minimum support threshold was set to 2%. 
When the database changes, the AprioriAll-Like algorithm must rescan and find all up-to-date frequent 
sequential patterns. The BUUL algorithm uses the lattice tree to store frequent interval-based patterns. The 
interval-based lattice tree stores frequent interval-based patterns and sequences, and efficiently accumulates 
the occurrence frequency of every candidate interval-based sequential pattern simultaneously. The 
interval-based lattice tree reports the most up-to-date frequent sequential interval-based patterns to the user in 
every WOI, and immediately deletes obsolete data and patterns. 
1
10
100
1000
0 2k 3k 4k 5k 6k
db
+
T
o
ta
l 
ex
ec
u
ti
o
n
 t
im
e(
se
c)
(L
o
g
ar
it
h
m
ic
 S
ca
le
)
AprioriAll-Like
BUUL(Apriori-Like)
BUUL(AprioriAll-Like)
 
Fig. 3. Total execution time for PSIPM. 
6. Conclusions 
This paper proposes three algorithms, the SP&EPPF and the BUUL-based. The basic concept of the SP&EPPF 
algorithm is to divide the TSDB into db+ and db-, and subsequently use any of sequential pattern algorithms to 
determine all frequent patterns. Finally, we obtain all frequent interval-based patterns according to the concept of 
joining and pruning. The BUUL-based algorithm addresses the problem in which that the sequential interval-based 
pattern-mining algorithm must maintain the latest data in the progressive database, find the complete set of up-to-date 
sequential interval-based patterns, and rapidly delete obsolete data and patterns. The experimental results indicate the 
efficient performance of SP&EPPF and BUUL.  
References 
1. Agrawal, R., Srikant, R., 1995. Mining sequential patterns. In Proceedings of the 11th International 
Conference on Data Engineering (ICDE ’95), 3-14.  
2. Han, J., Kamber, M., 2006. Data Mining: Concepts and Techniques, Second ed. Academic Press, UK.  
3. Allen, J. F., 1983. Maintaining knowledge about temporal intervals. Communications of the ACM, vol. 
26, no. 11, 832-843.  
4. Wu, S. Y., Chen, Y. L., 2007. Mining nonambiguous temporal patterns for interval-based events. IEEE 
Transactions on Knowledge and Data Engineering, vol. 19, 742-758.  
10 
 
20. Agrawal, R., Imielinski, T., and Swami, A. N., 1993. Mining association rules between sets of items in 
large databases. In Proceedings of the 1993 ACM SIGMOD International Conference on Management 
of Data, 207-216.  
21. Agrawal, R., Srikant, R., 1994. Fast algorithms for mining association rules. In Proceedings of the 20th 
International Conference on Very Large Data Bases (VLDB’94), 487-499.  
22. Han, J., Pei, J., and Yin, Y., 2000. Mining frequent patterns without candidate generation. In 
Proceedings of ACM SIGMOD International Conference on Management of Data (SIGMOD ’00), 1-12.  
23. Aseervatham, S., Osmani, A., and Viennet, E., 2006. bitSpade: A Lattice-Based Sequential Pattern 
Mining Algorithm Using Bitmap Representation. In Proceedings of the 6th International Conference on 
Data Mining (ICDM), 792-797.  
24. Ayres, J., Gehrke, J., Yiu, T., and Flannick, J., 2002. Sequential pattern mining using a bitmap 
representation. In Proceedings of the 8th ACM SIGKDD International Conference on Knowledge 
Discovery and Data Mining (KDD ’02), 429-435.  
25. Han, J., Pei, J., Mortazavi-Asl, B., Chen, Q., Dayal, U., and Hsu, M.-C., 2000. FreeSpan: Frequent 
Pattern-Projected Sequential Pattern Mining. In Proceedings of the 6th ACM/SIGKDD International 
Conference on Knowledge Discovery and Data Mining (KDD ’00), 355-359.  
26. Cheng, H., Yan, X., and Han, J., 2004. INCSPAN: Incremental Mining of Sequential Patterns in Large 
Database. In Proceedings of the 10th ACM SIGKDD International Conference on Knowledge 
Discovery and Data Mining (KDD ’04), 527-532.  
27. Lin, M.-Y., Lee, S.-Y., 2004. Incremental Update on Sequential Patterns in Large Databases by Implicit 
Merging and Efficient Counting. Information System, vol. 29, no. 5, 385-404.  
28. Masseglia, F., Poncelet, P., and Teisseire, M., 2003. Incremental Mining of Sequential Patterns in Large 
Databases. Data and Knowledge Engineering, vol. 46, 97-121.  
29. Parthasarathy, S., Zaki, M.J., Ogihara, M., and Dwarkadas, S., 1999. Incremental and Interactive 
Sequence Mining. In Proceedings of the 8th ACM International Conference on Information and 
Knowledge Management (CIKM ’99), 251-258.  
30. Zhang, M., Kao, B., Cheung, D., and Yip, C. L., 2002. Efficient Algorithms for Incremental Update of 
Frequent Sequences. In Proceedings of the 6th Pacific-Asia Conference on Knowledge Discovery and 
Data Mining (PAKDD ’02), 186-197. 
 
 
 2 
三、考察參觀活動 
無  
四、建議 
無  
 
五、攜回資料名稱及內容 
A digital copy of the proceedings of the 2012 International Conference on Information Science and 
Technology 
 
六、其他 
    
 
 
100年度專題研究計畫研究成果彙整表 
計畫主持人：葉介山 計畫編號：100-2221-E-126-016- 
計畫名稱：引進時間粒度及動態資料庫之混合時間樣式探勘 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 0 0 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 1 1 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 1 1 100% 
Jieh-Shan Yeh*, 
Szu-Chen Lin, 
and Shueh-Cheng 
Hu, ＇＇OEOP: A 
Novel Algorithm 
for Periodic 
Pattern 
Mining,＇＇ 
International 
Journal of 
Hybrid 
Information 
Technology 
(IJHIT), vol. 5, 
no. 2, pp. 
187-192, April, 
2012. 
研究報告/技術報告 0 0 100%  
國外 論文著作 
研討會論文 1 1 100% 
篇 
Jieh-Shan Yeh*, 
Szu-Chen Lin, 
Shueh-Cheng Hu, 
and Shiuan-Yun 
Ke, ＇＇A Novel 
Periodic Pattern 
