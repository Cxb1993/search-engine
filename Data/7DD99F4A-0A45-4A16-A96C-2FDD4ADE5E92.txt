 
1. 
第一章、前言 
 
MMOG (Massively Multiplayer Online Game) 是一種可以支援上千人同時在一個虛擬遊戲
世界互動的遊戲類型。然而，開發一個 MMOG 的難度遠超過我們所想像，很多議題都是
遊戲開發者可能會遭遇到的，例如高效能的網路、分散式的技術、負載平衡等。同時，要
開發一個具有競爭力的遊戲，Time-to-Market 也是十分重要的考量。因此，MMOG 中介軟
體解決方案的需求大量增加，而 MMOG 中介軟體的研究也逐漸受到重視。 
 
因此在本計畫中，我們開發一個 MMOG Middleware，並將其中的經驗與其他人分享。一方
面，我們試圖解決開發 MMOG 所會遇到的共同問題。另一方面，我們嘗試的簡化設計遊
戲的 API 以減低開發 MMOG 的難度。除此之外，我們也保留彈性給開發者以部署各種不
同類型的遊戲在平台之上。 
 
本計畫前兩年主要在處理 MMOG 的基礎建設，研發出 DOIT (Distributed Organized 
Information Terra) 的主要核心中介軟體（包括有高效能網路引擎、永續資料存取元件、具
擴充性的 plugin 架構、開發管理、監控），以及一些簡易的示範程式，証明了 DOIT 是一
個可用的平台。第三年則鎖定在手持裝置的遊戲支援。 
 
本報告在第二章闡述此研究的目標，第三章進行文獻探討，第四章說明研究方法，第五章
進行結果討論，第六章會作個總結與說明未來展望及藍圖。 
 
 
第二章、研究目的 
 
MMOG (Massively Multiplayer Online Game) 是目前非常受歡迎的一種遊戲類型，其特色在
於可支援上千人同時在一個持續性的遊戲世界中進行遊戲。而隨著手持裝置遊戲市場的成
長，以及無線技術的進步，手持裝置上的 MMOG 不但可行也開始受到重視。 
 
開發一款巨量多人連線遊戲有非常多的議題需要考量，尤其手持裝置遊戲必須在數百種裝
置上運作，使得佈署與散佈 MMOG 更加困難。此外，手持裝置的應用程式容易受到周遭
環境，像是電信服務或是網路連線問題的干擾。這些都使得開發手持裝置多人連線遊戲倍
受挑戰。 
 
在本研究計畫中，我們提出一個考量 MMOG 與手持裝置遊戲議題的 MMOG 客戶端框架。
嘗試提供一個具有彈性且容易佈署的平台，並使傳統 MMOG 與手持裝置 MMOG 的結合成
為可能。 
 
 
3. 
3.2 Existing Online Game Platforms on Mobile Devices 
Both of MMOG and mobile game market has continued to grow over the past several years. 
Although there are some existing MMOG middlewares and mobile game platforms, most of them 
are commercial products and developed respectively. For commercial reasons, it’s hard to figure 
out the detail design by the public documents. In this section, we try to explore relevant features 
as many as possible. 
 
BigWorld Technology 
The BigWorld Technology Suite [7] is a complete MMOG solution. It provides a scalable, 
reliable, customizable and high performance server infrastructure that can handle million of 
players. For managing the development and live support of MMOG, it offers a management tool 
to handle cluster setting, view log and check the server status. The client engine integrates the 3D 
engine, APIs and a set of tools to build up and manage a MMOG world. Even the tools for 
content creation, map editing, and particle effect generation, the BigWorld Technology suite is 
covered as well. In addition, the BigWorld Mobile is a layer for mobile device to integrate with 
the full BigWorld online world. You can establish an individual mobile MMOG or build a mobile 
version game to play a minor part of existing online game. 
 
Ex Machina – Julius solution 
Ex Machina [8] provides a framework to create, deploy and manage multiplayer online games on 
mobile, web, broad- and narrowcast. Julius solution combines three platforms, Deus, IP United 
and Quiz Engine, to offer an end-to-end solution for commercial online games. It highlights 
several features to build up a multiplayer online game with back-end management system for 
payment, business model and in-game advertising. Each of the three platforms has its own duty in 
Julius. Deus is a platform and SDK which support massively multiplayer and location based 
gaming. IP United is a community gaming service that allows game providers to offer numbers of 
online games as part of their own portals and support the cross-game user service and player 
competition. Quiz Engine is based on Deus, integrates with IP United, and can create, edit, and 
configure multiplayer online quizzes, tests, puzzles and much more games for any device 
supported by Deus. 
 
GASP 
GASP (GAming Service Platform) [9][10] is an open source platform, under L-GPL license, for 
mobile multiplayer online game. GASP is implemented in pure Java and conforms the Open 
Mobile Alliance (OMA) Game Service specification. It uses the object-oriented communication 
to communicate between client and server over cellular phone network using HTTP. GASP server 
runs as a Apache Tomcat servlet and uses MySQL database for information storage. Client side 
 
5. 
第四章、研究方法 
 
In this chapter, we present the system overview of our framework that includes the three-tier 
architecture of the whole online service and the mobile client framework with several layers. 
Additionally, in the last subsection, we describe the development of game protocol in our system. 
 
4.1 Three-Tier Architecture Overview 
We believe, based on previous two years’ study and implementation, that the gateway-based 
model is better for multiplayer online game platform, especially for supporting the mobile device. 
To realize the objective of integrating with existing MMOG platform, we choose the DOIT 
platform as the fundamental three-tier framework. Since it is not a commercial product and 
provides abstract interfaces and flexible message protocol, the integration of different client 
platforms is feasible. 
 
Figure 4-1 Client-Gateway-Server Architecture 
Figure 4-1 shows the three-tier architecture. In server-side, the server clusters form the virtual 
world and handle the game logic and game world persistence. The virtual game world is divided 
into multiple regions and each server may contain zero to many regions. The game objects within 
one region share the same game context and can migrate between regions. The gateway in the 
middle layer is responsible for routing message from client to server. For mobile online games, 
the gateway can be designed to handle special issues related to mobile clients, such as user 
authentication, session pending and so on. Moreover, client-side users may use different 
platforms but the same protocol to communicate to the server. 
 
4.2 Mobile Online Game Client Architecture 
In order to satisfy the various game genres and requirement, an online game client framework 
 
7. 
and can be implemented with different network protocols. For example, we can provide HTTP or 
TCP/UDP implementation to accommodate different network supports of mobile devices. 
 
GameCenter Layer 
The GameCenter in the middle layer collects information from application and network layers to 
analyze the status of game and process game logic. As 錯誤! 找不到參照來源。 shows, there 
are three main components: Game Center, Message Dispatcher and Message Handler. The Game 
Center receives messages from Application Layer or Network Layer and passes them to the 
proper Message Dispatcher according to current game status. While the dispatcher gets the 
messages, it dispatches them to corresponding Message Handler. The handler performs the game 
logic and then the game presentation updates at the application layer.  
Listener
Game
Center
Online Mode
Message Send
Dispatcher
Application Layer
Network Layer
Network 
Message
Handler
Network 
Message
Handler
Message
Handler
Offline Mode
Application State
Network State
Message Receive
 
Figure 4-3 Detail layout and processing of GameCenter Layer 
Due to the intermittent network connectivity, the mobile online game may need to operate in a 
disconnected mode. Figure 4-3 shows the detailed message processing of the GameCenter layer 
and the delivery path of messages. The game center and listeners monitor the state change of 
application and network layers. Messages come from gateway (server) are received and packed 
by network layer and then dispatched. On the other hand, the messages create by the game 
application itself are sent to the game center layer and forward to the network layer or dispatch to 
the handler if in offline mode. Depending on the current situation, the game client can serve in 
different mode and support offline play. 
 
Application Layer 
The application layer performs the game presentation to player and exchanges information with 
 
9. 
第五章、結果與討論 
 
To demonstrate the MMOG framework we propose, we implement a simple, 2-D tile-base 
online RPG game based on an open source mobile RPG engine. We implement the TCP/IP 
Network Engine to support the network communication at Java Me and MIDP application 
platform. Also, we implement the game center and design some game rules to show a simple 
online game with supporting of offline gaming. 
 
5.1 Mobile RPG engine 
  
Figure 5-1 Screenshot of the mobieRPG demo game 
mobileRPG is a 2D Role Playing Game (RPG) engine that targets at Java ME MIDP platform 
under GNU General Public License. It provides a set of dedicated syntax to create the game 
object, action script and game map for a RPG. Each game object is defined as an Entity and can 
set a list of ScriptAction to move automatically. The game world is two-dimension by using 
images to form a tile-based map. Figure 5-1 shows the demo game built on mobileRPG with 
players and script Non-Player Characters (NPC) on the Town map. 
 
5.2 Game rule and protocol 
There are two kinds of game object in our online game. One is the Player that represents a user 
with playerId and 2-D coordination. Game players can move their character to four directions 
over the map. The other one is the NPC that moves randomly and automatically.  
 
Message Name Message Definition and Description 
 
11. 
5.4 Offline Game Playing 
In general, we assume that the game client must always keep the connection alive to access the 
MMOG service. Thus, we can offer the full functionality for the player over Internet. But the 
mobile user may disconnect intermittently, we can provide a subset of game feature to support the 
offline gamming. In our demo game, when the game clients are forced to disconnect or stop the 
network manually, they changes to the offline mode. The online players and NPCs on the game 
map will disappear and then the scripted NPCs replace them. Under the disconnected mode, 
player can still move and interact with NPCs that controlled by the game center and offline 
message handlers. When the network connectivity is reset, the game client will regain the full 
online game service. 
 
5.5 Implementation and result screenshot 
 
Message Name Type Message Contents 
LoginMessage 0x01 Username, password 
LoginResultMessage 0x02 playerId, posX, posy 
PlayerMoveMessage 0x03 posX, posY 
PlayerUpdateMessage 0x04 updateCode, playerId, postX, posy 
AFKMessage 0x05 playerId 
AFKBackMessage 0x06 playerId 
NPCBornMessage 0x0A npcId 
NPCUpdateMessage 0x0C npcId, posX, posy 
NPCDieMessage 0x0E npcId 
AttackNPCMessage 0x0F npcId 
LogoutMessage 0xFF  
Table 5-2 Message types and contents 
The message types and contents are shown in Table 5-2. We have deployed the game on some 
mobile phones, such that Nokia 6111, Sony Ericsson Z800i and Motorola E1070, and through 3G 
or GPRS to communicate with server. Following, we show some screenshots of the demo game 
emulated on Sun JavaTM Wireless Toolkit 2.5 for CLDC. When the MIDlet is loaded, it shows a 
form to fill in the login information and connect to server: 
 
13. 
 
Figure 5-4 Demo game on both mobile and PC clients 
For PC version, we implement it by using Java SE and Swing/AWT technology to present the 
game world. Figure 5-4 shows the demo game running on different platforms. They share the 
same game world and can locate and identify each other. We assume that the PC client should be 
always online and the offline gaming is only supported in the mobile version. Moreover, instead 
of offering the same functions on both sides, we can let the mobile client to support a special part 
or a subset of full game functionality. The combination of the mobile and PC client provides a 
novel way to design an online game. 
 
 
 
15. 
可供推廣之研發成果資料表 
■ 可申請專利  ■ 可技術移轉                                      日期：96 年 10 月 31 日 
國科會補助計畫 
計畫名稱：下一世代超大型網路虛擬環境平台之研究(3/3) 
計畫主持人：袁賢銘 
計畫編號： 95－2221－E－009－021 學門領域：計算機系統結構 
技術/創作名稱 DOIT 下一世代虛擬世界建造平台 
發明人/創作人 袁賢銘、蕭存喻 
中文： 
DOIT Platform，也是源自於目前國際上線上遊戲的蓬渤發展，並在
台灣掀起熱潮，但國內一直沒有足夠的系統軟體廠商可以協助傳統
單機遊戲設計公司進入到線上遊戲的市場，造成國內有能力製作線
上遊戲公司的數量一直無法提昇。以市場為例，不論中外，許多知
名的線上遊戲開發時程往往需要三到五年的時間，其中一個主因就
在於該公司必需要自行從網路底層到應用層的溝通一手包辦，花費
公司太多成本及時間。DOIT Platform 的設計，除了讓遊戲開發廠
商可以不用接觸到複雜的網路程式以及分散式軟體技術，更將多年
來所累積的中介軟體技術(Middleware)運用在此一平台之上，將使
得遊戲廠商可以容易開發(Development)、容易維護(Maintain)、容
易佈屬(Deployment)，將其心力專注於該公司所擅長的數位內容的
開發，將網路底層以及伺服器溝通的部份完全交由我們的 DOIT 
Platform 來解決，將有助於傳統遊戲設計公司快速地開發出所想要
的線上遊戲。 
 
DOIT 平台技術同時兼具了高延展性 (Scalability)、高可用性
(Availability)、高彈性(Flexibility)、簡易性(Simplicity)，並可供上萬
人同時間在同一個世界中進行互動。並且可以達到動作型連線遊戲
的低反應時間需求，只消秏些許的頻寬。使用 DOIT 平台將使得遊
戲公司可設計下一世代的線上遊戲，而不再只是局限在傳統的角色
扮演型的線上遊戲。 
 
（100~500 字） 
技術說明 
英文： 
附件二 
