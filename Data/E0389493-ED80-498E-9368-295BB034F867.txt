blocks the further invasion of the attackers. 
In this project, due to the accumulation 
of our previous progress, we have already 
understand extensively and deeply about 
some system elements and techniques such 
as firewalls, dispatcher, intrusion detection 
system, database, description language and 
syslog. And we use this elements and 
techniques to deploy our defensive system. 
In the following, we recognize that our 
defensive system has good efficiency and 
security to face the outside threats from the 
analysis results of the relative experiments. 
And in the last year, we continue adjusting 
our defensive system for getting the better 
performance. 
Keywords：Intelligent defensive system, 
Firewall, Network dispatcher, Intrusion 
detection system, Self-adapting rule system 
一、 研究背景介紹 
一般建構網路安全防衛系統會使用
到兩個主要的安全防衛元件：防火牆以及
入侵偵測系統，防火牆位於網路重要節點
之上，是整個網路安全防衛系統的存取控
制的第一線，負責處理過濾所有的內外部
網路流經它的封包；而入侵偵測系統則利
用網路各節點所蒐集到的資訊，以一定的
準確率分析出攻擊資訊。 
首先，關於防火牆方面，由於防火牆
位於網路重要節點之上，因此它會直接影
響到整個網路的效能，硬體式防火牆通常
擁有強大的處理能力，能夠快速地處理流
經的網路封包，相對地它的建置成本也比
較高，然而當網路流量不正常增加，直到
防火牆無法負擔時，防火牆仍然會成為整
個網路效能的瓶頸。 
另外就入侵偵測系統方面，大部分的
入侵偵測系統僅能提供攻擊警訊，而阻擋
攻擊者的工作仍需要由管理者手動設定
防火牆規則，這對管理者而言是一項繁瑣
的工作，為了提升整理網路安全防衛系統
的安全性與效益性，採取讓入侵偵測系統
與防火牆共同組建一個智慧型網路安全
防衛系統，是本研究計畫最主要欲達成的
目標。以下就本研究計畫內容開始進行介
紹。 
二、 防火牆 
防火牆  (Firewall) 原指稱一種汽車
設備術語，乃介於駕駛面板與引擎室之間
的隔板，用以防止引擎爆炸時，阻絕火勢
蔓延而危害乘客安全 [1]。而網路上所使
用的防火牆乃是在兩個或兩個以上的網
路設備之間隔出分界的設備裝置，防火牆
採用雙向的安全管理機制，能防止外來攻
擊，亦能限制內部主機對外的通訊。不論
是外部或內部的封包，經過防火牆設備
時，都必須通過防火牆所設定的安全規則
與政策程序。 
防火牆中會設置原則鏈  (Policy 
chain)，常見的有 Input chain、Output chain
等，而針對這些原則鏈有以下兩種預設原
則。 
 預設禁止：當封包進入防火牆原則鏈
時，逐一與各防火牆規則比對，只要
封包的子系統為 “Netfilter”，而 iptables
乃是用於設定這個子系統的命令。iptables
以「表 (table)」組織網路封包的處理「規
則 (rule)」，而不同用途的規則分別獨立為
各自不同的表 (計有 filter、nat、mangle
表)；每一條規則由「篩選條件」與「處理
目標」所組成，篩選條件是用來比對封
包，而處理目標是用於處置經比對符合的
封包。 
iptables 為 OSI model 網路層工具，在
系統核心封包處理流程當中，共有五個攔
截點 (hook points) ，分別是 INPUT 、
OUTPUT、FORWARD、PREROUTING 以
及 POSTROUTING。我們可以在這些預設
攔截點中放置一系列的處理規則，下表說
明這五個攔截點各自的使用時機。 
表 1、預設攔截點說明。 
攔截點 說明 
INPUT 即將進入本機程序之封包。 
OUTPUT 本機程序剛產生之封包。 
FORWARD 由某網路介面進入又立即由另一網路介面流出之封包。 
PREROUTING 剛抵達網路介面之封包。 
POSTROUTING 將由網路介面離開之封包。 
iptables 內建的三個表 (tables)，計有 
“filter”、 “nat” 與 “mangle”，此三個內建
表的說明如下表所示。每當封包流經各個
鏈時，必須依序通過該鏈中的每一條規則
檢查。 
表 2、iptables 內建表之說明。 
表名稱 說明 
filter 可設定封包進入、穿越及流出之規則處理。這是 iptables 預設
使用之表。 
nat 網路位址轉譯 (Network Address Translation) 可以修改封包來
源位址或目的位址，來達成「連線轉接」的效果。nat 實現內
部多台主機可共用一個 IP address。 
mangle 處理封包內容修改，例如 TTL 或 TOS 等封包內容。 
 
三、 入侵偵測系統 
凡違反機密性 (Confidentiality)、完整
性 (Integrity) 與可用性 (Availability) [2, 
3]，便構成入侵行為。在計算機領域中，「入
侵」行為就是未被授權使用系統或網路，
這可能是一個合法使用者試著非法提升
其權限；或是被授權之使用者征服一個執
行中的服務或程式，並在系統中建立一個
帳號或活動等。 
從上圖可以明顯看出，NIDS 網路架
構中有三部 NIDS 主機，分別監看三個不
同的網路 (或子網路等)，如此做法能依照
網路特性而調整 NIDS 的功能 (需要監聽
的規則)。 
另外一種主要入侵偵測系統架構為
主機型入侵偵測系統 HIDS，HIDS 有別
於 NIDS 之處有二點：首先，HIDS 架構
於個別主機之上，主要為保護其本身安全
而不須監聽整個網路封包；第二，HIDS
的網路介面卡被設定為「非混亂模式」，
對於較慢速的主機而言，設定成非混亂模
式是較為節省資源的作法。 
另外，一個 HIDS 最為重要的優點，
即僅設立 HIDS 所需要的規則，其他不相
關的規則就可以去除不用。舉例來說，一
台純粹提供郵件收發之伺服器，可不必使
用網頁伺服器之規則。如此，便可調整成
更符合該主機之規則，更因關閉不相關規
則而可降低誤判的機率。 
然而，倘若一個大型的網路當中架設
了許多的 HIDS，系統管理者便可能忙於
處理各主機HIDS規則更新或警告 (Alert) 
輸出等作業，導致整個系統管理的負荷增
加，相較之下，我們希望於計畫中，將網
路安全防衛系統建置在一個統合性的架
構，亦即由單一整合的入侵偵測系統負責
所有網路封包過濾的工作，以減輕系統管
理者可能遭遇的負擔，並避免因某部
HIDS 遭受攻擊與控制而對整個網路產生
更進一步危害的可能性。 
接著我們進行入侵偵測系統對於網
路的一些主要功能介紹，入侵偵測系統一
般有以下幾種功能可供使用者選擇。 
 監看封包 (Packet Sniffing) 
如前所述，NIDS 必須將網路介面卡
設 定 成 混 亂 模 式  (promiscuous 
mode)，並且開始監聽網路上的封
包，所以這對 IDS 來說是一個很重要
的工作。 
 記錄解析 (Log Parsing) 
許多 IDS 系統可以憑藉解析系統記
錄並提出警示。 
 系 統 呼 叫 監 視  (System Call 
Monitoring) 
系統呼叫是作業系統核心對於一個
程式的要求；HIDS 可以裝設於作業
系統核心之中，並且監聽或攔截異常
的系統呼叫。一旦 HIDS 發覺系統呼
叫有異常嫌疑，例如某使用者切換登
入成管理者帳號，HIDS 便能產生一
個警示通知管理者。 
 檔案系統監視 (Filesystem Watching) 
另一項常用的 HIDS 功能是監視檔案
系統，當系統內的檔案可能遭受入侵
攻擊時，HIDS 便能依此發出警示，
通知管理者。 
接下來，我們將介紹本計畫中所使用
的入侵偵測系統軟體 “Snort”。Snort 為一
開放原始碼之套裝程式，並且是一套相當
成熟的 NIDS，足以因應許多網路入侵偵
測的需求。Snort 擁有輕巧的程式架構，
並且可於許多不同平台上運行。 
以下各節將介紹 Snort 中各元件的內
容，計有封包解析器 (Packet decoder)、前
置 處 理 器  (Preprocessor) 、 偵 測 引 擎 
(Detection engine) 、警示與記錄元件 
(Alerting and logging component)。 
表 3、Snort rule action 說明。 
規則動作 說明 
alert 記錄封包內容便依事先設定方式發出通知。 
log 記錄符合規則之封包內容。 
pass 忽略目前封包。 
activate 當 activate 觸發後，會再觸發 alert，並且啟動特定的
dynamic rule 而使用許多自定工具以進行分析工作。 
dynamic 平時 dynamic 會被忽略，直到 activate 動作觸發時才會
再觸發 log 動作。 
 
 警 示 與 記 錄 元 件  (Alerting and 
Logging Component) 
經過規則比對後，若有符合之封包便會依
照 “snort.conf” 而進行警示或記錄。警示 
可用訊息視窗彈出以通知管理者；記錄方
面可以支援許多資料庫系統，本系統中我
們採用 MySQL 作為我們主要的資料庫系 
統，最後可將整個警示與記錄，透過處理
將警示的記錄以呼叫器 (Pager) 或是以  
SMS 行動電話簡訊方式通知管理者。 
四、系統實作 
經過多番測試之後，我們使用如下圖
之架構來完成本網路安全防衛系統設
計。為使內部主機亦能使用公用 IP (Public 
IP Address) 而非使用私有 IP (Private IP 
Address) 再透過 NAT，讓多部主機共用一
個 IP 的窘境發生，因此本系統必須使用
Static Routing 方式來完成。 
本計畫中的網路安全防衛系統主要
架構內包含有分派器 (Dispatcher)、防火
牆群 (Firewall Group) 以及入侵偵測系統 
(Intrusion Detection System, IDS) 這幾個
主要單元，接著將於下面文章中把所有單
元做一介紹。 
Dispatcher
Firewall 1
Firewall 2
IDS
Switch
Internal Computers
圖 6、系統網路架構圖。 
 
Dispatcher
Firewall 1
Firewall 2
IDS
Switch
Internal Computers
Private IP
Private IP
Private IP
Private IP
Private IP
Private IP
Private IP
Private IP
Public IP Public IP
 
圖 8、Router 模式。 
經過系統架構的簡介後，整體硬體方
面的建置與部署已經大致完成，接著我們
將要進行系統內部運作的流程介紹。本計
畫系統使用 PHP 語言作為我們主要的程
式開發語言，以及 MySQL 為系統主要使
用之資料庫工具，另外，本系統還利用
Apache 當網頁管理介面後端支援的主要
伺服器工具、Syslog-ng 為系統記錄工具，
提供管理者相關系統資訊與記錄、iptables
與 iproute 分別為防火牆工具與封包處理
工具；而其他相關非主要之程式或軟套
件，在此恕不予介紹。 
本網路安全防衛系統主要功能包含
有：檢查 IDS 產生之入侵偵測結果、將入
侵偵測結果儲存於相關資料庫、自動更新
防火牆規則以及自動恢復防火牆狀態；相
關程序解說如下：首先，外部網路封包進
入到 Dispatcher 後，Dispatcher 會依照權
重大小分配封包流向防火牆群中的各部
防火牆  (本系統使用兩部防火牆為代
表)，接著防火牆會依照內部防火牆規則進
行封包篩選動作，而後將獲准通過的封包 
送達 IDS 主機，IDS 便會接手並進行入侵
偵測的檢查動作，一旦發現有封包符合入
侵特徵，IDS 主機則將此入侵攻擊特徵寫
入至資料庫中，在 IDS 主機中會有一支長
駐程序，負責定期檢查資料庫中，入侵攻
擊數目是否有異變，若此程序發現有新的
入侵出現時，IDS 主機便使用 SSH 遠端登
入方式，進入防火牆群內之各部主機，通
知防火牆進行規則資料庫之更新及入侵
封包之阻擋，而相關封包的阻擋時間，會
依照制定的入侵攻擊等級而設定；另外，
隨著時間的流逝，系統會利用自動恢復防
火牆規則程序將被阻擋的來源進行釋放
的動作。最後一點，針對入侵事件程度，
我們可以根據判斷，針對入侵攻擊於內定
時間中連續入侵，我們認定其威脅程度已
經加劇，因而依照內部機制增加其所應被
阻擋時間。所有進入此系統的封包，經過
以上程序或流程檢查無誤後，若是善意的
封包則將可被轉送至後端的內部目標主
機，若是惡意的封包則將被阻擋在系統之
外，等候阻擋時間結束，再行將來自於此
一源頭的封包重新開放進入。 
圖 9、防火牆規則自動更新機制說明圖。 
上圖中說明了本網路安全防衛系統
如何進行防火牆規則自動更新的詳細流
程，其中系統中所建置的多個資料庫均放
置於 IDS 主機中，以便集中管理，並且達
到資料一致性原則；也就是以單一資料庫
來源保障前端防火牆群中各部防火牆之
規則更新來自於統一的來源，不會有資料 
過時效與規則不一致的問題發生。而且將
資料庫設置於 IDS主機上可以降低放置於
防火牆主機而遭受攻擊的機會，但是一旦
IDS 主機停擺，管理者必須面臨無規則資
料庫可更新的窘境，因此可以考慮採用所
謂的備援系統來加以輔助。接著下面將介
紹自動規則恢復的執行流程。 
由外部網路流進的封包被入侵偵測
系統─Snort─檢查出具備有攻擊特徵
時，Snort 便將此問題 ip 透過 syslog-ng 套
件分別記錄於 snort 與 syslog 資料庫中，
經過分析而被認為是最新攻擊事件後，
IDS主機便自動以SSH遠端登入方式進入
防火牆群各主機中，下達更新防火牆
iptables 規則的指令動作。另外一方面，於
防火牆中被視為攻擊來源的 ip，若其規定
的阻擋時間已經到期後，IDS 主機同樣地
以 SSH 方式遠端登入防火牆主機，令其恢
復此 ip 封包的通行。以下我們將進行各流
程的內容步驟介紹： 
 最新入侵檢查 (checknew.php) 
IDS 主機會以迴圈方式進行 syslog 資
料庫中有關入侵攻擊統計數的狀態檢
查，每當此數值一有變化時，IDS 主機立
即連結到 syslog資料庫中取出相關資料以
進行比對工作，根據統計數的變化，若其
判斷結果為新入侵攻擊發現，此時 IDS 主
機便執行 update_fw_rules 程式並從 snort
資料庫中取出相關入侵行為紀錄以啟動
資料庫防火牆規則更新工作，當工作完畢
後，IDS 主機便將暫存資料表的資料清
空，等候迴圈結束後，再次進行循環檢查
工作。圖 11 為此程式執行流程圖： 
 更 新 資 料 庫 防 火 牆 規 則 
(update_fw_rules.php) 
從最新入侵檢查程序發現有最新的
入侵事件後，先將此入侵記錄放入
acid_event 資料表中，並從較近的時間上
比對取出 sid (IDS sensor 編號)、cid (工及
特徵編號 ) 、 signature ( 攻擊特徵 ) 、
sig-priority (攻擊等級)、ip_src (攻擊封包
來源) 與 ip_drc (攻擊封包目的) 放入
denial_source 資料表中。此時並將問題 ip
放入 denial_listing 表中作為來源阻擋的依
據，同時檢查 sig-priority 欄位中同封包來
源而具有不同攻擊等級的 ip，若是新攻擊
等級高於舊攻擊等級，我們將新攻擊等級
設為此問題 ip 的攻擊等級，這是因為攻擊
等級會關係到系統阻擋問題 ip 的時間長
短；假若有問題 ip 於制定的時間內重複出
現，則依據相關設定，在其所應阻擋的時
間額外增加其阻擋秒數，作為懲罰。上述
動作完畢後，接著將相關資料寫入到系統
中 iptables_rules_file，同時將 denial_source
資料表中問題 ip 的資料清空。圖 12 為此
程式執行流程圖。 
 
圖 11、最新入侵檢查流程。 
另外值得提出的一點是：在更新規則
的過程當中，以下有幾種情形及其對應措
施的執行方式，在此提出說明。 
我們以 iptable_insert_line_no 作為規
則更新插入檔案的指標變數，我們利用此
指標變數與檔案插入行列的判斷動作，進
行規則的更新。假若目前檔案行數為 0 或
欲插入之行數大於目前檔案行數時，則直
接將更新規則插入至第一行；行數目前小
於 0 時，則插入到檔案最後一行之後，也
就是接著規則檔增加更新內容。最後欲阻
擋的 ip 其 internet 位址會被轉換並套用進
iptables 規則格式中。另外，有種情況為一
開始在規則檔案中找不到要更改的規則
行，其原因是先前被阻擋的 ip 已經超過阻
擋時間而釋放，而其有關的防火牆規則也
被刷新清空。整個規則更新工作完成後，
我們必須重新啟動 iptables，如此才能使最
新規則被應用於防火牆上。 
 自 動 恢 復 防 火 牆 規 則 
(refresh_fw_rules.php) 
此程式啟動後，以循環方式執行，首
先會進行兩個動作，一是檢查防火牆規則
檔存在與否，一是判斷防火牆規則檔存取
可否。若是前面動作檢查完畢，流程無法
繼續下去，則跳出程式；若檢查沒有問題
的話，接著會從 islab 資料庫 denial_listing
資料表中取出攻擊等級，運算其阻擋時
間，查看阻擋時間是否超過，若結果為
是，此時就可以清空資料表中的問題 ip 資
料且寫回資料庫，同時以 SSH 方式通知各
部防火牆執行更新 iptables 防火牆規則程
式以更新各個防火牆規則，達到復原的目
的。圖 14 為此程式執行流程圖。 
 
圖 14、自動恢復防火牆規則流程。 
以上為本系統的執行控制程式，依據
上簡介的程式，相互協調並加上入侵偵測
系統、資料庫、系統記錄套件等物件形成
整個網路安全防衛系統的智慧管控，提供
了防火牆規則自動更新與自動恢復的機
制，替網安系統的管理者提供了一套節省
管理成本的安全解決方案。 
 在接續的章節當中，我們將簡介本智
慧型網路安全防衛系統於後端設置之管
理者介面，管理者可望藉由此操作介面進
行整個系統各項工作的管控，以達到全面
掌控的能力。 
 
 
 
 圖 15、後端管理者介面簡介圖。 
 
 實驗 1 實驗結果 
經過上面兩組實驗，我們可以取得
IDS 流量分析圖、IDS 系統效能比較圖、
IDS 入侵偵測述分析圖以及防火牆入侵阻
擋數分析圖。由圖 18 (實驗組流量圖) 與
圖 19 (對照組流量圖) 可以分別得知：實
驗組中，因為防火牆在 IDS 之前，所以一
有入侵封包，便會被 IDS 偵知並於前方防
火牆阻擋住，因此與對照組比較，實驗組
中的 IDS入侵封包流量情形會比對照組還
緩和，並可避免使 Snort 處理多餘封包而
浪費主機資源。
0
300
600
0 45 90 135 180
Time(secs)
Fl
ow
(K
B)
 
圖 18、實驗組 IDS 流量分析圖。 
0
300
600
900
0 45 90 135 180
Time(secs)
Fl
ow
(K
B)
 
圖 19、對照組 IDS 流量分析圖。 
 另外，我們分別提出實驗中各組 IDS
入侵偵測數分析圖與防火牆入侵阻擋數
數與比較表於圖 20、圖 21 及表 5。由以
下圖表可以看出，對照組入侵偵測的數據
明顯高出實驗組許多，這代表了在經過 
 
IDS 偵側後，如果像對照組這般配置，將
無法及時阻擋入侵封包於外，必須留待封
包進入本機後，防火牆才執行阻擋動作，
這樣的時間點顯得過慢。
0
10
20
30
40
50
0 60 120 180
Time(secs)
N
um
be
r o
f a
tta
ck
 p
ac
ke
t d
et
ec
te
d 
by
 ID
S
 
圖 20、實驗組 IDS 入侵偵測數分析圖。 
0
10
20
30
40
50
0 60 120 180Time(secs)
N
um
be
r o
f a
tta
ck
 p
ac
ke
t d
et
ec
te
d 
by
 ID
S
 
圖 21、對照組 IDS 入侵偵測數分析圖。 
表 5、實驗 1 各組數據比較表。 
實驗名稱 所有網路介面卡流量(Byte) IDS 偵側數 防火牆阻擋數 
實驗組 1270874 7 2711
對照組 5803572 196 3692
多，可見若流量經由多部防火牆分流之措 施，可以增加整體網路封包傳輸的效能。
0
2
4
6
8
10
12
14
16
18
20
0 30 60 90 120
Time(secs)
Fl
ow
(M
B
)
Firewall1
Firewall2
Total
 
圖 24、實驗組防火牆流量圖。 
0
2
4
6
8
10
12
0 1
Fl
ow
(K
88Time(secs)
B)
 
圖 25、對照組防火牆流量圖。 
 攻擊實驗 
本實驗主要匯整幾種常見的網路攻
擊類型，並且針對這些攻擊，進行本系統 
 
的防護測試，檢測本系統是否能夠將這些
類型的攻擊偵測並阻擋，以下表格顯示本
系統的攻擊防護檢測結果。 
表 6、各類攻擊測試結果。 
攻擊類型 攻擊方法或程式 是否阻擋 
nmap } 掃描 
nackbot } 
封包監聽 ethereal ± 
Unicode 檔案系統斷層 } 
Double Decode } 
WEB-IIS cmd.exe access } 
系統漏洞 
IIS buffer overflow } 
後門程式 NetBus } 
UDP 協定洪水式攻擊 } 
ICMP 訊號洪水式攻擊 } 阻斷服務攻擊 
Smurf } 
  
圖 26、更新時間間隔 2 秒之數據圖。  
 
攻擊時間從 8 點 10 分開始到 8 點 22
分終止，IDS 主機於 8 點 13 分偵測到攻擊
並阻擋該 ip 達 180 秒，從圖上方看出 IDS
主機偵測到入侵攻擊後，短時間內便進行
阻擋，因入侵造成流量的增加也立即降低
許多，由圖下方看出系統負載許多，其 1
分鐘內、5 分鐘內與 15 分鐘內系統負載平
均值達 0.23、0.24 及 0.19 左右，相當平衡。
 
圖 27、更新時間間隔 14 秒之數據圖。 
 
圖 29 (b)、更新時間間隔 38 秒之系統負載數據圖。 
攻擊時間從 13 點 15 分到 13 點 26
分，IDS 主機於 13 點 15 分 20 秒偵測
到攻擊並阻擋該 ip 達 180 秒，經過阻
擋時間釋放該 ip 後，IDS 主機於 13 點 
19 分再度偵測到該 ip 的攻擊，並阻擋
達 180 秒外加俄外處罰秒數，隨後與
13 點 24 分三度偵測到該 ip 的入侵並
且阻擋該 ip 達 60 秒。
 
圖 30、更新時間間隔 50 秒之數據圖。 
攻擊時間從 13 點 29 分到 13 點 42
分，其中 IDS 主機分別於 15 點 29 分 48
秒及 13 點 38 分偵測到同一 ip 的攻擊，後
面一次的阻擋時間額外加上懲罰時間。 
 更新頻率實驗結果 
從此實驗中，根據數據分析，我們了
解到一件事：系統更新的頻率並不影響到
系統負載的平衡，所以更新頻率的變異只
對網路流量有顯著改變，對於系統負載不
會有太大影響，所以我們可以將更新時間
間隔調小，提高系統因應攻擊的效率。
