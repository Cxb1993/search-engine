 2
of context-aware services. 
Related researches lie in the areas of routing, developing 
model, and discovering resources in mobile ad hoc 
networks. Reactive routing schemes, such as AODV [11] or 
DSR [10], are to establish the route paths only when they 
have data traffic. Although they consume lower resources, 
the overhead may be high due to connections among nodes 
frequently broken. Therefore, hybrid (or hierarchical) 
schemes, such as DOA [1], intend to combine the 
advantages for both proactive and reactive approaches. 
PAST-DM [6] proposed a protocol for overlay multicast 
in MANETs. The virtual mesh topology gradually adapts to 
the changes of underlying network topology in a fully 
distributed manner with minimum control cost. Each source 
node must construct its own data delivery tree. Schwan et al. 
[3] proposed opportunistic overlay approach to manage 
overlays for mobile nodes and improve the efficiency of 
data delivery. An event system in opportunistic overlay 
network consists of producers, consumers, and a broker 
network. Opportunistic overlay approach [3] uses a similar 
dynamic virtual mesh overlay construction technique as 
PAST-DM [6]. This report is not to consider the nodes 
disconnection or reconnection issues and assumes that there 
are no network partitions in MANETs. 
The proposed framework bears some different 
characteristics compared to other methods [3][6]. First, our 
proposed architecture is to divide nodes into mobile context 
manager which are organized into an overlay segment-tree 
virtual network and context providers/service requestors 
which send/receive contextual information via the 
segment-tree virtual network. Next, we construct an overlay 
network with considering the mechanism of network 
maintenance and reconfiguration. Mobile context manager 
in our approach is not necessary to update all topology 
information in the overlay network as [3][6] did. We only 
periodically update the information of neighboring nodes in 
the overlay network. Thirdly, we propose push-based 
approach to handle real-time information and combine 
pull-based approach for supporting context-aware 
environments in MANETs. Our framework will be more 
flexible and reasonable in MANETs. 
The rest of the report is organized as follows. Section II 
introduces our system model. Section III describes how to 
select mobile context manager, construct segment-tree 
virtual network, and maintain the virtual network. Section 
IV presents the experimental results. Finally, we conclude 
this report in Section V. 
2. System Model and Basic Idea 
Some basic assumptions are described below. First, 
assume that all mobile nodes are aware of their location by 
GPS or through other locating methods and mobile nodes 
are able to get their neighbors’ information through periodic 
hello messages. Next, all different kinds of environmental 
sensors and the part of sensors are embedded in some 
mobile nodes can help detect something and acquire 
contextual information. Finally, some of mobile nodes 
which installed context management can be mobile context 
manager. Mobile context manager can infer contextual 
information and transfer them into useful information. 
2.1 Overlay Network Architecture 
Our system model is to construct an overlay network, 
called Segment-Tree Virtual Network (STVN for short), 
whose detailed procedure is described in Section III. 
Besides, the overlay network is composed of the following 
nodes: context provider, service requestor, mobile context 
manager (MCM), and mobile node as shown in Fig. 1. 
 
Fig. 1: System model. 
A group of context mobile mangers organize a virtual 
network. Once the segment-tree virtual network is 
constructed, the framework of an overlay network is built. 
In Fig. 2, we obviously understand the relation among three 
roles. Mobile nodes deliver contextual information through 
two approaches. One is called push-based approach, and the 
other is called pull-based approach. 
Pull-based
Segment Tree Virtual Network
Context Providers Service Requestors
Contexts
ContextsContexts
Push-based
Pull-based
 
Fig. 2: The relationship diagram for our framework. 
Push-based approach is adopted in real-time situation. 
Context providers directly broadcast the critical context to 
service requestors without connection with context mobile 
 4
Seqno, 30), and (F, F(x, y), Seqno, 30), respectively. Then 
service requestors H and L are to send query packets to 
nodes G and F through a series of intermediate nodes. Once 
node owns the contextual information to meet the demand 
of service requestor, it sends context packet back to its 
requestor after inferring. 
 
Fig. 4: Dynamic mobile context manager selection. 
3.1.2 Segment-tree Virtual Network Construction 
After a node is selected as a mobile context manager, it 
broadcasts request packet within K hop count to look for 
other context mobile mangers when they are nearby. When 
the neighboring nodes, which are not mobile context 
managers, receive request packet, they attach their paths 
information to request packet and broadcast it like DSR 
[19]. Once mobile context managers within K hop count 
receive the request packet, they traverse rreply packet to 
source mobile context manager according to path 
information. 
Simultaneously, the path information is recorded in the 
routing table. When source mobile context manager 
receives rreply packet, it is to select a mobile context 
manager with shortest path as its parent node and dispatch 
connection packet included demand contextual information 
to it. Once other mobile managers receive connection 
packet, they reply ack packet and consider it as a child node. 
The connection between two mobile context managers is 
considered as a segment and its parent node is likely to 
become a child node in the other segments. All parent nodes 
in a segment send connection packet attached in their 
children nodes’ information in order to avoid the 
construction loop and to connect with other mobile context 
managers. Therefore, the segment-tree virtual network is 
built through the connection of all segments and mobile 
context manager can look for more contextual information 
through STVN. 
Fig. 5 illustrates an example of a segment-tree virtual 
network construction. 
 
Fig. 5: Segment-tree virtual network construction. 
In Fig. 5 (a), node A is selected as a mobile context 
manager and it then broadcasts request packet to adjacent 
nodes within K hop count. All paths where node A reaches 
to C and B ,such as A→I→C, A→Q→R→C, A→P→H→B, 
and A→I→H→B, are recorded in the routing table. When 
two mobile context managers B and C receive request 
packet, they traverse rreply packet to node A. Node A is to 
consider node C as its parent node and to send connection 
packet to node C through node I because the dist(A,C) is 
smaller than dist(A,B)as shown in Fig. 5 (b). Once node C 
receives connection packet, it sends ack packet to node A to 
confirm connection with each other. The connection 
between node A and C is considered as a segment. 
In Fig. 5 (c), because nodes A and B are children of C, 
node C selects node D as its parent node even that dist(A,C) 
is smaller than dist(C,D). Node C sends connection packet 
attached their children node A and B to its parent node D. 
When node D receives connection packet from node C, it 
can know that nodes A and B is the children of node C. 
Therefore, node D is to select node E as its parent node to 
avoid looping. The segment-tree virtual network is built as 
shown in Fig. 5 (d). Mobile context managers B, C and D 
can look for more contextual information through 
segment-tree virtual network. If they find the wanted 
contextual information, other mobile context managers 
send context packet to them. 
3.1.3 Node Joint and Leaving 
When segment-tree virtual network is constructed, other 
 6
causes the path broken again. Node N detects the 
connection broken and then checks if other paths can reach 
node C. But no other paths can be found at this time. As a 
result, node N broadcasts error packet to reconstruct the 
link with other mobile context manager. When mobile 
context manager A receives the error packet from N, it 
traverses RReply packet to node N. The new connection 
path N to A is constructed. Mobile context manager D can 
send context packet to A along D→N→S→R→A as shown 
in Fig. 9 (d). 
 
Fig. 9: Segment-tree virtual network maintenance. 
3.2 Push-based Approach 
In the following, another method in this report is 
pull-based approach. Real-time contextual information will 
be used in pull-based approach. The method broadcasts 
contextual information to neighbor nodes when context 
event happened in emergency. But it is not practicable for 
context providers to broadcast contextual information 
constantly. Thus, we will discuss two dimensions which are 
hop and distance, respectively, to control contextual 
information dispatch. Besides, the transmitted range is 
divided into three areas: hot area, warm area, and cold area 
based on hop count and distance. Hot area stands for an 
emergency area and warm area stands for a warning area 
whereas cold area stands for safe area. Hop count and 
distance are criterions to decide if context providers 
proceed to broadcast. 
All mobile nodes can know the location information by 
GPS devices or other localization methods. The distance or 
restricted hop count will be calculated to prevent duplicated 
contextual information delivery. Once mobile nodes move a 
distance away from the location of context event or hop 
count is greater than threshold, they stop broadcasting the 
contextual information. These parameters within 
push-based approach are able to incur message overhead 
decreased. Although the application of push-based 
approach is to focus on real-time circumstances, contextual 
information can still be stored in mobile context manger. 
Once service requestors need some information, they can 
query mobile context manager to acquire contextual 
information. 
Examples of push-based approach are shown in Fig. 10. 
In Fig. 10 (a), context event happened and context provider 
A detected, it would send real-time contextual information 
to neighbor nodes within M hop count by means of 
broadcasting. The hot area would form based on M hop 
count or the distance away from context event. In Fig. 10 (b), 
all nodes in hot area continued to broadcast. Warm area also 
formed within N hop count and the range of warm area 
would cover the hot area. When nodes in the warm area 
received real-time contextual information, they still 
broadcasted as well as nodes in the hot area. Until nodes 
moved out the warm area and entered the safe area, they 
would stop broadcast to avoid flooding. Therefore, nodes 
were going to enter warm area such as F, G, and E which are 
aware of the information of event in advance. 
 
Fig. 10: Examples of push-based approach. 
4. Experimental Results 
In this section, we conduct the simulations to evaluate 
the performance of our method. The simulations are 
implemented in NS-2 simulator [15]. 
We compare our proposed method with 
publish/subscribe architecture based on AODV routing 
protocol. The network consists of 100 mobile nodes that 
randomly deployed in 1000x1000 m2 field. And then we 
also randomly choose 20 mobile context manager, 10 
context providers, and 30 service requestors from 100 
mobile nodes. The mobility models are random way-point 
with 1000x1000 m2 and Manhattan [2] with 1000x1000 m2. 
The maximum speed is from 1 to 25 m/s and the pause time 
is set zero. Two-ray ground is used as the radio propagation 
model and an omni-directional antenna having unity gain in 
the simulation. Each communication range is approximately 
a disc with a 250 meter radius and simulated result is an 
average over 5 simulation runs and simulation lasts for 100 
or 200 seconds. Exception will be noted otherwise. We use 
 8
delay time than P/S because it is able to look for contextual 
information through segment-tree virtual network. 
0
0.2
0.4
0.6
0.8
1
5 10 15 20 25
(a)  Mobility (m/s)
D
el
ay
 ti
m
e 
 (s
ec
) STVN
P/S
 
0
0.2
0.4
0.6
0.8
1
5 10 15 20 25
(b)  Number of mobile context managers
D
el
ay
 ti
m
e 
 (s
ec
) STVN
P/S
 
0
0.2
0.4
0.6
0.8
1
40 80 120 160 200 240
(c)  T ime (sec)
D
el
ay
 ti
m
e 
 (s
ec
)
STVN
P/S
 
Fig. 13: Delay time. 
4.1.4 Overhead 
In Fig. 14 (a), the overhead of two methods are both 
increasing while node mobility speed is increasing. Our 
methods have higher overhead than that of P/S because of 
segment-tree virtual network construction and maintenance. 
When nodes move faster and faster, it is easy to cause the 
connection broken for the virtual overlay network. 
Segment-tree virtual network maintenance and 
reconfiguration is to deal with node mobility. The similar 
results are shown in Fig. 14 (c). As time passed, our scheme 
does not outperform P/S due to virtual overlay network 
construction and maintenance. Fig. 14 (b) shows that the 
overhead of two methods are still increasing when the 
number of mobile context managers is increasing. But the 
differences of overhead between two methods are 
decreasing gradually. Although the overhead of our method 
is not better than that of P/S, our scheme still improves the 
performance of success ratio and delay time. 
0
20000
40000
60000
80000
5 10 15 20 25
Mobility (m/s)
(a)
O
ve
rh
ea
d 
 (p
ac
ke
ts) STVN
P/S
 
0
20000
40000
60000
80000
40 80 120 160 200 240
Time (sec)
(b)
O
ve
rh
ea
d 
 (p
ac
ke
ts) STVN
P/S
 
0
20000
40000
60000
80000
5 10 15 20 25
Number of mobile context managers
(c)
O
ve
rh
ea
d 
 (p
ac
ke
ts) STVN
P/S
 
Fig. 14: Overhead. 
 
5. Conclusions 
In this report, we proposed a virtual overlay network, 
called segment-tree virtual network, based on 
publish/subscribe architecture. Our proposed framework 
can efficiently support context-aware environments in 
MANETs. Furthermore, we proposed two approaches, 
push-based and pull-based, to handle emergency and 
on-demand services supporting, respectively. In pull-based 
method, we compared two different methods for mobile 
context manager selection. The experimental results 
showed that our approach has higher success ratio and less 
delay time than publish/subscribe architecture based on 
AODV routing protocol. 
References 
[1] R. Bai and M. Singhal, “DOA: DSR over AODV Routing 
for Mobile Ad Hoc Networks,” IEEE Transactions on 
Mobile Computing, Vol. 5, No. 10, pp. 1403-1416, October 
2006. 
[2] Fan Bai, Narayanan Sadagopan, and Ahmed Helmy. 
“IMPORTANT: A Framework to Systematically Analyze 
the Impact of Mobility on Performance of Routing 
Protocols for Ad Hoc Networks,” Proceedings of the 22nd 
Annual Joint Conference of the IEEE Computer and 
Communications Societies (Infocom 2003), Vol.2, pp. 
825-835, San Francisco, California, USA, April 2003. 
[3] Y. Chen and K. Schwan, “Opportunistic Overlays: Efficient 
Content Delivery in Mobile Ad Hoc Networks,” 
Proceedings of the 6th ACM/IFIP/USENIX International 
Middleware Conference (Middleware 2005), pp. 354-374, 
Grenoble, France, November 2005. 
[4] H. Chen, T. Finin, and A. Joshi, “A Mobile Broker for 
Building Smart Meeting Rooms,” Proceedings of the 
Knowledge Representation and Ontology for Autonomous 
Systems Symposium, 2004 AAAI Spring Symposium, pp. 
116-123, Stanford CA, March 2004. 
[5] A. K. Dey, “Distributed Mediation of Ambiguous Context 
in Aware Environments,” Proceedings of the 15th Annual 
 -1-
參加「2007年 IEEE無線通訊與網路國際會議」 
IEEE Wireless Communications and Networking Conference 
2007 (WCNC 2007) 
出席國際會議報告 
(March 11-15, 2007) 
國立臺南大學數位學習科技學系 
陳宗禧 教授 
2007/4/2 
 
IEEE Wireless Communications and Networking Conference 2007 (WCNC 2007), 
Hong Kong, March 11-15, 2007，是由 IEEE Communications Society於香港主辦的一
個探討無線通訊與網路的重要國際會議之ㄧ，是通訊網路領域中非常重要的國際
會議之ㄧ。IEEE WCNC 2007場面十分浩大，聆聽演講專家學者與貴賓也十分踴
躍，會場包括兩的 Hotels。 
WCNC 2007 共舉辦五天，有三個主要的 Technical Paper Tracks，分別為
PHY/MAC Track Program、Network Track Program、Service Track Program，以及多
場國際知名學者演講與多場 Panel Discussions，詳細會議議程請參閱附件一。
Parallel Technical Paper Sessions非常多，每一 Session約有 5篇論文發表，共約 800
篇論文發表，主題橫跨最新最熱門的無線通訊與網路、通訊實體與媒體存取技術、
無線網路管理與服務應用等重要研究議題。 
該國際會議在歷年的組織與 Program Committee皆網羅國內、外知名的研究學
者與先進，也受到台灣學者教授在該研究領域的重視，同時與會的專家學者也都
是該領域的佼佼者，因此該會議是十分具有學術地位的國際會議。該會議不僅使
各國研究學者相互交換研究經驗，也拓展各國在無線資訊網路及其應用以及無線
通訊網路之研究成果。該屆會議在香港舉辦 IEEE WCNC 2007國際會議，不僅吸
引全球學者的參與，更有不少的產、官、學、研各界共襄盛舉。 
2007年 3月 11日，我從高雄小港國際機場出發，感到愉快，因有幾次機會經
過香港轉機至大陸，但這是第一次進入到香港。搭乘長榮航空飛機到香港國際機
場。隨後，利用短暫的時間就隨處逛逛，覺得香港與台灣的大都市台北、台南等
都各自有不同的感覺與風味。 
會議的開幕後，當然不能錯過精彩的 Talk，隨即出發前往到 Information 
Desktop註冊(Pre-registered)拿會議資料後，聆聽與參與盛會。到達大會會場多功能
演講廳後，各界參與人員十分踴躍。接下來即參加各場 Session 的聆聽與研討。兩
個晚上也有重頭戲，亦即歡迎晚會(Welcome Reception)與 Banquet晚宴，參與的學
者十分踴躍。論文發表、Keynote speech、Panel Discussion都是並行，會議內容精
彩且豐富。 
3 月 13 日 14:00–15:25 為所發表論文(請參閱附件二)的報告時段，安排在
Session T3s45第四個發表，如下： 
T3s45: Routing in multihop - 3 
 -3-
附件一： 
IEEE WCNC 2007 Program 
SCHEDULE 11-15 March 2007  
Sunday 11 March  
7:00-18:00  Registration Open 
13:00-17:00  Half Day Tutorials with Lunch and Afternoon Break 
18:00-20:00 Welcome Reception (Drinks with Food)  
 
Monday 12 March   
7:00-17:30  Registration Open 
8:30-10:30  Keynote/Plenary Session 
10:00-12:30 Poster Sessions 
10:30-11:00 Morning Break 
10:50-12:15 Technology/Business Application Panel 
11:00-12:10 Phy/MAC, Networks, Services and Applications Technical Sessions 
12:10-14:00 Lunch 
14:00-15:25 Phy/MAC, Networks, Services and Applications Technical Sessions 
15:25-15:55 Afternoon Break 
14:00-16:00 Poster Sessions 
15:55-17:00 Phy/MAC, Networks, Services and Applications Technical Sessions 
15:55-17:25 Technology/Business Application Panel 
 
Tuesday 13 March   
7:30-19:00  Registration Open 
8:30-10:30  Keynote/Plenary Session 
10:00-12:30  Poster Sessions 
10:30-11:00  Morning Break 
10:45-12:30  Technology/Business Application Panel 
11:00-12:10  Phy/MAC, Networks, Services and Applications Technical Sessions 
12:10-14:00  Lunch 
14:00-15:25  Phy/MAC, Networks, Services and Applications Technical Sessions 
14:00-15:25  Technology/Business Application Panel 
14:00-16:00  Poster Sessions 
15:25-15:55  Afternoon Break 
15:55-17:00  Phy/MAC, Networks, Services and Applications Technical Sessions 
15:55-17:25  Technology/Business Application Panel 
 
Wednesday 14 
March  
7:30-17:00  Registration Open 
  
Abstract—This work proposes efficient data aggregation al-
gorithms based on a virtual grid for range query in wireless 
sensor networks. A sensor node is selected to be a manager, 
called head, in each grid. The responsibilities of head are to de-
tect generated event, announce to all other heads, and respond to 
a moving user. A user obtains the occurred event information 
from its grid head. If a user is interested in an event, it issues a 
query to acquire data from a specified regular-shape or spread-
ing irregular-shape ranges. Users can oversee the spreading 
event via querying the incurred irregular-shape range. In addi-
tion, this work proposes efficient approaches to gather data from 
sensor networks while voids exist. Finally, experimental results 
show that the proposed approaches are more energy-efficiency 
than the existing approach. 
 
Index Terms—data aggregation, grid, tracking, routing, wire-
less sensor networks 
I. INTRODUCTION 
Manufacturing of small and low-cost sensors has become 
technically and economically feasible recently due to techno-
logical advances [4]. Wireless sensor networks (WSNs) have 
been applied on military and civil applications effectively, 
such as target field imaging, intrusion detection, weather 
monitoring, security and tactical surveillance, distributed 
computing, and so on. In a scenario of monitoring environ-
ment, moving users expect to obtain the information immedi-
ately when the normal or unexpected events occurred and they 
can inquire the interested data. 
In the previous researches, data dissemination protocols 
with the mobile sinks can be classified into two categories, 
tree-based and grid-based protocols. The tree-based protocols 
include SEAD [3] and SAFE [4]. SEAD is an approach for 
routing sensor's data to mobile sinks. SEAD is suitable for 
applications with less strict delay requirements. Another pro-
tocol SAFE uses geographically flooding to forward the query 
towards to the source that detects the event. SAFE is effective 
in small-to-medium size sensor networks. However, in a very 
 
* This work is supported in part by National Science Council under grant 
NSC-95-2221-E-024-012, Taiwan 
large network, the initial sensor flooding may consume too 
much energy. The d-tree would be frequently reconstructed 
due to mobile sinks. 
The other category is based on grid-based protocol. TTDD 
[9] and CODE [8] are the event-driven data dissemination 
methods. In TTDD, the source announces the event by grid 
dissemination nodes when the source detects occurred event. 
The dissemination nodes are to transmit packets when the 
mobile sink queries the event. But the path from the source to 
the sinks is not optimization. When a sensor communicates 
with a sink, the restriction of grid structure may multiply the 
length of a straight-line path by 2 . Therefore, this approach 
incurs more energy and longer delays. The mobile sink also 
increases the energy consumption. 
Another, CODE is proposed for a grid-based sensor net-
work. In each grid, a coordinator is selected to cache the oc-
curred event. When a sink wants to get event data, it sends a 
query to the coordinator in its grid. An efficient data dis-
semination path is established based on the location of event 
and grid IDs. If the sink moves out the original grid, it recon-
structs a new one. But CODE does not to solve the routing 
problem with obstacles or voids in a sensor field.  
In CODE and TTDD, the sinks have to reissue a query to 
request data or using local flooding to request data when they 
moved out the original grid. This will increase the energy 
consumption and the collision. 
In this paper, we propose a novel protocol which combines 
the data aggregation and data dissemination to gather data 
from the regular-shape and irregular-shape ranges. Our pro-
tocol is based on grid sensor networks. A sensor node, called 
head, is selected from the sensors in a grid for announcing and 
routing. Each mobile sink can obtain the occurred event from a 
grid head where it is located. If the sink is interested in event, it 
queries the source via the grid heads. By regular-shape range 
query, the sink designates the range for data aggregation. The 
previous researches do not focus on the monitoring of diffus-
ing event such as diffused smoke, gas, fire, and so on. This 
work proposes an irregular-shape region querying for tracking 
the diffused event and aggregating data. The proposed proto-
Data Aggregation for Range Query in Wireless Sensor Networks* 
Tzung-Shi Chen1    Yi-Shiang Chang1    Hua-Wen Tsai2    Chih-Ping Chu2 
1Department of Information and Learning Technology 
National University of Tainan 
Tainan 700, Taiwan 
chents@mail.nutn.edu.tw 
2Department of Computer Science and Information Engineering 
National Cheng Kung University 
Tainan 701, Taiwan 
chucp@csie.ncku.edu.tw 
 
1525-3511/07/$25.00 ©2007 IEEE 
This full text paper was peer reviewed at the direction of IEEE Communications Society subject matter experts for publication in the WCNC 2007 proceedings. 
 
4130
y-directions. Otherwise, the head forwards packet to 
x-direction. 
S3: If head's G.x is not equal to Src_G.x+R.x, it forwards 
this packet and records the forwarding node as its parent. 
S4: If head's G.x is equal to Src_G.x+R.x, it means the head 
is a leaf node and it sends the sensing data to its parent. The 
sensing data is aggregated from leaf to the source. 
 
Fig. 1: Data aggregation with regular-shape and irregular-shape range 
D. Querying Irregular-Shape Range 
1) Detecting and Tracking the Diffusing Event 
This work proposes irregular-shape range querying to 
monitor the diffusing event. The diffusing event is dynami-
cally extended to other region such as fire, smoke, or gas dif-
fusion. When the event is spread to the neighboring grids, the 
source tracks the diffusing event. A MS can query the source to 
obtain the information of diffusing event. 
When a head node n detects an event, it first checks register 
table whether the same event is detected in adjacent grid. If no, 
it broadcasts register packet to network (as mentioned in Sec-
tion II.B). If yes, we assume this event is diffusing from ad-
jacent grid. Node n records the adjacent head as its parent and 
sends data_link packet to its parent. The format of data_link 
packet is <P_type, N_id, Loc(x, y), G(x, y), P_id>, where N_id is 
this node's id and P_id is parent's id. If the same event is de-
tected by more than two adjacent grids, node n selects one of 
adjacent nodes as its parent that is the closest node to the 
source. When the parent receives the data_link packet, it re-
cords the forwarded node as its child. Next, the parent sends 
ack packet to its child. When the child receives ack packet, it 
sends notification packet <P_type, N_id, Loc(x, y), G(x, y), hc, 
event_type, timeout> to its four adjacent grid heads. When the 
adjacent heads receive the notification packet, they keep this 
information in register table. The source constructs a tree to 
track the diffusing event and aggregates the information of 
diffused event easily. 
In Fig. 1 (b), the event is diffused from G(3, 3) to three grids 
G(2, 3), G(3, 2) and G(3, 4). When heads B, C and D detect this 
event, they check whether the same event is registered in their 
register tables. Because source A has registered the event by 
data dissemination, they send data_link packet to A. When 
source A receives the packets from B, C or D, it replies ack 
packet to them respectively and records them as its children. 
When B, C and D received ack, they broadcast notification 
packet to their adjacent grids instantly. This packet notifies 
their adjacent grids where some event has occurred, e.g. heads 
H, I and J know an event has occurred in G(3, 3). 
2) Aggregating Data in Irregular-Shape Region 
A source tracks the diffusing event by tree structure. When 
the source receives query packet and agg_type is equal to 1, it 
sends agg_irr packet to its children to collect data. The format 
of agg_irr packet is <P_type, Src_id, S_id, event_type, 
C_id_list>, where Src_id is source id, S_id is sink id, and 
C_id_list is child id list. An example is shown in Fig. 2 (a). 
Source A sends agg_irr packet to its children B and C. Next, 
nodes B and C send agg_irr packet to their children D, E, F 
and G. When leaf nodes D, F, G, H, and I receive the agg_irr, 
they send their sensing data to their parent. The aggregated 
data flows are shown in Fig. 2 (b). When source A receives the 
data from its children B and C, it sends the final aggregated 
data to MS along the query path. 
 
Fig. 2: An example for querying irregular-shape range 
Each node supports cache mechanism in proposed ap-
proach. When a node receives the aggregated data from the 
source to MS, it caches this data within TTL period. If TTL 
expired, it clears up data from its cache. All nodes on the 
forwarding data path between the source and MS have to cache 
data. When the cached node receives the same query from 
other MS, it replies the cached data to MS instantly. This cache 
mechanism decreases the cost of querying and aggregating 
data. 
E. Sink Mobility Maintenance  
To monitor the interested regions, MS receives data from the 
source continuously. This work also considers how to main-
tain the routing between MS and source. The MS checks its 
location every second. If MS detects it moves out the original 
grid, it selects the head of new grid as new agent. Next, the MS 
sends moving packet to new agent. When the new agent re-
ceives this packet, it checks whether it is in data path. If no, it 
sends the moving packet to old agent for constructing new link. 
Old agent forwards data to new agent when it receives data 
from the source. If new agent is in the forwarding data path, it 
sends removing packet to delete the path between new and old 
agent to avoid looping problem. 
III. DATA AGGREGATION OF RANGE QUERY WITH VOIDS 
This section discusses how to aggregate data with void re-
gions. The void region means that no node is in a grid due to 
This full text paper was peer reviewed at the direction of IEEE Communications Society subject matter experts for publication in the WCNC 2007 proceedings. 
 
4132
as n. In this approach, the parent in facei has only one virtual 
link that connects to child. This work constructs virtual link to 
track the event that is diffused through void regions. Though 
void regions exist in the network, the MS can monitor and 
aggregate data for diffusing event efficiently. 
In Fig. 6 (a), L is source and the event is diffused to G(4, 2), 
G(4, 4) and G(5, 3); P, K and O are the children of L (○1 ). Next, 
the event is diffused to G(2, 4) through void regions and node A 
detects this event. Because node A's adjacent grids do not have 
this event and A is in face1, A constructs virtual link to K by 
face1 (○2 ). Next, the event is diffused to G(4, 6) through void 
regions. Similarly, E constructs virtual link to K and becomes 
A's parent (○3 -○5 ). The data link is shown in Fig. 6 (b). 
 
Fig. 6: Constructing the link of continuous event with void 
IV. EXPERIMENTAL RESULTS 
A. Simulation Model 
Some grid-based data dissemination protocols have been 
proposed such as CODE [8] that is based on a virtual grid 
structure. First, this work compares the proposed approach 
with CODE by ns-2 [6]. Next, the work discusses the number 
of sinks and the percentage of void grids how to impact the 
performance. We assume the energy consumption of trans-
mitting, receiving and idling are 0.7W, 0.35W and 0.035W, 
respectively. The initial energy is equal to 10J. The transmis-
sion range of sensor is 112m, and the gird size is 50m. The 
sensing range of sensor can fully cover with its grid. The data 
rate is 2m/s and the mobility model is random waypoint 
model. The sensor network consists of 200 sensor nodes which 
are deployed uniformly in a 500m×500m field (i.e. two sensor 
nodes per 50m×50m grid). 
B. Simulation Results 
1) Aggregating Data of Regular-Shape Range 
We assume that the velocity of sink is 2m/s and sink queries 
and aggregates data with varied range in this simulation. From 
the results, we observe the delay time and the energy con-
sumed for querying regular-shape range. The total energy 
consumption is the register (data dissemination) and query 
energy consumption. The delay time is the wait time of MS to 
obtain data. Fig. 7 (a) shows the delay time. When MS requests 
to acquire data with a bigger range, MS has to wait the longer 
delay time, because the source has to collect more data in 
bigger range. Fig. 7 (b) shows the energy consumption. This is 
also similar to delay time. Bigger querying range need con-
sume more energy. 
Qureying Regular-Shape Range
0
0.2
0.4
0.6
0.8
1
1 2*2 2*3 3*3
(a) Querying Range
D
el
ay
 T
im
e 
(s
ec
) Our
Approach
Qureying Regular-Shape Range
0
0.5
1
1.5
2
2.5
3
1 2*2 2*3 3*3
(b) Querying Range
C
on
su
m
ed
 E
ne
rg
y 
(J
)
Our
Approach
 
Fig. 7: Data aggregation in varied range 
2) Aggregating Data of Irregular-Shape Range 
In this simulation scenario, we assume the velocity of sink is 
2m/s and the event is diffusing. The sink queries data in ir-
regular range. We assume that spread range of event is varied 
from 1 to 9 grids. First, this work compares the energy con-
sumption in data dissemination with CODE. CODE does not 
support the tracking of diffusing event and each grid head has 
to run data dissemination when it detects an event. Fig. 8 
shows CODE consumes more energy when the spread range 
becomes great. In proposed approach, a tracking tree is con-
structed to monitor the diffusing event. Only the source needs 
to do data dissemination, so this approach decreases a lot of 
cost in data dissemination. The energy consumption is only 
slightly increased. 
Querying Irregular Shape Range
0
10
20
30
40
50
1 3 5 7 9Number of diffused grid
C
on
su
m
ed
 E
ne
rg
y 
(J
) CODE
Our Approach
 
Fig. 8: Energy consumption in data dissemination 
Querying Irregular Shape Range
0
1
2
3
4
1 3 5 7 9
(a) Number of diffused grid
D
el
ay
 T
im
e 
(s
ec
) CODE
Our Approach
Querying Irregular Shape Range
0
5
10
15
20
1 3 5 7 9
(b) Number of diffused grid
C
on
su
m
ed
 E
ne
rg
y 
(J
) CODE
Our Approach
 
Fig. 9: Data aggregation for irregular querying range 
When a sink wants to monitor diffusing event, CODE has to 
issue multiple queries to collect data. The multiple queries will 
consume a lot of resource and obstruct network. Therefore, the 
sink cannot obtain data fast due to network obstructed. That 
can be observed from Fig. 9 (a). Fig. 9 (b) shows the energy 
consumption for aggregating data. The proposed approach 
improves the drawback of CODE and provides an efficient 
approach to monitor and track diffusing event. 
3) Impact of Cache Mechanism 
In this subsection, we assume the number of sinks is varied 
from 1 to 8. All sink query and collect data in the same range. 
In addition, eight kinds of different static events are occurred 
in network simultaneously. The velocity of sink is 2m/s and 
This full text paper was peer reviewed at the direction of IEEE Communications Society subject matter experts for publication in the WCNC 2007 proceedings. 
 
4134
