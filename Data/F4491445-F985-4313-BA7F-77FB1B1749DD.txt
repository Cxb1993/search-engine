I 
 
摘要 
 
車載網路是一個新興的技術，並且是極具發展性的智慧型運輸系統平台。車
載網路中最重要的應用，是當發生危險事件時，透過傳送緊急訊息通知駕駛人。
這個應用的核心技術為廣播方法的設計。簡單的氾濫式廣播方法將可能造成廣播
風暴、連線空洞及路口問題。在這個計畫中，我們提出了適用於城市環境的街道
式廣播機制，這個方法有著更有效率的抵達率及重傳負載。為了確保能夠更加適
用在低交通密度的稀疏環境，我們另外提出了智慧型轉送機制。這個機制允許車
輛攜帶緊急訊息，並且能夠聰明地轉送這些訊息給其他車輛。我們利用網路模擬
工具，設計並開發一個效能評估環境。實驗結果顯示，我們所提出的機制較其他
方法更具優勢。 
 
關鍵字：車載網路、智慧型運輸系統、緊急廣播、攜帶及轉送 
1 
 
1 前言 
近年來車載隨意網路（Vehicular Ad Hoc Networks, VANET）[1]的議題越來越受到重視，許多車
載隨意網路的應用與智慧型運輸系統（Intelligent Transportation System, ITS）互相結合。ITS 整合先
進計算、通訊與感測技術，提供有效交通管理以及即時關於交通狀況，車輛行駛時的安全性。ITS 可
以大幅減少車輛事故、交通擁塞以及人事成本。 
VANET 近年來受到相當重視，相關標準及應用被許多國家推廣。在 2004 年，IEEE 組織啟動了
一個 802.11p 工作小組研究，將 Wireless Access in the Vehicular Environment(WAVE)加入至 IEEE 802.11
標準中。IEEE 802.11p 的實體層(Physical layer)是基於 IEEE 802.11a，MAC(Medium Access Control) 層
是修改自 IEEE 802.11e。 
VAENT 是一種專門用以連結車輛與路邊設備的專用行動無線隨意網路(Mobile Ad Hoc Network, 
MANET)。VAENT 提供 Roadside-to-Vehicle Communication(RVC)與 Inter-Vehicle Communication (IVC)
兩種通訊情境。RVC 提供網際網路存取及資料檢索服務。IVC 運作方式類似多跳躍 MANET，透過中
繼節點轉送數據。 
VANET 最重要的應用，是當發生危險事件，如路面濕滑或發生車輛時，散佈緊急訊息通知駕駛
人進行預警[2]。這些訊息短時間內，透過可靠的方式傳送給位於特定區域內的車輛。在一般應用下，
無線網路的資料散佈是透過使用氾濫(Flooding)方法實現。然而，存取控制在無線媒介如 IEEE 802.11 
MAC 協定，沒有足夠的效率處理訊號干擾、碰撞及頻道存取競爭等。造成資料傳輸上的許多問題，
例如隱藏節點(Hidden terminal)[3]及廣播風暴(Broadcast storm)[4]問題。 
在車輛行駛的環境中，車輛的高速移動及建築物所造成的訊號陰影效應(shadow effect)，都會導
致資料的傳輸更具挑戰性。在計畫中，我們提出一個緊急訊息散佈的廣播方法。這個方法可以沿著道
路散佈訊息，而車輛不需要內建相關的地理資訊。我們於 NS2(Network Simulator 2)中進行方法的驗
證，結果顯示這個方法具備較高的資料抵達率(High delivery ratio)、較低的廣播負載(Broadcast overhead)
以及較低的端至端傳輸延遲(Low end-to-end delay)。為了確保我們提出的方法能夠有效運行在車輛密
度稀疏的環境中，我們設計智慧轉送機制(Smart relay mechanism)，這個機制能夠攜帶緊急訊息，並且
能夠聰明地將訊息轉送給其他車輛。 
  本篇報告的結構如下：第二章說明本研究探討的議題，第三章介紹 VAENT 下的緊急訊息廣播機
制，第四章針對本計畫所提之方法進行說明，第五章探討結果的成效與整體計畫的進度，並對本報告
作出結論。 
 
2 研究目的 
在 VANET，最基本的應用是安全性相關的訊息傳遞機制。當車輛偵測到附近有緊急事件或不安
全事件發生，它可以透過多跳躍傳遞（Multi-Hop Relay）的廣播技術來通知附近的車輛，以免釀成更
大的事故發生。因此，緊急訊息的傳遞機制特別需要低延遲性與高可靠性。 
IEEE 802.11 對於媒介管理方面是相當沒有效率的，特別是在進行訊息廣播方面，容易造成廣播
時發生碰撞或干擾等問題。由於 IEEE 802.11 的廣播機制沒有使用確認封包機制，因此傳送方節點無
法確認此次傳輸資料是否成功，當然也就無法進行重傳機制。當廣播機制遭遇無線網路環境中常見的
隱藏節點問題、廣播風暴，常常使得廣播訊息無法被繼續傳遞下去。 
目前大部分針對緊急事件廣播機制的研究，都是透過距離的資訊來挑選轉送節點（Relay node），
目的在於希望廣播訊息能夠較快地傳遞給在緊急事件發生現場附近的車輛。但是，這些機制無法確定
在緊急事件發生現場附近的車輛是否有正確收到廣播封包。 
3 
 
 
圖 3. Shadow problem. 
3.2 車載網路廣播機制的研究 
為了克服廣播風暴問題，一些廣播方法針對降低多餘的重覆廣播進行研究[4][5]。然而這些方法
無法直接應用於 VANET，由於下列的幾個原因。首先，VANET 雖然與 MANET 存在共同的特徵，但
是 VANET 有著獨特的功能：例如地理環境的制約、高度動態的拓樸結構、可預測的移動性，以及足
夠的能源及儲存空間。最後兩個特點能為 VANET 廣播設計上帶來好處。 
除此之外，VANET 廣播方法設計的重點不同於 MANET，特別是在緊急訊息警告。在 VANET
廣播方法設計上有兩個重要的考慮因素，快速散佈及高可靠性，快速散佈的目的在於給予駕駛人有足
夠的反應時間，高可靠性的目的在於確保能夠通知到所有的駕駛人，在 VANET 中這兩點變得非常重
要。 
我們已經研究近年來在 VANET 中已經提出的廣播方法並加以分類，如圖 4 所示。 
VANET
Broadcast
Sector Based
Sender Knowledge
Based
p-persistence
Neighbor Knowledge
Based
WPP
Location Based
1-persistence
SPP
EDB
DSICFP
ODAM
SB
UMB
S1P
PCC
V-TRADE
HV-TRADE
 
圖 4. Classification of broadcast schemes in VANET. 
 
我們根據方法設計的特性分成 Sender Knowledge Based 方法與 Neighbor Knowledge Based 方法。
全部的廣播方法的核心技術是選擇下一個中繼節點。Sender node 是表示傳輸或重新傳輸一個廣播封
5 
 
4 研究方法 
在這個章節，我們將仔細介紹我們所設計的方法。首先，假設所有的車輛都搭載無線通訊系
統、感測裝置與全球定位系統。車輛與車輛之間會週期性傳送廣播封包來交換彼此的資料。 
Source ID 
Sequence 
Number 
Sender 
Position 
Warning 
Area 
Warning 
Duration 
Time 
Stamp 
Event 
圖 5. Format of an emergency broadcast packet. 
當車輛偵測到發生緊急事件時，車輛將週期性的緊急廣播封包。緊急廣播封包格式如圖 5 所示，
Source ID 表示偵測事件並產生訊息的節點代碼、Sequence Number 記錄獨一無二的事件編號、Sender 
Position 表示 Sender 的位置、Warning Area 表示警告的範圍、Warning Duration 表示警告持續時間、
Time Stamp 表示 Source ID 產生訊息的時戳，以及 Event 表示事件類型及緊急程度。 
接下來，將介紹我們針對 intersection 及 shadowing 問題所提出的街道式廣播機制，以及針對
connection hole 問題所提出的智慧型轉送機制。 
4.1 街道式廣播機制 
在車載環境中，緊急訊息的散佈通常與車輛行駛的道路相關。然而安全訊息不僅要傳遞給位於相
同道路的車輛，也要傳遞給鄰近的道路上的車輛。基於上述因素，我們想將廣播訊息傳遞到相關區域
中的車輛。但是受到建築物遮蔽與干擾導致，與其他道路上的車輛通訊將非常困難。為了克服這個問
題，我們希望將緊急事件的廣播訊息沿著道路傳遞。如圖 6 所示，當車輛上的感應器偵測到事故發生
時，緊急事件的廣播封包沿著道路傳遞給所有相關道路上的車輛。最重要是我們所提出的方法，具備
彈性且不需要地理資訊系統的支援。 
 
圖 6. Broadcast along the street. 
為了節省封包轉送時間及轉送次數，我們挑選距離 Sender 最遠距離的鄰居節點，作為封包的下
一轉送節點。Source 將週期性廣播緊急訊息。如果 Source 節點移出警告範圍，Source 節點將選擇一
個還在警告範圍內的鄰居節點作為新的 Source 節點。新的 Source 節點選擇方式將依照以下順序挑選：
移動方向相反的節點、移動方向相同的節點、隨機挑選。 
當車輛第一次接收到廣播封包之後，將依照如圖 7 所示的流程執行，決定是否轉送這個封包。對
於第一次收到這個封包的節點，會先確認是否處於警告持續時間，以及是否處於警告範圍。如果節點
所收到的緊急訊息為有效訊息，節點將確認鄰居節點是否都接收到這個廣播封包。透過週期性交換
Hello 訊息，節點可獲得鄰居節點的位置，進而推算出鄰居節點是否接收到這個封包。如果鄰居節點
全部都已經接收到這個封包，為了降低冗餘重傳次數，節點將不重傳這個訊息。反之，為了解決
Intersection 與 Shadow 問題，車輛找出與自己位於相同道路上的鄰居節點集合，稱之為同街道車輛集
合。在同街道車輛集合中，找出位於 Sender 傳輸範圍內，並且離 Sender 最遠的車輛。如果符合條件
的車輛就是自己，將重傳這個廣播封包。反之，不會重傳這個封包。 
7 
 
(2) A 與 B 行駛同向或反向的方向。 
我們使用 NVL(A,B)計算法距，其中 PV(A,B)是投影向量，範例如圖 9 所示。 
NVL( , ) ( , ) ( , )VA B Dir A B PV A B   
  2
( , ) ( )
PV , ( )
( )
M
M
M
VDir A B Dir AA B Dir A
Dir A
 
  
 
 
 
Normal distance: NVL(A,B)
)(ADirM
( , )VDir A B
Projection vector: PV(A,B)
Car A
Car B
 
圖 9. Driving on the same street. 
因此，第一個限制可以被表示為 NVL(A,B)<H。為了容許誤差，第二個限制可以被表示成下列公
式： 
(DirM(A), DirM(B)) = (360T)~T or (180T)~(180+T)，在後面的實驗中 T 被設為 10。 
4.2 智慧型轉送機制 
由於街道式廣播機制無法解決 Connection hole 問題，因此我們在原本的街道式廣播機制加上智慧
型轉送的方法。採用智慧型轉送時，需增加 Hello 訊息封包所攜帶的資訊，在車輛週期性的交換訊息
封包內附加上車輛收過的緊急訊息序號清單。在比對 Hello 訊息中的緊急訊息序號後，若是發現自己
攜帶鄰居節點未接收過的緊急廣播封包，則會將這個訊息轉送給鄰居節點。 
由於週期性交換緊急訊息序號清單會使得車載網路的控制負載劇增，因此，我們提出輕量的交換
方式降低控制負載。交換 Hello 且完成傳遞緊急廣播封包程序的鄰居車節點，它們將擁有相同的緊急
訊息。所以限制節點與新的鄰居節點碰面時，才會交換緊急訊息序號清單。 
每部車輛將維護兩個表格，鄰居表格及緊急表格。鄰居表格記錄位於自己通訊範圍中，每一個鄰
居節點的狀態。這些鄰居節點的狀態資訊來自週期性交換的 Hello 訊息。如果連續兩個週期沒有收到
某個鄰居節點的 Hello 訊息，這個鄰居節點的資訊將從鄰居表格中移除。緊急表格記錄自己所收到的
全部尚未失效的緊急訊息。 
當某個車輛與新的鄰居節點碰面時，兩個節點將交換附加緊急訊息序號清單的 Hello 訊息。新的
鄰居節點的判決，是藉由該鄰居節點是否已被記錄在鄰居表格中。交換 Hello 訊息後，該車輛計算兩
者之間的距離。如果兩者之間的距離，比該車輛的其他鄰居節點與新節點之間的距離都還短，此車輛
將傳送新節點所缺少的緊急訊息。 
 
5 結果與討論 
為了評估廣播效能，我們在 NS-2[15]中開發車載網路中經典的廣播方法，與我們所提出的方法做
比較。我們採用的評估廣播機制之標準為可靠性、重傳次數及端點間的延遲時間。可靠性是測量接收
到緊急廣播封包的車輛個數比例值。重傳次數主要是測量平均每一個廣播封包的被節點重傳的次數。
兩端點間的延遲時間是測量車輛接收到緊急廣播訊息需多少延遲時間。 
9 
 
0
50
100
150
200
250
300
50 100 150 200 250 300
Nodes
R
et
ra
n
sm
is
si
o
n
 T
im
es
 p
er
 b
ro
a
d
ca
st
 p
a
ck
et
Flooding
WPP
SPP
S1P
WPP*R
SB
 
圖 11. Retransmission Times comparison 
0
0.005
0.01
0.015
0.02
0.025
0.03
0.035
50 100 150 200 250 300
Nodes
E
n
d
-t
o
-e
n
d
 d
el
a
y
 (
se
c)
Flooding
WPP
SPP
S1P
WPP*R
SB
 
圖 12. End-to-end delay comparison 
 
參考文獻 
[1] S. Yousefi, M. S. Mousavi, and M. Fathy, “Vehicular Ad Hoc Networks (VANETs): Challenges and 
Perspectives,” in Proc. Intl. Conf. on ITS Telecommunications (ITST), pp. 761-766, Jun. 2006. 
[2] Y. Toor, P. Muhlethaler, A. Laouiti, “Vehicle Ad Hoc Networks: Applications and Related Technical 
Issues,” IEEE Communication Surveys and Tutorials, vol. 10, no. 3, pp. 74-88, Jul./Sept. 2008. 
[3] B. P. Crow, I. Widjaja, J. G. Kim, and P. T. Sakai, “IEEE 802.11 Wireless Local Area Networks,” IEEE 
Communications Magazine, vol. 35, no. 9, pp. 116-126, Sept. 1997. 
[4] S. Y. Ni, Y. C. Tseng, Y. S. Chen, and J. P. Sheu, “The Broadcast Storm Problem in a Mobile Ad Hoc 
Network,” in Proc. ACM MOBICOM, pp. 151-162, 1999. 
[5] B. Williams and T. Camp, “Comparison of Broadcasting Techniques for Mobile Ad Hoc Networks,” in 
Proc. ACM MOBIHOC, pp. 194-205, 2002. 
[6] N. Wisitpongphan, O. K. Tonguz, J. S. Parikh, P. Mudalige, F. Bai, and V. Sadekar, “Broadcast Storm 
Mitigation Techniques in Vehicular Ad Hoc Networks,” IEEE Wireless Communications, vol. 14, no. 6, 
pp. 84-94, Dec. 2007. 
[7] D. Li, H. Huang, X. Li, M. Li, and F. Tang, “A Distance-Based Directional Broadcast Protocol for 
Urban Vehicular Ad Hoc Network,” in Proc. Intl. Conf. on Wireless Communications, Networking and 
  
 
2011 4th IEEE International Conference on Computer Science and Information Technology  
(IEEE ICCSIT 2011) 
 
- 1 - 
Notification of Acceptance of 4th IEEE ICCSIT 2011 
第四届 IEEE 计算机科学与信息技术国际会议 
June 10 - 12, 2011, Chengdu, China 
www.iccsit.org  
 
 
Dear Yi-Jen Lin Jhih-Siao Gao Shou-Chih Lo, 
Paper ID:   A30608 
Paper 
Title: 
  A Multi-Head Clustering Algorithm in Vehicular AdHoc Networks 
Congratulations! The review processes for 2011 4th IEEE International Conference on Computer 
Science and Information Technology (IEEE ICCSIT 2011) has been completed. The conference 
received submissions from 35 different countries and regions, which were reviewed by international 
experts, and 300 papers have been selected for presentation and publication. Based on the 
recommendations of the reviewers and the Technical Program Committees, we are pleased to 
inform you that your paper identified above has been accepted for publication and oral presentation. 
You are cordially invited to present the paper orally at ICCSIT 2011 to be held on June 10 - 12, 
2011 in Chengdu, China. 
ICCSIT 2011 is sponsored by IEEE Beijing Section, Technical Co-sponsored by IEEE Chengdu 
Section, Sichuan Institute of Electronics, Chinese Institute of Electronics, Peking University, 
Sichuan University, Southwest Jiaotong University, University of Electronics Science and 
Technology, and Northeastern University. 
(Important) So in order to register the conference and have your paper included in 
the proceeding successfully, you must finish following SIX steps. 
1. Revise your paper according to the Review Comments in the attachment carefully. 
2. Format your paper according to the Template carefully.  
http://www.iccsit.org/IEEE.doc (DOC Format)  
3. Download and complete the Registration Form. 
http://www.iccsit.org/ICCSIT.Registration.doc (English) 
http://www.iccsit.org/ICCSIT.CNRegistration.doc (中国大陆作者注册表) 
A Multi-Head Clustering Algorithm in Vehicular Ad Hoc Networks 
 
Yi-Jen Lin 
Department of Computer Science 
and Information Engineering 
National Dong Hwa University 
Hualien 974, Taiwan 
m9621049@ems.ndhu.edu.tw 
Jhih-Siao Gao 
Department of Computer Science 
and Information Engineering 
National Dong Hwa University 
Hualien 974, Taiwan 
d9721005@ems.ndhu.edu.tw 
Shou-Chih Lo 
Department of Computer Science 
and Information Engineering 
National Dong Hwa University 
Hualien 974, Taiwan 
sclo@mail.ndhu.edu.tw 
 
Abstract—Clustering is an important research topic in wireless 
networks, because cluster structures can facilitate resource reuse 
and increase system capacity. In this paper, we present a new 
clustering algorithm that considers both node position and node 
mobility in vehicular ad hoc environments. The proposed 
algorithm intends to create stable clusters by reducing 
reclustering overhead, prolonging cluster lifetime, and shortening 
the average distance between cluster heads and their cluster 
members. Most important, this algorithm supports single and 
multiple cluster heads. Simulation results show the superiority of 
our clustering algorithm over the other three well-known 
algorithms. 
Keywords-VANET; Clustering; Single/Multi-Head; Mobility; 
Head Election 
I. INTRODUCTION 
Clustering is a technique to group nodes into several 
clusters. Each node in the cluster structure plays one of three 
roles: Cluster Head (CH), Cluster Gateway (CG), and Cluster 
Member (CM). A CH is a leading node of a cluster and is 
responsible to coordinate all CMs in its cluster. A CG is a 
border node of a cluster that can communicate nodes belonging 
to different clusters. 
In mobile wireless networks, clustering is a practical skill to 
reduce the complexity of network management [1][2][3]. For 
example, CHs can allocate channel resource (time slots or 
frequency spectrums) to their CMs to avoid any happenings of 
transmission collisions and increase resource utilization within 
a cluster. Moreover, a virtual backbone network can be built by 
CHs and CGs to manage all routing jobs. This enables a 
scalable wireless routing protocol. 
Clustering has many application domains. However, 
developing efficient clustering techniques in mobile 
environments is not an easy job. Node mobility will frequently 
destroy existing cluster structures. Reclustering overhead 
becomes an important cost metric. 
In this paper, we consider a data sharing application in a 
Vehicular Ad hoc Network (VANET). VANET is a specialized 
Mobile Ad Hoc Network (MANET) that connects vehicles and 
roadside facilities. The major function of VANET is to provide 
real-time services and emergency warnings for drivers and 
passengers. VANET provides both Roadside-to-Vehicle 
Communication (RVC) and Inter-Vehicle Communication 
(IVC). 
Our data sharing application is motivated by a typical 
scenario, where a passenger in a car would like to download an 
interested multimedia file from neighboring cars via IVC. Here, 
we use the cluster structure to facilitate the finding, uploading, 
and downloading of multimedia files. Vehicles that are willing 
to share data are grouped into clusters. In a cluster, CMs can 
upload their shared data and query interested data to the CH(s). 
CMs can also download interested data from the CH(s).  To 
speed up data downloading, a bit-torrent downloading 
mechanism from multiple seed nodes (CHs) is recommended. 
Therefore, we need to construct a cluster with multiple CHs. 
Several clustering algorithms [4][5][6][7][8][9][10] have 
been proposed for mobile networks. However, they have some 
weaknesses when applied to our data sharing application. First, 
these algorithms do not support an arbitrary number of CHs 
within a cluster. Second, most of them are designed for 
MANET but VANET. VANET has its own unique features 
such as highly dynamic topology, sufficient energy and storage, 
and geographical environment constrains. A mobile node in 
MANET can move in arbitrary directions but can only move 
along the street in VANET. Moreover, most vehicles are 
equipped with GPS (Global Positioning System) devices. The 
location and mobility information about a vehicle is available, 
which facilitates the design of a more efficient clustering 
algorithm. 
We would first introduce our proposed single-head 
clustering algorithm by detailing the process of CH election. 
Then, a multi-head clustering algorithm is illustrated. The 
remainder of this paper is organized as follows. A brief survey 
on clustering algorithms in mobile environments is given in 
Section 2. Our proposed algorithm is presented in Section 3. 
We evaluate the performance in Section 4. Finally, we draw 
significant conclusions in Section 5. 
II. RELATED WORK 
A clustering algorithm includes two technical parts: cluster 
establishment and cluster maintenance. In cluster establishment, 
we need to identify the role (CH, CG, or CM) of each node in 
the network. The election of CHs is a core technique. In cluster 
maintenance, reclustering (cluster merge and split) needs to be 
performed to handle the effects of node mobility and node 
failure. An efficient clustering algorithm should take care of 
performance metrics such as cluster lifetime and reclustering 
overhead. 
 We classify existing clustering algorithms according to two 
categories: cluster structure and election criterion. From the 
structure point of view, clustering algorithms either have 
different topologies (overlapping or non-overlapping) or CH 
numbers. Most of clustering algorithms select one CH in a 
cluster. Two CHs are selected in [11]. A CG can belong to 
more than one cluster in overlapping clusters while a CG 
belongs to only one cluster in non-overlapping clusters. The 
distance between a CM and a CH is typically one-hop. 
Overlapping clusters (such as [12], [13], and [14]) and non-
UN
CM CH
Win the election
All CMs are leaving
Two clusters are merged
Ac
cep
t a 
joi
n i
nvi
tati
on
Th
e C
H i
s le
avi
ng 
or 
res
ign
ed
 
Fig. 1.  Role transition diagram in a single-head cluster. 
|UN_NUMi|: number of UNs in the neighbor table of node i. 
UN_BOUND: threshold value for a node to star the CH 
election.  
|CMi|: number of CMs joining to a CH node i. 
Four control packets are used in our clustering algorithm: 
HELLO: periodically broadcast packet by each node that 
carries the mobility-related data, RPM, node role, and |CM| 
values. 
JOIN_INVITE: broadcast packet issued from a CH to invite 
any possible CMs. 
JOIN_REPLY: broadcast packet issued from a CM to 
acknowledge a join invitation from a CH.  
CH_RESIGN: broadcast packet issued from a CH when 
deciding to resign from a CH. 
Cluster construction steps are explained below: 
Step 1: Initialize each node to be a UN. 
Step 2: Each node broadcasts a HELLO packet per BI. 
Step 3: A node i starts the CH election as 
|UN_NUMi|≥UN_BOUND. A node declares itself a CH when 
its RPM is the smallest one in its neighbor table. To break the 
tie, the smallest Rel_Dist, Rel_Speed, and ID are considered in 
sequence. 
Step 4: A new CH broadcasts a JOIN_INVITE packet to its 
neighbors.  
Step 5: A UN joins to a cluster when it receives a 
JOIN_INVITE packet from a CH that is driving with the same 
direction as it. This UN replies a JOIN_REPLY packet to the 
CH. 
C. Cluster Maintenance 
We individually explain the transition of each node role. 
UN:  
(1) A UN becomes a CH if winning the election. 
(2) A UN becomes a CM if receiving a JOIN_INVITE packet 
from a CH that is driving with the same direction as it. 
CH: 
(1) Two CHs i and j will enter a competition process if the 
following conditions are true: 
- CHs i and j contact (can communicate with each 
other) for a time period greater than CI. 
- CHs i and j drive in the same direction.  
- The distance between i and j is smaller than CD. 
The CH having the larger number of CMs wins the 
competition. That is, if |CMi| ≥ |CMj|, then CH j resigns 
from a CH by broadcasting a CH_RESIGN packet to its 
neighbors. In this case, CH j becomes a CM of CH i. 
(2) A CH removes a CM from its CM list if it does not receive 
any HELLO packet from this CM over a time period of TI. If 
the CM list is empty, this CH returns as a UN. 
CM: 
(1) If a CM does not receive any HELLO packet from its CH 
over a time period of TI, this CM returns as a UN. 
: SCH: MCH: CM  
Fig. 2.  Multi-head election. 
(2) A CM returns as a UN, if it receives a CH_RESIGN 
packet from its CH. 
The whole role transition diagram is depicted in Fig. 1. 
D. Multi-Head Clustering 
The multi-head version is extended from the single-head 
version. We first construct clusters using the single-head 
algorithm. The selected CH in each cluster is called a master 
CH (MCH). Then, we select some CMs from a cluster to be 
slave CHs (SCHs). Therefore, each multi-head cluster contains 
one MCH and several SCHs. In a vehicular environment, a 
cluster usually has a rectangular shape that captures a certain 
road segment. Having the positions of all CMs, an MCH can 
compute the bounded rectangle that encloses all its CMs. Then, 
this rectangle is divided into some sectors (with the number 
being specified) as the example shown in Fig. 2. The MCH 
selects one SCH that has the locally smallest RPM in each 
sector (except for the sector the MCH is located in). 
A new control packet SCH_ASSIGN is introduced, which 
is used by an MCH to announce the SCH list. A CM transits to 
a SCH when receiving a SCH_ASSIGN packet and finding that 
its ID is in the SCH list. The MCH periodically announces the 
SCH list by using the same HELLO packet. In the cluster 
maintenance, the procedures of UN, CH (as MCH), and CM 
remain unchanged. An additional node role of SCH is 
introduced in our role transition diagram as shown in Fig. 3. 
Here, an SCH returns to as a CH when its MCH is leaving or 
resigned.  
 
UNCM
MCH
W
in the election
A
ll C
M
sare leaving
Two clusters are merged
Accept a join invitation
The MCH is leaving or resigned
SCH
A
ccept an SC
H
 assignm
ent
The
 MC
H i
s le
avi
ng
or r
esig
ned
W
in the election
A
ll C
M
sare leaving
A
ccept an SC
H
 assignm
ent
 
Fig. 3.  Role transition diagram in a multi-head cluster. 
IV. PERFORMANCE EVALUATION 
To evaluate the performance of our proposed algorithm, we 
carry out simulations using NS-2 [17]. We compare our 
algorithm (abbreviated as CPM, Center-Position and Mobility) 
with LCC, LID, and MOBIC. The single-head version of CPM 
is concerned, since the other compared targets are all single-
head approaches. The cost metrics used in our experiments are 
listed below: 
Average number of clusters: average number of clusters by 
averaging system observations per ten seconds.  
suitable for our data sharing application in vehicular 
environments. 
Next, we compare the performances of MOBIC and CPM. 
MOBIC is a mobility-based clustering algorithm while CPM is 
a multiple-metrics-based one. As can been seen in the figures, 
MOBIC generates smaller clusters than CPM. Also, vehicles 
on forward and reverse lanes are not separated in MOBIC, so 
its cluster lifetime is shorter than CPM. Those vehicles that 
occasionally join to a CH with a different moving direction as 
them will frequently become UNs as the CH is leaving. 
Moreover, the CH election in MOBIC takes the most time 
among all. To compute the relative mobility of one node 
against the other node, two successive HELLO packets are 
required. Therefore, the average idle time in MOBIC is long. 
However, those vehicles that drive the same direction with the 
CH will keep joining the same cluster, so the average resident 
time of MOBIC is long. As a conclusion, MOBIC is still not 
suitable for our data sharing application, because small-size 
clusters and long-idle periods prevent the searching of a verity 
of shared data. 
Compared with other algorithms, CPM provides stable 
clusters with long lifetime.  Moreover, the short idle time and 
the long resident time qualify CPM for a good clustering 
algorithm in data sharing. The idle time of CPM is higher than 
LID and LCC, because we disallow any clusters with size of 1. 
There may have single UN in our system and these single UNs 
are useless to data sharing. 
V. CONCLUSIONS 
We have introduced the importance of clustering to 
network and application designs. For example, grouping nodes 
into cluster structures make a network topology easy to 
maintain, and grouping users of the same interests facilitates 
data sharing. In this paper, we consider a data sharing 
application in a vehicular environment.  Vehicles nearby are 
grouped into a cluster in which some nodes are selected as 
cluster heads. These cluster heads serve as local file servers 
that enable surrounding nodes to upload and download shared 
data. We therefore propose a multi-head clustering algorithm. 
Our proposed algorithm can select a given number of 
cluster heads with a uniform distribution in space. Since node 
mobility has a great influence on cluster maintenance, both 
node position and node mobility are considered in our cluster 
head election. Different node roles are identified with a clear 
role transition diagram. Compared with traditional clustering 
algorithms for mobile environments, we additionally consider 
the unique feature in vehicular environments that vehicles drive 
along the street either with the same or opposite driving 
direction. Our experimental results reveal that the proposed 
algorithm generates stable clusters with long lifetime. 
In the future, we will consider more applications for our 
multi-head clustering technique. The cooperation behavior 
among multiple cluster heads need to be further discussed and 
evaluated. 
ACKNOWLEDGMENT 
This research was partially supported by National Science 
Council of the Republic of China under Contract No. NSC 98-
2221-E-259-013. 
REFERENCES 
[1] A. B. McDonald and T. F. Znati, “A mobility-based framework for 
adaptive clustering in wireless ad hoc networks,” IEEE Journal on 
Selected Areas in Communications, vol. 17, no. 8, pp. 1466–1487, Aug. 
1999.  
[2] C. R. Lin and M. Gerla, “Adaptive clustering for mobile wireless 
networks,” IEEE Journal on Selected Areas in Communications, vol. 15, 
no. 7, pp. 1265–1275, Sept. 1997. 
[3] T. C. Hou and T. J. Tsai, “A access-based clustering protocol for 
multihop wireless ad hoc networks,” IEEE Journal on Selected Areas in 
Communications, vol. 19, no. 7, pp. 1201–1210, Jul. 2001. 
[4] M. Gerla and J. T. Tsai, “Multiuser, mobile, multimedia radio network,” 
Wireless Networks, vol. 1, pp. 255-265, Oct. 1995. 
[5] A. D. Amis, R. Prakash, T. H. P. Vuong, and D. T. Huynh, “Max-min d-
cluster formation in wireless ad hoc networks,” in Proc. IEEE 
INFOCOM Conf., pp. 32-41, Mar. 2000. 
[6] K. Xu and M. Gerla, “A heterogeneous routing protocol based on a new 
stable clustering scheme,” in Proc. MILCOM Conf., pp. 838-843 vol.2, 
Oct. 2002. 
[7] M. Chatterjee, S. K. Sas and D. Turgut, “An on-demand weighted 
clustering algorithm (WCA) for ad hoc networks,” in Proc. IEEE 
GLOBECOM Conf., pp. 1697-1701, Nov. 2000. 
[8] C. C. Chiang, H. K. Wu, W. Liu, M. Gerla, “Routing in clustered 
multihop, mobile wireless networks with fading channel,” in Proc. IEEE 
SICON Conf., pp. 197-211, Apr. 1997. 
[9] P. Basu, N. Khan and T. D. C. Little, “A mobility based metric for 
clustering in mobile ad hoc networks,” in Proc. Int. Conf. Distributed 
Computing Systems Workshop, pp. 413–418, Apr. 2001. 
[10] F. D. Tolba, D. Magoni and P. Lorenz, ”Connectivity, energy and 
mobility driven clustering algorithm for mobile ad hoc networks,” in 
Proc. IEEE Global Telecommunications Conf., pp. 2786-2790, Nov. 
2007. 
[11] T.D.C. Little and A. Agarwal ,“An information propagation scheme for 
VANETs,” in Proc. IEEE Intelligent Transportation Systems Conf., pp. 
155-160, Sept. 2005. 
[12] X. Ji and H. Zha, “Sensor positioning in wireless ad-hoc sensor networks 
using multidimensional scaling,” in Proc. IEEE INFOCOM Conf., pp. 
2652-2661, Mar. 2004. 
[13] P. Krishna, N. H. Vaidya, M. Chatterjee and D. K. Pradhan, “A cluster-
based approach for routing in dynamic networks,” ACM SIGCOMM 
Computer Communication Review, vol. 27, no. 2, pp. 49-64, Apr. 1997. 
[14] T. Wu and S.Biswas, “A self-reorganizing slot allocation protocol for 
multi-cluster sensor networks,” in Proc. Int. Symp. Information 
Processing in Sensor Networks, pp. 309-316, Apr. 2005. 
[15] J. Y. Yu and P. H. J. Chong, “3hBAC (3-hop between adjacent 
clusterheads): a novel non-overlapping clustering algorithm for mobile 
ad hoc networks,” in Proc. IEEE PACRIM Conf., pp. 318–321, Aug. 
2003. 
[16] Y. Gunter, B. Wiegel and H. P. Grossmann, “Cluster-based medium 
access scheme for VANETs,” in Proc. IEEE Intelligent Transportation  
[17] The network simulator (http://www.isi.edu/nsnam/ns/). 
[18] Topologically integrated geographic encoding and referencing 
(http://www.census.gov/geo/www/tiger). 
[19] VanetMobiSim (http://vanet.eurecom.fr/). 
 
99 年度專題研究計畫研究成果彙整表 
計畫主持人：羅壽之 計畫編號：99-2221-E-259-007- 
計畫名稱：車載網路安全警告廣播服務之核心技術 
量化 
成果項目 實際已達成
數（被接受
或已發表）
預期總達成
數(含實際已
達成數) 
本計畫實
際貢獻百
分比 
單位 
備 註 （ 質 化 說
明：如數個計畫
共同成果、成果
列 為 該 期 刊 之
封 面 故 事 ...
等） 
期刊論文 0 0 100%  
研究報告/技術報告 0 0 100%  
研討會論文 2 2 100% 
篇 
 
論文著作 
專書 0 0 100%   
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 8 8 100%  
博士生 1 1 100%  
博士後研究員 0 0 100%  
國內 
參與計畫人力 
（本國籍） 
專任助理 0 0 100% 
人次 
 
期刊論文 0 1 100%  
研究報告/技術報告 0 0 100%  
研討會論文 2 2 100% 
篇 
 
論文著作 
專書 0 0 100% 章/本  
申請中件數 0 0 100%  專利 已獲得件數 0 0 100% 件  
件數 0 0 100% 件  
技術移轉 
權利金 0 0 100% 千元  
碩士生 0 0 100%  
博士生 0 0 100%  
博士後研究員 0 0 100%  
國外 
參與計畫人力 
（外國籍） 
專任助理 0 0 100% 
人次 
 
