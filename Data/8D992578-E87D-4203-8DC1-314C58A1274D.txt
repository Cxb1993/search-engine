 2
?? 
????????????????????????????????perception??
???insight?????learning????comprehension?????reasoning????????
?????????????????????(AI, Artificial Intelligent)?????????
????????????1).????????2).???(heuristic)??????3).????
??????4).???????????????????????5).????(machine 
learning)????????????????????????????????????
????????????????????????????????????????
????????????????????????????????? 
??????????????????????????????????????
???????1956 ? McCarthy??? Dartmouth ?????????????????
??????????????????????? 80????????????????
????????????????(Simulated Annealing?SA)??????(Tabu Search?
TS)??????(Threshold Accepting?TA)?????(Great Deluge Algorithm?GDA)???
???(Ant Colony Optimization?ACO)???????(Neural Network?NN)??????
?(Genetic Algorithms?GAs)???[1]????????(????????)???????
???????????????[2]? 
??????????????????????????????????????
?????????????????????(Criteria)???????????????
???????????????[3]??????????????(Multi-vector)????
?(Multi-criteria)?????????????????????????????????
????????????????????????????????????????
??????????????????????(Pareto-optimal front)?????????
?????????????????????????????(Multi-objective Genetic 
Algorithm?MOGA)[4-8]? 
? 1975 ? John Holland ???????(????????????simple GA?sGA)
??????????????????????????????[9-11]?Goldberg, Korb, 
and Deb???????????????(Mass Permutation)?? 1989?????????
????????????(messy GA?mGA)????????????????????
????????????????[10?12]????????????????????
???????Goldberg et al. ? 1993???????????????????????
(fast messy GA?fmGA)?????????????????????? 
97?98? 99???? 3???????????????????????[13-15]?
???????? 2???????????????????????????????
????????????????????????????????????????
?????????????????????????????????????? 
 
 
 4
????? 23??????????????????????????????????
????????????????????????????????????????
???????????????????????(Fitness Value)??? 
 
? 1?????????????Gen and Cheng, 1997? 
??????????????????????(???????)????????
????????????????????????????????????????
????????????????????????????????????
(Encoding)????????????????????????????????????
????????????????????????????????????????
????????????????????????????????????????
????????????????(?? 2??)???(?? 3??)??????????
?(Operation)??????????????????????????????????? 
 
? 2????????????? 
 6
??????????????????????????????????????
????????????????????????????????????????
?????????????(Messy)???????????(????/Allele Locus???
?/Allele Value)??????(3,0)(1,1)(5,0)(7,1)???? 3??????? 0?? 1????
??? 1?? 5??????? 0?? 7??????? 1???????????????
???????(Underspecified)????????(Overspecified)????????????
??(Competitive Template)??????????????????????????
(First-come-first-serve)???????????????? 6??????????????
???(3,0)(1,1)(5,0)(7,1)???? 2?4?6?8?? 9?????????????????
???????????????(3,0)(1,1)(3,1)(7,1)(5,0)(4,1)(8,)(9,1)(6,0)(2,1)(5,1)??? 1
????????? 3??? 3 ?????????? 3?????????????? 3
???????????????????? 
0 0
 
? 6????????????? 
??????????????????????????????????????
????????????????????????????????????????
???(Initialization bottleneck)????????Goldberg? 1993???????????
??????????????????? fmGA???????????????????
??????????????????????? messy GA?????(fast)?? 
??????????????(Outer Loop)????(Inner Loop)??????????
????????????????????????????????????????
??????????????????????? 7???????????? 
?????? 
??????????????????????????????????????
????????????????(Weighting)??????(Utility Function)??????
????????????????????????????????????????
????????????????????????????????????????
???????????????????????????????????(Trade-off 
Solutions Set)???????????????(Pareto-optimal Front Solutions Set)?????
??????????????(Dominated)??????????  
 8
 
? 8???????????????????? 
2???????? 
Fonseca? Flenming? 1995??????????????????????
???????????(Dominated)????????????????????
?????????????????? 9????? 9????????????
????????????????????????????????????
??????????????????????????? 
 
? 9????????????????? 
3????? 
1995? Osyczka? Kundu?? Feng??? 1997??????????????
?? 10 ?????????(1)??????????????(PSn)??????
???(Pareto front)??????????????????????(Sk)?(2)??
???????????????(dnk)??????? 1???(3)????? dnk?
?? dmax???? 2???(4)? dmax?????????????? dnk?????
??????? Fn???? 3??? 
 10
?? 
???????(LEGO)????????????????????? VB?????
????????????????????????????????????????
????????????????????????????????????????
????????????????????????????????????????
?????????????????????????????? 
???? NSC97-2221-E-324-038 ? NSC98-2221-E-324-040????????????
????????????????????????????????????????
???????????(routine)?????????????????????????
????????????????????????????????????? 
???? 
1. Glover, F. and Kochenberger, G. A. “Handbook of Metaheuristics.” Kluwer Academic 
Publishers, Massachusetts., 2003. 
2. ????????????????????????2001? 
3. Dev, K., “Optimization for Engineering Design: Algorithms and Examples.”, Prentice-Hallm, 
New Delhi, 1995. 
4. Fonseca, C. m. and Fleming, P. J., “Genetic Algorithm for Multi-Objective Optimization: 
Formulation, Discussion and Generalization,” in Proceedings of the Fifth International 
Conference on Genetic Algorithms, 1993, pp.416-423. 
5. Horn, J., Nafpliotis, N. and Goldberg, D. E., “A Niched Pareto Genetic Algorithm for 
Multiobjective Optimization,” in Proceeding of the 1994 IEEE International Conference on 
Evolutionary Computaton(ICEC’94) , 1994, pp.82-87. 
6. Schaffer, J. D., “Multiple Objective Optimization with Vector Evaluated Genetic Algorithms,” 
in Proceeding of the First International Conference on Genetic Algorithm, 1985, pp.93-100. 
7. Feng, C. W., Liu, L., and Burns, S. A., “Using genetic algorithms to solve construction 
time-cost trade-off problems,” Journal of Computing in Civil Engineering, ASCE, Vol. 11, No. 
3, 1997, pp. 184-189. 
8. Srinivas, N. and Deb, K. “Multiobjective Optimization Using Nondominated Sorting in Genetic 
Algorithms,” Evolutionary Computation, 2(3), Fall, 1994, pp.221-248. 
9. Gen, M. and Cheng, R. “Genetic Algorithms and Engineering Optimization.” Wiley, New York., 
1999. 
10. Goldberg, D. E., Deb, K., Kargupta, H., & Harik, G., “Rapid Accurate Optimization of Difficult 
Problems Using Fast Messy Genetic Algorithms.” Proceedings of the Fifth International 
Conference on Genetic Algorithms, 1993, pp.56-64. 
11. Deb, Kalyanmoy and David E. Goldberg “mGA in C: A Messy Genetic Algorithm in C.” 
Illinois Genetic Algorithms Laboratory, Illinois, 1991. 
12. Knjazew, Dimitri, “OmeGA: A Competent Genetic Algorithm for Solving Permutation and 
 1
?????????????????????????(1/2) 
                                    ???100? 09? 05? 
???????? 
????????? 10????????? 6? 8??????????
??????????????????GeoHunan International Conference II: 
Emerging Technologies for Design, Construction, Rehabilitation, and Inspections of 
Transportation Infrastructures???????????????? 2 ?????
????? 6? 12??????????????????????????
??????????????????? 1 ??????????????
????????????????? 
?????? 
???????? GeoHunan International Conference II: Emerging 
Technologies for Design, Construction, Rehabilitation, and Inspections of 
Transportation Infrastructures. ?? 2 ??????????????????
?????? 2??? 1??????????????????????A Hybrid 
???? NSC99?2628?E-324?027 
???? ?????????????????????????????(III) 
????
?? ??? 
????
??? ?????????? 
???? 100? 6? 9?? 100? 6? 11? ???? ???????? 
???? 
GeoHunan International Conference II: Emerging Technologies for 
Design, Construction, Rehabilitation, and Inspections of Transportation 
Infrastructures. 
????
?? 
A Hybrid Optimization Mechanism Used to Generate Truck Fleet to 
Perform Earthmoving Operations. 
 3
 
 
 5
??????????????????????????????????
??????????????????????????????????
?? 2?????????????????????????????? 
????????(???????) 
???? 
??????????? 
???????????????? 
???? 
 
 
  
 
 
 
A Hybrid Optimization Mechanism Used to Generate Truck Fleet to Perform 
Earthmoving Operations  
  
Wen-ta Hsiao1, Chih-tsang Lin2, Hsien-tang Wu 3, and Tao-ming Cheng4 
 
1 Assistant Professor, Department of Construction Engineering, Chaoyang University of Technology, 
Taichung, Taiwan. E-mail: wdshiau@cyut.edu.tw 
2 Ph. D. Student, Department of Civil Engineering, National Chung Hsing University, Taichung, Taiwan. 
E-mail: psang@nuu.edu.tw 
3Assistant Professor, Department of Construction Engineering, Chaoyang University of Technology, 
Taichung, Taiwan. E-mail: htwu@cyut.edu.tw, Corresponding author 
4 Professor, Department of Construction Engineering, Chaoyang University of Technology, Taichung, 
Taiwan. E-mail: tmcheng@cyut.edu.tw 
 
ABSTRACT: Most construction projects involve earth removal operations. Careful 
management of truck fleets to perform these operations is considered crucial by 
earthwork contractors in Taiwan. This paper presents a hybrid mechanism to optimize 
the management of the truck fleets of earthwork contractors. We use discrete event 
simulation models to represent earthmoving operations, and these models are used to 
simulate schedules for dispatching truck fleets. We then apply genetic algorithms to 
select the optimal schedules with the least amount of operational time. A theoretical 
example proves that the proposed mechanism can determine near-optimal solutions 
efficiently. Finally, we develop a user-friendly interface so that earthwork 
transportation companies can use the proposed mechanism easily and effectively. 
 
INTRODUCTION 
 
Earthmoving is one of the most common and essential operations in civil engineering 
projects, especially in those such as road paving and dam building (Moselhi, et al. 2009, 
Marzouk, et al. 2004). Earthwork procedures mainly involve earth excavation, 
transportation, and dumping, all of which require truck fleet transportation.  
In Taiwan, earthmoving operations are mainly performed by earthwork 
transportation companies through contracts with the general contractors of a project. 
Earthwork companies typically undertake several projects simultaneously; the 
earthmoving volumes, locations, and deadlines may be different in each case. When 
providing soil transportation services, carefully planning the most suitable schedule for 
operating truck fleets between work sites and landfill sites is an extremely complicated 
yet important task. 
Generally, the allocation of truck fleets by earthwork transportation companies is 
carried out manually. This job is not only time consuming but also inefficient. 
Furthermore, when the allocation of vehicles is less than optimal, delays in work 
schedules often occur, leading to fines and therefore incurring losses to these companies. 
In the past, studies on earthworks have largely focused on earthwork excavation, 
151Geotechnical Special Publication No. 223 © ASCE 2011
  
 
Fig. 1 System flow diagram 
 
 
 
 
Fig. 2 Chromosome structure 
 
 
 
 
Fig. 3 Restructured chromosome order 
 
The process for determining the genetic value of the chromosome structures used in 
this study is detailed as follows (shown in Fig. 4): 
Step1: Determine the chromosome length on the basis of the number of earthwork 
projects. 
Step2: Generate numbers randomly and list them in row 1.  
Step3: Estimate the number of truckloads required for each project and list these 
numbers in order in row 2.  
153Geotechnical Special Publication No. 223 © ASCE 2011
  
CROSSOVER AND MUTATION 
 
A one-point crossover mechanism is applied to the chromosomes. The process of 
one-point crossover is shown in Fig. 5 and described as follows: First, two parent strings 
P1 and P2 are selected at random. A randomly selected point is used as the divider, 
which cuts each selected parent string into two sections. Section 1 of P1 is combined 
with section 2 of P2 to form the head and tail of the first offspring. Section 1 of P2 and 
section 2 of P1 are used as the head and tail of the second offspring (O2), respectively. 
This study also involves the use of bit-wise mutation. When a chromosome is selected 
for mutation, the values of one randomly selected gene changes. 
 
 
Fig. 5 Example of crossover operation 
 
 
COMPUTER PROGRAM 
A user-friendly computer implementation (Fig. 6) was developed to help earthwork 
managers rapidly generate an efficient truck fleet dispatch schedule. In this program, 
users are required to input data into six areas. The first area is the section of “sGA 
Parameter Data,” which includes the population size (Pop. Size),  number of generation 
(Gener.), crossover rate (Cr. Rate), and mutation rate (Mt. Rate). The second area is the 
section of “Company Data,” which contains data related to the number of available 
trucks and truck capacity. The third area is the section of “Site Data,” containing data on 
loading time, which is the time taken by an excavator to load a truck; number of 
available trucks; and earth removal volume for each project site. The fourth area is the 
section of “Landfill Data,” including data related to the truck dumping time at and earth 
storage volume for each landfill site. The fifth and sixth areas are sections that require a 
user to define the travel time from each project site to each landfill site as well as that 
from the company to each project and landfill site. In addition, two areas provide the 
results generated by this computer program. The section in the upper right-hand corner 
indicates the performance of the GA operation. The section “Dispatching Result” shows 
the simulated result of the optimal dispatch schedule; this section provides the dispatch 
sequence and the simulated arrival and departure times for each truck. 
 
155Geotechnical Special Publication No. 223 © ASCE 2011
  
Fig. 7 Relationship between daily soil quantity and respective distance 
 
Once this test case was optimized, the number of generations, population, crossover 
rate, and mutation rate were set to 5000,100, 0.3, and 0.05, respectively. Table 1 shows 
the optimal dispatch order, with 41 trips required to completely transport the earth. For 
instance, the first dispatch order shows the first truck traveling from the company to 
work site 3 with arrival and departure times of 27 and 37 min, respectively. Then, this 
truck travels to landfill site 2 for soil disposal with arrival and departure times of 46 and 
56 min, respectively. It then continues to traverse its second route according to the fifth 
dispatch order listed in Table 1. The total time required for all the operations is 608 min; 
however, the last truck returns to the company only at 626 min. 
The convergence conditions for feasible solutions are shown in Fig. 8. Convergence 
is achieved in the ~530th generation. The total number of combinations of feasible 
solutions in this case is approximately 1.67 × 1031 (121!/(45! × 15! × 8! × 53!)) × 
(121!/(50! × 40! × 36!)); however, by our proposed method, calculation of only 5.3 × 
104 combinations (~1/1026 of the total) yields a favorable solution, illustrating the 
ability of this method to solve truck fleet management problems effectively and 
efficiently. 
 
Table 1 Optimal truck dispatch schedule 
 
Dispatch 
Order 
Truck 
No. 
Site 
No. 
Time of 
arrival to 
site 
(min.) 
Time of 
departure 
from site 
(min.) 
Landfill 
No. 
Time of 
arrival to 
Landfill 
(min.) 
Time of 
departure 
from 
Landfill 
(min.) 
Time of 
Return to 
Company   
(min.) 
1 1 3 27 37 2 46 56 - 
2 2 2 18 28 2 50 60 - 
3 3 1 32 42 2 57 67 - 
4 4 2 18 28 1 74 84 - 
5 1 3 65 75 2 84 94 - 
6 2 1 81 91 1 113 123 - 
7 3 1 91 101 1 123 133 - 
8 4 1 106 116 2 131 141 - 
: : : : : : : : : 
157Geotechnical Special Publication No. 223 © ASCE 2011
 Easa, S.M. (1988). “Earthwork allocations with linear unit costs.” J. Constr. Eng. 
Manage., Vol. 114(4): 641-655. 
Jayawardane, A.K., and Harris, F.C. (1990) “Further development of integer 
programming in earthwork optimization.” J. Constr. Eng. Manage., Vol. 116(1): 
18-34. 
Marzouk, M., and Moselhi, O. (2004) “Multi-objective optimization of earthmoving 
operations.” J. Constr. Eng. Manage., Vol. 130(1): 105-113. 
Moselhi, O., and Alshibani, A. (2007) “Crew optimization in planning and control of 
earthmoving operations using spatial technologies.” J. Inf. Tech. Constr., Vol. 12: 
121–137. 
Moselhi, O, and Alshibani, A. (2009) “Optimization of Earthmoving Operationsin 
Heavy Civil Engineering Projects.” J. Constr. Eng. Manage., Vol. 135(10): 948-954. 
Son, J., Mattila, K., and Myers, D. (2005) “Determination of haul distance and direction 
in mass excavation.” J. Constr. Eng. Manage., Vol. 131(3): 302-309. 
159Geotechnical Special Publication No. 223 © ASCE 2011
 
 
 
results to users for download and use.  
II. PROBLEM STATEMENT 
Existing packaged software suites developed based on GA 
include: Evolver software, developed in 2001 by Palisade 
(compatible with Excel) and SUGAL, developed by 
Professor Andrew Hunter of University of Sunderland using 
ANSI C. However, these two pieces of software are subject to 
many usage limitations or are unable to fully realize the 
effectiveness of GA; they also lack an open source framework 
that allows users to assemble computer programs which meet 
their requirements within short periods of time. 
In 1964, the BASIC programming language was developed 
at Dartmouth College. The Visual Basic language was 
developed based on BASIC, but incorporated the concept of 
window objects to create a window programming language 
using the Windows operating system as a platform. Visual 
Basic is simple, easy to understand, and combines 
characteristics of windows visualization. As such, it is easy to 
operate and can be said to be the most popular programming 
language. Traditional programming languages, such as 
BASIC, FORTRAN, and COBOL, are all procedure oriented 
languages. Programs written in these languages must be 
executed in accordance with the language and logical order of 
each line of language. In contrast to these traditional 
languages, Visual Basic is an Event Driven Language. In 
addition, Visual Basic also has compiling functions, 
accelerating program execution speeds. 
GA is a branch of artificial intelligence and can be applied 
to optimization problems for single or multiple targets. GA 
was originally developed by John Holland in 1975 using 
concepts of chromosomal genetic frameworks to represent a 
complex system framework. Survival of the fittest is 
simulated using “duplication”, “crossover” is used to match 
parent genes to produce a new generation, and “mutation” is 
used to produce small differences between parent generations 
and successor generations. One key characteristic of this 
approach is multipoint parallel searching, which includes the 
capacity for random searching to prevent being caught in 
local optimal solutions. Since John Holland created GA, the 
efficiency and accuracy of this approach has been 
demonstrated to be superior among algorithms [3]-[5]. 
Feng et al. [6] applied this methodology to construction, 
incorporating a punishment function; while not interrupting 
construction work, they used GA to find solves for an optimal 
delivery schedule for ready-mixed concrete. Feng and Wu [7] 
combined GA with CYCLONE (CYCLic Operation Network) 
[8]-[10] simulation theory to solve for an optimal delivery 
schedule for ready-mixed concrete. Cheng et al. [11] 
combined GA with CYCLONE simulation theory to find 
optimal solutions for work, resources, and scheduling in 
construction. Katayama and Sakamoto [12] used GA to solve 
the Traveling Salesman Problem (TSP), achieving fast 
convergence. Baker and Ayechew [13] solved the vehicle 
routing problem (VRP) using GA, producing results superior 
to those of TS and SA in terms of speed and quality. Chen et 
al. [14] applied the VRP with the Time Window (VRPTW) 
model to steel plan production schedules; results showed that 
GA produced results superior to those of heuristics. Chen et al. 
suggested that GA is now viewed as the optimal method for 
solving the VRP. 
These studies demonstrate that GA has been broadly 
applied to optimization problems. However, researchers must 
write different GA programs for each problem based on the 
different characteristics of each problem. As such, a standard 
module system for GA would facilitate the fast and accurate 
writing of GA programs. 
III. GENETIC ALGORITHMS  
Genetic algorithm theory is based on an optimization 
search mechanism from the process of natural selection. The 
basic concept of the approach imitates the competition and 
survival of the fittest in the natural world. According to 
Darwin’s theory of evolution, species which adapt to their 
environment have the best chance of survival; this concept is 
referred to as “competition.” Those species which are poorly 
adapted will naturally be replaced; this concept is referred to 
as “selection.” Species which remain following natural 
selection continue to reproduce, passing traits onto the next 
generation to help them become more adapted to the 
environment. As such, the entire species is able to become 
more adapted to the environment and continue reproducing. 
By competing and surviving, species with good genes have 
a higher chance of survival, while weaker genes are discarded 
with time. In the process of natural selection species without 
advantageous traits will gradually disappear. However, 
having merely one good trait is not sufficient for ongoing 
survival. Species combine their good genes through crossover, 
producing a more advantageous successor generation; if 
succeeding generations are less than ideal, they will be 
discarded. However, gene exchange cannot alter existing 
genetic states. Mutation is necessary to produce revolutionary 
changes and breakthroughs in the development of a group. As 
such, competing and surviving, crossover, and mutation 
constitute GA; these concepts can be considered the primary 
components of genetic evolution. The process of evolution is 
shown in Figure 1. 
In the natural world, the most basic unit of genetic traits is 
the gene. Related genes form genetic links through strings; 
these genetic links are referred to as chromosomes. 
Chromosomes determine the genetic traits of individuals; 
these traits are referred to as genotypes in genetics research 
and phenotypes in the natural world. In higher-order 
organisms, chromosomes exist in pairs and involve complex 
structures and matches. For example, humans have 23 pairs of 
chromosomes. For the sake of simplicity in GA, if each 
individual is represented by one chromosome, all individuals 
are represented by a code in chromosomal data. Information 
stored in chromosomes impact the performance of the 
individual in the simulation environment; this performance is 
represented by the size of the fitness value. 
291
 
 
 
information, facilitating escape from local optimal solutions 
and expanding search space to find an optimal solution. As 
with crossover operations, there are many different types of 
mutation operations. Common methods include single-point 
mutation, multi-point mutation, reverse mutation, insertion 
mutation, and autonomous mutation. This study completed 
program modules for single-point mutation and autonomous 
mutation. One of them is explained simply as follows: 
Single-point mutation: single-point mutation is the 
simplest mutation method. Alteration to the genetic value 
of any one point on a chromosome string is performed, as 
shown in Figure 3. 
 
Fig. 3. Single-point mutation. 
 
Genetic algorithms work according to Darwin’s theory of 
evolution, with selection of survivors for the next generation 
performed based on fitness value. Common selection 
mechanisms include roulette wheel selection, tournament 
selection, and elitist selection. Of these, this study has 
completed the program modules for roulette wheel selection. 
This method was introduced by Holland and is the most 
commonly known selection method. Chromosomes with 
higher fitness values take up higher proportions of area on the 
roulette wheel, so chromosomes with higher fitness values are 
more likely to be selected for survival. This method is 
relatively simple but cannot guarantee that the selected 
chromosomes are the most optimal. 
IV. DEVELOPMENT AND APPLICATION OF PROGRAM MODULE  
The primary objective for this study is to develop an 
“artificial intelligence standard module system” based on GA. 
As such, all program modules must be highly flexible general 
programs. Even when user demands cannot be completely 
satisfied, this study also provides complete original source 
code to allow users to perform modification within a short 
period of time. 
Systems analysis and design is a tried and tested method. It 
was originally developed by IBM, Pepsi, and Hasbro for use 
in constructing an easily-maintained information system with 
basic business functions. As such, this research plan will be 
based on the System Development Life Cycle (SDLC). 
Figure 4 depicts the system development life cycle, divided 
into: 1.System Planning and Selection; 2.System Analysis; 
3.System Design; 4.Systems Implementation and Operation. 
Each program module written for this study was completed 
based on the steps of SDLC. 
 
Fig. 4. System Development Life Cycle. 
 
This study uses the formula: 
)20sin()4sin(5.21),( 221121 xxxxxxf ππ ⋅+⋅+= [15] as an example and 
sets parameter (as shown in Figure 5 and Figure 6.) and uses 
each developed program module to find a solution and test the 
accuracy of program modules. The parameter data is a text 
file   (e.g. notepad format file) that contain population size, 
crossover rate, mutation rate, object type, number of 
generation etc. User can modify it according to problem 
definition, for example, setting object type as “1B” for single 
maximum objective or as “1S” for single minimum objective. 
Operation result of maximum and minimum parameter 
setting is shown in Figure 7 and Figure 8 respectively.   
 
 
Fig. 5. Parameter file for maximum objective  
 
 
Fig. 6. Parameter file for minimum objective  
 
293
國科會補助計畫衍生研發成果推廣資料表
日期:2011/09/22
國科會補助計畫
計畫名稱: 人工智慧多目標最佳化程式模組系統之開發－以基因演算法為基礎(III)
計畫主持人: 吳獻堂
計畫編號: 99-2628-E-324-027- 學門領域: 營建管理
無研發成果推廣資料
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
無 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
 
