21.前言
車輛途程問題 (VRP, Vehicle Routing
Problem)[1]，常見 VRP 問題包括「指派問
題」、「旅行推銷員問題」與「車輛途程問
題」等，隨著實務需求衍生出許多限制條件
不同 VRP 類型的問題，如：含容量限制的
車 輛 途 程 問 題 (CVRP, Capacity Vehicle
Routing Problems)、多車種車輛途程問題
(VRPHE, Vehicle Routing Problems with a
Heterogeneous Fleet of Vehicles)、時窗限制
車輛途程問題 (VRPTW, Vehicle Routing
Problems with Time Windows)等。由於求解
VRP 的複雜度屬於 NP-Hard[2]，利用數學
規劃方式求解最佳途程僅能解決較小規模問
題。近年來許多研究先後發展出不同優點之
巨集啟發式演算法(Meta-heuristic Algorithm)
求解 VRP，如：基因演算法(GA, Genetic
Algorithm)[3] 、 模 擬 退 火 (SA, Simulated
Annealing)[4]、粒子群演算法(PSO, Particle
Swarm Optimization)[5]與禁忌搜尋法 (TS,
Tabu Search)[6]等，皆希望能在允許時間內
獲 得 最 佳 之 近 似 解 (Approximated
Solution)。
本研究以粒子群演算法為基礎，針對含
時窗限制車輛途程問題，發展一個時窗鄰點
法，改善粒子群演算法以隨機產生初始粒子
群分佈之求解成效，並利用反應曲面設計的
實驗規劃技術，經由有系統實驗規劃與實驗
數據分析，適配運補途程距離長度與 PSO
中權重及二個學習因子間之最佳反應曲面模
式，以決定 PSO 中權重與二個學習因子間
的最佳設定值，從而建構一個整合型粒子群
演算法，來提升含時窗限制車輛途程問題的
求解效率。
2.文獻回顧
2.1 含時窗限制車輛途程問題相關文獻
Bodin 與 Golden[7]提出 VRP 的七個求
解策略。然而 Laporte[8]指出確切解求解方
法雖可獲得全域最佳解，但只能用於求解規
模較小之問題。因此在求解 VRP 過程中往
往受限於受補點多寡，當問題之受補點過多
時，將無法在合理時間內求得最佳解，故目
前多以獲得近似解為 VRP 之主要求解方
向。
隨著電腦運算技術的提升，對於組合最
佳化問題的求解方法亦不斷改良與開發，目
前 VRP 之求解趨勢大致如下：
(1) 考量問題之規模及求解效率，目前多採
求得近似解之求解方法為主。
(2) 伴隨電腦效能的提升，VRP求解方法多
以巨集啟發式演算法為主，常見如
GA、SA、TS、AA、PSO等。
(3) 由於組合最佳化問題具有巨大之求解空
間，因此如何在兼具廣度與深度之搜尋
策略下獲得良好的求解品質，為目前設
計與發展新啟發式演算法之主要考慮因
素。
(4) 除發展新啟發式演算法之外，原巨集啟
發式演算法亦以發展整合型或改良型為
主，藉由不同演算法之特性以增進或提
升求解效能與品質。
上述巨集啟發式演算法不論演算方法之特性
為何，均有兩個共同點，其一為參數的設
定，另一則是演算開始前需要有起始解。巨
集啟發式演算法的參數設定，往往是由改變
參數並進行實驗以獲得最佳解，因此參數的
設定並無規則可循。另外 Shieh 與 May[9]的
研究結果指出，起始解是求解成效與演算法
收斂重要的因素之ㄧ。Prins[10]利用整合型
啟發式演算法求解 VRP，其研究結果指
出，傳統啟發式演算法所獲得的解可以提供
作為巨集啟發式演算法的起始解，以加快巨
集啟發式演算法收斂速度。
Nanry 和 Barnes[11] 使 用 反 應 式
(Reactive)的禁忌搜尋法求解時窗限制的
取、送貨問題。該方法結合優先關係
(Precedence)的限制及運用三種鄰域交換法
得到不錯的結果。Lau 等人[12]先以插入法
求得初始解再以 Relocate 與 Exchange 為核
心的禁忌搜尋法求解 VRPHTW、VRPSTW
的 m-VRPTW。車輛數有限制下的時窗車輛
途程問題，此模式較接近實務運作的情況。
43.研究方法
本研究所建構的 HPSO 演算法共分為三
階段，說明如下：
階段一：產生初始粒子群分佈
傳統的粒子群演算法係採用隨機方式產
生初始粒子群分佈，對求解複雜的問題時，
往往求 解時間 長且 無效率 。 Shieh 和
May[9]、Leung 和 Wang[23]與 Baker 和
Ayechew [24]等人研究結果指出，起始解顯
著影響啟發式演算法的求解成效，建立良好
的起始解可更有效地逼近最佳解。本研究為
兼顧求解效率與品質，考量各受補點單位在
空間上之地理位置特性與受補點之運補時
窗，發展一個時窗鄰點法，再改良粒子群演
算法於求解連續型最佳化問題兼具廣度與深
度的搜尋特性，建立離散型 PSO 演算法之
移步機制，以有效逼近全域最佳解，從而提
升整體求解效能。首先定義 VRPHTW 每個
粒子位置解向量結構如下：
 inijiii xxxx 21X (3)
其中 iX 表示為第 i 個粒子位置解向量， ijx 為
第 i 個粒子位置解向量在第 j 個維度的受補
點， ni ,2,1,  表示有 n 個受補點。若
有 m 個粒子，則初始粒子群解向量形成一
個粒子群解向量矩陣，則粒子群的定義為：





















mnmjm2m1
iniji2i1
2n2j2221
1n1j1211
xxxx
xxxx
xxxx
xxxx






X (4)
其中 X表示為粒子群位置解向量矩陣，表示
PSO 之粒子群的分佈位置。由於求解
VRPHTW 最佳化問題時，運補車次到達各
受補點時間必須符合運補時窗之要求，同時
使途程距離長度為最短；若運補車次到達下
一受補點的運補時間超過運補時窗上限，則
必須指派下一車執行運補，在此情況下，會
增加車輛運補之途程距離長度。本研究考量
VRPHTW 的特性，同時考量各受補點在地
理空間位置與各受補點之運補時窗的上下
限，發展「時窗鄰點法」以獲得優良初始粒
子群分佈，其執行步驟，說明如下：
步驟一：計算運補時窗限制下的最少可能運
補車次數
考量各受補點之運補時窗的上限時間與
下限時間及各受補點卸貨時間，決定個別車
次可能運補的受補點，從而計算最少可能運
補車次數。首先，針對每個受補點計算其運
補時窗下限與卸貨時間之和，並取值最小者
作為決定最少可能運補車次數的判斷值，計
算式如(5)式及判斷公式如(6)式所示：
 ii
ni
seJ 
1
min (5)
 Jl j
nj

1
county (6)
其中 J 為決定最少可能運補車次數的判斷
值， ie 為第 i 個受補點的運補時窗下限， is
為第 i 個受補點的卸貨時間， jl 為第 j 個受
補 點 的 運 補 時 窗 上 限 ，
nji ,2,1,,  ，表示共有 n 個受補點。
count 表示計算符合判斷公式之受補點個
數，以 y 表示。由於這些受補點無法在同一
個車次內進行運補，因此，必須分別指派 y
個車次來運補，依此，決定「時窗鄰點法」
最少可能運補車次數。
步驟二：計算運補車輛滿載情況下的最少運
補車次數
在不考慮運補途程距離長度及各受補點
卸貨時間長短與運補時窗等限制條件下，將
所有受補點總需求量除以車輛裝載容量，並
以無條件整數進位計算最少運補車次，數學
式如(7)式。
  1 Q/capacityz (7)
其中 Q 為所有受補點總需求量， capacity 為
車載容量限制， z 表示最少指派的運補車次
數。
步驟三：決定「時窗鄰點法」的運補車次數
本研究取步驟一得到的最少可能運補車
6互作用效應； 21x 、 22x 與 23x 分別為權重與保
留率對於 VRPHTW 運補途程之距離長度的
二次項效應； 0、 j、 ij、 jj 為廻歸模式
參數；表示隨機的殘差項。本研究經由適
缺度檢定(Lack of Fit Test)分析，以決定最適
配的反應曲面模式，當模式適缺度檢定下的
P 值(P-value)大於顯著水準 α= 0.05，判定
該模式適配。
步驟四：決定權重及保留率的最佳設定值
根據步驟三所建立的反應曲面模式，在
最小化運補途程距離長度下決定最佳權重與
保留率組合，從而代入 HPSO 的搜尋機制中
有效逼近最佳解。
階 段 三 ： 執 行 PSO 搜 尋 機 制 求 解
VRPHTW
根據求解案例之 VRPHTW 的數學模
式，包括目標式與限制條件等，以階段一獲
得的優良 VRPHTW 初始粒子群分佈，結合
階段二之 RSM 所決定的 HPSO 權重及保留
率之最佳參數組合，重複執行 PSO 的搜尋
機制求解 VRPHTW 問題，以獲得最佳運補
途程解，從而得到最小運補途程之距離長
度。針對 PSO 搜尋機制求解 VRPHTW 的步
驟，說明如下：
步驟一：更新個別粒子的位置與速度
PSO 演算法已經成功運用於求解連續
型的最佳化問題，但應用於求解離散型問題
的研究，則相當罕見，主要原因為 PSO 設
計的理念乃是用來解決實數型最佳化問題。
因此，PSO 以數學式利用連續數值的向量
明確表達粒子的向量位置與粒子向量間移動
關係。然而，PSO 若應用來求解離散型最
佳化問題時，無法應用在連續的數值空間上
表示粒子位置向量與粒子的移動速度。因
此，以 PSO 求解離散型最佳化問題，必須
處理粒子的移步機制，包括定義粒子的位置
與定義粒子的移動速度等。為了克服上述問
題點，本研究針對 PSO 求解 VRPHTW 最佳
化問題，參考 Huang 等人[19]研究，定義互
換運算元，以執行粒子移步程序，說明如
下：
(1) 定義互換運算元：
設 空 間 第 i 粒 子 位 置 解 向 量 為
 iniii ppp ,,, 21 P ， I 為一個互換運算
元，則 I 如公式(10)所示：
 kj , ii ppI (10)
其中 I 表示第 i 個粒子位置解向量中在第 j 個
維度之值與第 k 個維度之值互換，在
VRPHTW 中即表示第 j 個受補點與第 k 個
受補點互換， nj ,,1  ； nk ,,1  ，
表示共有 n 個受補點。藉由執行互換運算元
可執行粒子的移步機制。一般粒子的移步機
制往往需執行數個不同互換運算元來完成，
藉此移步機制朝向最佳位置移動。例如：給
定兩個粒子位置向量 A：(2 4 1 3 5)與 B：(1
2 3 4 5)，每一個粒子包括 5 個受補點，當 A
粒子位置向量欲往 B 粒子之位置向量移步
(以符號 A→B 表示)，可依序執行運算元
 31,I 、  32,I 與  43,I 來完成移步的動作。上
述三個互換運算元順序     43,,32,,31, III ，
構成一個互換群組，執行此互換群組，完成
A→B 的移步。上述互換群組的執行過程與
結果彙整如表 1所示：
表1 互換運算元的運算過程與結果
執行
順序
移步前位置
向量
執行交換運算元
移步後位置
向量
1 (2 4 1 3 5)  31,I (1 4 2 3 5)
2 (1 4 2 3 5)  32,I (1 2 4 3 5)
3 (1 2 4 3 5)  43,I (1 2 3 4 5)
(2) 利用互換運算元更新粒子移步速度
以 PSO 演算法求解 VRPHTW 離散型組
合最佳化的問題，純 PSO 算法中更新速度
之計算式，無法直接應用來求解此類問題。
本研究針對求解 VRPHTW，利用互換運算
元更新粒子位置解向量的移步速度，從而建
構 PSO 演算法搜尋最佳解的機制，如(11)
式：
   giiioldinewi βαω PXPXVV   (11)
其中
8能。本研究模擬時窗限制，相關資料如表 3
所示。
補給點
車次1
車次2
車次3
車次4
車次5
車次6
車次7
車次8
車次9
車次10
車次11
圖 1 聯保廠案例之補給點與現行 11 條運補
途程示意圖
表2 聯保廠現行運補途程與作業成效
車
次
途程 裝載率
途
程
距
離
(
k
m
)
1 1→2→3→4→1 34.94% 17.603
2 1→5→6→7→8→9→1 67.19% 49.746
3 1→10→11→12→13→1 53.56% 39.409
4 1→14→15→16→17→1 48.81% 42.028
5 1→18→1 74.84% 14.212
6 1→19→20→1 99.19% 49.149
7 1→21→22→23→24→25→26→1 33.59% 88.369
8 1→27→28→29→30→1 25.63% 74.237
9 1→31→32→33→1 64.69% 70.049
10 1→34→1 100.00% 65.678
11 1→35→36→1 18.22% 85.074
表3聯保廠實際案例─補給點與受補點座標
位置、需求量、時窗與卸載時間
受補
點編
號
x
座
標
y
座
標
需求
量
時
窗
下
限
時窗
上限
卸貨
時間
1 32 64 587 0 10 0.5
2 21 69 323 0 10 0.5
3 23 66 208 0 10 0.5
      
33 -217 -3 3200 0 10 0.5
34 -342 -33 124 0 10 0.5
35 -146 -68 459 0 10 0.5
註：時窗上下限與卸貨時間為本研究模擬數
據。
根據本研究所建構的 HPSO 演算法，求
解該案例之最佳運補途程，得到最短運補途
程之距離長度為 394.05，而現行人工規劃運
補途程距離長度 595.554，偏差值為-19.88%
（小於 5%），表示本研究所建構之「含時
窗限制運補作業最佳化演算法」求解此地區
聯保廠補給分庫的成效良好，本案例最佳運
補途程如表 4與圖 2 所示。進一步比較求解
最佳運補途程與現行主動運補規劃方式彙整
如表 5所示。根據表 5結果得知，本演算法
將現行人工規劃之 11 條途程簡化為 7 條途
程；車輛平均裝載率從 56.42%增加到
88.67%，增加達 32.25%；途程距離長度從
595.554 公里縮減為 394.05 公里，減少幅度
達 33.84%。綜合此分析結果顯示，本演算
法不但能大幅降低車輛與駕駛人力派遣，同
時提升車輛裝載率，途程距離長度也大幅縮
減，可有效提升現行人工規劃之運補效能。
表4 最佳運補途程規劃
車
次
途程 裝載率
途程
距離
(km)
1 1→21→5→6→8→1 39.2% 19.705
2 1→18→11→15→14→1 99.5% 35.056
3 1→10→2→9→4→3→1 96.4% 38.043
4 1→16→12→13→22→26→25→24→23→29→27→28→30→17→1 91.4% 88.894
5 1→19→20→1 99.1% 49.149
6 1→36→32→31→35→33→7→1 95.0% 97.552
7 1→34→1 100% 65.678
補給點
車次1
車次2
車次3
車次4
車次5
車次6
車次7
圖 2 最佳運補途程圖
10
[10] Prins, C., “A Simple and Efective 
Evolutionary Algorithm for the Vehicle
Routing Problem,” Computer and 
Operations Research, Vol. 31, pp. 1985-
2002, 2004.
[11] Nanry, W. P., and Barnes, J. W., “Solving 
the Pickup and Delivery Problem with
Time Windows Using Reactive Tabu
Search”, Transportation Research PartB,
Vol. 34, pp. 107-121, 2000.
[12] Lau, H. C., Sim, M., and Tec, K. M.,
“Vehicle Routing Problem with Time
Windows and a Limited Number of
Vehicles,” European Journal of
Operational Research, Vol. 148, pp.559-
569, 2003.
[13] Kennedy, J., Eberhart, R. C., and Shi, Y.,
Swarm Intelligence, Morgan Kaufmann
Puplishers, San Francisco, 2001.
[14] Kennedy, J., and Eberhart, R., “Particle
swarm optimization,”Proceedings of the
IEEE International Conference on Neural
Networks, Vol. 4, pp. 1942-1948, 27 Nov.-
1 Dec., 1995.
[15] Jamer, L. P., and Abraham, S., Operating
System Concept, Addison Wesley
Publishing Company, Boston, 1986.
[16] Russell, S., and Norvig, P., Artificial
Intelligence: A Modern Approach,
Prentice Hall Series in Artificial
Intelligence, American, September, 2003.
[17] Shi, Y., and Eberhart, R. C., “Empirical 
Study of Particle Swarm Optimization,” 
Processing of the 1999 Congress on
Evolutionary Computation, Washington,
D. C., pp. 1945-1950, July 6-9, 1999.
[18] Salman, A., Ahmad, I., and Al-Madani, S.,
“Particle Swarm Optimization for Task
Assignment Problem,”Microprocessors
and Microsystems, Vol. 26, pp. 363–371,
2002.
[19] Huang, L., Wang, K. P., Zhou, C. G.,
Pang, W., Dong, L. J., and Peng, L.,
“Particle Swarm Optimization for
Traveling Salesman Problems,”Journal of
Jilin University (Science Edition), Vol. 41,
No. 4, pp. 477-480,2003.
[20] He, S., Wu, Q. H., Wen, J. Y., Saunders, J.
R., and Paton, R. C., “A Particle Swarm
Optimizer with Passive Congregation,”
BioSystems, Vol. 78, pp. 135–147, 2004.
[21] 李維平、江正文， “以學習因子分群策
略改良粒子群演算法”，2006 北商學
術論壇資訊管理與實務研討會，台北，
第 71-76 頁，2006。
[22] Wang, C. H., and Lu, J. Z., “A Hybrid
Genetic Algorithm that Optimizes
Capacitated Vehicle Routing Problems,”
Exert Systems with Applications, In Press,
2008.
[23] Leung, Yiu-Wing, and Wang, Y., “An
Orthogonal Genetic Algorithm with
Quantization for Global Numerical
Optimization,” IEEE Transactions on
Evolutionary Computation, Vol. 5, No. 1,
pp. 41-53, 2001.
[24] Baker, B. M., and Ayechew, M. A., “A
Genetic Algorithm for the Vehicle Routing
Problem,” Computers and Operations
Research, Vol. 30, pp. 787-800, 2003.
[25] Montgomery, D. C., Response Surface
Methodology: Process and Product
Optimization Using Designed
Experiments, John Wiley & Sons, New
York, pp. 405-408, 2005.
