†ˇHä¶íÜ£wÊ	˙iM½æí@à
Keywords: Lie-Group Shooting Method, engineering boundary value problems, ordi-
nary differential equations, partial differential equations, group preserving scheme, direct
problem, inverse problem.
In the paper [Chein-Shan Liu, 2001, Cone of nonlinear dynamical system and group
preserving schemes, Int. J. Non-Linear Mechanics, vol.36, pp.1047-1068] we have con-
structed a mathematically equivalent augmented system on the future cone in an n + 1-
dimensional space for the general n-dimensional nonlinear dynamical system. In the space
with dimensions one higher, the underlying space of the nonlinear dynamical system is
a Minkowski space and the symmetry group is the proper orthochronous Lorentz group.
In doing so, we bring out three structures of geometry, Lie algebra and Lie group for
the nonlinear dynamical system. This finding has a great significiance for a theoretical
study of the nonlinear dynamical system, as well as opens a new area of the geometrical
integrator for the nonlinear dynamical system. According to the Lie group properties we
have developed a fully new Lie-group shooting method (LGSM) used in the numerical
solutions of boundary value problems.
In this research project, we study the mathematical foundation of the Lie-group shoot-
ing method, and propose its use on the calculations and analyses to different engineering
boundary value problems. This project is divided into three-year, during which period
we shall settle down in depth a firmly mathematical foundation of the Lie-group shooting
method, and develop its numerical schemes and conduct the analyses for different engi-
neering boundary value problems which we may face frequently. This three-year project
will be divided into three major portions: the first-year project will propose a mathemat-
ical development of the Lie-group shooting method and derive the LGSM calculational
schemes for the second-order ordinary differential equations (including nonlinear and sin-
gular ones), the second-year project will develop the LGSM calculational schemes for
the third-order ordinary differential equations (including nonlinear ODEs with boundary
layer), and the third-year project will develop the LGSM calculational schemes for the
multi-dimensional ordinary differential equations system (including a semi-discretization
of the evolutionary partial differential equations, direct or inverse problems).
Under the first-year project of this study four papers were published and one paper
was submitted:
1. Chein-Shan Liu, 2006, The Lie-group shooting method for nonlinear two-point bound-
ary value problems exhibiting multiple solutions, CMES: Computer Modeling in Engi-
neering & Sciences, vol. 13, pp. 149-163.
2. Chein-Shan Liu, 2006, Efficient shooting methods for the second order ordinary dif-
ferential equations, CMES: Computer Modeling in Engineering & Sciences, vol. 15, pp.
69-86.
3. Chein-Shan Liu, 2006, The Lie-group shooting method for singularly perturbed two-
point boundary value problems, CMES: Computer Modeling in Engineering & Sciences,
vol. 15, pp. 179-196.
Copyright c© 2006 Tech Science Press CMES, vol.13, no.2, pp.149-163, 2006
The Lie-Group Shooting Method for Nonlinear Two-Point Boundary Value
Problems Exhibiting Multiple Solutions
Chein-Shan Liu1
Abstract: The present paper provides a Lie-group
shooting method for the numerical solutions of second
order nonlinear boundary value problems exhibiting mul-
tiple solutions. It aims to find all solutions as easy as pos-
sible. The boundary conditions considered are classified
into four types, namely the Dirichlet, the first Robin, the
second Robin and the Neumann. The two Robin type
problems are transformed into a canonical one by us-
ing the technique of symmetric extension of the govern-
ing equations. The Lie-group shooting method is very
effective to search unknown initial condition through a
weighting factor r ∈ (0,1). Furthermore, the closed-
form solutions are derived to calculate the unknown ini-
tial condition in terms of r in a more refined range iden-
tified. Numerical examples were examined to show that
the new approach is highly efficient and accurate. The
number of solutions can be identified in advance, and all
possible solutions can be integrated readily through the
obtained initial conditions by selecting suitable r.
keyword: Lie-group shooting method, Nonlinear
boundary value problem, Unknown initial condition,
Multiple solutions.
1 Introduction
In this paper we propose new method for the computa-
tions of the following second-order nonlinear boundary
value problems (BVPs):
u′′ = F(x,u,u′), a < x < b, (1)
where we consider four type boundary conditions with α
and β given constants:
u(a) = α, u(b) = β, (2)
u′(a) = α, u(b) = β, (3)
1 Department of Mechanical and Mechatronic Engineer-
ing, Taiwan Ocean University, Keelung, Taiwan. E-mail:
csliu@mail.ntou.edu.tw
u(a) = α, u′(b) = β, (4)
u′(a) = α, u′(b) = β. (5)
Eq. (1) together with Eq. (2) is called the Dirichlet type
BVP, Eq. (1) together with Eq. (3) is called the first Robin
type BVP, and Eq. (1) together with Eq. (4) is called
the second Robin type BVP, while Eq. (1) together with
Eq. (5) is called the Neumann type BVP. The last prob-
lem will be discussed until Section 8.
The BVPs require information at a left-end point x = a
and at a right-end point x = b. For this reason the BVPs
are also called the two-point boundary value problems
(TPBVPs), which are often encountered in physical and
engineering problems. A number of methods exist for
solving these problems including shooting, collocation
and finite difference methods. Among these methods the
shooting method is the simplest one to solve TPBVPs.
However, it is known that the shooting method may fail
to converge for problems whose solutions are sensitive to
initial guesses, or may be even unstable leading to large
solution components that the solution does not extend un-
til to the desired interval due to error in the initial guess.
For this type problem finite difference and collocation
methods can provide a solution that satisfies the bound-
ary conditions and is close to the actual solution; how-
ever, the finite difference and collocation methods are
much harder to set up than the shooting method. This led
to the development of multiple shooting method as de-
rived by Morrison, Riley and Zancanaro (1962), which
is a compromise between the shooting method and the
finite difference method. Keller (1992) refers to the mul-
tiple shooting method as parallel shooting.
The usual stepping scheme requires a complete informa-
tion at the starting point x = a. Some effort is then re-
quired to reconcile the stepping scheme for the integra-
tions of BVPs.
The shooting method is to assume some unknown initial
conditions and to convert the BVP into initial value prob-
lem (IVP). Solve the IVP and compare the solution at the
The Lie-Group Shooting Method 151
y˙(0) = 0, y(1) = c, (13)
where
F1(t,y, y˙) := (b−a)2F(a+(b−a)t,
y+α(a−b)(1− t)+β−c, y˙/(b−a)+α). (14)
Through a symmetric extension into the interval of t ∈
[−1,0), we can write Eqs. (12) and (13) to be
y¨ = f2(t,y, y˙), (15)
y(−1) = c, y(1) = c, (16)
where
f2(t,y, y˙) =
⎧⎨
⎩
F1(t,y, y˙) if 0 ≤ t ≤ 1,
F1(−t,y,−y˙) if −1 ≤ t < 0.
(17)
The condition y˙(0) = 0 will be not imposed here until we
develop the shooting method in Sections 4-6.
2.3 The second Robin type BVPs
For Eqs. (1) and (4) we consider the following transfor-
mations:
x = b+(b−a)t, (18)
y(t) = u(x)−β(b−a)(1+ t)+c−α, (19)
such that
y¨ = F2(t,y, y˙), (20)
y(−1) = c, y˙(0) = 0, (21)
where
F2(t,y, y˙) := (b−a)2F(b+(b−a)t,
y+β(b−a)(1+ t)+α−c, y˙/(b−a)+β). (22)
Through a symmetric extension into the interval of t ∈
(0,1], we can write Eqs. (20) and (21) to be
y¨ = f3(t,y, y˙), (23)
y(−1) = c, y(1) = c, (24)
where
f3(t,y, y˙) =
⎧⎨
⎩
F2(−t,y,−y˙) if 0 < t ≤ 1,
F2(t,y, y˙) if −1 ≤ t ≤ 0.
(25)
2.4 The canonical form
The first three type BVPs are all transformed into the
same type BVP:
y¨ = f (t,y, y˙), (26)
y(t0) = c, y(1) = c, (27)
but with different f and t0. The case with t0 = 0 and f =
f1 corresponds to the Dirichlet type BVP, and t0 = −1
and f = f2 to the first Robin type BVP, while t0 =−1 and
f = f3 to the second Robin type BVP. No matter which
type BVP is considered, we can treat these equations in
a unified manner by starting from Eqs. (26) and (27).
For the latter two types BVPs the integration must match
the condition y˙(0) = 0. Then, the solution of the origi-
nal first Robin type BVP is obtained by taking the right-
branch of the solution of Eqs. (26) and (27) with f re-
placed by f2. Similarly, the solution of the original sec-
ond Robin type BVP is obtained by taking the left-branch
of the solution of Eqs. (26) and (27) with f replaced by
f3. In the later it would be appreciated the advantage by
transforming the original BVPs to the standard type BVP
in Eqs. (26) and (27) by enforcing the two boundary val-
ues identical.
The stepping techniques developed for IVPs require the
initial conditions of both y1 = y and y2 = y˙ for the
second-order ODEs. If the initial value of y2, denoted as
y2(t0) = A, is available, which together with the known
initial value of y1(t0) = c, then we can numerically inte-
grate the following IVP step-by-step in a forward direc-
tion from t = t0 to t = 1:
y˙1 = y2, (28)
y˙2 = f (t,y1,y2), (29)
y1(t0) = c, (30)
y2(t0) = A. (31)
Here, we call Eqs. (28)-(31) the (y, t)-IVP, where y(t) =
(y1(t),y2(t)) denotes the system variables in the t-
domain. We are going to develop a Lie-group shooting
method to solve A. If y in terms of t is available, then the
The Lie-Group Shooting Method 153
b = sinh
(
(1− t0) ‖
ˆf‖
‖yˆ‖
)
. (48)
Here, we use the initial y0 = (y1(t0),y2(t0)) and the final
y f = (y1(1),y2(1)) through a suitable weighting factor r
to calculate G, where r ∈ (0,1) is a parameter and tˆ =
t0+ r(1− t0).
The approach of Eq. (44) can be realized alternatively by
using
˙G = A(t,y)G. (49)
Integrating the above equation and using the mean-value
theorem we obtain
G = exp
[Z 1
t0
A(t,y)dt
]
= exp[(1− t0)A(tˆ, yˆ)]. (50)
Inserting Eq. (34) for A and calculating the exponential
we can derive Eq. (44) again.
The above methods applied a generalized mid-point rule
or the mean value theorem on the calculations of G, and
the resultant is a single-parameter Lie group element de-
noted by G(r).
3.3 A Lie group mapping between two points on the
cone
Let us define a new vector
F :=
ˆf
‖yˆ‖ , (51)
such that Eqs. (44), (47) and (48) can also be expressed
as
G =
⎡
⎣ I2 + a−1‖F‖2 FFT bF‖F‖
bFT
‖F‖ a
⎤
⎦ , (52)
a = cosh[(1− t0)‖F‖], (53)
b = sinh[(1− t0)‖F‖]. (54)
From Eqs. (43) and (52) it follows that
y f = y0 +ηF, (55)
‖y f‖= a‖y0‖+bF ·y0‖F‖ , (56)
where
η := (a−1)F ·y0 +b‖y0‖‖F‖‖F‖2 . (57)
Substituting
F =
1
η(y f −y0) (58)
obtained from Eq. (55), into Eq. (56) we obtain
‖y f‖
‖y0‖ = a+b
(y f −y0) ·y0
‖y f −y0‖‖y0‖ , (59)
where
a = cosh
(
(1− t0)‖y f −y0‖
η
)
, (60)
b = sinh
(
(1− t0)‖y f −y0‖
η
)
(61)
are obtained by inserting Eq. (58) for F into Eqs. (53) and
(54).
Let
cosθ := [y f −y0] ·y0‖y f −y0‖‖y0‖ , (62)
S := (1− t0)‖y f −y0‖, (63)
and from Eqs. (59)-(61) it follows that
‖y f‖
‖y0‖ = cosh
(
S
η
)
+cosθ sinh
(
S
η
)
. (64)
By defining
Z := exp
(
S
η
)
, (65)
we obtain a quadratic equation for Z from Eq. (64):
(1+cosθ)Z2− 2‖y f‖‖y0‖ Z +1−cosθ= 0. (66)
The solution is found to be
Z =
‖y f‖
‖y0‖ +
√(‖y f ‖
‖y0‖
)2−1+cos2θ
1+cosθ , (67)
The Lie-Group Shooting Method 155
The above derivation of the governing equations (80)-
(86) is based on by equating the two F’s in Eqs. (51)
and (73). It also means that the two Lie group elements
defined by Eqs. (44) and (70) are equal. In this sense
we may call our shooting technique a Lie-group shooting
method.
From Eqs. (83) and (86) it follows that
ξ= c, (87)
which is a positive constant. Hence, from Eqs. (83)-(85)
and (87) we obtain a single algebraic equation for the
unknown variable A:
Ac+η0 ˆf = 0, (88)
where
Z =
√
c2 +B2 +
√
B2√
c2 +A2−
√
A2
, (89)
η0 =
(1− t0)
√
A2
lnZ , (90)
and B = rA/(r−1) has a different sign with A.
Eq. (88) can be used to solve A for a given r. If A is
available, we can return to integrate Eqs. (28)-(31) by a
suitable forward IVP solver.
5 The solution of A
Remarkably, Eq. (88) can be solved exactly for A.
5.1 The case of A > 0
Here we first consider the case of A > 0. Inserting
Eq. (90) for η0 into Eq. (88) we obtain
lnZ = −(1− t0)
ˆf
c
. (91)
Defining
g1 := exp
(
−(1− t0)
ˆf
c
)
, (92)
and substituting Eq. (89) for Z into Eq. (91) we obtain
√
c2 +B2 +
√
B2√
c2 +A2−
√
A2
= g1. (93)
Eq. (93) can be written as
g1A−B = g1
√
c2 +A2 −
√
c2 +B2, (94)
by using A > 0 and B < 0. Squaring the above equation
and cancelling the common terms we can rearrange it to
2g1
√
c2 +B2
√
c2 +A2 = (1+g21)c2+2g1AB. (95)
Squaring again and cancelling the common term and fac-
tor we get
4g21(A2+B2)−4g1(1+g21)AB = (1−g21)2c2. (96)
Inserting B= rA/(r−1) and through some algebraic ma-
nipulations we eventually obtain
4g1
(r−1)2 [−(1−g1)
2r2+(1−g1)2r+g1]A2 =(1−g21)2c2.
(97)
If the following condition holds
D1(r) :=−(1−g1)2r2+(1−g1)2r+g1 > 0, (98)
then A has a positive solution:
A =
√
(r−1)2(1−g21)2c2
4D1g1
. (99)
The discriminant function D1(r) is an open-down dis-
torted parabola of r since g1 is also a function of r. D1(r)
has the following properties:
D1(0) = D1(1) = g1, (100)
and there exist two roots of r for D1(r) = 0:
r1 =
1
2
− 1+g1
2(1−g1) =
−g1
1−g1 , r2 =
1
2
+
1+g1
2(1−g1) =
1
1−g1 .
(101)
The condition (98) can be used to detect the range where
r is permitted.
5.2 The case of A < 0
Next we consider the case of A < 0. Inserting Eq. (90)
for η0 into Eq. (88) we obtain:
lnZ = (1− t0)
ˆf
c
. (102)
The Lie-Group Shooting Method 157
the canonical equations. Therefore the target used to ad-
just the slope A is y˙(0) = 0.
For a trial r in the admissible range, we can calculate
A and then numerically integrate Eqs. (28)-(31) from
t =−1 to t = 0, and compare the end value of yr2(0) with
the exact one y2(0) = y˙(0) = 0. If |yr2(0)| is smaller than
ε, then the process of finding solution is finished. Other-
wise, we need to calculate the end values of y2(0) corre-
sponding to different r1 < r and r2 > r, which are denoted
by yr12 (0) and y
r2
2 (0), respectively. If y
r1
2 (0)yr2(0) < 0,
then there exists one root between r1 and r; otherwise,
the root is located between (r, r2). Then, we apply the
half-interval method to find a suitable r, which requires
us to calculate Eqs. (28)-(31) at each of the calculation of
yr2(0), until |yr2(0)| is small enough to satisfy the criterion
of |yr2(0)| ≤ ε.
In principle, we can increase the accuracy by imposing a
smaller ε on the shooting error, which however requires
more iterations. Since the numerical method is very sta-
ble we can quickly pick up the correct value of r through
some trials and modifications. Therefore, in the follow-
ing calculations of numerical examples we do not use the
above half-interval method to pick up the weighting fac-
tor r.
7 Numerical examples
7.1 Example 1
Let us consider the following BVP (Ha and Lee, 2001):
u′′ =
3
2
u2, (116)
u(0) = 4, u(1) = 1. (117)
The exact solution is
u(x) =
4
(1+x)2
. (118)
It needs to stress that the solution of Eq. (116) is not
unique. In addition the above one, there exists another
solution:
u(x) = c21
(
1−cn(c1x−c2,k2)
1+cn(c1x−c2,k2) −
1√
3
)
, (119)
where cn(ξ,k) is the modulus k Jacobi elliptic func-
tion. In the above case we have c1 = 4.30310990, c2 =
2.3346196, and k =
√
2+
√
3/2.
In this problem the vector field F = 3u2/2 cannot satisfy
the unique conditions of BVP, since ∂F/∂u = 3u may
be negative, for example the solution in Eq. (119). On
the other hand, since F may be zero when u passes the
zero axis, we consider a translation of u in Eq. (116) by
Eq. (7), such that one has
y¨ =
3
2
[y−3t +4−c]2, (120)
y(0) = c, y(1) = c. (121)
Then we apply the method in Sections 4-6 on the above
equation, and then obtain u by u = y−3t +4−c.
0.60 0.62 0.64 0.66 0.68 0.70
r
-50
-40
-30
-20
-10
0
A
-8
-6
-4
-2
0
2
4
6
8
10
y 1
(1
)-
c
0.60 0.62 0.64 0.66 0.68 0.70
r
(a)
(b)
Zero Line
Figure 1 : For Example 1 we plot A with respect to r
in (a), and y1(1)− c with respect to r in (b), where the
intersection points locate the roots of r.
For each given r we use Eq. (110) to calculate A, and then
numerically integrate the IVP by the numerical scheme in
Section 6.1. We plot the curve of A with respect to r in
Fig. 1(a), and the curve of y1(1)− c with respect to r in
The Lie-Group Shooting Method 159
0.5 0.6 0.7 0.8 0.9
r
1.0
1.5
2.0
2.5
3.0
A
-1900
0
1900
y 2
(0
)
0.5 0.6 0.7 0.8 0.9
r
(a)
(b)
Zero Line
Figure 4 : For Example 3 we plot A with respect to r in
(a), and y2(0) with respect to r in (b), where the intersec-
tion points locate the roots of r.
two distinct real roots of ρ in Eq. (128) exist:
ρ1 =
1
2
⎡
⎣8
δ −2+
√(
8
δ −2
)2
−4
⎤
⎦ ,
ρ2 =
1
2
⎡
⎣8
δ −2−
√(
8
δ −2
)2
−4
⎤
⎦ ,
and correspondingly, there are two solutions in Eq. (127).
For δ = 2, there is only one solution corresponding to
ρ= 1.
For each given r we use Eq. (99) to calculate A, and then
numerically integrate the IVP by the numerical scheme in
Section 6.1. For δ= 1.8 we plot the curve of A with re-
spect to r in Fig. 4(a), and the curve of y2(0) with respect
to r in Fig. 4(b). In this calculation we have fixed c = 1
and the stepsize h = 0.0001. It can be seen that there are
-1.0 -0.8 -0.6 -0.4 -0.2 0.0 0.2 0.4 0.6 0.8 1.0
0.0
0.5
1.0
1.5
2.0
u
0.0
0.5
1.0
1.5
2.0
2.5
u
0.0 0.2 0.4 0.6 0.8 1.0
(a)
1E-8
1E-7
1E-6
1E-5
1E-4
E
rr
or
 o
f 
u
(b)
x
(c)
Exact
Numerical
t
Figure 5 : For Example 3: (a) plotting numerical solu-
tions with respect to t, (b) comparing numerical solutions
and exact solutions with respect to x, and (c) the numeri-
cal errors.
two roots of r, of which the target equation y2(0) = 0 is
satisfied as shown in Fig. 4(b) by intersecting the curve
with the zero line.
Then, we apply the Lie-group shooting technique to
this problem for searching the missing initial condition
y2(−1) = A. In Fig. 5 we compare our solutions with the
exact solutions by taking δ= 1.8 and r = 0.8127308556
for smaller solution and r = 0.55507615685 for larger so-
lution. They lead to the errors of the value of y2(0) in the
order of 10−7 when compared with the exact y2(0) = 0.
It can be seen that the numerical errors of u are both in
the order of 10−5. In Fig. 5(a) we also plotted the sym-
metric solutions of u = y−c in the range of t ∈ [−1,1]. It
can be seen that the curves are perfectly symmetric, and
u˙(0) = 0 is fulfilled exactly.
7.4 Example 4
Let us consider the following BVP (Kubicek and
Hlavacek, 1983):
u′′ = a20uexp
[
a1(1−u)
1+a2(1−u)
]
, (129)
The Lie-Group Shooting Method 161
and then, Eqs. (1) and (5) can be reduced to
y¨ = f (t,y, y˙), (134)
y˙(0) = 0, y˙(1) = 0, (135)
where
f (t,y, y˙) := (b−a)2F(a+(b−a)t,
y−k1t2/2−k2t, (y˙−k1t−k2)/(b−a)). (136)
The equation, required to determine the unknown y(0) =
C, can be obtained by a similar argument as that in Sec-
tion 3. For this purpose let us write
y˙1 = y2, (137)
y˙2 = f (t,y1,y2), (138)
y1(t0) =C, y1(1) = D, (139)
y2(t0) = A, y2(1) = B. (140)
In above, t0 = 0 and A = B = 0.
From Eq. (62) and
y0 =
[
C
A
]
=
[
C
0
]
, y f =
[
D
B
]
=
[
D
0
]
(141)
it follows that
cosθ= C(D−C)+A(B−A)√
(C−D)2 +(A−B)2√C2 +A2 . (142)
Because of A = B = 0, cosθ may be -1 or +1. Let us first
consider the case of cosθ= −1, of which C(D−C)< 0
is deduced. Under this condition from Eq. (66) we obtain
Z =
√
C2√
D2
. (143)
If C < 0 then D−C > 0 and from Eqs. (63) and (65) we
have
S = D−C, (144)
η= D−C
ln
√
C2√
D2
, (145)
due to A = B = 0.
From Eqs. (58), (139), (140) and (51) it follows that
F :=
[
F1
F2
]
=
1
η
[
D−C
B−A
]
=
1
‖yˆ‖
[
yˆ2
ˆf
]
, (146)
and that yˆ1 = rC+(1− r)D and yˆ2 = rA+(1− r)B= 0,
where ‖yˆ‖=
√
yˆ21 + yˆ22 =
√
[rC+(1− r)D]2 = 0.
From the second equation in Eq. (146) it follows that
ˆf = f (r, yˆ1, yˆ2) = f (r, rC+(1− r)D,0) = 0, (147)
due to A = B = 0.
On the other hand, from the first equation in Eq. (146)
we have
1
η(D−C) =
yˆ2
‖yˆ‖ = 0, (148)
because of yˆ2 = 0. Substituting Eq. (145) for η into the
above equation we obtain
ln
√
C2√
D2
= 0. (149)
Therefore, we have D = −C, and Eq. (147) can be used
to solve C for a given r.
Now, suppose that C > 0, and then D−C < 0 follows
from the inequality C(D−C) < 0. Under this condition
from Eqs. (66), (63) and (65) we obtain
Z =
√
D2√
C2
, (150)
S =C−D, (151)
η= C−D
ln
√
D2√
C2
. (152)
A similar argument as that in the above also leads to D =
−C.
The case of cosθ = 1 implies that C(D −C) > 0 by
Eq. (142). However, the same argument as that in the
above leads to D = −C. This results in C(D−C) =
−2C2 < 0, which contradicts to C(D−C)> 0. It means
that there exists no such case that cosθ= 1.
The Lie-Group Shooting Method 163
B0 = 4(2r−1)(3r−1−0.5r2)2+2− r, (165)
C0 = 2(2r−1)2. (166)
These equations are integrated backward by the nu-
merical method of backward group preserving scheme
(BGPS) developed by Liu, Chang and Chang (2006) with
the conditions y(1) = D = −C = −α− 1 and y2(1) =
y˙(1) = 0. It can be seen that the numerical solution
exactly satisfies the boundary conditions with y˙(0) =
y˙(1) = 0 as shown in Fig. 8(a). In our calculation we
get u(0) = 2.798782 and u(1) = 1.188085.
9 Conclusions
In this paper we have fully utilized Eqs. (55) and (56)
to construct a one-step group element G(y0,y f ), which
is the Lie group transformation between initial point and
final point on the cone in the Minkowski space. Then,
we used a mean value theorem to construct another Lie
group element G(r). In order to estimate the miss-
ing initial conditions for the two-point nonlinear bound-
ary value problems, we have employed the equation
G(y0,y f ) = G(r) to derive algebraic equations. Through
a symmetric extension technique we have transformed
the Robin type nonlinear BVPs into a canonical one,
which together with the other two type problems all can
be solved in closed-form of the unknown initial condi-
tions in terms of r in a compact space of r ∈ (0,1).
Numerical examples were examined to ensure that the
Lie-group shooting method can calculate the solutions
of second-order nonlinear BVPs even with multiple so-
lutions. The numerical solutions could match the spec-
ified boundary conditions with high accuracy. Through
this study, it can be concluded that the Lie-group shoot-
ing method is accurate, effective and stable. Its numer-
ical implementation is very simple and the computation
speed is very fast to find all possible solutions.
References
Carrier, G.; Pearson, C. (1991): Ordinary Differential
Equations. SIAM, Philadelphia.
Finlayson, B. (1972): The Method of Weighted Residu-
als and Variational Principles. Academic, New York.
Ha, S. N.; Lee, C. R. (2002): Numerical study for two-
point boundary value problems using Green’s functions.
Comp. Math. Appl., vol. 44, pp. 1599-1608.
Keller, H. B. (1992): Numerical Methods for Two-point
Boundary Value Problems. Dover, New York.
Kubicek, M.; Hlavacek, V. (1983): Numerical Solution
of Nonlinear Boundary Value Problems with Applica-
tions. Prentice-Hall, New York.
Liu, C.-S. (2001): Cone of non-linear dynamical system
and group preserving schemes. Int. J. Non-Linear Mech.,
vol. 36, pp. 1047-1068.
Liu, C.-S. (2005): Nonstandard group-preserving
schemes for very stiff ordinary differential equations.
CMES: Computer Modeling in Engineering & Sciences,
vol. 9, pp. 255-272.
Liu, C.-S. (2006a): Preserving constraints of differen-
tial equations by numerical methods based on integrating
factors. CMES: Computer Modeling in Engineering &
Sciences, in press.
Liu, C.-S. (2006b): An efficient backward group pre-
serving scheme for the backward in time Burgers equa-
tion. CMES: Computer Modeling in Engineering & Sci-
ences, in press.
Liu, C.-S.; Chang, C.-W.; Chang, J.-R. (2006): Past
cone dynamics and backward group preserving schemes
for backward heat conduction problems. CMES: Com-
puter Modeling in Engineering & Sciences, in press.
Morrison, D. D.; Riley, J. D.; Zancanaro, J. F. (1962):
Multiple shooting method for two-point boundary value
problems. Commu. ACM, vol. 5, pp. 613-614.
70 Copyright c© 2006 Tech Science Press CMES, vol.15, no.2, pp.69-86, 2006
α2 =
a0cT −c0[aT u(T)+bT u˙(T )]
a0[aT v(T )+bT v˙(T )]−b0[aT u(T )+bT u˙(T)] . (10)
The above technique for the linear BVP is known as a
linear shooting method (LSM). Unfortunately, the LSM
technique cannot be applied to the nonlinear BVP.
From Eqs. (8), (5) and (7) we can get the initial condition
x˙(0) = α2. However, we will point out that the initial
condition x˙(0) = α2 may deviate from the exact one to
a great extent, which will be demonstrated through an
example with exact solution given in Section 5.4, where
one can see that the LSM is not so good even for the
linear BVP. To remedy, there had some improvements
reported in the literature (Garg, 1980; Randez, 1993).
The time-stepping techniques developed for the IVPs re-
quire the initial conditions of both x and y = x˙ for the
second order ODEs, such that we can numerically inte-
grate the following IVP step-by-step in a forward direc-
tion from t = 0 to t = T :
x˙ = y, (11)
y˙ = f (t,x,y), (12)
x(0) = α, y(0) = A. (13)
The shooting method involves a choice of the missing
initial conditions in Eq. (13), which must satisfy the con-
straint a0α+b0A = c0 in Eq. (2), and the numerical so-
lution at the terminal point must satisfy the constraint
aT x(T )+bT y(T) = cT in Eq. (3).
Basically, the shooting method is to assume some un-
known initial conditions and to convert the BVP to the
IVP. Solve the IVP and compare the solution at the
boundary to the known boundary conditions. In gen-
eral, the solution will not immediately satisfy the bound-
ary conditions, and it requires many iterations to adjust
the initial guess through some techniques. This iterative
approach is called a shooting method. How to choose
a suitable initial condition may be difficult when the
guesses are carried out in an indefinite range. The shoot-
ing method is a trial-and-error method and is often very
sensitive to the initial guess. All that makes the compu-
tation expensive.
Our approach of the above second order BVP is based
on the group preserving scheme (GPS) developed by Liu
(2001). The GPS method is very effective to deal with
ODEs with special structures as shown by Liu (2005)
for stiff equations and by Liu (2006a) for ODEs with
constraints. Then, Liu (2006b) has developed a one-
step GPS method, which is named the Lie-group shoot-
ing method, to calculate the multiple solutions of sec-
ond order ODEs. About the partial differential equations
(PDEs), Liu (2006c) has developed the numerical line
method together with the GPS to calculate the solutions
of Burgers equation. The same strategy is also used by
Liu and Ku (2005) to solve the Landau-Lifshitz equation,
where an effective combination of GPS and Runge-Kutta
method is employed to enhance the stability and accu-
racy of numerical solutions. On the other hand, in or-
der to effectively solve the backward in time problems
of parabolic PDEs, a past cone structure and a backward
group preserving scheme have been successfully devel-
oped by the author, such that the new numerical meth-
ods can be used to solve the backward in time Burgers
equation by Liu (2006d), and the backward in time heat
conduction equation by Liu, Chang and Chang (2006).
Recently, the so-called one-step estimation method based
on the Lie-group is developed by Liu (2006e) for the nu-
merical estimation of temperature-dependent heat con-
ductivity, and then Liu (2006f) extends it to a simultane-
ous estimation of temperature-dependent heat conductiv-
ity and heat capacity for the one-dimensional heat con-
duction problem.
The idea based on the one-step Lie-group transformation
is rather promising to provide efficient numerical meth-
ods in many issues including the inverse problems and
boundary value problems. The one-step GPS has been
applied to the solutions of BVPs by Liu (2006b), but re-
stricted to the simpler boundary conditions. The present
approach can be applied to the second order BVPs in a
rather general setting, of which we can search the miss-
ing initial condition through an iterative solution of r in
a compact space of r ∈ (0,1).
This paper is arranged as follows. In the next section
we give a brief sketch of the group preserving scheme
for ODEs. In Section 3 we explain the construction
of a one-step GPS by using the closure property of
the Lie group, and combine it with the mid-point rule
to construct a single-parameter Lie group in terms of
the weighting factor r. In Section 4 we derive a new
shooting method to solve BVPs. In Section 5 we use
numerical examples to demonstrate the efficiency of the
72 Copyright c© 2006 Tech Science Press CMES, vol.15, no.2, pp.69-86, 2006
3 Two Lie-group elements
Applying the scheme (28) to the ODEs in Eq. (14) with a
specified initial condition u(0) = u0 we can compute the
solution u(t) by the GPS. Assuming that the total time T
is divided by K steps, that is, the time stepsize used in
the GPS is Δt = T/K. Starting from an initial augmented
condition X0 = X(0) = (uT0 ,‖u0‖)T we want to calculate
the value X(T) = (uT(T ),‖u(T)‖)T at a desired time t =
T .
By applying Eq. (21) step-by-step we can obtain
XT = GK(Δt) · · ·G1(Δt)X0, (30)
where XT approximates the exact X(T ).
Let us recall that each Gi, i = 1, . . . ,K, is an element of
the Lie group SOo(n,1), and by the closure property of
the Lie group, GK(Δt) · · ·G1(Δt) is also a Lie group. To
prove this closure property let us consider two elements
G1,G2 ∈ SOo(n,1), that is,
GT1 gG1 = g, GT2 gG2 = g. (31)
Then, by using the above two equations we have
(G2G1)T gG2G1 = GT1 GT2 gG2G1 = GT1 gG1 = g. (32)
It means that G2G1 ∈ SOo(n,1) if G1,G2 ∈ SOo(n,1).
According to this argument we can prove that
GK · · ·G1 ∈ SOo(n,1), because of GK , · · ·, G1 ∈
SOo(n,1). Therefore in SOo(n,1), there exists an el-
ement denoted by G which is identical to GK · · ·G1.
Hence, from Eq. (30) we have
XT = GX0. (33)
This is a one-step Lie-group transformation from X0 to
XT . However, it is worthwhile to point out that the other
numerical methods cannot share this property, since they
are not of the Lie group schemes.
The exact G is hardly to find. However, we can approx-
imate the exact G by a numerical one through some
numerical methods developed below.
3.1 The Lie group element G(r)
In above we have explored the concept of the one-step G.
In order to increase the accuracy of our shooting method
to search some unknown initial conditions of the BVPs,
we can calculate G by a mid-point rule:
G =
⎡
⎢⎣ In+
(a−1)
‖ˆf‖2
ˆfˆfT bˆf‖ˆf‖
bˆfT
‖ˆf‖ a
⎤
⎥⎦ , (34)
where
uˆ = ru0 +(1− r)uT , (35)
ˆf = f(uˆ), (36)
a = cosh
(
T‖ˆf‖
‖uˆ‖
)
, (37)
b = sinh
(
T‖ˆf‖
‖uˆ‖
)
. (38)
That is, we use the initial u0 and the final uT through
a suitable weighting factor r to calculate G, where
0 < r < 1 is a parameter. The above method results in a
Lie group element G(r) if T is a fixed value.
3.2 The Lie group element G(u0,uT )
Let us define a new vector
F :=
ˆf
‖uˆ‖ , (39)
and then Eqs. (34), (37) and (38) can also be expressed
as
G =
⎡
⎣ In + a−1‖F‖2 FFT bF‖F‖
bFT
‖F‖ a
⎤
⎦ , (40)
a = cosh(T‖F‖), (41)
b = sinh(T‖F‖). (42)
From Eqs. (33) and (40) it follows that
uT = u0 +ηF, (43)
74 Copyright c© 2006 Tech Science Press CMES, vol.15, no.2, pp.69-86, 2006
the differential equations do not specify the initial condi-
tions, but rather some given boundary conditions.
Let us consider the following second order boundary
value problems:
x¨ = f (t,x, x˙), 0 < t < T, (62)
x(0) = α, x(T ) = β. (63)
The conditions that a solution to Eqs. (62) and (63)
exists should be checked before any numerical scheme
is applied; otherwise, a list of meaningless output may
be generated. The general conditions are stated in the
following theorem (Burden, 1993).
Theorem 2: Suppose the function f in Eq. (62) is con-
tinuous and that ∂ f/∂x and ∂ f/∂x˙ are continuous in a do-
mainD= {(t,x, x˙)|0≤ t ≤ T,−∞< x <∞,−∞< x˙ <∞}.
If ∂ f/∂x > 0 and |∂ f/∂x˙| ≤ M in D, where M is a con-
stant, then the boundary value problem has a unique so-
lution in D.
The BVPs constructed here require information at the ini-
tial time t = 0 and at a final time t = T . However, the
time-stepping scheme developed in Section 2 only re-
quires the information at the starting time t = 0. Some
effort is then required to reconcile the time-stepping
scheme with the BVPs presented here.
Let y = dx/dt. We obtain
x˙ = y, (64)
y˙ = f (t,x,y), (65)
x(0) = α, x(T ) = β, (66)
y(0) = A, y(T ) = B, (67)
where A and B are two unknown constants, while α and
β are two given constants.
Let
u :=
[
x
y
]
. (68)
From Eqs. (43), (66) and (67) it follows that
F :=
[
F1
F2
]
=
1
η
[ β−α
B−A
]
. (69)
Starting from an initial guess of (A,B) we use the follow-
ing equation to calculate η:
η= T
√
(α−β)2 +(A−B)2
lnZ , (70)
in which Z is calculated by
Z =
√β2+B2√
α2+A2
+
√
β2+B2
α2+A2 − (1−cos2 θ)
1+cosθ , (71)
where
cosθ= α(β−α)+A(B−A)√
(α−β)2 +(A−B)2√α2+A2 . (72)
The above three equations are obtained from Eqs. (56),
(55) and (50) by inserting Eq. (68) for u.
When comparing Eq. (69) with Eq. (39), and with the aid
of Eqs. (35), (36) and (64)-(67) we obtain
A = 1ηρ [ρ
2(β−α)− (1− r)η2 ˆf ], (73)
B =
1
ηρ [ρ
2(β−α)+ rη2 ˆf ], (74)
where
ˆf := f (rT, rα+(1− r)β, rA+(1− r)B), (75)
ρ :=
√
[rα+(1− r)β]2+[rA+(1− r)B]2. (76)
The above derivation of the governing equations (70)-
(76) is stemed from by letting the two F in Eqs. (39) and
(46) be equal, which is essentially identical to the spec-
ification of G(u0,uT ) = G(r) in terms of the Lie group
elements G(u0,uT ) and G(r).
For a specified r and a given vector field f , Eqs. (73)
and (74) can be used to generate a new (A,B). We repeat
the above process in Eqs. (70)-(76) until (A,B) converges
according to a given stopping criterion:√
(Ai+1−Ai)2 +(Bi+1−Bi)2 ≤ ε1. (77)
If A is available, we can return to Eqs. (64)-(66) but with
merely integrating the following equations by a forward
integration scheme as that given in Section 2:
x˙ = y, (78)
76 Copyright c© 2006 Tech Science Press CMES, vol.15, no.2, pp.69-86, 2006
0.0 0.2 0.4 0.6 0.8 1.0
0.0
0.5
1.0
1.5
x
0.8
1.2
1.6
y
0.0 0.2 0.4 0.6 0.8 1.0
(a)
0E+0
1E-4
2E-4
3E-4
E
rr
or
 o
f x
0E+0
3E-4
6E-4
9E-4
E
rr
or
 o
f y
(b)
Time (s)
Exact
GPS
Figure 2 : By iteratively solving r we compare the nu-
merical solutions and exact solutions for Example 1 in
(a), and (b) the numerical errors.
condition given in Eq. (82), while for r = 0.5 the numer-
ically integrating result of x(1) is smaller than the exact
terminal condition; hence, the accurate solution of r is
between 0.3 and 0.5.
Therefore, we take [0.3,0.5] as the range of r, where the
root of r is located, and apply a half-interval method to
search an accurate r with an initial (A,B) = (1,2), which
is converged through 48 iterations under a tolerance error
of ε2 = 10−15.
The final value of x matches very well with the exact
value with an error 4.441× 10−16. It is indeed a very
good shooting technique rendering a fulfillment of the
final condition of x. At the same time, the estimated
A = 1.5984 is rather accurate when compared with the
exact y(0) = 1.5993, and the error of the end value of y is
9.1954×10−5. In Fig. 2 we compare the exact solutions
with the numerical results calculated by GPS using a
1.0 1.2 1.4 1.6 1.8 2.0
2.0
2.1
2.2
2.3
2.4
2.5
x
0.0
0.2
0.4
0.6
0.8
y
1.0 1.2 1.4 1.6 1.8 2.0
(a)
0E+0
2E-5
4E-5
6E-5
8E-5
E
rr
or
 o
f x
0E+0
1E-4
2E-4
3E-4
4E-4
5E-4
E
rr
or
 o
f y
(b)
Time (s)
Exact
GPS
Figure 3 : Comparing the numerical solutions and ex-
act solutions for Example 2 in (a), and (b) the numerical
errors.
time stepsize Δt = 0.001 sec. It can be seen that the
numerical errors of x and y are both in the order of 10−4.
Unless otherwise specified, the Δt = 0.001 sec will be
used in all the calculations below, and the numerical
scheme used for the integrations of ODEs is the GPS in
Section 2.
5.2 Example 2
Let us consider the following BVP (Ha, 2001):
x¨ = 2x3−6x−2t3, x(1) = 2, x(2) = 2.5. (87)
The exact solutions are
x(t) = t +
1
t
, (88)
y(t) = 1− 1
t2
. (89)
78 Copyright c© 2006 Tech Science Press CMES, vol.15, no.2, pp.69-86, 2006
1 2 3 4 5 6
-3
-2
-1
0
1
x
-2.8
-2.0
-1.2
-0.4
0.4
1.2
2.0
2.8
3.6
4.4
y
1 2 3 4 5 6
(a)
1E-9
1E-8
1E-7
1E-6
1E-5
1E-4
1E-3
1E-2
1E-1
1E+0
E
rr
or
 o
f x
(b)
Time (s)
GPS
LSM
Exact
LSM
GPS
Figure 5 : Comparing the numerical solutions by GPS
and LSM with the exact solutions for Example 4 in (a),
and (b) the numerical errors of x.
where u(t) and v(t) both satisfy the differential equa-
tion but subjecting to the initial conditions with u(1) =
1, u˙(1) = 0 and v(1) = 0, v˙(1) = 1. From Eq. (97) it can
be seen that x(t) can match not only the differential equa-
tion but also the two boundary conditions x(1) = 1 and
x(6) = −0.5 in Eq. (95). This method is called a linear
shooting method (LSM).
In contrast, we are going to find a missing initial condi-
tion y(0) = A, such that in the numerical solutions of
x˙ = y, x(1) = 1, (98)
y˙ =
√
t cost +
(
1
4t2
−1
)
x− 1
t
y, y(1) = A, (99)
x(6) can match the exact value of x(6) = −0.5.
In our estimation we let [0.75,0.78] as the range of r, and
ε1 = 10−10 was used. The initial (A,B) is taken to be
(A,B) = (−1,0). Then, we use a half-interval method to
search an accurate r, which is converged through 23 iter-
ations under an error tolerance of ε2 = 10−15. The final
value of x matches very well with the exact value with
an error 1.3191× 10−8. In Fig. 5 we compare the nu-
merical results with the exact solution. It can be seen
that the numerical error of x is in the order of 10−3.
At the same figure we also plotted the result computed
by the LSM, where we use GPS to integrate the solu-
tions of u and v. Even the LSM solution can match the
boundary conditions very well; however, its solution is
not good when compared with the exact solution given
in Eq. (97). The main reason is that the LSM method
gives no correction of the initial slope of x, which makes
that x˙(1) =−[0.5+u(6)]/v(6)= 0.18574 is not accurate
when compared with the exact x˙(1)= 0.33084. The error
1.451×10−1 is much larger than our 6.37×10−3.
This example shows that our estimation method of initial
condition is effective even for a large time span.
5.5 Example 5
In this example we consider
u¨ =−δeu, u(0) = 0, u(1) = 0, (100)
which is referred as the Bratu problem (Aris, 1975). It
was noted by Ascher, Mattheij and Russel (1995) that
the function
u(t) = −2ln
[
cosh
(
0.5(t−0.5)φ
0.25coshφ
)]
(101)
is a solution of Eq. (100), if φ is the solution of φ =√
2δcosh(φ/4).
From the boundary conditions we have α= β= 0, which
make cosθ in Eq. (72) to be -1, and thus Z in Eq. (71)
cannot be defined. When apply the method in Section 4
to this problem we consider a translation x(t) = u(t)+1,
such that we have
x¨ = −δex−1, x(0) = 1, x(1) = 1. (102)
We only consider δ = 1. In the estimation of the initial
condition y(0) = A, we let [0.45,0.48] as the range for
an iterative solution of r, ε1 = 10−10 was used, and the
initial (A,B) is taken to be (A,B) = (3,−3). Then, we
use a half-interval method to search an accurate r, which
is converged through 19 iterations under an error toler-
ance of ε2 = 10−15. The final value of x matches very
well with the exact value with an error 2.6731×10−10.
In Table 1 we compare the numerical solutions with
the exact solutions at some points, where Error 1 is the
80 Copyright c© 2006 Tech Science Press CMES, vol.15, no.2, pp.69-86, 2006
ˆf ·u0 = α[rA+(1− r)B]+A ˆf , (114)
a = cosh
(
T‖ˆf‖
‖uˆ‖
)
, (115)
b = sinh
(
T‖ˆf‖
‖uˆ‖
)
, (116)
ηˆ= (a−1)
ˆf ·u0 +b‖u0‖‖ˆf‖
‖ˆf‖2 . (117)
The other procedures to obtain the solution of (A,B) are
similar to that in Section 4.
6.2 Example 6
Let us consider the following BVP (Ha, 2001):
x¨ =
3
2
x2, x(0) = 4, x(1) = 1. (118)
The exact solutions are
x(t) =
4
(1+ t)2
, (119)
y(t) =
−8
(1+ t)3
. (120)
It needs to stress that the solution of Eq. (118) is not
unique. In addition the one in Eq. (119), there exists an-
other solution:
x(t) = c21
(
1−cn(c1t−c2,k2)
1+cn(c1t−c2,k2) −
1√
3
)
, (121)
where cn(ξ,k) is the modulus k Jacobi elliptic func-
tion. In the above case we have c1 = 4.30310990, c1 =
2.3346196, and k =
√
2+
√
3/2.
In this problem the vector field f = 3x2/2 cannot satisfy
the unique conditions in Theorem 2, since ∂ f/∂x = 3x
may be negative, for example the solution in Eq. (121).
On the other hand, since f may be zero when x passes
the zero axis, we consider a translation of x in Eq. (118)
by z = x+10, such that one has
z¨ =
3
2
[z2−20z+100], z(0) = 14, z(1) = 11. (122)
0.0 0.2 0.4 0.6 0.8 1.0
1
2
3
4
x
-8
-6
-4
-2
0
y
0.0 0.2 0.4 0.6 0.8 1.0
(a)
0E+0
2E-4
4E-4
6E-4
8E-4
1E-3
1E-3
E
rr
or
 o
f x
0E+0
1E-3
2E-3
3E-3
4E-3
E
rr
or
 
of
 
y
(b)
Time (s)
Exact
GPS
Figure 6 : Comparing the numerical solutions and ex-
act solutions for Example 6 in (a), and (b) the numerical
errors.
Then we apply the method in Section 6.1 on the above
equation, and then obtain x and y by x = z−10 and y = z˙.
In the estimation of A, we take [0.57,0.585] as the range
for an iterative solution of r, and ε1 = 10−10 was used
in the criterion (77). The initial (A,B) is taken to be
(A,B) = (−10,−4). Then we use a half-interval method
to search an accurate r, which is converged through 21
iterations under an error tolerance of ε2 = 10−15. The
final value of x matches very well with the exact value
with an error 5.9227× 10−8. In Fig. 6 we compare the
numerical results with the exact solutions. It can be seen
that the numerical errors of x and y are both in the order
of 10−3.
6.3 Example 7
For the following BVP (Ha, 2001):
x¨ =
1
8(32+2t
3−xx˙), x(1) = 17, x(3) = 433 , (123)
82 Copyright c© 2006 Tech Science Press CMES, vol.15, no.2, pp.69-86, 2006
Then we use the same method in Section 4 to calcu-
late (x,y) until they match the target equation: y(T )−
cT /bT = 0.
For case (iii) with [a0 	= 0,b0 = 0,aT 	= 0,bT 	= 0], x(0) =
α is a known parameter, and the other three unknown pa-
rameters y(0) = A, y(T ) = B and x(T ) = β can be esti-
mated by the following method. Substituting
β= cT −bT B
aT
(131)
into Eqs. (108)-(117), and starting from an initial guess
of (A,B) we can use these equations to generate the new
(A,B) until they converge according to the stopping cri-
terion (77). If B is available, we can return to Eq. (131)
to calculate β. Then we use the same method in Section
4 to calculate (x,y) until they match the target equation:
aT x(T )+bT y(T)−cT = 0.
For case (iv) with [a0 = 0,b0 	= 0,aT 	= 0,bT = 0], y(0) =
A and x(T ) = β are two known parameters, and the other
two unknown parameters x(0) = α and y(T ) = B can
be estimated by the following method. We rearrange
Eq. (108) to
α= β− ηˆA− (1− r)ηˆ2 ˆf . (132)
Starting from an initial guess of (α,B) we use Eqs. (108)-
(117), where Eq. (108) is replaced by Eq. (132), to gen-
erate the new (α,B) until they converge according to the
following criterion:√
(αi+1−αi)2 +(Bi+1−Bi)2 ≤ ε1. (133)
Then we use the same method in Section 4 to calcu-
late (x,y) until they match the target equation: x(T )−
cT /aT = 0.
For case (v) with [a0 = 0,b0 	= 0,aT = 0,bT 	= 0], y(0) =
A and y(T ) = B are two known parameters, and the other
two unknown parameters x(0) = α and x(T ) = β can
be estimated by the following method. We rearrange
Eqs. (108) and (109) to
α= α+A−B+ ηˆ ˆf , (134)
β= α+ ηˆ[rA+(1− r)B]. (135)
Starting from an initial guess of (α,β) we use Eqs. (108)-
(117), where Eqs. (108) and (109) are replaced by
Eqs. (134) and (135), to generate the new (α,β) until they
converge according to the following criterion:√
(αi+1−αi)2 +(βi+1−βi)2 ≤ ε1. (136)
Then we use the same method in Section 4 to calcu-
late (x,y) until they match the target equation: y(T )−
cT /bT = 0.
For case (vi) with [a0 = 0,b0 	= 0,aT 	= 0,bT 	= 0], y(0) =
A is a known parameter, and the other three parameters
x(0) = α, x(T ) = β and y(T ) = B are unknown, which
can be estimated by the following method. Substituting
Eq. (131) for β into Eqs. (108)-(117), where Eq. (109) is
replaced by Eq. (132), and starting from an initial guess
of (α,B) we can use these equations to generate the new
(α,B) until they converge according to the stopping cri-
terion (133). If B is available, we can return to Eq. (131)
to calculate β. Then we use the same method in Section
4 to calculate (x,y) until they match the target equation:
aT x(T )+bT y(T )−cT = 0.
For case (vii) with [a0 	= 0,b0 	= 0,aT 	= 0,bT = 0],
x(T ) = β is a known parameter, and the other three un-
known parameters x(0) = α, y(0) = A and y(T) = B can
be estimated by the following method. Substituting
α=
c0−b0A
a0
(137)
into Eqs. (108)-(117), and starting from an initial guess
of (A,B) we can use these equations to generate the new
(A,B) until they converge according to the stopping cri-
terion (77). If A is available, we can return to Eq. (137)
to calculate α. Then we use the same method in Section
4 to calculate (x,y) until they match the target equation:
x(T )−cT /aT = 0.
For case (viii) with [a0 	= 0,b0 	= 0,aT = 0,bT 	= 0],
y(T ) = B is a known parameter, and the other three un-
known parameters x(0) = α, x(T ) = β and y(0) = A
can be estimated by the following method. Substituting
Eq. (137) for α into Eqs. (108)-(117), where Eq. (109) is
replaced by Eq. (129), and starting from an initial guess
of (A,β) we can use these equations to generate the new
(A,β) until they converge according to the stopping cri-
terion (130). If A is available, we can return to Eq. (137)
to calculate α. Then we use the same method in Section
4 to calculate (x,y) until they match the target equation:
y(T )−cT /bT = 0.
For case (ix) with [a0 	= 0,b0 	= 0,aT 	= 0,bT 	= 0], there
are four unknown parameters x(0) = α, x(T ) = β, y(0) =
84 Copyright c© 2006 Tech Science Press CMES, vol.15, no.2, pp.69-86, 2006
tions (Chen and Liu, 1998):
x(t) = 1+0.4469t−0.5t2+0.2979t3−0.0668t4
−0.0566t5+0.05579t6−0.0118t7−0.0178t8
+0.0186t9−0.0058t10−0.0041t11+0.0058t12
−0.0026t13−0.0006t14+0.0016t15, (143)
y(t) = 0.4469− t +0.8937t2−0.267t3−0.2832t4
+0.3344t5−0.0827t6−0.1427t7+0.1676t8
−0.0584t9−0.0451t10+0.0696t11−0.0335t12
−0.0086t13+0.0237t14−0.0142t15. (144)
It can be seen that the numerical result of y(1) = 0.0005
obtained from Eq. (144) cannot match the condition
y(1) = 0 very well, even Chen and Liu (1998) used a
rather complex polynominal expansion method to obtain
the solutions up to fifteen degree of t as given above.
7.3 Example 9
Let us consider the following BVP (Kubicek and
Hlavacek, 1983):
x¨+
1
t
x˙ = −δex, x˙(0) = 0, x(1) = 0. (145)
This problem is of case (iv) in Section 7.1 and is sin-
gular at the zero point t = 0. We apply the estimation
technique in Section 4 to this problem for searching the
missing initial condition x(0) = α. For this case (α,B)
are unknowns and when applied Eqs. (70)-(76) on the
solution of (α,B), Eq. (73) is replaced by
α= β− ρAη − (1− r) ˆf . (146)
The closed form solution of Eq. (145) is
x(t) = ln 8bδ(1+bt2)2 , (147)
where the integration constant b is determined by
8b
δ(1+b)2 = 1. (148)
It can be seen that for a given δ in the range of 0 < δ< 2,
two distinct real roots of b in Eq. (148) exist and cor-
respondingly, there are two solutions in Eq. (147). For
δ= 2, there is only one solution corresponding to b = 1.
0.0 0.2 0.4 0.6 0.8 1.0
0.0
0.3
0.6
0.9
1.2
1.5
x
-2.1
-1.8
-1.5
-1.2
-0.9
-0.6
-0.3
0.0
y
0.0 0.2 0.4 0.6 0.8 1.0
(a)
0E+0
1E-3
2E-3
3E-3
E
rr
or
 o
f x
0E+0
1E-3
2E-3
3E-3
4E-3
5E-3
E
rr
or
 o
f y
(b)
Time (s)
Exact
GPS
Figure 9 : Comparing the numerical solutions and exact
solutions for Example 9 with δ = 2 in (a), and (b) the
numerical errors.
In Fig. 9 we compare our solutions with the exact so-
lutions by taking δ= 2 and b = 1. In our calculation we
have fixed r = 0.6013, which leads to an error of the final
value of x in the order of 3.314×10−4 when compared
with the exact x = 0. It can be seen that the numerical
errors of x and y are both in the order of 10−3. Next, in
Fig. 10 we compare our solution with the exact solution
by taking δ= 1.5 and b being calculated by Eq. (148):
b1 =
1
2
⎡
⎣8
δ −2+
√(
8
δ −2
)2
−4
⎤
⎦ ,
b2 =
1
2
⎡
⎣8
δ −2−
√(
8
δ −2
)2
−4
⎤
⎦ .
Corresponding to b1 and b2 there are two exact solutions.
86 Copyright c© 2006 Tech Science Press CMES, vol.15, no.2, pp.69-86, 2006
vol. 159, pp. 125-138.
Garg, V. K. (1980): Improved shooting techniques for
linear boundary value problems. Comput. Meth. Appl.
Mech. Eng., vol. 22, pp. 87-99.
Ha, S. N. (2001): A nonlinear shooting method for two-
point boundary value problems. Comp. Math. Appl., vol.
42, pp. 1411-1420.
Ha, S. N.; Lee, C. R. (2002): Numerical study for two-
point boundary value problems using Green’s functions.
Comp. Math. Appl., vol. 44, pp. 1599-1608.
Kubicek, M.; Hlavacek, V. (1983): Numerical Solution
of Nonlinear Boundary Value Problems with Applica-
tions. Prentice-Hall, New York.
Keller, H. B. (1992): Numerical Methods for Two-point
Boundary Value Problems. Dover, New York.
Liu, C.-S. (2001): Cone of non-linear dynamical system
and group preserving schemes. Int. J. Non-Linear Mech.,
vol. 36, pp. 1047-1068.
Liu, C.-S. (2005): Nonstandard group-preserving
schemes for very stiff ordinary differential equations.
CMES: Computer Modeling in Engineering & Sciences,
vol. 9, pp. 255-272.
Liu, C.-S. (2006a): Preserving constraints of differen-
tial equations by numerical methods based on integrating
factors. CMES: Computer Modeling in Engineering &
Sciences, vol. 12, pp. 83-108.
Liu, C.-S. (2006b): The Lie-group shooting method for
nonlinear two-point boundary value problems exhibiting
multiple solutions. CMES: Computer Modeling in Engi-
neering & Sciences, vol. 13, pp. 149-163.
Liu, C.-S. (2006c): A group preserving scheme for Burg-
ers equation with very large Reynolds number. CMES:
Computer Modeling in Engineering & Sciences, vol. 12,
pp. 197-211.
Liu, C.-S. (2006d): An efficient backward group pre-
serving scheme for the backward in time Burgers equa-
tion. CMES: Computer Modeling in Engineering & Sci-
ences, vol. 12, pp. 55-65.
Liu, C.-S. (2006e): One-step GPS for the estimation of
temperature-dependent thermal conductivity. Int. J. Heat
Mass Transf., vol. 49, pp. 3084-3093.
Liu, C.-S. (2006f): An efficient simultaneous estima-
tion of temperature-dependent thermophysical proper-
ties. CMES: Computer Modeling in Engineering & Sci-
ences, vol. 14, pp. 77-90.
Liu, C.-S.; Chang, C.-W.; Chang, J.-R. (2006): Past
cone dynamics and backward group preserving schemes
for backward heat conduction problems. CMES: Com-
puter Modeling in Engineering & Sciences, vol. 12, pp.
67-81.
Liu, C.-S.; Ku, Y.-L. (2005): A combination of group
preserving scheme and Runge-Kutta method for the inte-
gration of Landau-Lifshitz equation. CMES: Computer
Modeling in Engineering & Sciences, vol. 9, pp. 151-
178.
Randez, L. (1993): Optimizing the numerical integra-
tion of initial value problems in shooting methods for lin-
ear boundary value problems. SIAM J. Sci. Comput., vol.
14, pp. 860-871.
180 Copyright c© 2006 Tech Science Press CMES, vol.15, no.3, pp.179-196, 2006
In order to distinguish it from the systems to be intro-
duced later we call Eqs. (3)-(5) the (u,x)-BVP, where
u(x) = (u1(x),u2(x)) denotes the system dependent vari-
ables in the x-domain.
For the singular perturbation problems there had already
developed many asymptotic approximation methods, and
the numerical methods according to these concepts to
match the boundary layer behavior were developed in an
attempt to obtain the accurate reliable schemes which are
uniformly valid with respect to the perturbation param-
eter [Roos, Stynes and Tobiska (1996)]. Roberts (1982)
has introduced a non-asymptotic boundary value method
to solve a certain class of singular perturbation problems.
The concept of replacing the SPBVP by an initial value
problem (IVP) is presented by Kadalbajoo and Reddy
(1987) for a particular type ODE. The original second-
order ODE is replaced by an asymptotically equiva-
lent first-order ODEs and is solved as an IVP. Gasparo
and Macconi (1989, 1990) gave an initial-value method
for the second-order SPBVPs with a boundary layer at
one end-point. The idea is to replace the SPBVP by
two suitable IVPs, where the two ODEs are integrat-
ing on the opposite directions, and the first problem
can be solved only if the solution of the second one is
known. Then, the initial-value technique developed by
Gasparo and Macconi (1989) for solving the singularly-
perturbed nonturning-point problems was used by Nate-
san and Ramanujam (1998) to solve the singularly-
perturbed turning-point problems exhibiting twin bound-
ary layers. They obtained the required approximate solu-
tion by combining solutions of the reduced problem, an
initial-value problem and a terminal-value problem.
A continuance of the IVP technique was developed by
Reddy and Chakravthy (2004) and Li and Wang (2005).
The given problem is replaced by three first-order ODEs.
The numerical solution of two IVPs goes in the positive
direction and the third IVP is independent of these two
IVPs, integrating on an opposite direction under a speci-
fied terminal condition. This technique is mainly limited
to the linear SPBVPs.
For the BVPs there are many computational meth-
ods by employing the shooting technique [Kubicek and
Hlavacek (1983); Keller (1992); Ascher, Mattheij and
Russell (1995)]. The shooting method involves a choice
of the missing initial condition for Eq. (4), such that the
numerical solution at the other end-point can satisfy the
constraint u1(1) = β in Eq. (5). If this objective can be
achieved very well then one can convert the (u,x)-BVP
into the (u,x)-IVP. Solving the resultant IVP and match-
ing the boundary condition at the other end-point is then
the main issue of the shooting method. Frequently, the
solution will not immediately satisfy the boundary con-
dition, and, it requires many iterations to feedback the
information of mismatch on the target defined by the
boundary conditions to adjust the initial guess through
some techniques. Thus the solution will gradually con-
verge to the desired boundary condition by varying the
initial conditions. This iterative approach is called the
shooting method.
The above statement seems rather promising of the
shooting method. However, this approach is often inef-
fective and unstable for the SPBVPs due to the presence
of rapidly increasing modes which cannot be solved with
the use of an initial value solver. Instead of, a widely
used shooting technique is the parallel or multiple shoot-
ing to remedy the stability problem. As pointed out by
Ascher, Mattheij and Russell (1995) these methods are
also likely to be ineffective for more singular problems.
The present approach of the SPBVPs is based on Liu’s
group preserving scheme (GPS) developed by Liu (2001)
for the integration of IVPs. The GPS method is very ef-
fective to deal with ODEs endowing with special struc-
tures as shown by Liu (2005, 2006a) for stiff equations
and for ODEs with constraints. Recently, Liu (2006b)
has extended this technique to solve the BVPs, and the
numerical results reveal that the GPS is a rather promis-
ing method to effectively calculate the two-point BVPs.
However, it is not yet been applied to the solutions of
SPBVPs.
Before the application of the method developed by Liu
(2006b) for the SPBVPs, we will search a one-to-one
coordinate transformation, which is designed to smooth
out the region where a thin layer appears, featuring by a
high gradient variation of the dependent variable. In the
transformed domain our shooting method together with
the Runge-Kutta method can yield an accurate solution
as that for the initial value solver by using a reasonable
stepsize. It will be clear that the new method can be ap-
plied to the second-order SPBVPs, since we are able to
search the missing initial condition through a few trials
to search a suitable r in a compact space of r ∈ (0,1),
where the factor r is used in a generalized mid-point rule
for the Lie group element of the one-step GPS.
The one-step GPS method for the BVPs has been
182 Copyright c© 2006 Tech Science Press CMES, vol.15, no.3, pp.179-196, 2006
0.0 0.2 0.4 0.6 0.8 1.0
0.0
0.2
0.4
0.6
0.8
1.0
u
1
0.0
0.2
0.4
0.6
0.8
1.0
u
1
0.0 0.2 0.4 0.6 0.8 1.0
(a)
0
2
4
6
8
10
12
Le
ad
in
g 
C
oe
ffi
ci
en
t
0.0
0.2
0.4
0.6
0.8
1.0
x
(b)
t
x
(c)
(d)
Figure 1 : For Example 1 we plot the exact solution with
respect to x in (a), and t in (b). In the t-domain the leading
coefficient is plotted in (c), and the relation between x and
t is also plotted in (d).
u1(0) = α, (11)
u2(0) = A, (12)
where
f (t,u1,u2) := f3(t,u1)u2 + f4(t,u1), (13)
f3(t,u1) := 2λ tanh[λ(1− t)]
− λ(1− tanh
2[λ(1− t)])
ε tanhλ f1(t,u1), (14)
f4(t,u1) :=−λ
2(1− tanh2[λ(1− t)])2
ε tanh2λ
f2(t,u1). (15)
Here, we call Eqs. (9)-(12) the (u, t)-IVP, where u(t) =
(u1(t),u2(t)) denotes the system variables in the t-
domain.
0.0 0.2 0.4 0.6 0.8 1.0
t
-310
-210
-110
-10
f 3
Figure 2 : For Example 1 we plot the function f3 with
respect to t.
To demonstrate the effect of the coordinate transforma-
tion in Eq. (6), let us first consider a simple example:
εu′′1 +u
′
1 = 0, u1(0) = 0, u1(1) = 1 (16)
with the exact solution given by
u1(x) =
1−exp(−x/ε)
1−exp(−1/ε) . (17)
In the plane (x,u1) as shown in Fig. 1(a) the above solu-
tion appears a boundary layer at the left-end point x = 0
when ε = 0.01. Through the coordinate transformation
in Eq. (7) with λ = 3, the same curve is plotted in the
plane (t,u1) as shown in Fig. 1(b). It can be seen that
the boundary layer becomes width towards to the right-
end side, such that the curve is seen more smoothing than
that seen in the plane (x,u1). In Eq. (16) the second or-
der derivative term is multiplied by a small parameter ε,
but when Eq. (16) is represented in the form of Eq. (8)
with f1 = 1 and f2 = 0 the multiplier before u¨1 becomes
a function of t, the value of which, named the leading co-
efficient, is plotted in Fig. 1(c). It can be seen that in the
transition layer the leading coefficient is finite, no more
a small quantity. From Fig. 1(d) it can be seen that there
are much grid points accumulated in the thin layer near
the end x = 0, where the grid points are uniformly dis-
tributed in the t-axis.
Now, we can check Eq. (16) in the form of Eqs. (9) and
(10) by substituting f1 = 1 and f2 = 0 into Eqs. (14) and
(15). Under the same parameters of ε= 0.01 and λ = 3,
we plot the coefficient function f3 before the variable u2
184 Copyright c© 2006 Tech Science Press CMES, vol.15, no.3, pp.179-196, 2006
3.2 Generalized mid-point rule
Applying the scheme (24) to Eq. (20) with a specified
initial condition X(0) = X0 we can compute the solution
X(t) by GPS. Assuming that the stepsize used in GPS is
h = 1/K, and starting from an initial augmented condi-
tion X0 = X(0) = (uT0 ,‖u0‖)T we want to calculate the
value X(1) = (uT(1),‖u(1)‖)T at t = 1.
By applying Eq. (24) step-by-step we can obtain
X f = GK(h) · · ·G1(h)X0, (28)
where X f may approximate the exact X(1) with a cer-
tain accuracy. However, let us recall that each Gi, i =
1, . . .,K, is an element of the Lie group SOo(2,1), and by
the closure property of the Lie group, GK(h) · · ·G1(h) is
also a Lie group denoted by G. Hence, we have
X f = GX0. (29)
This is a one-step transformation from X0 to X f .
We can calculate G by a generalized mid-point rule,
which is obtained from an exponential mapping of A
by taking the values of the argument variables of A at
a generalized mid-point. The Lie group generated from
A ∈ so(2,1) is known as a proper orthochronous Lorentz
group, which admits a closed-form representation given
as follows:
G =
⎡
⎢⎣ I2 +
(a−1)
‖ˆf‖2
ˆfˆfT bˆf‖ˆf‖
bˆfT
‖ˆf‖ a
⎤
⎥⎦ , (30)
where
uˆ = ru0 +(1− r)u f , (31)
ˆf = f(tˆ, uˆ), (32)
a = cosh
(
‖ˆf‖
‖uˆ‖
)
, (33)
b = sinh
(
‖ˆf‖
‖uˆ‖
)
. (34)
Here, we use the initial u0 and the final u f through
a suitable weighting factor r to calculate G, where
0 < r < 1 is a parameter and tˆ = r. The above method
applied a generalized mid-point rule on the calculation
of G, and the resultant is a single-parameter Lie group
element denoted by G(r).
3.3 A Lie group mapping between two points on the
cone
Let us define a new vector
F :=
ˆf
‖uˆ‖ , (35)
such that Eqs. (30), (33) and (34) can be also expressed
as
G =
⎡
⎣ I2 + a−1‖F‖2 FFT bF‖F‖
bFT
‖F‖ a
⎤
⎦ , (36)
a = cosh(‖F‖), (37)
b = sinh(‖F‖). (38)
From Eqs. (29) and (36) it follows that
u f = u0 +ηF, (39)
‖u f‖= a‖u0‖+bF ·u0‖F‖ , (40)
where
η := (a−1)F ·u0 +b‖u0‖‖F‖‖F‖2 . (41)
Substituting
F = 1η(u f −u0) (42)
into Eq. (40) we obtain
‖u f‖
‖u0‖ = a+b
(u f −u0) ·u0
‖u f −u0‖‖u0‖ , (43)
where
a = cosh
(‖u f −u0‖
η
)
, (44)
186 Copyright c© 2006 Tech Science Press CMES, vol.15, no.3, pp.179-196, 2006
where
cosθ= α(β−α)+A(B−A)√
(α−β)2 +(A−B)2√α2 +A2 . (65)
The above three equations are obtained from Eqs. (52),
(51) and (46) by inserting Eq. (19) for u.
When comparing Eq. (62) with Eq. (35), and with the aid
of Eqs. (31), (32) and (58)-(61) we obtain
A =
1
ηξ [ξ
2(β−α)− (1− r)η2 ˆf ], (66)
B =
1
ηξ [ξ
2(β−α)+ rη2 ˆf ], (67)
where
ˆf := f (r, rα+(1− r)β, rA+(1− r)B), (68)
ξ :=
√
[rα+(1− r)β]2+[rA+(1− r)B]2. (69)
The above derivation of the governing equations (63)-
(69) is based on that by equating the two F’s in Eqs. (35)
and (57). It also means that the two Lie groups defined
by Eqs. (30) and (54) are equal. Under this sense we may
call our shooting technique a Lie-group shooting method.
Inserting Eq. (13) for ˆf into Eqs. (66) and (67) we can
rearrange them into a neater form:
A =
ξ
η(β−α)− (1− r)(β−α) ˆf3−
(1− r)η
ξ ˆf4, (70)
B =
ξ
η(β−α)+ r(β−α) ˆf3 +
rη
ξ ˆf4, (71)
where
ˆf3 = 2λ tanh[λ(1− r)]
− λ(1− tanh
2[λ(1− r)])
ε tanhλ f1(r, rα+(1− r)β), (72)
ˆf4 =−λ
2(1− tanh2[λ(1− r)])2
ε tanh2λ
f2(r, rα+(1− r)β). (73)
For a specified r and the given functions f1 and f2,
Eqs. (70) and (71) can be used to generate a new (A,B)
by repeating the above process until (A,B) converges ac-
cording to a given stopping criterion:√
(Ai+1−Ai)2 +(Bi+1−Bi)2 ≤ ε1. (74)
If A is available, we can return to integrate Eqs. (9)-(12)
by a suitable forward IVP solver.
So far, we have not yet said that how to determine r. For
a trial r, let ur1(1) denote the corresponding solution of
u1 at t = 1. We start from r = 1/2 to determine A by
Eqs. (63)-(74), then numerically integrate Eqs. (9)-(12)
from t = 0 to t = 1, and compare the end value of u1(1)
with the exact β. If |u1/21 (1)−β| is smaller than a given
tolerance error ε2, then the process of finding solution is
finished. Otherwise, we need to calculate the values of
u1(1) corresponding to a different r1 < 0.5 or r2 > 0.5,
which are denoted by ur11 (1) and u
r2
1 (1), respectively. If
[ur11 (1)− β][u1/21 (1)− β] < 0, then there exists one root
of r between r1 and 0.5, which renders ur1(1)− β = 0;
otherwise, the root is located between (0.5, r2). Then,
we apply the half-interval method to find a suitable r,
which requires us to calculate Eqs. (9)-(12) at each of
the calculation of ur1(1)− β, until |ur1(1)− β| is small
enough to satisfy the criterion of |ur1(1)−β| ≤ ε2, where
ε2 is a given error tolerance.
5 The translation to new systems
For the singularly perturbed equation, the slope of u1,
i.e., u2, may be large at one or both of the two ends of
the interval, which thus makes A or/and B rather large.
Under these conditions the cosθ defined in Eq. (65) may
be approaching -1, which renders Eq. (64) not applica-
ble in the estimation of A and B, because they are much
larger than α and β. In order to increase the stability of
our shooting method, we can consider a translation of u1
by y1 = u1 +c, where c is a constant.
Therefore we can obtain a new system:
y′1 = y2, (75)
y′2 = −
1
ε
[ f1(x,y1−c)y2 + f2(x,y1−c)], (76)
y1(0) = α+c, y1(1) = β+c. (77)
188 Copyright c© 2006 Tech Science Press CMES, vol.15, no.3, pp.179-196, 2006
6.2 The NGPS
The nonstandard finite difference used here is replacing
the Euler approximation of
u˙≈ uk+1−ukh , (90)
by a nonstandard approximation
u˙≈ uk+1−ukφ(h) , (91)
where φ(h) is a denominator function with the properties
φ(h)> 0 and φ(h) = h+O(h2).
For the stiff differential equations we may adopt
φ(h) = 1−exp(−ρh)ρ , (92)
where ρ is a number not smaller than the Lipschitz con-
stant of Eq. (89).
The replacement of h by φ(h) in Eq. (91) has inspired Liu
(2005), according to a Cayley transformation technique,
to derive the following stiff integrator:
uk+1 = uk +
4‖uk‖2 +2φfk ·uk
4‖uk‖2−φ2‖fk‖2 φfk, (93)
where u = (u1, . . . ,un−1).
The combination of nonstandard method with group
preserving scheme, namely the nonstandard group
preserving scheme (NGPS), renders the new numerical
scheme (93) always stable. This result is very important
for the stiff differential equations, because the dom-
inant factor to choose a suitable stepsize for the stiff
differential equation is its stability, not its accuracy, as
demonstrated by Shampine and Gear (1979).
7 Numerical examples
In order to assess the performance of the newly devel-
oped methods let us investigate the following examples.
7.1 Example 1
The first example given by Eq. (16) is calculated here
again but by the newly developed method in Section 4.
We are going to search a missing initial condition
u2(0) = A, such that in the numerical solutions of
0.0 0.2 0.4 0.6 0.8 1.0
0.0
0.2
0.4
0.6
0.8
1.0
u
1
0.0 0.2 0.4 0.6 0.8 1.0
t
(a)
1E-8
1E-7
1E-6
1E-5
E
rr
or
 o
f u
1
(c)
Exact
Numerical
0.0
0.2
0.4
0.6
0.8
1.0
u
1
(b)
0.1 0.3 0.5 0.7 0.9
x
Figure 3 : For Example 1 with ε = 0.001: (a) plotting
the exact solution with respect to x, (b) comparing with
the numerical solution, (c) the numerical error.
Eqs. (9)-(12), u1(1) can match very well the exact value
u1(1) = 1.
We first consider a moderate singularity with ε = 0.001.
The coordinate tansformation parameter is taken to be
λ= 3. The RK4 was used to integrate the resulting (y, t)-
IVP of Eqs. (78)-(81) with c = 100 and a stepsize h =
0.001.
We take [0.03,0.035] to be the range of r. In the estima-
tion of A, the criterion in Eq. (74) with ε1 = 10−10 was
used. The initial (A,B) is taken to be (A,B) = (1,−1).
Then we use a half-interval method to search an accu-
rate r, which is converged through 11 iterations under
an error tolerance of ε2 = 10−5. The final value of u1
matches very well with the exact value with an error
7.995× 10−6. The relative error of the initial value of
u2 is about 8×10−6. In Fig. 3 we compare the numerical
result with the exact solution. It can be seen that the nu-
merical error of u1 is in the order of 10−6. From Fig. 3(a)
it can be seen that in the plane (x,u1) the solution rapidly
increases from 0 to 1. In order to make the comparison
clear we plot both the numerical and exact solutions in
the plane (t,u1) as shown in Fig. 3(b). The maximum
190 Copyright c© 2006 Tech Science Press CMES, vol.15, no.3, pp.179-196, 2006
Table 1 : For Example 2 we comparing the numerical
errors under ε= 0.01 and at different x with that of Varner
and Choudhury (1998) denoted as VC.
x VC (y,x) (y, t)
0.002 3.6×10−5 8.7×10−9 2.1×10−10
0.004 5.0×10−5 1.4×10−7 4.1×10−10
0.006 7.3×10−5 1.8×10−7 5.7×10−10
0.008 8.1×10−5 1.9×10−7 7.1×10−10
0.010 8.4×10−5 2.0×10−7 8.4×10−10
0.012 8.4×10−5 1.9×10−7 9.3×10−10
0.014 8.1×10−5 1.8×10−7 1.0×10−9
0.016 7.8×10−5 1.7×10−7 1.1×10−9
0.018 7.3×10−5 1.6×10−7 1.1×10−9
0.020 6.9×10−5 1.4×10−7 1.2×10−9
0.022 6.3×10−5 1.3×10−7 1.2×10−9
0.024 6.0×10−5 1.2×10−7 1.2×10−9
0.026 4.4×10−5 1.0×10−7 1.2×10−9
0.028 5.0×10−5 9.1×10−8 1.2×10−9
0.030 4.6×10−5 8.0×10−8 1.2×10−9
0.0 0.2 0.4 0.6 0.8 1.0
-1.0
-0.5
0.0
0.5
1.0
u
1
1E-14
1E-13
1E-12
1E-11
1E-10
1E-9
1E-8
1E-7
Er
ro
r 
of
 
u
1
x
(a)
(b)
Exact
Numerical
(y, x)-IVP
(y, t)-IVP
Figure 5 : For Example 2 with ε = 0.01: (a) comparing
the numerical and exact solutions, and (b) the numerical
errors.
that of 0.63× 10−8 obtained by Ilicasu and Schultz
(2004).
The resulting (y,x)-IVP is indeed a singular system and
when apply the RK4 to it the accuracy is constrained
to a certain degree. Instead of, we apply the RK4 to
the resulting (y, t)-IVP through a coordinate transforma-
tion with λ = 2. The initial values are obtained from
Eqs. (80)-(82) by inserting the above estimated Ax, α= 0,
λ= 2 and c = 50. Under a larger stepsize with h = 0.001
as compared with the above Δx = 0.0005 we obtain very
0.0 0.2 0.4 0.6 0.8 1.0
-1.0
-0.5
0.0
0.5
1.0
u
1
0.00
0.01
0.02
0.03
0.04
0.05
0.06
0.07
E
rr
or
 o
f u
1
x
(a)
(b)
Exact
Numerical
Figure 6 : For Example 2 with ε = 0.001 solved by the
NGPS: (a) comparing the numerical and exact solutions,
and (b) the numerical error.
accurate results, whose numerical error is shown in Ta-
ble 1 and is also plotted in Fig. 5(b) for a comparison.
Under the same stepsize, Ilicasu and Schultz (2004) ob-
tained the numerical solutions with the maximum error
10−7, which is much larger than our maximum error
1.3746×10−10.
Next we consider two cases of ε = 10−3 and ε = 10−4,
and apply the NGPS method in Section 6.2 to integrate
Eq. (89) of this example with the following parameters:
Δx = 1/20 (i.e. n = 20), ρ = 50, h = 1. After 36 it-
erations the steady-state solution is obtained by subject-
ing to ‖uk+1−uk‖ < ε2, where uk denotes the k-th iter-
ative value of u = (u1, . . . ,un−1). For this case we use
ε2 = 10−6. In Fig. 6(a) we compare the numerical solu-
tion and exact solution, and the numerical error is plotted
in Fig. 6(b). The accuracy is in the order of 10−2, even
we use Δx = 0.05 for this highly singular problem. The
maximum error of our numerical solution is 6.61×10−2.
Then, we consider a more singular case with ε= 10−4 of
this example. We apply the NGPS method in Section 6.2
to integrate Eq. (89) of this example with the following
parameters: Δx = 1/80 (i.e. n = 80), ρ = 200, h = 1,
and ε2 = 5×10−3. After 147 iterations the steady-state
solution is obtained. In Fig. 7(a) we compare the numer-
ical solution and exact solution, and the numerical error
is plotted in Fig. 7(b). The accuracy is also in the order
of 10−2. The maximum error of our numerical solution
is 1.09×10−2. In order to compare our numerical solu-
tions with that calculated by Ilicasu and Schultz (2004),
192 Copyright c© 2006 Tech Science Press CMES, vol.15, no.3, pp.179-196, 2006
different methods.
0.0 0.2 0.4 0.6 0.8 1.0
0.4
0.5
0.6
0.7
0.8
0.9
1.0
u
1
1E-12
1E-11
1E-10
1E-9
1E-8
1E-7
E
rr
or
 o
f u
1
t
(a)
(b)
Exact
Numerical
Figure 9 : For Example 3 with ε = 0.01 solved by the
shooting method: (a) comparing the numerical and exact
solutions, and (b) the numerical error.
In order to compare our numerical results with that of
the above cited papers, we fix ε = 0.01. The translation
constant c = 5 is also fixed.
We apply the shooting method in Section 4 and
the RK4 method to the resulting (y, t)-IVP. Through
some trials we have picked up the parameter r to
be r = 0.285266522. When compared the esti-
mated A = −1.8770432336 with the exact one u2(0) =
−1.8770432329 obtained from the closed-form solution:
u1(x) =
1
em2 −em1 [(e
m2 −1)em1x +(1−em1 )em2x], (99)
where
m1 =
−1+√1+4ε
2ε
, m2 =
−1−√1+4ε
2ε
, (100)
in the t-domain, the error is very small with 7× 10−10.
At the same time, the final value of u1 matches very well
with the exact value with an error 2.095×10−7.
By using the above estimated initial condition of
u2(0) = A and the given u1(0) = 1, we can integrate the
(y, t)-IVP by the RK4 method with a stepsize h = 0.005,
which is the same as that used by Varner and Choudhury
(1998). In Fig. 9(a) we plot the numerical and exact
solutions, which are almost coincident. Thus, we plot the
numerical errors in Fig. 9(b), which can be seen in the
order of 10−7. Obviously, our maximum error is much
smaller than that calculated by Varner and Choudhury
0.0 0.2 0.4 0.6 0.8 1.0
-1.0
-0.8
-0.6
-0.4
-0.2
0.0
E
rr
or
 
of
 
u
n
ifo
rm
 
ap
pr
ox
im
at
io
n
0.0 0.2 0.4 0.6 0.8 1.0
t
(a)
0E+0
1E-4
2E-4
3E-4
4E-4
D
iff
er
en
ce
 
of
 
u
1
(c)
0.0
0.2
0.4
0.6
0.8
u
1
(b)
Bender and Orszag (1978)
Present paper
Figure 10 : For Example 4 with ε= 0.001 solved by the
shooting method: (a) comparing the numerical solution
with the uniform approximation, (b) plotting the error of
uniform approximation, and (c) the difference of solu-
tions.
(1998), and that by Reddy and Chakravarthy (2004), of
which a smaller stepsize h = 0.001 was used.
7.4 Example 4
In order to further demonstrate the usefulness of the
present method, let us calculate the following example
of nonlinear singular perturbation problem from Bender
and Orszag (1978):
εu′′1 +2u′1 +eu1 = 0, (101)
u1(0) = 0, u1(1) = 0. (102)
This example has been also calculated by Reddy and
Chakravarthy (2004).
For the comparison purpose we write the uniform ap-
proximation provided by Bender and Orszag (1978) as
u1(x) = ln
2
1+x
−e−2x/ε ln2. (103)
194 Copyright c© 2006 Tech Science Press CMES, vol.15, no.3, pp.179-196, 2006
0.0 0.2 0.4 0.6 0.8
-1
0
1
2
3
4
u
1
1E-5
1E-4
1E-3
1E-2
1E-1
1E+0
D
iff
er
en
ce
s 
of
 
u
1
t
(a)
(b)
Kevorkian and Cole (1981)
Present paper
Wang (2004)
Figure 12 : For Example 5 with ε= 0.000001 solved by
the shooting method: (a) comparing the numerical solu-
tion with the uniform approximations, and (b) the differ-
ences of solutions.
and Cole (1981) when t < 0.4, i.e., x < 1.4798×10−3. It
indicates that the solution of Wang (2004) cannot match
the boundary layer solution.
The difference between our numerical result with the so-
lution in Eq. (107) is plotted in Fig. 12(b), of which the
difference is smaller than 2× 10−2. The difference be-
tween our numerical result with the solution in Eq. (108)
is also plotted in Fig. 12(b) with the dashed-dotted line,
of which it can be seen that the error of the solution of
Wang (2004) increases very fast when near the bound-
ary layer. Obviously, the solution of Wang (2004) needs
more higher-order terms in the expansions of Eqs. (108)-
(110) to match the boundary layer behavior.
This example shows again that the new method is also
applicable to the nonlinear singular perturbation problem
with high singularity.
8 Conclusions
For its very nature of singularity, in the open literature
there is no or rare report that one can directly use the
shooting method as a technique to solve the SPBVP. In
order to reduce the singularity this paper has employed
a coordinate transformation from the x-domain problem
to the t-domain problem. The relation between singular-
ity and stiffness is then demonstrated, of which the co-
ordinate transformation parameter λ plays a key role to
balance these two tendencies. For a stabilization of the
newly developed method we also introduced the new sys-
tems by a translation of the dependent variable. There-
fore, this paper has identified four systems, namely, the
(u,x)-BVP, the (u, t)-IVP, the (y,x)-BVP or IVP, and the
(y, t)-IVP.
In order to estimate the missing initial condition for the
singularly perturbed boundary value problems expressed
as the (y, t)-IVPs, we have employed the Lie group
method to derive algebraic equations. Therefore, we can
determine r very quickly only through a few trials. Five
numerical examples, three linear and two nonlinear, were
calculated by the new method. Compared with other nu-
merical methods, the new approach displays its high effi-
ciency and high accuracy. The numerical results have the
second-order accuracy even for the highly singular cases.
This paper also developed a finite difference method to-
gether with the nonstandard group preserving scheme to
calculate the SPBVPs. This method is suitable for the
calculation of SPBVPs without needing for many grid
points; however, its accuracy is of the first-order.
Although the Lie-group shooting method can estimate
the missing initial condition very accurately, and in prin-
ciple, the RK4 has the fourth-order accuracy, the accu-
racy of numerical solutions integrated by RK4 is reduced
since the resultant (y, t)-IVPs exhibit certain stiffness. To
remedy this defect, we may consider the implicit-form
RK4 stiff integrator in a forthcoming study. In view of
the results in [Liu (2006b)], the present approach may be
improved such that the iterative solution of the missing
initial condition can be avoided.
Here, we only considered the boundary layer located at
the left-hand side. In the future it is deserved to extend
the new method to more complex singularly perturbed
problems, of which there may appear two-layer, interior
layer or spike layer as that for the Carrier-Pearson
problem (Carrier and Pearson, 1991).
Acknowledgement: The author would like to ac-
knowledge the research sponsor by the National Science
Council of Taiwan under the grant NSC 95-2221-E-019-
002.
196 Copyright c© 2006 Tech Science Press CMES, vol.15, no.3, pp.179-196, 2006
point boundary value problems. Appl. Math. Comput.,
vol. 155, pp. 95-110.
Roberts, S. M. (1982): A boundary-value technique for
singular perturbation problems. J. Math. Anal. Appl.,
vol. 87, pp. 489-503.
Roos, H. G.; Stynes, M.; Tobiska, L. (1996): Numeri-
cal Methods for Singularly Perturbed Differential Equa-
tions. Spring-Verlag, Berlin.
Shampine, L. F.; Gear, C. W. (1979): A user’s view of
solving stiff ordinary differential equations. SIAM Rev.,
vol. 21, pp. 1-17.
Varner, T. N.; Choudhury, S. R. (1998): Non-standard
difference schemes for singular perturbation problems
revisited. Appl. Math. Comput., vol. 92, pp. 101-123.
Wang, L. (2004): A novel method for a class of nonlin-
ear singular perturbation problems. Appl. Math. Com-
put., vol. 156, pp. 847-856.
86 Copyright © 2010 Tech Science Press CMES, vol.56, no.1, pp.85-112, 2010
that q(x,λ )> 0 can be arbitrarily nonlinear function of x and λ . In the latter sense,
Eqs. (1)-(3) constitute a nonlinear Sturm-Liouville problem. When the interval is
not in the range of x ∈ [0,1] we can easily transform it into that interval by scaling
the variable x.
The Sturm-Liouville problem has been of considerable physical interest and is
rather important in many fields. In most cases, it is not possible to obtain all the
eigenvalues of Sturm-Liouville problem analytically. For the special case of prob-
lem (1)-(3) with q(x,λ ) = λq1(x)+ q2(x) and a1, a2, b1 and b2 being constants,
there are various numerical methods to approximate it. Pryce (1993) has provided
a comprehensive review of the mathematical background of Sturm-Liouville prob-
lems and their numerical solutions, as well as a detailed discussion of applications.
He summarized examples of Sturm-Liouville problems that have been considered
by numerous authors.
There is a continuous interest in the numerical solution of Sturm-Liouville prob-
lems and associated Schro¨dinger equations with the aim to improve convergence
rates and ease of numerical implementations of different algorithms. In order to
obtain more efficient numerical results, several numerical methods have been devel-
oped in the past many years, e.g., Andrew (1994, 2000a, 2000b), Andrew and Paine
(1985, 1986), Celik (2005a, 2005b), Celik and Gokmen (2005), Condon (1999),
Ghelardoni (1997), Ghelardoni, Gheri and Marletta (2001, 2006), Vanden Berghe
and De Meyer (1991, 1995, 2007), and Yu¨cel (2006).
Liu (2006a, 2006b, 2006c) has expanded the group-preserving scheme (GPS) de-
veloped by Liu (2001) for ODEs to solve the nonlinear boundary value problems
(BVPs), and the numerical results reveal that the Lie-group shooting method is
a rather promising method to effectively solve the two-point BVPs. In the con-
struction of the Lie-group method for the calculations of BVPs, Liu (2006a) has
introduced the ideas of one-step GPS by utilizing the closure property of the Lie
group and a universal mapping between two points on the cone, and hence, the new
shooting method has been named the Lie-group shooting method (LGSM). At there
a very important Lie-group shooting equation has been established.
Recently, Liu (2008a) could solve an inverse Sturm-Liouville problem by using a
Lie group method to find the potential function q(x) with high accuracy for the
classical case. Moreover, the method LGSM has been modified by Liu (2008b) for
the Sturm-Liouville problem, which is very effective to calculate all the eigenvalues
for the classical Sturm-Liouville problems. Some applications of the LGSM can be
found in Chang, Liu and Chang (2007, 2009), Liu (2008c, 2008d, 2008e, 2008f,
2008g, 2008h, 2008i), Chang, Chang and Liu (2008), Liu and Chang (2008), Liu,
Chang and Chang (2008), Liu (2009), and Yeih and Liu (2009).
88 Copyright © 2010 Tech Science Press CMES, vol.56, no.1, pp.85-112, 2010
Inserting Eq. (1) for w′′ into the above equation, leads to
y′ = {b1−a1− [b2x+a2(1− x)]q}w+[b2−a2+b1x+a1(1− x)]w′+1−2x. (8)
From Eqs. (4) and (8) we can solve w and w′ in terms of y and y′ as follows:
w=
1
D1
[B2(y− x+ x2− c)−A2(y′+2x−1)], (9)
w′ =
1
D1
[A1(y′+2x−1)−B1(y− x+ x2− c)], (10)
where
A1(x,λ ) := a1+(b1−a1)x,
A2(x,λ ) := a2+(b2−a2)x,
B1(x,λ ) := b1−a1−qA2,
B2(x,λ ) := b2−a2+A1,
D1(x,λ ) := A1B2−A2B1 = A21+qA22+a1b2−a2b1. (11)
The term D1 can be guaranteed to be positive. If a1b2−a2b1 < 0, we can multiply
Eq. (2) or Eq. (3) by−1, which does not change the boundary conditions, such that
−[a1b2−a2b1]> 0, and hence, D1 > 0.
Further taking the derivative of Eq. (10) with respect to x we have
w′′ =
1
D1
[A1(y′′+2)+(b1−a1)(y′+2x−1)−B3(y− x+ x2− c)−B1(y′+2x−1)]
− D2
D21
[A1(y′+2x−1)−B1(y− x+ x2− c)], (12)
where
D2(x,λ ) :=
∂D1
∂x
= 2A1(b1−a1)+2qA2(b2−a2)+qxA22,
B3(x,λ ) :=
∂B1
∂x
=−qxA2− (b2−a2)q, (13)
with qx denoting ∂q(x,λ )/∂x.
From Eqs. (1), (9) and (12) it follows that
y′′ =
D2
D1
(y′+2x−1)− 1
A1
[
B1D2
D1
+qB2−B3
]
(y− x+ x2− c)−2, (14)
which is just our desired form in Eq. (5).
90 Copyright © 2010 Tech Science Press CMES, vol.56, no.1, pp.85-112, 2010
3 One-step GPS
3.1 The GPS
Let us write Eqs. (18) and (19) in a vector form:
u′ = f(x,u,λ ), (22)
where
u :=
[
u1
u2
]
, f :=
[
u2
f (x,u1,u2,λ )
]
. (23)
Liu (2001) has embedded Eq. (22) into an augmented system:
X′ :=
d
dx
[
u
‖u‖
]
=
 02×2 f(x,u,λ )‖u‖
fT(x,u,λ )
‖u‖ 0
[ u‖u‖
]
:= AX, (24)
where A is an element of the Lie algebra so(2,1) satisfying
ATg+gA = 0 (25)
with
g =
[
I2 02×1
01×2 −1
]
(26)
a Minkowski metric. Here, I2 is an identity matrix, and the superscript T stands for
the transpose.
The augmented vector X satisfies the cone condition:
XTgX = u ·u−‖u‖2 = 0. (27)
To preserve it, Liu (2001) has developed a group-preserving scheme (GPS):
Xk+1 = G(k)Xk, (28)
where Xk denotes the numerical value of X at the discrete xk, and G(k) ∈ SOo(2,1)
satisfies
GTgG = g, (29)
det G = 1, (30)
G00 > 0, (31)
92 Copyright © 2010 Tech Science Press CMES, vol.56, no.1, pp.85-112, 2010
Here, we use the initial u0 and the final u f through a suitable weighting factor r to
calculate G, where 0< r< 1 is a parameter and xˆ= r. The above method employed
a generalized mid-point rule to calculate G, and the resultant is a single-parameter
Lie group element G(r).
3.3 A Lie group mapping between two points on the cone
Let us define a new vector
F :=
fˆ
‖uˆ‖ , (39)
such that Eqs. (34), (37) and (38) can also be expressed as
G =
 I2+ a−1‖F‖2 FFT bF‖F‖
bFT
‖F‖ a
 , (40)
a= cosh(‖F‖), (41)
b= sinh(‖F‖). (42)
From Eqs. (33) and (40) it follows that
u f = u0+ηF, (43)
‖u f ‖= a‖u0‖+bF ·u0‖F‖ , (44)
where
η :=
(a−1)F ·u0+b‖u0‖‖F‖
‖F‖2 . (45)
Substituting
F =
1
η
(u f −u0) (46)
into Eq. (44) we obtain
‖u f ‖
‖u0‖ = a+b
(u f −u0) ·u0
‖u f −u0‖‖u0‖ , (47)
94 Copyright © 2010 Tech Science Press CMES, vol.56, no.1, pp.85-112, 2010
4 The Lie-group shooting method
The generalized Sturm-Liouville problem considered in Section 1 requires both the
information at the initial point x= 0 and at the terminal point x= 1. However, the
usual stepping scheme requires a complete information at the starting point x = 0.
Some effort is then required to reconcile the stepping scheme for the integration of
Sturm-Liouville problem presented by Eqs. (5) and (6).
From Eqs. (18)-(21) it follows that
u′1 = u2, (58)
u′2 = f (x,u1,u2,λ ), (59)
u1(0) = c, u1(1) = c, (60)
u2(0) = A, u2(1) = B, (61)
where A and B are two supplemented unknowns, and c> 0 is given below.
From Eqs. (46), (60) and (61) it follows that
F :=
[
F1
F2
]
=
1
η
[
0
B−A
]
. (62)
By inserting Eq. (23) for u into Eqs. (56), (55) and (50) we can obtain
η =
√
(A−B)2
lnZ
, (63)
Z =
√
c2+B2√
c2+A2
+
√
c2+B2
c2+A2 −1+ cos2 θ
1+ cosθ
, (64)
cosθ =
A(B−A)√
(A−B)2√c2+A2 . (65)
When compare Eq. (62) with Eq. (39), and with the aid of Eqs. (35), (36) and
(58)-(61) we obtain
rA+(1− r)B= 0, (66)
A−B+ η
ξ
fˆ = 0, (67)
where
fˆ := f (r,c,rA+(1− r)B,λ ) = f (r,c,0,λ ), (68)
ξ :=
√
c2+[rA+(1− r)B]2 = c, (69)
96 Copyright © 2010 Tech Science Press CMES, vol.56, no.1, pp.85-112, 2010
and substituting Eq. (72) for Z into Eq. (74) we obtain
√
c2+B2+
√
B2√
c2+A2−
√
A2
= f2. (76)
Eq. (76) can be written as
f2A−B= f2
√
c2+A2−
√
c2+B2 (77)
by using A> 0 and B< 0. Squaring the above equation and cancelling the common
terms we can rearrange it to
2 f2
√
c2+B2
√
c2+A2 = (1+ f 22 )c
2+2 f2AB. (78)
Squaring again and cancelling the common term and factor we can get
4 f 22 (A
2+B2)−4 f2(1+ f 22 )AB= (1− f 22 )2c2. (79)
Inserting B= rA/(r−1) and through some algebraic manipulations we eventually
obtain:
4 f2
(r−1)2 [ f2− (1− f2)
2r2+(1− f2)2r]A2 = (1− f 22 )2c2. (80)
If the following condition holds
f3(r) := f2− (1− f2)2r2+(1− f2)2r > 0, (81)
then A has a positive solution:
A=
√
(r−1)2(1− f 22 )2c2
4 f2 f3
. (82)
6 Computing eigenvalues
In the previous section we have derived a closed-form solution to calculate the slope
A for each r in its admissible range. If A is available, then we can apply the fourth-
order Runge-Kutta method (RK4) to integrate Eqs. (18)-(21). Up to this point we
should note that the Lie-group shooting method is an exact technique without mak-
ing any assumption of the approximation in the derivations of all required formulae.
In principle, if there exists one solution w of Eqs. (1) and (2), there are many solu-
tions of the type αw, α ∈R. Assume that one of these solutions has a slope w′(0) 6=
0 at the left-end, then there are many different solutions with slopes αw′(0), α ∈R.
98 Copyright © 2010 Tech Science Press CMES, vol.56, no.1, pp.85-112, 2010
If u1 and u2 are available we can calculate the eigenfunction w(x) and its first two
derivatives by
w=
1
D1
[B2(u1− x+ x2− c)−A2(u2+2x−1)], (86)
w′ =
1
D1
[A1(u2+2x−1)−B1(u1− x+ x2− c)], (87)
w′′ =
1
D1
[A1{ f (x,u1,u2,λ )+ x}+(b1−a1)(u2+2x−1)−B3(u1− x+ x2− c)
−B1(u2+2x−1)]− D2D21
[A1(u2+2x−1)−B1(u1− x+ x2− c)]. (88)
In order to check the accuracy of the obtained eigenvalue and eigenfunction, we
use the following three criteria to investigate the performance of the LGSM:
Equation Error := |w′′(x)+qw(x)|, (89)
Left Boundary Error := |a1w(0)+a2w′(0)|, (90)
Right Boundary Error := |b1w(1)+b2w′(1)|. (91)
Below we will use the LGSM to find eigenvalues and corresponding eigenfunctions
for some examples appeared in the literature.
8 Numerical examples
8.1 Example 1
For a first and simple test example inspired by Aliyev and Kerimov (2008) we
consider the eigen-parameter dependence boundary condition of a Sturm-Liouville
eigenvalues problem with a1 = 0, a2 = 1, b1 = λ −λ 2/pi2, b2 = 1 and q= λ :
−w′′(x) = λw(x), 0 < x< 1, (92)
w′(0) = 0,
(
λ − λ
2
pi2
)
w(1)+w′(1) = 0. (93)
We apply the Lie-group shooting method (LGSM) in Section 6 to calculate the
eigenvalues in a range of 0 < λ < 25. From Fig. 1(a) it can be seen that the curve
of y(1)− c is intersected with the zero line at five points. In this calculation the
stepsize used in the RK4 is ∆x= 0.001. We will fix this stepsize for all later calcu-
lations by using the RK4.
100 Copyright © 2010 Tech Science Press CMES, vol.56, no.1, pp.85-112, 2010
tional from Eq. (94).
In order check our algorithm for the generation of the second exceptional point, we
use the following two criteria to investigate the accuracy of the LGSM:
Equation Error := |w′′(x)+λw(x)|, (95)
Right Boundary Error :=
∣∣∣∣(λ − λ 2pi2
)
w(1)+w′(1)
∣∣∣∣ . (96)
When we found the eigenvalue λ = 11.6924379 by the LGSM, the corresponding
eigenfunction w(x) can be calculated by Eq. (86), and the first two derivatives by
Eqs. (87) and (88).
We find that the Right Boundary Error is very small in the order of 4.7×10−9, and
the Equation Error is plotted in Fig. 2. Very accurately, the error is in the order of
10−17.
 
 
 
 
 
 
 
 
0.0 0.2 0.4 0.6 0.8 1.0
x
0E+0
1E-17
2E-17
3E-17
4E-17
Eq
ua
tio
n 
Er
ro
r
 
 
Figure 2: Showing the Equation Error for the third eigenvalue of Example 1. 
 
 
 
 
 
 
Figure 2: Showing the Equation Error for the fourth eigenvalue of Example 1.
102 Copyright © 2010 Tech Science Press CMES, vol.56, no.1, pp.85-112, 2010
 
0.0 0.2 0.4 0.6 0.8 1.0
x
1E-24
1E-23
1E-22
1E-21
1E-20
1E-19
1E-18
1E-17
E
q
u
at
io
n
 E
rr
or
-0.002
0.000
0.002
w
( x
)
0.0 0.2 0.4 0.6 0.8 1.0
x
(a)
(b)
-1E-11
0E+0
1E-11
w
( x
)
(c)
 
 
Figure 4: For Example 2: (a) plotting the Equation Errors, and the eigenfunctions 
corresponding to (b) the first eigenvalue, and (c) the second eigenvalue. 
 
 
Figure 4: For Example 2: (a) plotting the Equation Errors, and the eigenfunctions
corresponding to (b) the first eigenvalue, and (c) the second eigenvalue.
Fig. 4(b). The second eigenvalue is λ = 15.20906425. The Equation Error is plot-
ted in Fig. 4(a) by the dashed line, which is very accurate with the error in the order
of 10−20, and the corresponding eigenfunction w(x) is also plotted in Fig. 4(c).
In order to pick up the eigenvalues more precisely, we can plot the eigenvalue curve
of [y(1)−c]/|y(1)−c| in a finer range, as shown in Fig. 5(a) in the range of [38,45].
It can be seen that the distribution of eigenvalues is very complex. When we found
one eigenvalue λ = 44.70035341243 by the LGSM, the Left Boundary Error is
zero, and the Right Boundary Error is in the order of 3.3× 10−10. The Equation
Error is plotted in Fig. 5(b), which is very accurate with the error in the order of
10−12. The corresponding eigenfunction w(x) is plotted in Fig. 5(c), which is very
different from the one plotted in Fig. 4(b).
104 Copyright © 2010 Tech Science Press CMES, vol.56, no.1, pp.85-112, 2010
8.3 Example 3
The following example is taken from Chanane (2005) and Reutskiy (2008):
w′′(x)+(λ − ex)w(x) = 0, 0 < x< 1, (99)
w(0) = 0, −
√
λ sin
√
λw(1)+ cos
√
λw′(1) = 0. (100)
So we have a1 = 1, a2 = 0, b1 =−
√
λ sin
√
λ , b2 = cos
√
λ , and q= λ − ex.
When we apply the LGSM to calculate the eigenvalues in a range of 0 < λ < 80,
we can see that the curve of [y(1)− c]/|y(1)− c| is intersected with the zero line
at many points as shown in Fig. 6(a). But, in Table 3.4 of the paper by Chanane
(2005), and in Table 5 of the paper by Reutskiy (2008) only six eigenvalues are
reported.
For the eigenvalue λ = 0.519996736312803 obtained by the LGSM, the Right
Boundary Error has error in the order of 1.4× 10−12, and the Equation Error is
plotted in Fig. 6(b), which is very accurate with the error in the order of 10−13. The
corresponding eigenfunction w(x) is plotted in Fig. 6(c). This eigenfunction has a
sharp variation near the right-end, and is almost zero in the range of [0,0.948].
The above two papers are all given the first eigenvalue near to 0.92906. However,
we find that it is the second eigenvalue with λ2 = 0.92906202858. We identify that
the Right Boundary Error is in the order of 1.2×10−12, and the Equation Error as
plotted in Fig. 6(b) by the dashed line is in the order of 10−16. The corresponding
eigenfunction w(x) is plotted in Fig. 6(c) by the dashed line, which is very different
from the the first one. As compared with the result obtained by Chanane (2005),
the accuracy in the finding of eigenvalue is raised from 6.75×10−9 to 10−12.
8.4 Example 4
The following example is taken from Reutskiy (2008, 2010):
w′′(x)+
w(x)
(λ + x2)2
= 0, 0 < x< 1, (101)
w(0) = w(1) = 0. (102)
Here q= 1/(λ + x2)2 is a nonlinear function of the eigen-parameter λ .
When we apply the LGSM to calculate the eigenvalues in a range of 0 < λ < 0.2,
we can see that the curve of [y(1)− c]/|y(1)− c| is intersected with the zero line at
ten points as shown in Fig. 7(a), of which the number of eigenvalues is coincident
with that obtained by Reutskiy (2008, 2010).
106 Copyright © 2010 Tech Science Press CMES, vol.56, no.1, pp.85-112, 2010
 
 
0.000 0.040 0.080 0.120 0.160 0.200λ
-1.0
0.0
1.0
y(1)-c
y(1)-c
-0.001
0.000
0.001
0.002
w(x)
0.0 0.2 0.4 0.6 0.8 1.0
x
(a)
(b)
-0.0002
-0.0001
0.0000
0.0001
0.0002
0.0003
0.0004
w(x)
(c)
First eigenfunction
Fifth eigenfunction
 
 
Figure 7: For Example 4: (a) displaying the eigenvalue curve, (b) plotting the fifth 
eigenfunction, and (c) plotting the first eigenfunction. 
 
Figure 7: For Example 4: (a) displaying the eigenvalue curve, (b) plotting the fifth
eigenfunction, and (c) plotting the first eigenfunction.
8.5 Example 5
The following example is taken from Reutskiy (2010):
w′′(x)+
w(x)
(λ + x)2
= 0, 0 < x< 1, (103)
w(0) = w(1) = 0. (104)
108 Copyright © 2010 Tech Science Press CMES, vol.56, no.1, pp.85-112, 2010
Table 1: Comparing the eigenvalues for Example 5 with those of Reutskiy (2010)
n Reutskiy Present Exact
-1 −1.0272981 −1.027305717791 −1.027305717634675
1 0.02729809 0.02730571779926 0.027305717634675
0.03, we can see that the curve of [y(1)− c]/|y(1)− c| is intersected with the zero
line at many points as shown in Fig. 8(a).
For the eigenvalues λ = −1.027305717791 and λ = 0.02730571779926 we plot
the corresponding eigenfunctions in Figs. 8(b) and 8(c), respectively. The eigen-
values we calculate have the accuracy in the order of 10−10, which are better than
those calculated by Reutskiy (2010).
9 Conclusions
The key point to succeed the Lie-group shooting method (LGSM) for the gen-
eralized Sturm-Liouville problem is the variable transformation given in Eq. (4),
which is a novel transformation, including both w and w′ on the right-hand side.
The LGSM developed here can easily calculate the eigenvalues and eigenfunctions
of generalized Sturm-Liouville problems, which is due to the relations y(0) = c(λ )
and y′(0) = A(λ ) given in Eqs. (85) and (83). Five numerical examples with eigen-
parameter dependence boundary conditions and nonlinear potential functions were
given to confirm the efficiency and accuracy of the present Lie-group shooting ap-
proach, which is much easy to implement with low computational cost than the
numerical methods appeared in other literature. Moreover, the accuracy assessed
by the Equation Error and Boundary Errors are improved significiantly. Because
our method is very effective, many eigenvalues, which were not found previously
by other methods, could be delicately detected by the LGSM in the present paper.
Acknowledgement: Taiwan’s National Science Council Project NSC-97-2221-
E-002-264-MY3 granted to the author is highly appreciated.
References
Aliyev, Y. N.; Kerimov, N. (2008): The basis property of Sturm-Liouville prob-
lems with boundary conditions depending quadratically on the eigenparameter.
Arabian J. Sci. Eng., vol. 33, pp. 123-136.
110 Copyright © 2010 Tech Science Press CMES, vol.56, no.1, pp.85-112, 2010
boundary regularization of backward heat conduction problems. Int. J. Heat Mass
Transfer, vol. 50, pp. 2325-2332.
Chang, C. W.; Liu, C.-S.; Chang, J. R. (2009): A new shooting method for quasi-
boundary regularization of multi-dimensional backward heat conduction problems.
J. Chinese Inst. Engineers, vol. 32, pp. 307-318.
Condon, D. J. (1999): Corrected finite difference eigenvalues of periodic Sturm-
Liouville problems. Appl. Numer. Math., vol. 30, pp. 393-401.
Ghelardoni, P. (1997): Approximations of Sturm-Liouville eigenvalues using bound-
ary value methods. Appl. Numer. Math., vol. 23, pp. 311-325.
Ghelardoni, P.; Gheri, G. (2001): Improved shooting technique for numerical
computations of eigenvalues in Sturm-Liouville problems. Nonlinear Analysis, vol.
47, pp. 885-896.
Ghelardoni, P.; Gheri, G.; Marletta, M. (2001): Spectral corrections for Sturm-
Liouville problems. J. Comp. Appl. Math., vol. 132, pp. 443-459.
Ghelardoni, P.; Gheri, G.; Marletta, M. (2006): A polynomial approach to the
spectral corrections for Sturm-Liouville problems. J. Comp. Appl. Math., vol. 185,
pp. 360-376.
Lee, H. C.; Liu, C.-S. (2009): The fourth-order group preserving methods for
the integrations of ordinary differential equations. CMES: Computer Modeling in
Engineering & Sciences, vol. 41, pp. 1-26.
Liu, C.-S. (2001): Cone of non-linear dynamical system and group preserving
schemes. Int. J. Non-Linear Mech., vol. 36, pp. 1047-1068.
Liu, C.-S. (2005): Nonstandard group-preserving schemes for very stiff ordinary
differential equations. CMES: Computer Modeling in Engineering & Sciences, vol.
9, pp. 255-272.
Liu, C.-S. (2006a): The Lie-group shooting method for nonlinear two-point bound-
ary value problems exhibiting multiple solutions. CMES: Computer Modeling in
Engineering & Sciences, vol. 13, pp. 149-163.
Liu, C.-S. (2006b): Efficient shooting methods for the second order ordinary dif-
ferential equations. CMES: Computer Modeling in Engineering & Sciences, vol.
15, pp. 69-86.
Liu, C.-S. (2006c): The Lie-group shooting method for singularly perturbed two-
point boundary value problems. CMES: Computer Modeling in Engineering &
Sciences, vol. 15, pp. 179-196.
Liu, C.-S. (2006d): Preserving constraints of differential equations by numerical
methods based on integrating factors. CMES: Computer Modeling in Engineering
& Sciences, vol. 12, pp. 83-107.
112 Copyright © 2010 Tech Science Press CMES, vol.56, no.1, pp.85-112, 2010
University Press, Oxford.
Reutskiy, S. Y. (2008): A meshless method for nonlinear, singular and general-
ized Sturm-Liouville problems. CMES: Computer Modeling in Engineering & Sci-
ences, vol. 34, pp. 227-252.
Reutskiy, S. Y. (2010): The method of external excitation for solving generalized
Sturm-Liouville problems. J. Comp. Appl. Math., vol. 233, pp. 2374-2389.
Vanden Berghe, G.; De Meyer, H. (1991): Accurate computation of higher Sturm-
Liouville eigenvalues. Numer. Math., vol. 59, pp. 243-254.
Vanden Berghe, G.; Van Daele, M.; De Meyer, H. (1995): A modified difference
scheme for periodic and semiperiodic Sturm-Liouville problems. Appl. Numer.
Math., vol. 18, pp. 69-78.
Vanden Berghe, G.; Van Daele, M. (2007): Exponentially-fitted Numerov meth-
ods. J. Comp. Appl.Math., vol. 200, pp. 140-153.
Yeih, W.; Liu, C.-S. (2009): A three-point BVP of time-dependent inverse heat
source problems solving by a TSLGSM. CMES: Computer Modeling in Engineer-
ing & Sciences, vol. 46, pp. 107-127.
Yu¨cel, U. (2006): Approximations of Sturm-Liouville eigenvalues using differen-
tial quadrature (DQ) method. J. Comp. Appl. Math., vol. 192, pp. 310-319.
providing a better algorithm that retains the orbit generated from numerical solution on the
manifold which associated with the Lie-group [1]. The retention of Lie-group structure under
discretization is vital in the recovery of qualitatively correct behavior in the minimization of
numerical error [2].
In this paper we will propose a novel Lie-group shooting method for the computation of
εu′′(x) + h1(x, u)u′(x) + h2(x, u) = 0, 0 < x < 1, (1)
u(0) = α, u(1) = β, (2)
where ε is a small parameter, h1(x, u) and h2(x, u) are given functions, α and β are given
constants, and [0, 1] is a normalized spatial interval of our problem. The prime denotes
the differential with respect to x. This problem is a second-order nonlinear SPBVP. For the
problems which are not defined in the above range, a suitable rescale of the spatial coordinate
may bring them into a problem defined in the range of [0, 1]. As a demonstration, by letting
z = 2x− 1 the above steady-state Burgers equation can be written as
εu′′(x)− 2u(x)u′(x) = 0, 0 < x < 1,
u(0) = 0, u(1) = −1,
where u(x) = w(2x− 1).
We can transform Eqs. (1) and (2) into a mathematically equivalent first-order system:
u′1 = u2, (3)
u′2 = −
1
ε
[h1(x, u1)u2 + h2(x, u1)], (4)
u1(0) = α, u1(1) = β. (5)
Eqs. (3)-(5) constitute an (u, x)-BVP, where u(x) = (u1(x), u2(x)) denotes the system de-
pendent variables in the x-domain.
For the singular perturbation problems there already had many asymptotic approxima-
tion methods, and the numerical methods based on these concepts to match the boundary
layer behavior were well developed, which are uniformly valid with respect to the perturba-
tion parameter [3]. As shown by Ou and Wong [4], the asymptotic behavior of Eq. (1) may
be quite complex when h2 includes a cubic term.
Besides the asymptotic approximation method, many computational methods have been
developed for solving the SPBVPs. For a detailed treatment of singular perturbation prob-
lems the reader may refer Bender and Orszag [5], Shampine and Gear [6], Nayfeh [7],
Kevorkian and Cole [8, 9], O’Malley [10], De Jager and Jiang [11], and Kadalbajoo and
Patidar [12].
The concept of replacing the SPBVP by an initial value problem (IVP) is presented
by Kadalbajoo and Reddy [13] for a particular type ODE. The original second-order ODE
is replaced by an asymptotically equivalent first-order ODEs system and is solved as an
IVP. Gasparo and Macconi [14, 15] have given an initial-value method for the second-order
SPBVPs with a boundary layer at one end. The idea is to replace the SPBVP by two
suitable IVPs, which are integrating on the two opposite directions, and the first ODE can
be solved only if the solution of the second one is known. Then, the initial-value technique
2
iterations to find the unknown initial condition. In the present paper we will develop a novel
Lie-group shooting method (LGSM) to solve the SPBVPs without needing of iterations.
This paper is arranged as follows. In Section 2 we introduce a coordinate transformation
to reduce the boundary singularity in a new coordinate system. In Section 3 we give a brief
sketch of the GPS for ODEs, explain the construction of one-step GPS by using the closure
property of the Lie-group, and realize it through a single-parameter Lie-group element in
terms of a parameter r and through a universal one-step Lie-group element. In Sections 4
and 5 we derive a new Lie-group shooting method to solve the nonlinear SPBVPs, where a
missing initial condition is derived in a closed-form in terms of r in a space of r ∈ [0, 1]. In
Section 6 we use some numerical examples to demonstrate the efficiency and accuracy of the
new method. Finally, we draw some conclusions in Section 7.
2. Coordinates transformation by a rescaling technique
For the SPBVPs, the choice of a suitable initial condition is difficult, because the search of
initial conditions by the conventional shooting method is blindly carried out in an indefinite
range. Thus, it is desired to develop a more effective method to search the initial condition.
When ε is small, Eq. (1) has a strong singularity in the boundary layer., within which the
solution has a sharp transition. In order to apply the shooting method to find the numerical
solution of Eq. (1) we may consider a scalar transformation of the x-coordinate by
x = 1− tanh[λ(1− t)]
tanhλ
, (6)
and its inverse is given by
t = 1− 1
λ
ln
1 + (1− x) tanhλ
1− (1− x) tanhλ, (7)
where λ is a suitably selected parameter to smear out the sharp transition in the boundary
layer. The transformation between x and t is one-to-one, onto, x(0) = 0 and x(1) = 1.
The above coordinates transformation technique has been used by Liu [32] to treat the
Burgers equation with a very large Reynolds number, which is a typical example of the sin-
gularly perturbed partial differential equations. The effect of the coordinates transformation
in Eq. (6) will be explained in Section 6.2 by a numerical example.
From Eqs. (1) and (7) it follows that
ε tanh2 λ
λ2(1− tanh2[λ(1− t)])2 u¨−
2ε tanh2 λ tanh[λ(1− t)]
λ(1− tanh2[λ(1− t)])2 u˙
+
tanhλ
λ(1− tanh2[λ(1− t)])h1(t, u)u˙+ h2(t, u) = 0, (8)
of which the boundary conditions in Eq. (2) remain unchanged. For saving notations we
use the shorthands of u(t) = u(x(t)), h1(t, u) = h1(x(t), u) and h2(t, u) = h2(x(t), u). A
superimposed dot denotes the differential with respect to t.
Upon letting
u1 = u+ (α− β)t+ c− α, (9)
4
Let us write Eqs. (14) and (15) in a vector form:
u˙ = f(t,u), (21)
where
u :=
[
u1
u2
]
, f :=
[
u2
f(t, u1, u2)
]
. (22)
Liu [26] has embedded Eq. (21) into an augmented system:
X˙ :=
d
dt
[
u
‖u‖
]
=
[
02×2
f(t,u)
‖u‖
fT(t,u)
‖u‖ 0
] [
u
‖u‖
]
:= AX, (23)
where A is an element of the Lie algebra so(2, 1) satisfying
ATg + gA = 0 (24)
with
g =
[
I2 02×1
01×2 −1
]
(25)
a Minkowski metric. Here, I2 is the identity matrix, and the superscript T stands for the
transpose.
The augmented variable X satisfies the cone condition:
XTgX = u · u− ‖u‖2 = 0. (26)
Accordingly, Liu [26] has developed a group-preserving scheme (GPS) given as follows:
Xk+1 = G(k)Xk, (27)
where Xk denotes the numerical value of X at the discrete time tk, and G(k) ∈ SOo(2, 1)
satisfies
GTgG = g, (28)
det G = 1, (29)
G00 > 0, (30)
where G00 is the 00th component of G.
3.2. Generalized mid-point rule
Applying scheme (27) to Eq. (23) starting from an initial condition X(0) = X0 we can
compute X(t) by GPS. Assuming that the stepsize used in the GPS is h = 1/K, we can
obtain the value X(1) = (uT(1), ‖u(1)‖)T by applying Eq. (27) step-by-step:
Xf = GK(h) · · ·G1(h)X0. (31)
Because each Gi, i = 1, . . . , K, is an element of the Lie-group SOo(2, 1), and by the closure
property of the Lie-group, GK(h) · · ·G1(h) is also a Lie-group element denoted byG. Hence,
we have
Xf = GX0. (32)
6
Eq. (42) is written to be
F =
1
η
(uf − u0). (45)
Substituting it into Eq. (43) we can obtain
‖uf‖
‖u0‖ = a+ b
(uf − u0) · u0
‖uf − u0‖‖u0‖ , (46)
where
a = cosh
(‖uf − u0‖
η
)
, (47)
b = sinh
(‖uf − u0‖
η
)
(48)
are obtained from Eqs. (40) and (41) by inserting Eq. (45) for F.
Let
cos θ :=
[uf − u0] · u0
‖uf − u0‖‖u0‖ , (49)
S := ‖uf − u0‖, (50)
and from Eqs. (46)-(48) it follows that
‖uf‖
‖u0‖ = cosh
(
S
η
)
+ cos θ sinh
(
S
η
)
. (51)
By defining
Z := exp
(
S
η
)
, (52)
from Eq. (51) we obtain a quadratic equation for Z:
(1 + cos θ)Z2 − 2‖uf‖‖u0‖ Z + 1− cos θ = 0, (53)
and hence,
Z =
‖uf‖
‖u0‖ +
√(
‖uf‖
‖u0‖
)2
+ cos2 θ − 1
1 + cos θ
. (54)
Then from Eqs. (52) and (50) we can obtain
η =
‖uf − u0‖
lnZ
. (55)
Therefore, there exists a Lie-group element G ∈ SOo(2, 1) mapping (u0, ‖u0‖) onto
(uf , ‖uf‖), which is given by [
uf
‖uf‖
]
= G
[
u0
‖u0‖
]
, (56)
8
where
fˆ := f(r, rc+ (1− r)c, rA+ (1− r)B), (67)
ξ :=
√
c2 + [rA+ (1− r)B]2. (68)
The governing equations (65) and (66) are obtained by equating the two F’s in Eqs. (38)
and (45), which means that the two Lie-group elements defined by Eqs. (33) and (39) are
equal. Therefore, we may call the present shooting technique a Lie-group shooting method.
5. The solution of A
Remarkably, Eqs. (65) and (66) can be used to solve A exactly. From Eqs. (65) and (68)
it follows that
ξ = c, (69)
which is a positive constant. This equation is very important to simplify our following works
to derive a closed-form solution of A in terms of r. This is the reason that we replace the
originally un-equal boundary conditions in Eq. (2) by an equal value boundary conditions
in Eq. (11), which makes rA + (1 − r)B = 0 as shown in Eq. (65), and hence ξ defined by
Eq. (68) becomes a constant as shown in Eq. (69).
Hence, from Eq. (66) with the aid of Eqs. (62), (65), (67) and (69) we can obtain a single
algebraic equation for solving the unknown variable A:
Ac+ η0fˆ = 0, (70)
where
fˆ = f(r, c, 0), (71)
Z =
√
c2 + B2 +
√
B2√
c2 + A2 −
√
A2
, (72)
η0 =
√
A2
lnZ
, (73)
and B = rA/(r − 1) has a different sign with A.
Eq. (70) can be used to solve A for a given r. If A is available, we can return to Eqs. (14)-
(17) and integrate them by a suitable IVP solver.
5.1. The case of A > 0
Here we first consider the case of A > 0. Inserting Eq. (73) for η0 into Eq. (70) we obtain
lnZ = − fˆ
c
. (74)
Defining
g1 := exp
(
− fˆ
c
)
, (75)
10
By using A < 0 and B > 0, Eq. (85) can be written as
g2A+B =
√
c2 + B2 − g2
√
c2 + A2. (86)
Squaring the above equation and cancelling out the common terms we can rearrange it to
2g2
√
c2 + B2
√
c2 + A2 = (1 + g22)c
2 − 2g2AB. (87)
Squaring again and cancelling out the common term and factor, yields
4g22(A
2 + B2) + 4g2(1 + g
2
2)AB = (1− g22)2c2. (88)
Inserting B = rA/(r − 1) and through some algebraic manipulations we can obtain
4g2
(r − 1)2 [g2 − (1 + g2)
2r + (1 + g2)
2r2]A2 = (1− g22)2c2. (89)
If the following condition holds
D2(r) := g2 − (1 + g2)2r + (1 + g2)2r2 > 0, (90)
then A has a negative solution:
A = −
√
(r − 1)2(1− g22)2c2
4D2g2
. (91)
5.3. Adjusting the slope A
In the previous two sections we have derived two closed-form formulae to calculate the
slope A for each r in its admissible range. If A is available, we can apply the RK4 to integrate
the (u, t)-IVP in Eqs. (14)-(17). Now, in order to determine a correct r and thus a correct
A, we need a numerical integration of the nonlinear ODEs in Eqs. (14)-(17) via a shooting
technique.
For a trial r in the admissible range, we can calculate A and then numerically integrate
Eqs. (14)-(17) from t = 0 to t = 1, and compare the end value of ur1(1) with the exact one
u1(1) = c. If |ur1(1)− c| is smaller than a given error tolerance ǫ, then the process of finding
solution is finished. Otherwise, we need to calculate the end values of u1(1) corresponding
to different r1 < r and r2 > r, which are denoted by u
r1
1 (1) and u
r2
1 (1), respectively. If
[ur11 (1) − c][ur1(1) − c] < 0, then there exists one root between r1 and r; otherwise, the root
is located between (r, r2). We can apply the half-interval method to find a suitable r, which
requires us to calculate Eqs. (14)-(17) at each of the calculation of ur1(1)− c, until |ur1(1)− c|
is small enough to satisfy a criterion of |ur1(1)− c| ≤ ǫ.
6. Numerical examples
To find A and B, we have derived Eqs. (65) and (66) in Section 4, which were used by
Liu [29] to solve the SPBVPs, where some iterations are required. Here, we have further
derived two closed-form formulae (82) and (91) to calculate A in terms of r, of which no
12
This example is calculated by the newly developed LGSM. We are going to search a
missing initial condition u2(0) = A, such that in the numerical solutions of Eqs. (14)-(17),
u1(1) can match very well to the exact right-boundary condition u1(1) = 1.
We consider ε = 0.001. The coordinate tansformation parameter is taken to be λ = 3.
The RK4 with a stepsize h = 0.001 was used to integrate the resulting (u, t)-IVP of Eqs. (14)-
(17), where c = 30 was selected.
For this problem we take r = 0.01142777064720631. The final value of u matches very
well to the exact right-boundary value with an error 3.788 × 10−11. From Fig. 3(a) it can
be seen that in the plane (x, u) the solution rapidly increases from 0 to 1. In order to make
the comparison clearer we plot both the numerical and exact solutions in the plane (t, u) as
shown in Fig. 3(b). From Fig. 3(c) it can be seen that the numerical error of u is in the
order of 10−9, where the maximal error is 1.647× 10−9.
By comparing Fig. 3(a) and Fig. 3(b) it can be seen that by the coordinates transforma-
tion in Eq. (6), the originally very steep transition of the solution u in the x-domain as shown
in Fig. 3(a) can be modified and replaced by a more smooth solution of u in the t-domain as
shown in Fig. 3(b). From a numerical point of view, when the time-integrating increments
are given uniformly in the t-domain, by using the coordinates transformation in Eq. (6) we
can place much integrating points in the region where the solution has a steep transition in
the x-domain, and place less integrating points in other portion.
6.3. Example 3
We calculate the third example given by Eq. (93) but adding a nonhomogeneous term
on the right-hand side:
εu′′ + u′ = 1 + 2x, (95)
u(0) = 0, u(1) = 1. (96)
The exact solution is given by
u(x) =
(2ε− 1)[1− exp(−x/ε)]
1− exp(−1/ε) + x(x+ 1− 2ε). (97)
In order to compare our numerical result with that calculated by Varner and Choudhury
[33], and Ilicasu and Schultz [34] with the high-order finite difference methods, we fix ε =
0.01. Because of ε = 0.01, this system is not too singular, and we may directly apply the
LGSM to the resulting (u, x)-IVP. By using the estimated initial condition of u2(0) = A and
the given u1(0) = c, where c = 30 was used, we have integrated the (u, x)-IVP by the RK4
method with ∆x = 0.0005, which is the same as that used by Varner and Choudhury [33],
and Ilicasu and Schultz [34]. In Fig. 4(a) we plot the numerical and exact solutions, which
are almost coincident. Thus, we plot the numerical errors in Fig. 4(b), which are obtained
by taking the absolute of the differences between numerical and exact solutions. Obviously,
the present errors are much smaller than that of Varner and Choudhury [33].
Ilicasu and Schultz [34] have calculated this case by using a high-order finite-difference
method. Our maximal error 1.96× 10−8 is slightly larger than that of 0.63× 10−8 obtained
by Ilicasu and Schultz [34].
14
When the singular parameter is taken to be ε = 0.001, we apply the LGSM and the RK4
method to the resulting (u, t)-IVP under λ = 3 and c = 1. Through some calculations we
select r = 0.177331542968750. By using a stepsize h = 0.0001 the numerical result and the
solution in Eq. (104) are compared in Fig. 6(a). We insert Eq. (104) into Eq. (102) to obtain
εu′′ + 2u′ + eu =
ε
(1 + x)2
+
2[1−e
−2x/ε] − 2
1 + x
. (105)
The error to satisfy the governing equation (102) is plotted in Fig. 6(b) in the t-domain. In
addition that which is very near to the left-boundary with x ≤ 0.00326814, the error is very
small in the order of 10−4. The difference between our numerical result with the solution
in Eq. (104) is also plotted in Fig. 6(c), of which the absolute difference is smaller than
3.5 × 10−4. This example shows that the new method of LGSM is also applicable to the
nonlinear problem.
6.6. Example 6
We consider the following example of a nonlinear singular perturbation problem given by
Kevorkian and Cole [8]:
εu′′ + uu′ − u = 0, (106)
u(0) = −1, u(1) = 3.9995. (107)
For comparison purpose we write a uniform approximation provided by Kevorkian and
Cole [8]:
u(x) = x+ c1 tanh[c1(x/ε+ c2)/2], (108)
where c1 = 2.9995 and c2 = 1/c1 ln[(c1 − 1)/(c1 + 1)].
When the singular parameter is taken to be ε = 0.001, we apply the LGSM to the resulting
(u, t)-IVP under λ = 4 and c = 500. Through some trials we use r = 0.22346923828125.
The numerical result matches very well to the right-boundary condition u1(1) = 3.9995
with a very small error with 8.198 × 10−6. By using a stepsize h = 0.00001 the numerical
result and the solution in Eq. (108) are compared in Fig. 7(a). The absolute difference
between our numerical result with the solution in Eq. (108) is also plotted in Fig. 7(b),
of which the difference is smaller than 10−3. This example has been calculated by Reddy
and Chakravarthy [17] under the same ε = 0.001. Near to the boundary layer the solution
obtained by Reddy and Chakravarthy [17] deviates from the uniformly valid approximation
(108) to a great extent with a difference 0.493912
This example shows again that the new method of LGSM is applicable to the nonlinear
singular perturbation problem with a strong singularity.
7. Conclusions
In order to reduce the singularity of SPBVP near to the boundary we have employed a
coordinate transformation from its definition in the x-domain to a problem in the t-domain.
A Lie-group shooting method was developed to derive algebraic equations to find the miss-
ing initial condition. Furthermore, by adjusting the boundary conditions from the one of
16
[12] M.K. Kadalbajoo, K.C. Patidar, A survey of numerical techniques for solving singularly
perturbed ordinary differential equations, Appl. Math. Comput. 130 (2002) 457-510.
[13] M.K. Kadalbajoo, Y.N. Reddy, Initial-value technique for a class of nonlinear singular
perturbation problems, J. Optim. Theory Appl. 53 (1986) 395-406.
[14] M.G. Gasparo, M. Macconi, New initial-value method for singularly perturbed boundary
value problems, J. Optim. Theory Appl. 63 (1989) 213-224.
[15] M.G. Gasparo, M. Macconi, Initial-value methods for second-order singularly perturbed
boundary value problems, J. Optim. Theory Appl. 66 (1990) 197-210.
[16] S. Natesan, M. Ramanujam, Initial-value technique for singularly-perturbed turning-
point problems exhibiting twin boundary layers, J. Optim. Theory Appl. 99 (1998)
37-52.
[17] Y.N. Reddy, P.P. Chakravarthy, An initial-value approach for solving singularly per-
turbed two-point boundary value problems, Appl. Math. Comput. 155 (2004) 95-110.
[18] Z. Li, W. Wang, Mechanization for solving SPP by reducing order method, Appl. Math.
Comput. 169 (2005) 1028-1037.
[19] A. Awoke, Y.N. Reddy, An exponentially fitted special second-order finite difference
method for solving singular perturbation problems, Appl. Math. Comput. 190 (2007)
1767-1782.
[20] K.C. Patidar, High order parameter uniform numerical method for singular perturbation
problems, Appl. Math. Comput. 188 (2007) 720-733.
[21] J. Vigo-Aguiar, S. Natesan, An efficient numerical method for singular perturbation
problems, J. Comput. Appl. Math. 192 (2006) 132-141.
[22] T.C. Lin, D.H. Schultza, W. Zhang, Numerical solutions of linear and nonlinear singular
perturbation problems, Comput. Math. Appl. 55 (2008) 2574-2592.
[23] M. Kubicek, V. Hlavacek, Numerical Solution of Nonlinear Boundary Value Problems
with Applications. Prentice-Hall, New York, 1983.
[24] H.B. Keller, Numerical Methods for Two-point Boundary Value Problems. Dover, New
York, 1992.
[25] U.M. Ascher, R.M.M. Mattheij, R.D. Russell, Numerical Solution of Boundary Value
Problems for Ordinary Differential Equations. SIAM, Philadelphia, 1995.
[26] C.-S. Liu, Cone of non-linear dynamical system and group preserving schemes, Int. J.
Non-Linear Mech. 36 (2001) 1047-1068.
[27] C.-S. Liu, The Lie-group shooting method for nonlinear two-point boundary value prob-
lems exhibiting multiple solutions, CMES: Comput. Model. Eng. Sci. 13 (2006) 149-163.
18
Captions:
Fig. 1. For Example 1, an explanation of how to pick up the correct r.
Fig. 2. For Example 1 comparing numerical solution with uniform approximation in (a)
z-domain and (b) t-domain, (c) plotting the differences of w for ε = 0.001 and
ε = 0.0001, and (d) comparing numerical solution with uniform approximation
in t-domain for ε = 0.0001.
Fig. 3. For Example 2: (a) plotting exact solution in x-domain, (b) comparing numerical
and exact solutions, and (b) numerical error.
Fig. 4. For Example 3: (a) comparing numerical and exact solutions, and (b) numerical
errors.
Fig. 5. For Example 4: (a) comparing numerical and exact solutions, and (b) numerical
error.
Fig. 6. For Example 5: (a) comparing numerical solution and uniform approximation, (b)
plotting the error of uniform approximation, and (c) the difference of numerical
solution and uniform approximation.
Fig. 7. For Example 6: (a) comparing numerical solution and uniform approximation,
and (b) the difference of numerical solution and uniform approximation.
(a)
(c)
(b)
z
t
(d)
-1.0 -0.5 0.0 0.5 1.0
-1.1
-1.0
-0.9
-0.8
-0.7
-0.6
-0.5
-0.4
-0.3
-0.2
-0.1
0.0
w
0.0 0.2 0.4 0.6 0.8 1.0
-1.1
-1.0
-0.9
-0.8
-0.7
-0.6
-0.5
-0.4
-0.3
-0.2
-0.1
0.0
w
1E-013
1E-012
1E-011
1E-010
D
if
fe
re
nc
e 
of
 w
-1.1
-1.0
-0.9
-0.8
-0.7
-0.6
-0.5
-0.4
-0.3
-0.2
-0.1
0.0
w
O'Malley [10]
Present paper
=0.0001
=0.01
 
 
Fig. 2. For Example 1 comparing numerical solution with uniform approximation in 
(a) z-domain and (b) t-domain, (c) plotting the differences of w forε=0.001 andε
=0.0001, and (d) comparing numerical solution with uniform approximation in 
t-domain forε=0.0001. 
 
 
 
 
 
 
 
 
 
 
 
x
(a)
(b)
0.0 0.2 0.4 0.6 0.8 1.0
-1.0
-0.5
0.0
0.5
1.0
u
1E-016
1E-013
1E-010
1E-007
Er
ro
r o
f 
u
Exact
Numerical
(u, x)-IVP
(u, t)-IVP
 
 
Fig. 4. For Example 3: (a) comparing numerical and exact solutions, and (b) 
numerical errors. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
(a)
(c)
(b)
0.0 0.2 0.4 0.6 0.8 1.0
-1.0
-0.8
-0.6
-0.4
-0.2
0.0
Er
ro
r o
f 
un
if
or
m
ap
pr
ox
im
at
io
n
0.0
0.2
0.4
0.6
0.8
u
Bender and Orszag [5]
Present paper
0.0 0.2 0.4 0.6 0.8 1.0
t
0E+000
1E-004
2E-004
3E-004
4E-004
D
if
fe
re
nc
e 
of
 u
 
Fig. 6. For Example 5: (a) comparing numerical solution and uniform approximation, 
(b) plotting the error of uniform approximation, and (c) the difference of numerical 
solution and uniform approximation. 
 
 
 
International Journal of Non-Linear Mechanics 43 (2008) 844 -- 851
Contents lists available at ScienceDirect
International Journal of Non-LinearMechanics
journal homepage: www.e lsev ier .com/ locate /n lm
TheLie-groupshootingmethodformultiple-solutionsofFalkner–Skanequationunder
suction–injection conditions
Chein-Shan Liua,b,∗, Jiang-Ren Changc
aDepartment of Mechanical and Mechatronic Engineering, National Taiwan Ocean University, Keelung 202-24, Taiwan
bDepartment of Harbor and River Engineering, National Taiwan Ocean University, Keelung 202-24, Taiwan
cDepartment of Systems Engineering and Naval Architecture, National Taiwan Ocean University, Keelung 202-24, Taiwan
A R T I C L E I N F O A B S T R A C T
Article history:
Received 17 October 2007
Received in revised form 16 April 2008
Accepted 15 May 2008
Keywords:
Falkner–Skan equation
Blasius equation
Boundary layer
Suction–injection boundary conditions
Multiple-solutions
Lie-group shooting method
For the Falkner–Skan equation, including the Blasius equation as a special case, we develop a new nu-
merical technique, transforming the governing equation into a non-linear second-order boundary value
problem by a new transformation technique, and then solve it by the Lie-group shooting method. The
second-order ordinary differential equation is singular, which is, however, much saving computational
cost than the original third-order equation defined in a semi-infinite range. In order to overcome the
singularity we consider a perturbed equation. The newly developed Lie-group shooting method allows us
to search a missing initial slope at the left-end in a compact space of t ∈ [0, 1], and moreover, the initial
slope can be expressed as a closed-form function of r ∈ (0, 1), where the best r is determined by matching
the right-end boundary condition. All that makes the new method much superior than the conventional
shooting method used in the boundary layer equation under imposed boundary conditions. When the
initial slope is available we can apply the fourth-order Runge–Kutta method to calculate the solution,
which is highly accurate. The present method is very effective for searching the multiple-solutions under
very complex boundary conditions of suction or injection, and also allowing the motion of plate.
© 2008 Elsevier Ltd. All rights reserved.
1. Introduction
When an incompressible flow passes in the vicinity of solid
boundaries, the Navier–Stokes equations can be reduced drastically.
The boundary layer theory was first proposed by Prandtl in 1904.
It asserts that the viscous effect would be confined to a thin shear
layer adjacent to the solid boundary in the case of a motion with
very little viscosity. Hence, the fluid motion is split into two parts:
near the boundary the viscosity effect is important and the fluid is
said to be viscous, and far away from the boundary the fluid viscous
effect is unimportant and can be treated as an inviscid fluid.
The boundary layer theory explains very well the steady-state
flow over a flat plate at zero incidence angle known as Blasius flow.
A general transformation inspired by Meksyn [1] permits us to trans-
form the Prandtl equation into the Falkner–Skan equation. In this
study we are focused on the Falkner–Skan equation:
f ′′′ + ff ′′ + (1− f ′2)= 0 (1)
∗ Corresponding author at: Department of Mechanical and Mechatronic Engi-
neering, National Taiwan Ocean University, Keelung 202-24, Taiwan.
Tel.: +886224622192; fax: +886224620836.
E-mail address: csliu@mail.ntou.edu.tw (C.-S. Liu).
0020-7462/$ - see front matter © 2008 Elsevier Ltd. All rights reserved.
doi:10.1016/j.ijnonlinmec.2008.05.005
with a suction or injection boundary condition and allowing the solid
boundary moving:
f (0)= −C, f ′(0)= , f ′(∞)= 1. (2)
In above,  = Uw/U∞ is the velocity ratio. When 0 < <1, the speed
of oncoming fluid is larger than that of the plate. When  >1, the
speed of the moving plate is faster than that of oncoming fluid, and
=0 is for a resting plate. The term C is a constant related to suction
if it is negative or injection if it is positive.
When =0, the Blasius equation is recovered, of which Callegari
and Friedman [2] have used the techniques of similar transforma-
tion and the Crocco transformation to reduce the classical Blasius
equation into a second-order non-linear singular two-point bound-
ary value problem (BVP), and assured the existence, uniqueness and
analyticity of positive solution.
The solutions of Blasius and Falkner–Skan equations have been
studied numerically by many researchers, like as Abussita [3],
Asaithambi [4–8], Belhachmi [9], Cebeci and Keller [10], Chang et
al. [11,12], Cortell [13], Elbarbary [14], He [15,16], Howarth [17],
Khabibrakhmanov and Summers [18], Lee and Hung [19], Liao
[20–22], Lin [23], Lock [24,25], Potter [26], Salama [27,28], Sher and
Yakhot [29], Topfer [30], Wang [31], and Yu and Chen [32].
846 C.-S. Liu, J.-R. Chang / International Journal of Non-Linear Mechanics 43 (2008) 844 -- 851
with
g=
[
I2 02×1
01×2 −1
]
(22)
a Minkowski metric. Here, I2 is an identity matrix, and the super-
script T stands for the transpose.
The augmented variable X satisfies the cone condition:
XTgX= y · y − ‖y‖2 = 0. (23)
Accordingly, Liu [62] has developed a group-preserving scheme
(GPS) as follows:
Xk+1 = G(k)Xk, (24)
where Xk denotes the numerical value of X at the discrete tk, and
G(k) ∈ SOo(2, 1) satisfies
GTgG= g, (25)
det G= 1, (26)
G00 >0, (27)
where G00 is the 00th component of G.
3.2. Generalized mid-point rule
Applying scheme (24) to Eq. (20) with a specified initial condi-
tion X(0) = X0 we can compute the solution X(t) by GPS. Assuming
that the stepsize used in GPS is t = 1/K, and starting from an ini-
tial augmented condition X0 = X(0) = ((y0)T, ‖y0‖)T we attempt to
calculate the value X(1)= (yT(1), ‖y(1)‖)T at t = 1.
By applying Eq. (24) step-by-step we can obtain
Xf = GK (t) · · ·G1(t)X0. (28)
However, let us recall that each Gi, i = 1, . . . ,K, is an element of
the Lie group SOo(2, 1), and by the closure property of Lie group,
GK (t) · · ·G1(t) is also a Lie group denoted by G. Hence, we have
Xf = GX0. (29)
This is a one-step transformation from X0 to Xf .
We can calculate G by a generalized mid-point rule, which is
obtained from an exponential mapping of A by taking the values of
the argument variables of A at a generalizedmid-point. The Lie group
generated from A ∈ so(2, 1) is known as a proper orthochronous
Lorentz group, which admits a closed-form representation:
G=
⎡
⎢⎢⎢⎢⎣
I2 +
(a − 1)
‖fˆ‖2
fˆ fˆT
bfˆ
‖fˆ‖
bfˆT
‖fˆ‖
a
⎤
⎥⎥⎥⎥⎦ , (30)
where
yˆ = ry0 + (1− r)yf , (31)
fˆ = f(tˆ, yˆ), (32)
a = cosh
(
‖fˆ‖
‖yˆ‖
)
, (33)
b = sinh
(
‖fˆ‖
‖yˆ‖
)
. (34)
Here, we use the initial y0 and the final yf through a suitable weight-
ing factor r to calculate G, where 0 < r <1 is a parameter and tˆ = r.
The above method applied a generalized mid-point rule on the cal-
culation of G, and the resultant is a single-parameter Lie-group ele-
ment G(r). A suitable r can be determined by matching the right-end
boundary condition.
3.3. A Lie-group mapping between two points
Let us define a new vector
F := fˆ‖yˆ‖ , (35)
such that Eqs. (30), (33) and (34) can also be expressed as
G=
⎡
⎢⎢⎣
I2 +
a − 1
‖F‖2 FF
T bF
‖F‖
bFT
‖F‖ a
⎤
⎥⎥⎦ , (36)
a = cosh(‖F‖), (37)
b = sinh(‖F‖). (38)
From Eqs. (29) and (36) it follows that:
yf = y0 + F, (39)
‖yf‖ = a‖y0‖ + bF · y
0
‖F‖ , (40)
where
 := (a − 1)F · y
0 + b‖y0‖‖F‖
‖F‖2 . (41)
Substituting
F= 1

(yf − y0) (42)
into Eq. (40) we obtain
‖yf‖
‖y0‖ = a + b
(yf − y0) · y0
‖yf − y0‖‖y0‖ , (43)
where
a = cosh
(
‖yf − y0‖

)
, (44)
b = sinh
(
‖yf − y0‖

)
(45)
are obtained by inserting Eq. (42) for F into Eqs. (37) and (38).
Let
cos := (y
f − y0) · y0
‖yf − y0‖‖y0‖ , (46)
S := ‖yf − y0‖, (47)
and from Eqs. (43)–(45) it follows that
‖yf‖
‖y0‖ = cosh
(
S

)
+ cos sinh
(
S

)
. (48)
By defining
Z := exp
(
S

)
, (49)
we obtain a quadratic equation for Z from Eq. (48):
(1+ cos)Z2 − 2‖y
f‖
‖y0‖ Z + 1− cos= 0. (50)
On the other hand, by inserting Eq. (42) for F into Eq. (41) we obtain
‖yf − y0‖2 = (a − 1)(yf − y0) · y0 + b‖y0‖‖yf − y0‖. (51)
848 C.-S. Liu, J.-R. Chang / International Journal of Non-Linear Mechanics 43 (2008) 844 -- 851
Eq. (77) can be written as
f1A − B = f1
√
c2 + A2 −
√
c2 + B2 (78)
by using A>0 and B<0. Squaring the above equation and cancelling
the common terms we can rearrange it to
2f1
√
c2 + B2
√
c2 + A2 = (1+ f21 )c2 + 2f1AB. (79)
Squaring again and cancelling the common terms and factors we get
4f21 (A
2 + B2)− 4f1(1+ f21 )AB = (1− f21 )2c2. (80)
Inserting B = rA/(r − 1) and through some algebraic manipulations
we eventually obtain
4f1
(r − 1)2
[f1 − (1− f1)2r2 + (1− f1)2r]A2 = (1− f21 )2c2.
(81)
If the following condition holds:
f2(r) := f1 − (1− f1)2r2 + (1− f1)2r >0, (82)
then A has a positive solution:
A =
√√√√ (r − 1)2(1− f21 )2c2
4f1f2
. (83)
The condition (82) can be used to detect the range where r is per-
mitted.
6. Adjusting the slope A
We have derived a closed-form solution to calculate the slope A
for each r in its admissible range. Then we can apply the fourth-
order Runge–Kutta method (RK4) to integrate the (y, t)-IVP in Eqs.
(13)–(16) by the following RK4:
yn+1 = yn +
t
6
[f1 + 2f2 + 2f3 + f4], (84)
where
f1 = f(tn, yn), (85)
f2 = f(tn + , yn + f1), (86)
f3 = f(tn + , yn + f2), (87)
f4 = f(tn + h, yn + hf3), (88)
in which =	t/2 is one half of the stepsize.
For a trial r in the admissible range, we can calculate A and then
numerically integrate Eqs. (13)–(16) from t = 0 to 1, and compare
the end value of yr1(1) with the exact one y1(1) = c. If |yr1(1) − c| is
smaller than a given tolerance error 
1, then the process of finding
solution is finished. Otherwise, we need to calculate the end values of
y1(1) corresponding to a different r1 < r or r2 > r, which are denoted
by yr11 (1) and y
r2
1 (1), respectively. If (y
r1
1 (1) − c)(yr1(1) − c) <0, then
there exists one root between r1 and r; otherwise, the root is located
between (r, r2). The process can be continued, until |yr1(1) − c| is
smaller enough to satisfy the criterion of |yr1(1)− c|
1.
7. Numerical examples
7.1. The Blasius equation
We first consider the Blasius equation by letting = 0 and C = 0
in Eqs. (1) and (2). Further applying the Crocco transformation with
z = f ′ and g = f ′′ we have
gg′′ = −z,  < z <1, (89)
g′()= 0, g(1)= 0. (90)
0.0 1.0
z
0.0
0.1
0.2
0.3
0.4
0.5
g ξ=0.0
ξ=0.2
ξ=0.4
ξ=0.6
0.2 0.4 0.6 0.8
Fig. 1. Numerical solutions for the Blasius equation.
Wang [31] have calculated the above equations with =0 by the
Adomian decomposition method. In our calculation of the Blasius
equation we use the Lie-group shooting method.
By letting
z = (1− )t + , (91)
y(t)= g(z)− (1− )Ct + C0, (92)
we can transform Eqs. (89) and (90) into a mathematical equivalent
system:
y¨ = −(1− )
2− (1− )3t
y + (1− )Ct − C0
, (93)
y˙(0)= 0, y(1)= c, (94)
where c = C0 − (1 − )C. Here, C0 is a translation constant being
selected such that c >0.
Consider the following perturbed equation:
y¨ = h(t, y), (95)
y(−1)= c, y(1)= c, (96)
where
h(t, y)=
⎧⎪⎪⎨
⎪⎪⎩
−(1− )2− (1− )3t
y + (1− )Ct − C0
if 0 t1,
−(1− )2+ (1− )3t
y − (1− )Ct − C0
if − 1 t <0,
(97)
is a symmetric extension of Eq. (93). In practical numerical calcula-
tions we only need to calculate the above equations from t=−1 to 0,
where we adjust the slope A by the method in Sections 5 and 6. If the
target equation y˙(0)=0 is satisfied then we obtain the numerical so-
lution by merely mapping the solution into the interval of 0 t1.
In Fig. 1 we plot g(z) with respect to z for = 0, 0.2, 0.4, 0.6. The RK4
is used to calculate the numerical solutions with a fixed stepsize
t = 0.0001. In order to avoid the singularity of Eq. (95) when y = c
we use 
2 = 10−7. The following parameters r = 0.49999148209245
and c = 200000 are used for the case  = 0. Our numerical result
850 C.-S. Liu, J.-R. Chang / International Journal of Non-Linear Mechanics 43 (2008) 844 -- 851
0.0
0.2
0.4
0.6
0.8
f '
'
0.0
0.2
0.4
0.6
0.8
1.0
f '
-0.5 4.0
f
C=0.5
C=-0.2
0.0 0.5 1.0 1.5 2.0 2.5 3.0 3.5
-0.5 4.0
f
0.0 0.5 1.0 1.5 2.0 2.5 3.0 3.5
Fig. 4. Numerical solutions for the Falkner–Skan equation under suction and injection
conditions.
boundary condition can be matched very well with error smaller
than 10−4.
8. Conclusions
In the present paper we offer a rather accurate and simple
method without any iteration to estimate unknown initial condi-
tions by applying the Lie-group shooting method on the Blasius
and Falkner–Skan equations. In order to overcome the singularity
we have considered a perturbed equation. The Lie-group shooting
method allows us to search a missing initial slope at the left-end
expressed as a closed-form function of r ∈ (0, 1), where the best r
is determined by matching the right-end boundary condition. This
makes the new method much superior than the conventional shoot-
ing method used in the boundary layer equation under imposed
boundary conditions. Under complex boundary conditions of suc-
tion or injection, multiple-solutions may happen, and the present
method is also effective.
Acknowledgment
Taiwan's National Science Council project NSC-96-2221-E-019-
027-MY3 granted to the first author is highly appreciated.
References
[1] D. Meksyn, New Methods in Laminar Boundary-Layer Theory, Pergamon Press,
Oxford, 1961.
[2] A.J. Callegari, M.B. Friedman, An analytical solution of a nonlinear, singular
boundary value problem in the theory of viscous fluids, J. Math. Anal. Appl. 21
(1968) 510–529.
[3] A.M.M. Abussita, A note on a certain boundary-layer equation, Appl. Math.
Comput. 64 (1994) 73–77.
[4] N.S. Asaithambi, A numerical method for the solution of the Falkner–Skan
equation, Appl. Math. Comput. 81 (1997) 259–264.
[5] A. Asaithambi, A finite-difference method for the Falkner–Skan equation, Appl.
Math. Comput. 92 (1998) 135–141.
[6] A. Asaithambi, A second-order finite-difference method for the Falkner–Skan
equation, Appl. Math. Comput. 156 (2004) 779–786.
[7] A. Asaithambi, Numerical solution of the Falkner–Skan equation using piecewise
linear functions, Appl. Math. Comput. 159 (2004) 267–273.
[8] A. Asaithambi, Solution of the Falkner–Skan equation by recursive evaluation
of Taylor coefficients, J. Comput. Appl. Math. 176 (2005) 203–214.
[9] Z. Belhachmi, B. Brighi, K. Taous, On the concave solutions of the Blasius
equation, Acta Math. Univ. Comenianae 69 (2000) 199–214.
[10] T. Cebeci, H. Keller, Shooting and parallel shooting methods for solving the
Falkner–Skan boundary layer equations, J. Comput. Phys. 7 (1971) 289–300.
[11] C.W. Chang, J.R. Chang, C.-S. Liu, The Lie-group shooting method for boundary
layer equations in fluid mechanics, J. Hydrodyn. 18 (3 Suppl. 1) (2006) 103–
108.
[12] C.W. Chang, J.R. Chang, C.-S. Liu, The Lie-group shooting method for solving
classical Blasius flat-plate problem, CMC: Comput. Mater. Continua, in press.
[13] R. Cortell, Numerical solutions of the classical Blasius flat-plate problem, Appl.
Math. Comput. 170 (2005) 706–710.
[14] E.M.E. Elbarbary, Chebyshev finite difference method for the solution of
boundary-layer equations, Appl. Math. Comput. 160 (2005) 487–497.
[15] J.H. He, Approximate analytical solution of Blasius' equation, Commun.
Nonlinear Sci. Numer. Simulation 4 (1999) 75–78.
[16] J.H. He, A simple perturbation approach to Blasius equation, Appl. Math. Comput.
140 (2003) 217–222.
[17] L. Howarth, On the solution of the laminar boundary layer equations, Proc. R.
Soc. London A 164 (1938) 547–579.
[18] I.K. Khabibrakhmanov, D. Summers, The use of generalized Laguerre
polynomials in spectral methods for nonlinear differential equations, Comput.
Math. Appl. 36 (1998) 65–70.
[19] H.C. Lee, C.I. Hung, Solutions and error estimates of the Blasius equation by
using the modified group preserving scheme, J. Chin. Soc. Mech. Eng. 23 (2002)
111–119.
[20] S.J. Liao, A kind of approximate solution technique which does not depend
upon small parameters—II. An application in fluid mechanics, Int. J. Non-Linear
Mech. 32 (1997) 815–822.
[21] S.J. Liao, An explicit, totally analytic approximate solution for Blasius' viscous
flow problems, Int. J. Non-Linear Mech. 34 (1999) 759–778.
[22] S.J. Liao, A non-iterative numerical approach for the two-dimensional viscous
flow problems governed by the Falkner–Skan equation, Int. J. Numer. Methods
Fluids 35 (2001) 495–518.
[23] J.G. Lin, A new approximate iteration solution of Blasius' equation, Commun.
Nonlinear Sci. Numer. Simulation 4 (1999) 91–94.
[24] R.C. Lock, The velocity distribution in the laminar boundary layer between
parallel streams, Q. J. Mech. Appl. Math. 4 (1951) 42–63.
[25] R.C. Lock, Hydrodynamic stability of the flow in the laminar boundary layer
between parallel streams, Proc. Cambridge Philos. Soc. 50 (1954) 105–124.
[26] O.E. Potter, Mass transfer between co-current fluid streams and boundary layer
solutions, Chem. Eng. Sci. 6 (1957) 170–182.
[27] A.A. Salama, Higher-order method for solving free boundary-value problems,
Numer. Heat. Transfer Part B 45 (2004) 385–394.
[28] A.A. Salama, Chebyshev finite difference method for the solution of boundary-
layer equations, Appl. Math. Comput. 160 (2005) 487–497.
[29] I. Sher, A. Yakhot, New approach to solution of the Falkner–Skan equation,
AIAA J. 39 (2001) 965–967.
[30] C. Topfer, Bemerkungen zu dem Aufsatz von H. Blasius: Grenzschichten in
Flussigkeiten mit kleiner Reibung, Z. Math. Phys. 61 (1912) 397–398.
[31] L. Wang, A new algorithm for solving classical Blasius equation, Appl. Math.
Comput. 157 (2004) 1–9.
[32] L.T. Yu, C.K. Chen, The solution of the Blasius equation by the differential
transformation method, Math. Comput. Model. 28 (1998) 101–111.
[33] F.A. Allan, M.I. Syam, On the analytic solutions of the nonhomogeneous Blasius
problem, J. Comput. Appl. Math. 182 (2005) 362–371.
[34] O. Aydin, A. Kaya, Laminar boundary layer flow over a horizontal permeable
flat plate, Appl. Math. Comput. 161 (2005) 229–240.
[35] I.A. Hassanien, Flow and heat transfer on a continuous flat surface moving in a
parallel free stream of power-law fluid, Appl. Math. Model. 20 (1996) 779–784.
[36] R.S. Heeg, D. Dijkstra, P.J. Zandbergen, The stability of Falkner–Skan flows with
several inflection points, Z. Angew. Math. Phys. (ZAMP) 50 (1999) 82–93.
[37] M.Y. Hussaini, W.D. Lakin, A. Nachman, On similarity solutions of a boundary
layer problem with an upstream moving wall, SIAM J. Appl. Math. 47 (1987)
699–709.
[38] M.Y. Hussaini, W.D. Lakin, Existence and uniqueness of similarity solutions of
a boundary layer problem, Q. J. Mech. Appl. Math. 39 (1986) 15–24.
[39] J. B Klemp, A. A Acrivos, A method for integrating the boundary layer equations
through a region of reverse flow, J. Fluid Mech. 53 (1972) 177–199.
Copyright c© 2008 Tech Science Press CMES, vol.32, no.1, pp.1-15, 2008
A New Shooting Method for Solving Boundary Layer
Equations in Fluid Mechanics
Chein-Shan Liu1, Chih-Wen Chang2 and Jiang-Ren Chang2,3
Abstract: In this paper, we propose a new
method to tackle of two famous boundary
layer equations in fluid mechanics, namely,
the Falkner-Skan and the Blasius equations.
We can employ this method to find unknown
initial conditions. The pivotal point is based
on the erection of a one-step Lie group ele-
ment G(T ) and the formation of a generalized
mid-point Lie group element G(r). Then, by
imposing G(T ) = G(r) we can seek the miss-
ing initial conditions through a minimum dis-
crepancy from the target in terms of a weight-
ing factor r ∈ (0,1). Numerical examples are
worked out to persuade that this novel ap-
proach has good efficiency and accuracy with
a fast convergence speed by searching r with
the minimum norm to fit two targets.
Keyword: One-step group preserving
scheme, Falkner-Skan equation, Blasius
equation, Boundary value problem, Lie-
group shooting method, Estimation of
missing initial condition.
1 Introduction
The Falkner-Skan equation as coined by
Falkner and Skan (1931) arose in the study
of two-dimensional incompressible laminar
1 Department of Mechanical and Mechatronic En-
gineering, National Taiwan Ocean University,
Keelung 20224, Taiwan
2 Department of Systems Engineering and Naval
Architecture, National Taiwan Ocean University,
Keelung 20224, Taiwan
3 Corresponding author, Tel.: +886-2-24622192-
x6031. E-mail: cjr@mail.ntou.edu.tw
boundary layers of fluids exhibiting similar-
ity. It is a third-order nonlinear two-point
boundary value problem for which no closed-
form solutions are available. The first nu-
merical treatment of this problem was pre-
sented by Hartree (1937). The mathematical
treatments of this problem by Weyl (1942),
Coppel (1960), Rosenhead (1963) and Padé
(2003) were principally concentrated on at-
taining results of existence and uniqueness.
Smith (1954), Cebeci and Keller (1971), Na
(1979), Veldman and Van der Vooren (1980),
Sher and Yakhot (2001), Zaturska and Banks
(2001), Kuo (2003), Salama (2004), and
Salama and Mansour (2005) have addressed
other numerical methods for solving this
problem. All those approaches have mainly
employed shooting or invariant imbedding.
Later, the methods presented by Asaithambi
(1998, 2004a, 2004b, 2005), and Asaithambi
(1997) improved the performance of the pre-
vious methods by reducing the amount of the
computational effort.
When a two-dimensional (2D) steady flow
of an incompressible constant property fluid
with very low viscosity and high Reynolds
number moves promptly over a semi-infinite
flat plate, the friction between the fluid and
the flat plate will obstruct the fluid within
a thin region immediately adjacent to the
boundary layer. The governing equation
describing the boundary layer with such
fluid characteristics and boundary conditions
is called the Blasius equation; see, e.g.,
Schlichting (1979), and Özisik (1979). Bla-
A New Shooting Method for Solving Boundary Layer Equations 3
ical examples of estimating an unknown heat
conductivity parameter [Liu (2008b)] to con-
vince that it is highly accurate and efficient;
the maximum estimation error is smaller than
10−5 for smooth parameter and for discontin-
uous and oscillatory parameter the accuracy
is still in the order of 10−2. For the Sturm-
Liouville eigenvalues problem, Liu (2008c)
constructed a very effective LGSM to search
the eigenvalues, and when eigenvalue is de-
termined the author can also search a missing
left-boundary condition of the slope through
a weighting factor r ∈ (0,1). Hence, the
eigenvalues and eigenfunctions can be calcu-
lated with a better accuracy. For the inverse
vibration problem [Liu (2008d)], an LGSM
is proposed to simultaneously estimate the
time-dependent damping and stiffness func-
tions by using two sets of displacement as in-
puts. The LGSM approach is very interest-
ing, which resulting to closed-form estimat-
ing equations without needing of any itera-
tion and initial guess of coefficient functions,
and more importantly, it does not require to
assume a priori the functional forms of un-
known coefficients. To estimate the miss-
ing initial conditions for three-point bound-
ary value problems (BVPs) of second-order
ODEs, Liu (2008e) have employed the equa-
tion G(ut0 ,ut1) = G(r) in two-stage of two
consecutive intervals to derive four extra al-
gebraic equations, which together with the
two given nonlocal boundary conditions lead
to totally six equations to solve the six un-
knowns. The method is also workable to find
multiple solutions if the considered equation
has. Liu (2008f) proposed a numerical in-
tegration method of second-order BVPs re-
sulting from the elastica of slender rods un-
der different loading conditions and boundary
conditions. The LGSM is very effective for
large deflection problems of elastica even ex-
hibiting multiple solutions. Liu (2008g) stud-
ied numerical computations of inverse ther-
mal stress problems. The unknown bound-
ary conditions of an elastically deformable
heat conducting rod are not given a priori and
are not allowed to measure directly, because
the boundary may be not accessible to mea-
sure. Although the measured temperature is
disturbed by large noise, the LGSM is stable
to recover the boundary conditions very well.
To evaluate the missing initial conditions for
the BVPs of the Blasius equation, [Chang,
Chang and Liu (2008)] have employed the
equation G(T ) = G(r) to derive algebraic
equations. The numerical implementation of
the LGSM is very simple and the computa-
tion speed is very fast. For the Falkner–Skan
equation, including the Blasius equation as
a special case, Liu and Chang (2008) devel-
oped a new numerical technique, transform-
ing the governing equation into a non-linear
second-order boundary value problem by a
new transformation technique, and then solve
it by the LGSM. The approach is very effec-
tive for searching the multiple-solutions un-
der very complex boundary conditions of suc-
tion or injection, and also allowing the motion
of plate.
In this paper, we propose an LGSM to tackle
these two famous boundary layer equations
in fluid mechanics. Our approach is based
on the group preserving scheme (GPS) de-
veloped by Liu (2001) for the integration of
initial value problems. It will be clear that
our method can be applied to these two fa-
mous boundary layer equations, since we are
able to search the missing initial condition
through a minimum solution of r in a com-
pact space of r ∈ (0,1), where the factor r is
used in a generalized mid-point rule for the
Lie group of one-step GPS. Especially, the
proposed scheme is easy to implement and
time saving. Through this study, we may have
an easy-implementation and accurate LGSM
used in the calculations of these two famous
boundary layer equations.
A New Shooting Method for Solving Boundary Layer Equations 5
This is a one-step transformation from X0 to
XT ; see, e.g., Liu, Chang and Chang (2006).
We can calculate G by a generalized mid-
point rule, which is obtained from an expo-
nential mapping of A by taking the values of
the argument variables of A at a generalized
mid-point and viewing it as a constant matrix.
The Lie group generated form A ∈ so(ν ,1)
is known as a proper orthochronous Lorentz
group, which admits a closed-form represen-
tation as follows:
G =
⎡
⎣In + (a−1)‖ˆf‖2 ˆfˆfT b
ˆf
‖ˆf‖
bˆfT
‖ˆf‖ a
⎤
⎦ , (14)
where
uˆ = ru0+(1− r)uT , (15)
ˆf = f(tˆ, uˆ), (16)
a = cosh
(
T
∥∥ˆf∥∥
‖uˆ‖
)
, (17)
b = sinh
(
T
∥∥ˆf∥∥
‖uˆ‖
)
. (18)
Here, we employ the initial u0 and the final
uT through a suitable weighting factor r to
calculate G, where 0 < r < 1 is a parameter.
The above method applied a generalized mid-
point rule on the calculation of G, and the re-
sult is a single-parameter Lie group element
denoted by G(r).
2.3 A Lie group mapping between two
points
Let us define a new vector
F :=
ˆf
‖uˆ‖ , (19)
such that Eqs. (14), (17) and (18) can also be
expressed as
G =
⎡
⎣In + (a−1)‖F‖2 FFT bF‖F‖
bFT
‖F‖ a
⎤
⎦ , (20)
a = cosh (T ‖F‖) , (21)
b = sinh(T ‖F‖) . (22)
From Eqs. (13) and (20) it follows that
uT = u0 +ηF, (23)
‖uT‖= a‖u0‖+bF ·u0‖F‖ , (24)
where
η := (a−1)F ·u0+b‖u0‖ ‖F‖‖F‖2 . (25)
Substituting
F =
1
η (uT −u0) (26)
into Eq. (24) we obtain
‖uT‖
‖u0‖ = a+b
(uT −u0) ·u0
‖uT −u0‖ ‖u0‖ , (27)
where
a = cosh
(
T ‖uT −u0‖
η
)
, (28)
b = sinh
(
T ‖uT −u0‖
η
)
(29)
are obtained by inserting Eq. (26) for F into
Eqs. (21) and (22).
Let
cosθ := (uT −u0) ·u0‖uT −u0‖‖u0‖ , (30)
S := T ‖uT −u0‖ , (31)
and from Eqs. (27)-(29) it follows that
‖uT‖
‖u0‖ = cosh
(
S
η
)
+ cosθ sinh
(
S
η
)
. (32)
By defining
Z := exp
(
S
η
)
, (33)
A New Shooting Method for Solving Boundary Layer Equations 7
in which Z is calculated by
Z =
√
A2+B2+C2√
α2+β 2+δ 2 +
√
A2+B2+C2
α2+β 2+δ 2 − (1− cos2 θ )
1+ cosθ ,
(49)
where
cosθ = α(A−α)+β(B−β)+δ (C−δ )√
(α−A)2 +(β −B)2 +(δ −C)2
1√
α2 +β 2 +δ 2 . (50)
The above three equations were obtained
from Eqs. (36), (35) and (30) by inserting Eq.
(46) for u.
When comparing Eq. (47) with Eq. (19), and
with the aid of Eqs. (15), (16) and (40)-(45)
we obtain
A = α+
η[rβ +(1− r)B]
ρ , (51)
B = β + η[rδ +(1− r)C]ρ , (52)
C = δ
+
−η
{
[rα+(1− r)A][rδ +(1− r)C]
+ν{1− [rβ +(1− r)B]2}
}
ρ .
(53)
Through some calculations, we obtain
T =
−E +√E2−4DF
2Dη0
, (54)
A = α+
Tη0[rβ +(1− r)B]
ρ , (55)
δ = ρ(B−β)
rη , (56)
where
D :=
ν{1− [rβ +(1− r)B]2}
ρ , (57)
E := (B−β)[rα +(1− r)A], (58)
F :=
−ρ(B−β)
r
, (59)
ˆY :=Y
(
rα+(1− r)A, rβ +(1− r)B,
rδ +(1− r)C), (60)
ρ :=
√√√√√ [rα+(1− r)A]
2
+[rβ +(1− r)B]2
+[rδ +(1− r)C]2
, (61)
η0 :=
√
(α−A)2 +(β −B)2 +(δ −C)2
lnZ
.
(62)
When ν of Eq. (42) is equal to 0, Eq. (42)
is the Blasius equation. Therefore, we can
rewrite Eq. (54) as
T =
2ρ
r[rα+(1− r)A]η0 . (63)
The above derivation of the governing equa-
tions (48)-(63) is stemmed from by letting the
two F in Eqs. (19) and (26) be equal, which
is essentially identical to the specification of
G(T ) = G(r) in terms of the Lie group ele-
ments G(T ) and G(r).
For a specified r, Eqs. (54), (55), (56) and
(63) can be used to generate the new (A, T , δ )
by repeating the above process in Eqs. (48)-
(63) until (A, T , δ ) converges according to a
given stopping criterion with ε1 = 10−10:√
(Ai+1 −Ai)2 +(Ti+1−Ti)2 +(δi+1−δi)2
≤ ε1. (64)
If δ is available, we can return to Eqs. (40)-
(44) but with merely integrating the following
equations by a forward integration scheme as
the one given in Section 2:
y′1 = y2, (65)
A New Shooting Method for Solving Boundary Layer Equations 9
converges according to a given stopping cri-
terion:√
(Ai+1 −Ai)2 +(δi+1−δi)2 +(Ci+1−Ci)2
≤ ε2, (84)
which means that the norm of the difference
between the ι + 1-th and the ι-th iterations of
(A, δ , X) is smaller that a given stopping cri-
terion ε2 = 10−10. If δ is available, we can
return to Eqs. (71)-(76) and integrate them to
obtain y2(1). The above process can be done
for all r in the interval of r ∈ (0,1). Among
these solutions we pick up r, which leads to
the smallest error of |y2(1)−1| in Eq. (75),
since y2(1) = 1 is our target at the end bound-
ary. That is,
min
r∈(0,1)
|y2(1)−1| . (85)
4 Numerical results and discussions
Solutions of the Falkner-Skan equation have
been investigated in the literature by varying
the values of ν . The solutions correspond-
ing to ν > 0 stand for accelerating flows;
those corresponding to ν = 0 are known as
constant flows; and those corresponding to
ν < 0 are called decelerating flows. It is
known that physically relevant solutions ex-
ist only for −0.1988 ≤ ν ≤ 2. Following
Section 3, when the factor ν is equal to 0.5
(Homann’s solution), 1 (Hiemenz solution)
and 2 (exponentially-varying outer flow), we
apply the Lie-group shooting method to the
Falkner-Skan equation with an initial (A, T ,
δ ) = (3, 5, 2) and through some trials we
take ρ = 0.6515421, ρ = 0.658208, and ρ =
0.6625697, respectively. By using a stepsize
Δξ = 0.0001 the numerical results are shown
in Table 1. Moreover, when the factor ν is
equal to -0.1, -0.12, -0.15, -0.18, and -0.1988,
we apply the Lie-group shooting method to
the Falkner-Skan equation with an initial (A,
δ , C) = (6, 1, 0) and through some trials, we
take r = 0.6153, r = 0.6099, r = 0.6065, r =
0.6165, and r = 0.6225, respectively. By us-
ing a stepsize Δξ = 0.001 the numerical re-
sults are shown in Table 1.
For the case of ν < 0, there also exists the
second solution, which corresponds to nega-
tive value of δ as shown in Table 2. When
the factor ν is equal to -0.1, -0.12, -0.15, and
-0.18, we take ρ = 0.8543, r = 0.8196, r =
0.7696, and r = 0.7237. As an example for the
case of ν < 0, we are considered ν = −0.1
in Fig. 1, where ξ∞ = 10 was fixed. In Fig.
1(a), we plot the error of target with respect
to r. It can be seen that there are two min-
imum points as marked by a and b. When
the ranges for minima are identified, we can
pick up more correct value of ρ by search-
ing the minima in more refined ranges. When
the missing initial conditions are available,
with all given initial conditions we can use
the RK4 method to integrate Eqs. (71)-(73).
There appear two solutions which are marked
by α and β for f ′ in Fig. 1(b) and f ′′ in Fig.
1(c). The situation of multiple solutions oc-
curs only for −0.1988< ν < 0, and these so-
lutions are said to stand for reverse flows. Our
numerical method is able to attain the solu-
tions of accelerating, constant, decelerating,
and reverse flows. From Tables 1 and 2, it
is apparent that our results are in good agree-
ment with those reported previously in the lit-
erature.
When the factor ν is equal to 0, we apply
the Lie-group shooting method to the Blasius
equation with an initial (A, δ ) = (3, 2) and
through some trials, we take r = 0.520748.
By using a stepsize Δξ = 0.0001 the numer-
ical results are shown in Fig. 2 and Table 3.
From Table 3, it is obvious that our results
are in excellent agreement with those given
by Cortell (2005).
A New Shooting Method for Solving Boundary Layer Equations 11
0
4
8
f
0.0
0.5
1.0
f '
0 1 2 3 4 5 6 7 8 9
ξ
0.0
0.2
0.4
0.6
f "
Figure 2: Variations with respect to ξ of functions f , f ′ and f ′′ for the Blasius equation.
A New Shooting Method for Solving Boundary Layer Equations 13
References
Abussita, A. M. M. (1994): A note on a cer-
tain boundary-layer equation. Appl. Math.
Comput., vol. 64, pp. 73–77.
Asaithambi, A. (1998): A finite-difference
method for the Falkner Skan equation. Appl.
Math. Comput., vol. 92, pp. 135–141.
Asaithambi, A. (2004a): A second-order
finite-difference method for the Falkner Skan
equation. Appl. Math. Comput., vol. 156, pp.
779–786.
Asaithambi, A. (2004b): Numerical solu-
tion of the Falkner Skan equation using piece-
wise linear functions. Appl. Math. Comput.,
vol. 159, pp. 267–273.
Asaithambi, A. (2005): Solution of the
Falkner Skan equation by recursive evalua-
tion of Taylor coefficients. J. Comput. Appl.
Math., vol. 176, pp. 203–214.
Asaithambi, N. S. (1997): A numerical
method for the solution of the Falkner Skan
equation. Appl. Math. Comput., vol. 81, pp.
259–264.
Blasius, H. (1908): Grenzschichten in Flüs-
sigkeiten mit kleiner Reibung. Zeitschrift für
Mathematik und Physik, vol. 56, pp. 1–37.
Cebeci, T.; Keller, H. B. (1971): Shoot-
ing and parallel shooting methods for solving
the Falkner-Skan boundary-layer equation. J.
Comput. Phys., vol. 7, pp. 289-300.
Chang, J.-R.; Liu, C.-S.; Chang, C.-W.
(2007a): A new shooting method for quasi-
boundary regularization of backward heat
conduction problems. Int. J. Heat Mass
Transfer, vol. 50, pp. 2325-2332.
Chang, C.-W.; Liu, C.-S.; Chang, J.-R.
(2007b): The Lie-group shooting method for
quasi-boundary regularization of backward
heat conduction problems. ICCES on line
Journal, vol. 3, pp. 69-79.
Chang, J.-R.; Chang, C.-W.; Liu, C.-S.
(2008): The Lie-group shooting method for
solving classical Blasius flat-plate problem.
CMC: Computers, Materials & Continua,
vol. 7, pp. 139-153.
Chang, C.-W.; Liu, C.-S.; Chang, J.-R.
(2008): A new shooting method for quasi-
boundary regularization of multi-dimensional
backward heat conduction problems. J. Chin.
Inst. Engineers, accepted.
Coppel, W. A. (1960): On a differential
equation of boundary layer theory. Philos.
Trans. R. Soc. of London. Series A, vol. 253,
pp. 101–136.
Cortell, R. (2005): Numerical solutions of
the classical Blasius flat-plate problem. Appl.
Math. Comput., vol. 170, pp. 706–710.
Falkner, V. M.; Skan, S. W. (1931): Some
approximations of the boundary layer equa-
tions. Philos. Magazine, vol. 12, pp. 865–
896.
Hartree, D. R. (1937): On an equation occur-
ring in Falkner and Skan’s approximate treat-
ment of the equations of the boundary layer.
Proc. Cambridge Philos. Soc., vol. 33, pp.
223-239.
He, J. H. (1999): Approximate analytical so-
lution of Blasius’ equation. Commun. Non-
linear Sci. Numer. Simulation, vol. 4, pp.
75-78.
He, J. H. (2003): A simple perturbation ap-
proach to Blasius equation. Appl. Math.
Comp., vol. 140, pp. 217-222.
Howarth, L. (1938): On the solution of the
laminar boundary layer equations. Proc. R.
Soc. London A, vol. 164, pp. 547-579.
Khabibrakhmanov, I. K.; Summers, D.
(1998): The use of generalized Laguerre
polynomials in spectral methods for nonlin-
ear differential equations. Comp. Math.
Appl., vol. 36, pp. 65-70.
Kuo, B.-L. (2003): Application of the differ-
ential transformation method to the solutions
of the Falkner Skan wedge flow. Acta Mech.,
A New Shooting Method for Solving Boundary Layer Equations 15
ity of the flow in the laminar boundary layer
between parallel streams. Proc. Cambridge
Philos. Soc., vol. 50, pp. 105–124.
Na, T. Y. (1979): Computational methods in
engineering boundary value problems. Aca-
demic Press, New York.
Özisik, M. N. (1979): Basic Heat Transfer.
McGraw-Hill, New York.
Padé, O. (2003): On the solution of Falkner-
Skan equations, J. Math. Anal. Appl., vol.
285, pp. 264–274.
Potter, O. E. (1957): Mass transfer between
co-current fluid streams and boundary layer
solutions, Chem. Eng. Sci., vol. 6, pp. 170–
182.
Rosenhead, L. (1963): Laminar boundary
layer. Clarendon Press, Oxford.
Salama, A. A. (2004): Higher-order method
for solving free boundary-value problems,
Numer. Heat Transfer, Part B: Fundamentals
vol. 45, pp. 385–394.
Salama, A. A.; Mansour, A. A. (2005):
Fourth-order finite-difference method for
third-order boundary-value problems, Numer.
Heat Transfer, Part B: Fundamentals vol. 47,
pp. 383–401.
Schlichting, H. (1979): Boundary layer the-
ory. McGraw-Hill, New York.
Sher, I.; Yakhot, A. (2001): New approach
to the solution of the Falkner-Skan equation,
AIAA J., vol. 39, pp. 965–967.
Smith, A. M. O. (1954): Improved solutions
of the Falkner and Skan boundary-layer equa-
tion. Institute of the Aeronautical Sciences,
SMF Fund Paper, No. FF-IO.
Töpfer, C. (1912): Bemerkungen zu dem
Aufsatz von H. Blasius: Grenzschichten in
Flüssigkeiten mit kleiner Reibung. Zeitschrift
für Mathematik und Physik, vol. 61, pp. 397-
398.
Veldman, A. E. P.; Van der Vooren, A. I.
(1980): On generalized Falkner-Skan equa-
tions, J. Math. Anal. Appl., vol. 75, pp. 101–
111.
Wang, L. (2004): A new algorithm for solv-
ing classical Blasius equation, Appl. Math.
Comput., vol. 157, pp. 1–9.
Weyl, H. (1942): On the differential equa-
tions of the simplest boundary-layer problem.
Annals of Math., vol. 43, pp. 381-407.
Yu, L.-T.; Chen, C.-K. (1998): The solu-
tion of the Blasius equation by the differen-
tial transformation method. Math. Comput.
Model., vol. 28, pp. 101-111.
Zaturska, M. B.; Banks, W. H. H. (2001):
A new solution branch of the Falkner-Skan
equation, Acta Mech., vol. 152, pp. 197–201.
140 Copyright c© 2008 Tech Science Press CMC, vol.7, no.3, pp.139-153, 2008
guerre polynomials to compute a spectral solution
of the Blasius equation on a semi-infinite interval;
however, this method involves many calculations
for nonlinear algebraic equations. For approxi-
mating the solution of the Blasius equation, He
(1999) proposed the variational iteration method
and Lin (1999) employed the parameter iteration
method to deal with this problem. Recently, He
(2003) has coupled the iteration method with the
perturbation method to solve the Blasius equa-
tion. Later, Wang (2004) even proposed the Ado-
mian decomposition method to the transforma-
tion of the Blasius equation. Abbasbandy (2007)
also employed the same approach and compared it
with the homotopy perturbation method. Further-
more, Hashim (2006) commented on “a new al-
gorithm for solving classical Blasius equation” by
Wang (2004). As for solutions and error estimates
of the Blasius equation, Lee and Hung (2002)
proposed the modified group preserving scheme
with the shooting method; however, their method
shows complicated in algorithms and seems indi-
rect to solve the Blasius equation. After that, Lee
(2006) employed the particle swarm optimization
method to solve the Blasius equation. The merit
of this approach is that the computer storage cell
requirements are less than the one with the fi-
nite element method. In addition, Ahmad and Al-
Barakati (2008) derived a short analytical expres-
sion ([4/3] Pade approximant) for the derivative of
the solution. The approximant for f ′(ξ ) is slightly
modified to the influence that the resulting expres-
sion stands for the function on the entire domain
[0, ∞) with a remarkable accuracy; nevertheless,
the computational procedures of this approach are
still complicated.
In this paper, we propose a Lie-group shooting
method to tackle the classical Blasius flat-plate
problem. Our method of boundary value prob-
lems (BVPs) is based on the group preserving
scheme (GPS) developed by Liu (2001) for the
integration of initial value problems. The GPS is
very effective to cope with the ordinary differen-
tial equations (ODEs) with special structures as
shown by Liu (2005) for stiff equations and Liu
(2006a) for ODEs with constraints. Moreover,
a past cone structure and a backward GPS have
been successfully developed, such that the one-
step backward GPS has been employed to solve
the backward in time Burgers equation by Liu
(2006b), and the backward in time heat conduc-
tion equation by Liu, Chang and Chang (2006).
In Liu (2006c, 2006d, 2006e) a Lie-group shoot-
ing method (LGSM) is first developed to solve
the BVPs of the second order ODEs. There-
after, Chang, Liu and Chang (2007) have used
the LGSM to solve the backward heat conduc-
tion problem, and then Liu (2008) has extended
the LGSM to estimate the thermophysical prop-
erty of nonhomogeneous heat conductivity with
an accurate result. It will be evident that our ap-
proach can be applied to the classical Blasius flat-
plate problem, since we are able to search for the
missing initial condition through a minimum so-
lution of r in a compact space of r ∈ (0, 1), where
the factor r is used in a generalized mid-point rule
for the Lie group of one-step GPS. Especially, the
proposed scheme is easy to implement and time
saving. Through this study, we may have an easy-
implementation LGSM used in the calculations of
the classical Blasius flat-plate problem and the ac-
curacy of the proposed scheme will be seen better
than other numerical methods.
2 One-step GPS
2.1 The GPS
Although we do not know previously the symme-
try group of nonlinear differential equations sys-
tem, Liu (2001) has embedded it into an aug-
mented system and found an internal symmetry
of the new system. That is, for an ODEs system
with dimensions n:
u˙ = f(u, t), u ∈ Rn, t ∈ R, (1)
we can embed it into the following n+1-
dimensional augmented system:
d
dt X :=
d
dt
[
u
‖u‖
]
=
[
0n×n f(u,t)‖u‖
fT(u,t)
‖u‖ 0
] [
u
‖u‖
]
. (2)
It is obvious that the first row in Eq. (2) is the
same as the original equation (1), but the inclu-
sion of the second row in Eq. (2) gives us a
142 Copyright c© 2008 Tech Science Press CMC, vol.7, no.3, pp.139-153, 2008
2.3 A Lie group mapping between two points
on the cone
Let us define a new vector
F :=
ˆf
‖uˆ‖ , (19)
such that Eqs. (14), (17) and (18) can also be ex-
pressed as
G =
[
In + (a−1)‖F‖2 FF
T bF
‖F‖
bFT
‖F‖ a
]
, (20)
a = cosh(T ‖F‖) , (21)
b = sinh(T ‖F‖) , (22)
respectively. From Eqs. (13) and (20) it follows
that
uT = u0 +ηF, (23)
‖uT‖= a‖u0‖+bF ·u0‖F‖ , (24)
where
η := (a−1)F ·u0 +b‖u0‖‖F‖‖F‖2 . (25)
Substituting
F =
1
η (uT −u0) (26)
into Eq. (24), we obtain
‖uT‖
‖u0‖ = a+b
(uT −u0) ·u0
‖uT −u0‖‖u0‖ , (27)
where
a = cosh
(
T ‖uT −u0‖
η
)
, (28)
b = sinh
(
T ‖uT −u0‖
η
)
(29)
are obtained by inserting Eq. (26) for F into Eqs.
(21) and (22).
Let
cosθ := (uT −u0) ·u0‖uT −u0‖‖u0‖ , (30)
S := T ‖uT −u0‖ , (31)
and from Eqs. (27)-(29) it follows that
‖uT‖
‖u0‖ = cosh
(
S
η
)
+cosθ sinh
(
S
η
)
. (32)
By defining
Z := exp
(
S
η
)
, (33)
we obtain a quadratic equation for Z from Eq.
(32):
(1+cosθ )Z2− 2‖uT‖‖u0‖ Z +1−cosθ = 0. (34)
The solution is found to be
Z =
‖uT ‖
‖u0‖ +
√(‖uT ‖
‖u0‖
)2
−1+cos2 θ
1+cosθ , (35)
and then from Eqs. (33) and (31) we obtain
η = T ‖uT −u0‖lnZ . (36)
Thus, between any two points (u0, ‖u0‖) and
(uT , ‖uT‖) on the cone, there exists a single-
parameter Lie group element G(T ) ∈ SOo(n,1)
mapping (u0, ‖u0‖) onto (uT , ‖uT ‖), which is
given by[
uT
‖uT‖
]
= G(T)
[
u0
‖u0‖
]
, (37)
where G is uniquely determined by u0 and uT
through the following equations:
G(T ) =
[
In+ (a−1)‖F‖2 FF
T bF
‖F‖
bFT
‖F‖ a
]
, (38)
a = cosh(T ‖F‖) , (39)
b = sinh(T ‖F‖) , (40)
F =
1
η (uT −u0), (41)
in which η is still calculated by Eq. (36).
144 Copyright c© 2008 Tech Science Press CMC, vol.7, no.3, pp.139-153, 2008
where
ˆY := Y (rα+(1− r)A, rδ +(1− r)C), (58)
ρ :=
√
[rα+(1− r)A]2 +[rβ +(1− r)B]2
+[rδ +(1− r)C]2 .
(59)
The above derivation of the governing equations
(52)-(59) is stemmed from by letting the two F’s
in Eqs. (19) and (41) be equal, which is es-
sentially identical to the specification of G(T ) =
G(r) in terms of the Lie group elements G(T ) and
G(r).
For a specified r and the given vector field Y, Eqs.
(55), (56) and (57) can be used to generate the new
(A, T , δ ) by repeating the above process in Eqs.
(52)-(59) until (A, T , δ ) converges according to a
given stopping criterion:
√
(Ai+1−Ai)2+(Ti+1−Ti)2 +(δi+1−δi)2 ≤ ε1,
(60)
which means that the norm of the difference be-
tween the ι+1-th and the ι-th iterations of (A, T ,
δ ) is smaller than a given stopping criterion ε1,
say ε1 = 10−10. If δ is available, we can return to
Eqs. (44)-(49) but with merely integrating the fol-
lowing equations by a forward integration scheme
as the one given in Section 2:
y′1 = y2, (61)
y′2 = y3, (62)
y′3 =
−y1y3
a
, (63)
y1(0) = α , (64)
y2(0) = β , (65)
y3(0) = δ . (66)
So far, we have not yet said that how to deter-
mine r. Let yrn(T ) denote the above solution
of yn at T . We start from an r to determine
δ by Eqs. (52)-(60) and then numerically inte-
grate Eqs. (61)-(66) from t = 0 to τ = T , and
compare the end values of yr2(T) and yr3(T) with
the exact B and X . Then, we apply the mini-
mum norm to fit two targets to select a suitable r,
which requires us to calculate Eqs. (61)-(66) at
each calculation of
√
(yr2−B)2 +(yr3−C)2, un-
til
√
(yr2−B)2 +(yr3−C)2 is smaller enough to
satisfy the criterion of
√
(yr2−B)2 +(yr3−C)2 <
εmin, where εminis a given error tolerance, say
εmin = 0.02. Because the numerical method is
very stable, we can fast carry off the correct range
of r through some trials and modifications.
4 Interpretative results
Following Section 3, when the factor a is equal
to 2, we apply the LGSM to the classical Blasius
flat-plate problem with an initial (A, δ ) = (3, 2).
Through some trials we took r = 0.627891. By
using a stepsize Δξ = 0.0001 the numerical re-
sults are shown in Fig. 1 and Table 1, respectively.
From Table 1, it is apparent that our results are
in great agreement with those given by Howarth
(1938).
When the factor a is equal to 1, 1.2, 1.5 and 1.8,
we apply the LGSM to the same problem with an
initial (A, δ ) = (3, 2) and through some trials we
took r = 0.520748, r = 0.5502778, r = 0.5851937
and r = 0.612575, respectively. By using a step-
size Δξ = 0.0001, the numerical results are shown
in Table 2. From Table 2, it is obvious that func-
tions f and f ′ decrease with the increasing a. Ev-
idently, the function f ′′ at ξ= 0 decreases with the
increasing a. The numerical results for a = 1.2,
1.5, 1.8 and 2 are plotted in Figs. 2 to 5, respec-
tively.
5 Conclusions
There are two significant points deserved further
inform in this paper. One is the erection of a one-
step group G(T ) and the full use of Eqs. (23)
and (24), which are the Lie group transformation
between initial conditions and final conditions in
the augmented Minkowski space. The other is the
use of a generalized mid-point rule to erect an-
other Lie group element G(r). In order to evalu-
ate the missing initial conditions for the boundary
value problems of the Blasius equation, we have
employed the equation G(T ) = G(r) to derive
146 Copyright c© 2008 Tech Science Press CMC, vol.7, no.3, pp.139-153, 2008
0
4
8
f
0.0
0.5
1.0
f '
0 1 2 3 4 5 6 7 8 9
ξ
0.0
0.2
0.4
0.6
f "
Figure 2: Variations of functions f , f ′ and f ′′ with respect to ξ at a = 1.2.
148 Copyright c© 2008 Tech Science Press CMC, vol.7, no.3, pp.139-153, 2008
0
4
8
f
0.0
0.5
1.0
f '
0 1 2 3 4 5 6 7 8 9
ξ
0.0
0.2
0.4
f "
Figure 4: Variations of functions f , f ′ and f ′′ with respect to ξ at a = 1.8.
150 Copyright c© 2008 Tech Science Press CMC, vol.7, no.3, pp.139-153, 2008
Table 1: Values of functions f , f ′ and f ′′ with a = 2. LGSM–Lie-group shooting method; C–Cortell’s
solution (2005); H–Howarth’s solution (1938); Yu–Yu and Chen’s solution (1998)
a ξ LGSM C H Yu
2
f
0 0.00000 0.00000 0.00000 0.00000
1 0.16556 0.16557 0.16557 0.16556
2 0.65003 0.65003 0.65003 0.65002
3 1.39685 1.39682 1.39682 1.39681
4 2.30584 2.30576 2.30576 2.30575
5 3.28342 3.28330 3.28329 3.28327
6 4.27982 4.27965 4.27964 4.27962
7 5.27948 5.27927 5.27926 5.27924
8 6.27950 6.27925 6.27923 6.27921
9 7.27954 7.27925 7.27923 7.27921
f ′
0 0.00000 0.00000 0.00000 0.00000
1 0.32979 0.32978 0.32979 0.32978
2 0.62979 0.62977 0.62977 0.62977
3 0.84608 0.84605 0.84605 0.84604
4 0.95556 0.95552 0.95552 0.95552
5 0.99158 0.99155 0.99155 0.99154
6 0.99901 0.99898 0.99898 0.99897
7 0.99996 0.99993 0.99992 0.99992
8 1.00003 1.00000 1.00000 0.99999
9 1.00003 1.00000 1.00000 0.99999
f ′′
0 0.33206 0.33206 0.33206 0.33206
1 0.32301 0.32301 0.32301 0.32301
2 0.26675 0.26675 0.26675 0.26675
3 0.16136 0.16136 0.16136 0.16136
4 0.06423 0.06423 0.06424 0.06423
5 0.01590 0.01591 0.01591 0.01591
6 0.00240 0.00240 0.00240 0.00240
7 0.00022 0.00022 0.00022 0.00022
8 0.00001 0.00001 0.00001 0.00001
9 0.00000 0.00000 0.00000 0.00000
algebraic equations. Hence, we can solve them
through a minimum solution in a compact space
of r ∈ (0, 1). Various numerical examples in the
interval 1≤ a≤ 2 are examined to ensure that the
new algorithm has a fast convergence speed on
the solution of r in a pre-selected range smaller
than (0, 1) by using the minimum norm to fit two
targets, which usually require only small number
of iterations. Through this study, it can be con-
cluded that the new shooting method is accurate,
effective and stable. Its numerical implementa-
tion is very simple and the computation speed is
very fast. Therefore, it is highly advocated to be
used in the numerical computations of the classi-
cal Blasius flat-plate problem.
Acknowledgement: The corresponding author
would like to express his thanks to the National
Science Council, R. O. C. for their financial sup-
port under Grant Numbers, NSC 95-2211-E019-
078 and NSC 95-2211-E019-076.
152 Copyright c© 2008 Tech Science Press CMC, vol.7, no.3, pp.139-153, 2008
difference method for the Falkner–Skan equation.
Applied Mathematics and Computation, vol. 156,
pp. 779–786.
Asaithambi, A. (2004b): Numerical solution of
the Falkner-Skan equation using piece-wise lin-
ear functions. Applied Mathematics and Compu-
tation, vol. 159, pp. 267–273.
Asaithambi, A. (2005): Solution of the Falkner-
Skan equation by recursive evaluation of Taylor
coefficients. Journal of Computation and Applied
Mathematics, vol. 176, pp. 203–214.
Asaithambi, N.S. (1997): A numerical method
for the solution of the Falkner-Skan equation. Ap-
plied Mathematics and Computation, vol. 81, pp.
259–264.
Blasius, H. (1908): Grenzschichten in Flüs-
sigkeiten mit kleiner Reibung. Zeitschrift für
Mathematik und Physik, vol. 56, pp. 1–37.
Chang, J.-R.; Liu, C.-S.; Chang, C.-W. (2007):
A new shooting method for quasi-boundary regu-
larization of backward heat conduction problems.
International Journal of Heat and Mass Transfer,
vol. 50, pp. 2325–2332.
Cortell, R. (2005): Numerical solutions of the
classical Blasius flat-plate problem. Applied
Mathematics and Computation, vol. 170, pp.
706–710.
Hashim, I. (2006): Comments on “A new algo-
rithm for solving classical Blasius equation” by
L. Wang, Applied Mathematics and Computation,
vol. 176, pp. 700–703.
He, J.H. (1999): Approximate analytical solution
of Blasius’ equation, Communications in Nonlin-
ear Science & Numerical Simulation, vol. 4, pp.
75–78.
He, J.H. (2003): A simple perturbation approach
to Blasius equation, Applied Mathematics and
Computation, vol. 140, pp. 217–222.
Howarth, L. (1938): On the solution of the lami-
nar boundary layer equations. Proceedings of the
Royal Society London A, vol. 164, pp. 547–579.
Khabibrakhmanov, I.K.; Summers, D. (1998):
The use of generalized Laguerre polynomials in
spectral methods for nonlinear differential equa-
tions, Computers and Mathematics with Applica-
tions, vol. 36, pp. 65–70.
Lee, H.-C.; Hung, C.-I. (2002): Solutions and
error estimates of the Blasius equation by using
the modified group preserving scheme, Journal of
the Chinese Society of Mechanical Engineers, vol.
23, pp. 111–119.
Lee, Z.-Y. (2006): Method of bilaterally bounded
to solution Blasius equation using particle swarm
optimization, Applied Mathematics and Compu-
tation, vol. 179, pp. 779–786.
Liao, S.-J. (1997): A kind of approximate solu-
tion technique which does not depend upon small
parameters-II an application in fluid mechanics.
International Journal of Non-Linear Mechanics,
vol. 32, pp. 815–822.
Liao, S.-J. (1999): An explicit, totally analytic
approximate solution for Blasius’ viscous flow
problems. International Journal of Non-Linear
Mechanics, vol. 34, pp. 759–778.
Liu, C.-S. (2001): Cone of non-linear dynamical
system and group preserving schemes. Interna-
tional Journal of Non-Linear Mechanics, vol. 36,
pp. 1047-1068.
Liu, C.-S. (2005): Nonstandard group-preserving
schemes for very stiff ordinary differential equa-
tions. CMES: Computer Modeling in Engineering
& Sciences, vol. 9, pp. 255–272.
Liu, C.-S. (2006a): Preserving constraints of dif-
ferential equations by numerical methods based
on integrating factors. CMES: Computer Model-
ing in Engineering & Sciences, vol. 12, pp. 83–
107.
Liu, C.-S. (2006b): An efficient backward group
preserving scheme for the backward in time Burg-
ers equation. CMES: Computer Modeling in En-
gineering & Sciences, vol. 12, pp. 55–65.
Liu, C.-S. (2006c): The Lie-group shooting
method for nonlinear two-point boundary value
problems exhibiting multiple solutions. CMES:
Computer Modeling in Engineering & Sciences,
vol. 13, pp. 149–163.
Liu, C.-S. (2006d): Efficient shooting methods
for the second-order ordinary differential equa-
tions. CMES: Computer Modeling in Engineering
& Sciences, vol. 15, pp. 69–86.

layer equation has a similarity solution. Hussaini and Lakin [13] showed that the solutions of
such boundary layer problems exist only up to a certain value of the velocity ratio parameter.
We assume that the moving flat plate is semi-infinite with a porous surface and that
the plate is moving at a constant speed Uw in the direction parallel to an oncoming flow
with a constant speed U∞. By the assumption of incompressibility and the conservation of
momentum, the laminar flow satisfies
∂U
∂X
+
∂V
∂Y
= 0, (1)
U
∂U
∂X
+ V
∂V
∂Y
=
1
ρ
∂τXY
∂Y
. (2)
In above, X and Y are the coordinates attached to the plate in the horziontal and perpen-
dicular directions, and U and V are respectively the velocity components of the flow in the
X and Y directions. The fluid density ρ is assumed to be a constant.
The shear stress is governed by a power law:
τXY = K
∣∣∣∣∂U∂Y
∣∣∣∣
N−1
∂U
∂Y
, (3)
where K > 0 is a constant and the power N > 0 reflects the discrepancy to the Newtonian
fluids (with N = 1), and in the case that N < 1 the power law of pseudo-plastic fluids and
N > 1 the dilatant fluids. The corresponding boundary conditions are given by
U(X, 0) = Uw, U(X, +∞) = U∞, V (X, 0) = Vw(X). (4)
After introducing a similarity variable and a stream function:
η = BXβY, φ(X, Y ) = AXσf(η) (5)
with
σ =
1
N + 1
, β = −σ, B =
(
ρU2−N∞
(N + 1)K
)1/(N+1)
, A =
U∞
B
,
we can obtain
(|f ′′(η)|N−1f ′′(η))′ + f(η)f ′′(η) = 0, (6)
subject to the boundary conditions:
f(0) = −C, f ′(0) = ξ, f ′(+∞) = 1. (7)
In above, ξ = Uw/U∞ is the velocity ratio. When ξ < 0, we have a reverse flow attached near
the boundary. When 0 < ξ < 1, the speed of the oncoming fluid is larger than that of the
plate. When ξ > 1, the speed of the moving plate is faster than the speed of the oncoming
fluid. The term C = (N + 1)BVw/U∞ is a constant related to suction if it is negative or
injection if it is positive.
When N = 1, the Blasius equation is recovered. Hussaini et al. [14] have used the
similarity technique and the Crocco transformation to study the revese flow solution for the
Blasius equation under C = 0 and ξ < 0. They showed that a boundary layer solution exists
only if the ratio of the plate velocity to the mainstream velocity is below a critical value ξ∗,
2
which are obtained by the above transformations in Eqs. (8) and (9) applied on the boundary
layer equations (6) and (7). If g is allowed to be negative, the term g1/N in Eq. (10) can be
replaced by |g|1/N .
By letting
z = (1− ξ)t + ξ, (12)
y(t) = g(z)− (1− ξ)Ct + C0, (13)
we can transform Eqs. (10) and (11) into an equivalent system:
y¨ = − (1− ξ)
2ξ + (1− ξ)3t
|y + (1− ξ)Ct− C0|1/N , 0 < t < 1, (14)
y˙(0) = 0, y(1) = c, (15)
where c = C0 − (1− ξ)C. The superimposed dot denotes the differential with respect to t.
Here, C0 is a translation constant being selected such that c > 0.
Through a symmetric extension of Eq. (14) defined in the interval of t ∈ (0, 1) into the
interval of t ∈ (−1, 0), we can write the governing equation to be
y¨ = f(t, y), , − 1 < t < 1, (16)
y(−1) = y(1) = c, (17)
where
f(t, y) = − (1− ξ)
2ξ + (1− ξ)3|t|
|y + (1− ξ)C|t| − C0|1/N . (18)
Because of the symmetric property of Eq. (16), if the condition y˙(0) = 0 can be guaranteed
to satisfy then the second condition in Eq. (17) is fulfilled automatically. In Section 5 we
can see what advantage can be gained by adjusting the two boundary conditions in Eq. (17)
being equal.
3. One-step group-preserving scheme
3.1 The group-preserving scheme
Let us write Eq. (16) in a vector form:
y˙ = f(t,y), (19)
where
y :=
[
y1
y2
]
, f :=
[
y2
f(t, y1, y2)
]
. (20)
Liu [21] has embedded Eq. (19) into an augmented system:
X˙ :=
d
dt
[
y
‖y‖
]
=
[
02×2
f(t,y)
‖y‖
fT(t,y)
‖y‖ 0
] [
y
‖y‖
]
:= AX, (21)
4
where
yˆ = ryi + (1− r)yf , (32)
fˆ = f(tˆ, yˆ), (33)
a = cosh
(
2‖fˆ‖
‖yˆ‖
)
, (34)
b = sinh
(
2‖fˆ‖
‖yˆ‖
)
. (35)
Here, we use the initial yi and the final yf through a suitable weighting factor r to calculate
G, where 0 < r < 1 is a parameter and tˆ = 2r− 1. The above method applied a generalized
mid-point rule on the calculation of G, and the resultant is a single-parameter Lie group
element G(r).
3.3 A Lie group mapping between two points on the cone
Let us define a new vector
F :=
fˆ
‖yˆ‖ , (36)
such that Eqs. (31), (34) and (35) can also be expressed as
G =

 I2 + a−1‖F‖2 FFT bF‖F‖
bFT
‖F‖ a

 , (37)
a = cosh(2‖F‖), (38)
b = sinh(2‖F‖). (39)
From Eqs. (30) and (37) it follows that
yf = yi + ηF, (40)
‖yf‖ = a‖yi‖+ bF · yi‖F‖ , (41)
where
η :=
(a− 1)F · yi + b‖yi‖‖F‖
‖F‖2 . (42)
Substituting
F =
1
η
(yf − yi) (43)
into Eq. (41) we obtain
‖yf‖
‖yi‖ = a + b
(yf − yi) · yi
‖yf − yi‖‖yi‖ , (44)
6
Thus, from Eqs. (40) and (36) we can reach a very important Lie-group shooting equation
[22]:
yf = yi + η
fˆ
‖yˆ‖ , (59)
where η is calculated by Eq. (53).
4. The Lie-group shooting method
Eqs. (16) and (17) introduced in Section 1 require both the information at the initial
point t = −1 and a terminal point t = 1. However, the usual stepping scheme requires
a complete information at the starting point t = −1. Some efforts are then required to
reconcile the stepping scheme for the integration of Eqs. (16) and (17).
From Eq. (16) it follows that
y˙1 = y2, (60)
y˙2 = f(t, y1), (61)
y1(−1) = c, y1(1) = c, (62)
y2(−1) = A, y2(1) = B, (63)
where A and B are two supplemented unknown constants, and c is a given constant.
From Eqs. (62) and (63) we can observe that
yi = y(−1) =
[
c
A
]
, yf = y(1) =
[
c
B
]
. (64)
Then, from Eq. (43) and (64) it follows that
F :=
[
F1
F2
]
=
1
η
[
0
B − A
]
. (65)
Furthermore, by inserting Eq. (64) into Eqs. (53), (52) and (47) we can derive
η =
2
√
(A− B)2
ln Z
, (66)
Z =
√
c2+B2√
c2+A2
+
√
c2+B2
c2+A2
− 1 + cos2 θ
1 + cos θ
, (67)
cos θ =
A(B − A)√
(A− B)2√c2 + A2 . (68)
From Eq. (59) and with the aid of Eqs. (32) and (33) we can obtain
rA + (1− r)B = 0, (69)
A− B + η
ρ
fˆ = 0, (70)
where
fˆ := f(2r − 1, c), (71)
ρ :=
√
c2 + [rA + (1− r)B]2 = c > 0. (72)
8
If the following condition holds
D(r) := f1 + (1− f1)2r − (1− f1)2r2 > 0, (83)
then A has a positive solution:
A =
√
(r − 1)2(1− f 21 )2c2
4Df1
. (84)
In above we have derived a closed-form formula to calculate the slope A for each r in its
admissible range. We can integrate Eqs. (60)-(63) by the following group-preserving scheme
[21]:
yn+1 = yn +
2τ 2yn · fn + 2τ‖yn‖2
‖yn‖2 − τ 2‖fn‖2 fn, (85)
where τ = h/2 is one half of the stepsize, and fn := f(tn,yn). In order to avoid to dividing
by zero at t = −1 we can replace fn by fn := f(tn + τ,yn).
For a trial r in the admissible range, we calculate A and then numerically integrate
Eqs. (60)-(63) from t = −1 to t = 0, and compare the end value of yr2(0) with the exact one
y2(0) = 0. If |yr2(0)| ≤ , where  is a given tolerance error, then the process of finding solution
is accomplished. Otherwise, we need to calculate the end values of y2(0) corresponding to
a different r1 < r or r2 > r, which are denoted by y
r1
2 (0) and y
r2
2 (0), respectively. If
yr12 (0)y
r
2(0) < 0, then there exists one root between r1 and r; otherwise, the root is located
between (r, r2). Then, we apply the half-interval method to find a suitable r, which requires
us to calculate Eqs. (60)-(63) at each of the calculation of yr2(0), until |yr2(0)| is small enough
to satisfy the criterion of |yr2(0)| ≤ .
In principle, we can increase the accuracy by imposing a smaller  on the shooting error,
which however requires more iterations. Since the numerical method is very stable we can
quickly pick up the correct value of r through some trials and modifications. Therefore,
in the following calculations we do not use the above half-interval method to pick up the
weighting factor r.
6. Numerical examples
We first consider the Blasius equation by letting N = 1 in Eq. (10):
gg′′ = −z, ξ < z < 1, (86)
g′(ξ) = C, g(1) = 0. (87)
Wang [23] have calculated the above equations with ξ = 0 and C = 0 by the Adomian
decomposition method. Liu and Chang [20] have applied the Lie-group shooting method to
solve this case with high accuracy.
In our calculation of the Blasius equation we use the Lie-group shooting method by
considering the following perturbed equation:
y¨ = f(t, y), (88)
y(−1) = c, y(1) = c, (89)
10
c A N C ξ g(ξ)
11.99739 24.60476 0.8 -0.2 -0.2 0.68214573
11.173624 22.60235 0.8 -0.2 -0.2 0.03934631
11.5681378 23.55760 0.8 -0.2 -0.2 -0.05834732
3.4517189 6.6142283 1.2 0.2 -0.2 0.1816341277
3.4443210 6.5969763 1.2 0.2 -0.2 0.024408852
3.4402885 6.5875770 1.2 0.2 -0.2 -0.061296856
7. Conclusions
In the present paper we offered a rather accurate and simple method without any itera-
tion to estimate unknown initial conditions by applying the Lie-group shooting method on
the power-law fluids. The Lie-group shooting method developed here can easily calculate
the multiple solutions under a reverse flow boundary condition, which is due to the relations
y(−1) = c(r) and y˙(−1) = A(r) given explicitly. In order to overcome the singularity we
have added a small perturbed quantity ε in the governing equation, and the initial impulse
with order 1/ε occurred at t = −1 is tackled by a first few integrations with a very small
time step with ∆t = Aε. The Lie-group shooting method allows us to search the missing
initial conditions at the left-end expressed as a closed-form function of r ∈ (0, 1), where the
best r is determined by matching the condition y˙(0) = 0, which is a natural result due to the
symmetric extension used in this paper. With a finer r, we can give very accurate numerical
results of g(ξ) up to the tenth order. This makes the new method much superior than the
conventional shooting method used in the boundary layer equation under imposed complex
boundary conditions.
Acknowledgements: Taiwan’s National Science Council project NSC-97-2221-E-002-264-
MY3 granted to the author is highly appreciated.
References
[1] H. Schlichting, Boundary Layer Theory, McGraw-Hill, New York, 1979.
[2] M.N. Ozisik, Basic Heat Transfer, McGraw-Hill, New York, 1979.
[3] A. Nachman, A. Callegari, A nonlinear singular boundary value problem in the theory
of pseudoplastic fluids, SIAM J. Appl. Math. 38 (1980) 275-281.
[4] J.J. Shu, G. Wilks, Heat transfer in the flow of a cold two-dimensional vertical liquid
jet against a hot, horizontal plate, Int. J. Heat Mass Transf. 39 (1996) 3367-3379.
[5] T.G. Hopwell, Momentum and heat transfer on a continuous moving surface in power
law fluid, Int. J. Heat Mass Transf. 40 (1997) 1853-1861.
[6] L.C. Zheng, L.X. Ma, J.C. He, Bifurcation solutions to a boundary layer problem
arising in the theory of power law fluids, Acta Math. Sci. 20 (2000) 19-26.
12
[22] C.-S. Liu, The Lie-group shooting method for nonlinear two-point boundary value
problems exhibiting multiple solutions, CMES: Computer Modeling in Engineering &
Sciences 13 (2006) 149-163.
[23] L. Wang, A new algorithm for solving classical Blasius equation, Appl. Math. Comp.
157 (2004) 1-9.
14
 
 
 
 
 
 
 
 
 
 
0.0950 0.0955 0.0960
r
-20
-10
0
10
20
30
y(0)
0.4620 0.4625 0.4630
Zero Line
 
 
Fig. 1. Plotting the variation of )0(y&  with respect to r for the Blasius equation. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
0.0 0.2 0.4 0.6 0.8 1.0
r
1E+4
1E+5
1E+6
1E+7
1E+8
y(
0)
 
 
Fig. 3. Under a critical value of ξ, we plotting the variation of )0(y&  with respect to 
r for the Blasius equation. 
 
 
 
 
 
 
 
 
 
 
0.214 0.216 0.218 0.220 0.222
r
1E-3
1E-2
1E-1
1E+0
1E+1
1E+2
1E+3
1E+4
y(
0)
-1.5
-1.0
-0.5
0.0
0.5
1.0
1.5
S
ig
n
 o
f 
y(
0)
0.214 0.216 0.218 0.220 0.222
r
(a)
(b)
 
 
Fig. 5. For a power-law fluid with N<1 andξ<0, plotting the variation of (a) )0(y& , 
and (b) the sign of )0(y&  with respect to r. 
 
 
 
 
 
 
 
 
0.246 0.247 0.248 0.249
r
1E-3
1E-2
1E-1
1E+0
1E+1
1E+2
y(
0)
-1.5
-1.0
-0.5
0.0
0.5
1.0
1.5
S
ig
n
 o
f 
y(
0)
0.246 0.247 0.248 0.249
r
(a)
(b)
 
Fig. 7. For a power-law fluid with N<1 andξ<0, plotting the variation of  (a) )0(y& , 
and (b) the sign of )0(y&  with respect to r. 
 
 
 
A new shooting method for quasi-boundary regularization
of backward heat conduction problems
Jiang-Ren Chang a, Chein-Shan Liu b,*, Chih-Wen Chang a
aDepartment of Systems Engineering and Naval Architecture, National Taiwan Ocean University, Keelung 20224, Taiwan
bDepartment of Mechanical and Mechatronic Engineering, National Taiwan Ocean University, Keelung 20224, Taiwan
Received 7 August 2006
Available online 30 January 2007
Abstract
A quasi-boundary regularization leads to a two-point boundary value problem of the backward heat conduction equation. The ill-
posed problem is analyzed by using the semi-discretization numerical schemes. Then the resulting ordinary diﬀerential equations in
the discretized space are numerically integrated towards the time direction by the Lie-group shooting method to ﬁnd the unknown initial
conditions. The key point is based on the erection of a one-step Lie group element G(T) and the formation of a generalized mid-point Lie
group element G(r). Then, by imposing GðT Þ ¼ GðrÞ we can search for the missing initial conditions through a minimum discrepancy of
the targets in terms of the weighting factor r 2 ð0; 1Þ. Several numerical examples were worked out to persuade that this novel approach
has good eﬃciency and accuracy. Although the ﬁnal temperature is almost undetectable and/or is disturbed by large noise, the Lie group
shooting method is stable to recover the initial temperature very well.
 2006 Elsevier Ltd. All rights reserved.
Keywords: Backward heat conduction problem; Lie-group shooting method; Strongly ill-posed problem; Quasi-boundary regularization; Two-point
boundary value problem; Group preserving scheme
1. Introduction
The aim of this paper is to study an ill-posed problem
that emerges from the one-dimensional backward heat con-
duction equation, but before proceeding we recall what is
meant by an ill-posed problem in partial diﬀerential equa-
tions. One may view a problem as being well-posed if a
unique solution exists which depends continuously on the
data; otherwise, it is an ill-posed problem. Mathematically
speaking, the inverse problem is much more diﬃcult to deal
with than the direct one. In addition, the ill-posed problem
is very sensitive to the measurement errors.
The backward heat conduction problem (BHCP) is a
severely ill-posed problem in the sense that the solution is
unstable for a given ﬁnal data. In order to calculate the
BHCP, there appears certain progress in this issue, includ-
ing the boundary element method [1], the iterative bound-
ary element method [2–4], the regularization technique
[5,6], the operator-splitting method [7], the implicit inver-
sion method [8], the lattice-free high-order ﬁnite diﬀerence
method [9], the contraction group technique [10], the
method of fundamental solutions [11] and the backward
group preserving scheme [12]. A recent review of the
numerical BHCP was provided by Chiwiacowsky and de
Campos Velho [13].
After reformulating the BHCP by a quasi-boundary
value regularization, it results in a two-point boundary-
value problem (BVP) in the time-domain. Our approach
of BVPs is based on the group preserving scheme (GPS)
developed by Liu [14] for the integration of initial value
problems (IVPs). The GPS is very eﬀective to deal with
the ordinary diﬀerential equations (ODEs) with special
structures as shown by Liu [15] for stiﬀ equations and
Liu [16] for ODEs with constraints. The degree of the
0017-9310/$ - see front matter  2006 Elsevier Ltd. All rights reserved.
doi:10.1016/j.ijheatmasstransfer.2006.10.050
* Corresponding author. Tel.: +886 224 622 192x3252; fax: +886 224
620 836.
E-mail address: csliu@mail.ntou.edu.tw (C.-S. Liu).
www.elsevier.com/locate/ijhmt
International Journal of Heat and Mass Transfer 50 (2007) 2325–2332
from the data measured at time T is a rather diﬃcult
issue because of the inﬂuence of noise and computational
error.
Here, we are going to calculate the BHCP by a semi-dis-
cretization method [10,17], which replaces Eq. (1) by a set
of ODEs:
_uiðtÞ ¼ 1ðDxÞ2 ½uiþ1ðtÞ  2uiðtÞ þ ui1ðtÞ; ð4Þ
where Dx ¼ l=ðnþ 1Þ, xi ¼ iDx and uiðtÞ ¼ uðxi; tÞ: One way
to solve the ill-posed problem is to perturb it into a well-
posed one. A number of perturbing techniques have been
proposed, including a biharmonic regularization developed
by Latte´s and Lions [21], and a hyperbolic regularization
proposed by Ames and Cobb [22]. It seems that Showalter
[23] ﬁrst regularized the BHCP by considering a quasi-
boundary-value approximation to the ﬁnal value problem,
that is, to supersede Eq. (3) by
auðx; 0Þ þ uðx; T Þ ¼ hðxÞ: ð5Þ
The problems (1), (2) and (5) can be shown to be well-
posed for each a > 0 as that done by Clark and Oppenhei-
mer [24] for the heat conduction inverse problem. Ames
and Payne [25] have investigated those regularizations from
the continuous dependence of solution on the regularized
parameter.
3. A new method for BHCP
Let us write
u :¼
u1
u2
..
.
un
2
66664
3
77775; f :¼
1
ðDxÞ2
u2ðtÞ  2u1ðtÞ þ u0ðtÞ
u3ðtÞ  2u1ðtÞ þ u1ðtÞ
..
.
unþ1ðtÞ  2unðtÞ þ un1ðtÞ
2
66664
3
77775:
ð6Þ
The dependence of f on t is owing to u0ðtÞ and unþ1ðtÞ. Then
Eq. (4) for i ¼ 1; . . . ; n can be expressed as a vector form:
_u ¼ fðu; tÞ; u 2 Rn; t 2 R; ð7Þ
in which Eq. (5) as being a constraint is written to be
auð0Þ þ uðT Þ ¼ h; ð8Þ
where
h :¼
hðx1Þ
hðx2Þ
..
.
hðxnÞ
2
66664
3
77775: ð9Þ
We are going to develop a multi-dimensional LGSM,
which aims to ﬁnd the initial value u(0), such that the
numerical solution uðT Þ can match Eq. (8) very well for
arbitrary a > 0:
3.1. The GPS
Liu [14] has embedded Eq. (7) into the following nþ 1-
dimensional augmented system:
_X :¼ d
dt
u
kuk
 
¼
0nn
fðu;tÞ
kuk
fTðu;tÞ
kuk 0
2
4
3
5 u
kuk
 
:¼ AX; ð10Þ
where A is an element of the Lie algebra soðn; 1Þ satisfying
ATgþ gA ¼ 0; ð11Þ
with
g ¼ In 0n1
01n 1
 
ð12Þ
a Minkowski metric. Here, In is the identity matrix of order
n, and the superscript T denotes the transpose. The aug-
mented variable X satisﬁes the cone condition:
XTgX ¼ u  u kuk2 ¼ 0: ð13Þ
Therefore, Liu [14] has developed a group-preserving
numerical scheme as follows:
Xkþ1 ¼ GðkÞXk; ð14Þ
where Xk denotes the numerical value of X at the discrete
time tk, and GðkÞ 2 SOoðn; 1Þ satisﬁes
GTgG ¼ g; ð15Þ
detG ¼ 1; ð16Þ
G00 > 0; ð17Þ
where G00 is the 00th component of G.
3.2. Generalized mid-point rule
Applying scheme (14) to Eq. (10) with a speciﬁed initial
condition Xð0Þ ¼ X0, we can compute the solution XðtÞ by
GPS. Assuming that the total time T is divided by K steps,
that is, the time stepsize used in GPS is Dt ¼ T=K; and
starting from an initial augmented condition X0 ¼
ððu0ÞT; ku0kÞT; we may calculate the value Xf ¼ ððuðT ÞÞT;
kuðT ÞkÞT at time t ¼ T .
By applying Eq. (14) step-by-step, we can obtain
Xf ¼ GKðDtÞ . . .G1ðDtÞX0; ð18Þ
where Xf approximates the exact XðT Þ with a certain accu-
racy depending on Dt. However, let us recollect that each
Gi, i ¼ 1; . . . ;K; is an element of the Lie group SOoðn; 1Þ,
and by the closure property of the Lie group,
GKðDtÞ . . .G1ðDtÞ is also a Lie group denoted by G. Hence,
we have
Xf ¼ GX0: ð19Þ
This is a one-step transformation from X0 to Xf [26,27],
where Liu has applied the above method to estimate
the temperature-dependent heat conductivity and heat
J.-R. Chang et al. / International Journal of Heat and Mass Transfer 50 (2007) 2325–2332 2327
Eqs. (44) and (45) can be utilized to solve u0 as follows:
u0 ¼ 1
1þ a h g
f^
ku^k
" #
; ð46Þ
where g is calculated by Eq. (42).
The above derivation of the governing equations (44)–
(46) is stemmed from by letting the two F’s in Eqs. (25)
and (32) be equal, which, in terms of the Lie group ele-
ments G(T) and G(r), is essentially identical to the speciﬁ-
cation of GðT Þ ¼ GðrÞ. For a speciﬁed r, Eqs. (46) can be
used to generate the new u0, until u0 converges according
to a given stopping criterion:
ku0iþ1  u0i k 6 e; ð47Þ
which means that the norm of the diﬀerence between the
iþ 1th and the ith iterations of u0 is smaller than a given
stopping criterion e. If u0 is available, we can return to
Eq. (7) and integrate it to obtain uðT Þ. The above process
can be done for all r in the interval of r 2 ð0; 1Þ. Among
these solutions we pick up the best r, which leads to the
smallest error of Eq. (8). That is,
min
r2ð0;1Þ
kau0 þ uf  hk: ð48Þ
In the present paper, we will use the GPS to do those inte-
grating works.
4. Numerical examples
4.1. Example 1
In order to compare our numerical results with those
obtained by Lesnic et al. [28], Mera et al. [2,3,11] and Liu
et al. [12], let us ﬁrst consider a one-dimensional bench-
mark BHCP:
ut ¼ uxx; 0 < x < 1; 0 < t < T ; ð49Þ
with the boundary conditions
uð0; tÞ ¼ uð1; tÞ ¼ 0; ð50Þ
and the ﬁnal time condition
uðx; T Þ ¼ sinðpxÞ expðp2T Þ: ð51Þ
The data to be retrieved is given by
uðx; tÞ ¼ sinðpxÞ expðp2tÞ; T > tP 0: ð52Þ
The one-dimensional spatial domain [0,1] is discretized by
N ¼ nþ 2 points including two boundary points, at which
the two boundary conditions u0ðtÞ ¼ unþ1ðtÞ ¼ 0 are im-
posed on the totally n diﬀerential equations obtained from
Eq. (4). We apply the LGSM developed in Section 3 for
this backward problem of n diﬀerential equations with
the ﬁnal data given by Eq. (51).
Let us investigate some very severely ill-posed cases of
this benchmark BHCP, where T ¼ 1:5; 2:5; 3 were
employed such that when the ﬁnal data are in the order
of Oð107Þ–Oð1013Þ, we attempt to use the LGSM to
retrieve the desired initial data of sin px, which is in the
order of O(1). Before that we use this example to demon-
strate how to pick up the best r as speciﬁed by Eq. (48).
We plot the error of mis-matching the target with respect
to r in Fig. 1. It can be seen that there is a minimum point
as marked by the black point. When the range for search-
ing the minima is identiﬁed, we can pick up a more correct
value of r by searching for the minima in a more reﬁned
range. On the other hand, we should stress that in all the
calculations, we can also employ a ¼ 0 without any diﬃ-
culty because Eq. (46) is still applicable.
For this very diﬃcult problem, the method proposed by
Lesnic et al. [28] was unstable when T > 1. Conversely, the
results given by the LGSM with Dx ¼ 1=80 and Dt ¼ 0:01
for T ¼ 1:5, and Dx ¼ 1=100 and the same stepsize for
T ¼ 2:5; 3 were rather promising.
In Fig. 2, we present the numerical errors for these three
cases. The maximum error for the case of T ¼ 3 is about
2:8 103: Liu et al. [12] have made a great progress for
the computations of BHCPs by the backward group pre-
serving scheme. For a severe case up to T ¼ 2:4, they have
provided a stable and accurate solution with the maximum
error occurring at x ¼ 0:5 about 0.008. The present results
are better than that paper, even for the severe case up to
T = 3, the maximum error occurring at x = 0.5 is about
0.0028.
To the authors’ best knowledge, there is no open report
that the numerical methods for this severely ill-posed
BHCP can provide more accurate results than us. Upon
compared with the numerical results computed by Mera
[11] with the method of fundamental solution (MFS)
together with the Tikhonov regularization technique (see
Fig. 5 of the above cited paper), we can say that the LGSM
is much better than the MFS.
1.0E-11 1.2E-11 1.4E-11 1.6E-11 1.8E-11 2.0E-11
r
1
10
100
Er
ro
r o
f m
is-
m
at
ch
in
g 
th
e 
ta
rg
et
Minimum error point
Fig. 1. For Example 1 we plot the error of mis-matching the target with
respect to r.
J.-R. Chang et al. / International Journal of Heat and Mass Transfer 50 (2007) 2325–2332 2329
This example is a hard benchmark problem of BHCP to
test the numerical performance of new numerical methods.
From Fig. 3 it can be seen that at the middle point our
method leads to bad solution. All that showing the present
method still has room to ameliorate its accuracy, and we
will propose another approach to attain a better result in
a forthcoming paper.
4.3. Example 3
Let us further consider another one-dimensional bench-
mark BHCP:
ut ¼ uxx; p < x < p; 0 < t < T ; ð58Þ
with the boundary conditions
uðp; tÞ ¼ uðp; tÞ ¼ 0; ð59Þ
and the ﬁnal time condition
uðx; T Þ ¼ ea21T sinða1xÞ: ð60Þ
The exact solution is given by
uðx; tÞ ¼ ea21t sinða1xÞ; ð61Þ
where a1 2 N is a positive integer.
We can demonstrate this ill-posed problem further by
considering the L2-norms of u and its ﬁnal data:
kuðx; tÞk2L2 ¼
Z T
0
Z p
p
½ea21t sinða1xÞ2 dxdt
¼ 1
2a21
ðe2a21T  1Þ
Z p
p
½ea21T sinða1xÞ2 dx: ð62Þ
Since for any C > 0 there exists a1 2 N such thatﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
e2a
2
1
T  1
p
=ð ﬃﬃﬃ2p a1Þ > C; an inequality kuðx; tÞkL2 > CkuF kL2
holds for any C > 0. This means that the solution does not
depend on the ﬁnal data continuously. Thus, the BHCP is
unstable for a given ﬁnal data with respect to the L2-norm.
The larger a1 is, the worse is the ﬁnal data depending on
the solution. In other words, the problem is more ill-posed
when a1 is larger.
In Fig. 5, we present the numerical results which being
compared with the exact solution (61) at time t ¼ 0 for
the case of a1 ¼ 3 and T = 1. In the calculation, the grid
length was taken to be Dx ¼ 2p=100 and the time stepsize
was taken to be Dt ¼ 0:01.
Owing to the rather small ﬁnal data in the order of
O(104) when comparing with the desired initial data
sina1x of order O(1) to be retrieved, Mera [11] has men-
tioned that it is impossible to cope with this strongly ill-
posed problem by using the classical numerical approaches
and requires some special techniques to be employed. How-
ever, by using the LGSM we can treat this problem very
good as shown in Fig. 5(a), and the numerical error is very
small in the order Oð102Þ as shown in Fig. 5(b). The cur-
rent results are better than those of Liu et al. [12].
The numerical results under noise on the ﬁnal data:
hðxiÞ þ sRðiÞ are compared with the exact result in Fig. 6,
where the grid length Dx ¼ 2p=100; the time stepsize
Dt ¼ 0:001, and T = 0.5 were chosen. It can be seen that
the noise levels with s ¼ 0:00005 and s ¼ 0:00006 disturb
the numerical solutions deviating from the exact solution
0.0 0.2 0.4 0.6 0.8 1.0
x
1.0
0.8
0.6
0.4
0.2
0.0
u
 ( x
,0 
)
Exact
T=0.01
s=0.000039
Fig. 4. For Example 2 we compare the LGSM solution under the level of
noise s ¼ 0:000039 with the exact solution for T ¼ 0:01.
-4.0 -2.0 0.02 2.0 4.0
x
0.000
0.003
0.006
0.009
0.012
0.015
0.018
0.021
0.024
0.027
Er
ro
r o
f u
 ( x
,0 
)
-1.0
-0.8
-0.6
-0.4
-0.2
1.0
0.8
0.6
0.4
0.2
0.0
u
 ( x
,0 
)
Exact
LGSM
a
b
Fig. 5. For Example 3 we compare the LGSM with exact solution with
T = 1 in (a), and plot the numerical error of u(x, 0) in (b).
J.-R. Chang et al. / International Journal of Heat and Mass Transfer 50 (2007) 2325–2332 2331
A highly accurate LGSM for severely ill-posed BHCP under a large noise
on the ﬁnal time data
Chein-Shan Liu *
Department of Civil Engineering, National Taiwan University, Taipei, Taiwan
a r t i c l e i n f o
Article history:
Available online 9 June 2010
Keywords:
Inverse problem
Backward heat conduction problem
Lie-group shooting method
Strongly ill-posed problem
Noisy data
a b s t r a c t
We consider a backward heat conduction problem (BHCP) in a slab, by subjecting to data at a ﬁnal time,
and some different type boundary conditions at two ends of the slab. The BHCP is known to be highly ill-
posed. In order to numerically solve the BHCP we develop a new Lie-group shooting method (LGSM) in
the spatial direction. It can retrieve very well the initial data with a high order accuracy. Several numer-
ical examples of the BHCP demonstrate that the LGSM is applicable, even for those of strongly ill-posed
ones with a large value of ﬁnal time. Under the noisy ﬁnal data the LGSM is robust against the distur-
bance. The new method is applicable for a severely ill-posed case with a ﬁnal data very small in the order
of 1043, and the noise level is in the order of 101, of which the numerical solution still has an accuracy
in the order of 102. The results are rather signiﬁcant in the computations of BHCP.
 2010 Elsevier Ltd. All rights reserved.
1. Introduction
The problems that appear in engineering applications can be
categorized as direct problems and inverse problems. For the direct
problems which are governed by ordinary differential equations
(ODEs), Liu [1] has derived a Lie group transformation for the aug-
mented dynamics on the future cone, and developed group pre-
serving scheme (GPS) for an effective numerical calculation of
the nonlinear ODEs. Recently, the GPS is also proved to be very
effective to deal with the ODEs equipped with special structures,
as shown by Liu [2] for stiff equations, and by Liu [3] for ODEs with
multiple constraints.
Numerical schemes adopted for the backward problems are
usually implicit. The explicit ones that have been applied to solving
the backward problems are apparently not very effective up to
now. As mentioned by Mera [4], the backward problem is impossi-
ble to be solved by using the classical numerical methods and
requires special techniques.
In this paper we develop a new Lie-group shooting method
(LGSM) for the backward heat conduction problem (BHCP). It is
an extension of the works by Liu [5], Liu et al. [6] and Chang
et al. [7]. Chang et al. [8] have extended the new shooting method
in [7] to solve the multi-dimensional BHCPs. Recently, Liu [9–11]
and Yeih and Liu [12] have explored its superiority by using the
LGSM to estimate parameters in the parabolic type PDEs, as well
as to identify the heat source. The BHCP is one of the inverse prob-
lems for the applications in the heat conduction engineering to
recovering the past temperature history. The inverse problems
are those in which one would like to determine the causes for a de-
sired or observed effect. One of the characterizing properties of
many of the inverse problems is that they are usually ill-posed.
Mathematically speaking, the linear operator generated from the
BHCP is a compact one with inﬁnite rank, whose inverse is discon-
tinuous, and thus, the solution that depends continuously on the
ﬁnal data does not exist. The new LGSM would render a more com-
pendious numerical implementation than other schemes to solve
the BHCP. The degree of the ill-posedness of BHCP is over other in-
verse heat conduction problems, including the sideways heat con-
duction problem [13].
We consider the following BHCP:
@u
@t
¼ @
2u
@x2
; 0 < t < T; 0 < x < ‘; ð1Þ
uð0; tÞ ¼ u0ðtÞ; uð‘; tÞ ¼ u‘ðtÞ; ð2Þ
uðx; TÞ ¼ uTðxÞ; ð3Þ
where uT(x) is a given ﬁnal datum, and u20ðtÞ þ u2‘ ðtÞ > 0. It means
that the boundary conditions cannot be both zero. After developing
the LGSM in Section 4, we also consider other possible boundary
conditions, given by
uð0; tÞ ¼ u0ðtÞ; vð‘; tÞ ¼ v ‘ðtÞ; ð4Þ
vð0; tÞ ¼ v0ðtÞ; uð‘; tÞ ¼ u‘ðtÞ; ð5Þ
vð0; tÞ ¼ v0ðtÞ; vð‘; tÞ ¼ v ‘ðtÞ; ð6Þ
where v = @u/@x and v is the heat ﬂux.
In order to calculate the BHCP, there appeared certain
progresses in this issue, including the boundary element method
0017-9310/$ - see front matter  2010 Elsevier Ltd. All rights reserved.
doi:10.1016/j.ijheatmasstransfer.2010.05.036
* Tel.: +886 2 33664233; fax: +886 27396752.
E-mail address: liucs@ntu.edu.tw
International Journal of Heat and Mass Transfer 53 (2010) 4132–4140
Contents lists available at ScienceDirect
International Journal of Heat and Mass Transfer
journal homepage: www.elsevier .com/locate / i jhmt
Then by using a semi-discretization method to discretize the
quantities of u(x, t) and v(x, t) along the time direction, we can
obtain a system of 2n-dimensional linearly coupled ODEs for u
and v with x as an independent variable. The Lie-group shooting
method as developed by Liu [29] is thus extended by applying to
the following discretized equations:
@uiðxÞ
@x
¼ v iðxÞ; i ¼ 1; . . . ; n; ð9Þ
@v iðxÞ
@x
¼ u
iþ1ðxÞ  uiðxÞ
Dt
; i ¼ 1; . . . ;n; ð10Þ
where ui(x) = u(x, (i  1)Dt) and vi(x) = v(x, (i  1)Dt), and Dt = T/n is
a uniform time increment. The value of un+1(x) = u(x,T) is deter-
mined by the ﬁnal time condition (3), while the two boundary con-
ditions in Eq. (2) are discretized by
uið0Þ ¼ u0ðði 1ÞDtÞ; i ¼ 1; . . . ;n; ð11Þ
uið‘Þ ¼ u‘ðði 1ÞDtÞ; i ¼ 1; . . . ; n: ð12Þ
Obviously, for Eqs. (9) and (10) there are two missing boundary
conditions vi(0) and vi(‘), i = 1, . . . ,n. In Section 4 we will use the
LGSM to calculate these quantities. If both ui(0) and vi(0) are avail-
able, we can use the RK4 or the GPS to integrate Eqs. (9) and (10),
obtaining the temperature u(x, t) and the heat ﬂux v(x, t).
3. Mathematical preliminaries
3.1. The GPS
Let us write Eqs. (9) and (10) in a vector form:
y0 ¼ fðx; yÞ; ð13Þ
where the prime denotes the differential with respect to x, and
y :¼ u
v
 
; f :¼ v
hðx;uÞ
 
; ð14Þ
in which u = (u1,u2, . . . ,un)t and v = (v1,v2, . . . ,vn)t, and h represents
the right-hand side of Eq. (10).
Liu [1] has embedded Eq. (13) into an augmented system:
X0 :¼ d
dx
y
kyk
 
¼
02n2n
fðx;yÞ
kyk
ftðx;yÞ
kyk 0
2
4
3
5 y
kyk
 
:¼ AX; ð15Þ
where A is an element of the Lie algebra so(2n,1) satisfying
Atgþ gA ¼ 0 ð16Þ
with
g ¼ I2n 02n1
012n 1
 
ð17Þ
a Minkowski metric. Here, I2n is the identity matrix, and the super-
script ‘‘t” stands for the transpose.
The augmented variable X satisﬁes the cone condition:
XtgX ¼ y  y  kyk2 ¼ 0: ð18Þ
Accordingly, Liu [1] has developed a group-preserving scheme
(GPS) to guarantee that each Xk locates on the future cone:
Xkþ1 ¼ GðkÞXk; ð19Þ
where Xk denotes the numerical value of X at the discrete position
xk, and G(k) 2 SOo(2n,1) satisﬁes
GtgG ¼ g; ð20Þ
det G ¼ 1; ð21Þ
G00 > 0; ð22Þ
where G00 is the 00th component of G.
3.2. A generalized mid-point rule for one-step GPS
Applying scheme (19) to Eq. (15) with a left-side boundary con-
dition X(0) = X0, we can compute the solution X(x) by the GPS.
Assuming that the stepsize used in the GPS is h = ‘/K, where K is
the total number of integration steps, and starting from an initial
augmented condition X0 = ((y0)t,ky0k)t we will calculate the value
X‘ = ((y‘)t,ky‘k)t at x = ‘.
By applying Eq. (19) step-by-step we can obtain
X‘ ¼ GKðhÞ   G1ðhÞX0: ð23Þ
However, let us recall that each Gi, i = 1, . . . ,K, is an element of
the Lie group SOo(2n,1), and by the closure property of the Lie
group, GK(h)  G1(h) is also a Lie group element denoted by G.
Hence, we have
X‘ ¼ GX0: ð24Þ
We can calculate G by a generalized mid-point rule, which is ob-
tained from an exponential mapping of A by taking the values of
the argument variables of A at a generalized mid-point. The Lie
group generated from such an A 2 so(2n,1) by an exponential map-
ping admits a closed-form representation:
G ¼
I2n þ a1kf^k2 f^ f^t bf^kf^k
bf^t
kf^k a
2
4
3
5; ð25Þ
where
y^ ¼ ry0 þ ð1 rÞy‘; ð26Þ
f^ ¼ fðx^; y^Þ; ð27Þ
a ¼ cosh ‘kf^kky^k
 !
; b ¼ sinh ‘kf^kky^k
 !
: ð28Þ
Here, we use the left-side y0 = (u(0),v(0)) and the right-side
y‘ = (u(‘),v(‘)) through a suitable weighting factor r to calculate
G, where r 2 (0,1) is a parameter and x^ ¼ r‘.
The above method applied a generalized mid-point rule on the
calculations of G, and the resultant is a single-parameter Lie group
element denoted by G(r).
3.3. A Lie group mapping between two points on the cone
Let us deﬁne a new vector
F :¼ f^ky^k ; ð29Þ
such that Eqs. (25) and (28) can also be expressed as
G ¼
I2n þ a1kFk2 FF
t bF
kFk
bFt
kFk a
2
4
3
5; ð30Þ
a ¼ cosh½‘kFk; b ¼ sinh½‘kFk: ð31Þ
From Eqs. (24) and (30) it follows that
y‘ ¼ y0 þ gF; ð32Þ
ky‘k ¼ aky0k þ bF  y
0
kFk ; ð33Þ
where
g :¼ ða 1ÞF  y
0 þ bky0kkFk
kFk2
: ð34Þ
Substituting
F ¼ 1
g
ðy‘  y0Þ ð35Þ
4134 C.-S. Liu / International Journal of Heat and Mass Transfer 53 (2010) 4132–4140
v0 ¼ ky^k
g
½u‘  u0  ð1 rÞgky^k h^; ð66Þ
v‘ ¼ ky^k
g
½u‘  u0 þ rgky^k h^: ð67Þ
For a speciﬁed r, Eqs. (66) and (67) can be used to generate the
new (v0,v‘) by repeating the process until (v0,v‘) converges accord-
ing to a given stopping criterion:
ﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃﬃ
kv0iþ1  v0i k2 þ kv‘iþ1  v‘ik2
q
6 ; ð68Þ
which means that the norm of the difference between the i + 1th
and the ith iterations of (v0,v‘) is smaller than a given stopping cri-
terion . If u0 and v0 are available, we can return to Eqs. (9) and (10)
and integrate them to obtain u(‘) and v(‘), for example, by the RK4
or by the GPS. The above process can be done for all r in the interval
of r 2 (0,1). Among these solutions we may pick up the r, which
leads to the smallest error of
min
r2ð0;1Þ
kuð‘Þ  u‘k ¼ min
r2ð0;1Þ
Xn
i¼1
½uið‘Þ  u‘i 2
 !1=2
; ð69Þ
since u‘ is our target value given at the right-boundary.
Problem 2. For this problem u0 = u(0) and v‘ = v(‘) are given, and
correspondingly u‘ = u(‘) and v0 = v(0) are unknown vectors.
For a speciﬁed r, Eqs. (61) and (62) can be used to generate the
new (u‘,v0) by repeating the process in Eqs. (57)–(62) until (u‘,v0)
converges according to a given stopping criterion.
If u0 and v0 are available, we can return to Eqs. (9) and (10) and
integrate them to obtain u(‘) and v(‘). The above process can be
done for all r in the interval of r 2 (0,1). Among these solutions we
may pick up the r, which leads to the smallest error of kv(‘)  v‘k,
since v‘ is our target value given at the right-boundary. That is,
min
r2ð0;1Þ
kvð‘Þ  v‘k ¼ min
r2ð0;1Þ
Xn
i¼1
½v ið‘Þ  v ‘i 2
 !1=2
: ð70Þ
Problem 3. For this problem v0 = v(0) and u‘ = u(‘) are given, and
correspondingly u0 = u(0) and v‘ = v(‘) are unknown vectors.
For a speciﬁed r, Eqs. (61) and (62) can be used to generate the
new (u0,v‘) by repeating the process in Eqs. (57)–(62) until (u0,v‘)
converges according to a given stopping criterion.
If u0 and v0 are available, we can return to Eqs. (9) and (10) and
integrate them to obtain u(‘) and v(‘). The above process can be
done for all r in the interval of r 2 (0,1). Among these solutions we
may pick up the r, which leads to the smallest error of ku(‘)  u‘k
as shown in Eq. (69), since u‘ is our target value given at the right-
boundary.
Problem 4. For this problem v0 = v(0) and v‘ = v(‘) are given, and
correspondingly u0 = u(0) and u‘ = u(‘) are unknown vectors.
Therefore, we can write Eq. (62) as
h^ ¼ ky^k
g
½v‘  v0: ð71Þ
Since h^ is a linear function of u0 and u‘, the above equation
together with Eq. (61) can be used to solve u0 and u‘.
For a speciﬁed r, Eqs. (61) and (71) can be used to generate the
new (u0,u‘) by repeating the process in Eqs. (57)–(61) and (71)
until (u0,u‘) converges according to a given stopping criterion.
Then, if u0 and v0 are available, we can return to Eqs. (9) and (10)
and integrate them to obtain u(‘) and v(‘). The above process can
be done for all r in the interval of r 2 (0,1). Among these solutions
we may pick up the r, which leads to the smallest error of
kv(‘)  v‘k as shown in Eq. (70).
Remark 1. If the boundary conditions in Eq. (2) are both zero, we
can consider a variable transformation given by
Uðx; tÞ ¼ uðx; tÞ þ Fðx; tÞ; ð72Þ
where F(x, t) is a particular solution of Eq. (1) and F2(0, t) + F2(‘, t) > 0.
Thus, we have
@U
@t
¼ @
2U
@x2
; 0 < t < T; 0 < x < ‘; ð73Þ
Uð0; tÞ ¼ Fð0; tÞ; Uð‘; tÞ ¼ Fð‘; tÞ; ð74Þ
Uðx; TÞ ¼ uTðxÞ þ Fðx; TÞ: ð75Þ
The LGSM is applied to the above three equations to obtain U(x, t)
and then u(x, t) = U(x, t)  F(x, t) can be obtained.
5. Numerical examples of BHCP
Now, we are ready to apply the LGSM on the calculations of
BHCP through numerical examples. When the input ﬁnal measured
data are contaminated by random noise, we are concerned with
the stability of LGSM, which is investigated by adding the different
levels of random noise on the ﬁnal data:
u^TðxiÞ ¼ uTðxiÞ þ sRðiÞ; ð76Þ
where uT(xi) are the exact data. We use the function
RANDOM-NUMBER given in Fortran to generate the R(i), which
are random numbers in [1,1], and s speciﬁes the level of noise.
Then, the noisy data u^T(xi) are used in the calculations.
5.1. Example 1
Let us ﬁrst consider a one-dimensional BHCP:
ut ¼ uxx; 0 < x < 1; 0 < t < T; ð77Þ
with the boundary conditions
uð0; tÞ ¼ sinð0:6pÞ expðp2tÞ; ð78Þ
uð1; tÞ ¼ sinð1:6pÞ expðp2tÞ; ð79Þ
and the ﬁnal time condition
uðx; TÞ ¼ sinðpðxþ 0:6ÞÞ expðp2TÞ: ð80Þ
The datum to be retrieved is given by
uðx; tÞ ¼ sinðpðxþ 0:6ÞÞ expðp2tÞ; T > t P 0: ð81Þ
The time domain [0,T] is discretized by n + 1 points including
the ﬁnal time, at which the ﬁnal time condition uT(x) = un+1(x) = sin
(p(x + 0.6)) exp(p2T) is imposed on the totally 2n differential
equations obtained from Eqs. (9) and (10). We apply the LGSM
developed in Section 4 for this backward problem of 2n differential
equations with the boundary data given by Eq. (78).
Let us investigate a severely ill-posed case of this benchmark
BHCP, where T = 5 was employed, such that when the ﬁnal data
are in the order of O(1022) we want to use the LGSM to retrieve
the desired initial data sin(p(x + 0.6)), which are in the order of
O(1).
Before that we use this example to demonstrate how to pick up
the best r as speciﬁed by Eq. (69). In the calculation Dt = 0.005, i.e.,
n = 1000 was ﬁxed and the stopping criterion  = 105 was used in
Eq. (68). We plot the error of mis-matching the target with respect
to r in Fig. 1. It can be seen that there is a minimum point marked
4136 C.-S. Liu / International Journal of Heat and Mass Transfer 53 (2010) 4132–4140
6  103. It shows again that the present LGSM is very robust
against the noise, and the accuracy is much better than that calcu-
lated by Fu et al. [22, (referring Figs. 3–5 therein)].
5.3. Example 3
In order to compare our numerical results with those obtained
by Lesnic et al. [32], Mera et al. [15,16] and Mera [4], let us consider
a one-dimensional benchmark BHCP:
ut ¼ uxx; 0 < x < 1; 0 < t < T; ð84Þ
with the boundary conditions
uð0; tÞ ¼ uð1; tÞ ¼ 0; ð85Þ
and the ﬁnal time condition
uðx; TÞ ¼ sinðpxÞ expðp2TÞ: ð86Þ
The initial datum to be retrieved is given by
uðx;0Þ ¼ sinðpxÞ; 0 < x < 1: ð87Þ
For this case we need to consider the variable transformation
demonstrated in Eq. (72),
Fðx; tÞ ¼ A0 cosðpxÞ expðp2tÞ; ð88Þ
where, A0 = 3 was ﬁxed for this example.
In Fig. 5 we show the numerical results and numerical errors
for different ﬁnal times and noises of T = 2, s = 0.002 and T = 4,
s = 0.005. They are calculated by the LGSM with Dx = 0.01
and Dt = 0.005. Upon compared with the numerical results com-
puted by Mera [4] with the method of fundamental solutions
(MFS) together with the Tikhonov regularization technique (see
Fig. 5 of the above cited paper), we can say that LGSM is much
accurate than MFS.
For this benchmark BHCP, when the ﬁnal data are in the order of
O(109)  O(1018) we want to use the LGSM to retrieve the de-
sired initial data sinpx, which are in the order of O(1). For this very
difﬁcult problem, the method proposed by Lesnic et al. [32] was
unstable when T > 1. However, the results given by the LGSM are
free of such a difﬁculty and we were able to retrieve the desired
initial data rather accurately as shown in Fig. 5(a). Even for a severe
case up to T = 4, our computation is stable, and the maximum error
occurring at x = 0.5 is smaller than 0.06. More signiﬁcantly, the
present method is insensitive to the noise and the ﬁnal time.
5.4. Example 4
We consider the same exact solution as that given in Example 3,
but we use the following boundary conditions:
uð0; tÞ ¼ 0; vð1; tÞ ¼ p expðp2tÞ; ð89Þ
and the ﬁnal time condition
uðx; TÞ ¼ sinðpxÞ expðp2TÞ: ð90Þ
The datum to be retrieved is given by
uðx; tÞ ¼ sinðpxÞ expðp2tÞ: ð91Þ
This is one sort of Problem 2. We solve it by the LGSM with
Dx = 0.005 and D = 0.005 under two sets of ﬁnal times and noises
T = 4, s = 0.4 and T = 10, s = 0.1. It should be noted that when
T = 10 and s = 0.1 the ﬁnal data are almost diminished with a quan-
tity in the order of 1043, and the noise is 1042 order larger than the
a
b
Fig. 3. For Example 1: (a) comparing the numerical solutions of the initial data with
the exact one, and (b) displaying the numerical errors.
a
b
Fig. 4. For Example 2: (a) comparing the numerical solutions of the initial data with
the exact one, and (b) displaying the numerical errors.
4138 C.-S. Liu / International Journal of Heat and Mass Transfer 53 (2010) 4132–4140
[10] C.-S. Liu, An LGEM to identify time-dependent heat conductivity function by
an extra measurement of temperature gradient, CMC: Comput., Mater.
Continua 7 (2008) 81–96.
[11] C.-S. Liu, A two-stage LGSM to identify time-dependent heat source through an
internal measurement of temperature, Int. J. Heat Mass Transfer 52 (2009)
1635–1642.
[12] W. Yeih, C.-S. Liu, A three-point BVP of time-dependent inverse heat source
problems and solving by a TSLGSM, CMES: Comput. Model. Eng. Sci. 46 (2006)
107–127.
[13] C.W. Chang, C.-S. Liu, J.R. Chang, A group preserving scheme for inverse heat
conduction problems, CMES: Comput. Model. Eng. Sci. 10 (2005) 13–38.
[14] H. Han, D.B. Ingham, Y. Yuan, The boundary element method for the solution of
the backward heat conduction equation, J. Comp. Phys. 116 (1995) 292–299.
[15] N.S. Mera, L. Elliott, D.B. Ingham, D. Lesnic, An iterative boundary element
method for solving the one-dimensional backward heat conduction problem,
Int. J. Heat Mass Transfer 44 (2001) 1937–1946.
[16] N.S. Mera, L. Elliott, D.B. Ingham, An inversion method with decreasing
regularization for the backward heat conduction problem, Numer. Heat
Transfer B 42 (2002) 215–230.
[17] W.B. Muniz, H.F. de Campos Velho, F.M. Ramos, A comparison of some inverse
methods for estimating the initial condition of the heat equation, J. Comp.
Appl. Math. 103 (1999) 145–163.
[18] W.B. Muniz, F.M. Ramos, H.F. de Campos Velho, Entropy-and Tikhonov-based
regularization techniques applied to the backward heat equation, Int. J. Comp.
Math. 40 (2000) 1071–1084.
[19] S.M. Kirkup, M. Wadsworth, Solution of inverse diffusion problems by
operator-splitting methods, Appl. Math. Model. 26 (2002) 1003–1018.
[20] K. Iijima, Numerical solution of backward heat conduction problems by a high
order lattice-free ﬁnite differencemethod, J. Chin. Inst. Eng. 27 (2004) 611–620.
[21] Z. Qian, C.L. Fu, R. Shi, A modiﬁed method for a backward heat conduction
problem, Appl. Math. Comp. 185 (2007) 564–573.
[22] C.L. Fu, X.T. Xiong, Z. Qian, Fourier regularization for a backward heat equation,
J. Math. Anal. Appl. 331 (2007) 472–480.
[23] X.T. Xiong, C.L. Fu, Z. Qian, On three spectral regularization methods for a
backward heat conduction problem, J. Korean Math. Soc. 44 (2007) 1281–
1290.
[24] C.-S. Liu, A new method for Fredholm integral equations of 1D backward heat
conduction problems, CMES: Comput. Model. Eng. Sci. 47 (2009) 1–21.
[25] X.T. Xiong, C.L. Fu, Z. Qian, Two numerical methods for solving a backward
heat problem, Appl. Math. Comp. 179 (2006) 374–381.
[26] L.D. Chiwiacowsky, H.F. de Campos Velho, Different approaches for the
solution of a backward heat conduction problem, Inv. Probl. Eng. 11 (2003)
471–494.
[27] G.W. Clark, S.F. Oppenheimer, Quasireversibility methods for non-well-posed
problems, Elect. J. Diff. Eqns. 1994 (1994) 1–9.
[28] K.A. Ames, G.W. Clark, J.F. Epperson, S.F. Oppenheimer, A comparison of
regularizations for an ill-posed problem, Math. Comp. 67 (1998) 1451–1471.
[29] C.-S. Liu, The Lie-group shooting method for nonlinear two-point boundary
value problems exhibiting multiple solutions, CMES: Comput. Model. Eng. Sci.
13 (2006) 149–163.
[30] C.-S. Liu, Efﬁcient shooting methods for the second order ordinary differential
equations, CMES: Comput. Model. Eng. Sci. 15 (2006) 69–86.
[31] C.-S. Liu, The Lie-group shooting method for singularly perturbed two-point
boundary value problems, CMES: Comput. Model. Eng. Sci. 15 (2006) 179–196.
[32] D. Lesnic, L. Elliott, D.B. Ingham, An iterative boundary element method for
solving the backward heat conduction problem using an elliptic
approximation, Inv. Probl. Eng. 6 (1998) 255–279.
4140 C.-S. Liu / International Journal of Heat and Mass Transfer 53 (2010) 4132–4140
2 Copyright c© 2008 Tech Science Press CMC, vol.8, no.1, pp.1-16, 2008
curate estimated result. Recently, a large im-
provement to overcome the above drawback has
been made by Chen, Lin and Fang (2001, 2002),
who applied a similar scheme in conjunction with
a sequential-in-time concept and the least-squares
method to estimate unknown surface condition
from the temperature measurements. Then, Chen,
Wu and Hsiao (2004) have studied by applying
the same technique to predict unknown surface
condition from the theory of dynamic thermal
stress. The results of their study show that a good
estimation can be obtained even for the case with
measurement errors.
Chang, Liu and Chang (2005) have solved the
IHCP of boundary condition identification by us-
ing the group preserving scheme (GPS). A rather
comprehensive review of different techniques to
solve the IHCP has been surveyed in that paper.
We are going to extend it to the inverse thermal
stress problem (ITSP), of which stress is calcu-
lated by the following constitutive equation:
σ(x, t) =
2G
1−2ν
[
(1−ν)∂u(x, t)∂x − (1+ν)αtT (x, t)
]
,
(1)
where t is the time, x is the spatial coordinate, ν is
the Poisson ratio and αt is the coefficient of ther-
mal expansion.
The linear momentum balance equation is written
as
∂σ(x, t)
∂x = ρ
∂ 2u(x, t)
∂ t2 , (2)
where ρ is the material density. Substituting
Eq. (1) into Eq. (2) we obtain
∂ 2u(x, t)
∂x2 −
1
c2
∂ 2u(x, t)
∂ t2 = k
∂T (x, t)
∂x ,
0 < x < , 0 < t ≤ t f , (3)
where t f is a final time,  is the length of rod, and
the coefficients are defined as
c =
√
2G(1−ν)
ρ(1−2ν) , k =
(1+ν)αt
1−ν . (4)
The one-dimensional heat conduction equation
with constant thermal properties can be expressed
as
∂ 2T (x, t)
∂x2 =
1
α
∂T (x, t)
∂ t , 0 < x < , 0 < t ≤ t f ,
(5)
where α is the thermal diffusivity.
The present ITSP is subjected to the following
boundary conditions:
Tx(0, t) = 0, T (, t) = F(t), (6)
u(0, t) = 0, σ(, t) = 0, (7)
and initial conditions:
T (x,0) = f (x), u(x,0) = g(x), ut(x,0) = h(x).
(8)
However, F(t) is an unknown function. This
point is different from the direct problem, where
F(t) is given. For the inverse problem, F(t) can
be estimated, provided that the internal measure-
ment of temperature at an internal point x = xm is
available:
T (xm, t) = Fm(t). (9)
When it is impossible to measure the tempera-
ture on an inaccessible surface directly, such as
in the use of combustion chambers, nuclear reac-
tors, heat exchangers and re-entry vehicles, etc.,
the ITSP is often occurred in engineering appli-
ances, in which one wants to resolve the surface
temperature from measurements inside a heat-
conducting object. The problem setup with its
physical model is shown in Fig. 1. The pur-
pose of the present paper is using the above equa-
tions to recover the thermal stress, displacement
and temperature of an elastically deformable heat
conducting rod. Moreover, in a practical use we
are usually required to mount a thermocouple as
far away from the surface as possible for not de-
stroying the structure of the engineering appliance
too much, which means that xm should be much
smaller than .
The main difficulties of the ITSP are that for
Eq. (5) there has an unknown boundary condition
4 Copyright c© 2008 Tech Science Press CMC, vol.8, no.1, pp.1-16, 2008
2 Numerical solution procedures
We are going to solve the ITSP through three
steps. First, we use the Lie-group shooting
method to solve the heat conduction problem in
a spatial interval of 0 < x < xm by subjecting to
the initial condition, the Neumann boundary con-
dition at the left-side x = 0 and an available mea-
sured data at the right-side x = xm. The numer-
ical procedures and numerical examples will be
exposed in Section 6.
Then the above solution is extended into the
whole domain in the interval of 0 < x < , which
is substituted into Eq. (3) providing a right-hand
side function. We transform Eq. (3) into the fol-
lowing equations:
∂u(x, t)
∂x = v(x, t), (11)
∂v(x, t)
∂x =
1
c2
∂ 2u(x, t)
∂ t2 +k
∂T (x, t)
∂x . (12)
Then, in the third step, by using a semi-
discretization method to discretize the quantities
of u(x, t) and v(x, t) along the time direction, we
can obtain a system of ODEs for u and v with x
as an independent variable. The Lie group shoot-
ing method as developed by Liu (2006a) is thus
extended and applied to the following discretized
equations:
∂ui(x)
∂x =v
i(x), i = 2, · · · ,n, (13)
∂vi(x)
∂x =
[
ui+1(x)−2ui(x)+ui−1(x)
c2(Δt)2
]
(14)
+k∂T (x, ti)∂x , i = 2, · · · ,n,
where ui(x) = u(x, iΔt) and vi(x) = v(x, iΔt) and
Δt = t f /n is a uniform discretization time incre-
ment. The two known boundary conditions are
given by
ui(0) = 0, i = 2, · · · ,n, (15)
vi() = kT (, ti), i = 2, · · · ,n, (16)
which are obtained from Eq. (7).
In Eq. (14), the unknown function un+1(x) is set
equal to zero. On the other hand, according to the
finite difference and initial conditions which are
specified for both u0(x) = u(x,0) and ut(x,0) we
can obtain
u1(x) = u0(x)+ut(x,0)Δt, (17)
where the value of u0(x) = u(x,0) is determined
by the initial condition. It means that u1(x) is fully
determined by these two initial conditions g(x)
and h(x) in Eq. (8), and at the same time v1(x)
is determined by v1(x) = ∂u1(x)/∂x. Therefore,
the two variables u1(x) and v1(x) in Eqs. (13) and
(14) should be deemed as known functions. This
is the reason that we let i start from i = 2 in the
above equations.
Obviously, there are two missing boundary con-
ditions ui(), i = 2, · · · ,n and vi(0), i = 2, · · · ,n
in Eqs. (13) and (14). In Section 4 we will use
the LGSM to calculate these quantities. Upon the
left-boundary condition of vi is obtained, we can
treat Eqs. (13) and (14) as a coupled ODEs system
supplemented with a source term T (x, ti), which is
already calculated in the first step, and we can use
the GPS or other available numerical integrators
to calculate ui and vi. If both u(x, t) and T (x, t)
are available, we can use Eq. (1) to calculate stress
σ(x, t).
3 Mathematical preliminaries
3.1 The GPS
Let us write Eqs. (13) and (14) as in a vector form:
y′ = f(x,y), (18)
where the prime denotes the differential with re-
spect to x, and
y :=
[
y1
y2
]
, f :=
[
y2
h(x,y1)
]
, (19)
in which y1 = (u2, . . . ,un)t and y2 = (v2, . . . ,vn)t .
Each component of h represents the right-hand
side of Eq. (14).
Liu (2001) has embedded Eq. (18) into an aug-
6 Copyright c© 2008 Tech Science Press CMC, vol.8, no.1, pp.1-16, 2008
where
yˆ = ry0 +(1− r)y, (31)
ˆf = f(xˆ, yˆ), (32)
a = cosh
(

‖ˆf‖
‖yˆ‖
)
, (33)
b = sinh
(

‖ˆf‖
‖yˆ‖
)
. (34)
Here, we use y0 = (y1(0),y2(0)) and y =
(y1(),y2()) through a suitable weighting factor
r to calculate G, where r ∈ (0,1) is a parameter
and xˆ = r. The above method has applied a gen-
eralized mid-point rule on the calculation of G,
and the resultant is a single-parameter Lie group
element denoted by G(r).
Throughout this paper we use the superscripted
symbol y0 to denote the value of y at x = 0, and
y the value of y at x = .
3.4 A Lie group mapping between two points
on the cone
Let us define a new vector
F :=
ˆf
‖yˆ‖ , (35)
such that Eqs. (30), (33) and (34) can be also ex-
pressed as
G =
⎡
⎣ I2n−2+ a−1‖F‖2 FFt bF‖F‖
bFt
‖F‖ a
⎤
⎦ , (36)
a = cosh[‖F‖], (37)
b = sinh[‖F‖]. (38)
From Eqs. (29) and (36) it follows that
y = y0 +ηF, (39)
‖y‖= a‖y0‖+bF ·y
0
‖F‖ , (40)
where
η := (a−1)F ·y
0 +b‖y0‖‖F‖
‖F‖2 . (41)
Substituting F in Eq. (39) written as
F = 1η (y
−y0) (42)
into Eq. (40) and dividing both the sides by ‖y0‖,
we obtain
‖y‖
‖y0‖ = a+b
(y−y0) ·y0
‖y−y0‖‖y0‖ , (43)
where, by inserting Eq. (42) for F into Eqs. (37)
and (38), a and b are now written as
a = cosh
(
‖y−y0‖
η
)
, (44)
b = sinh
(
‖y−y0‖
η
)
. (45)
Let
cosθ := [y
−y0] ·y0
‖y−y0‖‖y0‖ , (46)
y := ‖y−y0‖, (47)
where θ is the intersection angle between vectors
y−y0 and y0, and thus from Eqs. (43)-(45) it fol-
lows that
‖y‖
‖y0‖ = cosh
(
y
η
)
+cosθ sinh
(
y
η
)
. (48)
By defining
Z := exp
(
y
η
)
, (49)
from Eq. (48) we obtain a quadratic equation for
Z:
(1+cosθ )Z2− 2‖y
‖
‖y0‖ Z +1−cosθ = 0. (50)
On the other hand, by inserting Eq. (42) for F into
Eq. (41) we obtain
‖y−y0‖2 =
(a−1)(y−y0) ·y0+b‖y0‖‖y−y0‖. (51)
Dividing both sides by ‖y0‖‖y − y0‖ and us-
ing Eqs. (44)-(47) and (49) we obtain another
quadratic equation for Z:
(1+cosθ )Z2−2
(
cosθ + ‖y
−y0‖
‖y0‖
)
Z
+ cosθ −1 = 0. (52)
8 Copyright c© 2008 Tech Science Press CMC, vol.8, no.1, pp.1-16, 2008
For a specified r, Eqs. (67) and (68) can be used to
generate the new (y1,y02) by repeating the above
process until (y1,y02) converges according to a
given stopping criterion:√
‖y1,i+1−y1,i‖2 +‖y02,i+1−y02,i‖2 ≤ ε , (71)
which means that the norm of the difference be-
tween the i+1-th and the i-th iterations of (y1,y02)
is smaller than a given stopping criterion ε . If y02
is available, we can return to Eqs. (13) and (14)
and integrate them to obtain y2(). The above
process can be done for all r in the interval of
r ∈ (0,1). Among these solutions we can pick up
the best r, which leads to the smallest error of
min
r∈(0,1)
‖y2()−y2‖, (72)
since y2 is our target value at the right-boundary
specified by Eq. (16).
When the best r is chosen, from Eq. (68) we can
simultaneously calculate the left-boundary condi-
tions of vi, i = 2, . . .,n, which together with the
known left-boundary conditions of ui, i = 2, . . . ,n
given in Eq. (15) leading to a complete set of
the left-boundary conditions for Eqs. (13) and
(14). Then, we can apply any available integrating
methods for ODEs, for example, the GPS or the
fourth-order Runge-Kutta method (RK4) to cal-
culate u and v in the x domain, and then supple-
mented with a previously calculated T we can cal-
culate stress by
σ(x, t) =
2G
1−2ν [(1−ν)v(x, t)− (1+ν)αtT (x, t)]. (73)
5 Numerical examples of ITSP
Now, we are ready to apply the LGSM on the
calculations of ITSP through the tests of numer-
ical examples. When the input measured temper-
ature data T (xm, t) are contaminated by random
noise, we can investigate the stability of LGSM
by adding different levels of random noise on the
measured data:
ˆT (xm, ti) = T (xm, ti)+ sR(i), (74)
where T (xm, ti) is the exact data, and s spec-
ifies the level of noise. We use the function
RANDOM−NUMBER given in Fortran to gener-
ate the R(i), which are random numbers in [−1,1].
Then, the noisy data ˆT (xm, ti) are used as inputs in
the calculations.
5.1 Example 1
Let us first consider a simple ITSP with a closed-
form solution of T (x, t):
T (x, t) = 2αt +x2, (75)
with the boundary conditions
Tx(0, t) = 0, T (1, t) = 1+2αt, (76)
and the initial condition
T (x,0) = x2. (77)
The exact data at xm is given by
T (xm, t) = 2αt +x2m. (78)
In order to compare our numerical results with ex-
act solutions, we also require to derive an exact
solution of u(x, t), which satisfies
utt(x, t)−c2uxx(x, t) = −2kc2x, (79)
0 < x < 1, 0 < t ≤ t f ,
u(x,0) = b0x3, 0 ≤ x ≤ 1, (80)
ut(x,0) = a0x, 0 ≤ x ≤ 1, (81)
u(0, t) = 0, 0≤ t ≤ t f , (82)
ux(1, t) = k(1+2αt), 0 ≤ t ≤ t f , (83)
where
a0 = 2kα , b0 =
k
3 . (84)
The exact solutions of u(x, t) and σ(x, t) are found
to be
u(x, t) =a0xt +b0x3, (85)
σ(x, t) =
2G
1−2ν
[
(1−ν)(a0t +3b0x2)
−αt(1+ν)(2αt+x2)
] (86)
=0.
10 Copyright c© 2008 Tech Science Press CMC, vol.8, no.1, pp.1-16, 2008
stress in Figs. 3(b) and 3(c). It can be seen that the
noise makes the numerical errors slightly larger
than these without considering noise. However,
the numerical errors are still small and the numer-
ical solutions are acceptable.
5.2 Example 2
Suppose that f (x) = 0, and then by using the clas-
sical method we may obtain
T (x, t) =
1
x2m
∞
∑
j=0
exp
(−α(2 j+1)2π2t
4x2m
)
cos
(2 j+1)πx
2xm
(2 j+1)απ(−1) j
∫ t
0
exp
(
α(2 j+1)2π2τ
4x2m
)
Fm(τ)dτ .
(88)
Next, the measured temperature history at xm is
assumed to be
T (xm, t) = Fm(t) = A0 sinωt. (89)
Then, substituting it into Eq. (88) we can get
T (x, t) =
1
x2m
∞
∑
j=0
A0(
α(2 j+1)2π2
4x2m
)2
+ω2
cos
(2 j+1)πx
2xm
(2 j+1)απ(−1) j[
ω exp
(−α(2 j+1)2π2t
4x2m
)
+
α(2 j+1)2π2
4x2m
sinωt−ω cosωt
]
.
(90)
For this example we use A0 = 2, ω = 1 and the
temperature measurement is made at xm = 0.8 cm.
The final time is fixed to be t f = 1 s. In the cal-
culation Δt = 0.01 s and Δx = 1/150 cm were
used. In Fig. 4(a) we plot the mis-matching
of target with respect to r in a finer interval of
r ∈ (0.5,0.65). For this example we have no
closed-form solution of stress being compared,
and thus we assess the accuracy of our method
by testing its matching with the boundary condi-
tion σ(, t) = 0 in Eq. (7), which is plotted with
respect to t in Fig. 4(b). The maximum error is
smaller than 9×10−6. In Figs. 4(c) and 4(d) we
display the displacement and stress at t0 = 0.5 s
along the spatial coordinate.
0.50 0.53 0.56 0.59 0.62 0.65
r
0.0E+0
5.0E-4
1.0E-3
1.5E-3
M
is
-m
at
ch
in
g 
of
 t
ar
ge
t
0E+0
3E-6
6E-6
9E-6
M
is
-m
at
ch
in
g 
st
re
ss
b
ou
n
d
ar
y
 c
on
d
it
io
n
0.0 0.2 0.4 0.6 0.8 1.0
t
49.60
49.62
49.64
S
tr
es
s
0.0 0.2 0.4 0.6 0.8 1.0
x
0E+0
2E-6
4E-6
6E-6
D
is
p
la
ce
m
en
t
(a)
(b)
(c)
(d)
Figure 4: For Example 2: (a) plotting the error of
mis-matching the target with respect to r in a finer
interval, (b) plotting the error of mis-matching
the stress boundary condition, (c) displaying the
LGSM solution of displacement at t = t0, and (d)
displaying the LGSM solution of stress at t = t0.
6 The LGSM for heat conduction equation
6.1 The LGSM
Under a given left-boundary Neumann condition,
a measured temperature T (xm, t) and an initial
condition, usually we may not have an analytical
solution, or its solution is rather complex as the
case in Eq. (90) for the previous example. The
series form solution may expend much computa-
tional time to calculate it. Therefore, as that done
12 Copyright c© 2008 Tech Science Press CMC, vol.8, no.1, pp.1-16, 2008
in a finer interval of r ∈ (0.45,0.55). Then, by
the LGSM we can determine the unknown left-
boundary condition, from which upon comparing
with the exact value obtained from Eq. (101) by
inserting x = 0 we can calculate the mis-matching
error as shown in Fig. 5(b). When both the left-
boundary conditions of T i and Si are known, we
can integrate Eqs. (91)-(93) by using the GPS
with Δx = 1/200 cm towards the right-boundary
at x = . Both the numerical and exact values
are plotted in Fig. 5(c), of which it can be seen
that these two curves are very close, and thus we
plot the numerical error in Fig. 5(d). By compar-
ing Figs. 5(b) and 5(d) the accuracy of boundary
conditions is lost one order from 10−4 reducing
to 10−3. This is due to the numerical integration
from the left-side to the right-side.
For this example we have no closed-form solution
of stress being compared, and thus we assess the
accuracy of our method by testing its matching
with the boundary conditionσ(, t)= 0 in Eq. (7).
We plot the mis-matching of the target in Eq. (16)
with respect to r in Fig. 6(a) in a finer interval of
r ∈ (0,10−5). We plot the mis-matching of stress
boundary condition with respect to t in Fig. 6(b).
The maximum error is smaller than 5×10−4. In
Figs. 6(c) and 6(d) we display the displacement
and stress at t0 = 0.5 with respect to the spatial
coordinate.
Under the same conditions as that used in the
above we use a much smaller xm = 0.01 in the
calculation, of which the results are shown in
Figs. 5(b) and 5(d) by the dashed lines. Rather
significantly, when xm is smaller the present
method can produce more accurate boundary con-
ditions. This result indicates that we can mea-
sure the temperature far away from the unknown
surface boundary condition. In the past works,
for example, Grysa, Cialkowsky and Kaminski
(1981), in order to obtain a more accurate es-
timated result, the measurement location must
be located near the position of unknown surface
boundary condition.
6.3 Example 4
In order to compare our numerical results with
that obtained by Grysa, Cialkowsky and Kamin-
0.45 0.46 0.47 0.48 0.49 0.50 0.51 0.52 0.53 0.54 0.55
r
0E+0
2E-3
4E-3
M
is
-m
at
ch
in
g 
of
 t
ar
ge
t
1E-10
1E-9
1E-8
1E-7
1E-6
1E-5
1E-4
1E-3
M
is
-m
at
ch
in
g 
le
ft
-b
ou
n
d
ar
y
co
n
d
it
io
n
 o
f 
te
m
p
er
at
u
re
0.0 0.2 0.4 0.6 0.8 1.0
t
1E-6
1E-5
1E-4
1E-3
1E-2
M
is
-m
at
ch
in
g 
ri
gh
t-
b
ou
n
d
ar
y
co
n
d
it
io
n
 o
f 
te
m
p
er
at
u
re
0.0 0.2 0.4 0.6 0.8 1.0
t
0.4
0.6
0.8
R
ig
h
t-
b
ou
n
d
ar
y
 v
al
u
e 
of
 t
em
p
er
at
u
re
(a)
(b)
(c)
(d)
LGSM
Exact
x
m
=0.1
x
m
=0.01
x
m
=0.1
x
m
=0.01
Figure 5: For Example 3: (a) plotting the er-
ror of mis-matching the target with respect to
r in a finer interval, (b) plotting the errors of
mis-matching the left-boundary condition of tem-
perature for different measurement locations, (c)
displaying the LGSM and exact right-boundary
temperature, and (d) plotting the errors of mis-
matching the right-boundary condition of temper-
ature for different measurement locations.
ski (1981), and Chen, Wu and Hsiao (2004), let
us consider a known surface temperature given by
F = 1. Then the corresponding exactly measured
temperature at xm can be obtained by inserting
x = xm into the following equation:
T (x, t) =
∞
∑
j=0
4(−1) j
(2 j+1)π
[
1−exp
(−α(2 j+1)2π2t
42
)]
cos
(2 j+1)πx
2
. (103)
In Table 1 we compare our numerical results at
14 Copyright c© 2008 Tech Science Press CMC, vol.8, no.1, pp.1-16, 2008
equation:
T (ξ , t∗) =
∞
∑
j=0
(2 j+1)π(−1) j
{
1
a2j +1
[(1−a j)exp(−a jt∗)
+(1+a j) sint∗− (1−a j)cos t∗]+ t
∗
a j
− 1
a2j
+
1
a j
exp(−a jt∗)
}
cos
(2 j+1)πξ
2
, (106)
where
a j :=
(2 j+1)2π2
4
. (107)
We calculate this example by the LGSM in Sec-
tion 6.1 with ξm = 0.001 very near the left-
boundary. As shown in Fig. 7(a) the recoverning
curve of the unknown boundary function is coin-
cident with the exact one given in Eq. (104) in the
interval of 0 < t∗ < 13. Therefore, we plot the
numerical error in Fig. 7(b), from which it can be
seen that the error is in the order of 10−3. Even for
the case with a large noise s = 0.02, the numerical
solution is also acceptable as shown in Fig. 7(a)
by the dashed-dotted line.
7 Concluding remarks
The inverse thermal stress problems are formu-
lated with a semi-discretization version from the
use of temporal finite difference. In order to eval-
uate the missing boundary conditions for the un-
known surface boundary values problems of the
ITSP, we have employed the Lie-group shoot-
ing method towards the spatial direction to de-
rive the algebraic equations. Hence, we can solve
them through a minimum discrepancy solution in
a compact space of r ∈ (0,1). Several numeri-
cal examples of the ITSP were examined to ev-
idence that the new algorithm has a fast conver-
gence speed on the solution of r in a pre-selected
finer range than (0,1) by using a minimum norm
to fit the target equations, which usually requires
only a few number of iterations to select the best r.
The new method is robust against the noise distur-
bance. Through this study, it can be seen that the
new Lie-group shooting method is accurate, ef-
fective and stable. Its numerical implementation
0 4 8 12 16
Dimensionless time
0
5
10
15
R
ig
h
t-
b
ou
n
d
ar
y
 t
em
p
er
at
u
re
0E+0
1E-3
2E-3
3E-3
4E-3
5E-3
N
u
m
er
ic
al
 e
rr
or
(a)
(b)
Exact
LGSM with s=0
LGSM with s=0.02
Figure 7: For Example 5: (a) comparing the
LGSM and exact right-boundary condition of
temperature, and (b) plotting the error of mis-
matching the right-boundary condition of temper-
ature.
is very simple and the computational speed is very
fast. The numerical behavior of LGSM is very un-
like that of the conventional numerical methods.
It is found that the numerical errors of LGSM are
greatly reduced when the measurement locations
are more near to the left-boundary. This property
is very important, when in a practical use we are
usually required to mount a thermocouple as far
away from the surface of unknown boundary con-
dition as possible in order to avoid destroying the
engineering structure.
Acknowledgement: Taiwan’s National Sci-
ence Council project NSC-96-2221-E-019-027-
MY3 granted to the author is highly appreciated.
References
Al-Huniti, N. S.; Al-Nimr, M. A.; Naji, M.
(2001): Dynamic response of a rod due to a mov-
ing heat source under the hyperbolic heat conduc-
tion model. J. Sound Vib., vol. 242, pp. 629-640.
16 Copyright c© 2008 Tech Science Press CMC, vol.8, no.1, pp.1-16, 2008
differential equation subject to extra final mea-
surement data. Numer. Meth. Partial Diff. Eq.,
vol. 23, pp. 1083-1109.
Liu, C.-S. (2008a): An LGSM to identify non-
homogeneous heat conductivity functions by an
extra measurement of temperature. Int. J. Heat
Mass Transfer, vol. 51, pp. 2603-2613.
Liu, C.-S. (2008b): An LGEM to identify time-
dependent heat conductivity function by an ex-
tra measurement of temperature gradient. CMC:
Computers, Materials & Continua, in press.
Liu, C.-S. (2008c): Solving an inverse Sturm-
Liouville problem by a Lie-group method.
Boundary Value Problems, vol. 2008, Article ID
749865.
Liu, C.-S.; Chang, J. R. (2008): The Lie-
group shooting method for multiple-solutions
of Falkner-Skan equation under suction-injection
conditions. Int. J. Non-Linear Mech., in press.
Liu, C.-S.; Chang, C. W.; Chang, J. R. (2006a):
Past cone dynamics and backward group preserv-
ing schemes for backward heat conduction prob-
lems. CMES: Computer Modeling in Engineering
& Sciences, vol. 12, pp. 67-81.
Liu, C.-S.; Chang, C. W.; Chang, J. R. (2006b):
The Lie-group shooting method for steady-state
Burgers equation with high Reynolds number. J.
Hydrodynamics, vol. 18, Issue 3, Supplement 1,
pp. 367-372.
Liu, C.-S.; Liu, L. W.; Hong, H. K. (2007):
Highly accurate computation of spatial-dependent
heat conductivity and heat capacity in inverse
thermal problem. CMES: Computer Modeling in
Engineering & Sciences, vol. 17, pp. 1-18.
Miyazaki, N.; Tamura, T.; Yamamoto, K.
(2000): Cracking of GSO Single Crystal Induced
by Thermal Stress. CMES: Computer Modeling
in Engineering & Sciences, vol. 1, pp. 99-106.
In the study of optimal control theory one often encounters the two-point boundary
value problems (TPBVPs), which pose certain difficulty in the computation of control force
in the nonlinear optimal control systems, and they are usually solved through iteration
of the corresponding linearization TPBVPs. A couple of methods exist for solving the
TPBVPs, to name a few, finite element method, finite difference method, collocation method,
simple shooting method, and series solution method, etc. In the calculations of BVPs, the
simplest one of initial value techniques known as a simple shooting method (SSM) was
already analyzed in detail by many textbooks, like as, Kubicek and Hlavacek [12], Keller
[10], and Ascher et al. [1].
The SSM is a useful and easy-to-implement method. However, it can also have the
drawbacks of instability and inaccuracy as shown by the following example. These defects
are alleviated by more complex initial value methods, such as the multiple shooting, the
stabilized march, the Riccati method [1], and the modified simple shooting method [7].
A simple example that can be used to demonstrate the failure of conventional shooting
method is
u′′(x) = u′(x) + 20u(x), (1)
u(0) = 1, u(10) = 1. (2)
Let us explain how the shooting method together with the Newton iteration method work
for the above example. We may consider a parameter s as an unknown initial value for u′(0),
such that one has
u(x, s) =
5− s
9
e−4x +
4 + s
9
e5x (3)
as the solution of Eq. (1) with u(0) = 1 and u′(0) = s. The Newton iteration method is then
applied to solve the following equation:
F (s) = u(10, s)− 1 = 5− s
9
e−40 +
4 + s
9
e50 − 1 = 0, (4)
with a suitable initial guess of s. The exact solution of the above equation is
s = −4 + 9e
−50 − e−90
1− e−90 > −4. (5)
In the numerical solution we usually do not have an infinite precision. For example we may
have an accuracy in the tenth decimal digits, and we can solve the result of s in the range
−4 ≤ s ≤ −4 + 10−9. However, u(10, s) has a drastical change in the above range with
u(10,−4) = e−40 ≈ 4.25× 10−18, u(10,−4 + 10−9) ≈ 5.76× 1011. (6)
From this it can be seen that a very little change of s induces a huge variation of u at the
end point x = 10. For this example we cannot hope that the conventional shooting method
can calculate this boundary value problem very well. Kress [11] has demonstrated that such
kind boundary value problem is highly ill-posed. Wazwaz [27], and Attili and Syam [2]
have employed the Adomain decomposition method to solve a series of initia-value problems
involved in the second-order BVPs. Ben Zitoun and Cherruault [3] have developed a series
solution of the nonlinear BVPs by using the technique based on the combination of the Faa
2
a fast and accurate method for solving BVPs as easy as possible, even the BVPs may exhibit
multiple solutions. The approach of the nonlinear BVPs is based on the group preserving
scheme (GPS) developed previously by Liu [14] for solving the IVP of ODEs. Liu [15, 16, 17]
has extended the technique of GPS to solve the BVPs, and the numerical results revealed
that the Lie-group is a rather promising method to effectively calculate the second-order
BVPs. In the construction of the Lie group method for the calculations of BVPs, Liu
[15] has introduced the idea of one-step GPS by utilizing the closure property of the Lie
group, and hence, the new shooting method has been named the Lie-group shooting method
(LGSM). The LGSM is also shown effective to the second-order general BVPs [16], the
singularly perturbed BVPs [17], the Sturm-Liouville eigenvalue problems [20], as well as the
generalized Sturm-Liouville problems [22].
Because the Lie-group method possesses certain advantages than other numerical meth-
ods due to its Lie-group structure, the LGSM is shown to be a powerful technique to solve
the second-order BVPs. However, the methodology of LGSM is not yet applied to solve the
multi-dimensional nonlinear BVPs. It thus deserves to develop an effective, accurate and
stable numerical method for the multi-dimensional nonlinear BVPs. This paper is organized
as follows. In Section 2 we give a brief sketch of the group preserving scheme for ODEs
[14], and explain the construction of a one-step GPS by using the closure property of the
Lie group [18, 24], and combine it with the generalized mid-point rule to construct a single-
parameter Lie-group elements in terms of the weighting factor r. In Section 3 we derive a
Lie-group shooting method to solve multi-dimensional nonlinear BVPs, where we can search
the missing initial conditions by solving the derived nonlinear algebraic equations in terms
of r in a space of r ∈ [0, 1]. In Section 4 we use some numerical examples to demonstrate the
efficiency of the new method for the multi-dimensional nonlinear BVPs. Finally, we draw
some conclusions in Section 5.
2. One-step group-preserving scheme
2.1. The group-preserving scheme
Let us write Eqs. (12) and (13) in a single vector form:
y˙ = f(t,y), (16)
where
y :=
[
y1
y2
]
, f :=
[
f1
f2
]
. (17)
Liu [14], by defining
X :=
[
y
‖y‖
]
, A :=
[
0n×n
f(t,y)
‖y‖
fT(t,y)
‖y‖ 0
]
, (18)
has embedded Eq. (16) into an augmented differential equations system:
X˙ = AX, (19)
4
where
yˆ = ry0 + (1− r)yf , (30)
fˆ = f(tˆ, yˆ), (31)
a = cosh
(
‖fˆ‖
‖yˆ‖
)
, (32)
b = sinh
(
‖fˆ‖
‖yˆ‖
)
. (33)
Here, we use the initial y0 and the final yf through a suitable weighting factor r to calculate
G, where r ∈ [0, 1] is a parameter and tˆ = r.
The approach of Eq. (29) can be alternatively realized by using the Lie-group differential
equation:
G˙ = A(t,y)G. (34)
Integrating the above equation and using the mean-value theorem we can obtain
G = exp
[∫ 1
0
A(t,y)dt
]
= exp[A(tˆ, yˆ)]. (35)
Inserting Eq. (19) for A and calculating the exponential we can derive Eq. (29) again.
The above method has applied a generalized mid-point rule or the mean value theorem
to the calculations of G, and the resultant is a single-parameter Lie-group element, denoted
by G(r).
2.3. A Lie-group mapping between two points on the cone
Let us define a new vector
F :=
fˆ
‖yˆ‖ , (36)
such that Eqs. (29), (32) and (33) can be expressed as
G =

 In + a−1‖F‖2FFT bF‖F‖
bFT
‖F‖ a

 , (37)
a = cosh(‖F‖), (38)
b = sinh(‖F‖). (39)
From Eqs. (28) and (37) it follows that
yf = y0 + ηF, (40)
‖yf‖ = a‖y0‖+ bF · y
0
‖F‖ , (41)
where
η :=
(a− 1)F · y0 + b‖y0‖‖F‖
‖F‖2 . (42)
6
and then from Eqs. (50) and (48) we obtain
η =
‖yf − y0‖
lnZ
. (55)
Therefore, between any two points (y0, ‖y0‖) and (yf , ‖yf‖) on the cone, there exists a
Lie-group element G ∈ SOo(n, 1) mapping (y0, ‖y0‖) onto (yf , ‖yf‖), which is given by[
yf
‖yf‖
]
= G
[
y0
‖y0‖
]
, (56)
where G is uniquely determined by y0 and yf through the following equations:
G(y0,yf ) =

 In + a−1‖F‖2FFT bF‖F‖
bFT
‖F‖ a

 , (57)
a = cosh(‖F‖), (58)
b = sinh(‖F‖), (59)
F =
1
η
(yf − y0), (60)
in which η is calculated by Eq. (55).
It should be stressed taht the above G is different from the one in Eq. (29). In order to
feature its dependence only on y0 and yf , we write it to be G(y0,yf ). However, these two
Lie-group elements G(r) and G(y0,yf ) are both indispensable in our development of the
Lie-group shooting method for the multi-dimensional nonlinear BVPs.
3. The Lie-group shooting method
A combination of Eqs. (60) and (36) leads to
yf = y0 + η
fˆ
‖yˆ‖ , (61)
or in a more symmetric form by Eq. (55),
yf − y0
‖yf − y0‖ =
tf
lnZ
fˆ
‖yˆ‖ , (62)
where tf = 1 characterizes the final physical time of the present study, and lnZ characterizes
the geometrical time of the system we consider. Different system may have different y0 and
yf , and hence, different lnZ. The above equation is the major result obtained from the
Lie-group theory applied to the multi-dimensional nonlinear BVPs.
From Eqs. (12)-(15) it follows that
y˙1 = f1(t,y1,y2), (63)
y˙2 = f2(t,y1,y2), (64)
y1(0) = y
0
1, y1(1) = y
f
1 , (65)
y2(0) = y
0
2, y2(1) = y
f
2 , (66)
8
4. Numerical examples
In order to assess the performance of the newly developed method of LGSM let us inves-
tigate the following examples.
4.1. Example 1
For the problem in Eqs. (1) and (2) we consider a disturbance of u by y = u + ε, such
that we have
y′′(x) = y′ + 20y(x)− 20ε, (75)
y(0) = 1 + ε, y(10) = 1 + ε. (76)
Then we change the variable from x to t by t = x/10, and we have
y¨(t) = 10y˙(t) + 2000[y(t)− ε], (77)
y(0) = 1 + ε, y(1) = 1 + ε. (78)
Then we apply the Lie-group shooting method, especially that in the paper by Liu [15], which
was found the missing initial condition in a closed-form formula in terms of r, in the above
equation to obtain the numerical solution which is then compared with the exact solution:
u(x) =
1
e50 − e−40 [(e
50 − 1)e−4x + (1− e−40)e5x]. (79)
The disturbance is taken to be ε = −5.3 × 10−19, which is used to avoid the zero values of
both u and u′ in most portion in the range of x ∈ [0, 10] as shown in Fig. 1. It can be seen
that our numerical solution is close to the exact solution.
4.2. Example 2
The following example is obtained from Miele and Wang [25], and Chen and Liu [5, 6]:
y˙1 = y
2
1 + y3 + 1, (80)
y˙2 = y1y2 + 2, (81)
y˙3 = 0.5y1 + y2 + 3, (82)
subject to
y1(0) + 2y2(0)− 2y3(0)− 1 = 0, (83)
3y2(0)− 2y3(0) + 1 = 0, (84)
[y1(1)− 1]2 − 2y2(1) = 0. (85)
We attempt to search a missing initial condition y1(0) = y
0
1, which makes y2(0) = y
0
2 =
y01 − 2 and y3(0) = y03 = (3y01 − 5)/2 available, such that in the numerical integrations of
Eqs. (80)-(82) y1(1) = y
f
1 and y2(1) = y
f
2 can match the exact final condition of (y
f
1 − 1)2 −
2yf2 = 0.
10
where yf1 , y
0
3 and y
f
3 are unknown constants.
Inserting
y0 =

 y01y02
y03

 , yf =

 y
f
1
yf2
yf3

 , (96)
into Eq. (43) it follows that
F :=
1
η

 y
f
1 − y01
yf2 − y02
yf3 − y03

 . (97)
Inserting Eq. (96) into Eqs. (55), (54) and (47) we obtain
η =
√
(yf1 − y01)2 + (yf2 − y02)2 + (yf3 − y03)2
lnZ
, (98)
Z = (cos θ − 1)
√
(y01)
2 + (y02)
2 + (y03)
2/[cos θ
√
(y01)
2 + (y02)
2 + (y03)
2
+
√
(yf1 − y01)2 + (yf2 − y02)2 + (yf3 − y03)2 −
√
(yf1 )
2 + (yf2 )
2 + (yf3 )
2], (99)
cos θ :=
(yf1 − y01)y01 + (yf2 − y02)y02 + (yf3 − y03)y03√
(yf1 − y01)2 + (yf2 − y02)2 + (yf3 − y03)2
√
(y01)
2 + (y02)
2 + (y03)
2
. (100)
Comparing Eq. (97) with Eq. (36) and noting that
yˆ :=

 yˆ1yˆ2
yˆ3

 =

 ry01 + (1− r)y
f
1
ry02 + (1− r)yf2
ry03 + (1− r)yf3

 (101)
by Eqs. (30) and (96), we obtain
yf1 = y
0
1 + η
η∞yˆ2
‖yˆ‖ , (102)
yf2 = y
0
2 + η
η∞yˆ3
‖yˆ‖ , (103)
yf3 = y
0
3 − η
η∞
‖yˆ‖ [yˆ1yˆ3 + β(1− yˆ
2
2)], (104)
where
‖yˆ‖ =
√
yˆ21 + yˆ
2
2 + yˆ
2
3
=
√
(ry01 + (1− r)yf1 )2 + (ry02 + (1− r)yf2 )2 + (ry03 + (1− r)yf3 )2. (105)
We can solve Eqs. (103) and (104) by using yˆ3 = ry
0
3 + (1− r)yf3 , such that
y03 =
‖yˆ‖
η∞η
+ (1− r)ηη∞‖yˆ‖ [yˆ1yˆ3 + β(1− yˆ
2
2)], (106)
yf3 =
‖yˆ‖
η∞η
− rηη∞‖yˆ‖ [yˆ1yˆ3 + β(1− yˆ
2
2)]. (107)
12
Applying the method in Section 3 to this example we show the numerical results in Fig. 4.
Starting from an initial guess with (yf1 , y
f
2 , y
0
3, y
0
4) = (2, 0.5, 1, 3), we let r run in the range of
r ∈ [0, 1], and for each r we can integrate Eq. (110). The correct r is located at the minimal
point obtained from
min
r∈[0,1]
√
(yf3 − 3)2 + (yf4 − 0.5)2 (112)
in the curve of the error of target with respect to r as shown in Fig. 4(i). yf3 and y
f
4 are
numerical integration values of y3 and y4 at the end point t = 1. When the missing initial
conditions are available, with all other given initial conditions we can use the RK4 method
to integrate Eq. (110). The numerical results are compared with the above exact solutions as
shown in Figs. 4(a)-4(d). They are almost identical. The numerical errors are then plotted
in Figs. 4(e)-4(h), which can be seen that the new method is very accurate. The number
of iterations under an error tolerance of ǫ1 = 10
−8 to find the solutions of missing initial
conditions are about 15 for each r. Therefore, we can quickly pick up the correct r which
provides a minimal error to fit the targets in Eq. (111).
4.5. Example 5
We consider the following example in the interval of 0 ≤ x ≤ xf ,

y′1
y′2
y′3
y′4

 =


0 0 1 0
0 0 0 1
0 1 0 0
1 0 0 0




y1
y2
y3
y4

 , (113)
subject to
y1(0) = 1, y2(0) = 1, y1(xf ) = 2, y2(xf ) = 2. (114)
They have closed-form solutions
y1(x) = y2(x) = C1e
x + C2e
−x,
y3(x) = y4(x) = C1e
x − C2e−x,
where
C1 =
2− e−xf
exf − e−xf , C2 =
exf − 2
exf − e−xf .
We consider a variable transformation t = x/xf , such that we have

y˙1
y˙2
y˙3
y˙4

 =


xfy3
xfy4
xfy2
xfy1

 , (115)
which is subjecting to
y1(0) = 1, y2(0) = 1, y1(1) = 2, y2(1) = 2. (116)
14
Shampine et al. [26] have converted the above problem into a four-dimensional problem
in the interval of 0 ≤ t ≤ 1:
y˙1 =
1
m
(y2 − 1), (128)
y˙2 =
1
ρ
[y1y2 − t], (129)
y˙3 =
1
m
(λ− 1)(y4 − 1), (130)
y˙4 =
1
ρ
(λ− 1)(y3y4 − 1), (131)
with the unseparated boundary conditions:
y1(0) = 0, y4(1) = 1, y1(1) = y3(0), y2(1) = y4(0). (132)
Applying Eqs. (68) and (69) to the above equations we obtain
yf1 = y
0
1 + η
yˆ2 − 1
m‖yˆ‖ , (133)
yf2 = y
0
2 + η
yˆ1yˆ2 − r
ρ‖yˆ‖ , (134)
yf3 = y
0
3 + η
(λ− 1)(yˆ4 − 1)
m‖yˆ‖ , (135)
yf4 = y
0
4 + η
(λ− 1)(yˆ3yˆ4 − 1)
ρ‖yˆ‖ . (136)
The above four equations are combined to Eq. (132), solving out
y03 = η
yˆ2 − 1
m‖yˆ‖ , (137)
y04 = 1− η
(λ− 1)(yˆ3yˆ4 − 1)
ρ‖yˆ‖ , (138)
y02 = 1− η
(λ− 1)(yˆ3yˆ4 − 1)
ρ‖yˆ‖ − η
yˆ1yˆ2 − r
ρ‖yˆ‖ , (139)
yf3 = η
yˆ2 − 1
m‖yˆ‖ + η
(λ− 1)(yˆ4 − 1)
m‖yˆ‖ . (140)
Repeating the iterative process until the solutions are converged according to the criterion
in Eq. (73). We can pick up r by the following equation:
min
r∈[0,1]
(|yf4 − 1|+ |yf1 − y03|+ |yf2 − y04|). (141)
We use the Lie-group shooting method to solve this BVP for m = 0.1, λ = 2 and k = 2.
Starting from an initial guess with (y02, y
0
3, y
f
3 , y
0
4) = (1.5, 0.5, 1, 0.5), we let r run in the range
of r ∈ [0, 1], where the correct r is located at the minimal point in the curve of the error
of target with respect to r as shown in Fig. 6(a). The number of iterations under an error
16
method are plotted in Fig. 7(b), wherein we can see that the final target yf3 − yf5 is well
matched. For the comparison purpose we also plot the curves of y3 and y5 with respect to t
calculated by a simple shooting method as shown by the dashed lines in Fig. 7(b); however,
these curves are almost coincident.
4.8. Example 8
Ascher et al. [1] have described a flow in a long vertical channel with fluid injection
through one side with the following boundary value problem:
f ′′′ −R(f ′2 − ff ′′) +RA = 0, (154)
h′′ +Rfh′ + 1 = 0, (155)
θ′′ + Pfθ′ = 0, (156)
where R is the Reynolds number and P = 0.7R. Because A is an unknown parameter, this
system is subjected to eight boundary conditions:
f(0) = f ′(0) = 0, f(1) = 0.5, f ′(1) = 1, (157)
h(0) = h(1) = 0, (158)
θ(0) = 0, θ(1) = 1. (159)
In terms of y1 = f , y2 = f
′, y3 = f ′′, y4 = h, y5 = h′, y6 = θ and y7 = θ′, we write this
problem as a system of seven first order differential equations:
y′1 = y2, (160)
y′2 = y3, (161)
y′3 = R(y
2
2 − y1y3)−RA, (162)
y′4 = y5, (163)
y′5 = −Ry1y5 − 1, (164)
y′6 = y7, (165)
y′7 = −Py1y7, (166)
under the boundary conditions:
y1(0) = y2(0) = 0, y1(1) = 0.5, y2(1) = 1, (167)
y4(0) = y4(1) = 0, (168)
y6(0) = 0, y6(1) = 1. (169)
It is noted that the first three equations (160)-(162) together with the boundary con-
ditions in Eq. (167) are separated from the rest and thus can be solved separately. If this
is done then Eqs. (163) and (164) and Eqs. (165) and (166) are two separated standard
problems which can be also solved separately. The original problem is thus broken into three
subproblems.
18
where yˆ1 = (1− r)/2 was used.
For each given r we run the above iterative process until y07 and y
f
7 are convergent, where
we pick up the best r that minimizes the error of |yf6 −1|. In Fig. 8 we plot the time histories
of yi, i = 1, . . . , 7, where under the parameter value of R = 10 we have identified the value of
A = 0.15 and thus the missing initial value of the first three equations with y03 = 1.312933.
It can be seen that all the calculated results can match the final conditions y1(1) = 0.5,
y2(1) = 1, y4(1) = 0 and y6(1) = 1 very well.
5. Conclusions
In this paper we have fully utilized the Minkowski space formulation of the multi-
dimensional nonlinear BVPs to identify two Lie-group elements G(r) = G(y0,yf ), and
derived nonlinear algebraic equations to solve the unknowns of the variables at two end
points of a fixed time interval. Several numerical examples were examined to ensure that
the Lie-group shooting method can calculate very well the solutions of multiple-dimensional
and multiple-targets nonlinear BVPs, which may have multiple-solutions. The numerical so-
lutions could match the specified boundary conditions nearly exactly. Therefore, we would
have an useful, easy-to-handle, accurate and stable Lie-group shooting method to treat the
multi-dimensional nonlinear BVPs appeared in engineering and sciences.
Acknowledgements
Taiwan’s National Science Council project NSC-99-2221-E-002-074-MY3 granted to the
author is highly appreciated.
References
[1] U. Ascher, R. Mattheij, R., Russell, Numerical Solution of Boundary Value Problems
for Ordinary Differential Equations, SIAM, Philadelphia, PA (1995).
[2] B.S. Attili, M.I. Syam, Efficient shooting method for solving two point boundary value
problems, Chaos, Solit. Fracta. 35 (2008) 895-903.
[3] F. Ben Zitoun, Y. Cherruault, A new algorithm for solving nonlinear boundary value
problems, Kybernetes 38 (2009) 681-697.
[4] T. Cebeci, H. Keller, Shooting and parallel shooting methods for solving the Falkner-
Skan boundary layer equations, J. Comp. Phys. 7 (1971) 289-300.
[5] C.L. Chen, Y.C. Liu, Solution of two-point boundary-value problems using the differ-
ential transformation method, J. Optim. Theo. Appl. 99 (1998) 23-35.
[6] C.L. Chen, Y.C. Liu, Differential transformation technique for steady nonlinear heat
conduction problems, Appl. Math. Comp. 95 (1998) 155-164.
20
[24] C.-S. Liu, C.W. Chang, J.R. Chang, Past cone dynamics and backward group preserving
schemes for backward heat conduction problems, CMES: Comput. Model. Eng. Sci. 12
(2006) 67-81.
[25] A. Miele, T. Wang, Parallel computation of two-point boundary-value problems via
particular solutions, J. Optim. Theo. Appl. 79 (1983) 5-29.
[26] L.F. Shampine, J. Kierzenka, M.W. Reichelt, Solving boundary value problems for ordi-
nary differential equations in MATLAB with bvp4c. ftp://ftp.mathworks.com/pub/doc
/papers/bvp/tutorial.pdf (2000).
[27] A.M. Wazwaz, Approximate solutions to boundary value problems of higher order by
the modified decomposition method, Comput. Math. Appl. 40 (2000) 679-691.
22
 
 
 
 
 
0 2 4 6 8
x
10
-0.1
0.0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
1.0
u
Exact
Numerical
 
 
Fig. 1. For Example 1 comparing exact and numerical solutions. 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
(a)
(b)
0.5 0.6 0.7 0
r
.8
0.0
0.1
0.2
0.3
M
is
m
at
ch
in
g 
er
ro
r o
f 
ta
rg
et
a
b
b
a
(c)
0 1 2 3 4 5 6 7 8 9 1
f
0
-0.2
0.0
0.2
0.4
f'
'
-0.2
0.0
0.2
0.4
0.6
0.8
1.0
f'
a b
 
Fig. 3. For Example 3: (a) plotting the error of mis-matching to target with respect to 
r ,  (b) displaying two different solutions of  f ',  and (c) displaying two different 
solutions of  f ''. 
 
 
(b) (f )
(c) (g)
(d) (h)
(a) (e)
(i)
0.0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.
r
0
0.0
0.1
0.2
0.3
0.4
Er
ro
r o
f 
Ta
rg
et
0.0 0.2 0.4 0.6 0.8 1.0
1.0
1.2
1.4
1.6
1.8
2.0
y 1
Numerical
Exact
0.0 0.2 0.4 0.6 0.8 1.0
0E+000
1E-007
2E-007
3E-007
4E-007
5E-007
Er
ro
r o
f 
y 1
0.0 0.2 0.4 0.6 0.8 1.0
x
0.3
0.8
1.3
1.8
y 3
0.0 0.2 0.4 0.6 0.8 1.0
x
3E-007
4E-007
5E-007
6E-007
Er
ro
r o
f 
y 3
0 1 2 3 4 5
0.0
0.5
1.0
1.5
2.0
y 1
0 1 2 3 4 5
0E+000
4E-004
8E-004
1E-003
Er
ro
r o
f 
y 1
0 1 2 3 4 5
x
-1.0
-0.5
0.0
0.5
1.0
1.5
2.0
y 3
0 1 2 3 4 5
x
0E+000
4E-004
8E-004
1E-003
Er
ro
r o
f 
y 3
 
Fig. 5. For Example 5 plotting the numerical solutions in (a)-(d), with (e)-(h) the 
corresponding numerical errors, and (i) displaying the error of mis-matching to target 
with respect to r. 
 
 
 
 
(a)
(b)
0.0 0.2 0.4 0.6 0.8 1
t
.0
0.80
0.82
0.84
0.86
0.88
0.90
0.92
0.94
0.96
0.98
1.00
y 3
, y
5
Lie-group shooting method
Simple shooting method
0.0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.
r
0
0.0
0.1
0.2
0.3
0.4
0.5
Er
ro
r o
f 
Ta
rg
et
y3
y5
 
 
Fig. 7. For Example 7: (a) plotting the error of mis-matching to target with respect to 
r, and (b) displaying the numerical solutions of y3 and y5. 
國科會補助出席國際會議報告 
                                                   99   年   4    月   12   日 
報 告 人 姓 名 劉進賢 服務機關名稱（請註
明系所）及職稱 
國立臺灣大學土木系特聘教授
會議期間及地點 自 2010 年 3 月 27 日至
2010年4月4日(美國拉
斯維加斯) 
本部核定補助文號      年      月        日 
台（   ）文二字第         號
會 議 名 稱 
 
（ 中文 ）計算及實驗工程與科學國際會議 
（ 英文 ）ICCES2010 International Conference on Computational & 
Experimental Engineering and Sciences 
發 表 論 文 題 目 （ 中文 ）以擬時間積分法解反向對流擴散方程 
（ 英文 ）A fictitious time integration method for backward 
advection-dispersion equation 
報告內容應包括下列各項： 
一、參加會議經過 
二、與會心得 
三、建議 
四、攜回資料名稱及內容 
五、其它 
務請配合 
＊報告內容請以電腦繕打，並儲存成 word 檔，檔名請使用姓名。 
 
 
 
 
 
 
 
 
 
Method）、流形指數收斂演算法（Manifold-based Exponentially Convergent 
Algorithm）等。新開發的這些方法都有以下幾個共同的特點：簡單、計算迅速、
結果準確、突破傳統思維等，因此相當具有發展潛力。在本人與 Prof. S.N. 
Atluri (University of California, Irvine)的積極鼓勵與安排下，於今年
ICCES＇10 會議中安排兩個場次的議程，共有十一篇論文的公開發表，也是呈現
臺灣大學與海洋大學計算與模擬的部分研究成果。在這次發表的論文中，除了
海洋大學計算與模擬中心同仁的研究成果之外，成功大學水利及海洋工程學系
許泰文教授將擬時間積分法應用在求解沿岸波浪與海床的互制問題，將部分結
果在會議上發表。而明智科技大學機械工程系章哲寰教授則是將流形指數收斂
演算法應用在非線性熱傳問題，獲得相當好的結果之後，也在會議中發表。由
此可見臺灣大學與海洋大學計算與模擬中心所研發的方法，已經獲得部分研究
學者的肯定以及使用。 
 
這次與會人數有三百多人，討論之熱烈，可想而知。除了會議進行時的討論外，
連中場Coffee Break的時間，也可看到許許多多學者仍不斷針對他們的疑問與報
告者進行討論，討論之熱烈，是我參加國內研討會時，從未見過的景象，值得
國內學者省思。在會議結束的晚宴中，本人由於傑出的研究表現，獲頒 The ICCES 
W.-Z. Chien Award，肯定本人的研究成果，也同時讓我們臺灣的研究團隊更受
注目。 
    在會議上，可看到許多學者所提出的計算方法，在各個不同領域上的應用，
無研發成果推廣資料 
其他成果 
(無法以量化表達之成
果如辦理學術活動、獲
得獎項、重要國際合
作、研究成果國際影響
力及其他協助產業技
術發展之具體效益事
項等，請以文字敘述填
列。) 
由於傑出的研究表現，獲頒 ICCES2010 The ICCES W.-Z. Chien Award，肯定
本人的研究成果 
 成果項目 量化 名稱或內容性質簡述 
測驗工具(含質性與量性) 0  
課程/模組 0  
電腦及網路系統或工具 0  
教材 0  
舉辦之活動/競賽 0  
研討會/工作坊 0  
電子報、網站 0  
科 
教 
處 
計 
畫 
加 
填 
項 
目 計畫成果推廣之參與（閱聽）人數 0  
